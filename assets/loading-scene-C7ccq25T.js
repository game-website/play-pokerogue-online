var g7=Object.defineProperty;var o=(E,A)=>g7(E,"name",{value:A,configurable:!0});import{g as a,i as u,B as Cf,I as m7,M as t,f as Ot,a as Ds,r as uf,b as X,c as UE,d as Pt,e as vc,h as eE,t as aa,N as je,p as _O,j as dE,k as He,l as Vc,m as Pe,n as EO,o as sO,q as ZR,s as Ol,u as $R,P as TE,v as YA,w as bE,x as v0,y as bl,z as Uf,A as p7,C as Dr,D as Df,R as K7,E as xc,F as F7,G as Y7,H as ji,J as ek,K as JI,L as GO,O as mC,Q as bc,S as Yr,T as Mf,U as pC,V as ec,W as gi,X as W7,Y as y7,Z as tk,_ as w7,$ as v7,a0 as V7,a1 as Ak,a2 as x7,a3 as b7,a4 as k7,a5 as Z7,a6 as X7,a7 as Qt,a8 as kc,a9 as Q7,aa as $7,ab as J7,ac as tc,ad as z7,ae as Ek,af as Nl,ag as j7,ah as q7,ai as eZ,aj as Vb,ak as tZ,al as AZ,am as EZ}from"./index-C6ZWo7Ok.js";const KC=Object.freeze(Object.defineProperty({__proto__:null,get AddPokeballModifier(){return xM},get AddVoucherModifier(){return bM},get AttackTypeBoosterModifier(){return Bn},get BaseStatModifier(){return HN},get BerryModifier(){return GE},get BoostBugSpawnModifier(){return zN},get BypassSpeedChanceModifier(){return FI},get ConsumableModifier(){return si},get ConsumablePokemonModifier(){return KR},get ConsumablePokemonMoveModifier(){return YN},get ContactHeldItemTransferChanceModifier(){return xI},get CritBoosterModifier(){return ML},get CriticalCatchChanceBoosterModifier(){return $N},get DamageMoneyRewardModifier(){return ii},get DoubleBattleChanceBoosterModifier(){return NL},get EnemyAttackStatusEffectChanceModifier(){return PL},get EnemyDamageBoosterModifier(){return qN},get EnemyDamageReducerModifier(){return el},get EnemyEndureChanceModifier(){return El},get EnemyFusionChanceModifier(){return sl},get EnemyPersistentModifier(){return Yn},get EnemyStatusEffectHealChanceModifier(){return Al},get EnemyTurnHealModifier(){return tl},get EvoTrackerModifier(){return fN},get EvolutionItemModifier(){return qM},get EvolutionStatBoosterModifier(){return kM},get ExpBalanceModifier(){return bN},get ExpBoosterModifier(){return _L},get ExpShareModifier(){return xN},get ExtraModifierModifier(){return ri},get FieldEffectModifier(){return hL},get FlinchChanceModifier(){return KN},get FusePokemonModifier(){return wN},get GigantamaxAccessModifier(){return uL},get HealShopCostModifier(){return Ii},get HealingBoosterModifier(){return wI},get HeldItemTransferModifier(){return jN},get HiddenAbilityRateBoosterModifier(){return gn},get HitHealModifier(){return WI},get IvScannerModifier(){return bI},get LapsingPersistentModifier(){return Ri},get LapsingPokemonHeldItemModifier(){return dN},get LevelIncrementBoosterModifier(){return ni},get LockModifierTiersModifier(){return JN},get MapModifier(){return GN},get MegaEvolutionAccessModifier(){return CL},get Modifier(){return _N},get ModifierBar(){return hN},get MoneyInterestModifier(){return QN},get MoneyMultiplierModifier(){return CO},get MoneyRewardModifier(){return e0},get MultipleParticipantExpBonusModifier(){return vN},get PersistentModifier(){return $A},get PokemonAllMovePpRestoreModifier(){return $M},get PokemonBaseStatFlatModifier(){return gN},get PokemonBaseStatTotalModifier(){return BN},get PokemonExpBoosterModifier(){return VN},get PokemonFormChangeItemModifier(){return GR},get PokemonFriendshipBoosterModifier(){return kN},get PokemonHeldItemModifier(){return Ft},get PokemonHpRestoreModifier(){return ai},get PokemonIncrementingStatModifier(){return pI},get PokemonInstantReviveModifier(){return cL},get PokemonLevelIncrementModifier(){return WN},get PokemonMoveAccuracyBoosterModifier(){return XN},get PokemonMultiHitModifier(){return Ta},get PokemonNatureChangeModifier(){return zM},get PokemonNatureWeightModifier(){return ZN},get PokemonPpRestoreModifier(){return QM},get PokemonPpUpModifier(){return JM},get PokemonStatusHealModifier(){return XM},get PreserveBerryModifier(){return yI},get RememberMoveModifier(){return yN},get ResetNegativeStatStageModifier(){return FN},get ShinyRateBoosterModifier(){return vI},get SpeciesCritBoosterModifier(){return mN},get SpeciesStatBoosterModifier(){return KI},get StatBoosterModifier(){return DL},get SurviveDamageModifier(){return pN},get SwitchEffectTransferModifier(){return ba},get TempCritBoosterModifier(){return PN},get TempExtraModifierModifier(){return Li},get TempStatStageBoosterModifier(){return lL},get TerastallizeAccessModifier(){return UL},get TerrastalizeModifier(){return ZM},get TmModifier(){return jM},get TurnHealModifier(){return YI},get TurnHeldItemTransferModifier(){return VI},get TurnStatusEffectModifier(){return Oi},get modifierSortFunc(){return cN},get overrideHeldItems(){return Xf},get overrideModifiers(){return Zf}},Symbol.toStringTag,{value:"Module"}));var bn=(E=>(E[E.MOVE=0]="MOVE",E[E.LEGENDARY=1]="LEGENDARY",E[E.SHINY=2]="SHINY",E))(bn||{}),i=(E=>(E[E.UNKNOWN=-1]="UNKNOWN",E[E.NORMAL=0]="NORMAL",E[E.FIGHTING=1]="FIGHTING",E[E.FLYING=2]="FLYING",E[E.POISON=3]="POISON",E[E.GROUND=4]="GROUND",E[E.ROCK=5]="ROCK",E[E.BUG=6]="BUG",E[E.GHOST=7]="GHOST",E[E.STEEL=8]="STEEL",E[E.FIRE=9]="FIRE",E[E.WATER=10]="WATER",E[E.GRASS=11]="GRASS",E[E.ELECTRIC=12]="ELECTRIC",E[E.PSYCHIC=13]="PSYCHIC",E[E.ICE=14]="ICE",E[E.DRAGON=15]="DRAGON",E[E.DARK=16]="DARK",E[E.FAIRY=17]="FAIRY",E[E.STELLAR=18]="STELLAR",E))(i||{}),At=(E=>(E[E.GENDERLESS=-1]="GENDERLESS",E[E.MALE=0]="MALE",E[E.FEMALE=1]="FEMALE",E))(At||{});function kI(E){switch(E){case 0:return"♂";case 1:return"♀"}return""}o(kI,"getGenderSymbol");function sn(E,A){switch(E){case 0:return A?"#006090":"#40c8f8";case 1:return A?"#984038":"#f89890"}return"#ffffff"}o(sn,"getGenderColor");var we=(E=>(E[E.POKEBALL=0]="POKEBALL",E[E.GREAT_BALL=1]="GREAT_BALL",E[E.ULTRA_BALL=2]="ULTRA_BALL",E[E.ROGUE_BALL=3]="ROGUE_BALL",E[E.MASTER_BALL=4]="MASTER_BALL",E[E.LUXURY_BALL=5]="LUXURY_BALL",E))(we||{}),Oe=(E=>(E[E.NONE=0]="NONE",E[E.SUNNY=1]="SUNNY",E[E.RAIN=2]="RAIN",E[E.SANDSTORM=3]="SANDSTORM",E[E.HAIL=4]="HAIL",E[E.SNOW=5]="SNOW",E[E.FOG=6]="FOG",E[E.HEAVY_RAIN=7]="HEAVY_RAIN",E[E.HARSH_SUN=8]="HARSH_SUN",E[E.STRONG_WINDS=9]="STRONG_WINDS",E))(Oe||{}),rt=(E=>(E[E.HARDY=0]="HARDY",E[E.LONELY=1]="LONELY",E[E.BRAVE=2]="BRAVE",E[E.ADAMANT=3]="ADAMANT",E[E.NAUGHTY=4]="NAUGHTY",E[E.BOLD=5]="BOLD",E[E.DOCILE=6]="DOCILE",E[E.RELAXED=7]="RELAXED",E[E.IMPISH=8]="IMPISH",E[E.LAX=9]="LAX",E[E.TIMID=10]="TIMID",E[E.HASTY=11]="HASTY",E[E.SERIOUS=12]="SERIOUS",E[E.JOLLY=13]="JOLLY",E[E.NAIVE=14]="NAIVE",E[E.MODEST=15]="MODEST",E[E.MILD=16]="MILD",E[E.QUIET=17]="QUIET",E[E.BASHFUL=18]="BASHFUL",E[E.RASH=19]="RASH",E[E.CALM=20]="CALM",E[E.GENTLE=21]="GENTLE",E[E.SASSY=22]="SASSY",E[E.CAREFUL=23]="CAREFUL",E[E.QUIRKY=24]="QUIRKY",E))(rt||{}),T=(E=>(E[E.TOWN=0]="TOWN",E[E.PLAINS=1]="PLAINS",E[E.GRASS=2]="GRASS",E[E.TALL_GRASS=3]="TALL_GRASS",E[E.METROPOLIS=4]="METROPOLIS",E[E.FOREST=5]="FOREST",E[E.SEA=6]="SEA",E[E.SWAMP=7]="SWAMP",E[E.BEACH=8]="BEACH",E[E.LAKE=9]="LAKE",E[E.SEABED=10]="SEABED",E[E.MOUNTAIN=11]="MOUNTAIN",E[E.BADLANDS=12]="BADLANDS",E[E.CAVE=13]="CAVE",E[E.DESERT=14]="DESERT",E[E.ICE_CAVE=15]="ICE_CAVE",E[E.MEADOW=16]="MEADOW",E[E.POWER_PLANT=17]="POWER_PLANT",E[E.VOLCANO=18]="VOLCANO",E[E.GRAVEYARD=19]="GRAVEYARD",E[E.DOJO=20]="DOJO",E[E.FACTORY=21]="FACTORY",E[E.RUINS=22]="RUINS",E[E.WASTELAND=23]="WASTELAND",E[E.ABYSS=24]="ABYSS",E[E.SPACE=25]="SPACE",E[E.CONSTRUCTION_SITE=26]="CONSTRUCTION_SITE",E[E.JUNGLE=27]="JUNGLE",E[E.FAIRY_CAVE=28]="FAIRY_CAVE",E[E.TEMPLE=29]="TEMPLE",E[E.SLUM=30]="SLUM",E[E.SNOWY_FOREST=31]="SNOWY_FOREST",E[E.ISLAND=40]="ISLAND",E[E.LABORATORY=41]="LABORATORY",E[E.END=50]="END",E))(T||{}),e=(E=>(E[E.BULBASAUR=1]="BULBASAUR",E[E.IVYSAUR=2]="IVYSAUR",E[E.VENUSAUR=3]="VENUSAUR",E[E.CHARMANDER=4]="CHARMANDER",E[E.CHARMELEON=5]="CHARMELEON",E[E.CHARIZARD=6]="CHARIZARD",E[E.SQUIRTLE=7]="SQUIRTLE",E[E.WARTORTLE=8]="WARTORTLE",E[E.BLASTOISE=9]="BLASTOISE",E[E.CATERPIE=10]="CATERPIE",E[E.METAPOD=11]="METAPOD",E[E.BUTTERFREE=12]="BUTTERFREE",E[E.WEEDLE=13]="WEEDLE",E[E.KAKUNA=14]="KAKUNA",E[E.BEEDRILL=15]="BEEDRILL",E[E.PIDGEY=16]="PIDGEY",E[E.PIDGEOTTO=17]="PIDGEOTTO",E[E.PIDGEOT=18]="PIDGEOT",E[E.RATTATA=19]="RATTATA",E[E.RATICATE=20]="RATICATE",E[E.SPEAROW=21]="SPEAROW",E[E.FEAROW=22]="FEAROW",E[E.EKANS=23]="EKANS",E[E.ARBOK=24]="ARBOK",E[E.PIKACHU=25]="PIKACHU",E[E.RAICHU=26]="RAICHU",E[E.SANDSHREW=27]="SANDSHREW",E[E.SANDSLASH=28]="SANDSLASH",E[E.NIDORAN_F=29]="NIDORAN_F",E[E.NIDORINA=30]="NIDORINA",E[E.NIDOQUEEN=31]="NIDOQUEEN",E[E.NIDORAN_M=32]="NIDORAN_M",E[E.NIDORINO=33]="NIDORINO",E[E.NIDOKING=34]="NIDOKING",E[E.CLEFAIRY=35]="CLEFAIRY",E[E.CLEFABLE=36]="CLEFABLE",E[E.VULPIX=37]="VULPIX",E[E.NINETALES=38]="NINETALES",E[E.JIGGLYPUFF=39]="JIGGLYPUFF",E[E.WIGGLYTUFF=40]="WIGGLYTUFF",E[E.ZUBAT=41]="ZUBAT",E[E.GOLBAT=42]="GOLBAT",E[E.ODDISH=43]="ODDISH",E[E.GLOOM=44]="GLOOM",E[E.VILEPLUME=45]="VILEPLUME",E[E.PARAS=46]="PARAS",E[E.PARASECT=47]="PARASECT",E[E.VENONAT=48]="VENONAT",E[E.VENOMOTH=49]="VENOMOTH",E[E.DIGLETT=50]="DIGLETT",E[E.DUGTRIO=51]="DUGTRIO",E[E.MEOWTH=52]="MEOWTH",E[E.PERSIAN=53]="PERSIAN",E[E.PSYDUCK=54]="PSYDUCK",E[E.GOLDUCK=55]="GOLDUCK",E[E.MANKEY=56]="MANKEY",E[E.PRIMEAPE=57]="PRIMEAPE",E[E.GROWLITHE=58]="GROWLITHE",E[E.ARCANINE=59]="ARCANINE",E[E.POLIWAG=60]="POLIWAG",E[E.POLIWHIRL=61]="POLIWHIRL",E[E.POLIWRATH=62]="POLIWRATH",E[E.ABRA=63]="ABRA",E[E.KADABRA=64]="KADABRA",E[E.ALAKAZAM=65]="ALAKAZAM",E[E.MACHOP=66]="MACHOP",E[E.MACHOKE=67]="MACHOKE",E[E.MACHAMP=68]="MACHAMP",E[E.BELLSPROUT=69]="BELLSPROUT",E[E.WEEPINBELL=70]="WEEPINBELL",E[E.VICTREEBEL=71]="VICTREEBEL",E[E.TENTACOOL=72]="TENTACOOL",E[E.TENTACRUEL=73]="TENTACRUEL",E[E.GEODUDE=74]="GEODUDE",E[E.GRAVELER=75]="GRAVELER",E[E.GOLEM=76]="GOLEM",E[E.PONYTA=77]="PONYTA",E[E.RAPIDASH=78]="RAPIDASH",E[E.SLOWPOKE=79]="SLOWPOKE",E[E.SLOWBRO=80]="SLOWBRO",E[E.MAGNEMITE=81]="MAGNEMITE",E[E.MAGNETON=82]="MAGNETON",E[E.FARFETCHD=83]="FARFETCHD",E[E.DODUO=84]="DODUO",E[E.DODRIO=85]="DODRIO",E[E.SEEL=86]="SEEL",E[E.DEWGONG=87]="DEWGONG",E[E.GRIMER=88]="GRIMER",E[E.MUK=89]="MUK",E[E.SHELLDER=90]="SHELLDER",E[E.CLOYSTER=91]="CLOYSTER",E[E.GASTLY=92]="GASTLY",E[E.HAUNTER=93]="HAUNTER",E[E.GENGAR=94]="GENGAR",E[E.ONIX=95]="ONIX",E[E.DROWZEE=96]="DROWZEE",E[E.HYPNO=97]="HYPNO",E[E.KRABBY=98]="KRABBY",E[E.KINGLER=99]="KINGLER",E[E.VOLTORB=100]="VOLTORB",E[E.ELECTRODE=101]="ELECTRODE",E[E.EXEGGCUTE=102]="EXEGGCUTE",E[E.EXEGGUTOR=103]="EXEGGUTOR",E[E.CUBONE=104]="CUBONE",E[E.MAROWAK=105]="MAROWAK",E[E.HITMONLEE=106]="HITMONLEE",E[E.HITMONCHAN=107]="HITMONCHAN",E[E.LICKITUNG=108]="LICKITUNG",E[E.KOFFING=109]="KOFFING",E[E.WEEZING=110]="WEEZING",E[E.RHYHORN=111]="RHYHORN",E[E.RHYDON=112]="RHYDON",E[E.CHANSEY=113]="CHANSEY",E[E.TANGELA=114]="TANGELA",E[E.KANGASKHAN=115]="KANGASKHAN",E[E.HORSEA=116]="HORSEA",E[E.SEADRA=117]="SEADRA",E[E.GOLDEEN=118]="GOLDEEN",E[E.SEAKING=119]="SEAKING",E[E.STARYU=120]="STARYU",E[E.STARMIE=121]="STARMIE",E[E.MR_MIME=122]="MR_MIME",E[E.SCYTHER=123]="SCYTHER",E[E.JYNX=124]="JYNX",E[E.ELECTABUZZ=125]="ELECTABUZZ",E[E.MAGMAR=126]="MAGMAR",E[E.PINSIR=127]="PINSIR",E[E.TAUROS=128]="TAUROS",E[E.MAGIKARP=129]="MAGIKARP",E[E.GYARADOS=130]="GYARADOS",E[E.LAPRAS=131]="LAPRAS",E[E.DITTO=132]="DITTO",E[E.EEVEE=133]="EEVEE",E[E.VAPOREON=134]="VAPOREON",E[E.JOLTEON=135]="JOLTEON",E[E.FLAREON=136]="FLAREON",E[E.PORYGON=137]="PORYGON",E[E.OMANYTE=138]="OMANYTE",E[E.OMASTAR=139]="OMASTAR",E[E.KABUTO=140]="KABUTO",E[E.KABUTOPS=141]="KABUTOPS",E[E.AERODACTYL=142]="AERODACTYL",E[E.SNORLAX=143]="SNORLAX",E[E.ARTICUNO=144]="ARTICUNO",E[E.ZAPDOS=145]="ZAPDOS",E[E.MOLTRES=146]="MOLTRES",E[E.DRATINI=147]="DRATINI",E[E.DRAGONAIR=148]="DRAGONAIR",E[E.DRAGONITE=149]="DRAGONITE",E[E.MEWTWO=150]="MEWTWO",E[E.MEW=151]="MEW",E[E.CHIKORITA=152]="CHIKORITA",E[E.BAYLEEF=153]="BAYLEEF",E[E.MEGANIUM=154]="MEGANIUM",E[E.CYNDAQUIL=155]="CYNDAQUIL",E[E.QUILAVA=156]="QUILAVA",E[E.TYPHLOSION=157]="TYPHLOSION",E[E.TOTODILE=158]="TOTODILE",E[E.CROCONAW=159]="CROCONAW",E[E.FERALIGATR=160]="FERALIGATR",E[E.SENTRET=161]="SENTRET",E[E.FURRET=162]="FURRET",E[E.HOOTHOOT=163]="HOOTHOOT",E[E.NOCTOWL=164]="NOCTOWL",E[E.LEDYBA=165]="LEDYBA",E[E.LEDIAN=166]="LEDIAN",E[E.SPINARAK=167]="SPINARAK",E[E.ARIADOS=168]="ARIADOS",E[E.CROBAT=169]="CROBAT",E[E.CHINCHOU=170]="CHINCHOU",E[E.LANTURN=171]="LANTURN",E[E.PICHU=172]="PICHU",E[E.CLEFFA=173]="CLEFFA",E[E.IGGLYBUFF=174]="IGGLYBUFF",E[E.TOGEPI=175]="TOGEPI",E[E.TOGETIC=176]="TOGETIC",E[E.NATU=177]="NATU",E[E.XATU=178]="XATU",E[E.MAREEP=179]="MAREEP",E[E.FLAAFFY=180]="FLAAFFY",E[E.AMPHAROS=181]="AMPHAROS",E[E.BELLOSSOM=182]="BELLOSSOM",E[E.MARILL=183]="MARILL",E[E.AZUMARILL=184]="AZUMARILL",E[E.SUDOWOODO=185]="SUDOWOODO",E[E.POLITOED=186]="POLITOED",E[E.HOPPIP=187]="HOPPIP",E[E.SKIPLOOM=188]="SKIPLOOM",E[E.JUMPLUFF=189]="JUMPLUFF",E[E.AIPOM=190]="AIPOM",E[E.SUNKERN=191]="SUNKERN",E[E.SUNFLORA=192]="SUNFLORA",E[E.YANMA=193]="YANMA",E[E.WOOPER=194]="WOOPER",E[E.QUAGSIRE=195]="QUAGSIRE",E[E.ESPEON=196]="ESPEON",E[E.UMBREON=197]="UMBREON",E[E.MURKROW=198]="MURKROW",E[E.SLOWKING=199]="SLOWKING",E[E.MISDREAVUS=200]="MISDREAVUS",E[E.UNOWN=201]="UNOWN",E[E.WOBBUFFET=202]="WOBBUFFET",E[E.GIRAFARIG=203]="GIRAFARIG",E[E.PINECO=204]="PINECO",E[E.FORRETRESS=205]="FORRETRESS",E[E.DUNSPARCE=206]="DUNSPARCE",E[E.GLIGAR=207]="GLIGAR",E[E.STEELIX=208]="STEELIX",E[E.SNUBBULL=209]="SNUBBULL",E[E.GRANBULL=210]="GRANBULL",E[E.QWILFISH=211]="QWILFISH",E[E.SCIZOR=212]="SCIZOR",E[E.SHUCKLE=213]="SHUCKLE",E[E.HERACROSS=214]="HERACROSS",E[E.SNEASEL=215]="SNEASEL",E[E.TEDDIURSA=216]="TEDDIURSA",E[E.URSARING=217]="URSARING",E[E.SLUGMA=218]="SLUGMA",E[E.MAGCARGO=219]="MAGCARGO",E[E.SWINUB=220]="SWINUB",E[E.PILOSWINE=221]="PILOSWINE",E[E.CORSOLA=222]="CORSOLA",E[E.REMORAID=223]="REMORAID",E[E.OCTILLERY=224]="OCTILLERY",E[E.DELIBIRD=225]="DELIBIRD",E[E.MANTINE=226]="MANTINE",E[E.SKARMORY=227]="SKARMORY",E[E.HOUNDOUR=228]="HOUNDOUR",E[E.HOUNDOOM=229]="HOUNDOOM",E[E.KINGDRA=230]="KINGDRA",E[E.PHANPY=231]="PHANPY",E[E.DONPHAN=232]="DONPHAN",E[E.PORYGON2=233]="PORYGON2",E[E.STANTLER=234]="STANTLER",E[E.SMEARGLE=235]="SMEARGLE",E[E.TYROGUE=236]="TYROGUE",E[E.HITMONTOP=237]="HITMONTOP",E[E.SMOOCHUM=238]="SMOOCHUM",E[E.ELEKID=239]="ELEKID",E[E.MAGBY=240]="MAGBY",E[E.MILTANK=241]="MILTANK",E[E.BLISSEY=242]="BLISSEY",E[E.RAIKOU=243]="RAIKOU",E[E.ENTEI=244]="ENTEI",E[E.SUICUNE=245]="SUICUNE",E[E.LARVITAR=246]="LARVITAR",E[E.PUPITAR=247]="PUPITAR",E[E.TYRANITAR=248]="TYRANITAR",E[E.LUGIA=249]="LUGIA",E[E.HO_OH=250]="HO_OH",E[E.CELEBI=251]="CELEBI",E[E.TREECKO=252]="TREECKO",E[E.GROVYLE=253]="GROVYLE",E[E.SCEPTILE=254]="SCEPTILE",E[E.TORCHIC=255]="TORCHIC",E[E.COMBUSKEN=256]="COMBUSKEN",E[E.BLAZIKEN=257]="BLAZIKEN",E[E.MUDKIP=258]="MUDKIP",E[E.MARSHTOMP=259]="MARSHTOMP",E[E.SWAMPERT=260]="SWAMPERT",E[E.POOCHYENA=261]="POOCHYENA",E[E.MIGHTYENA=262]="MIGHTYENA",E[E.ZIGZAGOON=263]="ZIGZAGOON",E[E.LINOONE=264]="LINOONE",E[E.WURMPLE=265]="WURMPLE",E[E.SILCOON=266]="SILCOON",E[E.BEAUTIFLY=267]="BEAUTIFLY",E[E.CASCOON=268]="CASCOON",E[E.DUSTOX=269]="DUSTOX",E[E.LOTAD=270]="LOTAD",E[E.LOMBRE=271]="LOMBRE",E[E.LUDICOLO=272]="LUDICOLO",E[E.SEEDOT=273]="SEEDOT",E[E.NUZLEAF=274]="NUZLEAF",E[E.SHIFTRY=275]="SHIFTRY",E[E.TAILLOW=276]="TAILLOW",E[E.SWELLOW=277]="SWELLOW",E[E.WINGULL=278]="WINGULL",E[E.PELIPPER=279]="PELIPPER",E[E.RALTS=280]="RALTS",E[E.KIRLIA=281]="KIRLIA",E[E.GARDEVOIR=282]="GARDEVOIR",E[E.SURSKIT=283]="SURSKIT",E[E.MASQUERAIN=284]="MASQUERAIN",E[E.SHROOMISH=285]="SHROOMISH",E[E.BRELOOM=286]="BRELOOM",E[E.SLAKOTH=287]="SLAKOTH",E[E.VIGOROTH=288]="VIGOROTH",E[E.SLAKING=289]="SLAKING",E[E.NINCADA=290]="NINCADA",E[E.NINJASK=291]="NINJASK",E[E.SHEDINJA=292]="SHEDINJA",E[E.WHISMUR=293]="WHISMUR",E[E.LOUDRED=294]="LOUDRED",E[E.EXPLOUD=295]="EXPLOUD",E[E.MAKUHITA=296]="MAKUHITA",E[E.HARIYAMA=297]="HARIYAMA",E[E.AZURILL=298]="AZURILL",E[E.NOSEPASS=299]="NOSEPASS",E[E.SKITTY=300]="SKITTY",E[E.DELCATTY=301]="DELCATTY",E[E.SABLEYE=302]="SABLEYE",E[E.MAWILE=303]="MAWILE",E[E.ARON=304]="ARON",E[E.LAIRON=305]="LAIRON",E[E.AGGRON=306]="AGGRON",E[E.MEDITITE=307]="MEDITITE",E[E.MEDICHAM=308]="MEDICHAM",E[E.ELECTRIKE=309]="ELECTRIKE",E[E.MANECTRIC=310]="MANECTRIC",E[E.PLUSLE=311]="PLUSLE",E[E.MINUN=312]="MINUN",E[E.VOLBEAT=313]="VOLBEAT",E[E.ILLUMISE=314]="ILLUMISE",E[E.ROSELIA=315]="ROSELIA",E[E.GULPIN=316]="GULPIN",E[E.SWALOT=317]="SWALOT",E[E.CARVANHA=318]="CARVANHA",E[E.SHARPEDO=319]="SHARPEDO",E[E.WAILMER=320]="WAILMER",E[E.WAILORD=321]="WAILORD",E[E.NUMEL=322]="NUMEL",E[E.CAMERUPT=323]="CAMERUPT",E[E.TORKOAL=324]="TORKOAL",E[E.SPOINK=325]="SPOINK",E[E.GRUMPIG=326]="GRUMPIG",E[E.SPINDA=327]="SPINDA",E[E.TRAPINCH=328]="TRAPINCH",E[E.VIBRAVA=329]="VIBRAVA",E[E.FLYGON=330]="FLYGON",E[E.CACNEA=331]="CACNEA",E[E.CACTURNE=332]="CACTURNE",E[E.SWABLU=333]="SWABLU",E[E.ALTARIA=334]="ALTARIA",E[E.ZANGOOSE=335]="ZANGOOSE",E[E.SEVIPER=336]="SEVIPER",E[E.LUNATONE=337]="LUNATONE",E[E.SOLROCK=338]="SOLROCK",E[E.BARBOACH=339]="BARBOACH",E[E.WHISCASH=340]="WHISCASH",E[E.CORPHISH=341]="CORPHISH",E[E.CRAWDAUNT=342]="CRAWDAUNT",E[E.BALTOY=343]="BALTOY",E[E.CLAYDOL=344]="CLAYDOL",E[E.LILEEP=345]="LILEEP",E[E.CRADILY=346]="CRADILY",E[E.ANORITH=347]="ANORITH",E[E.ARMALDO=348]="ARMALDO",E[E.FEEBAS=349]="FEEBAS",E[E.MILOTIC=350]="MILOTIC",E[E.CASTFORM=351]="CASTFORM",E[E.KECLEON=352]="KECLEON",E[E.SHUPPET=353]="SHUPPET",E[E.BANETTE=354]="BANETTE",E[E.DUSKULL=355]="DUSKULL",E[E.DUSCLOPS=356]="DUSCLOPS",E[E.TROPIUS=357]="TROPIUS",E[E.CHIMECHO=358]="CHIMECHO",E[E.ABSOL=359]="ABSOL",E[E.WYNAUT=360]="WYNAUT",E[E.SNORUNT=361]="SNORUNT",E[E.GLALIE=362]="GLALIE",E[E.SPHEAL=363]="SPHEAL",E[E.SEALEO=364]="SEALEO",E[E.WALREIN=365]="WALREIN",E[E.CLAMPERL=366]="CLAMPERL",E[E.HUNTAIL=367]="HUNTAIL",E[E.GOREBYSS=368]="GOREBYSS",E[E.RELICANTH=369]="RELICANTH",E[E.LUVDISC=370]="LUVDISC",E[E.BAGON=371]="BAGON",E[E.SHELGON=372]="SHELGON",E[E.SALAMENCE=373]="SALAMENCE",E[E.BELDUM=374]="BELDUM",E[E.METANG=375]="METANG",E[E.METAGROSS=376]="METAGROSS",E[E.REGIROCK=377]="REGIROCK",E[E.REGICE=378]="REGICE",E[E.REGISTEEL=379]="REGISTEEL",E[E.LATIAS=380]="LATIAS",E[E.LATIOS=381]="LATIOS",E[E.KYOGRE=382]="KYOGRE",E[E.GROUDON=383]="GROUDON",E[E.RAYQUAZA=384]="RAYQUAZA",E[E.JIRACHI=385]="JIRACHI",E[E.DEOXYS=386]="DEOXYS",E[E.TURTWIG=387]="TURTWIG",E[E.GROTLE=388]="GROTLE",E[E.TORTERRA=389]="TORTERRA",E[E.CHIMCHAR=390]="CHIMCHAR",E[E.MONFERNO=391]="MONFERNO",E[E.INFERNAPE=392]="INFERNAPE",E[E.PIPLUP=393]="PIPLUP",E[E.PRINPLUP=394]="PRINPLUP",E[E.EMPOLEON=395]="EMPOLEON",E[E.STARLY=396]="STARLY",E[E.STARAVIA=397]="STARAVIA",E[E.STARAPTOR=398]="STARAPTOR",E[E.BIDOOF=399]="BIDOOF",E[E.BIBAREL=400]="BIBAREL",E[E.KRICKETOT=401]="KRICKETOT",E[E.KRICKETUNE=402]="KRICKETUNE",E[E.SHINX=403]="SHINX",E[E.LUXIO=404]="LUXIO",E[E.LUXRAY=405]="LUXRAY",E[E.BUDEW=406]="BUDEW",E[E.ROSERADE=407]="ROSERADE",E[E.CRANIDOS=408]="CRANIDOS",E[E.RAMPARDOS=409]="RAMPARDOS",E[E.SHIELDON=410]="SHIELDON",E[E.BASTIODON=411]="BASTIODON",E[E.BURMY=412]="BURMY",E[E.WORMADAM=413]="WORMADAM",E[E.MOTHIM=414]="MOTHIM",E[E.COMBEE=415]="COMBEE",E[E.VESPIQUEN=416]="VESPIQUEN",E[E.PACHIRISU=417]="PACHIRISU",E[E.BUIZEL=418]="BUIZEL",E[E.FLOATZEL=419]="FLOATZEL",E[E.CHERUBI=420]="CHERUBI",E[E.CHERRIM=421]="CHERRIM",E[E.SHELLOS=422]="SHELLOS",E[E.GASTRODON=423]="GASTRODON",E[E.AMBIPOM=424]="AMBIPOM",E[E.DRIFLOON=425]="DRIFLOON",E[E.DRIFBLIM=426]="DRIFBLIM",E[E.BUNEARY=427]="BUNEARY",E[E.LOPUNNY=428]="LOPUNNY",E[E.MISMAGIUS=429]="MISMAGIUS",E[E.HONCHKROW=430]="HONCHKROW",E[E.GLAMEOW=431]="GLAMEOW",E[E.PURUGLY=432]="PURUGLY",E[E.CHINGLING=433]="CHINGLING",E[E.STUNKY=434]="STUNKY",E[E.SKUNTANK=435]="SKUNTANK",E[E.BRONZOR=436]="BRONZOR",E[E.BRONZONG=437]="BRONZONG",E[E.BONSLY=438]="BONSLY",E[E.MIME_JR=439]="MIME_JR",E[E.HAPPINY=440]="HAPPINY",E[E.CHATOT=441]="CHATOT",E[E.SPIRITOMB=442]="SPIRITOMB",E[E.GIBLE=443]="GIBLE",E[E.GABITE=444]="GABITE",E[E.GARCHOMP=445]="GARCHOMP",E[E.MUNCHLAX=446]="MUNCHLAX",E[E.RIOLU=447]="RIOLU",E[E.LUCARIO=448]="LUCARIO",E[E.HIPPOPOTAS=449]="HIPPOPOTAS",E[E.HIPPOWDON=450]="HIPPOWDON",E[E.SKORUPI=451]="SKORUPI",E[E.DRAPION=452]="DRAPION",E[E.CROAGUNK=453]="CROAGUNK",E[E.TOXICROAK=454]="TOXICROAK",E[E.CARNIVINE=455]="CARNIVINE",E[E.FINNEON=456]="FINNEON",E[E.LUMINEON=457]="LUMINEON",E[E.MANTYKE=458]="MANTYKE",E[E.SNOVER=459]="SNOVER",E[E.ABOMASNOW=460]="ABOMASNOW",E[E.WEAVILE=461]="WEAVILE",E[E.MAGNEZONE=462]="MAGNEZONE",E[E.LICKILICKY=463]="LICKILICKY",E[E.RHYPERIOR=464]="RHYPERIOR",E[E.TANGROWTH=465]="TANGROWTH",E[E.ELECTIVIRE=466]="ELECTIVIRE",E[E.MAGMORTAR=467]="MAGMORTAR",E[E.TOGEKISS=468]="TOGEKISS",E[E.YANMEGA=469]="YANMEGA",E[E.LEAFEON=470]="LEAFEON",E[E.GLACEON=471]="GLACEON",E[E.GLISCOR=472]="GLISCOR",E[E.MAMOSWINE=473]="MAMOSWINE",E[E.PORYGON_Z=474]="PORYGON_Z",E[E.GALLADE=475]="GALLADE",E[E.PROBOPASS=476]="PROBOPASS",E[E.DUSKNOIR=477]="DUSKNOIR",E[E.FROSLASS=478]="FROSLASS",E[E.ROTOM=479]="ROTOM",E[E.UXIE=480]="UXIE",E[E.MESPRIT=481]="MESPRIT",E[E.AZELF=482]="AZELF",E[E.DIALGA=483]="DIALGA",E[E.PALKIA=484]="PALKIA",E[E.HEATRAN=485]="HEATRAN",E[E.REGIGIGAS=486]="REGIGIGAS",E[E.GIRATINA=487]="GIRATINA",E[E.CRESSELIA=488]="CRESSELIA",E[E.PHIONE=489]="PHIONE",E[E.MANAPHY=490]="MANAPHY",E[E.DARKRAI=491]="DARKRAI",E[E.SHAYMIN=492]="SHAYMIN",E[E.ARCEUS=493]="ARCEUS",E[E.VICTINI=494]="VICTINI",E[E.SNIVY=495]="SNIVY",E[E.SERVINE=496]="SERVINE",E[E.SERPERIOR=497]="SERPERIOR",E[E.TEPIG=498]="TEPIG",E[E.PIGNITE=499]="PIGNITE",E[E.EMBOAR=500]="EMBOAR",E[E.OSHAWOTT=501]="OSHAWOTT",E[E.DEWOTT=502]="DEWOTT",E[E.SAMUROTT=503]="SAMUROTT",E[E.PATRAT=504]="PATRAT",E[E.WATCHOG=505]="WATCHOG",E[E.LILLIPUP=506]="LILLIPUP",E[E.HERDIER=507]="HERDIER",E[E.STOUTLAND=508]="STOUTLAND",E[E.PURRLOIN=509]="PURRLOIN",E[E.LIEPARD=510]="LIEPARD",E[E.PANSAGE=511]="PANSAGE",E[E.SIMISAGE=512]="SIMISAGE",E[E.PANSEAR=513]="PANSEAR",E[E.SIMISEAR=514]="SIMISEAR",E[E.PANPOUR=515]="PANPOUR",E[E.SIMIPOUR=516]="SIMIPOUR",E[E.MUNNA=517]="MUNNA",E[E.MUSHARNA=518]="MUSHARNA",E[E.PIDOVE=519]="PIDOVE",E[E.TRANQUILL=520]="TRANQUILL",E[E.UNFEZANT=521]="UNFEZANT",E[E.BLITZLE=522]="BLITZLE",E[E.ZEBSTRIKA=523]="ZEBSTRIKA",E[E.ROGGENROLA=524]="ROGGENROLA",E[E.BOLDORE=525]="BOLDORE",E[E.GIGALITH=526]="GIGALITH",E[E.WOOBAT=527]="WOOBAT",E[E.SWOOBAT=528]="SWOOBAT",E[E.DRILBUR=529]="DRILBUR",E[E.EXCADRILL=530]="EXCADRILL",E[E.AUDINO=531]="AUDINO",E[E.TIMBURR=532]="TIMBURR",E[E.GURDURR=533]="GURDURR",E[E.CONKELDURR=534]="CONKELDURR",E[E.TYMPOLE=535]="TYMPOLE",E[E.PALPITOAD=536]="PALPITOAD",E[E.SEISMITOAD=537]="SEISMITOAD",E[E.THROH=538]="THROH",E[E.SAWK=539]="SAWK",E[E.SEWADDLE=540]="SEWADDLE",E[E.SWADLOON=541]="SWADLOON",E[E.LEAVANNY=542]="LEAVANNY",E[E.VENIPEDE=543]="VENIPEDE",E[E.WHIRLIPEDE=544]="WHIRLIPEDE",E[E.SCOLIPEDE=545]="SCOLIPEDE",E[E.COTTONEE=546]="COTTONEE",E[E.WHIMSICOTT=547]="WHIMSICOTT",E[E.PETILIL=548]="PETILIL",E[E.LILLIGANT=549]="LILLIGANT",E[E.BASCULIN=550]="BASCULIN",E[E.SANDILE=551]="SANDILE",E[E.KROKOROK=552]="KROKOROK",E[E.KROOKODILE=553]="KROOKODILE",E[E.DARUMAKA=554]="DARUMAKA",E[E.DARMANITAN=555]="DARMANITAN",E[E.MARACTUS=556]="MARACTUS",E[E.DWEBBLE=557]="DWEBBLE",E[E.CRUSTLE=558]="CRUSTLE",E[E.SCRAGGY=559]="SCRAGGY",E[E.SCRAFTY=560]="SCRAFTY",E[E.SIGILYPH=561]="SIGILYPH",E[E.YAMASK=562]="YAMASK",E[E.COFAGRIGUS=563]="COFAGRIGUS",E[E.TIRTOUGA=564]="TIRTOUGA",E[E.CARRACOSTA=565]="CARRACOSTA",E[E.ARCHEN=566]="ARCHEN",E[E.ARCHEOPS=567]="ARCHEOPS",E[E.TRUBBISH=568]="TRUBBISH",E[E.GARBODOR=569]="GARBODOR",E[E.ZORUA=570]="ZORUA",E[E.ZOROARK=571]="ZOROARK",E[E.MINCCINO=572]="MINCCINO",E[E.CINCCINO=573]="CINCCINO",E[E.GOTHITA=574]="GOTHITA",E[E.GOTHORITA=575]="GOTHORITA",E[E.GOTHITELLE=576]="GOTHITELLE",E[E.SOLOSIS=577]="SOLOSIS",E[E.DUOSION=578]="DUOSION",E[E.REUNICLUS=579]="REUNICLUS",E[E.DUCKLETT=580]="DUCKLETT",E[E.SWANNA=581]="SWANNA",E[E.VANILLITE=582]="VANILLITE",E[E.VANILLISH=583]="VANILLISH",E[E.VANILLUXE=584]="VANILLUXE",E[E.DEERLING=585]="DEERLING",E[E.SAWSBUCK=586]="SAWSBUCK",E[E.EMOLGA=587]="EMOLGA",E[E.KARRABLAST=588]="KARRABLAST",E[E.ESCAVALIER=589]="ESCAVALIER",E[E.FOONGUS=590]="FOONGUS",E[E.AMOONGUSS=591]="AMOONGUSS",E[E.FRILLISH=592]="FRILLISH",E[E.JELLICENT=593]="JELLICENT",E[E.ALOMOMOLA=594]="ALOMOMOLA",E[E.JOLTIK=595]="JOLTIK",E[E.GALVANTULA=596]="GALVANTULA",E[E.FERROSEED=597]="FERROSEED",E[E.FERROTHORN=598]="FERROTHORN",E[E.KLINK=599]="KLINK",E[E.KLANG=600]="KLANG",E[E.KLINKLANG=601]="KLINKLANG",E[E.TYNAMO=602]="TYNAMO",E[E.EELEKTRIK=603]="EELEKTRIK",E[E.EELEKTROSS=604]="EELEKTROSS",E[E.ELGYEM=605]="ELGYEM",E[E.BEHEEYEM=606]="BEHEEYEM",E[E.LITWICK=607]="LITWICK",E[E.LAMPENT=608]="LAMPENT",E[E.CHANDELURE=609]="CHANDELURE",E[E.AXEW=610]="AXEW",E[E.FRAXURE=611]="FRAXURE",E[E.HAXORUS=612]="HAXORUS",E[E.CUBCHOO=613]="CUBCHOO",E[E.BEARTIC=614]="BEARTIC",E[E.CRYOGONAL=615]="CRYOGONAL",E[E.SHELMET=616]="SHELMET",E[E.ACCELGOR=617]="ACCELGOR",E[E.STUNFISK=618]="STUNFISK",E[E.MIENFOO=619]="MIENFOO",E[E.MIENSHAO=620]="MIENSHAO",E[E.DRUDDIGON=621]="DRUDDIGON",E[E.GOLETT=622]="GOLETT",E[E.GOLURK=623]="GOLURK",E[E.PAWNIARD=624]="PAWNIARD",E[E.BISHARP=625]="BISHARP",E[E.BOUFFALANT=626]="BOUFFALANT",E[E.RUFFLET=627]="RUFFLET",E[E.BRAVIARY=628]="BRAVIARY",E[E.VULLABY=629]="VULLABY",E[E.MANDIBUZZ=630]="MANDIBUZZ",E[E.HEATMOR=631]="HEATMOR",E[E.DURANT=632]="DURANT",E[E.DEINO=633]="DEINO",E[E.ZWEILOUS=634]="ZWEILOUS",E[E.HYDREIGON=635]="HYDREIGON",E[E.LARVESTA=636]="LARVESTA",E[E.VOLCARONA=637]="VOLCARONA",E[E.COBALION=638]="COBALION",E[E.TERRAKION=639]="TERRAKION",E[E.VIRIZION=640]="VIRIZION",E[E.TORNADUS=641]="TORNADUS",E[E.THUNDURUS=642]="THUNDURUS",E[E.RESHIRAM=643]="RESHIRAM",E[E.ZEKROM=644]="ZEKROM",E[E.LANDORUS=645]="LANDORUS",E[E.KYUREM=646]="KYUREM",E[E.KELDEO=647]="KELDEO",E[E.MELOETTA=648]="MELOETTA",E[E.GENESECT=649]="GENESECT",E[E.CHESPIN=650]="CHESPIN",E[E.QUILLADIN=651]="QUILLADIN",E[E.CHESNAUGHT=652]="CHESNAUGHT",E[E.FENNEKIN=653]="FENNEKIN",E[E.BRAIXEN=654]="BRAIXEN",E[E.DELPHOX=655]="DELPHOX",E[E.FROAKIE=656]="FROAKIE",E[E.FROGADIER=657]="FROGADIER",E[E.GRENINJA=658]="GRENINJA",E[E.BUNNELBY=659]="BUNNELBY",E[E.DIGGERSBY=660]="DIGGERSBY",E[E.FLETCHLING=661]="FLETCHLING",E[E.FLETCHINDER=662]="FLETCHINDER",E[E.TALONFLAME=663]="TALONFLAME",E[E.SCATTERBUG=664]="SCATTERBUG",E[E.SPEWPA=665]="SPEWPA",E[E.VIVILLON=666]="VIVILLON",E[E.LITLEO=667]="LITLEO",E[E.PYROAR=668]="PYROAR",E[E.FLABEBE=669]="FLABEBE",E[E.FLOETTE=670]="FLOETTE",E[E.FLORGES=671]="FLORGES",E[E.SKIDDO=672]="SKIDDO",E[E.GOGOAT=673]="GOGOAT",E[E.PANCHAM=674]="PANCHAM",E[E.PANGORO=675]="PANGORO",E[E.FURFROU=676]="FURFROU",E[E.ESPURR=677]="ESPURR",E[E.MEOWSTIC=678]="MEOWSTIC",E[E.HONEDGE=679]="HONEDGE",E[E.DOUBLADE=680]="DOUBLADE",E[E.AEGISLASH=681]="AEGISLASH",E[E.SPRITZEE=682]="SPRITZEE",E[E.AROMATISSE=683]="AROMATISSE",E[E.SWIRLIX=684]="SWIRLIX",E[E.SLURPUFF=685]="SLURPUFF",E[E.INKAY=686]="INKAY",E[E.MALAMAR=687]="MALAMAR",E[E.BINACLE=688]="BINACLE",E[E.BARBARACLE=689]="BARBARACLE",E[E.SKRELP=690]="SKRELP",E[E.DRAGALGE=691]="DRAGALGE",E[E.CLAUNCHER=692]="CLAUNCHER",E[E.CLAWITZER=693]="CLAWITZER",E[E.HELIOPTILE=694]="HELIOPTILE",E[E.HELIOLISK=695]="HELIOLISK",E[E.TYRUNT=696]="TYRUNT",E[E.TYRANTRUM=697]="TYRANTRUM",E[E.AMAURA=698]="AMAURA",E[E.AURORUS=699]="AURORUS",E[E.SYLVEON=700]="SYLVEON",E[E.HAWLUCHA=701]="HAWLUCHA",E[E.DEDENNE=702]="DEDENNE",E[E.CARBINK=703]="CARBINK",E[E.GOOMY=704]="GOOMY",E[E.SLIGGOO=705]="SLIGGOO",E[E.GOODRA=706]="GOODRA",E[E.KLEFKI=707]="KLEFKI",E[E.PHANTUMP=708]="PHANTUMP",E[E.TREVENANT=709]="TREVENANT",E[E.PUMPKABOO=710]="PUMPKABOO",E[E.GOURGEIST=711]="GOURGEIST",E[E.BERGMITE=712]="BERGMITE",E[E.AVALUGG=713]="AVALUGG",E[E.NOIBAT=714]="NOIBAT",E[E.NOIVERN=715]="NOIVERN",E[E.XERNEAS=716]="XERNEAS",E[E.YVELTAL=717]="YVELTAL",E[E.ZYGARDE=718]="ZYGARDE",E[E.DIANCIE=719]="DIANCIE",E[E.HOOPA=720]="HOOPA",E[E.VOLCANION=721]="VOLCANION",E[E.ROWLET=722]="ROWLET",E[E.DARTRIX=723]="DARTRIX",E[E.DECIDUEYE=724]="DECIDUEYE",E[E.LITTEN=725]="LITTEN",E[E.TORRACAT=726]="TORRACAT",E[E.INCINEROAR=727]="INCINEROAR",E[E.POPPLIO=728]="POPPLIO",E[E.BRIONNE=729]="BRIONNE",E[E.PRIMARINA=730]="PRIMARINA",E[E.PIKIPEK=731]="PIKIPEK",E[E.TRUMBEAK=732]="TRUMBEAK",E[E.TOUCANNON=733]="TOUCANNON",E[E.YUNGOOS=734]="YUNGOOS",E[E.GUMSHOOS=735]="GUMSHOOS",E[E.GRUBBIN=736]="GRUBBIN",E[E.CHARJABUG=737]="CHARJABUG",E[E.VIKAVOLT=738]="VIKAVOLT",E[E.CRABRAWLER=739]="CRABRAWLER",E[E.CRABOMINABLE=740]="CRABOMINABLE",E[E.ORICORIO=741]="ORICORIO",E[E.CUTIEFLY=742]="CUTIEFLY",E[E.RIBOMBEE=743]="RIBOMBEE",E[E.ROCKRUFF=744]="ROCKRUFF",E[E.LYCANROC=745]="LYCANROC",E[E.WISHIWASHI=746]="WISHIWASHI",E[E.MAREANIE=747]="MAREANIE",E[E.TOXAPEX=748]="TOXAPEX",E[E.MUDBRAY=749]="MUDBRAY",E[E.MUDSDALE=750]="MUDSDALE",E[E.DEWPIDER=751]="DEWPIDER",E[E.ARAQUANID=752]="ARAQUANID",E[E.FOMANTIS=753]="FOMANTIS",E[E.LURANTIS=754]="LURANTIS",E[E.MORELULL=755]="MORELULL",E[E.SHIINOTIC=756]="SHIINOTIC",E[E.SALANDIT=757]="SALANDIT",E[E.SALAZZLE=758]="SALAZZLE",E[E.STUFFUL=759]="STUFFUL",E[E.BEWEAR=760]="BEWEAR",E[E.BOUNSWEET=761]="BOUNSWEET",E[E.STEENEE=762]="STEENEE",E[E.TSAREENA=763]="TSAREENA",E[E.COMFEY=764]="COMFEY",E[E.ORANGURU=765]="ORANGURU",E[E.PASSIMIAN=766]="PASSIMIAN",E[E.WIMPOD=767]="WIMPOD",E[E.GOLISOPOD=768]="GOLISOPOD",E[E.SANDYGAST=769]="SANDYGAST",E[E.PALOSSAND=770]="PALOSSAND",E[E.PYUKUMUKU=771]="PYUKUMUKU",E[E.TYPE_NULL=772]="TYPE_NULL",E[E.SILVALLY=773]="SILVALLY",E[E.MINIOR=774]="MINIOR",E[E.KOMALA=775]="KOMALA",E[E.TURTONATOR=776]="TURTONATOR",E[E.TOGEDEMARU=777]="TOGEDEMARU",E[E.MIMIKYU=778]="MIMIKYU",E[E.BRUXISH=779]="BRUXISH",E[E.DRAMPA=780]="DRAMPA",E[E.DHELMISE=781]="DHELMISE",E[E.JANGMO_O=782]="JANGMO_O",E[E.HAKAMO_O=783]="HAKAMO_O",E[E.KOMMO_O=784]="KOMMO_O",E[E.TAPU_KOKO=785]="TAPU_KOKO",E[E.TAPU_LELE=786]="TAPU_LELE",E[E.TAPU_BULU=787]="TAPU_BULU",E[E.TAPU_FINI=788]="TAPU_FINI",E[E.COSMOG=789]="COSMOG",E[E.COSMOEM=790]="COSMOEM",E[E.SOLGALEO=791]="SOLGALEO",E[E.LUNALA=792]="LUNALA",E[E.NIHILEGO=793]="NIHILEGO",E[E.BUZZWOLE=794]="BUZZWOLE",E[E.PHEROMOSA=795]="PHEROMOSA",E[E.XURKITREE=796]="XURKITREE",E[E.CELESTEELA=797]="CELESTEELA",E[E.KARTANA=798]="KARTANA",E[E.GUZZLORD=799]="GUZZLORD",E[E.NECROZMA=800]="NECROZMA",E[E.MAGEARNA=801]="MAGEARNA",E[E.MARSHADOW=802]="MARSHADOW",E[E.POIPOLE=803]="POIPOLE",E[E.NAGANADEL=804]="NAGANADEL",E[E.STAKATAKA=805]="STAKATAKA",E[E.BLACEPHALON=806]="BLACEPHALON",E[E.ZERAORA=807]="ZERAORA",E[E.MELTAN=808]="MELTAN",E[E.MELMETAL=809]="MELMETAL",E[E.GROOKEY=810]="GROOKEY",E[E.THWACKEY=811]="THWACKEY",E[E.RILLABOOM=812]="RILLABOOM",E[E.SCORBUNNY=813]="SCORBUNNY",E[E.RABOOT=814]="RABOOT",E[E.CINDERACE=815]="CINDERACE",E[E.SOBBLE=816]="SOBBLE",E[E.DRIZZILE=817]="DRIZZILE",E[E.INTELEON=818]="INTELEON",E[E.SKWOVET=819]="SKWOVET",E[E.GREEDENT=820]="GREEDENT",E[E.ROOKIDEE=821]="ROOKIDEE",E[E.CORVISQUIRE=822]="CORVISQUIRE",E[E.CORVIKNIGHT=823]="CORVIKNIGHT",E[E.BLIPBUG=824]="BLIPBUG",E[E.DOTTLER=825]="DOTTLER",E[E.ORBEETLE=826]="ORBEETLE",E[E.NICKIT=827]="NICKIT",E[E.THIEVUL=828]="THIEVUL",E[E.GOSSIFLEUR=829]="GOSSIFLEUR",E[E.ELDEGOSS=830]="ELDEGOSS",E[E.WOOLOO=831]="WOOLOO",E[E.DUBWOOL=832]="DUBWOOL",E[E.CHEWTLE=833]="CHEWTLE",E[E.DREDNAW=834]="DREDNAW",E[E.YAMPER=835]="YAMPER",E[E.BOLTUND=836]="BOLTUND",E[E.ROLYCOLY=837]="ROLYCOLY",E[E.CARKOL=838]="CARKOL",E[E.COALOSSAL=839]="COALOSSAL",E[E.APPLIN=840]="APPLIN",E[E.FLAPPLE=841]="FLAPPLE",E[E.APPLETUN=842]="APPLETUN",E[E.SILICOBRA=843]="SILICOBRA",E[E.SANDACONDA=844]="SANDACONDA",E[E.CRAMORANT=845]="CRAMORANT",E[E.ARROKUDA=846]="ARROKUDA",E[E.BARRASKEWDA=847]="BARRASKEWDA",E[E.TOXEL=848]="TOXEL",E[E.TOXTRICITY=849]="TOXTRICITY",E[E.SIZZLIPEDE=850]="SIZZLIPEDE",E[E.CENTISKORCH=851]="CENTISKORCH",E[E.CLOBBOPUS=852]="CLOBBOPUS",E[E.GRAPPLOCT=853]="GRAPPLOCT",E[E.SINISTEA=854]="SINISTEA",E[E.POLTEAGEIST=855]="POLTEAGEIST",E[E.HATENNA=856]="HATENNA",E[E.HATTREM=857]="HATTREM",E[E.HATTERENE=858]="HATTERENE",E[E.IMPIDIMP=859]="IMPIDIMP",E[E.MORGREM=860]="MORGREM",E[E.GRIMMSNARL=861]="GRIMMSNARL",E[E.OBSTAGOON=862]="OBSTAGOON",E[E.PERRSERKER=863]="PERRSERKER",E[E.CURSOLA=864]="CURSOLA",E[E.SIRFETCHD=865]="SIRFETCHD",E[E.MR_RIME=866]="MR_RIME",E[E.RUNERIGUS=867]="RUNERIGUS",E[E.MILCERY=868]="MILCERY",E[E.ALCREMIE=869]="ALCREMIE",E[E.FALINKS=870]="FALINKS",E[E.PINCURCHIN=871]="PINCURCHIN",E[E.SNOM=872]="SNOM",E[E.FROSMOTH=873]="FROSMOTH",E[E.STONJOURNER=874]="STONJOURNER",E[E.EISCUE=875]="EISCUE",E[E.INDEEDEE=876]="INDEEDEE",E[E.MORPEKO=877]="MORPEKO",E[E.CUFANT=878]="CUFANT",E[E.COPPERAJAH=879]="COPPERAJAH",E[E.DRACOZOLT=880]="DRACOZOLT",E[E.ARCTOZOLT=881]="ARCTOZOLT",E[E.DRACOVISH=882]="DRACOVISH",E[E.ARCTOVISH=883]="ARCTOVISH",E[E.DURALUDON=884]="DURALUDON",E[E.DREEPY=885]="DREEPY",E[E.DRAKLOAK=886]="DRAKLOAK",E[E.DRAGAPULT=887]="DRAGAPULT",E[E.ZACIAN=888]="ZACIAN",E[E.ZAMAZENTA=889]="ZAMAZENTA",E[E.ETERNATUS=890]="ETERNATUS",E[E.KUBFU=891]="KUBFU",E[E.URSHIFU=892]="URSHIFU",E[E.ZARUDE=893]="ZARUDE",E[E.REGIELEKI=894]="REGIELEKI",E[E.REGIDRAGO=895]="REGIDRAGO",E[E.GLASTRIER=896]="GLASTRIER",E[E.SPECTRIER=897]="SPECTRIER",E[E.CALYREX=898]="CALYREX",E[E.WYRDEER=899]="WYRDEER",E[E.KLEAVOR=900]="KLEAVOR",E[E.URSALUNA=901]="URSALUNA",E[E.BASCULEGION=902]="BASCULEGION",E[E.SNEASLER=903]="SNEASLER",E[E.OVERQWIL=904]="OVERQWIL",E[E.ENAMORUS=905]="ENAMORUS",E[E.SPRIGATITO=906]="SPRIGATITO",E[E.FLORAGATO=907]="FLORAGATO",E[E.MEOWSCARADA=908]="MEOWSCARADA",E[E.FUECOCO=909]="FUECOCO",E[E.CROCALOR=910]="CROCALOR",E[E.SKELEDIRGE=911]="SKELEDIRGE",E[E.QUAXLY=912]="QUAXLY",E[E.QUAXWELL=913]="QUAXWELL",E[E.QUAQUAVAL=914]="QUAQUAVAL",E[E.LECHONK=915]="LECHONK",E[E.OINKOLOGNE=916]="OINKOLOGNE",E[E.TAROUNTULA=917]="TAROUNTULA",E[E.SPIDOPS=918]="SPIDOPS",E[E.NYMBLE=919]="NYMBLE",E[E.LOKIX=920]="LOKIX",E[E.PAWMI=921]="PAWMI",E[E.PAWMO=922]="PAWMO",E[E.PAWMOT=923]="PAWMOT",E[E.TANDEMAUS=924]="TANDEMAUS",E[E.MAUSHOLD=925]="MAUSHOLD",E[E.FIDOUGH=926]="FIDOUGH",E[E.DACHSBUN=927]="DACHSBUN",E[E.SMOLIV=928]="SMOLIV",E[E.DOLLIV=929]="DOLLIV",E[E.ARBOLIVA=930]="ARBOLIVA",E[E.SQUAWKABILLY=931]="SQUAWKABILLY",E[E.NACLI=932]="NACLI",E[E.NACLSTACK=933]="NACLSTACK",E[E.GARGANACL=934]="GARGANACL",E[E.CHARCADET=935]="CHARCADET",E[E.ARMAROUGE=936]="ARMAROUGE",E[E.CERULEDGE=937]="CERULEDGE",E[E.TADBULB=938]="TADBULB",E[E.BELLIBOLT=939]="BELLIBOLT",E[E.WATTREL=940]="WATTREL",E[E.KILOWATTREL=941]="KILOWATTREL",E[E.MASCHIFF=942]="MASCHIFF",E[E.MABOSSTIFF=943]="MABOSSTIFF",E[E.SHROODLE=944]="SHROODLE",E[E.GRAFAIAI=945]="GRAFAIAI",E[E.BRAMBLIN=946]="BRAMBLIN",E[E.BRAMBLEGHAST=947]="BRAMBLEGHAST",E[E.TOEDSCOOL=948]="TOEDSCOOL",E[E.TOEDSCRUEL=949]="TOEDSCRUEL",E[E.KLAWF=950]="KLAWF",E[E.CAPSAKID=951]="CAPSAKID",E[E.SCOVILLAIN=952]="SCOVILLAIN",E[E.RELLOR=953]="RELLOR",E[E.RABSCA=954]="RABSCA",E[E.FLITTLE=955]="FLITTLE",E[E.ESPATHRA=956]="ESPATHRA",E[E.TINKATINK=957]="TINKATINK",E[E.TINKATUFF=958]="TINKATUFF",E[E.TINKATON=959]="TINKATON",E[E.WIGLETT=960]="WIGLETT",E[E.WUGTRIO=961]="WUGTRIO",E[E.BOMBIRDIER=962]="BOMBIRDIER",E[E.FINIZEN=963]="FINIZEN",E[E.PALAFIN=964]="PALAFIN",E[E.VAROOM=965]="VAROOM",E[E.REVAVROOM=966]="REVAVROOM",E[E.CYCLIZAR=967]="CYCLIZAR",E[E.ORTHWORM=968]="ORTHWORM",E[E.GLIMMET=969]="GLIMMET",E[E.GLIMMORA=970]="GLIMMORA",E[E.GREAVARD=971]="GREAVARD",E[E.HOUNDSTONE=972]="HOUNDSTONE",E[E.FLAMIGO=973]="FLAMIGO",E[E.CETODDLE=974]="CETODDLE",E[E.CETITAN=975]="CETITAN",E[E.VELUZA=976]="VELUZA",E[E.DONDOZO=977]="DONDOZO",E[E.TATSUGIRI=978]="TATSUGIRI",E[E.ANNIHILAPE=979]="ANNIHILAPE",E[E.CLODSIRE=980]="CLODSIRE",E[E.FARIGIRAF=981]="FARIGIRAF",E[E.DUDUNSPARCE=982]="DUDUNSPARCE",E[E.KINGAMBIT=983]="KINGAMBIT",E[E.GREAT_TUSK=984]="GREAT_TUSK",E[E.SCREAM_TAIL=985]="SCREAM_TAIL",E[E.BRUTE_BONNET=986]="BRUTE_BONNET",E[E.FLUTTER_MANE=987]="FLUTTER_MANE",E[E.SLITHER_WING=988]="SLITHER_WING",E[E.SANDY_SHOCKS=989]="SANDY_SHOCKS",E[E.IRON_TREADS=990]="IRON_TREADS",E[E.IRON_BUNDLE=991]="IRON_BUNDLE",E[E.IRON_HANDS=992]="IRON_HANDS",E[E.IRON_JUGULIS=993]="IRON_JUGULIS",E[E.IRON_MOTH=994]="IRON_MOTH",E[E.IRON_THORNS=995]="IRON_THORNS",E[E.FRIGIBAX=996]="FRIGIBAX",E[E.ARCTIBAX=997]="ARCTIBAX",E[E.BAXCALIBUR=998]="BAXCALIBUR",E[E.GIMMIGHOUL=999]="GIMMIGHOUL",E[E.GHOLDENGO=1e3]="GHOLDENGO",E[E.WO_CHIEN=1001]="WO_CHIEN",E[E.CHIEN_PAO=1002]="CHIEN_PAO",E[E.TING_LU=1003]="TING_LU",E[E.CHI_YU=1004]="CHI_YU",E[E.ROARING_MOON=1005]="ROARING_MOON",E[E.IRON_VALIANT=1006]="IRON_VALIANT",E[E.KORAIDON=1007]="KORAIDON",E[E.MIRAIDON=1008]="MIRAIDON",E[E.WALKING_WAKE=1009]="WALKING_WAKE",E[E.IRON_LEAVES=1010]="IRON_LEAVES",E[E.DIPPLIN=1011]="DIPPLIN",E[E.POLTCHAGEIST=1012]="POLTCHAGEIST",E[E.SINISTCHA=1013]="SINISTCHA",E[E.OKIDOGI=1014]="OKIDOGI",E[E.MUNKIDORI=1015]="MUNKIDORI",E[E.FEZANDIPITI=1016]="FEZANDIPITI",E[E.OGERPON=1017]="OGERPON",E[E.ARCHALUDON=1018]="ARCHALUDON",E[E.HYDRAPPLE=1019]="HYDRAPPLE",E[E.GOUGING_FIRE=1020]="GOUGING_FIRE",E[E.RAGING_BOLT=1021]="RAGING_BOLT",E[E.IRON_BOULDER=1022]="IRON_BOULDER",E[E.IRON_CROWN=1023]="IRON_CROWN",E[E.TERAPAGOS=1024]="TERAPAGOS",E[E.PECHARUNT=1025]="PECHARUNT",E[E.ALOLA_RATTATA=2019]="ALOLA_RATTATA",E[E.ALOLA_RATICATE=2020]="ALOLA_RATICATE",E[E.ALOLA_RAICHU=2026]="ALOLA_RAICHU",E[E.ALOLA_SANDSHREW=2027]="ALOLA_SANDSHREW",E[E.ALOLA_SANDSLASH=2028]="ALOLA_SANDSLASH",E[E.ALOLA_VULPIX=2037]="ALOLA_VULPIX",E[E.ALOLA_NINETALES=2038]="ALOLA_NINETALES",E[E.ALOLA_DIGLETT=2050]="ALOLA_DIGLETT",E[E.ALOLA_DUGTRIO=2051]="ALOLA_DUGTRIO",E[E.ALOLA_MEOWTH=2052]="ALOLA_MEOWTH",E[E.ALOLA_PERSIAN=2053]="ALOLA_PERSIAN",E[E.ALOLA_GEODUDE=2074]="ALOLA_GEODUDE",E[E.ALOLA_GRAVELER=2075]="ALOLA_GRAVELER",E[E.ALOLA_GOLEM=2076]="ALOLA_GOLEM",E[E.ALOLA_GRIMER=2088]="ALOLA_GRIMER",E[E.ALOLA_MUK=2089]="ALOLA_MUK",E[E.ALOLA_EXEGGUTOR=2103]="ALOLA_EXEGGUTOR",E[E.ALOLA_MAROWAK=2105]="ALOLA_MAROWAK",E[E.ETERNAL_FLOETTE=2670]="ETERNAL_FLOETTE",E[E.GALAR_MEOWTH=4052]="GALAR_MEOWTH",E[E.GALAR_PONYTA=4077]="GALAR_PONYTA",E[E.GALAR_RAPIDASH=4078]="GALAR_RAPIDASH",E[E.GALAR_SLOWPOKE=4079]="GALAR_SLOWPOKE",E[E.GALAR_SLOWBRO=4080]="GALAR_SLOWBRO",E[E.GALAR_FARFETCHD=4083]="GALAR_FARFETCHD",E[E.GALAR_WEEZING=4110]="GALAR_WEEZING",E[E.GALAR_MR_MIME=4122]="GALAR_MR_MIME",E[E.GALAR_ARTICUNO=4144]="GALAR_ARTICUNO",E[E.GALAR_ZAPDOS=4145]="GALAR_ZAPDOS",E[E.GALAR_MOLTRES=4146]="GALAR_MOLTRES",E[E.GALAR_SLOWKING=4199]="GALAR_SLOWKING",E[E.GALAR_CORSOLA=4222]="GALAR_CORSOLA",E[E.GALAR_ZIGZAGOON=4263]="GALAR_ZIGZAGOON",E[E.GALAR_LINOONE=4264]="GALAR_LINOONE",E[E.GALAR_DARUMAKA=4554]="GALAR_DARUMAKA",E[E.GALAR_DARMANITAN=4555]="GALAR_DARMANITAN",E[E.GALAR_YAMASK=4562]="GALAR_YAMASK",E[E.GALAR_STUNFISK=4618]="GALAR_STUNFISK",E[E.HISUI_GROWLITHE=6058]="HISUI_GROWLITHE",E[E.HISUI_ARCANINE=6059]="HISUI_ARCANINE",E[E.HISUI_VOLTORB=6100]="HISUI_VOLTORB",E[E.HISUI_ELECTRODE=6101]="HISUI_ELECTRODE",E[E.HISUI_TYPHLOSION=6157]="HISUI_TYPHLOSION",E[E.HISUI_QWILFISH=6211]="HISUI_QWILFISH",E[E.HISUI_SNEASEL=6215]="HISUI_SNEASEL",E[E.HISUI_SAMUROTT=6503]="HISUI_SAMUROTT",E[E.HISUI_LILLIGANT=6549]="HISUI_LILLIGANT",E[E.HISUI_ZORUA=6570]="HISUI_ZORUA",E[E.HISUI_ZOROARK=6571]="HISUI_ZOROARK",E[E.HISUI_BRAVIARY=6628]="HISUI_BRAVIARY",E[E.HISUI_SLIGGOO=6705]="HISUI_SLIGGOO",E[E.HISUI_GOODRA=6706]="HISUI_GOODRA",E[E.HISUI_AVALUGG=6713]="HISUI_AVALUGG",E[E.HISUI_DECIDUEYE=6724]="HISUI_DECIDUEYE",E[E.PALDEA_TAUROS=8128]="PALDEA_TAUROS",E[E.PALDEA_WOOPER=8194]="PALDEA_WOOPER",E[E.BLOODMOON_URSALUNA=8901]="BLOODMOON_URSALUNA",E))(e||{}),S=(E=>(E[E.ALL=-1]="ALL",E[E.DAWN=0]="DAWN",E[E.DAY=1]="DAY",E[E.DUSK=2]="DUSK",E[E.NIGHT=3]="NIGHT",E))(S||{}),DE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FINAL_BOSS=1]="FINAL_BOSS",E))(DE||{});function ee(E){if(!E)return"Missigno";switch(a.currentBattle.battleSpec){case DE.DEFAULT:return E.isPlayer()?E.getNameToRender():E.hasTrainer()?u.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()}):u.t("battle:wildPokemonWithAffix",{pokemonName:E.getNameToRender()});case DE.FINAL_BOSS:return E.isPlayer()?E.getNameToRender():u.t("battle:foePokemonWithAffix",{pokemonName:E.getNameToRender()});default:return E.getNameToRender()}}o(ee,"getPokemonNameWithAffix");var $O=(E=>(E[E.STANDARD=0]="STANDARD",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E))($O||{});const aR={},mi={};function lE(E){switch(E){case 0:return 16302112;case 1:return 2160880;case 2:return 15208520}}o(lE,"getVariantTint");function DO(E){switch(E){case 0:return $O.STANDARD;case 1:return $O.RARE;case 2:return $O.EPIC}}o(DO,"getVariantIcon");var G=(E=>(E[E.ERRATIC=0]="ERRATIC",E[E.FAST=1]="FAST",E[E.MEDIUM_FAST=2]="MEDIUM_FAST",E[E.MEDIUM_SLOW=3]="MEDIUM_SLOW",E[E.SLOW=4]="SLOW",E[E.FLUCTUATING=5]="FLUCTUATING",E))(G||{});const sZ=[[0,15,52,122,237,406,637,942,1326,1800,2369,3041,3822,4719,5737,6881,8155,9564,11111,12800,14632,16610,18737,21012,23437,26012,28737,31610,34632,37800,41111,44564,48155,51881,55737,59719,63822,68041,72369,76800,81326,85942,90637,95406,100237,105122,110052,115015,120001,125e3,131324,137795,144410,151165,158056,165079,172229,179503,186894,194400,202013,209728,217540,225443,233431,241496,249633,257834,267406,276458,286328,296358,305767,316074,326531,336255,346965,357812,367807,378880,390077,400293,411686,423190,433572,445239,457001,467489,479378,491346,501878,513934,526049,536557,548720,560922,571333,583539,591882,6e5],[0,6,21,51,100,172,274,409,583,800,1064,1382,1757,2195,2700,3276,3930,4665,5487,6400,7408,8518,9733,11059,12500,14060,15746,17561,19511,21600,23832,26214,28749,31443,34300,37324,40522,43897,47455,51200,55136,59270,63605,68147,72900,77868,83058,88473,94119,1e5,106120,112486,119101,125971,133100,140492,148154,156089,164303,172800,181584,190662,200037,209715,219700,229996,240610,251545,262807,274400,286328,298598,311213,324179,337500,351180,365226,379641,394431,409600,425152,441094,457429,474163,491300,508844,526802,545177,563975,583200,602856,622950,643485,664467,685900,707788,730138,752953,776239,8e5],[0,8,27,64,125,216,343,512,729,1e3,1331,1728,2197,2744,3375,4096,4913,5832,6859,8e3,9261,10648,12167,13824,15625,17576,19683,21952,24389,27e3,29791,32768,35937,39304,42875,46656,50653,54872,59319,64e3,68921,74088,79507,85184,91125,97336,103823,110592,117649,125e3,132651,140608,148877,157464,166375,175616,185193,195112,205379,216e3,226981,238328,250047,262144,274625,287496,300763,314432,328509,343e3,357911,373248,389017,405224,421875,438976,456533,474552,493039,512e3,531441,551368,571787,592704,614125,636056,658503,681472,704969,729e3,753571,778688,804357,830584,857375,884736,912673,941192,970299,1e6],[0,9,57,96,135,179,236,314,419,560,742,973,1261,1612,2035,2535,3120,3798,4575,5460,6458,7577,8825,10208,11735,13411,15244,17242,19411,21760,24294,27021,29949,33084,36435,40007,43808,47846,52127,56660,61450,66505,71833,77440,83335,89523,96012,102810,109923,117360,125126,133229,141677,150476,159635,169159,179056,189334,199999,211060,222522,234393,246681,259392,272535,286115,300140,314618,329555,344960,360838,377197,394045,411388,429235,447591,466464,485862,505791,526260,547274,568841,590969,613664,636935,660787,685228,710266,735907,762160,789030,816525,844653,873420,902835,932903,963632,995030,1027103,1059860],[0,10,33,80,156,270,428,640,911,1250,1663,2160,2746,3430,4218,5120,6141,7290,8573,1e4,11576,13310,15208,17280,19531,21970,24603,27440,30486,33750,37238,40960,44921,49130,53593,58320,63316,68590,74148,8e4,86151,92610,99383,106480,113906,121670,129778,138240,147061,156250,165813,175760,186096,196830,207968,219520,231491,243890,256723,27e4,283726,297910,312558,327680,343281,359370,375953,393040,410636,428750,447388,466560,486271,506530,527343,548720,570666,593190,616298,64e4,664301,689210,714733,740880,767656,795070,823128,851840,881211,911250,941963,973360,1005446,1038230,1071718,1105920,1140841,1176490,1212873,125e4],[0,4,13,32,65,112,178,276,393,540,745,967,1230,1591,1957,2457,3046,3732,4526,5440,6482,7666,9003,10506,12187,14060,16140,18439,20974,23760,26811,30146,33780,37731,42017,46656,50653,55969,60505,66560,71677,78533,84277,91998,98415,107069,114205,123863,131766,142500,151222,163105,172697,185807,196322,210739,222231,238036,250562,267840,281456,300293,315059,335544,351520,373744,390991,415050,433631,459620,479600,507617,529063,559209,582187,614566,639146,673863,700115,737280,765275,804997,834809,877201,908905,954084,987754,1035837,1071552,1122660,1160499,1214753,1254796,1312322,1354652,1415577,1460276,1524731,1571884,164e4]];function IO(E,A){if(E<100){const R=sZ[A][E-1];return A!==2?Math.floor(R*.325+IO(E,2)*.675):R}let s;switch(A){case 0:s=(Math.pow(E,4)+Math.pow(E,3)*2e3)/3500;break;case 1:s=Math.pow(E,3)*4/5;break;case 2:s=Math.pow(E,3);break;case 3:s=Math.pow(E,3)*6/5-15*Math.pow(E,2)+100*E-140;break;case 4:s=Math.pow(E,3)*5/4;break;case 5:s=Math.pow(E,3)*(E/2+8)*4/(100+E);break}return Math.floor(A!==2?s*.325+IO(E,2)*.675:s)}o(IO,"getLevelTotalExp");function sk(E,A){return IO(E,A)-IO(E-1,A)}o(sk,"getLevelRelExp");function FC(E,A){switch(E){case 0:return A?"#906060":"#f85888";case 1:return A?"#b8a038":"#f8d030";case 2:return A?"#588040":"#78c850";case 3:return A?"#807870":"#6890f0";case 4:return A?"#c03028":"#f08030";case 5:return A?"#483850":"#a040a0"}}o(FC,"getGrowthRateColor");var F=(E=>(E[E.COMMON=0]="COMMON",E[E.RARE=1]="RARE",E[E.EPIC=2]="EPIC",E[E.LEGENDARY=3]="LEGENDARY",E))(F||{}),HO=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEGACY=1]="LEGACY",E))(HO||{}),V=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E[E.LUXURY=5]="LUXURY",E))(V||{}),k=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.WINDOW=1]="WINDOW",E[E.WINDOW_ALT=2]="WINDOW_ALT",E[E.BATTLE_INFO=3]="BATTLE_INFO",E[E.PARTY=4]="PARTY",E[E.PARTY_RED=5]="PARTY_RED",E[E.SUMMARY=6]="SUMMARY",E[E.SUMMARY_ALT=7]="SUMMARY_ALT",E[E.SUMMARY_RED=8]="SUMMARY_RED",E[E.SUMMARY_BLUE=9]="SUMMARY_BLUE",E[E.SUMMARY_PINK=10]="SUMMARY_PINK",E[E.SUMMARY_GOLD=11]="SUMMARY_GOLD",E[E.SUMMARY_GRAY=12]="SUMMARY_GRAY",E[E.SUMMARY_GREEN=13]="SUMMARY_GREEN",E[E.MONEY=14]="MONEY",E[E.MONEY_WINDOW=15]="MONEY_WINDOW",E[E.STATS_LABEL=16]="STATS_LABEL",E[E.STATS_VALUE=17]="STATS_VALUE",E[E.SETTINGS_VALUE=18]="SETTINGS_VALUE",E[E.SETTINGS_LABEL=19]="SETTINGS_LABEL",E[E.SETTINGS_SELECTED=20]="SETTINGS_SELECTED",E[E.SETTINGS_LOCKED=21]="SETTINGS_LOCKED",E[E.TOOLTIP_TITLE=22]="TOOLTIP_TITLE",E[E.TOOLTIP_CONTENT=23]="TOOLTIP_CONTENT",E[E.MOVE_INFO_CONTENT=24]="MOVE_INFO_CONTENT",E[E.MOVE_PP_FULL=25]="MOVE_PP_FULL",E[E.MOVE_PP_HALF_FULL=26]="MOVE_PP_HALF_FULL",E[E.MOVE_PP_NEAR_EMPTY=27]="MOVE_PP_NEAR_EMPTY",E[E.MOVE_PP_EMPTY=28]="MOVE_PP_EMPTY",E[E.SMALLER_WINDOW_ALT=29]="SMALLER_WINDOW_ALT",E[E.BGM_BAR=30]="BGM_BAR",E[E.PERFECT_IV=31]="PERFECT_IV",E[E.ME_OPTION_DEFAULT=32]="ME_OPTION_DEFAULT",E[E.ME_OPTION_SPECIAL=33]="ME_OPTION_SPECIAL",E[E.SHADOW_TEXT=34]="SHADOW_TEXT",E))(k||{});function Se(E,A,s,R,n){const{scale:I,styleOptions:r,shadowColor:L,shadowXpos:N,shadowYpos:l}=Wn(R,a.uiTheme,n),C=a.add.text(E,A,s,r);return C.setScale(I),C.setShadow(N,l,L),r.lineSpacing||C.setLineSpacing(I*30),C.lineSpacing<12&&u.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}o(Se,"addTextObject");function RZ(E,A,s){const{scale:R,styleOptions:n,shadowColor:I,shadowXpos:r,shadowYpos:L}=Wn(A,a.uiTheme,s);E.setScale(R),E.setShadow(r,L,I),n.lineSpacing||E.setLineSpacing(R*30),E.lineSpacing<12&&u.resolvedLanguage==="ja"&&E.setLineSpacing(E.lineSpacing+35)}o(RZ,"setTextStyle");function pE(E,A,s,R,n){const{scale:I,styleOptions:r,shadowColor:L,shadowXpos:N,shadowYpos:l}=Wn(R,a.uiTheme,n),C=new Cf(a,E,A,s,r);return a.add.existing(C),C.setScale(I),C.setShadow(N,l,L),r.lineSpacing||C.setLineSpacing(I*60),C.lineSpacing<12&&u.resolvedLanguage==="ja"&&C.setLineSpacing(C.lineSpacing+35),C}o(pE,"addBBCodeTextObject");function OZ(E,A,s,R,n,I){const{scale:r,styleOptions:L}=Wn(n,a.uiTheme,I),N=new m7(a,E,A,s,R,L);return a.add.existing(N),N.setScale(r),N}o(OZ,"addTextInputObject");function Wn(E,A,s){var C;const R=u.resolvedLanguage;let n=4,I=5,r=.1666666667;const L=96;let N={fontFamily:"emerald",fontSize:96,color:eA(E,!1,A),padding:{bottom:6}};switch(u.resolvedLanguage==="ja"&&(r=.1388888889,N.padding={top:2,bottom:4}),E){case 6:case 7:case 9:case 8:case 10:case 11:case 12:case 13:case 1:case 2:case 32:case 33:n=3,I=3;break;case 16:{let U="96px";switch(R){case"de":n=3,I=3,U="80px";break;default:U="96px";break}N.fontSize=U;break}case 17:{n=3,I=3;let U="96px";switch(R){case"de":U="80px";break;default:U="96px";break}N.fontSize=U;break}case 0:case 19:case 21:case 20:break;case 3:case 14:case 15:case 22:N.fontSize=L-24,n=3.5,I=3.5;break;case 4:case 5:N.fontSize=L-30,N.fontFamily="pkmnems";break;case 23:N.fontSize=L-32,n=3,I=3;break;case 24:N.fontSize=L-40,n=3,I=3;break;case 29:N.fontSize=L-36,n=3,I=3;break;case 30:N.fontSize=L-24,n=3,I=3;break}const l=eA(E,!0,A);if(s){if(s.fontSize){const U=Number.parseInt(s.fontSize.toString().slice(0,-2))/Number.parseInt(((C=N.fontSize)==null?void 0:C.toString().slice(0,-2))??"1");n*=U}N=Object.assign(N,s)}return{scale:r,styleOptions:N,shadowColor:l,shadowXpos:n,shadowYpos:I}}o(Wn,"getTextStyleOptions");function hO(E,A,s=HO.DEFAULT){return`[color=${eA(A,!1,s)}][shadow=${eA(A,!0,s)}]${E}`}o(hO,"getBBCodeFrag");function nZ(E,A,s,R){let n=hO(E,A,s)+"[/color][/shadow]";const I=[...n.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];return n=n.replace(/@\[MONEY\]/g,r=>"@[MONEY_WINDOW]"),n=n.replace(/@\[([^{]*)\]{([^}]*)}/gi,(r,L,N)=>"[/color][/shadow]"+hO(N,k[L],s)+"[/color][/shadow]"+I),n.replace(/\[color=[^\[]*\]\[shadow=[^\[]*\]\[\/color\]\[\/shadow\]/gi,"")}o(nZ,"getTextWithColors");function eA(E,A,s=HO.DEFAULT){const R=s===HO.LEGACY;switch(E){case 0:return A?"#6b5a73":"#f8f8f8";case 1:case 24:case 25:case 23:case 18:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 26:return R?A?"#ebd773":"#a68e17":A?"#6e672c":"#ccbe00";case 27:return R?A?"#f7b18b":"#d64b00":A?"#69402a":"#d64b00";case 28:return R?A?"#fca2a2":"#e13d3d":A?"#632929":"#e13d3d";case 2:return A?"#d0d0c8":"#484848";case 3:return R?A?"#ded6b5":"#404040":A?"#6b5a73":"#f8f8f8";case 4:return A?"#707070":"#f8f8f8";case 5:return A?"#984038":"#f89890";case 6:return A?"#636363":"#f8f8f8";case 7:return R?A?"#636363":"#f8f8f8":A?"#d0d0c8":"#484848";case 8:case 22:return A?"#ffbd73":"#e70808";case 9:return A?"#006090":"#40c8f8";case 10:return A?"#984038":"#f89890";case 11:case 14:return A?"#a0a060":"#e8e8a8";case 15:return R?A?"#c07800":"#f8b050":A?"#a0a060":"#e8e8a8";case 21:case 12:return A?"#636363":"#a0a0a0";case 16:return A?"#c07800":"#f8b050";case 17:return R?A?"#d0d0c8":"#484848":A?"#6b5a73":"#f8f8f8";case 13:return A?"#306850":"#78c850";case 19:case 31:return A?"#c07800":"#f8b050";case 20:return A?"#f83018":"#f88880";case 29:return A?"#d0d0c8":"#484848";case 30:return A?"#6b5a73":"#f8f8f8";case 32:return A?"#6b5a73":"#f8f8f8";case 33:return R?A?"#c07800":"#f8b050":A?"#306850":"#78c850";case 34:return R?"#d0d0c8":"#6b5a73"}}o(eA,"getTextColor");function Rr(E){switch(E){case V.COMMON:return 16316664;case V.GREAT:return 4823288;case V.ULTRA:return 16306232;case V.ROGUE:return 14369603;case V.MASTER:return 14889413;case V.LUXURY:return 15158296}}o(Rr,"getModifierTierTextTint");function aZ(E){switch(E){case F.COMMON:return Rr(V.COMMON);case F.RARE:return Rr(V.GREAT);case F.EPIC:return Rr(V.ULTRA);case F.LEGENDARY:return Rr(V.MASTER)}}o(aZ,"getEggTierTextTint");var re=(E=>(E[E.NONE=0]="NONE",E[E.POISON=1]="POISON",E[E.TOXIC=2]="TOXIC",E[E.PARALYSIS=3]="PARALYSIS",E[E.SLEEP=4]="SLEEP",E[E.FREEZE=5]="FREEZE",E[E.BURN=6]="BURN",E[E.FAINT=7]="FAINT",E))(re||{});function Zc(E,A){if(E===i.UNKNOWN||A===i.UNKNOWN)return 1;switch(A){case i.NORMAL:switch(E){case i.FIGHTING:return 2;case i.GHOST:return 0;default:return 1}case i.FIGHTING:switch(E){case i.FLYING:case i.PSYCHIC:case i.FAIRY:return 2;case i.ROCK:case i.BUG:case i.DARK:return .5;default:return 1}case i.FLYING:switch(E){case i.ROCK:case i.ELECTRIC:case i.ICE:return 2;case i.FIGHTING:case i.BUG:case i.GRASS:return .5;case i.GROUND:return 0;default:return 1}case i.POISON:switch(E){case i.GROUND:case i.PSYCHIC:return 2;case i.FIGHTING:case i.POISON:case i.BUG:case i.GRASS:case i.FAIRY:return .5;default:return 1}case i.GROUND:switch(E){case i.WATER:case i.GRASS:case i.ICE:return 2;case i.POISON:case i.ROCK:return .5;case i.ELECTRIC:return 0;default:return 1}case i.ROCK:switch(E){case i.FIGHTING:case i.GROUND:case i.STEEL:case i.WATER:case i.GRASS:return 2;case i.NORMAL:case i.FLYING:case i.POISON:case i.FIRE:return .5;default:return 1}case i.BUG:switch(E){case i.FLYING:case i.ROCK:case i.FIRE:return 2;case i.FIGHTING:case i.GROUND:case i.GRASS:return .5;default:return 1}case i.GHOST:switch(E){case i.GHOST:case i.DARK:return 2;case i.POISON:case i.BUG:return .5;case i.NORMAL:case i.FIGHTING:return 0;default:return 1}case i.STEEL:switch(E){case i.FIGHTING:case i.GROUND:case i.FIRE:return 2;case i.NORMAL:case i.FLYING:case i.ROCK:case i.BUG:case i.STEEL:case i.GRASS:case i.PSYCHIC:case i.ICE:case i.DRAGON:case i.FAIRY:return .5;case i.POISON:return 0;default:return 1}case i.FIRE:switch(E){case i.GROUND:case i.ROCK:case i.WATER:return 2;case i.BUG:case i.STEEL:case i.FIRE:case i.GRASS:case i.ICE:case i.FAIRY:return .5;default:return 1}case i.WATER:switch(E){case i.GRASS:case i.ELECTRIC:return 2;case i.STEEL:case i.FIRE:case i.WATER:case i.ICE:return .5;default:return 1}case i.GRASS:switch(E){case i.FLYING:case i.POISON:case i.BUG:case i.FIRE:case i.ICE:return 2;case i.GROUND:case i.WATER:case i.GRASS:case i.ELECTRIC:return .5;default:return 1}case i.ELECTRIC:switch(E){case i.GROUND:return 2;case i.FLYING:case i.STEEL:case i.ELECTRIC:return .5;default:return 1}case i.PSYCHIC:switch(E){case i.BUG:case i.GHOST:case i.DARK:return 2;case i.FIGHTING:case i.PSYCHIC:return .5;default:return 1}case i.ICE:switch(E){case i.FIGHTING:case i.ROCK:case i.STEEL:case i.FIRE:return 2;case i.ICE:return .5;default:return 1}case i.DRAGON:switch(E){case i.ICE:case i.DRAGON:case i.FAIRY:return 2;case i.FIRE:case i.WATER:case i.GRASS:case i.ELECTRIC:return .5;default:return 1}case i.DARK:switch(E){case i.FIGHTING:case i.BUG:case i.FAIRY:return 2;case i.GHOST:case i.DARK:return .5;case i.PSYCHIC:return 0;default:return 1}case i.FAIRY:switch(E){case i.POISON:case i.STEEL:return 2;case i.FIGHTING:case i.BUG:case i.DARK:return .5;case i.DRAGON:return 0;default:return 1}case i.STELLAR:return 1}return 1}o(Zc,"getTypeDamageMultiplier");function iZ(E,A){switch(E){case 0:return"#929292";case .125:return"#FF5500";case .25:return"#FF7400";case .5:return"#FE8E00";case 1:return;case 2:return"#4AA500";case 4:return"#4BB400";case 8:return"#52C200"}}o(iZ,"getTypeDamageMultiplierColor");function BR(E){switch(E){case i.NORMAL:return[168,168,120];case i.FIGHTING:return[192,48,40];case i.FLYING:return[168,144,240];case i.POISON:return[160,64,160];case i.GROUND:return[224,192,104];case i.ROCK:return[184,160,56];case i.BUG:return[168,184,32];case i.GHOST:return[112,88,152];case i.STEEL:return[184,184,208];case i.FIRE:return[240,128,48];case i.WATER:return[104,144,240];case i.GRASS:return[120,200,80];case i.ELECTRIC:return[248,208,48];case i.PSYCHIC:return[248,88,136];case i.ICE:return[152,216,216];case i.DRAGON:return[112,56,248];case i.DARK:return[112,88,72];case i.FAIRY:return[232,136,200];case i.STELLAR:return[255,255,255];default:return[0,0,0]}}o(BR,"getTypeRgb");var p=(E=>(E[E.HP=0]="HP",E[E.ATK=1]="ATK",E[E.DEF=2]="DEF",E[E.SPATK=3]="SPATK",E[E.SPDEF=4]="SPDEF",E[E.SPD=5]="SPD",E[E.ACC=6]="ACC",E[E.EVA=7]="EVA",E))(p||{});const Hn=[0,1,2,3,4,5],ka=[1,2,3,4,5],YO=[1,2,3,4,5,6,7],Rk=[1,2,3,4,5,6];function xb(E,A){return E===1?A?"battle:statRose":"battle:statFell":E===2?A?"battle:statSharplyRose":"battle:statHarshlyFell":E>2&&E<=6?A?"battle:statRoseDrastically":"battle:statSeverelyFell":A?"battle:statWontGoAnyHigher":"battle:statWontGoAnyLower"}o(xb,"getStatStageChangeDescriptionKey");function mE(E){return`pokemonInfo:Stat.${p[E]}`}o(mE,"getStatKey");function Or(E){return`pokemonInfo:Stat.${p[E]}shortened`}o(Or,"getShortenedStatKey");var en=(E=>(E.CANDY_UPGRADE_NOTIFICATION_CHANGED="onCandyUpgradeNotificationChanged",E.MOVE_USED="onMoveUsed",E.BERRY_USED="onBerryUsed",E.ENCOUNTER_PHASE="onEncounterPhase",E.TURN_INIT="onTurnInit",E.TURN_END="onTurnEnd",E.NEW_ARENA="onNewArena",E))(en||{});const Qf=class Qf extends Event{constructor(A){super("onCandyUpgradeNotificationChanged"),this.newValue=A}};o(Qf,"CandyUpgradeNotificationChangedEvent");let Xc=Qf;const $f=class $f extends Event{constructor(A,s,R){super("onMoveUsed"),this.pokemonId=A,this.move=s,this.ppUsed=R}};o($f,"MoveUsedEvent");let bT=$f;const Jf=class Jf extends Event{constructor(A){super("onBerryUsed"),this.berryModifier=A}};o(Jf,"BerryUsedEvent");let Qc=Jf;const zf=class zf extends Event{constructor(){super("onEncounterPhase")}};o(zf,"EncounterPhaseEvent");let $c=zf;const jf=class jf extends Event{constructor(){super("onTurnInit")}};o(jf,"TurnInitEvent");let Jc=jf;const qf=class qf extends Event{constructor(A){super("onTurnEnd"),this.turnCount=A}};o(qf,"TurnEndEvent");let zc=qf;const eB=class eB extends Event{constructor(){super("onNewArena")}};o(eB,"NewArenaEvent");let jc=eB;var gt=(E=>(E[E.SITRUS=0]="SITRUS",E[E.LUM=1]="LUM",E[E.ENIGMA=2]="ENIGMA",E[E.LIECHI=3]="LIECHI",E[E.GANLON=4]="GANLON",E[E.PETAYA=5]="PETAYA",E[E.APICOT=6]="APICOT",E[E.SALAC=7]="SALAC",E[E.LANSAT=8]="LANSAT",E[E.STARF=9]="STARF",E[E.LEPPA=10]="LEPPA",E))(gt||{});const tB=class tB extends Phaser.GameObjects.Container{constructor(A){super(a,0,0),this.flyoutWidth=118,this.flyoutHeight=23,this.flyoutText=new Array(4),this.moveInfo=new Array,this.flyoutVisible=!1,this.onMoveUsedEvent=s=>this.onMoveUsed(s),this.onBerryUsedEvent=s=>this.onBerryUsed(s),this.player=A,this.translationX=this.player?-this.flyoutWidth:this.flyoutWidth,this.anchorX=this.player?-130:-40,this.anchorY=-2.5+(this.player?-18.5:-13),this.flyoutParent=a.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutBackground=a.add.sprite(0,0,"pbinfo_enemy_boss_stats"),this.flyoutBackground.setOrigin(0,0),this.flyoutParent.add(this.flyoutBackground),this.flyoutContainer=a.add.container(44+(this.player?-this.flyoutWidth:0),2),this.flyoutParent.add(this.flyoutContainer);for(let s=0;s<4;s++)this.flyoutText[s]=Se(this.flyoutWidth/4+this.flyoutWidth/2*(s%2),this.flyoutHeight/4+this.flyoutHeight/2*(s<2?0:1),"???",k.BATTLE_INFO),this.flyoutText[s].setFontSize(45),this.flyoutText[s].setLineSpacing(-10),this.flyoutText[s].setAlign("center"),this.flyoutText[s].setOrigin();this.flyoutContainer.add(this.flyoutText),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(a,this.flyoutWidth/2,0,1,this.flyoutHeight+(a.uiTheme===HO.LEGACY?1:0),2171169).setOrigin(.5,0)),this.flyoutContainer.add(new Phaser.GameObjects.Rectangle(a,0,this.flyoutHeight/2,this.flyoutWidth+6,1,2171169).setOrigin(0,.5))}initInfo(A){this.pokemon=A,this.name=`Flyout ${ee(this.pokemon)}`,this.flyoutParent.name=`Flyout Parent ${ee(this.pokemon)}`,a.eventTarget.addEventListener(en.MOVE_USED,this.onMoveUsedEvent),a.eventTarget.addEventListener(en.BERRY_USED,this.onBerryUsedEvent)}setText(){for(let A=0;A<this.flyoutText.length;A++){const s=this.flyoutText[A],R=this.moveInfo[A];if(!R)continue;const n=R.maxPp-R.ppUsed;s.text=`${R.move.name}  ${n}/${R.maxPp}`}}onMoveUsed(A){var n;const s=A;if(!s||s.pokemonId!==((n=this.pokemon)==null?void 0:n.id)||s.move.id===t.STRUGGLE)return;const R=this.moveInfo.find(I=>(I==null?void 0:I.move.id)===s.move.id);R?R.ppUsed=s.ppUsed:this.moveInfo.push({move:s.move,maxPp:s.move.pp,ppUsed:s.ppUsed}),this.setText()}onBerryUsed(A){var n;const s=A;if(!s||s.berryModifier.pokemonId!==((n=this.pokemon)==null?void 0:n.id)||s.berryModifier.berryType!==gt.LEPPA)return;const R=this.moveInfo.find(I=>I.ppUsed===I.maxPp);R&&(R.ppUsed=Math.max(R.ppUsed-10,0),this.setText())}toggleFlyout(A){this.flyoutVisible=A,a.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0})}destroy(A){a.eventTarget.removeEventListener(en.MOVE_USED,this.onMoveUsedEvent),a.eventTarget.removeEventListener(en.BERRY_USED,this.onBerryUsedEvent),super.destroy(A)}};o(tB,"BattleFlyout");let qc=tB;const Mr=[],AB=class AB extends Phaser.Scene{constructor(){super(...arguments),this.scaledCanvas={width:1920/6,height:1080/6}}getCachedUrl(A){const s=this.game.manifest;if(s){const R=s[`/${A}`];R&&(A+=`?t=${R}`)}return A}loadImage(A,s,R){R||(R=`${A}.png`),this.load.image(A,this.getCachedUrl(`images/${s}/${R}`)),s.startsWith("ui")&&(Mr.push(A),s=s.replace("ui","ui/legacy"),this.load.image(`${A}_legacy`,this.getCachedUrl(`images/${s}/${R}`)))}loadSpritesheet(A,s,R,n){n||(n=`${A}.png`),this.load.spritesheet(A,this.getCachedUrl(`images/${s}/${n}`),{frameWidth:R,frameHeight:R}),s.startsWith("ui")&&(Mr.push(A),s=s.replace("ui","ui/legacy"),this.load.spritesheet(`${A}_legacy`,this.getCachedUrl(`images/${s}/${n}`),{frameWidth:R,frameHeight:R}))}loadAtlas(A,s,R){R||(R=A),s&&(s+="/"),this.load.atlas(A,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)),s.startsWith("ui")&&(Mr.push(A),s=s.replace("ui","ui/legacy"),this.load.atlas(`${A}_legacy`,this.getCachedUrl(`images/${s}${R}.png`),this.getCachedUrl(`images/${s}${R}.json`)))}loadSe(A,s,R){R||(R=`${A}.wav`),s?s+="/":s="se/",Array.isArray(R)||(R=[R]);for(const n of R)this.load.audio(s+A,this.getCachedUrl(`audio/${s}${n}`))}loadBgm(A,s){s||(s=`${A}.mp3`),this.load.audio(A,this.getCachedUrl(`audio/bgm/${s}`))}};o(AB,"SceneBase");let YC=AB;var dR=(E=>(E[E.NORMAL=0]="NORMAL",E[E.THIN=1]="THIN",E[E.XTHIN=2]="XTHIN",E))(dR||{});function xL(E){switch(E){case 1:return"_thin";case 2:return"_xthin";default:return""}}o(xL,"getWindowVariantSuffix");const IZ={[HO.DEFAULT]:{0:["#6b5a73","#DD5748","#7E4955"],1:["#6b5a73","#48DDAA","#4D7574"],2:["#6b5a73","#C5C5C5","#766D7E"],3:["#6b5a73","#EBC07C","#836C66"],4:["#686868","#E8E8E8","#919191"]},[HO.LEGACY]:{0:["#706880","#8888c8","#484868"],1:["#d04028","#e0a028","#902008"],2:["#48b840","#88d880","#089040"],3:["#2068d0","#80b0e0","#104888"],4:["#706880","#8888c8","#484868"]}};function Gt(E,A,s,R,n,I,r,L,N){N===void 0&&(N=0);const l=a.uiTheme?6:8,C=a.add.nineslice(E,A,`window_${a.windowType}${xL(N)}`,void 0,s,R,l,l,l,l);if(C.setOrigin(0,0),I||n||r||L){const U=new Phaser.GameObjects.Rectangle(a,6*(E-(I?2:0)-(r||0)),6*(A+(n?2:0)+(L||0)),s-(I?2:0),R-(n?2:0),16777215);U.setOrigin(0),U.setScale(6);const D=U.createGeometryMask();C.setMask(D)}return C}o(Gt,"addWindow");function rZ(E){const A=[],s=[],R=o(r=>{var L,N;if(r.hasOwnProperty("children")&&r.children instanceof Phaser.GameObjects.DisplayList){const l=r.children;for(const C of l.getAll())R(C)}else if(r instanceof Phaser.GameObjects.Container)for(const l of r.getAll())R(l);else r instanceof Phaser.GameObjects.NineSlice?r.texture.key.startsWith("window_")?A.push([r,r.texture.key.endsWith(xL(2))?2:r.texture.key.endsWith(xL(1))?1:0]):((L=r.texture)==null?void 0:L.key)==="namebox"&&s.push(r):r instanceof Phaser.GameObjects.Sprite&&((N=r.texture)==null?void 0:N.key)==="bg"&&s.push(r)},"traverse");R(a),a.windowType=E;const n=document.documentElement.style;["base","light","dark"].map((r,L)=>n.setProperty(`--color-${r}`,IZ[a.uiTheme][E-1][L]));const I=`window_${E}`;for(const[r,L]of A)r.setTexture(`${I}${xL(L)}`);for(const r of s)r.setFrame(E)}o(rZ,"updateWindowType");function LZ(){const E=a.add.image;a.add.image=function(R,n,I,r){let L=!1;typeof I=="string"&&a.uiTheme&&Mr.includes(I)&&(L=!0,I+="_legacy");const N=E.apply(this,[R,n,I,r]);if(L){const l=N.setTexture;N.setTexture=function(C,U){return C+="_legacy",l.apply(this,[C,U])}}return N};const A=a.add.sprite;a.add.sprite=function(R,n,I,r){let L=!1;typeof I=="string"&&a.uiTheme&&Mr.includes(I)&&(L=!0,I+="_legacy");const N=A.apply(this,[R,n,I,r]);if(L){const l=N.setTexture;N.setTexture=function(C,U){return C+="_legacy",l.apply(this,[C,U])}}return N};const s=a.add.nineslice;a.add.nineslice=function(R,n,I,r,L,N,l,C,U,D){let M=!1;typeof I=="string"&&a.uiTheme&&Mr.includes(I)&&(M=!0,I+="_legacy");const h=s.apply(this,[R,n,I,r,L,N,l,C,U,D]);if(M){const _=h.setTexture;h.setTexture=function(d,f,H,B){return d+="_legacy",_.apply(this,[d,f,H,B])}}return h}}o(LZ,"addUiThemeOverrides");var cr=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FAST=1]="FAST",E[E.FASTER=2]="FASTER",E[E.SKIP=3]="SKIP",E))(cr||{});const Go=class Go extends Phaser.GameObjects.Container{constructor(A,s,R){super(a,A,s),this.statOrderPlayer=[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.ACC,p.EVA,p.SPD],this.statOrderEnemy=[p.HP,p.ATK,p.DEF,p.SPATK,p.SPDEF,p.ACC,p.EVA,p.SPD],this.baseY=s,this.player=R,this.mini=!R,this.boss=!1,this.offset=!1,this.lastName=null,this.lastTeraType=i.UNKNOWN,this.lastStatus=re.NONE,this.lastHp=-1,this.lastMaxHp=-1,this.lastHpFrame=null,this.lastExp=-1,this.lastLevelExp=-1,this.lastLevel=-1,this.setVisible(!1),this.box=a.add.sprite(0,0,this.getTextureName()),this.box.setName("box"),this.box.setOrigin(1,.5),this.add(this.box),this.nameText=Se(R?-115:-124,R?-15.2:-11.2,"",k.BATTLE_INFO),this.nameText.setName("text_name"),this.nameText.setOrigin(0,0),this.add(this.nameText),this.genderText=Se(0,0,"",k.BATTLE_INFO),this.genderText.setName("text_gender"),this.genderText.setOrigin(0,0),this.genderText.setPositionRelative(this.nameText,0,2),this.add(this.genderText),this.player||(this.ownedIcon=a.add.sprite(0,0,"icon_owned"),this.ownedIcon.setName("icon_owned"),this.ownedIcon.setVisible(!1),this.ownedIcon.setOrigin(0,0),this.ownedIcon.setPositionRelative(this.nameText,0,11.75),this.add(this.ownedIcon),this.championRibbon=a.add.sprite(0,0,"champion_ribbon"),this.championRibbon.setName("icon_champion_ribbon"),this.championRibbon.setVisible(!1),this.championRibbon.setOrigin(0,0),this.championRibbon.setPositionRelative(this.nameText,8,11.75),this.add(this.championRibbon)),this.teraIcon=a.add.sprite(0,0,"icon_tera"),this.teraIcon.setName("icon_tera"),this.teraIcon.setVisible(!1),this.teraIcon.setOrigin(0,0),this.teraIcon.setScale(.5),this.teraIcon.setPositionRelative(this.nameText,0,2),this.teraIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.teraIcon),this.shinyIcon=a.add.sprite(0,0,"shiny_star"),this.shinyIcon.setName("icon_shiny"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.shinyIcon.setPositionRelative(this.nameText,0,2),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.shinyIcon),this.fusionShinyIcon=a.add.sprite(0,0,"shiny_star_2"),this.fusionShinyIcon.setName("icon_fusion_shiny"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.5),this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.add(this.fusionShinyIcon),this.splicedIcon=a.add.sprite(0,0,"icon_spliced"),this.splicedIcon.setName("icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.5),this.splicedIcon.setPositionRelative(this.nameText,0,2),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.add(this.splicedIcon),this.statusIndicator=a.add.sprite(0,0,Ds("statuses")),this.statusIndicator.setName("icon_status"),this.statusIndicator.setVisible(!1),this.statusIndicator.setOrigin(0,0),this.statusIndicator.setPositionRelative(this.nameText,0,11.5),this.add(this.statusIndicator),this.levelContainer=a.add.container(R?-41:-50,R?-10:-5),this.levelContainer.setName("container_level"),this.add(this.levelContainer);const n=a.add.image(0,0,"overlay_lv");if(this.levelContainer.add(n),this.hpBar=a.add.image(R?-61:-71,R?-1:4.5,"overlay_hp"),this.hpBar.setName("hp_bar"),this.hpBar.setOrigin(0),this.add(this.hpBar),this.hpBarSegmentDividers=[],this.levelNumbersContainer=a.add.container(9.5,a.uiTheme?0:-.5),this.levelNumbersContainer.setName("container_level"),this.levelContainer.add(this.levelNumbersContainer),this.player){this.hpNumbersContainer=a.add.container(-15,10),this.hpNumbersContainer.setName("container_hp"),this.add(this.hpNumbersContainer);const N=a.add.image(-98,18,"overlay_exp");N.setName("overlay_exp"),N.setOrigin(0),this.add(N);const l=a.make.graphics({});l.setScale(6),l.fillStyle(16777215),l.beginPath(),l.fillRect(127,126,85,2);const C=l.createGeometryMask();N.setMask(C),this.expBar=N,this.expMaskRect=l}this.statsContainer=a.add.container(0,0),this.statsContainer.setName("container_stats"),this.statsContainer.setAlpha(0),this.add(this.statsContainer),this.statsBox=a.add.sprite(0,0,`${this.getTextureName()}_stats`),this.statsBox.setName("box_stats"),this.statsBox.setOrigin(1,.5),this.statsContainer.add(this.statsBox),this.statNumbers=[],this.statValuesContainer=a.add.container(0,0),this.statsContainer.add(this.statValuesContainer);const I=this.player?-this.statsBox.width+8:-this.statsBox.width+5,r=this.player?4:2,L=this.player?1:0;this.statOrder=this.player?this.statOrderPlayer:this.statOrderEnemy,this.statOrder.map((N,l)=>{const C=l>L?this.statNumbers[Math.max(l-2,0)].x+this.statNumbers[Math.max(l-2,0)].width+r:I,U=-this.statsBox.height/2+4;let D;this.statOrder[l]===p.SPD||this.statOrder[l]===p.HP?D=U+5:D=U+(!!(l%2)===this.player?10:0);const M=a.add.sprite(C,D,"pbinfo_stat",p[N]);M.setName("icon_stat_label_"+l.toString()),M.setOrigin(0,0),this.statValuesContainer.add(M);const h=a.add.sprite(C+M.width,D,"pbinfo_stat_numbers",this.statOrder[l]!==p.HP?"3":"empty");h.setName("icon_stat_number_"+l.toString()),h.setOrigin(0,0),this.statNumbers.push(h),this.statValuesContainer.add(h),this.statOrder[l]===p.HP&&(M.setVisible(!1),h.setVisible(!1))}),this.player||(this.flyoutMenu=new qc(this.player),this.add(this.flyoutMenu),this.moveBelow(this.flyoutMenu,this.box)),this.type1Icon=a.add.sprite(R?-139:-15,R?-17:-15.5,`pbinfo_${R?"player":"enemy"}_type1`),this.type1Icon.setName("icon_type_1"),this.type1Icon.setOrigin(0,0),this.add(this.type1Icon),this.type2Icon=a.add.sprite(R?-139:-15,R?-1:-2.5,`pbinfo_${R?"player":"enemy"}_type2`),this.type2Icon.setName("icon_type_2"),this.type2Icon.setOrigin(0,0),this.add(this.type2Icon),this.type3Icon=a.add.sprite(R?-154:0,R?-17:-15.5,`pbinfo_${R?"player":"enemy"}_type`),this.type3Icon.setName("icon_type_3"),this.type3Icon.setOrigin(0,0),this.add(this.type3Icon),this.player||(this.effectivenessContainer=a.add.container(0,0),this.effectivenessContainer.setPositionRelative(this.type1Icon,22,4),this.effectivenessContainer.setVisible(!1),this.add(this.effectivenessContainer),this.effectivenessText=Se(5,4.5,"",k.BATTLE_INFO),this.effectivenessWindow=Gt(0,0,0,20,void 0,!1,void 0,void 0,dR.XTHIN),this.effectivenessContainer.add(this.effectivenessWindow),this.effectivenessContainer.add(this.effectivenessText))}getStatsValueContainer(){return this.statValuesContainer}initInfo(A){var N;this.updateNameText(A);const s=this.nameText.displayWidth;this.name=A.getNameToRender(),this.box.name=A.getNameToRender(),(N=this.flyoutMenu)==null||N.initInfo(A),this.genderText.setText(kI(A.gender)),this.genderText.setColor(sn(A.gender)),this.genderText.setPositionRelative(this.nameText,s,0),this.lastTeraType=A.getTeraType(),this.teraIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1,2),this.teraIcon.setVisible(A.isTerastallized),this.teraIcon.on("pointerover",()=>{A.isTerastallized&&a.ui.showTooltip("",u.t("fightUiHandler:teraHover",{type:u.t(`pokemonInfo:Type.${i[this.lastTeraType]}`)}))}),this.teraIcon.on("pointerout",()=>a.ui.hideTooltip());const R=A.isFusion();this.splicedIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),2.5),this.splicedIcon.setVisible(R),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var l;return a.ui.showTooltip("",`${A.species.getName(A.formIndex)}/${(l=A.fusionSpecies)==null?void 0:l.getName(A.fusionFormIndex)}`)}),this.splicedIcon.on("pointerout",()=>a.ui.hideTooltip()));const n=R&&A.shiny&&A.fusionShiny,I=n?A.variant:A.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,s+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5),this.shinyIcon.setTexture(`shiny_star${n?"_1":""}`),this.shinyIcon.setVisible(A.isShiny()),this.shinyIcon.setTint(lE(I)),this.shinyIcon.visible){const l=n||I?`${I===2?u.t("common:epicShiny"):I===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${n?`/${A.fusionVariant===2?u.t("common:epicShiny"):A.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>a.ui.showTooltip("",`${u.t("common:shinyOnHover")}${l?` (${l})`:""}`)),this.shinyIcon.on("pointerout",()=>a.ui.hideTooltip())}if(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(n),R&&this.fusionShinyIcon.setTint(lE(A.fusionVariant)),!this.player){this.nameText.visible&&(this.nameText.on("pointerover",()=>a.ui.showTooltip("",u.t("battleInfo:generation",{generation:u.t(`starterSelectUiHandler:gen${A.species.generation}`)}))),this.nameText.on("pointerout",()=>a.ui.hideTooltip()));const l=a.gameData.dexData[A.species.speciesId];this.ownedIcon.setVisible(!!l.caughtAttr);const C=A.getDexAttr();a.gameMode.isClassic&&a.gameData.starterData[A.species.getRootSpeciesId()].classicWinCount>0&&a.gameData.starterData[A.species.getRootSpeciesId(!0)].classicWinCount>0&&this.championRibbon.setVisible(!0);const U=(l.caughtAttr&C)<C,D=a.gameData.starterData[A.species.getRootSpeciesId()].abilityAttr,M=A.checkIfPlayerHasAbilityOfStarter(D);(U||!M)&&this.ownedIcon.setTint(8421504),this.boss&&this.updateBossSegmentDividers(A)}this.hpBar.setScale(A.getHpRatio(!0),1),this.lastHpFrame=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low",this.hpBar.setFrame(this.lastHpFrame),this.player&&this.setHpNumbers(A.hp,A.getMaxHp()),this.lastHp=A.hp,this.lastMaxHp=A.getMaxHp(),this.setLevel(A.level),this.lastLevel=A.level,this.shinyIcon.setVisible(A.isShiny());const r=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${r.length>1?"1":""}`),this.type1Icon.setFrame(i[r[0]].toLowerCase()),this.type2Icon.setVisible(r.length>1),this.type3Icon.setVisible(r.length>2),r.length>1&&this.type2Icon.setFrame(i[r[1]].toLowerCase()),r.length>2&&this.type3Icon.setFrame(i[r[2]].toLowerCase()),this.player&&(this.expMaskRect.x=A.levelExp/IO(A.level,A.species.growthRate)*510,this.lastExp=A.exp,this.lastLevelExp=A.levelExp,this.statValuesContainer.setPosition(8,7));const L=this.statOrder.map(()=>0);this.lastStats=L.join(""),this.updateStats(L)}getTextureName(){return`pbinfo_${this.player?"player":"enemy"}${!this.player&&this.boss?"_boss":this.mini?"_mini":""}`}setMini(A){if(this.mini===A)return;this.mini=A,this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`),this.player&&(this.y-=12*(A?1:-1),this.baseY=this.y),[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.statusIndicator,this.levelContainer].forEach(n=>n.y+=1.5*(A?-1:1)),[this.type1Icon,this.type2Icon,this.type3Icon].forEach(n=>{n.x+=4*(A?1:-1),n.y+=-8*(A?1:-1)}),this.statValuesContainer.x+=2*(A?1:-1),this.statValuesContainer.y+=-7*(A?1:-1),[this.hpNumbersContainer,this.expBar].forEach(n=>n.setVisible(!A))}toggleStats(A){a.tweens.add({targets:this.statsContainer,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0})}updateBossSegments(A){const s=!!A.bossSegments;s!==this.boss&&(this.boss=s,[this.nameText,this.genderText,this.teraIcon,this.splicedIcon,this.shinyIcon,this.ownedIcon,this.championRibbon,this.statusIndicator,this.levelContainer,this.statValuesContainer].map(R=>R.x+=48*(s?-1:1)),this.hpBar.x+=38*(s?-1:1),this.hpBar.y+=2*(this.boss?-1:1),this.hpBar.setTexture(`overlay_hp${s?"_boss":""}`),this.box.setTexture(this.getTextureName()),this.statsBox.setTexture(`${this.getTextureName()}_stats`)),this.bossSegments=s?A.bossSegments:0,this.updateBossSegmentDividers(A)}updateBossSegmentDividers(A){var s;for(;this.hpBarSegmentDividers.length;)(s=this.hpBarSegmentDividers.pop())==null||s.destroy();if(this.boss&&this.bossSegments>1){const R=a.uiTheme,n=A.getMaxHp();for(let I=1;I<this.bossSegments;I++){const r=Math.round(n/this.bossSegments*I)/n*this.hpBar.width,L=a.add.rectangle(0,0,1,this.hpBar.height-(R?0:1),A.bossSegmentIndex>=I?16777215:4210752);L.setOrigin(.5,0),L.setName("hpBar_divider_"+I.toString()),this.add(L),this.moveBelow(L,this.statsContainer),L.setPositionRelative(this.hpBar,r,R?0:1),this.hpBarSegmentDividers.push(L)}}}setOffset(A){this.offset!==A&&(this.offset=A,this.x+=10*(this.offset===this.player?1:-1),this.y+=27*(this.offset?1:-1),this.baseY=this.y)}updateInfo(A,s){return new Promise(R=>{var D,M;if(!a)return R();const n=this.lastName!==A.getNameToRender();n&&(this.updateNameText(A),this.genderText.setPositionRelative(this.nameText,this.nameText.displayWidth,0));const I=A.isTerastallized?A.getTeraType():i.UNKNOWN,r=this.lastTeraType!==I;if(r&&(this.teraIcon.setVisible(I!==i.UNKNOWN),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.teraIcon.setTintFill(Phaser.Display.Color.GetColor(...BR(I))),this.lastTeraType=I),(n||r)&&(this.splicedIcon.setVisible(!!A.fusionSpecies),this.teraIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1,2),this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0),1.5),this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+this.genderText.displayWidth+1+(this.teraIcon.visible?this.teraIcon.displayWidth+1:0)+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0),2.5)),this.lastStatus!==(((D=A.status)==null?void 0:D.effect)||re.NONE)){this.lastStatus=((M=A.status)==null?void 0:M.effect)||re.NONE,this.lastStatus!==re.NONE&&this.statusIndicator.setFrame(re[this.lastStatus].toLowerCase());const h=this.player?0:(this.ownedIcon.visible?8:0)+(this.championRibbon.visible?8:0);this.statusIndicator.setPositionRelative(this.nameText,h,11.5),this.statusIndicator.setVisible(!!this.lastStatus)}const L=A.getTypes(!0);this.type1Icon.setTexture(`pbinfo_${this.player?"player":"enemy"}_type${L.length>1?"1":""}`),this.type1Icon.setFrame(i[L[0]].toLowerCase()),this.type2Icon.setVisible(L.length>1),this.type3Icon.setVisible(L.length>2),L.length>1&&this.type2Icon.setFrame(i[L[1]].toLowerCase()),L.length>2&&this.type3Icon.setFrame(i[L[2]].toLowerCase());const N=o(()=>{const h=this.hpBar.scaleX>.5?"high":this.hpBar.scaleX>.25?"medium":"low";h!==this.lastHpFrame&&(this.hpBar.setFrame(h),this.lastHpFrame=h)},"updateHpFrame"),l=o(()=>{let h=s?0:Phaser.Math.Clamp(Math.abs(this.lastHp-A.hp)*5,250,5e3);const _=a.hpBarSpeed;_&&(h=_>=3?0:h/Math.pow(2,_)),a.tweens.add({targets:this.hpBar,ease:"Sine.easeOut",scaleX:A.getHpRatio(!0),duration:h,onUpdate:o(()=>{if(this.player&&this.lastHp!==A.hp){const d=Math.ceil(this.hpBar.scaleX*A.getMaxHp());this.setHpNumbers(d,A.getMaxHp()),this.lastHp=d}N()},"onUpdate"),onComplete:o(()=>{N(),R()},"onComplete")}),this.player||(this.lastHp=A.hp),this.lastMaxHp=A.getMaxHp()},"updatePokemonHp");if(this.player){const h=A.level>=a.getMaxExpLevel();if(this.lastExp!==A.exp||this.lastLevel!==A.level){const _=R,d=Math.max(Phaser.Tweens.Builders.GetEaseFunction("Cubic.easeIn")(1-Math.min(A.level-this.lastLevel,10)/10),.1);R=o(()=>this.updatePokemonExp(A,!1,d).then(()=>_()),"resolve")}else h!==this.lastLevelCapped&&this.setLevel(A.level);this.lastLevelCapped=h}if(this.lastHp!==A.hp||this.lastMaxHp!==A.getMaxHp())return l();!this.player&&this.lastLevel!==A.level&&(this.setLevel(A.level),this.lastLevel=A.level);const C=A.getStatStages(),U=C.join("");this.lastStats!==U&&(this.updateStats(C),this.lastStats=U),this.shinyIcon.setVisible(A.isShiny()),R()})}updateNameText(A){let s=A.getNameToRender().replace(/[♂♀]/g,""),R;const n=Se(0,0,s,k.BATTLE_INFO);for(R=n.displayWidth;R>(this.player||!this.boss?60:98)-((A.gender!==At.GENDERLESS?6:0)+(A.fusionSpecies?8:0)+(A.isShiny()?8:0)+(Math.min(A.level.toString().length,3)-3)*8);)s=`${s.slice(0,s.endsWith(".")?-2:-1).trimEnd()}.`,n.setText(s),R=n.displayWidth;n.destroy(),this.nameText.setText(s),this.lastName=A.getNameToRender(),this.nameText.visible&&this.nameText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.nameText.width,this.nameText.height),Phaser.Geom.Rectangle.Contains)}updatePokemonExp(A,s,R=1){return new Promise(n=>{const I=this.lastLevel<A.level,r=sk(this.lastLevel+1,A.species.growthRate),L=I?r:A.levelExp;let N=r?L/r:0;this.lastLevel>=a.getMaxExpLevel(!0)&&(I?N=1:N=0,s=!0);const l=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.max(this.lastLevel-100,0)/150);let C=this.visible&&!s?(L-this.lastLevelExp)/r*Go.EXP_GAINS_DURATION_BASE*l*R:0;const U=a.expGainsSpeed;U&&U>=cr.DEFAULT&&(C=U>=cr.SKIP?cr.DEFAULT:C/Math.pow(2,U)),N===1?(this.lastLevelExp=0,this.lastLevel++):(this.lastExp=A.exp,this.lastLevelExp=A.levelExp),C&&a.playSound("se/exp"),a.tweens.add({targets:this.expMaskRect,ease:"Sine.easeIn",x:N*510,duration:C,onComplete:o(()=>{if(!a)return n();if(C&&a.sound.stopByKey("se/exp"),N===1){a.playSound("se/level_up"),this.setLevel(this.lastLevel),a.time.delayedCall(500*R,()=>{this.expMaskRect.x=0,this.updateInfo(A,s).then(()=>n())});return}n()},"onComplete")})})}setLevel(A){const s=A>=a.getMaxExpLevel();this.levelNumbersContainer.removeAll(!0);const R=A.toString();for(let n=0;n<R.length;n++)this.levelNumbersContainer.add(a.add.image(n*8,0,`numbers${s&&this.player?"_red":""}`,R[n]));this.levelContainer.setX((this.player?-41:-50)-8*Math.max(R.length-3,0))}setHpNumbers(A,s){if(!this.player||!a)return;this.hpNumbersContainer.removeAll(!0);const R=A.toString(),n=s.toString();let I=0;for(let r=n.length-1;r>=0;r--)this.hpNumbersContainer.add(a.add.image(I++*-8,0,"numbers",n[r]));this.hpNumbersContainer.add(a.add.image(I++*-8,0,"numbers","/"));for(let r=R.length-1;r>=0;r--)this.hpNumbersContainer.add(a.add.image(I++*-8,0,"numbers",R[r]))}updateStats(A){this.statOrder.map((s,R)=>{s!==p.HP&&this.statNumbers[R].setFrame(A[s-1].toString())})}toggleFlyout(A){var s,R;(s=this.flyoutMenu)==null||s.toggleFlyout(A),A?(R=this.effectivenessContainer)==null||R.setVisible(!1):this.updateEffectiveness(this.currentEffectiveness)}updateEffectiveness(A){var s;if(!this.player){if(this.currentEffectiveness=A,!a.typeHints||A===void 0||(s=this.flyoutMenu)!=null&&s.flyoutVisible){this.effectivenessContainer.setVisible(!1);return}this.effectivenessText.setText(A),this.effectivenessWindow.width=10+this.effectivenessText.displayWidth,this.effectivenessContainer.setVisible(!0)}}getBaseY(){return this.baseY}resetY(){this.y=this.baseY}};o(Go,"BattleInfo"),Go.EXP_GAINS_DURATION_BASE=1650;let kT=Go;const EB=class EB extends kT{constructor(){super(Math.floor(a.game.canvas.width/6)-10,-72,!0)}};o(EB,"PlayerBattleInfo");let WC=EB;const sB=class sB extends kT{constructor(){super(140,-141,!1)}setMini(A){}};o(sB,"EnemyBattleInfo");let eh=sB;var ct=(E=>(E[E.NONE=0]="NONE",E[E.MAKES_CONTACT=1]="MAKES_CONTACT",E[E.IGNORE_PROTECT=2]="IGNORE_PROTECT",E[E.SOUND_BASED=4]="SOUND_BASED",E[E.HIDE_USER=8]="HIDE_USER",E[E.HIDE_TARGET=16]="HIDE_TARGET",E[E.BITING_MOVE=32]="BITING_MOVE",E[E.PULSE_MOVE=64]="PULSE_MOVE",E[E.PUNCHING_MOVE=128]="PUNCHING_MOVE",E[E.SLICING_MOVE=256]="SLICING_MOVE",E[E.RECKLESS_MOVE=512]="RECKLESS_MOVE",E[E.BALLBOMB_MOVE=1024]="BALLBOMB_MOVE",E[E.POWDER_MOVE=2048]="POWDER_MOVE",E[E.DANCE_MOVE=4096]="DANCE_MOVE",E[E.WIND_MOVE=8192]="WIND_MOVE",E[E.TRIAGE_MOVE=16384]="TRIAGE_MOVE",E[E.IGNORE_ABILITIES=32768]="IGNORE_ABILITIES",E[E.CHECK_ALL_HITS=65536]="CHECK_ALL_HITS",E[E.IGNORE_SUBSTITUTE=131072]="IGNORE_SUBSTITUTE",E[E.REDIRECT_COUNTER=262144]="REDIRECT_COUNTER",E[E.REFLECTABLE=524288]="REFLECTABLE",E))(ct||{});const RB=class RB{constructor(A,s=0,R){this.toxicTurnCount=0,this.effect=A,this.toxicTurnCount=s,this.sleepTurnsRemaining=R}incrementTurn(){this.toxicTurnCount++,this.sleepTurnsRemaining&&this.sleepTurnsRemaining--}isPostTurn(){return this.effect===re.POISON||this.effect===re.TOXIC||this.effect===re.BURN}};o(RB,"Status");let iI=RB;function Wr(E){switch(E){case re.POISON:return"statusEffect:poison";case re.TOXIC:return"statusEffect:toxic";case re.PARALYSIS:return"statusEffect:paralysis";case re.SLEEP:return"statusEffect:sleep";case re.FREEZE:return"statusEffect:freeze";case re.BURN:return"statusEffect:burn";default:return"statusEffect:none"}}o(Wr,"getStatusEffectMessageKey");function oZ(E,A,s){if(E===re.NONE)return"";if(!s){const n=`${Wr(E)}.obtain`;return u.t(n,{pokemonNameWithAffix:A})}const R=`${Wr(E)}.obtainSource`;return u.t(R,{pokemonNameWithAffix:A,sourceText:s})}o(oZ,"getStatusEffectObtainText");function Ok(E,A){if(E===re.NONE)return"";const s=`${Wr(E)}.activation`;return u.t(s,{pokemonNameWithAffix:A})}o(Ok,"getStatusEffectActivationText");function TZ(E,A){if(E===re.NONE)return"";const s=`${Wr(E)}.overlap`;return u.t(s,{pokemonNameWithAffix:A})}o(TZ,"getStatusEffectOverlapText");function oi(E,A){if(E===re.NONE)return"";const s=`${Wr(E)}.heal`;return u.t(s,{pokemonNameWithAffix:A})}o(oi,"getStatusEffectHealText");function nk(E){if(E===re.NONE)return"";const A=`${Wr(E)}.description`;return u.t(A)}o(nk,"getStatusEffectDescriptor");function ak(E){switch(E){case re.POISON:case re.TOXIC:case re.PARALYSIS:case re.BURN:return 1.5;case re.SLEEP:case re.FREEZE:return 2.5}return 1}o(ak,"getStatusEffectCatchRateMultiplier");function SZ(E,A){return!E||E.effect===re.NONE||E.effect===re.FAINT?A:!A||A.effect===re.NONE||A.effect===re.FAINT||uf(0,2)?E:A}o(SZ,"getRandomStatus");function bL(){return[re.POISON,re.TOXIC,re.PARALYSIS,re.SLEEP,re.FREEZE,re.BURN]}o(bL,"getNonVolatileStatusEffects");function bb(E){return bL().includes(E)}o(bb,"isNonVolatileStatusEffect");var De=(E=>(E[E.USER=0]="USER",E[E.OTHER=1]="OTHER",E[E.ALL_OTHERS=2]="ALL_OTHERS",E[E.NEAR_OTHER=3]="NEAR_OTHER",E[E.ALL_NEAR_OTHERS=4]="ALL_NEAR_OTHERS",E[E.NEAR_ENEMY=5]="NEAR_ENEMY",E[E.ALL_NEAR_ENEMIES=6]="ALL_NEAR_ENEMIES",E[E.RANDOM_NEAR_ENEMY=7]="RANDOM_NEAR_ENEMY",E[E.ALL_ENEMIES=8]="ALL_ENEMIES",E[E.ATTACKER=9]="ATTACKER",E[E.NEAR_ALLY=10]="NEAR_ALLY",E[E.ALLY=11]="ALLY",E[E.USER_OR_NEAR_ALLY=12]="USER_OR_NEAR_ALLY",E[E.USER_AND_ALLIES=13]="USER_AND_ALLIES",E[E.ALL=14]="ALL",E[E.USER_SIDE=15]="USER_SIDE",E[E.ENEMY_SIDE=16]="ENEMY_SIDE",E[E.BOTH_SIDES=17]="BOTH_SIDES",E[E.PARTY=18]="PARTY",E[E.CURSE=19]="CURSE",E))(De||{}),g=(E=>(E[E.PHYSICAL=0]="PHYSICAL",E[E.SPECIAL=1]="SPECIAL",E[E.STATUS=2]="STATUS",E))(g||{}),O=(E=>(E[E.NONE=0]="NONE",E[E.STENCH=1]="STENCH",E[E.DRIZZLE=2]="DRIZZLE",E[E.SPEED_BOOST=3]="SPEED_BOOST",E[E.BATTLE_ARMOR=4]="BATTLE_ARMOR",E[E.STURDY=5]="STURDY",E[E.DAMP=6]="DAMP",E[E.LIMBER=7]="LIMBER",E[E.SAND_VEIL=8]="SAND_VEIL",E[E.STATIC=9]="STATIC",E[E.VOLT_ABSORB=10]="VOLT_ABSORB",E[E.WATER_ABSORB=11]="WATER_ABSORB",E[E.OBLIVIOUS=12]="OBLIVIOUS",E[E.CLOUD_NINE=13]="CLOUD_NINE",E[E.COMPOUND_EYES=14]="COMPOUND_EYES",E[E.INSOMNIA=15]="INSOMNIA",E[E.COLOR_CHANGE=16]="COLOR_CHANGE",E[E.IMMUNITY=17]="IMMUNITY",E[E.FLASH_FIRE=18]="FLASH_FIRE",E[E.SHIELD_DUST=19]="SHIELD_DUST",E[E.OWN_TEMPO=20]="OWN_TEMPO",E[E.SUCTION_CUPS=21]="SUCTION_CUPS",E[E.INTIMIDATE=22]="INTIMIDATE",E[E.SHADOW_TAG=23]="SHADOW_TAG",E[E.ROUGH_SKIN=24]="ROUGH_SKIN",E[E.WONDER_GUARD=25]="WONDER_GUARD",E[E.LEVITATE=26]="LEVITATE",E[E.EFFECT_SPORE=27]="EFFECT_SPORE",E[E.SYNCHRONIZE=28]="SYNCHRONIZE",E[E.CLEAR_BODY=29]="CLEAR_BODY",E[E.NATURAL_CURE=30]="NATURAL_CURE",E[E.LIGHTNING_ROD=31]="LIGHTNING_ROD",E[E.SERENE_GRACE=32]="SERENE_GRACE",E[E.SWIFT_SWIM=33]="SWIFT_SWIM",E[E.CHLOROPHYLL=34]="CHLOROPHYLL",E[E.ILLUMINATE=35]="ILLUMINATE",E[E.TRACE=36]="TRACE",E[E.HUGE_POWER=37]="HUGE_POWER",E[E.POISON_POINT=38]="POISON_POINT",E[E.INNER_FOCUS=39]="INNER_FOCUS",E[E.MAGMA_ARMOR=40]="MAGMA_ARMOR",E[E.WATER_VEIL=41]="WATER_VEIL",E[E.MAGNET_PULL=42]="MAGNET_PULL",E[E.SOUNDPROOF=43]="SOUNDPROOF",E[E.RAIN_DISH=44]="RAIN_DISH",E[E.SAND_STREAM=45]="SAND_STREAM",E[E.PRESSURE=46]="PRESSURE",E[E.THICK_FAT=47]="THICK_FAT",E[E.EARLY_BIRD=48]="EARLY_BIRD",E[E.FLAME_BODY=49]="FLAME_BODY",E[E.RUN_AWAY=50]="RUN_AWAY",E[E.KEEN_EYE=51]="KEEN_EYE",E[E.HYPER_CUTTER=52]="HYPER_CUTTER",E[E.PICKUP=53]="PICKUP",E[E.TRUANT=54]="TRUANT",E[E.HUSTLE=55]="HUSTLE",E[E.CUTE_CHARM=56]="CUTE_CHARM",E[E.PLUS=57]="PLUS",E[E.MINUS=58]="MINUS",E[E.FORECAST=59]="FORECAST",E[E.STICKY_HOLD=60]="STICKY_HOLD",E[E.SHED_SKIN=61]="SHED_SKIN",E[E.GUTS=62]="GUTS",E[E.MARVEL_SCALE=63]="MARVEL_SCALE",E[E.LIQUID_OOZE=64]="LIQUID_OOZE",E[E.OVERGROW=65]="OVERGROW",E[E.BLAZE=66]="BLAZE",E[E.TORRENT=67]="TORRENT",E[E.SWARM=68]="SWARM",E[E.ROCK_HEAD=69]="ROCK_HEAD",E[E.DROUGHT=70]="DROUGHT",E[E.ARENA_TRAP=71]="ARENA_TRAP",E[E.VITAL_SPIRIT=72]="VITAL_SPIRIT",E[E.WHITE_SMOKE=73]="WHITE_SMOKE",E[E.PURE_POWER=74]="PURE_POWER",E[E.SHELL_ARMOR=75]="SHELL_ARMOR",E[E.AIR_LOCK=76]="AIR_LOCK",E[E.TANGLED_FEET=77]="TANGLED_FEET",E[E.MOTOR_DRIVE=78]="MOTOR_DRIVE",E[E.RIVALRY=79]="RIVALRY",E[E.STEADFAST=80]="STEADFAST",E[E.SNOW_CLOAK=81]="SNOW_CLOAK",E[E.GLUTTONY=82]="GLUTTONY",E[E.ANGER_POINT=83]="ANGER_POINT",E[E.UNBURDEN=84]="UNBURDEN",E[E.HEATPROOF=85]="HEATPROOF",E[E.SIMPLE=86]="SIMPLE",E[E.DRY_SKIN=87]="DRY_SKIN",E[E.DOWNLOAD=88]="DOWNLOAD",E[E.IRON_FIST=89]="IRON_FIST",E[E.POISON_HEAL=90]="POISON_HEAL",E[E.ADAPTABILITY=91]="ADAPTABILITY",E[E.SKILL_LINK=92]="SKILL_LINK",E[E.HYDRATION=93]="HYDRATION",E[E.SOLAR_POWER=94]="SOLAR_POWER",E[E.QUICK_FEET=95]="QUICK_FEET",E[E.NORMALIZE=96]="NORMALIZE",E[E.SNIPER=97]="SNIPER",E[E.MAGIC_GUARD=98]="MAGIC_GUARD",E[E.NO_GUARD=99]="NO_GUARD",E[E.STALL=100]="STALL",E[E.TECHNICIAN=101]="TECHNICIAN",E[E.LEAF_GUARD=102]="LEAF_GUARD",E[E.KLUTZ=103]="KLUTZ",E[E.MOLD_BREAKER=104]="MOLD_BREAKER",E[E.SUPER_LUCK=105]="SUPER_LUCK",E[E.AFTERMATH=106]="AFTERMATH",E[E.ANTICIPATION=107]="ANTICIPATION",E[E.FOREWARN=108]="FOREWARN",E[E.UNAWARE=109]="UNAWARE",E[E.TINTED_LENS=110]="TINTED_LENS",E[E.FILTER=111]="FILTER",E[E.SLOW_START=112]="SLOW_START",E[E.SCRAPPY=113]="SCRAPPY",E[E.STORM_DRAIN=114]="STORM_DRAIN",E[E.ICE_BODY=115]="ICE_BODY",E[E.SOLID_ROCK=116]="SOLID_ROCK",E[E.SNOW_WARNING=117]="SNOW_WARNING",E[E.HONEY_GATHER=118]="HONEY_GATHER",E[E.FRISK=119]="FRISK",E[E.RECKLESS=120]="RECKLESS",E[E.MULTITYPE=121]="MULTITYPE",E[E.FLOWER_GIFT=122]="FLOWER_GIFT",E[E.BAD_DREAMS=123]="BAD_DREAMS",E[E.PICKPOCKET=124]="PICKPOCKET",E[E.SHEER_FORCE=125]="SHEER_FORCE",E[E.CONTRARY=126]="CONTRARY",E[E.UNNERVE=127]="UNNERVE",E[E.DEFIANT=128]="DEFIANT",E[E.DEFEATIST=129]="DEFEATIST",E[E.CURSED_BODY=130]="CURSED_BODY",E[E.HEALER=131]="HEALER",E[E.FRIEND_GUARD=132]="FRIEND_GUARD",E[E.WEAK_ARMOR=133]="WEAK_ARMOR",E[E.HEAVY_METAL=134]="HEAVY_METAL",E[E.LIGHT_METAL=135]="LIGHT_METAL",E[E.MULTISCALE=136]="MULTISCALE",E[E.TOXIC_BOOST=137]="TOXIC_BOOST",E[E.FLARE_BOOST=138]="FLARE_BOOST",E[E.HARVEST=139]="HARVEST",E[E.TELEPATHY=140]="TELEPATHY",E[E.MOODY=141]="MOODY",E[E.OVERCOAT=142]="OVERCOAT",E[E.POISON_TOUCH=143]="POISON_TOUCH",E[E.REGENERATOR=144]="REGENERATOR",E[E.BIG_PECKS=145]="BIG_PECKS",E[E.SAND_RUSH=146]="SAND_RUSH",E[E.WONDER_SKIN=147]="WONDER_SKIN",E[E.ANALYTIC=148]="ANALYTIC",E[E.ILLUSION=149]="ILLUSION",E[E.IMPOSTER=150]="IMPOSTER",E[E.INFILTRATOR=151]="INFILTRATOR",E[E.MUMMY=152]="MUMMY",E[E.MOXIE=153]="MOXIE",E[E.JUSTIFIED=154]="JUSTIFIED",E[E.RATTLED=155]="RATTLED",E[E.MAGIC_BOUNCE=156]="MAGIC_BOUNCE",E[E.SAP_SIPPER=157]="SAP_SIPPER",E[E.PRANKSTER=158]="PRANKSTER",E[E.SAND_FORCE=159]="SAND_FORCE",E[E.IRON_BARBS=160]="IRON_BARBS",E[E.ZEN_MODE=161]="ZEN_MODE",E[E.VICTORY_STAR=162]="VICTORY_STAR",E[E.TURBOBLAZE=163]="TURBOBLAZE",E[E.TERAVOLT=164]="TERAVOLT",E[E.AROMA_VEIL=165]="AROMA_VEIL",E[E.FLOWER_VEIL=166]="FLOWER_VEIL",E[E.CHEEK_POUCH=167]="CHEEK_POUCH",E[E.PROTEAN=168]="PROTEAN",E[E.FUR_COAT=169]="FUR_COAT",E[E.MAGICIAN=170]="MAGICIAN",E[E.BULLETPROOF=171]="BULLETPROOF",E[E.COMPETITIVE=172]="COMPETITIVE",E[E.STRONG_JAW=173]="STRONG_JAW",E[E.REFRIGERATE=174]="REFRIGERATE",E[E.SWEET_VEIL=175]="SWEET_VEIL",E[E.STANCE_CHANGE=176]="STANCE_CHANGE",E[E.GALE_WINGS=177]="GALE_WINGS",E[E.MEGA_LAUNCHER=178]="MEGA_LAUNCHER",E[E.GRASS_PELT=179]="GRASS_PELT",E[E.SYMBIOSIS=180]="SYMBIOSIS",E[E.TOUGH_CLAWS=181]="TOUGH_CLAWS",E[E.PIXILATE=182]="PIXILATE",E[E.GOOEY=183]="GOOEY",E[E.AERILATE=184]="AERILATE",E[E.PARENTAL_BOND=185]="PARENTAL_BOND",E[E.DARK_AURA=186]="DARK_AURA",E[E.FAIRY_AURA=187]="FAIRY_AURA",E[E.AURA_BREAK=188]="AURA_BREAK",E[E.PRIMORDIAL_SEA=189]="PRIMORDIAL_SEA",E[E.DESOLATE_LAND=190]="DESOLATE_LAND",E[E.DELTA_STREAM=191]="DELTA_STREAM",E[E.STAMINA=192]="STAMINA",E[E.WIMP_OUT=193]="WIMP_OUT",E[E.EMERGENCY_EXIT=194]="EMERGENCY_EXIT",E[E.WATER_COMPACTION=195]="WATER_COMPACTION",E[E.MERCILESS=196]="MERCILESS",E[E.SHIELDS_DOWN=197]="SHIELDS_DOWN",E[E.STAKEOUT=198]="STAKEOUT",E[E.WATER_BUBBLE=199]="WATER_BUBBLE",E[E.STEELWORKER=200]="STEELWORKER",E[E.BERSERK=201]="BERSERK",E[E.SLUSH_RUSH=202]="SLUSH_RUSH",E[E.LONG_REACH=203]="LONG_REACH",E[E.LIQUID_VOICE=204]="LIQUID_VOICE",E[E.TRIAGE=205]="TRIAGE",E[E.GALVANIZE=206]="GALVANIZE",E[E.SURGE_SURFER=207]="SURGE_SURFER",E[E.SCHOOLING=208]="SCHOOLING",E[E.DISGUISE=209]="DISGUISE",E[E.BATTLE_BOND=210]="BATTLE_BOND",E[E.POWER_CONSTRUCT=211]="POWER_CONSTRUCT",E[E.CORROSION=212]="CORROSION",E[E.COMATOSE=213]="COMATOSE",E[E.QUEENLY_MAJESTY=214]="QUEENLY_MAJESTY",E[E.INNARDS_OUT=215]="INNARDS_OUT",E[E.DANCER=216]="DANCER",E[E.BATTERY=217]="BATTERY",E[E.FLUFFY=218]="FLUFFY",E[E.DAZZLING=219]="DAZZLING",E[E.SOUL_HEART=220]="SOUL_HEART",E[E.TANGLING_HAIR=221]="TANGLING_HAIR",E[E.RECEIVER=222]="RECEIVER",E[E.POWER_OF_ALCHEMY=223]="POWER_OF_ALCHEMY",E[E.BEAST_BOOST=224]="BEAST_BOOST",E[E.RKS_SYSTEM=225]="RKS_SYSTEM",E[E.ELECTRIC_SURGE=226]="ELECTRIC_SURGE",E[E.PSYCHIC_SURGE=227]="PSYCHIC_SURGE",E[E.MISTY_SURGE=228]="MISTY_SURGE",E[E.GRASSY_SURGE=229]="GRASSY_SURGE",E[E.FULL_METAL_BODY=230]="FULL_METAL_BODY",E[E.SHADOW_SHIELD=231]="SHADOW_SHIELD",E[E.PRISM_ARMOR=232]="PRISM_ARMOR",E[E.NEUROFORCE=233]="NEUROFORCE",E[E.INTREPID_SWORD=234]="INTREPID_SWORD",E[E.DAUNTLESS_SHIELD=235]="DAUNTLESS_SHIELD",E[E.LIBERO=236]="LIBERO",E[E.BALL_FETCH=237]="BALL_FETCH",E[E.COTTON_DOWN=238]="COTTON_DOWN",E[E.PROPELLER_TAIL=239]="PROPELLER_TAIL",E[E.MIRROR_ARMOR=240]="MIRROR_ARMOR",E[E.GULP_MISSILE=241]="GULP_MISSILE",E[E.STALWART=242]="STALWART",E[E.STEAM_ENGINE=243]="STEAM_ENGINE",E[E.PUNK_ROCK=244]="PUNK_ROCK",E[E.SAND_SPIT=245]="SAND_SPIT",E[E.ICE_SCALES=246]="ICE_SCALES",E[E.RIPEN=247]="RIPEN",E[E.ICE_FACE=248]="ICE_FACE",E[E.POWER_SPOT=249]="POWER_SPOT",E[E.MIMICRY=250]="MIMICRY",E[E.SCREEN_CLEANER=251]="SCREEN_CLEANER",E[E.STEELY_SPIRIT=252]="STEELY_SPIRIT",E[E.PERISH_BODY=253]="PERISH_BODY",E[E.WANDERING_SPIRIT=254]="WANDERING_SPIRIT",E[E.GORILLA_TACTICS=255]="GORILLA_TACTICS",E[E.NEUTRALIZING_GAS=256]="NEUTRALIZING_GAS",E[E.PASTEL_VEIL=257]="PASTEL_VEIL",E[E.HUNGER_SWITCH=258]="HUNGER_SWITCH",E[E.QUICK_DRAW=259]="QUICK_DRAW",E[E.UNSEEN_FIST=260]="UNSEEN_FIST",E[E.CURIOUS_MEDICINE=261]="CURIOUS_MEDICINE",E[E.TRANSISTOR=262]="TRANSISTOR",E[E.DRAGONS_MAW=263]="DRAGONS_MAW",E[E.CHILLING_NEIGH=264]="CHILLING_NEIGH",E[E.GRIM_NEIGH=265]="GRIM_NEIGH",E[E.AS_ONE_GLASTRIER=266]="AS_ONE_GLASTRIER",E[E.AS_ONE_SPECTRIER=267]="AS_ONE_SPECTRIER",E[E.LINGERING_AROMA=268]="LINGERING_AROMA",E[E.SEED_SOWER=269]="SEED_SOWER",E[E.THERMAL_EXCHANGE=270]="THERMAL_EXCHANGE",E[E.ANGER_SHELL=271]="ANGER_SHELL",E[E.PURIFYING_SALT=272]="PURIFYING_SALT",E[E.WELL_BAKED_BODY=273]="WELL_BAKED_BODY",E[E.WIND_RIDER=274]="WIND_RIDER",E[E.GUARD_DOG=275]="GUARD_DOG",E[E.ROCKY_PAYLOAD=276]="ROCKY_PAYLOAD",E[E.WIND_POWER=277]="WIND_POWER",E[E.ZERO_TO_HERO=278]="ZERO_TO_HERO",E[E.COMMANDER=279]="COMMANDER",E[E.ELECTROMORPHOSIS=280]="ELECTROMORPHOSIS",E[E.PROTOSYNTHESIS=281]="PROTOSYNTHESIS",E[E.QUARK_DRIVE=282]="QUARK_DRIVE",E[E.GOOD_AS_GOLD=283]="GOOD_AS_GOLD",E[E.VESSEL_OF_RUIN=284]="VESSEL_OF_RUIN",E[E.SWORD_OF_RUIN=285]="SWORD_OF_RUIN",E[E.TABLETS_OF_RUIN=286]="TABLETS_OF_RUIN",E[E.BEADS_OF_RUIN=287]="BEADS_OF_RUIN",E[E.ORICHALCUM_PULSE=288]="ORICHALCUM_PULSE",E[E.HADRON_ENGINE=289]="HADRON_ENGINE",E[E.OPPORTUNIST=290]="OPPORTUNIST",E[E.CUD_CHEW=291]="CUD_CHEW",E[E.SHARPNESS=292]="SHARPNESS",E[E.SUPREME_OVERLORD=293]="SUPREME_OVERLORD",E[E.COSTAR=294]="COSTAR",E[E.TOXIC_DEBRIS=295]="TOXIC_DEBRIS",E[E.ARMOR_TAIL=296]="ARMOR_TAIL",E[E.EARTH_EATER=297]="EARTH_EATER",E[E.MYCELIUM_MIGHT=298]="MYCELIUM_MIGHT",E[E.MINDS_EYE=299]="MINDS_EYE",E[E.SUPERSWEET_SYRUP=300]="SUPERSWEET_SYRUP",E[E.HOSPITALITY=301]="HOSPITALITY",E[E.TOXIC_CHAIN=302]="TOXIC_CHAIN",E[E.EMBODY_ASPECT_TEAL=303]="EMBODY_ASPECT_TEAL",E[E.EMBODY_ASPECT_WELLSPRING=304]="EMBODY_ASPECT_WELLSPRING",E[E.EMBODY_ASPECT_HEARTHFLAME=305]="EMBODY_ASPECT_HEARTHFLAME",E[E.EMBODY_ASPECT_CORNERSTONE=306]="EMBODY_ASPECT_CORNERSTONE",E[E.TERA_SHIFT=307]="TERA_SHIFT",E[E.TERA_SHELL=308]="TERA_SHELL",E[E.TERAFORM_ZERO=309]="TERAFORM_ZERO",E[E.POISON_PUPPETEER=310]="POISON_PUPPETEER",E))(O||{}),Fe=(E=>(E.NONE="NONE",E.MUD_SPORT="MUD_SPORT",E.WATER_SPORT="WATER_SPORT",E.SPIKES="SPIKES",E.TOXIC_SPIKES="TOXIC_SPIKES",E.MIST="MIST",E.FUTURE_SIGHT="FUTURE_SIGHT",E.DOOM_DESIRE="DOOM_DESIRE",E.WISH="WISH",E.STEALTH_ROCK="STEALTH_ROCK",E.STICKY_WEB="STICKY_WEB",E.TRICK_ROOM="TRICK_ROOM",E.GRAVITY="GRAVITY",E.REFLECT="REFLECT",E.LIGHT_SCREEN="LIGHT_SCREEN",E.AURORA_VEIL="AURORA_VEIL",E.QUICK_GUARD="QUICK_GUARD",E.WIDE_GUARD="WIDE_GUARD",E.MAT_BLOCK="MAT_BLOCK",E.CRAFTY_SHIELD="CRAFTY_SHIELD",E.TAILWIND="TAILWIND",E.HAPPY_HOUR="HAPPY_HOUR",E.SAFEGUARD="SAFEGUARD",E.NO_CRIT="NO_CRIT",E.IMPRISON="IMPRISON",E.ION_DELUGE="ION_DELUGE",E.FIRE_GRASS_PLEDGE="FIRE_GRASS_PLEDGE",E.WATER_FIRE_PLEDGE="WATER_FIRE_PLEDGE",E.GRASS_WATER_PLEDGE="GRASS_WATER_PLEDGE",E.FAIRY_LOCK="FAIRY_LOCK",E.NEUTRALIZING_GAS="NEUTRALIZING_GAS",E))(Fe||{}),w=(E=>(E.NONE="NONE",E.RECHARGING="RECHARGING",E.FLINCHED="FLINCHED",E.INTERRUPTED="INTERRUPTED",E.CONFUSED="CONFUSED",E.INFATUATED="INFATUATED",E.SEEDED="SEEDED",E.NIGHTMARE="NIGHTMARE",E.FRENZY="FRENZY",E.CHARGING="CHARGING",E.ENCORE="ENCORE",E.HELPING_HAND="HELPING_HAND",E.INGRAIN="INGRAIN",E.OCTOLOCK="OCTOLOCK",E.AQUA_RING="AQUA_RING",E.DROWSY="DROWSY",E.TRAPPED="TRAPPED",E.BIND="BIND",E.WRAP="WRAP",E.FIRE_SPIN="FIRE_SPIN",E.WHIRLPOOL="WHIRLPOOL",E.CLAMP="CLAMP",E.SAND_TOMB="SAND_TOMB",E.MAGMA_STORM="MAGMA_STORM",E.SNAP_TRAP="SNAP_TRAP",E.THUNDER_CAGE="THUNDER_CAGE",E.INFESTATION="INFESTATION",E.PROTECTED="PROTECTED",E.SPIKY_SHIELD="SPIKY_SHIELD",E.KINGS_SHIELD="KINGS_SHIELD",E.OBSTRUCT="OBSTRUCT",E.SILK_TRAP="SILK_TRAP",E.BANEFUL_BUNKER="BANEFUL_BUNKER",E.BURNING_BULWARK="BURNING_BULWARK",E.ENDURING="ENDURING",E.STURDY="STURDY",E.PERISH_SONG="PERISH_SONG",E.TRUANT="TRUANT",E.SLOW_START="SLOW_START",E.PROTOSYNTHESIS="PROTOSYNTHESIS",E.QUARK_DRIVE="QUARK_DRIVE",E.FLYING="FLYING",E.UNDERGROUND="UNDERGROUND",E.UNDERWATER="UNDERWATER",E.HIDDEN="HIDDEN",E.FIRE_BOOST="FIRE_BOOST",E.CRIT_BOOST="CRIT_BOOST",E.ALWAYS_CRIT="ALWAYS_CRIT",E.IGNORE_ACCURACY="IGNORE_ACCURACY",E.BYPASS_SLEEP="BYPASS_SLEEP",E.IGNORE_FLYING="IGNORE_FLYING",E.SALT_CURED="SALT_CURED",E.CURSED="CURSED",E.CHARGED="CHARGED",E.ROOSTED="ROOSTED",E.FLOATING="FLOATING",E.MINIMIZED="MINIMIZED",E.DESTINY_BOND="DESTINY_BOND",E.CENTER_OF_ATTENTION="CENTER_OF_ATTENTION",E.ICE_FACE="ICE_FACE",E.DISGUISE="DISGUISE",E.STOCKPILING="STOCKPILING",E.RECEIVE_DOUBLE_DAMAGE="RECEIVE_DOUBLE_DAMAGE",E.ALWAYS_GET_HIT="ALWAYS_GET_HIT",E.DISABLED="DISABLED",E.SUBSTITUTE="SUBSTITUTE",E.IGNORE_GHOST="IGNORE_GHOST",E.IGNORE_DARK="IGNORE_DARK",E.GULP_MISSILE_ARROKUDA="GULP_MISSILE_ARROKUDA",E.GULP_MISSILE_PIKACHU="GULP_MISSILE_PIKACHU",E.BEAK_BLAST_CHARGING="BEAK_BLAST_CHARGING",E.SHELL_TRAP="SHELL_TRAP",E.DRAGON_CHEER="DRAGON_CHEER",E.NO_RETREAT="NO_RETREAT",E.GORILLA_TACTICS="GORILLA_TACTICS",E.UNBURDEN="UNBURDEN",E.THROAT_CHOPPED="THROAT_CHOPPED",E.TAR_SHOT="TAR_SHOT",E.BURNED_UP="BURNED_UP",E.DOUBLE_SHOCKED="DOUBLE_SHOCKED",E.AUTOTOMIZED="AUTOTOMIZED",E.MYSTERY_ENCOUNTER_POST_SUMMON="MYSTERY_ENCOUNTER_POST_SUMMON",E.POWER_TRICK="POWER_TRICK",E.HEAL_BLOCK="HEAL_BLOCK",E.TORMENT="TORMENT",E.TAUNT="TAUNT",E.IMPRISON="IMPRISON",E.SYRUP_BOMB="SYRUP_BOMB",E.ELECTRIFIED="ELECTRIFIED",E.TELEKINESIS="TELEKINESIS",E.COMMANDED="COMMANDED",E.GRUDGE="GRUDGE",E.PSYCHO_SHIFT="PSYCHO_SHIFT",E.ENDURE_TOKEN="ENDURE_TOKEN",E.POWDER="POWDER",E.MAGIC_COAT="MAGIC_COAT",E))(w||{}),Ze=(E=>(E[E.WEAKEST=0]="WEAKEST",E[E.WEAKER=1]="WEAKER",E[E.WEAK=2]="WEAK",E[E.AVERAGE=3]="AVERAGE",E[E.STRONG=4]="STRONG",E[E.STRONGER=5]="STRONGER",E))(Ze||{});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function YR(E){return E<0?-1:E===0?0:1}o(YR,"signum");function kL(E,A,s){return(1-s)*E+s*A}o(kL,"lerp");function NZ(E,A,s){return s<E?E:s>A?A:s}o(NZ,"clampInt");function yC(E,A,s){return s<E?E:s>A?A:s}o(yC,"clampDouble");function lZ(E){return E=E%360,E<0&&(E=E+360),E}o(lZ,"sanitizeDegreesDouble");function th(E,A){const s=E[0]*A[0][0]+E[1]*A[0][1]+E[2]*A[0][2],R=E[0]*A[1][0]+E[1]*A[1][1]+E[2]*A[1][2],n=E[0]*A[2][0]+E[1]*A[2][1]+E[2]*A[2][2];return[s,R,n]}o(th,"matrixMultiply");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ik=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],CZ=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],cf=[95.047,100,108.883];function hf(E,A,s){return(255<<24|(E&255)<<16|(A&255)<<8|s&255)>>>0}o(hf,"argbFromRgb");function kb(E){const A=qi(E[0]),s=qi(E[1]),R=qi(E[2]);return hf(A,s,R)}o(kb,"argbFromLinrgb");function Ik(E){return E>>24&255}o(Ik,"alphaFromArgb");function V0(E){return E>>16&255}o(V0,"redFromArgb");function x0(E){return E>>8&255}o(x0,"greenFromArgb");function b0(E){return E&255}o(b0,"blueFromArgb");function rk(E,A,s){const R=CZ,n=R[0][0]*E+R[0][1]*A+R[0][2]*s,I=R[1][0]*E+R[1][1]*A+R[1][2]*s,r=R[2][0]*E+R[2][1]*A+R[2][2]*s,L=qi(n),N=qi(I),l=qi(r);return hf(L,N,l)}o(rk,"argbFromXyz");function uZ(E){const A=Ea(V0(E)),s=Ea(x0(E)),R=Ea(b0(E));return th([A,s,R],ik)}o(uZ,"xyzFromArgb");function UZ(E,A,s){const R=cf,n=(E+16)/116,I=A/500+n,r=n-s/200,L=kl(I),N=kl(n),l=kl(r),C=L*R[0],U=N*R[1],D=l*R[2];return rk(C,U,D)}o(UZ,"argbFromLab");function DZ(E){const A=Ea(V0(E)),s=Ea(x0(E)),R=Ea(b0(E)),n=ik,I=n[0][0]*A+n[0][1]*s+n[0][2]*R,r=n[1][0]*A+n[1][1]*s+n[1][2]*R,L=n[2][0]*A+n[2][1]*s+n[2][2]*R,N=cf,l=I/N[0],C=r/N[1],U=L/N[2],D=ZL(l),M=ZL(C),h=ZL(U),_=116*M-16,d=500*(D-M),f=200*(M-h);return[_,d,f]}o(DZ,"labFromArgb");function MZ(E){const A=Ya(E),s=qi(A);return hf(s,s,s)}o(MZ,"argbFromLstar");function Zb(E){const A=uZ(E)[1];return 116*ZL(A/100)-16}o(Zb,"lstarFromArgb");function Ya(E){return 100*kl((E+16)/116)}o(Ya,"yFromLstar");function Ah(E){return ZL(E/100)*116-16}o(Ah,"lstarFromY");function Ea(E){const A=E/255;return A<=.040449936?A/12.92*100:Math.pow((A+.055)/1.055,2.4)*100}o(Ea,"linearized");function qi(E){const A=E/100;let s=0;return A<=.0031308?s=A*12.92:s=1.055*Math.pow(A,1/2.4)-.055,NZ(0,255,Math.round(s*255))}o(qi,"delinearized");function cZ(){return cf}o(cZ,"whitePointD65");function Eh(E){const A=V0(E),s=x0(E),R=b0(E),n=Ik(E);return{r:A,g:s,b:R,a:n}}o(Eh,"rgbaFromArgb");function Es({r:E,g:A,b:s,a:R}){const n=ll(E),I=ll(A),r=ll(s);return ll(R)<<24|n<<16|I<<8|r}o(Es,"argbFromRgba");function ll(E){return E<0?0:E>255?255:E}o(ll,"clampComponent");function ZL(E){const A=.008856451679035631,s=24389/27;return E>A?Math.pow(E,1/3):(s*E+16)/116}o(ZL,"labF");function kl(E){const A=.008856451679035631,s=24389/27,R=E*E*E;return R>A?R:(116*E-16)/s}o(kl,"labInvf");/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const i0=class i0{static make(A=cZ(),s=200/Math.PI*Ya(50)/100,R=50,n=2,I=!1){const r=A,L=r[0]*.401288+r[1]*.650173+r[2]*-.051461,N=r[0]*-.250268+r[1]*1.204414+r[2]*.045854,l=r[0]*-.002079+r[1]*.048952+r[2]*.953127,C=.8+n/10,U=C>=.9?kL(.59,.69,(C-.9)*10):kL(.525,.59,(C-.8)*10);let D=I?1:C*(1-1/3.6*Math.exp((-s-42)/92));D=D>1?1:D<0?0:D;const M=C,h=[D*(100/L)+1-D,D*(100/N)+1-D,D*(100/l)+1-D],_=1/(5*s+1),d=_*_*_*_,f=1-d,H=d*s+.1*f*f*Math.cbrt(5*s),B=Ya(R)/A[1],K=1.48+Math.sqrt(B),Y=.725/Math.pow(B,.2),v=Y,Z=[Math.pow(H*h[0]*L/100,.42),Math.pow(H*h[1]*N/100,.42),Math.pow(H*h[2]*l/100,.42)],z=[400*Z[0]/(Z[0]+27.13),400*Z[1]/(Z[1]+27.13),400*Z[2]/(Z[2]+27.13)],q=(2*z[0]+z[1]+.05*z[2])*Y;return new i0(B,q,Y,v,U,M,h,H,Math.pow(H,.25),K)}constructor(A,s,R,n,I,r,L,N,l,C){this.n=A,this.aw=s,this.nbb=R,this.ncb=n,this.c=I,this.nc=r,this.rgbD=L,this.fl=N,this.fLRoot=l,this.z=C}};o(i0,"ViewingConditions");let tn=i0;tn.DEFAULT=tn.make();/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Un=class Un{constructor(A,s,R,n,I,r,L,N,l){this.hue=A,this.chroma=s,this.j=R,this.q=n,this.m=I,this.s=r,this.jstar=L,this.astar=N,this.bstar=l}distance(A){const s=this.jstar-A.jstar,R=this.astar-A.astar,n=this.bstar-A.bstar,I=Math.sqrt(s*s+R*R+n*n);return 1.41*Math.pow(I,.63)}static fromInt(A){return Un.fromIntInViewingConditions(A,tn.DEFAULT)}static fromIntInViewingConditions(A,s){const R=(A&16711680)>>16,n=(A&65280)>>8,I=A&255,r=Ea(R),L=Ea(n),N=Ea(I),l=.41233895*r+.35762064*L+.18051042*N,C=.2126*r+.7152*L+.0722*N,U=.01932141*r+.11916382*L+.95034478*N,D=.401288*l+.650173*C-.051461*U,M=-.250268*l+1.204414*C+.045854*U,h=-.002079*l+.048952*C+.953127*U,_=s.rgbD[0]*D,d=s.rgbD[1]*M,f=s.rgbD[2]*h,H=Math.pow(s.fl*Math.abs(_)/100,.42),B=Math.pow(s.fl*Math.abs(d)/100,.42),K=Math.pow(s.fl*Math.abs(f)/100,.42),Y=YR(_)*400*H/(H+27.13),v=YR(d)*400*B/(B+27.13),Z=YR(f)*400*K/(K+27.13),z=(11*Y+-12*v+Z)/11,q=(Y+v-2*Z)/9,J=(20*Y+20*v+21*Z)/20,Ae=(40*Y+20*v+Z)/20,Re=Math.atan2(q,z)*180/Math.PI,W=Re<0?Re+360:Re>=360?Re-360:Re,ie=W*Math.PI/180,Be=Ae*s.nbb,he=100*Math.pow(Be/s.aw,s.c*s.z),ve=4/s.c*Math.sqrt(he/100)*(s.aw+4)*s.fLRoot,_e=W<20.14?W+360:W,Le=.25*(Math.cos(_e*Math.PI/180+2)+3.8),se=5e4/13*Le*s.nc*s.ncb*Math.sqrt(z*z+q*q)/(J+.305),Ne=Math.pow(se,.9)*Math.pow(1.64-Math.pow(.29,s.n),.73),Ue=Ne*Math.sqrt(he/100),me=Ue*s.fLRoot,st=50*Math.sqrt(Ne*s.c/(s.aw+4)),Ct=(1+100*.007)*he/(1+.007*he),tt=1/.0228*Math.log(1+.0228*me),ft=tt*Math.cos(ie),Xt=tt*Math.sin(ie);return new Un(W,Ue,he,ve,me,st,Ct,ft,Xt)}static fromJch(A,s,R){return Un.fromJchInViewingConditions(A,s,R,tn.DEFAULT)}static fromJchInViewingConditions(A,s,R,n){const I=4/n.c*Math.sqrt(A/100)*(n.aw+4)*n.fLRoot,r=s*n.fLRoot,L=s/Math.sqrt(A/100),N=50*Math.sqrt(L*n.c/(n.aw+4)),l=R*Math.PI/180,C=(1+100*.007)*A/(1+.007*A),U=1/.0228*Math.log(1+.0228*r),D=U*Math.cos(l),M=U*Math.sin(l);return new Un(R,s,A,I,r,N,C,D,M)}static fromUcs(A,s,R){return Un.fromUcsInViewingConditions(A,s,R,tn.DEFAULT)}static fromUcsInViewingConditions(A,s,R,n){const I=s,r=R,L=Math.sqrt(I*I+r*r),l=(Math.exp(L*.0228)-1)/.0228/n.fLRoot;let C=Math.atan2(r,I)*(180/Math.PI);C<0&&(C+=360);const U=A/(1-(A-100)*.007);return Un.fromJchInViewingConditions(U,l,C,n)}toInt(){return this.viewed(tn.DEFAULT)}viewed(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),n=this.hue*Math.PI/180,I=.25*(Math.cos(n+2)+3.8),r=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=I*(5e4/13)*A.nc*A.ncb,N=r/A.nbb,l=Math.sin(n),C=Math.cos(n),U=23*(N+.305)*R/(23*L+11*R*C+108*R*l),D=U*C,M=U*l,h=(460*N+451*D+288*M)/1403,_=(460*N-891*D-261*M)/1403,d=(460*N-220*D-6300*M)/1403,f=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),H=YR(h)*(100/A.fl)*Math.pow(f,1/.42),B=Math.max(0,27.13*Math.abs(_)/(400-Math.abs(_))),K=YR(_)*(100/A.fl)*Math.pow(B,1/.42),Y=Math.max(0,27.13*Math.abs(d)/(400-Math.abs(d))),v=YR(d)*(100/A.fl)*Math.pow(Y,1/.42),Z=H/A.rgbD[0],z=K/A.rgbD[1],q=v/A.rgbD[2],J=1.86206786*Z-1.01125463*z+.14918677*q,Ae=.38752654*Z+.62144744*z-.00897398*q,Q=-.0158415*Z-.03412294*z+1.04996444*q;return rk(J,Ae,Q)}static fromXyzInViewingConditions(A,s,R,n){const I=.401288*A+.650173*s-.051461*R,r=-.250268*A+1.204414*s+.045854*R,L=-.002079*A+.048952*s+.953127*R,N=n.rgbD[0]*I,l=n.rgbD[1]*r,C=n.rgbD[2]*L,U=Math.pow(n.fl*Math.abs(N)/100,.42),D=Math.pow(n.fl*Math.abs(l)/100,.42),M=Math.pow(n.fl*Math.abs(C)/100,.42),h=YR(N)*400*U/(U+27.13),_=YR(l)*400*D/(D+27.13),d=YR(C)*400*M/(M+27.13),f=(11*h+-12*_+d)/11,H=(h+_-2*d)/9,B=(20*h+20*_+21*d)/20,K=(40*h+20*_+d)/20,v=Math.atan2(H,f)*180/Math.PI,Z=v<0?v+360:v>=360?v-360:v,z=Z*Math.PI/180,q=K*n.nbb,J=100*Math.pow(q/n.aw,n.c*n.z),Ae=4/n.c*Math.sqrt(J/100)*(n.aw+4)*n.fLRoot,Q=Z<20.14?Z+360:Z,Re=1/4*(Math.cos(Q*Math.PI/180+2)+3.8),ie=5e4/13*Re*n.nc*n.ncb*Math.sqrt(f*f+H*H)/(B+.305),Be=Math.pow(ie,.9)*Math.pow(1.64-Math.pow(.29,n.n),.73),he=Be*Math.sqrt(J/100),ve=he*n.fLRoot,_e=50*Math.sqrt(Be*n.c/(n.aw+4)),Le=(1+100*.007)*J/(1+.007*J),Ee=Math.log(1+.0228*ve)/.0228,se=Ee*Math.cos(z),Ne=Ee*Math.sin(z);return new Un(Z,he,J,Ae,ve,_e,Le,se,Ne)}xyzInViewingConditions(A){const s=this.chroma===0||this.j===0?0:this.chroma/Math.sqrt(this.j/100),R=Math.pow(s/Math.pow(1.64-Math.pow(.29,A.n),.73),1/.9),n=this.hue*Math.PI/180,I=.25*(Math.cos(n+2)+3.8),r=A.aw*Math.pow(this.j/100,1/A.c/A.z),L=I*(5e4/13)*A.nc*A.ncb,N=r/A.nbb,l=Math.sin(n),C=Math.cos(n),U=23*(N+.305)*R/(23*L+11*R*C+108*R*l),D=U*C,M=U*l,h=(460*N+451*D+288*M)/1403,_=(460*N-891*D-261*M)/1403,d=(460*N-220*D-6300*M)/1403,f=Math.max(0,27.13*Math.abs(h)/(400-Math.abs(h))),H=YR(h)*(100/A.fl)*Math.pow(f,1/.42),B=Math.max(0,27.13*Math.abs(_)/(400-Math.abs(_))),K=YR(_)*(100/A.fl)*Math.pow(B,1/.42),Y=Math.max(0,27.13*Math.abs(d)/(400-Math.abs(d))),v=YR(d)*(100/A.fl)*Math.pow(Y,1/.42),Z=H/A.rgbD[0],z=K/A.rgbD[1],q=v/A.rgbD[2],J=1.86206786*Z-1.01125463*z+.14918677*q,Ae=.38752654*Z+.62144744*z-.00897398*q,Q=-.0158415*Z-.03412294*z+1.04996444*q;return[J,Ae,Q]}};o(Un,"Cam16");let pi=Un;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const sA=class sA{static sanitizeRadians(A){return(A+Math.PI*8)%(Math.PI*2)}static trueDelinearized(A){const s=A/100;let R=0;return s<=.0031308?R=s*12.92:R=1.055*Math.pow(s,1/2.4)-.055,R*255}static chromaticAdaptation(A){const s=Math.pow(Math.abs(A),.42);return YR(A)*400*s/(s+27.13)}static hueOf(A){const s=th(A,sA.SCALED_DISCOUNT_FROM_LINRGB),R=sA.chromaticAdaptation(s[0]),n=sA.chromaticAdaptation(s[1]),I=sA.chromaticAdaptation(s[2]),r=(11*R+-12*n+I)/11,L=(R+n-2*I)/9;return Math.atan2(L,r)}static areInCyclicOrder(A,s,R){const n=sA.sanitizeRadians(s-A),I=sA.sanitizeRadians(R-A);return n<I}static intercept(A,s,R){return(s-A)/(R-A)}static lerpPoint(A,s,R){return[A[0]+(R[0]-A[0])*s,A[1]+(R[1]-A[1])*s,A[2]+(R[2]-A[2])*s]}static setCoordinate(A,s,R,n){const I=sA.intercept(A[n],s,R[n]);return sA.lerpPoint(A,I,R)}static isBounded(A){return 0<=A&&A<=100}static nthVertex(A,s){const R=sA.Y_FROM_LINRGB[0],n=sA.Y_FROM_LINRGB[1],I=sA.Y_FROM_LINRGB[2],r=s%4<=1?0:100,L=s%2===0?0:100;if(s<4){const N=r,l=L,C=(A-N*n-l*I)/R;return sA.isBounded(C)?[C,N,l]:[-1,-1,-1]}else if(s<8){const N=r,l=L,C=(A-l*R-N*I)/n;return sA.isBounded(C)?[l,C,N]:[-1,-1,-1]}else{const N=r,l=L,C=(A-N*R-l*n)/I;return sA.isBounded(C)?[N,l,C]:[-1,-1,-1]}}static bisectToSegment(A,s){let R=[-1,-1,-1],n=R,I=0,r=0,L=!1,N=!0;for(let l=0;l<12;l++){const C=sA.nthVertex(A,l);if(C[0]<0)continue;const U=sA.hueOf(C);if(!L){R=C,n=C,I=U,r=U,L=!0;continue}(N||sA.areInCyclicOrder(I,U,r))&&(N=!1,sA.areInCyclicOrder(I,s,U)?(n=C,r=U):(R=C,I=U))}return[R,n]}static midpoint(A,s){return[(A[0]+s[0])/2,(A[1]+s[1])/2,(A[2]+s[2])/2]}static criticalPlaneBelow(A){return Math.floor(A-.5)}static criticalPlaneAbove(A){return Math.ceil(A-.5)}static bisectToLimit(A,s){const R=sA.bisectToSegment(A,s);let n=R[0],I=sA.hueOf(n),r=R[1];for(let L=0;L<3;L++)if(n[L]!==r[L]){let N=-1,l=255;n[L]<r[L]?(N=sA.criticalPlaneBelow(sA.trueDelinearized(n[L])),l=sA.criticalPlaneAbove(sA.trueDelinearized(r[L]))):(N=sA.criticalPlaneAbove(sA.trueDelinearized(n[L])),l=sA.criticalPlaneBelow(sA.trueDelinearized(r[L])));for(let C=0;C<8&&!(Math.abs(l-N)<=1);C++){const U=Math.floor((N+l)/2),D=sA.CRITICAL_PLANES[U],M=sA.setCoordinate(n,D,r,L),h=sA.hueOf(M);sA.areInCyclicOrder(I,s,h)?(r=M,l=U):(n=M,I=h,N=U)}}return sA.midpoint(n,r)}static inverseChromaticAdaptation(A){const s=Math.abs(A),R=Math.max(0,27.13*s/(400-s));return YR(A)*Math.pow(R,1/.42)}static findResultByJ(A,s,R){let n=Math.sqrt(R)*11;const I=tn.DEFAULT,r=1/Math.pow(1.64-Math.pow(.29,I.n),.73),N=.25*(Math.cos(A+2)+3.8)*(5e4/13)*I.nc*I.ncb,l=Math.sin(A),C=Math.cos(A);for(let U=0;U<5;U++){const D=n/100,M=s===0||n===0?0:s/Math.sqrt(D),h=Math.pow(M*r,1/.9),d=I.aw*Math.pow(D,1/I.c/I.z)/I.nbb,f=23*(d+.305)*h/(23*N+11*h*C+108*h*l),H=f*C,B=f*l,K=(460*d+451*H+288*B)/1403,Y=(460*d-891*H-261*B)/1403,v=(460*d-220*H-6300*B)/1403,Z=sA.inverseChromaticAdaptation(K),z=sA.inverseChromaticAdaptation(Y),q=sA.inverseChromaticAdaptation(v),J=th([Z,z,q],sA.LINRGB_FROM_SCALED_DISCOUNT);if(J[0]<0||J[1]<0||J[2]<0)return 0;const Ae=sA.Y_FROM_LINRGB[0],Q=sA.Y_FROM_LINRGB[1],Re=sA.Y_FROM_LINRGB[2],W=Ae*J[0]+Q*J[1]+Re*J[2];if(W<=0)return 0;if(U===4||Math.abs(W-R)<.002)return J[0]>100.01||J[1]>100.01||J[2]>100.01?0:kb(J);n=n-(W-R)*n/(2*W)}return 0}static solveToInt(A,s,R){if(s<1e-4||R<1e-4||R>99.9999)return MZ(R);A=lZ(A);const n=A/180*Math.PI,I=Ya(R),r=sA.findResultByJ(n,s,I);if(r!==0)return r;const L=sA.bisectToLimit(I,n);return kb(L)}static solveToCam(A,s,R){return pi.fromInt(sA.solveToInt(A,s,R))}};o(sA,"HctSolver");let dn=sA;dn.SCALED_DISCOUNT_FROM_LINRGB=[[.001200833568784504,.002389694492170889,.0002795742885861124],[.0005891086651375999,.0029785502573438758,.0003270666104008398],[.00010146692491640572,.0005364214359186694,.0032979401770712076]];dn.LINRGB_FROM_SCALED_DISCOUNT=[[1373.2198709594231,-1100.4251190754821,-7.278681089101213],[-271.815969077903,559.6580465940733,-32.46047482791194],[1.9622899599665666,-57.173814538844006,308.7233197812385]];dn.Y_FROM_LINRGB=[.2126,.7152,.0722];dn.CRITICAL_PLANES=[.015176349177441876,.045529047532325624,.07588174588720938,.10623444424209313,.13658714259697685,.16693984095186062,.19729253930674434,.2276452376616281,.2579979360165119,.28835063437139563,.3188300904430532,.350925934958123,.3848314933096426,.42057480301049466,.458183274052838,.4976837250274023,.5391024159806381,.5824650784040898,.6277969426914107,.6751227633498623,.7244668422128921,.775853049866786,.829304845476233,.8848452951698498,.942497089126609,1.0022825574869039,1.0642236851973577,1.1283421258858297,1.1946592148522128,1.2631959812511864,1.3339731595349034,1.407011200216447,1.4823302800086415,1.5599503113873272,1.6398909516233677,1.7221716113234105,1.8068114625156377,1.8938294463134073,1.9832442801866852,2.075074464868551,2.1693382909216234,2.2660538449872063,2.36523901573795,2.4669114995532007,2.5710888059345764,2.6777882626779785,2.7870270208169257,2.898822059350997,3.0131901897720907,3.1301480604002863,3.2497121605402226,3.3718988244681087,3.4967242352587946,3.624204428461639,3.754355295633311,3.887192587735158,4.022731918402185,4.160988767090289,4.301978482107941,4.445716283538092,4.592217266055746,4.741496401646282,4.893568542229298,5.048448422192488,5.20615066083972,5.3666897647573375,5.5300801301023865,5.696336044816294,5.865471690767354,6.037501145825082,6.212438385869475,6.390297286737924,6.571091626112461,6.7548350853498045,6.941541251256611,7.131223617812143,7.323895587840543,7.5195704746346665,7.7182615035334345,7.919981813454504,8.124744458384042,8.332562408825165,8.543448553206703,8.757415699253682,8.974476575321063,9.194643831691977,9.417930041841839,9.644347703669503,9.873909240696694,10.106627003236781,10.342513269534024,10.58158024687427,10.8238400726681,11.069304815507364,11.317986476196008,11.569896988756009,11.825048221409341,12.083451977536606,12.345119996613247,12.610063955123938,12.878295467455942,13.149826086772048,13.42466730586372,13.702830557985108,13.984327217668513,14.269168601521828,14.55736596900856,14.848930523210871,15.143873411576273,15.44220572664832,15.743938506781891,16.04908273684337,16.35764934889634,16.66964922287304,16.985093187232053,17.30399201960269,17.62635644741625,17.95219714852476,18.281524751807332,18.614349837764564,18.95068293910138,19.290534541298456,19.633915083172692,19.98083495742689,20.331304511189067,20.685334046541502,21.042933821039977,21.404114048223256,21.76888489811322,22.137256497705877,22.50923893145328,22.884842241736916,23.264076429332462,23.6469514538663,24.033477234264016,24.42366364919083,24.817520537484558,25.21505769858089,25.61628489293138,26.021211842414342,26.429848230738664,26.842203703840827,27.258287870275353,27.678110301598522,28.10168053274597,28.529008062403893,28.96010235337422,29.39497283293396,29.83362889318845,30.276079891419332,30.722335150426627,31.172403958865512,31.62629557157785,32.08401920991837,32.54558406207592,33.010999283389665,33.4802739966603,33.953417292456834,34.430438229418264,34.911345834551085,35.39614910352207,35.88485700094671,36.37747846067349,36.87402238606382,37.37449765026789,37.87891309649659,38.38727753828926,38.89959975977785,39.41588851594697,39.93615253289054,40.460400508064545,40.98864111053629,41.520882981230194,42.05713473317016,42.597404951718396,43.141702194811224,43.6900349931913,44.24241185063697,44.798841244188324,45.35933162437017,45.92389141541209,46.49252901546552,47.065252796817916,47.64207110610409,48.22299226451468,48.808024568002054,49.3971762874833,49.9904556690408,50.587870934119984,51.189430279724725,51.79514187861014,52.40501387947288,53.0190544071392,53.637271562750364,54.259673423945976,54.88626804504493,55.517063457223934,56.15206766869424,56.79128866487574,57.43473440856916,58.08241284012621,58.734331877617365,59.39049941699807,60.05092333227251,60.715611475655585,61.38457167773311,62.057811747619894,62.7353394731159,63.417162620860914,64.10328893648692,64.79372614476921,65.48848194977529,66.18756403501224,66.89098006357258,67.59873767827808,68.31084450182222,69.02730813691093,69.74813616640164,70.47333615344107,71.20291564160104,71.93688215501312,72.67524319850172,73.41800625771542,74.16517879925733,74.9167682708136,75.67278210128072,76.43322770089146,77.1981124613393,77.96744375590167,78.74122893956174,79.51947534912904,80.30219030335869,81.08938110306934,81.88105503125999,82.67721935322541,83.4778813166706,84.28304815182372,85.09272707154808,85.90692527145302,86.72564993000343,87.54890820862819,88.3767072518277,89.2090541872801,90.04595612594655,90.88742016217518,91.73345337380438,92.58406282226491,93.43925555268066,94.29903859396902,95.16341895893969,96.03240364439274,96.9059996312159,97.78421388448044,98.6670533535366,99.55452497210776];/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ur=class ur{static from(A,s,R){return new ur(dn.solveToInt(A,s,R))}static fromInt(A){return new ur(A)}toInt(){return this.argb}get hue(){return this.internalHue}set hue(A){this.setInternalState(dn.solveToInt(A,this.internalChroma,this.internalTone))}get chroma(){return this.internalChroma}set chroma(A){this.setInternalState(dn.solveToInt(this.internalHue,A,this.internalTone))}get tone(){return this.internalTone}set tone(A){this.setInternalState(dn.solveToInt(this.internalHue,this.internalChroma,A))}constructor(A){this.argb=A;const s=pi.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=Zb(A),this.argb=A}setInternalState(A){const s=pi.fromInt(A);this.internalHue=s.hue,this.internalChroma=s.chroma,this.internalTone=Zb(A),this.argb=A}inViewingConditions(A){const R=pi.fromInt(this.toInt()).xyzInViewingConditions(A),n=pi.fromXyzInViewingConditions(R[0],R[1],R[2],tn.make());return ur.from(n.hue,n.chroma,Ah(R[1]))}};o(ur,"Hct");let ZT=ur;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ga=class ga{static ratioOfTones(A,s){return A=yC(0,100,A),s=yC(0,100,s),ga.ratioOfYs(Ya(A),Ya(s))}static ratioOfYs(A,s){const R=A>s?A:s,n=R===s?A:s;return(R+5)/(n+5)}static lighter(A,s){if(A<0||A>100)return-1;const R=Ya(A),n=s*(R+5)-5,I=ga.ratioOfYs(n,R),r=Math.abs(I-s);if(I<s&&r>.04)return-1;const L=Ah(n)+.4;return L<0||L>100?-1:L}static darker(A,s){if(A<0||A>100)return-1;const R=Ya(A),n=(R+5)/s-5,I=ga.ratioOfYs(R,n),r=Math.abs(I-s);if(I<s&&r>.04)return-1;const L=Ah(n)-.4;return L<0||L>100?-1:L}static lighterUnsafe(A,s){const R=ga.lighter(A,s);return R<0?100:R}static darkerUnsafe(A,s){const R=ga.darker(A,s);return R<0?0:R}};o(ga,"Contrast");let WR=ga;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const I0=class I0{static isDisliked(A){const s=Math.round(A.hue)>=90&&Math.round(A.hue)<=111,R=Math.round(A.chroma)>16,n=Math.round(A.tone)<65;return s&&R&&n}static fixIfDisliked(A){return I0.isDisliked(A)?ZT.from(A.hue,A.chroma,70):A}};o(I0,"DislikeAnalyzer");let sh=I0;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const UR=class UR{static fromPalette(A){return new UR(A.name??"",A.palette,A.tone,A.isBackground??!1,A.background,A.secondBackground,A.contrastCurve,A.toneDeltaPair)}constructor(A,s,R,n,I,r,L,N){if(this.name=A,this.palette=s,this.tone=R,this.isBackground=n,this.background=I,this.secondBackground=r,this.contrastCurve=L,this.toneDeltaPair=N,this.hctCache=new Map,!I&&r)throw new Error(`Color ${A} has secondBackgrounddefined, but background is not defined.`);if(!I&&L)throw new Error(`Color ${A} has contrastCurvedefined, but background is not defined.`);if(I&&!L)throw new Error(`Color ${A} has backgrounddefined, but contrastCurve is not defined.`)}getArgb(A){return this.getHct(A).toInt()}getHct(A){const s=this.hctCache.get(A);if(s!=null)return s;const R=this.getTone(A),n=this.palette(A).getHct(R);return this.hctCache.size>4&&this.hctCache.clear(),this.hctCache.set(A,n),n}getTone(A){const s=A.contrastLevel<0;if(this.toneDeltaPair){const R=this.toneDeltaPair(A),n=R.roleA,I=R.roleB,r=R.delta,L=R.polarity,N=R.stayTogether,C=this.background(A).getTone(A),U=L==="nearer"||L==="lighter"&&!A.isDark||L==="darker"&&A.isDark,D=U?n:I,M=U?I:n,h=this.name===D.name,_=A.isDark?1:-1,d=D.contrastCurve.getContrast(A.contrastLevel),f=M.contrastCurve.getContrast(A.contrastLevel),H=D.tone(A);let B=WR.ratioOfTones(C,H)>=d?H:UR.foregroundTone(C,d);const K=M.tone(A);let Y=WR.ratioOfTones(C,K)>=f?K:UR.foregroundTone(C,f);return s&&(B=UR.foregroundTone(C,d),Y=UR.foregroundTone(C,f)),(Y-B)*_>=r||(Y=yC(0,100,B+r*_),(Y-B)*_>=r||(B=yC(0,100,Y-r*_))),50<=B&&B<60?_>0?(B=60,Y=Math.max(Y,B+r*_)):(B=49,Y=Math.min(Y,B+r*_)):50<=Y&&Y<60&&(N?_>0?(B=60,Y=Math.max(Y,B+r*_)):(B=49,Y=Math.min(Y,B+r*_)):_>0?Y=60:Y=49),h?B:Y}else{let R=this.tone(A);if(this.background==null)return R;const n=this.background(A).getTone(A),I=this.contrastCurve.getContrast(A.contrastLevel);if(WR.ratioOfTones(n,R)>=I||(R=UR.foregroundTone(n,I)),s&&(R=UR.foregroundTone(n,I)),this.isBackground&&50<=R&&R<60&&(WR.ratioOfTones(49,n)>=I?R=49:R=60),this.secondBackground){const[r,L]=[this.background,this.secondBackground],[N,l]=[r(A).getTone(A),L(A).getTone(A)],[C,U]=[Math.max(N,l),Math.min(N,l)];if(WR.ratioOfTones(C,R)>=I&&WR.ratioOfTones(U,R)>=I)return R;const D=WR.lighter(C,I),M=WR.darker(U,I),h=[];return D!==-1&&h.push(D),M!==-1&&h.push(M),UR.tonePrefersLightForeground(N)||UR.tonePrefersLightForeground(l)?D<0?100:D:h.length===1?h[0]:M<0?0:M}return R}}static foregroundTone(A,s){const R=WR.lighterUnsafe(A,s),n=WR.darkerUnsafe(A,s),I=WR.ratioOfTones(R,A),r=WR.ratioOfTones(n,A);if(UR.tonePrefersLightForeground(A)){const N=Math.abs(I-r)<.1&&I<s&&r<s;return I>=s||I>=r||N?R:n}else return r>=s||r>=I?n:R}static tonePrefersLightForeground(A){return Math.round(A)<60}static toneAllowsLightForeground(A){return Math.round(A)<=49}static enableLightForeground(A){return UR.tonePrefersLightForeground(A)&&!UR.toneAllowsLightForeground(A)?49:A}};o(UR,"DynamicColor");let Vt=UR;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var XT;(function(E){E[E.MONOCHROME=0]="MONOCHROME",E[E.NEUTRAL=1]="NEUTRAL",E[E.TONAL_SPOT=2]="TONAL_SPOT",E[E.VIBRANT=3]="VIBRANT",E[E.EXPRESSIVE=4]="EXPRESSIVE",E[E.FIDELITY=5]="FIDELITY",E[E.CONTENT=6]="CONTENT",E[E.RAINBOW=7]="RAINBOW",E[E.FRUIT_SALAD=8]="FRUIT_SALAD"})(XT||(XT={}));/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const OB=class OB{constructor(A,s,R,n){this.low=A,this.normal=s,this.medium=R,this.high=n}getContrast(A){return A<=-1?this.low:A<0?kL(this.low,this.normal,(A- -1)/1):A<.5?kL(this.normal,this.medium,(A-0)/.5):A<1?kL(this.medium,this.high,(A-.5)/.5):this.high}};o(OB,"ContrastCurve");let MA=OB;/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nB=class nB{constructor(A,s,R,n,I){this.roleA=A,this.roleB=s,this.delta=R,this.polarity=n,this.stayTogether=I}};o(nB,"ToneDeltaPair");let LR=nB;/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function HL(E){return E.variant===XT.FIDELITY||E.variant===XT.CONTENT}o(HL,"isFidelity");function zE(E){return E.variant===XT.MONOCHROME}o(zE,"isMonochrome");function hZ(E,A,s,R){let n=s,I=ZT.from(E,A,s);if(I.chroma<A){let r=I.chroma;for(;I.chroma<A;){n+=R?-1:1;const L=ZT.from(E,A,n);if(r>L.chroma||Math.abs(L.chroma-A)<.4)break;const N=Math.abs(L.chroma-A),l=Math.abs(I.chroma-A);N<l&&(I=L),r=Math.max(r,L.chroma)}}return n}o(hZ,"findDesiredChromaByTone");function _Z(E){return tn.make(void 0,void 0,E.isDark?30:80,void 0,void 0)}o(_Z,"viewingConditionsForAlbers");function _f(E,A){const s=E.inViewingConditions(_Z(A));return Vt.tonePrefersLightForeground(E.tone)&&!Vt.toneAllowsLightForeground(s.tone)?Vt.enableLightForeground(E.tone):Vt.enableLightForeground(s.tone)}o(_f,"performAlbers");const Ho=class Ho{static highestSurface(A){return A.isDark?Ho.surfaceBright:Ho.surfaceDim}};o(Ho,"MaterialDynamicColors");let Qe=Ho;Qe.contentAccentToneDelta=15;Qe.primaryPaletteKeyColor=Vt.fromPalette({name:"primary_palette_key_color",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>E.primaryPalette.keyColor.tone,"tone")});Qe.secondaryPaletteKeyColor=Vt.fromPalette({name:"secondary_palette_key_color",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>E.secondaryPalette.keyColor.tone,"tone")});Qe.tertiaryPaletteKeyColor=Vt.fromPalette({name:"tertiary_palette_key_color",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>E.tertiaryPalette.keyColor.tone,"tone")});Qe.neutralPaletteKeyColor=Vt.fromPalette({name:"neutral_palette_key_color",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.neutralPalette.keyColor.tone,"tone")});Qe.neutralVariantPaletteKeyColor=Vt.fromPalette({name:"neutral_variant_palette_key_color",palette:o(E=>E.neutralVariantPalette,"palette"),tone:o(E=>E.neutralVariantPalette.keyColor.tone,"tone")});Qe.background=Vt.fromPalette({name:"background",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?6:98,"tone"),isBackground:!0});Qe.onBackground=Vt.fromPalette({name:"on_background",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?90:10,"tone"),background:o(E=>Qe.background,"background"),contrastCurve:new MA(3,3,4.5,7)});Qe.surface=Vt.fromPalette({name:"surface",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?6:98,"tone"),isBackground:!0});Qe.surfaceDim=Vt.fromPalette({name:"surface_dim",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?6:87,"tone"),isBackground:!0});Qe.surfaceBright=Vt.fromPalette({name:"surface_bright",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?24:98,"tone"),isBackground:!0});Qe.surfaceContainerLowest=Vt.fromPalette({name:"surface_container_lowest",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?4:100,"tone"),isBackground:!0});Qe.surfaceContainerLow=Vt.fromPalette({name:"surface_container_low",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?10:96,"tone"),isBackground:!0});Qe.surfaceContainer=Vt.fromPalette({name:"surface_container",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?12:94,"tone"),isBackground:!0});Qe.surfaceContainerHigh=Vt.fromPalette({name:"surface_container_high",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?17:92,"tone"),isBackground:!0});Qe.surfaceContainerHighest=Vt.fromPalette({name:"surface_container_highest",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?22:90,"tone"),isBackground:!0});Qe.onSurface=Vt.fromPalette({name:"on_surface",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?90:10,"tone"),background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.surfaceVariant=Vt.fromPalette({name:"surface_variant",palette:o(E=>E.neutralVariantPalette,"palette"),tone:o(E=>E.isDark?30:90,"tone"),isBackground:!0});Qe.onSurfaceVariant=Vt.fromPalette({name:"on_surface_variant",palette:o(E=>E.neutralVariantPalette,"palette"),tone:o(E=>E.isDark?80:30,"tone"),background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(3,4.5,7,11)});Qe.inverseSurface=Vt.fromPalette({name:"inverse_surface",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?90:20,"tone")});Qe.inverseOnSurface=Vt.fromPalette({name:"inverse_on_surface",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>E.isDark?20:95,"tone"),background:o(E=>Qe.inverseSurface,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.outline=Vt.fromPalette({name:"outline",palette:o(E=>E.neutralVariantPalette,"palette"),tone:o(E=>E.isDark?60:50,"tone"),background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1.5,3,4.5,7)});Qe.outlineVariant=Vt.fromPalette({name:"outline_variant",palette:o(E=>E.neutralVariantPalette,"palette"),tone:o(E=>E.isDark?30:80,"tone"),background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7)});Qe.shadow=Vt.fromPalette({name:"shadow",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>0,"tone")});Qe.scrim=Vt.fromPalette({name:"scrim",palette:o(E=>E.neutralPalette,"palette"),tone:o(E=>0,"tone")});Qe.surfaceTint=Vt.fromPalette({name:"surface_tint",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>E.isDark?80:40,"tone"),isBackground:!0});Qe.primary=Vt.fromPalette({name:"primary",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?100:0:E.isDark?80:40,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(3,4.5,7,11),toneDeltaPair:o(E=>new LR(Qe.primaryContainer,Qe.primary,15,"nearer",!1),"toneDeltaPair")});Qe.onPrimary=Vt.fromPalette({name:"on_primary",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:o(E=>Qe.primary,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.primaryContainer=Vt.fromPalette({name:"primary_container",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>HL(E)?_f(E.sourceColorHct,E):zE(E)?E.isDark?85:25:E.isDark?30:90,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.primaryContainer,Qe.primary,15,"nearer",!1),"toneDeltaPair")});Qe.onPrimaryContainer=Vt.fromPalette({name:"on_primary_container",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>HL(E)?Vt.foregroundTone(Qe.primaryContainer.tone(E),4.5):zE(E)?E.isDark?0:100:E.isDark?90:10,"tone"),background:o(E=>Qe.primaryContainer,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.inversePrimary=Vt.fromPalette({name:"inverse_primary",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>E.isDark?40:80,"tone"),background:o(E=>Qe.inverseSurface,"background"),contrastCurve:new MA(3,4.5,7,11)});Qe.secondary=Vt.fromPalette({name:"secondary",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>E.isDark?80:40,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(3,4.5,7,11),toneDeltaPair:o(E=>new LR(Qe.secondaryContainer,Qe.secondary,15,"nearer",!1),"toneDeltaPair")});Qe.onSecondary=Vt.fromPalette({name:"on_secondary",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?10:100:E.isDark?20:100,"tone"),background:o(E=>Qe.secondary,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.secondaryContainer=Vt.fromPalette({name:"secondary_container",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>{const A=E.isDark?30:90;if(zE(E))return E.isDark?30:85;if(!HL(E))return A;let s=hZ(E.secondaryPalette.hue,E.secondaryPalette.chroma,A,!E.isDark);return s=_f(E.secondaryPalette.getHct(s),E),s},"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.secondaryContainer,Qe.secondary,15,"nearer",!1),"toneDeltaPair")});Qe.onSecondaryContainer=Vt.fromPalette({name:"on_secondary_container",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>HL(E)?Vt.foregroundTone(Qe.secondaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:o(E=>Qe.secondaryContainer,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.tertiary=Vt.fromPalette({name:"tertiary",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?90:25:E.isDark?80:40,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(3,4.5,7,11),toneDeltaPair:o(E=>new LR(Qe.tertiaryContainer,Qe.tertiary,15,"nearer",!1),"toneDeltaPair")});Qe.onTertiary=Vt.fromPalette({name:"on_tertiary",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?10:90:E.isDark?20:100,"tone"),background:o(E=>Qe.tertiary,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.tertiaryContainer=Vt.fromPalette({name:"tertiary_container",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>{if(zE(E))return E.isDark?60:49;if(!HL(E))return E.isDark?30:90;const A=_f(E.tertiaryPalette.getHct(E.sourceColorHct.tone),E),s=E.tertiaryPalette.getHct(A);return sh.fixIfDisliked(s).tone},"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.tertiaryContainer,Qe.tertiary,15,"nearer",!1),"toneDeltaPair")});Qe.onTertiaryContainer=Vt.fromPalette({name:"on_tertiary_container",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?E.isDark?0:100:HL(E)?Vt.foregroundTone(Qe.tertiaryContainer.tone(E),4.5):E.isDark?90:10,"tone"),background:o(E=>Qe.tertiaryContainer,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.error=Vt.fromPalette({name:"error",palette:o(E=>E.errorPalette,"palette"),tone:o(E=>E.isDark?80:40,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(3,4.5,7,11),toneDeltaPair:o(E=>new LR(Qe.errorContainer,Qe.error,15,"nearer",!1),"toneDeltaPair")});Qe.onError=Vt.fromPalette({name:"on_error",palette:o(E=>E.errorPalette,"palette"),tone:o(E=>E.isDark?20:100,"tone"),background:o(E=>Qe.error,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.errorContainer=Vt.fromPalette({name:"error_container",palette:o(E=>E.errorPalette,"palette"),tone:o(E=>E.isDark?30:90,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.errorContainer,Qe.error,15,"nearer",!1),"toneDeltaPair")});Qe.onErrorContainer=Vt.fromPalette({name:"on_error_container",palette:o(E=>E.errorPalette,"palette"),tone:o(E=>E.isDark?90:10,"tone"),background:o(E=>Qe.errorContainer,"background"),contrastCurve:new MA(4.5,7,11,21)});Qe.primaryFixed=Vt.fromPalette({name:"primary_fixed",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?40:90,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.primaryFixed,Qe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.primaryFixedDim=Vt.fromPalette({name:"primary_fixed_dim",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?30:80,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.primaryFixed,Qe.primaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.onPrimaryFixed=Vt.fromPalette({name:"on_primary_fixed",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?100:10,"tone"),background:o(E=>Qe.primaryFixedDim,"background"),secondBackground:o(E=>Qe.primaryFixed,"secondBackground"),contrastCurve:new MA(4.5,7,11,21)});Qe.onPrimaryFixedVariant=Vt.fromPalette({name:"on_primary_fixed_variant",palette:o(E=>E.primaryPalette,"palette"),tone:o(E=>zE(E)?90:30,"tone"),background:o(E=>Qe.primaryFixedDim,"background"),secondBackground:o(E=>Qe.primaryFixed,"secondBackground"),contrastCurve:new MA(3,4.5,7,11)});Qe.secondaryFixed=Vt.fromPalette({name:"secondary_fixed",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>zE(E)?80:90,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.secondaryFixed,Qe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.secondaryFixedDim=Vt.fromPalette({name:"secondary_fixed_dim",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>zE(E)?70:80,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.secondaryFixed,Qe.secondaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.onSecondaryFixed=Vt.fromPalette({name:"on_secondary_fixed",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>10,"tone"),background:o(E=>Qe.secondaryFixedDim,"background"),secondBackground:o(E=>Qe.secondaryFixed,"secondBackground"),contrastCurve:new MA(4.5,7,11,21)});Qe.onSecondaryFixedVariant=Vt.fromPalette({name:"on_secondary_fixed_variant",palette:o(E=>E.secondaryPalette,"palette"),tone:o(E=>zE(E)?25:30,"tone"),background:o(E=>Qe.secondaryFixedDim,"background"),secondBackground:o(E=>Qe.secondaryFixed,"secondBackground"),contrastCurve:new MA(3,4.5,7,11)});Qe.tertiaryFixed=Vt.fromPalette({name:"tertiary_fixed",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?40:90,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.tertiaryFixed,Qe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.tertiaryFixedDim=Vt.fromPalette({name:"tertiary_fixed_dim",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?30:80,"tone"),isBackground:!0,background:o(E=>Qe.highestSurface(E),"background"),contrastCurve:new MA(1,1,3,7),toneDeltaPair:o(E=>new LR(Qe.tertiaryFixed,Qe.tertiaryFixedDim,10,"lighter",!0),"toneDeltaPair")});Qe.onTertiaryFixed=Vt.fromPalette({name:"on_tertiary_fixed",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?100:10,"tone"),background:o(E=>Qe.tertiaryFixedDim,"background"),secondBackground:o(E=>Qe.tertiaryFixed,"secondBackground"),contrastCurve:new MA(4.5,7,11,21)});Qe.onTertiaryFixedVariant=Vt.fromPalette({name:"on_tertiary_fixed_variant",palette:o(E=>E.tertiaryPalette,"palette"),tone:o(E=>zE(E)?90:30,"tone"),background:o(E=>Qe.tertiaryFixedDim,"background"),secondBackground:o(E=>Qe.tertiaryFixed,"secondBackground"),contrastCurve:new MA(3,4.5,7,11)});/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const aB=class aB{fromInt(A){return DZ(A)}toInt(A){return UZ(A[0],A[1],A[2])}distance(A,s){const R=A[0]-s[0],n=A[1]-s[1],I=A[2]-s[2];return R*R+n*n+I*I}};o(aB,"LabPointProvider");let Rh=aB;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const PZ=10,GZ=3,iB=class iB{static quantize(A,s,R){const n=new Map,I=new Array,r=new Array,L=new Rh;let N=0;for(let H=0;H<A.length;H++){const B=A[H],K=n.get(B);K===void 0?(N++,I.push(L.fromInt(B)),r.push(B),n.set(B,1)):n.set(B,K+1)}const l=new Array;for(let H=0;H<N;H++){const B=r[H],K=n.get(B);K!==void 0&&(l[H]=K)}let C=Math.min(R,N);s.length>0&&(C=Math.min(C,s.length));const U=new Array;for(let H=0;H<s.length;H++)U.push(L.fromInt(s[H]));const D=C-U.length;if(s.length===0&&D>0)for(let H=0;H<D;H++){const B=Math.random()*100,K=Math.random()*201+-100,Y=Math.random()*201+-100;U.push(new Array(B,K,Y))}const M=new Array;for(let H=0;H<N;H++)M.push(Math.floor(Math.random()*C));const h=new Array;for(let H=0;H<C;H++){h.push(new Array);for(let B=0;B<C;B++)h[H].push(0)}const _=new Array;for(let H=0;H<C;H++){_.push(new Array);for(let B=0;B<C;B++)_[H].push(new nh)}const d=new Array;for(let H=0;H<C;H++)d.push(0);for(let H=0;H<PZ;H++){for(let Z=0;Z<C;Z++){for(let z=Z+1;z<C;z++){const q=L.distance(U[Z],U[z]);_[z][Z].distance=q,_[z][Z].index=Z,_[Z][z].distance=q,_[Z][z].index=z}_[Z].sort();for(let z=0;z<C;z++)h[Z][z]=_[Z][z].index}let B=0;for(let Z=0;Z<N;Z++){const z=I[Z],q=M[Z],J=U[q],Ae=L.distance(z,J);let Q=Ae,Re=-1;for(let W=0;W<C;W++){if(_[q][W].distance>=4*Ae)continue;const ie=L.distance(z,U[W]);ie<Q&&(Q=ie,Re=W)}Re!==-1&&Math.abs(Math.sqrt(Q)-Math.sqrt(Ae))>GZ&&(B++,M[Z]=Re)}if(B===0&&H!==0)break;const K=new Array(C).fill(0),Y=new Array(C).fill(0),v=new Array(C).fill(0);for(let Z=0;Z<C;Z++)d[Z]=0;for(let Z=0;Z<N;Z++){const z=M[Z],q=I[Z],J=l[Z];d[z]+=J,K[z]+=q[0]*J,Y[z]+=q[1]*J,v[z]+=q[2]*J}for(let Z=0;Z<C;Z++){const z=d[Z];if(z===0){U[Z]=[0,0,0];continue}const q=K[Z]/z,J=Y[Z]/z,Ae=v[Z]/z;U[Z]=[q,J,Ae]}}const f=new Map;for(let H=0;H<C;H++){const B=d[H];if(B===0)continue;const K=L.toInt(U[H]);f.has(K)||f.set(K,B)}return f}};o(iB,"QuantizerWsmeans");let Oh=iB;const IB=class IB{constructor(){this.distance=-1,this.index=-1}};o(IB,"DistanceAndIndex");let nh=IB;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rB=class rB{static quantize(A){const s=new Map;for(let R=0;R<A.length;R++){const n=A[R];Ik(n)<255||s.set(n,(s.get(n)??0)+1)}return s}};o(rB,"QuantizerMap");let ah=rB;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const Cl=5,wO=33,fL=35937,TR={RED:"red",GREEN:"green",BLUE:"blue"},LB=class LB{constructor(A=[],s=[],R=[],n=[],I=[],r=[]){this.weights=A,this.momentsR=s,this.momentsG=R,this.momentsB=n,this.moments=I,this.cubes=r}quantize(A,s){this.constructHistogram(A),this.computeMoments();const R=this.createBoxes(s);return this.createResult(R.resultCount)}constructHistogram(A){this.weights=Array.from({length:fL}).fill(0),this.momentsR=Array.from({length:fL}).fill(0),this.momentsG=Array.from({length:fL}).fill(0),this.momentsB=Array.from({length:fL}).fill(0),this.moments=Array.from({length:fL}).fill(0);const s=ah.quantize(A);for(const[R,n]of s.entries()){const I=V0(R),r=x0(R),L=b0(R),N=8-Cl,l=(I>>N)+1,C=(r>>N)+1,U=(L>>N)+1,D=this.getIndex(l,C,U);this.weights[D]=(this.weights[D]??0)+n,this.momentsR[D]+=n*I,this.momentsG[D]+=n*r,this.momentsB[D]+=n*L,this.moments[D]+=n*(I*I+r*r+L*L)}}computeMoments(){for(let A=1;A<wO;A++){const s=Array.from({length:wO}).fill(0),R=Array.from({length:wO}).fill(0),n=Array.from({length:wO}).fill(0),I=Array.from({length:wO}).fill(0),r=Array.from({length:wO}).fill(0);for(let L=1;L<wO;L++){let N=0,l=0,C=0,U=0,D=0;for(let M=1;M<wO;M++){const h=this.getIndex(A,L,M);N+=this.weights[h],l+=this.momentsR[h],C+=this.momentsG[h],U+=this.momentsB[h],D+=this.moments[h],s[M]+=N,R[M]+=l,n[M]+=C,I[M]+=U,r[M]+=D;const _=this.getIndex(A-1,L,M);this.weights[h]=this.weights[_]+s[M],this.momentsR[h]=this.momentsR[_]+R[M],this.momentsG[h]=this.momentsG[_]+n[M],this.momentsB[h]=this.momentsB[_]+I[M],this.moments[h]=this.moments[_]+r[M]}}}}createBoxes(A){this.cubes=Array.from({length:A}).fill(0).map(()=>new Ih);const s=Array.from({length:A}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=wO-1,this.cubes[0].g1=wO-1,this.cubes[0].b1=wO-1;let R=A,n=0;for(let I=1;I<A;I++){this.cut(this.cubes[n],this.cubes[I])?(s[n]=this.cubes[n].vol>1?this.variance(this.cubes[n]):0,s[I]=this.cubes[I].vol>1?this.variance(this.cubes[I]):0):(s[n]=0,I--),n=0;let r=s[0];for(let L=1;L<=I;L++)s[L]>r&&(r=s[L],n=L);if(r<=0){R=I+1;break}}return new rh(A,R)}createResult(A){const s=[];for(let R=0;R<A;++R){const n=this.cubes[R],I=this.volume(n,this.weights);if(I>0){const r=Math.round(this.volume(n,this.momentsR)/I),L=Math.round(this.volume(n,this.momentsG)/I),N=Math.round(this.volume(n,this.momentsB)/I),l=255<<24|(r&255)<<16|(L&255)<<8|N&255;s.push(l)}}return s}variance(A){const s=this.volume(A,this.momentsR),R=this.volume(A,this.momentsG),n=this.volume(A,this.momentsB),I=this.moments[this.getIndex(A.r1,A.g1,A.b1)]-this.moments[this.getIndex(A.r1,A.g1,A.b0)]-this.moments[this.getIndex(A.r1,A.g0,A.b1)]+this.moments[this.getIndex(A.r1,A.g0,A.b0)]-this.moments[this.getIndex(A.r0,A.g1,A.b1)]+this.moments[this.getIndex(A.r0,A.g1,A.b0)]+this.moments[this.getIndex(A.r0,A.g0,A.b1)]-this.moments[this.getIndex(A.r0,A.g0,A.b0)],r=s*s+R*R+n*n,L=this.volume(A,this.weights);return I-r/L}cut(A,s){const R=this.volume(A,this.momentsR),n=this.volume(A,this.momentsG),I=this.volume(A,this.momentsB),r=this.volume(A,this.weights),L=this.maximize(A,TR.RED,A.r0+1,A.r1,R,n,I,r),N=this.maximize(A,TR.GREEN,A.g0+1,A.g1,R,n,I,r),l=this.maximize(A,TR.BLUE,A.b0+1,A.b1,R,n,I,r);let C;const U=L.maximum,D=N.maximum,M=l.maximum;if(U>=D&&U>=M){if(L.cutLocation<0)return!1;C=TR.RED}else D>=U&&D>=M?C=TR.GREEN:C=TR.BLUE;switch(s.r1=A.r1,s.g1=A.g1,s.b1=A.b1,C){case TR.RED:A.r1=L.cutLocation,s.r0=A.r1,s.g0=A.g0,s.b0=A.b0;break;case TR.GREEN:A.g1=N.cutLocation,s.r0=A.r0,s.g0=A.g1,s.b0=A.b0;break;case TR.BLUE:A.b1=l.cutLocation,s.r0=A.r0,s.g0=A.g0,s.b0=A.b1;break;default:throw new Error("unexpected direction "+C)}return A.vol=(A.r1-A.r0)*(A.g1-A.g0)*(A.b1-A.b0),s.vol=(s.r1-s.r0)*(s.g1-s.g0)*(s.b1-s.b0),!0}maximize(A,s,R,n,I,r,L,N){const l=this.bottom(A,s,this.momentsR),C=this.bottom(A,s,this.momentsG),U=this.bottom(A,s,this.momentsB),D=this.bottom(A,s,this.weights);let M=0,h=-1,_=0,d=0,f=0,H=0;for(let B=R;B<n;B++){if(_=l+this.top(A,s,B,this.momentsR),d=C+this.top(A,s,B,this.momentsG),f=U+this.top(A,s,B,this.momentsB),H=D+this.top(A,s,B,this.weights),H===0)continue;let K=(_*_+d*d+f*f)*1,Y=H*1,v=K/Y;_=I-_,d=r-d,f=L-f,H=N-H,H!==0&&(K=(_*_+d*d+f*f)*1,Y=H*1,v+=K/Y,v>M&&(M=v,h=B))}return new Lh(h,M)}volume(A,s){return s[this.getIndex(A.r1,A.g1,A.b1)]-s[this.getIndex(A.r1,A.g1,A.b0)]-s[this.getIndex(A.r1,A.g0,A.b1)]+s[this.getIndex(A.r1,A.g0,A.b0)]-s[this.getIndex(A.r0,A.g1,A.b1)]+s[this.getIndex(A.r0,A.g1,A.b0)]+s[this.getIndex(A.r0,A.g0,A.b1)]-s[this.getIndex(A.r0,A.g0,A.b0)]}bottom(A,s,R){switch(s){case TR.RED:return-R[this.getIndex(A.r0,A.g1,A.b1)]+R[this.getIndex(A.r0,A.g1,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case TR.GREEN:return-R[this.getIndex(A.r1,A.g0,A.b1)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g0,A.b1)]-R[this.getIndex(A.r0,A.g0,A.b0)];case TR.BLUE:return-R[this.getIndex(A.r1,A.g1,A.b0)]+R[this.getIndex(A.r1,A.g0,A.b0)]+R[this.getIndex(A.r0,A.g1,A.b0)]-R[this.getIndex(A.r0,A.g0,A.b0)];default:throw new Error("unexpected direction $direction")}}top(A,s,R,n){switch(s){case TR.RED:return n[this.getIndex(R,A.g1,A.b1)]-n[this.getIndex(R,A.g1,A.b0)]-n[this.getIndex(R,A.g0,A.b1)]+n[this.getIndex(R,A.g0,A.b0)];case TR.GREEN:return n[this.getIndex(A.r1,R,A.b1)]-n[this.getIndex(A.r1,R,A.b0)]-n[this.getIndex(A.r0,R,A.b1)]+n[this.getIndex(A.r0,R,A.b0)];case TR.BLUE:return n[this.getIndex(A.r1,A.g1,R)]-n[this.getIndex(A.r1,A.g0,R)]-n[this.getIndex(A.r0,A.g1,R)]+n[this.getIndex(A.r0,A.g0,R)];default:throw new Error("unexpected direction $direction")}}getIndex(A,s,R){return(A<<Cl*2)+(A<<Cl+1)+A+(s<<Cl)+s+R}};o(LB,"QuantizerWu");let ih=LB;const oB=class oB{constructor(A=0,s=0,R=0,n=0,I=0,r=0,L=0){this.r0=A,this.r1=s,this.g0=R,this.g1=n,this.b0=I,this.b1=r,this.vol=L}};o(oB,"Box");let Ih=oB;const TB=class TB{constructor(A,s){this.requestedCount=A,this.resultCount=s}};o(TB,"CreateBoxesResult");let rh=TB;const SB=class SB{constructor(A,s){this.cutLocation=A,this.maximum=s}};o(SB,"MaximizeResult");let Lh=SB;/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const NB=class NB{static quantize(A,s){const n=new ih().quantize(A,s);return Oh.quantize(A,n,s)}};o(NB,"QuantizerCelebi");let QT=NB;const lB=class lB{constructor(A=null){this.cursor=0,this.active=!1,this.mode=A}show(A){return this.active=!0,!0}getUi(){return a.ui}getTextColor(A,s=!1){return eA(A,s,a.uiTheme)}getCursor(){return this.cursor}setCursor(A){const s=this.cursor!==A;return s&&(this.cursor=A),s}setMouseCursorStyle(A){a.input.manager.canvas.style.cursor=A}clear(){this.active=!1}destroy(){}};o(lB,"UiHandler");let Js=lB;const CB=class CB extends Js{constructor(A=null){super(A),this.tutorialActive=!1}processTutorialInput(A){if((A===X.ACTION||A===X.CANCEL)&&this.onActionInput){this.getUi().playSelect();const s=this.onActionInput;return this.onActionInput=null,s(),this.awaitingActionInput=!1,!0}return!1}initTutorialOverlay(A){this.tutorialOverlay||(this.tutorialOverlay=new Phaser.GameObjects.Rectangle(a,-1,-1,a.scaledCanvas.width,a.scaledCanvas.height,460551),this.tutorialOverlay.setName("tutorial-overlay"),this.tutorialOverlay.setOrigin(0,0),this.tutorialOverlay.setAlpha(0)),A&&A.add(this.tutorialOverlay)}};o(CB,"AwaitableUiHandler");let ia=CB;const uB=class uB extends ia{constructor(A=null){super(A),this.pendingPrompt=!1}initPromptSprite(A){if(!this.prompt){const s=a.add.sprite(0,0,"prompt");s.setVisible(!1),s.setOrigin(0,0),this.prompt=s}A&&A.add(this.prompt)}showText(A,s,R,n,I,r){this.showTextInternal(A,s,R,n,I,r)}showDialogue(A,s,R,n,I,r,L){this.showTextInternal(A,R,n,I,r,L)}showTextInternal(A,s,R,n,I,r){s==null&&(s=20);const L=new Map,N=new Map,l=new Map,C=new Map,U=/@(c|d|s|f)\{(.*?)\}/;let D;const M=[],h=["#POKEMON1","#POKEMON2"];for(let _=0;_<a.getPlayerField().length;_++)M.push(a.getPlayerField()[_].getNameToRender()),A=A.split(M[_]).join(h[_]);for(;D=U.exec(A);){switch(D[1]){case"c":L.set(D.index,D[2]);break;case"d":N.set(D.index,Number.parseInt(D[2]));break;case"s":l.set(D.index,D[2]);break;case"f":C.set(D.index,Number.parseInt(D[2]));break}A=A.slice(0,D.index)+A.slice(D.index+D[2].length+4)}for(let _=0;_<a.getPlayerField().length;_++)A=A.split(h[_]).join(M[_]);if(A){const _=A.split(" ");let d=1,f="";for(let H=0;H<_.length;H++){const B=f?`${f} ${_[H]}`:_[H];if(_[H].includes(`
`))f=B,d++;else{const K=this.message.runWordWrap(B).split(/\n/g).length;K>d?(d=K,f=`${f}
${_[H]}`):f=B}}A=f}if(this.textTimer&&(this.textTimer.remove(),this.textCallbackTimer&&this.textCallbackTimer.callback()),I){const _=R;R=o(()=>{const d=o(()=>this.showPrompt(_,n),"showPrompt");r?a.time.delayedCall(r,d):d()},"callback")}s?(this.clearText(),I&&(this.pendingPrompt=!0),this.textTimer=a.time.addEvent({delay:s,callback:o(()=>{var Y;const _=A.length-((Y=this.textTimer)==null?void 0:Y.repeatCount),d=L.get(_),f=l.get(_),H=N.get(_),B=C.get(_);this.message.setText(A.slice(0,_));const K=o(()=>{var v;d&&a.charSprite.setVariant(d),f&&a.playSound(f),R&&!((v=this.textTimer)!=null&&v.repeatCount)&&(n&&!I?this.textCallbackTimer=a.time.delayedCall(n,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),R()}):R())},"advance");H?(this.textTimer.paused=!0,a.tweens.addCounter({duration:UE(H),onComplete:o(()=>{this.textTimer.paused=!1,K()},"onComplete")})):B?(this.textTimer.paused=!0,a.time.delayedCall(150,()=>{a.ui.fadeOut(750).then(()=>{const v=UE(B);a.time.delayedCall(v,()=>{a.ui.fadeIn(500).then(()=>{this.textTimer.paused=!1,K()})})})})):K()},"callback"),repeat:A.length})):(this.message.setText(A),I&&(this.pendingPrompt=!0),R&&R())}showPrompt(A,s){const R=this.message.runWordWrap(this.message.text).split(/\n/g),n=R.length,I=R[R.length-1],r=a.add.text(0,0,I,{font:"96px emerald"});r.setScale(this.message.scale);const L=r.displayWidth;r.destroy(),this.prompt&&(this.prompt.setPosition(this.message.x+L+2,this.message.y+(n-1)*18+2),this.prompt.play("prompt")),this.pendingPrompt=!1,this.awaitingActionInput=!0,this.onActionInput=()=>{this.prompt&&(this.prompt.anims.stop(),this.prompt.setVisible(!1)),A&&(s?this.textCallbackTimer=a.time.delayedCall(s,()=>{this.textCallbackTimer&&(this.textCallbackTimer.destroy(),this.textCallbackTimer=null),A()}):A())}}isTextAnimationInProgress(){return this.textTimer?this.textTimer.repeatCount<this.textTimer.repeat:!1}clearText(){this.message.setText(""),this.pendingPrompt=!1}clear(){super.clear()}};o(uB,"MessageUiHandler");let hs=uB;const UB=class UB extends hs{constructor(){super(te.MESSAGE),this.wordWrapWidth=1780}setup(){const A=this.getUi();this.textTimer=null,this.textCallbackTimer=null,this.bg=a.add.sprite(0,0,"bg",a.windowType),this.bg.setName("sprite-battle-msg-bg"),this.bg.setOrigin(0,1),A.add(this.bg),this.commandWindow=Gt(202,0,118,48),this.commandWindow.setName("window-command"),this.commandWindow.setOrigin(0,1),this.commandWindow.setVisible(!1),A.add(this.commandWindow),this.movesWindowContainer=a.add.container(0,0),this.movesWindowContainer.setName("moves-bg"),this.movesWindowContainer.setVisible(!1);const s=Gt(0,0,243,48);s.setName("moves-window"),s.setOrigin(0,1);const R=Gt(240,0,80,48,!1,!1,-1,132);R.setName("move-details-window"),R.setOrigin(0,1),this.movesWindowContainer.add([s,R]),A.add(this.movesWindowContainer);const n=a.add.container(12,-39);A.add(n);const I=Se(0,0,"",k.MESSAGE,{maxLines:2,wordWrap:{width:this.wordWrapWidth}});n.add(I),this.message=I,this.nameBoxContainer=a.add.container(0,-16),this.nameBoxContainer.setVisible(!1),this.nameBox=a.add.nineslice(0,0,"namebox",a.windowType,72,16,8,8,5,5),this.nameBox.setOrigin(0,0),this.nameText=Se(8,0,"Rival",k.MESSAGE,{maxLines:1}),this.nameBoxContainer.add(this.nameBox),this.nameBoxContainer.add(this.nameText),n.add(this.nameBoxContainer),this.initPromptSprite(n);const r=a.add.container(0,0);r.setVisible(!1),A.add(r),this.levelUpStatsContainer=r;const L=Se(a.game.canvas.width/6-73,-94,"",k.WINDOW,{maxLines:6});L.setLineSpacing(u.resolvedLanguage==="ja"?25:5);let N="";for(const D of Hn)N+=`${u.t(mE(D))}
`;L.text=N,L.x-=L.displayWidth;const l=Gt(a.game.canvas.width/6,-100,80+L.displayWidth,100);l.setOrigin(1,0),r.add(l),r.add(L);const C=Se(a.game.canvas.width/6-50,-94,`+
+
+
+
+
+`,k.WINDOW,{maxLines:6});C.setLineSpacing(u.resolvedLanguage==="ja"?25:5),r.add(C),this.levelUpStatsIncrContent=C;const U=pE(a.game.canvas.width/6-7,-94,"",k.WINDOW,{maxLines:6,lineSpacing:5});U.setLineSpacing(u.resolvedLanguage==="ja"?25:5),U.setOrigin(1,0),U.setAlign("right"),r.add(U),this.levelUpStatsValuesContent=U}show(A){return super.show(A),this.commandWindow.setVisible(!1),this.movesWindowContainer.setVisible(!1),this.message.setWordWrapWidth(this.wordWrapWidth),!0}processInput(A){const s=this.getUi();if(this.awaitingActionInput&&(A===X.CANCEL||A===X.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}clear(){super.clear()}showText(A,s,R,n,I,r){this.hideNameText(),super.showText(A,s,R,n,I,r)}showDialogue(A,s,R,n,I,r,L){s&&this.showNameText(s),super.showDialogue(A,s,R,n,I,r,L)}promptLevelUpStats(A,s,R){return new Promise(n=>{if(!a.showLevelUpStats)return n();const I=a.getPlayerParty()[A].stats;let r="";for(const L of Hn)r+=`${R?I[L]:I[L]-s[L]}
`;this.levelUpStatsValuesContent.text=r,this.levelUpStatsIncrContent.setVisible(!R),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{if(!R)return this.promptLevelUpStats(A,[],!0).then(()=>n());this.levelUpStatsContainer.setVisible(!1),n()}})}promptIvs(A,s){return new Promise(R=>{a.executeWithSeedOffset(()=>{let n="";for(const I of Hn)n+=`${this.getIvDescriptor(s[I],I,A)}
`;this.levelUpStatsValuesContent.text=n,this.levelUpStatsIncrContent.setVisible(!1),this.levelUpStatsContainer.setVisible(!0),this.awaitingActionInput=!0,this.onActionInput=()=>{this.levelUpStatsContainer.setVisible(!1),R()}},A)})}getIvDescriptor(A,s,R){const n=a.getPokemonById(R).species.getRootSpeciesId(),I=a.gameData.dexData[n].ivs,r=a.uiTheme,L=o((N,l,C)=>{let U;return l?C===31?U=k.PERFECT_IV:U=k.SUMMARY_GREEN:U=k.WINDOW,`[color=${eA(U,!1,r)}][shadow=${eA(U,!0,r)}]${N}[/shadow][/color]`},"coloredText");return A>30?L(u.t("battleMessageUiHandler:ivBest"),A>I[s],A):A===30?L(u.t("battleMessageUiHandler:ivFantastic"),A>I[s],A):A>20?L(u.t("battleMessageUiHandler:ivVeryGood"),A>I[s],A):A>10?L(u.t("battleMessageUiHandler:ivPrettyGood"),A>I[s],A):A>0?L(u.t("battleMessageUiHandler:ivDecent"),A>I[s],A):L(u.t("battleMessageUiHandler:ivNoGood"),A>I[s],A)}showNameText(A){this.nameBoxContainer.setVisible(!0),this.nameText.setText(A),this.nameBox.width=this.nameText.displayWidth+16}hideNameText(){this.nameBoxContainer.setVisible(!1)}};o(UB,"BattleMessageUiHandler");let oh=UB;var ss=(E=>(E[E.NONE=0]="NONE",E[E.PASSIVE=1]="PASSIVE",E[E.ACTIVE=2]="ACTIVE",E))(ss||{});const DB=class DB{setup(){this.icons=new Map,this.toggled=!1;const A=o(s=>{const R=s.getValue();this.toggled=!!R;for(const n of this.icons.keys()){const I=this.icons.get(n),r=I?this.getModeYDelta(I):0;n.y+=r*(this.toggled?1:-1)}},"onAlternate");a.tweens.addCounter({duration:Ot(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:A,onYoyo:A})}getModeYDelta(A){switch(A){case 0:return 0;case 1:return-1;case 2:return-2}}addOrUpdate(A,s){Array.isArray(A)||(A=[A]);for(const R of A)if(!(this.icons.has(R)&&this.icons.get(R)===s)){if(this.toggled){const n=this.icons.has(R)?this.icons.get(R):0,I=this.getModeYDelta(s);R.y+=I+n}this.icons.set(R,s)}}remove(A){Array.isArray(A)||(A=[A]);for(const s of A){if(this.toggled){const R=this.icons.get(s),n=R?this.getModeYDelta(R):0;s.y-=n}this.icons.delete(s)}}removeAll(){for(const A of this.icons.keys()){if(this.toggled){const s=this.icons.get(A),R=s?this.getModeYDelta(s):0;A.y-=R}this.icons.delete(A)}}};o(DB,"PokemonIconAnimHandler");let II=DB;var ut=(E=>(E[E.SINGLE_GENERATION=0]="SINGLE_GENERATION",E[E.SINGLE_TYPE=1]="SINGLE_TYPE",E[E.LOWER_MAX_STARTER_COST=2]="LOWER_MAX_STARTER_COST",E[E.LOWER_STARTER_POINTS=3]="LOWER_STARTER_POINTS",E[E.FRESH_START=4]="FRESH_START",E[E.INVERSE_BATTLE=5]="INVERSE_BATTLE",E[E.FLIP_STAT=6]="FLIP_STAT",E))(ut||{}),Me=(E=>(E.MEGA="mega",E.MEGA_X="mega-x",E.MEGA_Y="mega-y",E.PRIMAL="primal",E.ORIGIN="origin",E.INCARNATE="incarnate",E.THERIAN="therian",E.GIGANTAMAX="gigantamax",E.GIGANTAMAX_SINGLE="gigantamax-single",E.GIGANTAMAX_RAPID="gigantamax-rapid",E.ETERNAMAX="eternamax",E))(Me||{}),_R=(E=>(E[E.NONE=0]="NONE",E[E.ABOMASITE=1]="ABOMASITE",E[E.ABSOLITE=2]="ABSOLITE",E[E.AERODACTYLITE=3]="AERODACTYLITE",E[E.AGGRONITE=4]="AGGRONITE",E[E.ALAKAZITE=5]="ALAKAZITE",E[E.ALTARIANITE=6]="ALTARIANITE",E[E.AMPHAROSITE=7]="AMPHAROSITE",E[E.AUDINITE=8]="AUDINITE",E[E.BANETTITE=9]="BANETTITE",E[E.BEEDRILLITE=10]="BEEDRILLITE",E[E.BLASTOISINITE=11]="BLASTOISINITE",E[E.BLAZIKENITE=12]="BLAZIKENITE",E[E.CAMERUPTITE=13]="CAMERUPTITE",E[E.CHARIZARDITE_X=14]="CHARIZARDITE_X",E[E.CHARIZARDITE_Y=15]="CHARIZARDITE_Y",E[E.DIANCITE=16]="DIANCITE",E[E.GALLADITE=17]="GALLADITE",E[E.GARCHOMPITE=18]="GARCHOMPITE",E[E.GARDEVOIRITE=19]="GARDEVOIRITE",E[E.GENGARITE=20]="GENGARITE",E[E.GLALITITE=21]="GLALITITE",E[E.GYARADOSITE=22]="GYARADOSITE",E[E.HERACRONITE=23]="HERACRONITE",E[E.HOUNDOOMINITE=24]="HOUNDOOMINITE",E[E.KANGASKHANITE=25]="KANGASKHANITE",E[E.LATIASITE=26]="LATIASITE",E[E.LATIOSITE=27]="LATIOSITE",E[E.LOPUNNITE=28]="LOPUNNITE",E[E.LUCARIONITE=29]="LUCARIONITE",E[E.MANECTITE=30]="MANECTITE",E[E.MAWILITE=31]="MAWILITE",E[E.MEDICHAMITE=32]="MEDICHAMITE",E[E.METAGROSSITE=33]="METAGROSSITE",E[E.MEWTWONITE_X=34]="MEWTWONITE_X",E[E.MEWTWONITE_Y=35]="MEWTWONITE_Y",E[E.PIDGEOTITE=36]="PIDGEOTITE",E[E.PINSIRITE=37]="PINSIRITE",E[E.RAYQUAZITE=38]="RAYQUAZITE",E[E.SABLENITE=39]="SABLENITE",E[E.SALAMENCITE=40]="SALAMENCITE",E[E.SCEPTILITE=41]="SCEPTILITE",E[E.SCIZORITE=42]="SCIZORITE",E[E.SHARPEDONITE=43]="SHARPEDONITE",E[E.SLOWBRONITE=44]="SLOWBRONITE",E[E.STEELIXITE=45]="STEELIXITE",E[E.SWAMPERTITE=46]="SWAMPERTITE",E[E.TYRANITARITE=47]="TYRANITARITE",E[E.VENUSAURITE=48]="VENUSAURITE",E[E.BLUE_ORB=50]="BLUE_ORB",E[E.RED_ORB=51]="RED_ORB",E[E.ADAMANT_CRYSTAL=52]="ADAMANT_CRYSTAL",E[E.LUSTROUS_GLOBE=53]="LUSTROUS_GLOBE",E[E.GRISEOUS_CORE=54]="GRISEOUS_CORE",E[E.REVEAL_GLASS=55]="REVEAL_GLASS",E[E.MAX_MUSHROOMS=56]="MAX_MUSHROOMS",E[E.DARK_STONE=57]="DARK_STONE",E[E.LIGHT_STONE=58]="LIGHT_STONE",E[E.PRISON_BOTTLE=59]="PRISON_BOTTLE",E[E.RUSTED_SWORD=60]="RUSTED_SWORD",E[E.RUSTED_SHIELD=61]="RUSTED_SHIELD",E[E.ICY_REINS_OF_UNITY=62]="ICY_REINS_OF_UNITY",E[E.SHADOW_REINS_OF_UNITY=63]="SHADOW_REINS_OF_UNITY",E[E.ULTRANECROZIUM_Z=64]="ULTRANECROZIUM_Z",E[E.SHARP_METEORITE=100]="SHARP_METEORITE",E[E.HARD_METEORITE=101]="HARD_METEORITE",E[E.SMOOTH_METEORITE=102]="SMOOTH_METEORITE",E[E.GRACIDEA=103]="GRACIDEA",E[E.SHOCK_DRIVE=104]="SHOCK_DRIVE",E[E.BURN_DRIVE=105]="BURN_DRIVE",E[E.CHILL_DRIVE=106]="CHILL_DRIVE",E[E.DOUSE_DRIVE=107]="DOUSE_DRIVE",E[E.N_SOLARIZER=108]="N_SOLARIZER",E[E.N_LUNARIZER=109]="N_LUNARIZER",E[E.WELLSPRING_MASK=110]="WELLSPRING_MASK",E[E.HEARTHFLAME_MASK=111]="HEARTHFLAME_MASK",E[E.CORNERSTONE_MASK=112]="CORNERSTONE_MASK",E[E.FIST_PLATE=113]="FIST_PLATE",E[E.SKY_PLATE=114]="SKY_PLATE",E[E.TOXIC_PLATE=115]="TOXIC_PLATE",E[E.EARTH_PLATE=116]="EARTH_PLATE",E[E.STONE_PLATE=117]="STONE_PLATE",E[E.INSECT_PLATE=118]="INSECT_PLATE",E[E.SPOOKY_PLATE=119]="SPOOKY_PLATE",E[E.IRON_PLATE=120]="IRON_PLATE",E[E.FLAME_PLATE=121]="FLAME_PLATE",E[E.SPLASH_PLATE=122]="SPLASH_PLATE",E[E.MEADOW_PLATE=123]="MEADOW_PLATE",E[E.ZAP_PLATE=124]="ZAP_PLATE",E[E.MIND_PLATE=125]="MIND_PLATE",E[E.ICICLE_PLATE=126]="ICICLE_PLATE",E[E.DRACO_PLATE=127]="DRACO_PLATE",E[E.DREAD_PLATE=128]="DREAD_PLATE",E[E.PIXIE_PLATE=129]="PIXIE_PLATE",E[E.BLANK_PLATE=130]="BLANK_PLATE",E[E.LEGEND_PLATE=131]="LEGEND_PLATE",E[E.FIGHTING_MEMORY=132]="FIGHTING_MEMORY",E[E.FLYING_MEMORY=133]="FLYING_MEMORY",E[E.POISON_MEMORY=134]="POISON_MEMORY",E[E.GROUND_MEMORY=135]="GROUND_MEMORY",E[E.ROCK_MEMORY=136]="ROCK_MEMORY",E[E.BUG_MEMORY=137]="BUG_MEMORY",E[E.GHOST_MEMORY=138]="GHOST_MEMORY",E[E.STEEL_MEMORY=139]="STEEL_MEMORY",E[E.FIRE_MEMORY=140]="FIRE_MEMORY",E[E.WATER_MEMORY=141]="WATER_MEMORY",E[E.GRASS_MEMORY=142]="GRASS_MEMORY",E[E.ELECTRIC_MEMORY=143]="ELECTRIC_MEMORY",E[E.PSYCHIC_MEMORY=144]="PSYCHIC_MEMORY",E[E.ICE_MEMORY=145]="ICE_MEMORY",E[E.DRAGON_MEMORY=146]="DRAGON_MEMORY",E[E.DARK_MEMORY=147]="DARK_MEMORY",E[E.FAIRY_MEMORY=148]="FAIRY_MEMORY",E[E.NORMAL_MEMORY=149]="NORMAL_MEMORY",E))(_R||{});const MB=class MB{constructor(A,s,R,n,I=!1,...r){this.speciesId=A,this.preFormKey=s,this.formKey=R,this.trigger=n,this.quiet=I,this.conditions=r}canChange(A){if(A.species.speciesId!==this.speciesId||!A.species.forms.length)return!1;const s=A.species.forms.map(R=>R.formKey);if(s[A.formIndex]!==this.preFormKey||s[A.formIndex]===this.formKey)return!1;for(const R of this.conditions)if(!R.predicate(A))return!1;return!!this.trigger.canChange(A)}findTrigger(A){if(!this.trigger.hasTriggerType(A))return null;const s=this.trigger;return s instanceof $T?s.triggers.find(R=>R.hasTriggerType(A)):s}};o(MB,"SpeciesFormChange");let ce=MB;const cB=class cB{constructor(A,s){this.predicate=A,this.enforceFunc=s}};o(cB,"SpeciesFormChangeCondition");let RA=cB;const hB=class hB{constructor(){this.description=""}canChange(A){return!0}hasTriggerType(A){return this instanceof A}};o(hB,"SpeciesFormChangeTrigger");let gR=hB;const _B=class _B extends gR{};o(_B,"SpeciesFormChangeManualTrigger");let wC=_B;const PB=class PB extends gR{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.ability")}};o(PB,"SpeciesFormChangeAbilityTrigger");let qt=PB;const GB=class GB{constructor(...A){this.description="",this.triggers=A,this.description=this.triggers.filter(s=>{var R;return((R=s==null?void 0:s.description)==null?void 0:R.length)>0}).map(s=>s.description).join(", ")}canChange(A){for(const s of this.triggers)if(!s.canChange(A))return!1;return!0}hasTriggerType(A){return!!this.triggers.find(s=>s.hasTriggerType(A))}};o(GB,"SpeciesFormChangeCompoundTrigger");let $T=GB;const dB=class dB extends gR{constructor(A,s=!0){super(),this.item=A,this.active=s,this.description=this.active?u.t("pokemonEvolutions:Forms.item",{item:u.t(`modifierType:FormChangeItem.${_R[this.item]}`)}):u.t("pokemonEvolutions:Forms.deactivateItem",{item:u.t(`modifierType:FormChangeItem.${_R[this.item]}`)})}canChange(A){return!!a.findModifier(s=>s instanceof GR&&s.pokemonId===A.id&&s.formChangeItem===this.item&&s.active===this.active)}};o(dB,"SpeciesFormChangeItemTrigger");let Ke=dB;const HB=class HB extends gR{constructor(...A){super(),this.timesOfDay=A,this.description=u.t("pokemonEvolutions:Forms.timeOfDay")}canChange(A){return this.timesOfDay.indexOf(a.arena.getTimeOfDay())>-1}};o(HB,"SpeciesFormChangeTimeOfDayTrigger");let Th=HB;const fB=class fB extends gR{constructor(A=!1){super(),this.active=A,this.description=this.active?u.t("pokemonEvolutions:Forms.enter"):u.t("pokemonEvolutions:Forms.leave")}canChange(A){return A.isActive(!0)===this.active}};o(fB,"SpeciesFormChangeActiveTrigger");let Bs=fB;const BB=class BB extends gR{constructor(A,s=!1){super(),Array.isArray(A)||(A=[A]),this.statusEffects=A,this.invert=s,this.description=u.t("pokemonEvolutions:Forms.statusEffect")}canChange(A){var s;return this.statusEffects.indexOf(((s=A.status)==null?void 0:s.effect)||re.NONE)>-1!==this.invert}};o(BB,"SpeciesFormChangeStatusEffectTrigger");let Sh=BB;const gB=class gB extends gR{constructor(A,s=!0){super(),this.move=A,this.known=s;const R=t[this.move].split("_").filter(n=>n).map((n,I)=>I?`${n[0]}${n.slice(1).toLowerCase()}`:n.toLowerCase()).join("");this.description=s?u.t("pokemonEvolutions:Forms.moveLearned",{move:u.t(`move:${R}.name`)}):u.t("pokemonEvolutions:Forms.moveForgotten",{move:u.t(`move:${R}.name`)})}canChange(A){return!!A.moveset.filter(s=>s.moveId===this.move).length===this.known}};o(gB,"SpeciesFormChangeMoveLearnedTrigger");let rI=gB;const mB=class mB extends gR{constructor(A,s=!0){super(),this.movePredicate=typeof A=="function"?A:R=>R===A,this.used=s}};o(mB,"SpeciesFormChangeMoveTrigger");let vC=mB;const pB=class pB extends vC{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.preMove")}canChange(A){const s=a.currentBattle.turnCommands[A.getBattlerIndex()];return!!(s!=null&&s.move)&&this.movePredicate(s.move.move)===this.used}};o(pB,"SpeciesFormChangePreMoveTrigger");let JT=pB;const KB=class KB extends vC{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.postMove")}canChange(A){return A.summonData&&!!A.getLastXMoves(1).filter(s=>this.movePredicate(s.move)).length===this.used}};o(KB,"SpeciesFormChangePostMoveTrigger");let zT=KB;const FB=class FB extends zT{canChange(A){return a.gameMode.hasChallenge(ut.SINGLE_TYPE)||A.hasAbility(O.SHEER_FORCE)?!1:super.canChange(A)}};o(FB,"MeloettaFormChangePostMoveTrigger");let VC=FB;const YB=class YB extends gR{constructor(A){super(),this.formKey=A,this.description=""}canChange(A){return this.formKey===A.species.forms[a.getSpeciesFormIndex(A.species,A.gender,A.getNature(),!0)].formKey}};o(YB,"SpeciesDefaultFormMatchTrigger");let xC=YB;const WB=class WB extends gR{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.tera")}};o(WB,"SpeciesFormChangeTeraTrigger");let zn=WB;const yB=class yB extends gR{constructor(){super(...arguments),this.description=u.t("pokemonEvolutions:Forms.teraLapse")}};o(yB,"SpeciesFormChangeLapseTeraTrigger");let pa=yB;const wB=class wB extends gR{constructor(A,s){super(),this.ability=A,this.weathers=s,this.description=u.t("pokemonEvolutions:Forms.weather")}canChange(A){var I,r;const s=((I=a.arena.weather)==null?void 0:I.weatherType)??Oe.NONE,R=(r=a.arena.weather)==null?void 0:r.isEffectSuppressed();return!A.summonData.abilitySuppressed&&!R&&A.hasAbility(this.ability)&&this.weathers.includes(s)}};o(wB,"SpeciesFormChangeWeatherTrigger");let wR=wB;const vB=class vB extends gR{constructor(A,s){super(),this.ability=A,this.weathers=s,this.description=u.t("pokemonEvolutions:Forms.weatherRevert")}canChange(A){var s,R;if(A.hasAbility(this.ability,!1,!0)){const n=((s=a.arena.weather)==null?void 0:s.weatherType)??Oe.NONE,I=(R=a.arena.weather)==null?void 0:R.isEffectSuppressed(),r=A.summonData.abilitySuppressed,L=A.summonData.ability,N=L!==this.ability&&L!==O.NONE;if(this.weathers.includes(n)||I||r||N)return!0}return!1}};o(vB,"SpeciesFormChangeRevertWeatherFormTrigger");let qn=vB;function Nh(E,A,s){const R=A.formKey.indexOf(Me.MEGA)>-1,n=A.formKey.indexOf(Me.GIGANTAMAX)>-1,I=A.formKey.indexOf(Me.ETERNAMAX)>-1,r=!R&&A.formKey===E.species.forms[0].formKey;return R?u.t("battlePokemonForm:megaChange",{preName:s,pokemonName:E.name}):n?u.t("battlePokemonForm:gigantamaxChange",{preName:s,pokemonName:E.name}):I?u.t("battlePokemonForm:eternamaxChange",{preName:s,pokemonName:E.name}):r?u.t("battlePokemonForm:revertChange",{pokemonName:ee(E)}):E.getAbility().id===O.DISGUISE?u.t("battlePokemonForm:disguiseChange"):u.t("battlePokemonForm:formChange",{preName:s})}o(Nh,"getSpeciesFormChangeMessage");function zI(E){return new RA(A=>!!a.gameData.dexData[E].caughtAttr)}o(zI,"getSpeciesDependentFormChangeCondition");const mR={[e.VENUSAUR]:[new ce(e.VENUSAUR,"",Me.MEGA,new Ke(48)),new ce(e.VENUSAUR,"",Me.GIGANTAMAX,new Ke(56))],[e.BLASTOISE]:[new ce(e.BLASTOISE,"",Me.MEGA,new Ke(11)),new ce(e.BLASTOISE,"",Me.GIGANTAMAX,new Ke(56))],[e.CHARIZARD]:[new ce(e.CHARIZARD,"",Me.MEGA_X,new Ke(14)),new ce(e.CHARIZARD,"",Me.MEGA_Y,new Ke(15)),new ce(e.CHARIZARD,"",Me.GIGANTAMAX,new Ke(56))],[e.BUTTERFREE]:[new ce(e.BUTTERFREE,"",Me.GIGANTAMAX,new Ke(56))],[e.BEEDRILL]:[new ce(e.BEEDRILL,"",Me.MEGA,new Ke(10))],[e.PIDGEOT]:[new ce(e.PIDGEOT,"",Me.MEGA,new Ke(36))],[e.PIKACHU]:[new ce(e.PIKACHU,"",Me.GIGANTAMAX,new Ke(56)),new ce(e.PIKACHU,"partner",Me.GIGANTAMAX,new Ke(56))],[e.MEOWTH]:[new ce(e.MEOWTH,"",Me.GIGANTAMAX,new Ke(56))],[e.ALAKAZAM]:[new ce(e.ALAKAZAM,"",Me.MEGA,new Ke(5))],[e.MACHAMP]:[new ce(e.MACHAMP,"",Me.GIGANTAMAX,new Ke(56))],[e.SLOWBRO]:[new ce(e.SLOWBRO,"",Me.MEGA,new Ke(44))],[e.GENGAR]:[new ce(e.GENGAR,"",Me.MEGA,new Ke(20)),new ce(e.GENGAR,"",Me.GIGANTAMAX,new Ke(56))],[e.KINGLER]:[new ce(e.KINGLER,"",Me.GIGANTAMAX,new Ke(56))],[e.KANGASKHAN]:[new ce(e.KANGASKHAN,"",Me.MEGA,new Ke(25))],[e.PINSIR]:[new ce(e.PINSIR,"",Me.MEGA,new Ke(37))],[e.GYARADOS]:[new ce(e.GYARADOS,"",Me.MEGA,new Ke(22))],[e.LAPRAS]:[new ce(e.LAPRAS,"",Me.GIGANTAMAX,new Ke(56))],[e.EEVEE]:[new ce(e.EEVEE,"",Me.GIGANTAMAX,new Ke(56)),new ce(e.EEVEE,"partner",Me.GIGANTAMAX,new Ke(56))],[e.SNORLAX]:[new ce(e.SNORLAX,"",Me.GIGANTAMAX,new Ke(56))],[e.AERODACTYL]:[new ce(e.AERODACTYL,"",Me.MEGA,new Ke(3))],[e.MEWTWO]:[new ce(e.MEWTWO,"",Me.MEGA_X,new Ke(34)),new ce(e.MEWTWO,"",Me.MEGA_Y,new Ke(35))],[e.AMPHAROS]:[new ce(e.AMPHAROS,"",Me.MEGA,new Ke(7))],[e.STEELIX]:[new ce(e.STEELIX,"",Me.MEGA,new Ke(45))],[e.SCIZOR]:[new ce(e.SCIZOR,"",Me.MEGA,new Ke(42))],[e.HERACROSS]:[new ce(e.HERACROSS,"",Me.MEGA,new Ke(23))],[e.HOUNDOOM]:[new ce(e.HOUNDOOM,"",Me.MEGA,new Ke(24))],[e.TYRANITAR]:[new ce(e.TYRANITAR,"",Me.MEGA,new Ke(47))],[e.SCEPTILE]:[new ce(e.SCEPTILE,"",Me.MEGA,new Ke(41))],[e.BLAZIKEN]:[new ce(e.BLAZIKEN,"",Me.MEGA,new Ke(12))],[e.SWAMPERT]:[new ce(e.SWAMPERT,"",Me.MEGA,new Ke(46))],[e.GARDEVOIR]:[new ce(e.GARDEVOIR,"",Me.MEGA,new Ke(19))],[e.SABLEYE]:[new ce(e.SABLEYE,"",Me.MEGA,new Ke(39))],[e.MAWILE]:[new ce(e.MAWILE,"",Me.MEGA,new Ke(31))],[e.AGGRON]:[new ce(e.AGGRON,"",Me.MEGA,new Ke(4))],[e.MEDICHAM]:[new ce(e.MEDICHAM,"",Me.MEGA,new Ke(32))],[e.MANECTRIC]:[new ce(e.MANECTRIC,"",Me.MEGA,new Ke(30))],[e.SHARPEDO]:[new ce(e.SHARPEDO,"",Me.MEGA,new Ke(43))],[e.CAMERUPT]:[new ce(e.CAMERUPT,"",Me.MEGA,new Ke(13))],[e.ALTARIA]:[new ce(e.ALTARIA,"",Me.MEGA,new Ke(6))],[e.CASTFORM]:[new ce(e.CASTFORM,"","sunny",new wR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new ce(e.CASTFORM,"rainy","sunny",new wR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new ce(e.CASTFORM,"snowy","sunny",new wR(O.FORECAST,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new ce(e.CASTFORM,"","rainy",new wR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new ce(e.CASTFORM,"sunny","rainy",new wR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new ce(e.CASTFORM,"snowy","rainy",new wR(O.FORECAST,[Oe.RAIN,Oe.HEAVY_RAIN]),!0),new ce(e.CASTFORM,"","snowy",new wR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new ce(e.CASTFORM,"sunny","snowy",new wR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new ce(e.CASTFORM,"rainy","snowy",new wR(O.FORECAST,[Oe.HAIL,Oe.SNOW]),!0),new ce(e.CASTFORM,"sunny","",new qn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new ce(e.CASTFORM,"rainy","",new qn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new ce(e.CASTFORM,"snowy","",new qn(O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),!0),new ce(e.CASTFORM,"sunny","",new Bs,!0),new ce(e.CASTFORM,"rainy","",new Bs,!0),new ce(e.CASTFORM,"snowy","",new Bs,!0)],[e.BANETTE]:[new ce(e.BANETTE,"",Me.MEGA,new Ke(9))],[e.ABSOL]:[new ce(e.ABSOL,"",Me.MEGA,new Ke(2))],[e.GLALIE]:[new ce(e.GLALIE,"",Me.MEGA,new Ke(21))],[e.SALAMENCE]:[new ce(e.SALAMENCE,"",Me.MEGA,new Ke(40))],[e.METAGROSS]:[new ce(e.METAGROSS,"",Me.MEGA,new Ke(33))],[e.LATIAS]:[new ce(e.LATIAS,"",Me.MEGA,new Ke(26))],[e.LATIOS]:[new ce(e.LATIOS,"",Me.MEGA,new Ke(27))],[e.KYOGRE]:[new ce(e.KYOGRE,"",Me.PRIMAL,new Ke(50))],[e.GROUDON]:[new ce(e.GROUDON,"",Me.PRIMAL,new Ke(51))],[e.RAYQUAZA]:[new ce(e.RAYQUAZA,"",Me.MEGA,new Ke(38))],[e.DEOXYS]:[new ce(e.DEOXYS,"normal","attack",new Ke(100)),new ce(e.DEOXYS,"normal","defense",new Ke(101)),new ce(e.DEOXYS,"normal","speed",new Ke(102))],[e.CHERRIM]:[new ce(e.CHERRIM,"overcast","sunshine",new wR(O.FLOWER_GIFT,[Oe.SUNNY,Oe.HARSH_SUN]),!0),new ce(e.CHERRIM,"sunshine","overcast",new qn(O.FLOWER_GIFT,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG,Oe.HAIL,Oe.HEAVY_RAIN,Oe.SNOW,Oe.RAIN]),!0),new ce(e.CHERRIM,"sunshine","overcast",new Bs,!0)],[e.LOPUNNY]:[new ce(e.LOPUNNY,"",Me.MEGA,new Ke(28))],[e.GARCHOMP]:[new ce(e.GARCHOMP,"",Me.MEGA,new Ke(18))],[e.LUCARIO]:[new ce(e.LUCARIO,"",Me.MEGA,new Ke(29))],[e.ABOMASNOW]:[new ce(e.ABOMASNOW,"",Me.MEGA,new Ke(1))],[e.GALLADE]:[new ce(e.GALLADE,"",Me.MEGA,new Ke(17))],[e.AUDINO]:[new ce(e.AUDINO,"",Me.MEGA,new Ke(8))],[e.DIALGA]:[new ce(e.DIALGA,"",Me.ORIGIN,new Ke(52))],[e.PALKIA]:[new ce(e.PALKIA,"",Me.ORIGIN,new Ke(53))],[e.GIRATINA]:[new ce(e.GIRATINA,"altered",Me.ORIGIN,new Ke(54))],[e.SHAYMIN]:[new ce(e.SHAYMIN,"land","sky",new Ke(103))],[e.ARCEUS]:[new ce(e.ARCEUS,"normal","fighting",new Ke(113),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","flying",new Ke(114),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","poison",new Ke(115),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","ground",new Ke(116),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","rock",new Ke(117),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","bug",new Ke(118),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","ghost",new Ke(119),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","steel",new Ke(120),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","fire",new Ke(121),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","water",new Ke(122),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","grass",new Ke(123),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","electric",new Ke(124),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","psychic",new Ke(125),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","ice",new Ke(126),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","dragon",new Ke(127),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","dark",new Ke(128),!0,new RA(E=>E.hasAbility(O.MULTITYPE))),new ce(e.ARCEUS,"normal","fairy",new Ke(129),!0,new RA(E=>E.hasAbility(O.MULTITYPE)))],[e.DARMANITAN]:[new ce(e.DARMANITAN,"","zen",new qt,!0),new ce(e.DARMANITAN,"zen","",new qt,!0)],[e.GARBODOR]:[new ce(e.GARBODOR,"",Me.GIGANTAMAX,new Ke(56))],[e.TORNADUS]:[new ce(e.TORNADUS,Me.INCARNATE,Me.THERIAN,new Ke(55))],[e.THUNDURUS]:[new ce(e.THUNDURUS,Me.INCARNATE,Me.THERIAN,new Ke(55))],[e.LANDORUS]:[new ce(e.LANDORUS,Me.INCARNATE,Me.THERIAN,new Ke(55))],[e.KYUREM]:[new ce(e.KYUREM,"","black",new Ke(57),!1,zI(e.ZEKROM)),new ce(e.KYUREM,"","white",new Ke(58),!1,zI(e.RESHIRAM))],[e.KELDEO]:[new ce(e.KELDEO,"ordinary","resolute",new rI(t.SECRET_SWORD),!1,new RA(()=>a.gameMode.isDaily!==!0)),new ce(e.KELDEO,"resolute","ordinary",new rI(t.SECRET_SWORD,!1),!1,new RA(()=>a.gameMode.isDaily!==!0))],[e.MELOETTA]:[new ce(e.MELOETTA,"aria","pirouette",new VC(t.RELIC_SONG),!0),new ce(e.MELOETTA,"pirouette","aria",new VC(t.RELIC_SONG),!0)],[e.GENESECT]:[new ce(e.GENESECT,"","shock",new Ke(104)),new ce(e.GENESECT,"","burn",new Ke(105)),new ce(e.GENESECT,"","chill",new Ke(106)),new ce(e.GENESECT,"","douse",new Ke(107))],[e.GRENINJA]:[new ce(e.GRENINJA,"battle-bond","ash",new qt,!0),new ce(e.GRENINJA,"ash","battle-bond",new qt,!0)],[e.PALAFIN]:[new ce(e.PALAFIN,"zero","hero",new qt,!0),new ce(e.PALAFIN,"hero","zero",new qt,!0)],[e.AEGISLASH]:[new ce(e.AEGISLASH,"blade","shield",new JT(t.KINGS_SHIELD),!0,new RA(E=>E.hasAbility(O.STANCE_CHANGE))),new ce(e.AEGISLASH,"shield","blade",new JT(E=>Ve[E].category!==g.STATUS),!0,new RA(E=>E.hasAbility(O.STANCE_CHANGE))),new ce(e.AEGISLASH,"blade","shield",new Bs(!1),!0)],[e.XERNEAS]:[new ce(e.XERNEAS,"neutral","active",new Bs(!0),!0),new ce(e.XERNEAS,"active","neutral",new Bs(!1),!0)],[e.ZYGARDE]:[new ce(e.ZYGARDE,"50-pc","complete",new qt,!0),new ce(e.ZYGARDE,"complete","50-pc",new qt,!0),new ce(e.ZYGARDE,"10-pc","10-complete",new qt,!0),new ce(e.ZYGARDE,"10-complete","10-pc",new qt,!0)],[e.DIANCIE]:[new ce(e.DIANCIE,"",Me.MEGA,new Ke(16))],[e.HOOPA]:[new ce(e.HOOPA,"","unbound",new Ke(59))],[e.WISHIWASHI]:[new ce(e.WISHIWASHI,"","school",new qt,!0),new ce(e.WISHIWASHI,"school","",new qt,!0)],[e.SILVALLY]:[new ce(e.SILVALLY,"normal","fighting",new Ke(132),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","flying",new Ke(133),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","poison",new Ke(134),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","ground",new Ke(135),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","rock",new Ke(136),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","bug",new Ke(137),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","ghost",new Ke(138),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","steel",new Ke(139),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","fire",new Ke(140),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","water",new Ke(141),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","grass",new Ke(142),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","electric",new Ke(143),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","psychic",new Ke(144),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","ice",new Ke(145),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","dragon",new Ke(146),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","dark",new Ke(147),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM))),new ce(e.SILVALLY,"normal","fairy",new Ke(148),!0,new RA(E=>E.hasAbility(O.RKS_SYSTEM)))],[e.MINIOR]:[new ce(e.MINIOR,"red-meteor","red",new qt,!0),new ce(e.MINIOR,"red","red-meteor",new qt,!0),new ce(e.MINIOR,"orange-meteor","orange",new qt,!0),new ce(e.MINIOR,"orange","orange-meteor",new qt,!0),new ce(e.MINIOR,"yellow-meteor","yellow",new qt,!0),new ce(e.MINIOR,"yellow","yellow-meteor",new qt,!0),new ce(e.MINIOR,"green-meteor","green",new qt,!0),new ce(e.MINIOR,"green","green-meteor",new qt,!0),new ce(e.MINIOR,"blue-meteor","blue",new qt,!0),new ce(e.MINIOR,"blue","blue-meteor",new qt,!0),new ce(e.MINIOR,"indigo-meteor","indigo",new qt,!0),new ce(e.MINIOR,"indigo","indigo-meteor",new qt,!0),new ce(e.MINIOR,"violet-meteor","violet",new qt,!0),new ce(e.MINIOR,"violet","violet-meteor",new qt,!0)],[e.MIMIKYU]:[new ce(e.MIMIKYU,"disguised","busted",new qt,!0),new ce(e.MIMIKYU,"busted","disguised",new qt,!0)],[e.NECROZMA]:[new ce(e.NECROZMA,"","dawn-wings",new Ke(109),!1,zI(e.LUNALA)),new ce(e.NECROZMA,"","dusk-mane",new Ke(108),!1,zI(e.SOLGALEO)),new ce(e.NECROZMA,"dawn-wings","ultra",new Ke(64)),new ce(e.NECROZMA,"dusk-mane","ultra",new Ke(64))],[e.MELMETAL]:[new ce(e.MELMETAL,"",Me.GIGANTAMAX,new Ke(56))],[e.RILLABOOM]:[new ce(e.RILLABOOM,"",Me.GIGANTAMAX,new Ke(56))],[e.CINDERACE]:[new ce(e.CINDERACE,"",Me.GIGANTAMAX,new Ke(56))],[e.INTELEON]:[new ce(e.INTELEON,"",Me.GIGANTAMAX,new Ke(56))],[e.CORVIKNIGHT]:[new ce(e.CORVIKNIGHT,"",Me.GIGANTAMAX,new Ke(56))],[e.ORBEETLE]:[new ce(e.ORBEETLE,"",Me.GIGANTAMAX,new Ke(56))],[e.DREDNAW]:[new ce(e.DREDNAW,"",Me.GIGANTAMAX,new Ke(56))],[e.COALOSSAL]:[new ce(e.COALOSSAL,"",Me.GIGANTAMAX,new Ke(56))],[e.FLAPPLE]:[new ce(e.FLAPPLE,"",Me.GIGANTAMAX,new Ke(56))],[e.APPLETUN]:[new ce(e.APPLETUN,"",Me.GIGANTAMAX,new Ke(56))],[e.SANDACONDA]:[new ce(e.SANDACONDA,"",Me.GIGANTAMAX,new Ke(56))],[e.CRAMORANT]:[new ce(e.CRAMORANT,"","gulping",new qt,!0,new RA(E=>E.getHpRatio()>=.5)),new ce(e.CRAMORANT,"","gorging",new qt,!0,new RA(E=>E.getHpRatio()<.5)),new ce(e.CRAMORANT,"gulping","",new qt,!0),new ce(e.CRAMORANT,"gorging","",new qt,!0),new ce(e.CRAMORANT,"gulping","",new Bs(!1),!0),new ce(e.CRAMORANT,"gorging","",new Bs(!1),!0)],[e.TOXTRICITY]:[new ce(e.TOXTRICITY,"amped",Me.GIGANTAMAX,new Ke(56)),new ce(e.TOXTRICITY,"lowkey",Me.GIGANTAMAX,new Ke(56)),new ce(e.TOXTRICITY,Me.GIGANTAMAX,"amped",new $T(new Ke(56,!1),new xC("amped"))),new ce(e.TOXTRICITY,Me.GIGANTAMAX,"lowkey",new $T(new Ke(56,!1),new xC("lowkey")))],[e.CENTISKORCH]:[new ce(e.CENTISKORCH,"",Me.GIGANTAMAX,new Ke(56))],[e.HATTERENE]:[new ce(e.HATTERENE,"",Me.GIGANTAMAX,new Ke(56))],[e.GRIMMSNARL]:[new ce(e.GRIMMSNARL,"",Me.GIGANTAMAX,new Ke(56))],[e.ALCREMIE]:[new ce(e.ALCREMIE,"vanilla-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"ruby-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"matcha-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"mint-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"lemon-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"salted-cream",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"ruby-swirl",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"caramel-swirl",Me.GIGANTAMAX,new Ke(56)),new ce(e.ALCREMIE,"rainbow-swirl",Me.GIGANTAMAX,new Ke(56))],[e.EISCUE]:[new ce(e.EISCUE,"","no-ice",new qt,!0),new ce(e.EISCUE,"no-ice","",new qt,!0)],[e.MORPEKO]:[new ce(e.MORPEKO,"full-belly","hangry",new qt,!0),new ce(e.MORPEKO,"hangry","full-belly",new qt,!0)],[e.COPPERAJAH]:[new ce(e.COPPERAJAH,"",Me.GIGANTAMAX,new Ke(56))],[e.DURALUDON]:[new ce(e.DURALUDON,"",Me.GIGANTAMAX,new Ke(56))],[e.ZACIAN]:[new ce(e.ZACIAN,"hero-of-many-battles","crowned",new Ke(60))],[e.ZAMAZENTA]:[new ce(e.ZAMAZENTA,"hero-of-many-battles","crowned",new Ke(61))],[e.ETERNATUS]:[new ce(e.ETERNATUS,"",Me.ETERNAMAX,new wC),new ce(e.ETERNATUS,"",Me.ETERNAMAX,new Ke(56))],[e.URSHIFU]:[new ce(e.URSHIFU,"single-strike",Me.GIGANTAMAX_SINGLE,new Ke(56)),new ce(e.URSHIFU,"rapid-strike",Me.GIGANTAMAX_RAPID,new Ke(56))],[e.CALYREX]:[new ce(e.CALYREX,"","ice",new Ke(62),!1,zI(e.GLASTRIER)),new ce(e.CALYREX,"","shadow",new Ke(63),!1,zI(e.SPECTRIER))],[e.ENAMORUS]:[new ce(e.ENAMORUS,Me.INCARNATE,Me.THERIAN,new Ke(55))],[e.OGERPON]:[new ce(e.OGERPON,"teal-mask","wellspring-mask",new Ke(110)),new ce(e.OGERPON,"teal-mask","hearthflame-mask",new Ke(111)),new ce(e.OGERPON,"teal-mask","cornerstone-mask",new Ke(112)),new ce(e.OGERPON,"teal-mask","teal-mask-tera",new zn,!0),new ce(e.OGERPON,"teal-mask-tera","teal-mask",new pa,!0),new ce(e.OGERPON,"wellspring-mask","wellspring-mask-tera",new zn,!0),new ce(e.OGERPON,"wellspring-mask-tera","wellspring-mask",new pa,!0),new ce(e.OGERPON,"hearthflame-mask","hearthflame-mask-tera",new zn,!0),new ce(e.OGERPON,"hearthflame-mask-tera","hearthflame-mask",new pa,!0),new ce(e.OGERPON,"cornerstone-mask","cornerstone-mask-tera",new zn,!0),new ce(e.OGERPON,"cornerstone-mask-tera","cornerstone-mask",new pa,!0)],[e.TERAPAGOS]:[new ce(e.TERAPAGOS,"","terastal",new qt,!0),new ce(e.TERAPAGOS,"terastal","stellar",new zn,!0),new ce(e.TERAPAGOS,"stellar","terastal",new pa,!0)],[e.GALAR_DARMANITAN]:[new ce(e.GALAR_DARMANITAN,"","zen",new qt,!0),new ce(e.GALAR_DARMANITAN,"zen","",new qt,!0)]};function dZ(){const E=Object.keys(mR);for(const A of E){const s=mR[A],R=[];for(const n of s){const I=n.findTrigger(Ke);I&&!s.find(r=>n.formKey===r.preFormKey&&n.preFormKey===r.formKey)&&R.push(new ce(n.speciesId,n.formKey,n.preFormKey,new Ke(I.item,!1)))}s.push(...R)}}o(dZ,"initPokemonForms");const Pf=5,HZ=3,fZ=3,BZ=6;function nl(E){switch(E){case 1:return 25;case 2:return 50;case 3:return 75;case 4:return 100;case 5:return 150;case 6:return 200;case 7:return 300;case 8:case 9:return 450;default:return 600}}o(nl,"getStarterValueFriendshipCap");const tA={[e.BULBASAUR]:3,[e.CHARMANDER]:3,[e.SQUIRTLE]:3,[e.CATERPIE]:2,[e.WEEDLE]:1,[e.PIDGEY]:1,[e.RATTATA]:1,[e.SPEAROW]:1,[e.EKANS]:2,[e.PIKACHU]:4,[e.SANDSHREW]:2,[e.NIDORAN_F]:3,[e.NIDORAN_M]:3,[e.VULPIX]:3,[e.ZUBAT]:3,[e.ODDISH]:3,[e.PARAS]:2,[e.VENONAT]:2,[e.DIGLETT]:2,[e.MEOWTH]:3,[e.PSYDUCK]:2,[e.MANKEY]:4,[e.GROWLITHE]:4,[e.POLIWAG]:2,[e.ABRA]:4,[e.MACHOP]:3,[e.BELLSPROUT]:2,[e.TENTACOOL]:3,[e.GEODUDE]:3,[e.PONYTA]:2,[e.SLOWPOKE]:3,[e.MAGNEMITE]:4,[e.FARFETCHD]:2,[e.DODUO]:3,[e.SEEL]:1,[e.GRIMER]:2,[e.SHELLDER]:5,[e.GASTLY]:4,[e.ONIX]:3,[e.DROWZEE]:2,[e.KRABBY]:3,[e.VOLTORB]:2,[e.EXEGGCUTE]:3,[e.CUBONE]:3,[e.LICKITUNG]:3,[e.KOFFING]:2,[e.RHYHORN]:4,[e.TANGELA]:3,[e.KANGASKHAN]:4,[e.HORSEA]:3,[e.GOLDEEN]:2,[e.STARYU]:3,[e.SCYTHER]:5,[e.PINSIR]:4,[e.TAUROS]:4,[e.MAGIKARP]:4,[e.LAPRAS]:4,[e.DITTO]:2,[e.EEVEE]:3,[e.PORYGON]:4,[e.OMANYTE]:3,[e.KABUTO]:3,[e.AERODACTYL]:5,[e.ARTICUNO]:5,[e.ZAPDOS]:6,[e.MOLTRES]:6,[e.DRATINI]:4,[e.MEWTWO]:8,[e.MEW]:5,[e.CHIKORITA]:2,[e.CYNDAQUIL]:3,[e.TOTODILE]:3,[e.SENTRET]:1,[e.HOOTHOOT]:2,[e.LEDYBA]:1,[e.SPINARAK]:1,[e.CHINCHOU]:2,[e.PICHU]:4,[e.CLEFFA]:2,[e.IGGLYBUFF]:1,[e.TOGEPI]:3,[e.NATU]:2,[e.MAREEP]:2,[e.HOPPIP]:2,[e.AIPOM]:2,[e.SUNKERN]:1,[e.YANMA]:3,[e.WOOPER]:2,[e.MURKROW]:3,[e.MISDREAVUS]:3,[e.UNOWN]:1,[e.GIRAFARIG]:3,[e.PINECO]:2,[e.DUNSPARCE]:3,[e.GLIGAR]:3,[e.SNUBBULL]:2,[e.QWILFISH]:3,[e.SHUCKLE]:3,[e.HERACROSS]:5,[e.SNEASEL]:4,[e.TEDDIURSA]:4,[e.SLUGMA]:2,[e.SWINUB]:3,[e.CORSOLA]:2,[e.REMORAID]:2,[e.DELIBIRD]:2,[e.SKARMORY]:4,[e.HOUNDOUR]:3,[e.PHANPY]:3,[e.STANTLER]:3,[e.SMEARGLE]:1,[e.TYROGUE]:3,[e.SMOOCHUM]:3,[e.ELEKID]:3,[e.MAGBY]:3,[e.MILTANK]:4,[e.RAIKOU]:6,[e.ENTEI]:6,[e.SUICUNE]:6,[e.LARVITAR]:4,[e.LUGIA]:8,[e.HO_OH]:8,[e.CELEBI]:5,[e.TREECKO]:3,[e.TORCHIC]:4,[e.MUDKIP]:3,[e.POOCHYENA]:2,[e.ZIGZAGOON]:2,[e.WURMPLE]:1,[e.LOTAD]:3,[e.SEEDOT]:2,[e.TAILLOW]:3,[e.WINGULL]:2,[e.RALTS]:4,[e.SURSKIT]:2,[e.SHROOMISH]:3,[e.SLAKOTH]:4,[e.NINCADA]:4,[e.WHISMUR]:2,[e.MAKUHITA]:3,[e.AZURILL]:4,[e.NOSEPASS]:2,[e.SKITTY]:1,[e.SABLEYE]:2,[e.MAWILE]:2,[e.ARON]:3,[e.MEDITITE]:3,[e.ELECTRIKE]:2,[e.PLUSLE]:2,[e.MINUN]:2,[e.VOLBEAT]:2,[e.ILLUMISE]:2,[e.GULPIN]:1,[e.CARVANHA]:3,[e.WAILMER]:2,[e.NUMEL]:2,[e.TORKOAL]:3,[e.SPOINK]:2,[e.SPINDA]:1,[e.TRAPINCH]:3,[e.CACNEA]:2,[e.SWABLU]:2,[e.ZANGOOSE]:4,[e.SEVIPER]:3,[e.LUNATONE]:3,[e.SOLROCK]:3,[e.BARBOACH]:2,[e.CORPHISH]:3,[e.BALTOY]:2,[e.LILEEP]:3,[e.ANORITH]:3,[e.FEEBAS]:4,[e.CASTFORM]:1,[e.KECLEON]:2,[e.SHUPPET]:2,[e.DUSKULL]:3,[e.TROPIUS]:3,[e.ABSOL]:4,[e.WYNAUT]:2,[e.SNORUNT]:2,[e.SPHEAL]:2,[e.CLAMPERL]:3,[e.RELICANTH]:3,[e.LUVDISC]:1,[e.BAGON]:4,[e.BELDUM]:4,[e.REGIROCK]:6,[e.REGICE]:5,[e.REGISTEEL]:6,[e.LATIAS]:7,[e.LATIOS]:7,[e.KYOGRE]:9,[e.GROUDON]:9,[e.RAYQUAZA]:9,[e.JIRACHI]:7,[e.DEOXYS]:7,[e.TURTWIG]:3,[e.CHIMCHAR]:3,[e.PIPLUP]:3,[e.STARLY]:3,[e.BIDOOF]:2,[e.KRICKETOT]:1,[e.SHINX]:2,[e.BUDEW]:3,[e.CRANIDOS]:2,[e.SHIELDON]:3,[e.BURMY]:2,[e.COMBEE]:2,[e.PACHIRISU]:2,[e.BUIZEL]:2,[e.CHERUBI]:1,[e.SHELLOS]:3,[e.DRIFLOON]:2,[e.BUNEARY]:2,[e.GLAMEOW]:2,[e.CHINGLING]:2,[e.STUNKY]:2,[e.BRONZOR]:3,[e.BONSLY]:2,[e.MIME_JR]:2,[e.HAPPINY]:2,[e.CHATOT]:2,[e.SPIRITOMB]:4,[e.GIBLE]:4,[e.MUNCHLAX]:4,[e.RIOLU]:3,[e.HIPPOPOTAS]:3,[e.SKORUPI]:3,[e.CROAGUNK]:2,[e.CARNIVINE]:2,[e.FINNEON]:1,[e.MANTYKE]:2,[e.SNOVER]:2,[e.ROTOM]:4,[e.UXIE]:5,[e.MESPRIT]:5,[e.AZELF]:6,[e.DIALGA]:8,[e.PALKIA]:8,[e.HEATRAN]:7,[e.REGIGIGAS]:7,[e.GIRATINA]:8,[e.CRESSELIA]:6,[e.PHIONE]:4,[e.MANAPHY]:7,[e.DARKRAI]:7,[e.SHAYMIN]:6,[e.ARCEUS]:9,[e.VICTINI]:6,[e.SNIVY]:3,[e.TEPIG]:3,[e.OSHAWOTT]:3,[e.PATRAT]:1,[e.LILLIPUP]:3,[e.PURRLOIN]:2,[e.PANSAGE]:2,[e.PANSEAR]:2,[e.PANPOUR]:2,[e.MUNNA]:2,[e.PIDOVE]:1,[e.BLITZLE]:2,[e.ROGGENROLA]:3,[e.WOOBAT]:3,[e.DRILBUR]:4,[e.AUDINO]:3,[e.TIMBURR]:4,[e.TYMPOLE]:3,[e.THROH]:4,[e.SAWK]:4,[e.SEWADDLE]:2,[e.VENIPEDE]:3,[e.COTTONEE]:3,[e.PETILIL]:3,[e.BASCULIN]:4,[e.SANDILE]:4,[e.DARUMAKA]:4,[e.MARACTUS]:2,[e.DWEBBLE]:2,[e.SCRAGGY]:3,[e.SIGILYPH]:4,[e.YAMASK]:3,[e.TIRTOUGA]:3,[e.ARCHEN]:3,[e.TRUBBISH]:2,[e.ZORUA]:3,[e.MINCCINO]:3,[e.GOTHITA]:3,[e.SOLOSIS]:3,[e.DUCKLETT]:2,[e.VANILLITE]:3,[e.DEERLING]:2,[e.EMOLGA]:2,[e.KARRABLAST]:3,[e.FOONGUS]:3,[e.FRILLISH]:3,[e.ALOMOMOLA]:4,[e.JOLTIK]:3,[e.FERROSEED]:3,[e.KLINK]:3,[e.TYNAMO]:2,[e.ELGYEM]:2,[e.LITWICK]:3,[e.AXEW]:4,[e.CUBCHOO]:2,[e.CRYOGONAL]:4,[e.SHELMET]:2,[e.STUNFISK]:3,[e.MIENFOO]:3,[e.DRUDDIGON]:4,[e.GOLETT]:3,[e.PAWNIARD]:4,[e.BOUFFALANT]:4,[e.RUFFLET]:3,[e.VULLABY]:3,[e.HEATMOR]:3,[e.DURANT]:4,[e.DEINO]:4,[e.LARVESTA]:4,[e.COBALION]:6,[e.TERRAKION]:6,[e.VIRIZION]:6,[e.TORNADUS]:7,[e.THUNDURUS]:7,[e.RESHIRAM]:8,[e.ZEKROM]:8,[e.LANDORUS]:7,[e.KYUREM]:8,[e.KELDEO]:6,[e.MELOETTA]:7,[e.GENESECT]:6,[e.CHESPIN]:3,[e.FENNEKIN]:3,[e.FROAKIE]:4,[e.BUNNELBY]:3,[e.FLETCHLING]:3,[e.SCATTERBUG]:2,[e.LITLEO]:2,[e.FLABEBE]:3,[e.SKIDDO]:2,[e.PANCHAM]:3,[e.FURFROU]:3,[e.ESPURR]:2,[e.HONEDGE]:4,[e.SPRITZEE]:2,[e.SWIRLIX]:3,[e.INKAY]:3,[e.BINACLE]:3,[e.SKRELP]:2,[e.CLAUNCHER]:3,[e.HELIOPTILE]:3,[e.TYRUNT]:3,[e.AMAURA]:2,[e.HAWLUCHA]:4,[e.DEDENNE]:2,[e.CARBINK]:2,[e.GOOMY]:4,[e.KLEFKI]:3,[e.PHANTUMP]:2,[e.PUMPKABOO]:2,[e.BERGMITE]:3,[e.NOIBAT]:3,[e.XERNEAS]:8,[e.YVELTAL]:8,[e.ZYGARDE]:8,[e.DIANCIE]:7,[e.HOOPA]:7,[e.VOLCANION]:7,[e.ETERNAL_FLOETTE]:4,[e.ROWLET]:3,[e.LITTEN]:3,[e.POPPLIO]:4,[e.PIKIPEK]:2,[e.YUNGOOS]:2,[e.GRUBBIN]:3,[e.CRABRAWLER]:3,[e.ORICORIO]:3,[e.CUTIEFLY]:3,[e.ROCKRUFF]:3,[e.WISHIWASHI]:2,[e.MAREANIE]:2,[e.MUDBRAY]:3,[e.DEWPIDER]:3,[e.FOMANTIS]:2,[e.MORELULL]:2,[e.SALANDIT]:3,[e.STUFFUL]:3,[e.BOUNSWEET]:3,[e.COMFEY]:4,[e.ORANGURU]:4,[e.PASSIMIAN]:4,[e.WIMPOD]:3,[e.SANDYGAST]:3,[e.PYUKUMUKU]:2,[e.TYPE_NULL]:5,[e.MINIOR]:4,[e.KOMALA]:3,[e.TURTONATOR]:4,[e.TOGEDEMARU]:3,[e.MIMIKYU]:4,[e.BRUXISH]:4,[e.DRAMPA]:4,[e.DHELMISE]:4,[e.JANGMO_O]:4,[e.TAPU_KOKO]:6,[e.TAPU_LELE]:7,[e.TAPU_BULU]:6,[e.TAPU_FINI]:5,[e.COSMOG]:7,[e.NIHILEGO]:6,[e.BUZZWOLE]:6,[e.PHEROMOSA]:7,[e.XURKITREE]:6,[e.CELESTEELA]:6,[e.KARTANA]:8,[e.GUZZLORD]:6,[e.NECROZMA]:8,[e.MAGEARNA]:7,[e.MARSHADOW]:8,[e.POIPOLE]:8,[e.STAKATAKA]:6,[e.BLACEPHALON]:7,[e.ZERAORA]:6,[e.MELTAN]:6,[e.ALOLA_RATTATA]:1,[e.ALOLA_SANDSHREW]:2,[e.ALOLA_VULPIX]:3,[e.ALOLA_DIGLETT]:2,[e.ALOLA_MEOWTH]:3,[e.ALOLA_GEODUDE]:3,[e.ALOLA_GRIMER]:3,[e.GROOKEY]:3,[e.SCORBUNNY]:4,[e.SOBBLE]:3,[e.SKWOVET]:2,[e.ROOKIDEE]:3,[e.BLIPBUG]:2,[e.NICKIT]:1,[e.GOSSIFLEUR]:2,[e.WOOLOO]:2,[e.CHEWTLE]:3,[e.YAMPER]:2,[e.ROLYCOLY]:3,[e.APPLIN]:3,[e.SILICOBRA]:3,[e.CRAMORANT]:3,[e.ARROKUDA]:3,[e.TOXEL]:3,[e.SIZZLIPEDE]:3,[e.CLOBBOPUS]:2,[e.SINISTEA]:3,[e.HATENNA]:3,[e.IMPIDIMP]:3,[e.MILCERY]:3,[e.FALINKS]:4,[e.PINCURCHIN]:3,[e.SNOM]:3,[e.STONJOURNER]:3,[e.EISCUE]:3,[e.INDEEDEE]:4,[e.MORPEKO]:3,[e.CUFANT]:3,[e.DRACOZOLT]:5,[e.ARCTOZOLT]:4,[e.DRACOVISH]:5,[e.ARCTOVISH]:4,[e.DURALUDON]:5,[e.DREEPY]:4,[e.ZACIAN]:9,[e.ZAMAZENTA]:8,[e.ETERNATUS]:10,[e.KUBFU]:6,[e.ZARUDE]:5,[e.REGIELEKI]:6,[e.REGIDRAGO]:6,[e.GLASTRIER]:6,[e.SPECTRIER]:8,[e.CALYREX]:8,[e.ENAMORUS]:7,[e.GALAR_MEOWTH]:3,[e.GALAR_PONYTA]:2,[e.GALAR_SLOWPOKE]:3,[e.GALAR_FARFETCHD]:3,[e.GALAR_ARTICUNO]:6,[e.GALAR_ZAPDOS]:6,[e.GALAR_MOLTRES]:6,[e.GALAR_CORSOLA]:3,[e.GALAR_ZIGZAGOON]:3,[e.GALAR_DARUMAKA]:4,[e.GALAR_YAMASK]:3,[e.GALAR_STUNFISK]:2,[e.HISUI_GROWLITHE]:4,[e.HISUI_VOLTORB]:3,[e.HISUI_QWILFISH]:4,[e.HISUI_SNEASEL]:5,[e.HISUI_ZORUA]:3,[e.SPRIGATITO]:4,[e.FUECOCO]:4,[e.QUAXLY]:4,[e.LECHONK]:2,[e.TAROUNTULA]:1,[e.NYMBLE]:3,[e.PAWMI]:3,[e.TANDEMAUS]:4,[e.FIDOUGH]:2,[e.SMOLIV]:3,[e.SQUAWKABILLY]:2,[e.NACLI]:4,[e.CHARCADET]:4,[e.TADBULB]:3,[e.WATTREL]:3,[e.MASCHIFF]:3,[e.SHROODLE]:2,[e.BRAMBLIN]:3,[e.TOEDSCOOL]:3,[e.KLAWF]:3,[e.CAPSAKID]:3,[e.RELLOR]:2,[e.FLITTLE]:3,[e.TINKATINK]:4,[e.WIGLETT]:2,[e.BOMBIRDIER]:3,[e.FINIZEN]:3,[e.VAROOM]:4,[e.CYCLIZAR]:4,[e.ORTHWORM]:4,[e.GLIMMET]:4,[e.GREAVARD]:3,[e.FLAMIGO]:4,[e.CETODDLE]:3,[e.VELUZA]:4,[e.DONDOZO]:4,[e.TATSUGIRI]:4,[e.GREAT_TUSK]:7,[e.SCREAM_TAIL]:5,[e.BRUTE_BONNET]:5,[e.FLUTTER_MANE]:7,[e.SLITHER_WING]:6,[e.SANDY_SHOCKS]:6,[e.IRON_TREADS]:6,[e.IRON_BUNDLE]:6,[e.IRON_HANDS]:6,[e.IRON_JUGULIS]:6,[e.IRON_MOTH]:6,[e.IRON_THORNS]:5,[e.FRIGIBAX]:4,[e.GIMMIGHOUL]:4,[e.WO_CHIEN]:5,[e.CHIEN_PAO]:7,[e.TING_LU]:6,[e.CHI_YU]:7,[e.ROARING_MOON]:7,[e.IRON_VALIANT]:6,[e.KORAIDON]:9,[e.MIRAIDON]:9,[e.WALKING_WAKE]:7,[e.IRON_LEAVES]:6,[e.POLTCHAGEIST]:4,[e.OKIDOGI]:6,[e.MUNKIDORI]:6,[e.FEZANDIPITI]:5,[e.OGERPON]:7,[e.GOUGING_FIRE]:7,[e.RAGING_BOLT]:7,[e.IRON_BOULDER]:7,[e.IRON_CROWN]:7,[e.TERAPAGOS]:9,[e.PECHARUNT]:6,[e.PALDEA_TAUROS]:5,[e.PALDEA_WOOPER]:3,[e.BLOODMOON_URSALUNA]:5},Gf=[{passive:40,costReduction:[25,60],egg:30},{passive:40,costReduction:[25,60],egg:30},{passive:35,costReduction:[20,50],egg:25},{passive:30,costReduction:[15,40],egg:20},{passive:25,costReduction:[12,35],egg:18},{passive:20,costReduction:[10,30],egg:15},{passive:15,costReduction:[8,20],egg:12},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10},{passive:10,costReduction:[5,15],egg:10}];function jT(E){return Gf[E-1].passive}o(jT,"getPassiveCandyCount");function qT(E){return Gf[E-1].costReduction}o(qT,"getValueReductionCandyCounts");function eS(E){return Gf[E-1].egg}o(eS,"getSameSpeciesEggCandyCounts");var c=(E=>(E[E.UNKNOWN=0]="UNKNOWN",E[E.ACE_TRAINER=1]="ACE_TRAINER",E[E.ARTIST=2]="ARTIST",E[E.BACKERS=3]="BACKERS",E[E.BACKPACKER=4]="BACKPACKER",E[E.BAKER=5]="BAKER",E[E.BEAUTY=6]="BEAUTY",E[E.BIKER=7]="BIKER",E[E.BLACK_BELT=8]="BLACK_BELT",E[E.BREEDER=9]="BREEDER",E[E.CLERK=10]="CLERK",E[E.CYCLIST=11]="CYCLIST",E[E.DANCER=12]="DANCER",E[E.DEPOT_AGENT=13]="DEPOT_AGENT",E[E.DOCTOR=14]="DOCTOR",E[E.FIREBREATHER=15]="FIREBREATHER",E[E.FISHERMAN=16]="FISHERMAN",E[E.GUITARIST=17]="GUITARIST",E[E.HARLEQUIN=18]="HARLEQUIN",E[E.HIKER=19]="HIKER",E[E.HOOLIGANS=20]="HOOLIGANS",E[E.HOOPSTER=21]="HOOPSTER",E[E.INFIELDER=22]="INFIELDER",E[E.JANITOR=23]="JANITOR",E[E.LINEBACKER=24]="LINEBACKER",E[E.MAID=25]="MAID",E[E.MUSICIAN=26]="MUSICIAN",E[E.HEX_MANIAC=27]="HEX_MANIAC",E[E.NURSERY_AIDE=28]="NURSERY_AIDE",E[E.OFFICER=29]="OFFICER",E[E.PARASOL_LADY=30]="PARASOL_LADY",E[E.PILOT=31]="PILOT",E[E.POKEFAN=32]="POKEFAN",E[E.PRESCHOOLER=33]="PRESCHOOLER",E[E.PSYCHIC=34]="PSYCHIC",E[E.RANGER=35]="RANGER",E[E.RICH=36]="RICH",E[E.RICH_KID=37]="RICH_KID",E[E.ROUGHNECK=38]="ROUGHNECK",E[E.SAILOR=39]="SAILOR",E[E.SCIENTIST=40]="SCIENTIST",E[E.SMASHER=41]="SMASHER",E[E.SNOW_WORKER=42]="SNOW_WORKER",E[E.STRIKER=43]="STRIKER",E[E.SCHOOL_KID=44]="SCHOOL_KID",E[E.SWIMMER=45]="SWIMMER",E[E.TWINS=46]="TWINS",E[E.VETERAN=47]="VETERAN",E[E.WAITER=48]="WAITER",E[E.WORKER=49]="WORKER",E[E.YOUNGSTER=50]="YOUNGSTER",E[E.ROCKET_GRUNT=51]="ROCKET_GRUNT",E[E.ARCHER=52]="ARCHER",E[E.ARIANA=53]="ARIANA",E[E.PROTON=54]="PROTON",E[E.PETREL=55]="PETREL",E[E.MAGMA_GRUNT=56]="MAGMA_GRUNT",E[E.TABITHA=57]="TABITHA",E[E.COURTNEY=58]="COURTNEY",E[E.AQUA_GRUNT=59]="AQUA_GRUNT",E[E.MATT=60]="MATT",E[E.SHELLY=61]="SHELLY",E[E.GALACTIC_GRUNT=62]="GALACTIC_GRUNT",E[E.JUPITER=63]="JUPITER",E[E.MARS=64]="MARS",E[E.SATURN=65]="SATURN",E[E.PLASMA_GRUNT=66]="PLASMA_GRUNT",E[E.ZINZOLIN=67]="ZINZOLIN",E[E.COLRESS=68]="COLRESS",E[E.FLARE_GRUNT=69]="FLARE_GRUNT",E[E.BRYONY=70]="BRYONY",E[E.XEROSIC=71]="XEROSIC",E[E.AETHER_GRUNT=72]="AETHER_GRUNT",E[E.FABA=73]="FABA",E[E.SKULL_GRUNT=74]="SKULL_GRUNT",E[E.PLUMERIA=75]="PLUMERIA",E[E.MACRO_GRUNT=76]="MACRO_GRUNT",E[E.OLEANA=77]="OLEANA",E[E.STAR_GRUNT=78]="STAR_GRUNT",E[E.GIACOMO=79]="GIACOMO",E[E.MELA=80]="MELA",E[E.ATTICUS=81]="ATTICUS",E[E.ORTEGA=82]="ORTEGA",E[E.ERI=83]="ERI",E[E.ROCKET_BOSS_GIOVANNI_1=84]="ROCKET_BOSS_GIOVANNI_1",E[E.ROCKET_BOSS_GIOVANNI_2=85]="ROCKET_BOSS_GIOVANNI_2",E[E.MAXIE=86]="MAXIE",E[E.MAXIE_2=87]="MAXIE_2",E[E.ARCHIE=88]="ARCHIE",E[E.ARCHIE_2=89]="ARCHIE_2",E[E.CYRUS=90]="CYRUS",E[E.CYRUS_2=91]="CYRUS_2",E[E.GHETSIS=92]="GHETSIS",E[E.GHETSIS_2=93]="GHETSIS_2",E[E.LYSANDRE=94]="LYSANDRE",E[E.LYSANDRE_2=95]="LYSANDRE_2",E[E.LUSAMINE=96]="LUSAMINE",E[E.LUSAMINE_2=97]="LUSAMINE_2",E[E.GUZMA=98]="GUZMA",E[E.GUZMA_2=99]="GUZMA_2",E[E.ROSE=100]="ROSE",E[E.ROSE_2=101]="ROSE_2",E[E.PENNY=102]="PENNY",E[E.PENNY_2=103]="PENNY_2",E[E.BUCK=104]="BUCK",E[E.CHERYL=105]="CHERYL",E[E.MARLEY=106]="MARLEY",E[E.MIRA=107]="MIRA",E[E.RILEY=108]="RILEY",E[E.VICTOR=109]="VICTOR",E[E.VICTORIA=110]="VICTORIA",E[E.VIVI=111]="VIVI",E[E.VICKY=112]="VICKY",E[E.VITO=113]="VITO",E[E.BUG_TYPE_SUPERFAN=114]="BUG_TYPE_SUPERFAN",E[E.EXPERT_POKEMON_BREEDER=115]="EXPERT_POKEMON_BREEDER",E[E.FUTURE_SELF_M=116]="FUTURE_SELF_M",E[E.FUTURE_SELF_F=117]="FUTURE_SELF_F",E[E.BROCK=200]="BROCK",E[E.MISTY=201]="MISTY",E[E.LT_SURGE=202]="LT_SURGE",E[E.ERIKA=203]="ERIKA",E[E.JANINE=204]="JANINE",E[E.SABRINA=205]="SABRINA",E[E.BLAINE=206]="BLAINE",E[E.GIOVANNI=207]="GIOVANNI",E[E.FALKNER=208]="FALKNER",E[E.BUGSY=209]="BUGSY",E[E.WHITNEY=210]="WHITNEY",E[E.MORTY=211]="MORTY",E[E.CHUCK=212]="CHUCK",E[E.JASMINE=213]="JASMINE",E[E.PRYCE=214]="PRYCE",E[E.CLAIR=215]="CLAIR",E[E.ROXANNE=216]="ROXANNE",E[E.BRAWLY=217]="BRAWLY",E[E.WATTSON=218]="WATTSON",E[E.FLANNERY=219]="FLANNERY",E[E.NORMAN=220]="NORMAN",E[E.WINONA=221]="WINONA",E[E.TATE=222]="TATE",E[E.LIZA=223]="LIZA",E[E.JUAN=224]="JUAN",E[E.ROARK=225]="ROARK",E[E.GARDENIA=226]="GARDENIA",E[E.MAYLENE=227]="MAYLENE",E[E.CRASHER_WAKE=228]="CRASHER_WAKE",E[E.FANTINA=229]="FANTINA",E[E.BYRON=230]="BYRON",E[E.CANDICE=231]="CANDICE",E[E.VOLKNER=232]="VOLKNER",E[E.CILAN=233]="CILAN",E[E.CHILI=234]="CHILI",E[E.CRESS=235]="CRESS",E[E.CHEREN=236]="CHEREN",E[E.LENORA=237]="LENORA",E[E.ROXIE=238]="ROXIE",E[E.BURGH=239]="BURGH",E[E.ELESA=240]="ELESA",E[E.CLAY=241]="CLAY",E[E.SKYLA=242]="SKYLA",E[E.BRYCEN=243]="BRYCEN",E[E.DRAYDEN=244]="DRAYDEN",E[E.MARLON=245]="MARLON",E[E.VIOLA=246]="VIOLA",E[E.GRANT=247]="GRANT",E[E.KORRINA=248]="KORRINA",E[E.RAMOS=249]="RAMOS",E[E.CLEMONT=250]="CLEMONT",E[E.VALERIE=251]="VALERIE",E[E.OLYMPIA=252]="OLYMPIA",E[E.WULFRIC=253]="WULFRIC",E[E.MILO=254]="MILO",E[E.NESSA=255]="NESSA",E[E.KABU=256]="KABU",E[E.BEA=257]="BEA",E[E.ALLISTER=258]="ALLISTER",E[E.OPAL=259]="OPAL",E[E.BEDE=260]="BEDE",E[E.GORDIE=261]="GORDIE",E[E.MELONY=262]="MELONY",E[E.PIERS=263]="PIERS",E[E.MARNIE=264]="MARNIE",E[E.RAIHAN=265]="RAIHAN",E[E.KATY=266]="KATY",E[E.BRASSIUS=267]="BRASSIUS",E[E.IONO=268]="IONO",E[E.KOFU=269]="KOFU",E[E.LARRY=270]="LARRY",E[E.RYME=271]="RYME",E[E.TULIP=272]="TULIP",E[E.GRUSHA=273]="GRUSHA",E[E.LORELEI=300]="LORELEI",E[E.BRUNO=301]="BRUNO",E[E.AGATHA=302]="AGATHA",E[E.LANCE=303]="LANCE",E[E.WILL=304]="WILL",E[E.KOGA=305]="KOGA",E[E.KAREN=306]="KAREN",E[E.SIDNEY=307]="SIDNEY",E[E.PHOEBE=308]="PHOEBE",E[E.GLACIA=309]="GLACIA",E[E.DRAKE=310]="DRAKE",E[E.AARON=311]="AARON",E[E.BERTHA=312]="BERTHA",E[E.FLINT=313]="FLINT",E[E.LUCIAN=314]="LUCIAN",E[E.SHAUNTAL=315]="SHAUNTAL",E[E.MARSHAL=316]="MARSHAL",E[E.GRIMSLEY=317]="GRIMSLEY",E[E.CAITLIN=318]="CAITLIN",E[E.MALVA=319]="MALVA",E[E.SIEBOLD=320]="SIEBOLD",E[E.WIKSTROM=321]="WIKSTROM",E[E.DRASNA=322]="DRASNA",E[E.HALA=323]="HALA",E[E.MOLAYNE=324]="MOLAYNE",E[E.OLIVIA=325]="OLIVIA",E[E.ACEROLA=326]="ACEROLA",E[E.KAHILI=327]="KAHILI",E[E.MARNIE_ELITE=328]="MARNIE_ELITE",E[E.NESSA_ELITE=329]="NESSA_ELITE",E[E.BEA_ELITE=330]="BEA_ELITE",E[E.ALLISTER_ELITE=331]="ALLISTER_ELITE",E[E.RAIHAN_ELITE=332]="RAIHAN_ELITE",E[E.RIKA=333]="RIKA",E[E.POPPY=334]="POPPY",E[E.LARRY_ELITE=335]="LARRY_ELITE",E[E.HASSEL=336]="HASSEL",E[E.CRISPIN=337]="CRISPIN",E[E.AMARYS=338]="AMARYS",E[E.LACEY=339]="LACEY",E[E.DRAYTON=340]="DRAYTON",E[E.BLUE=350]="BLUE",E[E.RED=351]="RED",E[E.LANCE_CHAMPION=352]="LANCE_CHAMPION",E[E.STEVEN=353]="STEVEN",E[E.WALLACE=354]="WALLACE",E[E.CYNTHIA=355]="CYNTHIA",E[E.ALDER=356]="ALDER",E[E.IRIS=357]="IRIS",E[E.DIANTHA=358]="DIANTHA",E[E.KUKUI=359]="KUKUI",E[E.HAU=360]="HAU",E[E.LEON=361]="LEON",E[E.MUSTARD=362]="MUSTARD",E[E.GEETA=363]="GEETA",E[E.NEMONA=364]="NEMONA",E[E.KIERAN=365]="KIERAN",E[E.RIVAL=375]="RIVAL",E[E.RIVAL_2=376]="RIVAL_2",E[E.RIVAL_3=377]="RIVAL_3",E[E.RIVAL_4=378]="RIVAL_4",E[E.RIVAL_5=379]="RIVAL_5",E[E.RIVAL_6=380]="RIVAL_6",E))(c||{}),bC=(E=>(E.WHITE="#ffffff",E.OFF_WHITE="#f8f8f8",E.LIGHT_GREY="#a0a0a0",E.GREY="#484848",E.DARK_GREY="#404040",E.PINK="#f89890",E.RED="#e13d3d",E.RED2="#e70808",E.REDORANGE="#d64b00",E.ORANGE="#f8b050",E.LIGHT_YELLOW="#e8e8a8",E.YELLOW="#ccbe00",E.DARK_YELLOW="#a68e17",E.GREEN="#78c850",E.BLUE="#40c8f8",E.COMMON="#ffffff",E.GREAT="#3890f8",E.ULTRA="#f8d038",E.ROGUE="#d52929",E.MASTER="#e020c0",E.LUXURY="#e64a18",E))(bC||{}),df=(E=>(E.NORMAL="#ADA594",E.FIGHTING="#A55239",E.FLYING="#9CADF7",E.POISON="#9141CB",E.GROUND="#AE7A3B",E.ROCK="#BDA55A",E.BUG="#ADBD21",E.GHOST="#6363B5",E.STEEL="#81A6BE",E.FIRE="#F75231",E.WATER="#399CFF",E.GRASS="#7BCE52",E.ELECTRIC="#FFC631",E.PSYCHIC="#EF4179",E.ICE="#5ACEE7",E.DRAGON="#7B63E7",E.DARK="#735A4A",E.FAIRY="#EF70EF",E))(df||{}),Hf=(E=>(E.NORMAL="#574F4A",E.FIGHTING="#4E637C",E.FLYING="#4E637C",E.POISON="#352166",E.GROUND="#572D1E",E.ROCK="#5F442D",E.BUG="#5F5010",E.GHOST="#323D5B",E.STEEL="#415C5F",E.FIRE="#7C1818",E.WATER="#1C4E80",E.GRASS="#4F6729",E.ELECTRIC="#804618",E.PSYCHIC="#782155",E.ICE="#2D5C74",E.DRAGON="#313874",E.DARK="#392725",E.FAIRY="#663878",E))(Hf||{}),kC=(E=>(E.GREY="#636363",E.PURPLE="#6b5a73",E.LIGHT_GREY="#d0d0c8",E.BROWN="#69402a",E.PINK="#fca2a2",E.BRIGHT_RED="#f83018",E.RED="#984038",E.MAROON="#632929",E.GREEN="#306850",E.BLUE="#006090",E.LIGHT_YELLOW="#ded6b5",E.YELLOW="#ebd773",E.DARK_YELLOW="#a0a060",E.ORANGE="#c07800",E.LIGHT_ORANGE="#ffbd73",E))(kC||{});const lh=10;var rO=(E=>(E[E.STARTER_CHOICE=0]="STARTER_CHOICE",E[E.STARTER_POINTS=1]="STARTER_POINTS",E[E.STARTER_COST=2]="STARTER_COST",E[E.STARTER_MODIFY=3]="STARTER_MODIFY",E[E.POKEMON_IN_BATTLE=4]="POKEMON_IN_BATTLE",E[E.FIXED_BATTLES=5]="FIXED_BATTLES",E[E.TYPE_EFFECTIVENESS=6]="TYPE_EFFECTIVENESS",E[E.AI_LEVEL=7]="AI_LEVEL",E[E.AI_MOVE_SLOTS=8]="AI_MOVE_SLOTS",E[E.PASSIVE_ACCESS=9]="PASSIVE_ACCESS",E[E.GAME_MODE_MODIFY=10]="GAME_MODE_MODIFY",E[E.MOVE_ACCESS=11]="MOVE_ACCESS",E[E.MOVE_WEIGHT=12]="MOVE_WEIGHT",E[E.FLIP_STAT=13]="FLIP_STAT",E))(rO||{});const VB=class VB{constructor(A,s=Number.MAX_SAFE_INTEGER){this.id=A,this.value=0,this.maxValue=s,this.severity=0,this.maxSeverity=0,this.conditions=[]}reset(){this.value=0,this.severity=0}geti18nKey(){return ut[this.id].split("_").map((A,s)=>s?`${A[0]}${A.slice(1).toLowerCase()}`:A.toLowerCase()).join("")}isUnlocked(A){return this.conditions.every(s=>s(A))}condition(A){return this.conditions.push(A),this}getName(){return u.t(`challenges:${this.geti18nKey()}.name`)}getValue(A){const s=A??this.value;return u.t(`challenges:${this.geti18nKey()}.value.${s}`)}getDescription(A){const s=A??this.value;return`${u.t([`challenges:${this.geti18nKey()}.desc.${s}`,`challenges:${this.geti18nKey()}.desc`])}`}increaseValue(){return this.value<this.maxValue?(this.value=Math.min(this.value+1,this.maxValue),!0):!1}decreaseValue(){return this.value>0?(this.value=Math.max(this.value-1,0),!0):!1}hasSeverity(){return this.value!==0&&this.maxSeverity>0}decreaseSeverity(){return this.severity>0?(this.severity=Math.max(this.severity-1,0),!0):!1}increaseSeverity(){return this.severity<this.maxSeverity?(this.severity=Math.min(this.severity+1,this.maxSeverity),!0):!1}getDifficulty(){return this.value}getMinDifficulty(){return 0}static loadChallenge(A){throw new Error("Method not implemented! Use derived class")}applyStarterChoice(A,s,R){return!1}applyStarterPoints(A){return!1}applyStarterCost(A,s){return!1}applyStarterModify(A){return!1}applyPokemonInBattle(A,s){return!1}applyFixedBattle(A,s){return!1}applyTypeEffectiveness(A){return!1}applyLevelChange(A,s,R,n){return!1}applyMoveSlot(A,s){return!1}applyPassiveAccess(A,s){return!1}applyGameModeModify(){return!1}applyMoveAccessLevel(A,s,R,n){return!1}applyMoveWeight(A,s,R,n){return!1}applyFlipStat(A,s){return!1}};o(VB,"Challenge");let Ia=VB;const r0=class r0 extends Ia{constructor(){super(ut.SINGLE_GENERATION,9)}applyStarterChoice(A,s){return A.generation!==this.value?(s.value=!1,!0):!1}applyPokemonInBattle(A,s){const R=$e(A.species.speciesId).generation,n=A.isFusion()?$e(A.fusionSpecies.speciesId).generation:0;return A.isPlayer()&&(R!==this.value||A.isFusion()&&n!==this.value)?(s.value=!1,!0):!1}applyFixedBattle(A,s){let R=[];const n=[aE.EVIL_GRUNT_1,aE.EVIL_GRUNT_2,aE.EVIL_GRUNT_3,aE.EVIL_ADMIN_1,aE.EVIL_GRUNT_4,aE.EVIL_ADMIN_2,aE.EVIL_BOSS_1,aE.EVIL_BOSS_2],I=[[c.ROCKET_GRUNT],[c.ROCKET_GRUNT],[c.MAGMA_GRUNT,c.AQUA_GRUNT],[c.GALACTIC_GRUNT],[c.PLASMA_GRUNT],[c.FLARE_GRUNT],[c.AETHER_GRUNT,c.SKULL_GRUNT],[c.MACRO_GRUNT],[c.STAR_GRUNT]],r=[[c.ARCHER,c.ARIANA,c.PROTON,c.PETREL],[c.ARCHER,c.ARIANA,c.PROTON,c.PETREL],[[c.TABITHA,c.COURTNEY],[c.MATT,c.SHELLY]],[c.JUPITER,c.MARS,c.SATURN],[c.ZINZOLIN,c.COLRESS],[c.XEROSIC,c.BRYONY],[c.FABA,c.PLUMERIA],[c.OLEANA],[c.GIACOMO,c.MELA,c.ATTICUS,c.ORTEGA,c.ERI]],L=[[c.ROCKET_BOSS_GIOVANNI_1],[c.ROCKET_BOSS_GIOVANNI_1],[c.MAXIE,c.ARCHIE],[c.CYRUS],[c.GHETSIS],[c.LYSANDRE],[c.LUSAMINE,c.GUZMA],[c.ROSE],[c.PENNY]],N=[[c.ROCKET_BOSS_GIOVANNI_2],[c.ROCKET_BOSS_GIOVANNI_2],[c.MAXIE_2,c.ARCHIE_2],[c.CYRUS_2],[c.GHETSIS_2],[c.LYSANDRE_2],[c.LUSAMINE_2,c.GUZMA_2],[c.ROSE_2],[c.PENNY_2]];switch(A){case aE.EVIL_GRUNT_1:return R=I[this.value-1],s.setBattleType(Ht.TRAINER).setGetTrainerFunc(Xs(R,!0)),!0;case aE.EVIL_GRUNT_2:case aE.EVIL_GRUNT_3:case aE.EVIL_GRUNT_4:R=I[this.value-1];break;case aE.EVIL_ADMIN_1:case aE.EVIL_ADMIN_2:R=r[this.value-1];break;case aE.EVIL_BOSS_1:return R=L[this.value-1],s.setBattleType(Ht.TRAINER).setSeedOffsetWave(aE.EVIL_GRUNT_1).setGetTrainerFunc(Xs(R,!0)).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),!0;case aE.EVIL_BOSS_2:return R=N[this.value-1],s.setBattleType(Ht.TRAINER).setSeedOffsetWave(aE.EVIL_GRUNT_1).setGetTrainerFunc(Xs(R,!0)).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),!0;case aE.ELITE_FOUR_1:R=[c.LORELEI,c.WILL,c.SIDNEY,c.AARON,c.SHAUNTAL,c.MALVA,eE([c.HALA,c.MOLAYNE]),c.MARNIE_ELITE,c.RIKA];break;case aE.ELITE_FOUR_2:R=[c.BRUNO,c.KOGA,c.PHOEBE,c.BERTHA,c.MARSHAL,c.SIEBOLD,c.OLIVIA,c.NESSA_ELITE,c.POPPY];break;case aE.ELITE_FOUR_3:R=[c.AGATHA,c.BRUNO,c.GLACIA,c.FLINT,c.GRIMSLEY,c.WIKSTROM,c.ACEROLA,eE([c.BEA_ELITE,c.ALLISTER_ELITE]),c.LARRY_ELITE];break;case aE.ELITE_FOUR_4:R=[c.LANCE,c.KAREN,c.DRAKE,c.LUCIAN,c.CAITLIN,c.DRASNA,c.KAHILI,c.RAIHAN_ELITE,c.HASSEL];break;case aE.CHAMPION:R=[c.BLUE,eE([c.RED,c.LANCE_CHAMPION]),eE([c.STEVEN,c.WALLACE]),c.CYNTHIA,eE([c.ALDER,c.IRIS]),c.DIANTHA,eE([c.KUKUI,c.HAU]),eE([c.LEON,c.MUSTARD]),eE([c.GEETA,c.NEMONA])];break}if(R.length===0)return!1;if(n.includes(A))return s.setBattleType(Ht.TRAINER).setSeedOffsetWave(aE.EVIL_GRUNT_1).setGetTrainerFunc(Xs(R,!0)),!0;if(A>=aE.ELITE_FOUR_1&&A<=aE.CHAMPION){const l=R;return s.setBattleType(Ht.TRAINER).setGetTrainerFunc(()=>new ps(l[this.value-1],LA.DEFAULT)),!0}return!1}getDifficulty(){return this.value>0?1:0}getValue(A){const s=A??this.value;return s===0?u.t("settings:off"):u.t(`starterSelectUiHandler:gen${s}`)}getDescription(A){const s=A??this.value;return s===0?u.t("challenges:singleGeneration.desc_default"):u.t("challenges:singleGeneration.desc",{gen:u.t(`challenges:singleGeneration.gen_${s}`)})}static loadChallenge(A){const s=new r0;return s.value=A.value,s.severity=A.severity,s}};o(r0,"SingleGenerationChallenge");let nO=r0;const Ur=class Ur extends Ia{constructor(){super(ut.SINGLE_TYPE,18)}applyStarterChoice(A,s,R){const n=ms(A.speciesId,R.formIndex);return[n.type1,n.type2].includes(this.value-1)?!1:(s.value=!1,!0)}applyPokemonInBattle(A,s){return A.isPlayer()&&!A.isOfType(this.value-1,!1,!1,!0)&&!Ur.TYPE_OVERRIDES.some(R=>R.type===this.value-1&&(A.isFusion()&&R.fusion?A.fusionSpecies:A.species).speciesId===R.species)?(s.value=!1,!0):!1}getDifficulty(){return this.value>0?1:0}getValue(A){return A===void 0&&(A=this.value),i[this.value-1].toLowerCase()}getDescription(A){A===void 0&&(A=this.value);const s=u.t(`pokemonInfo:Type.${i[this.value-1]}`),R=`[color=${df[i[this.value-1]]}][shadow=${Hf[i[this.value-1]]}]${s}[/shadow][/color]`,n=u.t("challenges:singleType.desc_default"),I=u.t("challenges:singleType.desc",{type:R});return this.value===0?n:I}static loadChallenge(A){const s=new Ur;return s.value=A.value,s.severity=A.severity,s}};o(Ur,"SingleTypeChallenge"),Ur.TYPE_OVERRIDES=[{species:e.CASTFORM,type:i.NORMAL,fusion:!1}];let vE=Ur;const L0=class L0 extends Ia{constructor(){super(ut.FRESH_START,1)}applyStarterChoice(A,s){return wi.includes(A.speciesId)?!1:(s.value=!1,!0)}applyStarterCost(A,s){return wi.includes(A)?(s.value=tA[A],!0):!1}applyStarterModify(A){return A.abilityIndex=0,A.passive=!1,A.nature=rt.HARDY,A.moveset=A.species.getLevelMoves().filter(s=>s[0]<=5).map(s=>s[1]).slice(0,4).map(s=>new Lt(s)),A.luck=0,A.shiny=!1,A.variant=0,A.formIndex=0,A.ivs=[15,15,15,15,15,15],A.teraType=A.species.type1,!0}getDifficulty(){return 0}static loadChallenge(A){const s=new L0;return s.value=A.value,s.severity=A.severity,s}};o(L0,"FreshStartChallenge");let tS=L0;const o0=class o0 extends Ia{constructor(){super(ut.INVERSE_BATTLE,1)}static loadChallenge(A){const s=new o0;return s.value=A.value,s.severity=A.severity,s}getDifficulty(){return 0}applyTypeEffectiveness(A){return A.value<1?(A.value=2,!0):A.value>1?(A.value=.5,!0):!1}};o(o0,"InverseBattleChallenge");let AS=o0;const T0=class T0 extends Ia{constructor(){super(ut.FLIP_STAT,1)}applyFlipStat(A,s){const R=vc(s);return s[0]=R[5],s[1]=R[4],s[2]=R[3],s[3]=R[2],s[4]=R[1],s[5]=R[0],!0}static loadChallenge(A){const s=new T0;return s.value=A.value,s.severity=A.severity,s}};o(T0,"FlipStatChallenge");let yr=T0;const S0=class S0 extends Ia{constructor(){super(ut.LOWER_MAX_STARTER_COST,9)}getValue(A){return A===void 0&&(A=this.value),(lh-A).toString()}applyStarterChoice(A,s){return tA[A.speciesId]>lh-this.value?(s.value=!1,!0):!1}static loadChallenge(A){const s=new S0;return s.value=A.value,s.severity=A.severity,s}};o(S0,"LowerStarterMaxCostChallenge");let Ch=S0;const N0=class N0 extends Ia{constructor(){super(ut.LOWER_STARTER_POINTS,9)}getValue(A){return A===void 0&&(A=this.value),(lh-A).toString()}applyStarterPoints(A){return A.value-=this.value,!0}static loadChallenge(A){const s=new N0;return s.value=A.value,s.severity=A.severity,s}};o(N0,"LowerStarterPointsChallenge");let uh=N0;function PR(E,...A){let s=!1;return a.gameMode.challenges.forEach(R=>{if(R.value!==0)switch(E){case 0:s||(s=R.applyStarterChoice(A[0],A[1],A[2]));break;case 1:s||(s=R.applyStarterPoints(A[0]));break;case 2:s||(s=R.applyStarterCost(A[0],A[1]));break;case 3:s||(s=R.applyStarterModify(A[0]));break;case 4:s||(s=R.applyPokemonInBattle(A[0],A[1]));break;case 5:s||(s=R.applyFixedBattle(A[0],A[1]));break;case 6:s||(s=R.applyTypeEffectiveness(A[0]));break;case 7:s||(s=R.applyLevelChange(A[0],A[1],A[2],A[3]));break;case 8:s||(s=R.applyMoveSlot(A[0],A[1]));break;case 9:s||(s=R.applyPassiveAccess(A[0],A[1]));break;case 10:s||(s=R.applyGameModeModify());break;case 11:s||(s=R.applyMoveAccessLevel(A[0],A[1],A[2],A[3]));break;case 12:s||(s=R.applyMoveWeight(A[0],A[1],A[2],A[3]));break;case 13:s||(s=R.applyFlipStat(A[0],A[1]));break}}),s}o(PR,"applyChallenges");function Uh(E){switch(E.id){case ut.SINGLE_GENERATION:return nO.loadChallenge(E);case ut.SINGLE_TYPE:return vE.loadChallenge(E);case ut.LOWER_MAX_STARTER_COST:return Ch.loadChallenge(E);case ut.LOWER_STARTER_POINTS:return uh.loadChallenge(E);case ut.FRESH_START:return tS.loadChallenge(E);case ut.INVERSE_BATTLE:return AS.loadChallenge(E);case ut.FLIP_STAT:return yr.loadChallenge(E)}throw new Error("Unknown challenge copied")}o(Uh,"copyChallenge");const Dh=[];function gZ(){Dh.push(new nO,new vE,new tS,new AS,new yr)}o(gZ,"initChallenges");function ui(E,A,s){if(!s){const n=new Pt(!0);return PR(0,E,n,A),n.value}const R=[E.speciesId];for(;R.length;){const n=R.pop();if(!n)return!1;const I=$e(n);if(mZ(I,A))return!0;n&&jt.hasOwnProperty(n)&&jt[n].forEach(r=>{(!(r!=null&&r.preFormKey)||r.preFormKey===E.forms[A.formIndex].formKey)&&R.push(r.speciesId)})}return!1}o(ui,"checkStarterValidForChallenge");function mZ(E,A,s){const R=new Pt(!0);return PR(0,E,R,A),mR.hasOwnProperty(E.speciesId)?R.value?!0:mR[E.speciesId].some(I=>"item"in I.trigger?E.forms.some((r,L)=>{if(I.formKey===r.formKey){const N={...A,formIndex:L},l=new Pt(!0);return PR(0,E,l,N),l.value}return!1}):!1):R.value}o(mZ,"checkSpeciesValidForChallenge");const SR=48,Na=82,BL=48,la=8,ul=6,l0=class l0 extends Phaser.GameObjects.Container{constructor(A){A!=null&&A.onSide&&(A.top=!1),super(a,A==null?void 0:A.x,A==null?void 0:A.y),this.active=!1,this.descScroll=null;const s=(A==null?void 0:A.scale)||1;this.setScale(s),this.options=A||{};const R=((A==null?void 0:A.width)||l0.getWidth(s))/s;this.descBg=Gt(A!=null&&A.onSide&&!(A!=null&&A.right)?Na:0,A!=null&&A.top?SR:0,R-(A!=null&&A.onSide?Na:0),BL),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=Se((A!=null&&A.onSide&&!(A!=null&&A.right)?Na:0)+la,(A!=null&&A.top?SR:0)+la-2,"",k.BATTLE_INFO,{wordWrap:{width:(R-(la-2)*2-(A!=null&&A.onSide?Na:0))*ul}}),this.desc.setLineSpacing(u.resolvedLanguage==="ja"?25:5);const n={x:(A==null?void 0:A.x)||0,y:(A==null?void 0:A.y)||0};n.x<0&&(n.x+=a.game.canvas.width/ul),n.y<0&&(n.y+=a.game.canvas.height/ul);const I=a.make.graphics();I.fillStyle(16711680),I.fillRect(n.x+((A!=null&&A.onSide&&!(A!=null&&A.right)?Na:0)+la)*s,n.y+((A!=null&&A.top?SR:0)+la-2)*s,R-((A!=null&&A.onSide?Na:0)-la*2)*s,(BL-(la-2)*2)*s),I.setScale(6);const r=this.createGeometryMask(I);this.add(this.desc),this.desc.setMask(r),this.val=new Phaser.GameObjects.Container(a,A!=null&&A.right?R-Na:0,A!=null&&A.top||A!=null&&A.onSide?0:BL),this.add(this.val);const L=Gt(0,0,Na,SR);L.setOrigin(0,0),this.val.add(L),this.typ=a.add.sprite(25,SR-35,Ds("types"),"unknown"),this.typ.setScale(.8),this.val.add(this.typ),this.cat=a.add.sprite(57,SR-35,"categories","physical"),this.val.add(this.cat);const N=Se(12,SR-25,"PP",k.MOVE_INFO_CONTENT);N.setOrigin(0,.5),N.setText(u.t("fightUiHandler:pp")),this.val.add(N),this.pp=Se(70,SR-25,"--",k.MOVE_INFO_CONTENT),this.pp.setOrigin(1,.5),this.val.add(this.pp);const l=Se(12,SR-17,"POWER",k.MOVE_INFO_CONTENT);l.setOrigin(0,.5),l.setText(u.t("fightUiHandler:power")),this.val.add(l),this.pow=Se(70,SR-17,"---",k.MOVE_INFO_CONTENT),this.pow.setOrigin(1,.5),this.val.add(this.pow);const C=Se(12,SR-9,"ACC",k.MOVE_INFO_CONTENT);C.setOrigin(0,.5),C.setText(u.t("fightUiHandler:accuracy")),this.val.add(C),this.acc=Se(70,SR-9,"---",k.MOVE_INFO_CONTENT),this.acc.setOrigin(1,.5),this.val.add(this.acc),A!=null&&A.hideEffectBox&&this.val.setVisible(!1),A!=null&&A.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(A){var R;if(!a.enableMoveInfo)return!1;this.move=A,this.pow.setText(A.power>=0?A.power.toString():"---"),this.acc.setText(A.accuracy>=0?A.accuracy.toString():"---"),this.pp.setText(A.pp>=0?A.pp.toString():"---"),this.typ.setTexture(Ds("types"),i[A.type].toLowerCase()),this.cat.setFrame(g[A.category].toLowerCase()),this.desc.setText((A==null?void 0:A.effect)||""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=((R=this.options)!=null&&R.top?SR:0)+la-2);const s=Math.floor(this.desc.displayHeight*(96/72)/14.83);return s>3&&(this.descScroll=a.tweens.add({targets:this.desc,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((s-3)*2e3),y:`-=${14.83*(72/96)*(s-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),a.tweens.add({targets:this.desc,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A){return a.game.canvas.width/ul/2}static getHeight(A,s){return(s?Math.max(SR,BL):SR+BL)*A}};o(l0,"MoveInfoOverlay");let JR=l0;const pZ=[],fn={[t.MEGA_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.COALOSSAL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.PAY_DAY]:[e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.RHYDON,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.SKITTY,e.DELCATTY,e.MUNCHLAX,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.PURRLOIN,e.LIEPARD,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.ZERAORA,e.PERRSERKER,e.INDEEDEE,e.CALYREX,e.ANNIHILAPE,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.FIRE_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,[e.LYCANROC,"midnight"],e.KOMMO_O,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.CINDERACE,e.COALOSSAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.ICE_PUNCH]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.MELOETTA,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HOOPA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.KOMMO_O,e.TAPU_FINI,e.BUZZWOLE,e.MARSHADOW,e.MELMETAL,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.EISCUE,e.KUBFU,e.URSHIFU,e.URSALUNA,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.CETITAN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.BLOODMOON_URSALUNA],[t.THUNDER_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.HEATMOR,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,[e.LYCANROC,"midnight"],e.KOMMO_O,e.TAPU_KOKO,e.BUZZWOLE,e.XURKITREE,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.TOXTRICITY,e.GRIMMSNARL,e.OBSTAGOON,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.KUBFU,e.URSHIFU,e.URSALUNA,e.FLORAGATO,e.MEOWSCARADA,e.PAWMO,e.PAWMOT,e.GARGANACL,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWKING,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.BLOODMOON_URSALUNA],[t.SWORDS_DANCE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.BANETTE,e.TROPIUS,e.ABSOL,e.WALREIN,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.CHERUBI,e.CHERRIM,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.LILLIGANT,e.DWEBBLE,e.CRUSTLE,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.FOMANTIS,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.KARTANA,e.NECROZMA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.INTELEON,e.GREEDENT,e.DUBWOOL,e.DREDNAW,e.HATTERENE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.DURALUDON,e.ZACIAN,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.LOKIX,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.KINGAMBIT,e.IRON_HANDS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.CUT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BEEDRILL,e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.BELLOSSOM,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.GLIGAR,e.STEELIX,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ROSELIA,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.KARTANA,e.OBSTAGOON,e.PERRSERKER,e.URSALUNA,e.BASCULEGION,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FLY]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.GIRATINA,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GENESECT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRAGAPULT,e.ETERNATUS,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY],[t.MEGA_KICK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GOLEM,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.VICTINI,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DUBWOOL,e.COALOSSAL,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.QUAQUAVAL,e.FLAMIGO,[e.DEOXYS,"attack","defense","speed"],e.ALOLA_RAICHU,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_LILLIGANT],[t.BODY_SLAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.LUXRAY,e.ROSERADE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.THROH,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.GARBODOR,e.ZOROARK,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.BRIONNE,e.PRIMARINA,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.ARAQUANID,e.SALAZZLE,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TAKE_DOWN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.RHYPERIOR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ROGGENROLA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.MAGEARNA,e.STAKATAKA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.DOUBLE_EDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TYROGUE,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.AMBIPOM,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KELDEO,e.CHESNAUGHT,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.CARBINK,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.PERRSERKER,e.EISCUE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.LOKIX,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.PIN_MISSILE]:[e.BEEDRILL,e.SANDSLASH,e.CLOYSTER,e.JOLTEON,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.ZIGZAGOON,e.LINOONE,e.ROSELIA,e.CACNEA,e.CACTURNE,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.TOGEDEMARU,e.POIPOLE,e.NAGANADEL,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.OVERQWIL,e.IRON_THORNS,e.ALOLA_SANDSLASH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH],[t.ROAR]:[e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.ALTARIA,e.ZANGOOSE,e.TROPIUS,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.AVALUGG,e.XERNEAS,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.YAMPER,e.BOLTUND,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,[e.URSHIFU,"single-strike"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.FLAMETHROWER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.ZOROARK,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.NOIVERN,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.HYDRO_PUMP]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MAGIKARP,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.AVALUGG,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.ROARING_MOON,e.WALKING_WAKE,e.HYDRAPPLE,[e.ROTOM,"wash"],e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.SURF]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.HERDIER,e.STOUTLAND,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.BOUFFALANT,e.HYDREIGON,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_RAICHU,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"combat","aqua"],e.PALDEA_WOOPER],[t.ICE_BEAM]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MELMETAL,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BLIZZARD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.LOPUNNY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.MESPRIT,e.DIALGA,e.PALKIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.DREDNAW,e.CRAMORANT,e.BARRASKEWDA,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,[e.ROTOM,"frost"],e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.PSYBEAM]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.CHINCHOU,e.CLEFFA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.REMORAID,e.OCTILLERY,e.MANTINE,e.PORYGON2,e.STANTLER,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.TAPU_LELE,e.MAGEARNA,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.HYPER_BEAM]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.KIRLIA,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.LOW_KICK]:[e.SANDSHREW,e.SANDSLASH,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.PONYTA,e.RAPIDASH,e.DODUO,e.DODRIO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BONSLY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ZOROARK,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.ESPATHRA,e.FLAMIGO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.COUNTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.LEDYBA,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.RIOLU,e.LUCARIO,e.SHELLOS,e.GASTRODON,e.CROAGUNK,e.TOXICROAK,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.ACCELGOR,e.AXEW,e.FRAXURE,e.HAXORUS,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.GOOMY,e.SLIGGOO,e.GOODRA,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.PYUKUMUKU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.FALINKS,e.KUBFU,e.URSHIFU,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.FINIZEN,e.PALAFIN,e.TATSUGIRI,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.IRON_BOULDER],[t.STRENGTH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.LOPUNNY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.HERDIER,e.STOUTLAND,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.REUNICLUS,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.URSALUNA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_BRAVIARY,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ARCANINE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MOLTRES,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TYPHLOSION,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.ENTEI,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.MAWILE,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.TROPIUS,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.LICKILICKY,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.UXIE,e.HEATRAN,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.GIGALITH,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLURK,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.HELIOLISK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.CENTISKORCH,e.MR_RIME,e.ALCREMIE,e.DURALUDON,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.GLIMMORA,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_MOTH,e.WO_CHIEN,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FIRE_SPIN]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.SOLROCK,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SKUNTANK,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.DRACOZOLT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.THUNDERBOLT]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.GOLURK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.NAGANADEL,e.ZERAORA,e.MELTAN,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.CYCLIZAR,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.THUNDER_WAVE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.GYARADOS,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.ZERAORA,e.MELTAN,e.MELMETAL,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.THUNDER]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.VOLTORB,e.ELECTRODE,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.STARYU,e.STARMIE,e.MR_MIME,e.ELECTABUZZ,e.TAUROS,e.GYARADOS,e.LAPRAS,e.JOLTEON,e.PORYGON,e.SNORLAX,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.PORYGON2,e.STANTLER,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.TYRANITAR,e.LUGIA,e.HO_OH,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.PORYGON_Z,e.PROBOPASS,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.WATCHOG,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.AROMATISSE,e.SLURPUFF,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.AURORUS,e.DEDENNE,e.SLIGGOO,e.GOODRA,e.XERNEAS,e.CHARJABUG,e.VIKAVOLT,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EARTHQUAKE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.HAXORUS,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.GOGOAT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AURORUS,e.GOODRA,e.TREVENANT,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.SKELEDIRGE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.REGIROCK,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.DURANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.WYRDEER,e.URSALUNA,e.SNEASLER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TOXIC]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.PSYCHIC]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.POLITOED,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GARBODOR,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_MOTH,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.AGILITY]:[e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.PARAS,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.DODUO,e.DODRIO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.HITMONCHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARMIE,e.SCYTHER,e.JOLTEON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.FERALIGATR,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.AIPOM,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.STANTLER,e.HITMONTOP,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SHEDINJA,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.GOREBYSS,e.LUVDISC,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CHATOT,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.BASCULIN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.DURANT,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VIKAVOLT,e.ORICORIO,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.WOOLOO,e.DUBWOOL,e.BOLTUND,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.HATTERENE,e.FALINKS,e.EISCUE,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,[e.DEOXYS,"speed"],e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.NIGHT_SHADE]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.VENONAT,e.VENOMOTH,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.NATU,e.XATU,e.MURKROW,e.MISDREAVUS,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.BRONZONG,e.CHATOT,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.LUNALA,e.BLACEPHALON,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCREECH]:[e.RATTATA,e.EKANS,e.ARBOK,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.ONIX,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MAREEP,e.POLITOED,e.AIPOM,e.YANMA,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.ELEKID,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SHIFTRY,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.HUNTAIL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.BLITZLE,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.PAWNIARD,e.BISHARP,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.NOIBAT,e.NOIVERN,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ETERNATUS,e.REGIELEKI,e.SNEASLER,e.NYMBLE,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.DUDUNSPARCE,e.SANDY_SHOCKS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL],[t.DOUBLE_TEAM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CONFUSE_RAY]:[e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.STARYU,e.STARMIE,e.MR_MIME,e.MAGMAR,e.LAPRAS,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.CORSOLA,e.MANTINE,e.STANTLER,e.MAGBY,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LILEEP,e.CRADILY,e.FEEBAS,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.DELPHOX,e.VIVILLON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.MIMIKYU,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.MR_RIME,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.LIGHT_SCREEN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SCIZOR,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.WHIMSICOTT,e.LILLIGANT,e.SIGILYPH,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.BLACEPHALON,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.ALCREMIE,e.FROSMOTH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_MOTH,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.ARCHALUDON,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.INDEEDEE,"female"]],[t.HAZE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.KOFFING,e.WEEZING,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.QWILFISH,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SURSKIT,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.SEVIPER,e.FEEBAS,e.MILOTIC,e.DUSKULL,e.DUSCLOPS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MANTYKE,e.GLACEON,e.MAMOSWINE,e.DUSKNOIR,e.FROSLASS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CRYOGONAL,e.ZEKROM,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.TREVENANT,e.ZYGARDE,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.MAREANIE,e.TOXAPEX,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.RUNERIGUS,e.SPECTRIER,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CLODSIRE,e.CHIEN_PAO,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER],[t.REFLECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BASTIODON,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.WEAVILE,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.LEAVANNY,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ARAQUANID,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.TOGEDEMARU,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.REGIDRAGO,e.CALYREX,e.WYRDEER,e.ARBOLIVA,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHI_YU,e.IRON_VALIANT,e.MIRAIDON,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_CORSOLA,[e.INDEEDEE,"female"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FOCUS_ENERGY]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.SENTRET,e.FURRET,e.ARIADOS,e.ESPEON,e.UMBREON,e.SCIZOR,e.TEDDIURSA,e.REMORAID,e.OCTILLERY,e.KINGDRA,e.PHANPY,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.LUCARIO,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.SYLVEON,e.VOLCANION,e.PASSIMIAN,e.BUZZWOLE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.BOLTUND,e.FLAPPLE,e.ARROKUDA,e.BARRASKEWDA,e.GRIMMSNARL,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.IRON_HANDS,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.PIKACHU,e.ALOLA_MAROWAK,[e.LYCANROC,"dusk"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT],[t.METRONOME]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSCLOPS,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.FLOATZEL,e.AMBIPOM,e.HAPPINY,e.MUNCHLAX,e.LUCARIO,e.WEAVILE,e.TOGEKISS,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GOTHORITA,e.GOTHITELLE,e.TORNADUS,e.MELOETTA,e.DELPHOX,e.FLOETTE,e.FLORGES,e.AROMATISSE,e.SLURPUFF,e.DIANCIE,e.INTELEON,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.URSALUNA,e.PAWMOT,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.MUNKIDORI,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_LILLIGANT],[t.SELF_DESTRUCT]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEWTWO,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.BONSLY,e.MUNCHLAX,e.MAGNEZONE,e.LICKILICKY,e.AZELF,e.HEATRAN,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.LANDORUS,e.GENESECT,e.VOLCANION,e.SILVALLY,e.MINIOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.MELMETAL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.POLTEAGEIST,e.CURSOLA,e.PINCURCHIN,e.STONJOURNER,e.REGIELEKI,e.REGIDRAGO,e.VAROOM,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH],[t.FIRE_BLAST]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.TYRANITAR,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"blaze"]],[t.WATERFALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.PALDEA_WOOPER],[t.SWIFT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.WEEPINBELL,e.VICTREEBEL,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.SCYTHER,e.ELECTABUZZ,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINJASK,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.SALAMENCE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.HELIOPTILE,e.HELIOLISK,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.WIMPOD,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TOGEDEMARU,e.DRAMPA,e.TAPU_KOKO,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PINCURCHIN,e.FROSMOTH,e.INDEEDEE,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_MOTH,e.IRON_VALIANT,e.WALKING_WAKE,e.IRON_LEAVES,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AMNESIA]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.LICKITUNG,e.TANGELA,e.SNORLAX,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.GIRAFARIG,e.DUNSPARCE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.LILEEP,e.CRADILY,e.CASTFORM,e.WYNAUT,e.GOREBYSS,e.RELICANTH,e.REGICE,e.REGISTEEL,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MANTYKE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.UXIE,e.PANSEAR,e.SIMISEAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.BOUFFALANT,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.SWIRLIX,e.SLURPUFF,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.APPLETUN,e.CRAMORANT,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.EISCUE,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,[e.DEOXYS,"defense"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.PALDEA_WOOPER],[t.DREAM_EATER]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.LAPRAS,e.PORYGON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.LUNALA,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_ARTICUNO],[t.LEECH_LIFE]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.KABUTO,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.DUSKULL,e.DUSCLOPS,e.KRICKETUNE,e.DRAPION,e.YANMEGA,e.DUSKNOIR,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.NOIBAT,e.NOIVERN,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.MIMIKYU,e.BUZZWOLE,e.NAGANADEL,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.FROSMOTH,e.DRACOVISH,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.FLASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SHUCKLE,e.SKARMORY,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.MAGNEZONE,e.TANGROWTH,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.GOLETT,e.GOLURK,e.VIRIZION,e.ZEKROM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.WYRDEER,e.CLODSIRE,e.FARIGIRAF,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_LILLIGANT,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.EXPLOSION]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.QWILFISH,e.MAGCARGO,e.CORSOLA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NOSEPASS,e.GULPIN,e.SWALOT,e.CAMERUPT,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.BONSLY,e.MAGNEZONE,e.LICKILICKY,e.PROBOPASS,e.AZELF,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.CRYOGONAL,e.LANDORUS,e.GENESECT,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.VOLCANION,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.CELESTEELA,e.MAGEARNA,e.BLACEPHALON,e.ROLYCOLY,e.REGIELEKI,e.REGIDRAGO,e.GARGANACL,e.GLIMMET,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_WEEZING,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ROCK_SLIDE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRI_ATTACK]:[e.SPEAROW,e.FEAROW,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNETON,e.DODUO,e.DODRIO,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.PORYGON2,e.BLISSEY,e.LATIAS,e.LATIOS,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.BEHEEYEM,e.HYDREIGON,e.GENESECT,e.TYPE_NULL,e.SILVALLY,e.MAGEARNA,e.ALCREMIE,e.INDEEDEE,e.DRAGAPULT,e.CALYREX,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.ALOLA_DUGTRIO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SUPER_FANG]:[e.RATTATA,e.RATICATE,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEW,e.SENTRET,e.FURRET,e.CROBAT,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.MAWILE,e.PLUSLE,e.MINUN,e.CARVANHA,e.SHARPEDO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.BIDOOF,e.BIBAREL,e.PACHIRISU,e.GLAMEOW,e.PURUGLY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.PATRAT,e.WATCHOG,e.WOOBAT,e.SWOOBAT,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YUNGOOS,e.GUMSHOOS,e.KOMALA,e.TOGEDEMARU,e.BRUXISH,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SHROODLE,e.GRAFAIAI,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SUBSTITUTE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.THIEF]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.QUAGSIRE,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.SHEDINJA,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.DARKRAI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.JOLTIK,e.GALVANTULA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.PANGORO,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.DEDENNE,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.CUTIEFLY,e.RIBOMBEE,e.SALANDIT,e.SALAZZLE,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TOGEDEMARU,e.MIMIKYU,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZARUDE,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_BUNDLE,e.GIMMIGHOUL,e.GHOLDENGO,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SNORE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CATERPIE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WURMPLE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.URSALUNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.CURSE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.NOSEPASS,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.WHISCASH,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.SPIRITOMB,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.GIRATINA,e.DARKRAI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SAWSBUCK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.BEARTIC,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SYLVEON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.DECIDUEYE,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.MIMIKYU,e.SKWOVET,e.GREEDENT,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.PINCURCHIN,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.GLASTRIER,e.SPECTRIER,[e.CALYREX,"ice","shadow"],e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_THORNS,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.REVERSAL]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.YANMA,e.PINECO,e.FORRETRESS,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.HITMONTOP,e.MILTANK,e.ENTEI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.SEVIPER,e.MONFERNO,e.INFERNAPE,e.VESPIQUEN,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.YANMEGA,e.MAMOSWINE,e.GALLADE,e.VICTINI,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.DARMANITAN,e.SCRAFTY,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.HAWLUCHA,e.ZYGARDE,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,[e.LYCANROC,"midnight","dusk"],e.BEWEAR,e.PASSIMIAN,e.SILVALLY,e.KOMALA,e.TOGEDEMARU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.DUBWOOL,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.MORPEKO,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.REGIDRAGO,e.KLEAVOR,e.SNEASLER,e.OVERQWIL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.KLAWF,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,[e.LYCANROC,"midnight","dusk"],e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.SPITE]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SNORUNT,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.DECIDUEYE,e.MAREANIE,e.TOXAPEX,e.ORANGURU,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.SINISTEA,e.POLTEAGEIST,e.PERRSERKER,e.CURSOLA,e.MORPEKO,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.LOKIX,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.FLUTTER_MANE,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PROTECT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SCARY_FACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.RATICATE,e.SPEAROW,e.EKANS,e.ARBOK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.HYPNO,e.ELECTRODE,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.SCYTHER,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.NOCTOWL,e.SPINARAK,e.ARIADOS,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SNEASEL,e.URSARING,e.SWINUB,e.PILOSWINE,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.STANTLER,e.MAGBY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.AGGRON,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.WHISCASH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.GLALIE,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.VESPIQUEN,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.MAGMORTAR,e.YANMEGA,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.SAMUROTT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.KARRABLAST,e.ESCAVALIER,e.AMOONGUSS,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.MALAMAR,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ZERAORA,e.THWACKEY,e.RILLABOOM,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.FLAPPLE,e.SILICOBRA,e.SANDACONDA,e.BARRASKEWDA,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.ENAMORUS,e.SKELEDIRGE,e.SPIDOPS,e.LOKIX,e.DACHSBUN,e.SQUAWKABILLY,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.GREAVARD,e.HOUNDSTONE,e.DONDOZO,e.ANNIHILAPE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SLUDGE_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.MAWILE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TORKOAL,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.METANG,e.METAGROSS,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.TANGROWTH,e.GLISCOR,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DRUDDIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.MUD_SLAP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.LILLIPUP,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MINCCINO,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.STUNFISK,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.LANDORUS,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.SALANDIT,e.SALAZZLE,e.SANDYGAST,e.PALOSSAND,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.SILICOBRA,e.SANDACONDA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.MUNKIDORI,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[t.SPIKES]:[e.SANDSHREW,e.SANDSLASH,e.SHELLDER,e.CLOYSTER,e.OMANYTE,e.OMASTAR,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.DELIBIRD,e.SKARMORY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.WHISCASH,e.SNORUNT,e.GLALIE,e.GROUDON,e.BUDEW,e.ROSERADE,e.VESPIQUEN,e.GASTRODON,e.BONSLY,e.GARCHOMP,e.GLISCOR,e.FROSLASS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.TRUBBISH,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.SHELMET,e.ACCELGOR,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.CARBINK,e.KLEFKI,e.DIANCIE,e.WIMPOD,e.GOLISOPOD,e.MAGEARNA,e.NAGANADEL,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.PINCURCHIN,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.OGERPON,[e.DEOXYS,"defense"],e.ALOLA_SANDSLASH,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[t.ICY_WIND]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PORYGON2,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGICE,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","speed"],e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.TORNADUS,e.KYUREM,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.ORICORIO,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.TAPU_FINI,e.LUNALA,e.PHEROMOSA,e.INTELEON,e.CRAMORANT,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.BASCULEGION,e.OVERQWIL,e.QUAQUAVAL,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CETODDLE,e.CETITAN,e.VELUZA,e.TATSUGIRI,e.FLUTTER_MANE,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_AVALUGG],[t.OUTRAGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.NIDOQUEEN,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MAROWAK,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.GRANBULL,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.SWAMPERT,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.ABOMASNOW,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.BOUFFALANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.GLASTRIER,e.BASCULEGION,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.MABOSSTIFF,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight","dusk"],[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.SANDSTORM]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.GRIMER,e.MUK,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.NINCADA,e.NINJASK,e.SHEDINJA,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.ABSOL,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ACCELGOR,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.TORNADUS,e.LANDORUS,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NIHILEGO,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.ZAMAZENTA,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.OGERPON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER],[t.GIGA_DRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTO,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.YANMA,e.PINECO,e.FORRETRESS,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.YANMEGA,e.LEAFEON,e.UXIE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.DEERLING,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.TAPU_BULU,e.CELESTEELA,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.ALCREMIE,e.FROSMOTH,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.ENDURE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHARM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.CHANSEY,e.MR_MIME,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.CHIMECHO,e.WYNAUT,e.LUVDISC,e.LATIAS,e.JIRACHI,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.GALLADE,e.FROSLASS,e.MESPRIT,e.PHIONE,e.MANAPHY,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FURFROU,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.TAPU_LELE,e.POIPOLE,e.NAGANADEL,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.TOXEL,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.FINIZEN,e.PALAFIN,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.FLUTTER_MANE,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.FALSE_SWIPE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.FARFETCHD,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.SCYTHER,e.PINSIR,e.JOLTEON,e.MEW,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.MAWILE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.EMPOLEON,e.KRICKETUNE,e.GIBLE,e.GABITE,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.GALLADE,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.AXEW,e.FRAXURE,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CHEWTLE,e.DREDNAW,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.URSHIFU,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.KINGAMBIT,e.BAXCALIBUR,e.CHIEN_PAO,e.IRON_VALIANT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_SANDSLASH,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.SWAGGER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.WOOLOO,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.CUFANT,e.ZARUDE,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CHI_YU,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWKING,e.PALDEA_TAUROS],[t.STEEL_WING]:[e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.LEAVANNY,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.ELGYEM,e.BEHEEYEM,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.DRAKLOAK,e.DRAGAPULT,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],[t.ATTRACT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.HEATRAN,e.CRESSELIA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SLEEP_TALK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.HEAL_BELL]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.LICKITUNG,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.DRAGONITE,e.MEW,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.GRANBULL,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.HAPPINY,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.UXIE,e.PHIONE,e.MANAPHY,e.MUNNA,e.MUSHARNA,e.AUDINO,e.PETILIL,e.LILLIGANT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DIANCIE,e.COMFEY,e.MAGEARNA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_LILLIGANT,e.ETERNAL_FLOETTE],[t.RETURN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FRUSTRATION]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SAFEGUARD]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VILEPLUME,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.LAPRAS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.LEDYBA,e.LEDIAN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.WOBBUFFET,e.SCIZOR,e.SHUCKLE,e.CORSOLA,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.TROPIUS,e.CHIMECHO,e.WYNAUT,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.WORMADAM,e.MOTHIM,e.CHERUBI,e.CHERRIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PYUKUMUKU,e.MINIOR,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.APPLETUN,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.ZAMAZENTA,e.CALYREX,e.ARBOLIVA,e.RABSCA,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.INDEEDEE,"female"]],[t.PAIN_SPLIT]:[e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.TANGELA,e.STARYU,e.STARMIE,e.PORYGON,e.MEW,e.IGGLYBUFF,e.NATU,e.XATU,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.QWILFISH,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DEOXYS,e.RAMPARDOS,e.SHELLOS,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.TANGROWTH,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.GIRATINA,e.MUNNA,e.MUSHARNA,e.AUDINO,e.THROH,e.SAWK,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.MAREANIE,e.TOXAPEX,e.STUFFUL,e.BEWEAR,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NIHILEGO,e.MAGEARNA,e.BLACEPHALON,e.CLOBBOPUS,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.ALCREMIE,e.PINCURCHIN,e.SPECTRIER,e.BASCULEGION,e.OVERQWIL,e.SPIDOPS,e.MABOSSTIFF,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.WUGTRIO,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DUDUNSPARCE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.MEGAHORN]:[e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.SPINARAK,e.ARIADOS,e.HERACROSS,e.STANTLER,e.ABSOL,e.RHYPERIOR,e.SAMUROTT,e.SCOLIPEDE,e.SAWSBUCK,e.KARRABLAST,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.CELESTEELA,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.WYRDEER,e.CLODSIRE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.IRON_BOULDER,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_SAMUROTT],[t.BATON_PASS]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.POLIWRATH,e.RAPIDASH,e.FARFETCHD,e.HYPNO,e.MR_MIME,e.SCYTHER,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ZAPDOS,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.SKITTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPINDA,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.CHIMECHO,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.KRICKETUNE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.MIME_JR,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SCOLIPEDE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.SHELMET,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DURANT,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.PASSIMIAN,e.PYUKUMUKU,e.MAGEARNA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.DUBWOOL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.FIDOUGH,e.DACHSBUN,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.TATSUGIRI,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.MUNKIDORI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,[e.INDEEDEE,"female"],e.HISUI_DECIDUEYE],[t.ENCORE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SEEL,e.DEWGONG,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.MR_MIME,e.JYNX,e.SNORLAX,e.DRAGONITE,e.MEW,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.WOBBUFFET,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SABLEYE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.WYNAUT,e.SPHEAL,e.SEALEO,e.WALREIN,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.CHATOT,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.VICTINI,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOUCANNON,e.SALAZZLE,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MAGEARNA,e.BLACEPHALON,e.TOXEL,e.TOXTRICITY,e.MR_RIME,e.ALCREMIE,[e.INDEEDEE,"male"],e.ZARUDE,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SHROODLE,e.GRAFAIAI,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_VALIANT,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT],[t.IRON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.FARFETCHD,e.SEEL,e.DEWGONG,e.ONIX,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BRELOOM,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.KECLEON,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.DEDENNE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.TURTONATOR,e.TOGEDEMARU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SKWOVET,e.GREEDENT,e.DREDNAW,e.OBSTAGOON,e.PERRSERKER,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.WYRDEER,e.SNEASLER,e.CYCLIZAR,e.ORTHWORM,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.METAL_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.MEOWTH,e.PERSIAN,e.KRABBY,e.KINGLER,e.MEW,e.TOTODILE,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.METANG,e.METAGROSS,e.REGISTEEL,e.GROUDON,e.PRINPLUP,e.EMPOLEON,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.WEAVILE,e.GLISCOR,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BRAVIARY,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.WIMPOD,e.KOMALA,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.NECROZMA,e.CORVIKNIGHT,e.PERRSERKER,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.URSALUNA,e.SNEASLER,e.PAWMI,e.PAWMO,e.PAWMOT,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.KINGAMBIT,e.IRON_THORNS,e.ROARING_MOON,e.OKIDOGI,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.SYNTHESIS]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.TAPU_BULU,e.KARTANA,e.GOSSIFLEUR,e.ELDEGOSS,e.ZARUDE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRUTE_BONNET,e.OGERPON,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.HIDDEN_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.RAIN_DANCE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.BASCULIN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.YVELTAL,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.LURANTIS,e.SHIINOTIC,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_FINI,e.XURKITREE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.EISCUE,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZAMAZENTA,e.ETERNATUS,e.REGIELEKI,e.WYRDEER,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.SCREAM_TAIL,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.WALKING_WAKE,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.SUNNY_DAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,[e.LYCANROC,"midday","midnight"],e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.MAGEARNA,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.CORVISQUIRE,e.CORVIKNIGHT,e.GOSSIFLEUR,e.ELDEGOSS,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.STONJOURNER,e.DRACOZOLT,e.DRAKLOAK,e.DRAGAPULT,e.ZAMAZENTA,e.ETERNATUS,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_DECIDUEYE,[e.PALDEA_TAUROS,"combat","blaze"],e.BLOODMOON_URSALUNA],[t.CRUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.RATTATA,e.RATICATE,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GYARADOS,e.OMASTAR,e.AERODACTYL,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CROBAT,e.UMBREON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.BUIZEL,e.FLOATZEL,e.STUNKY,e.SKUNTANK,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.RHYPERIOR,e.YANMEGA,e.GLISCOR,e.FROSLASS,e.HEATRAN,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.CHESNAUGHT,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.GUZZLORD,e.SKWOVET,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRIMMSNARL,e.PERRSERKER,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.BASCULEGION,e.OVERQWIL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.DONDOZO,e.FARIGIRAF,e.SCREAM_TAIL,e.BRUTE_BONNET,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_QWILFISH,e.HISUI_ZOROARK,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.PSYCH_UP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.TANGELA,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.SNEASEL,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.FINNEON,e.LUMINEON,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.GOLISOPOD,e.PYUKUMUKU,e.MINIOR,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.MARSHADOW,e.INDEEDEE,e.RABSCA,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING],[t.SHADOW_BALL]:[e.BUTTERFREE,e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.LICKITUNG,e.KOFFING,e.WEEZING,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.AIPOM,e.YANMA,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.GOREBYSS,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.VULLABY,e.MANDIBUZZ,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.MEOWSTIC,e.AEGISLASH,e.SKRELP,e.DRAGALGE,e.CLAWITZER,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.PRIMARINA,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.DOTTLER,e.ORBEETLE,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.SKELEDIRGE,e.ARMAROUGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.FUTURE_SIGHT]:[e.PSYDUCK,e.GOLDUCK,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.MR_MIME,e.JYNX,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MARILL,e.AZUMARILL,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SPOINK,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CASTFORM,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.DELPHOX,e.INKAY,e.MALAMAR,e.ORANGURU,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,[e.MEOWSTIC,"female"],e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING],[t.ROCK_SMASH]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.CROCONAW,e.FERALIGATR,e.FURRET,e.LEDIAN,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GULPIN,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.STUNKY,e.SKUNTANK,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZOROARK,e.REUNICLUS,e.SAWSBUCK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.GOLISOPOD,e.TAPU_BULU,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.SIRFETCHD,e.FALINKS,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KUBFU,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.ENAMORUS,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.KORAIDON,e.ARCHALUDON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.WHIRLPOOL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.RHYDON,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.MILTANK,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.MUNCHLAX,e.FINNEON,e.LUMINEON,e.MANTYKE,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.GRAPPLOCT,e.OBSTAGOON,e.CURSOLA,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.PALAFIN,e.TATSUGIRI,e.IRON_BUNDLE,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.URSHIFU,"rapid-strike"],e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"]],[t.BEAT_UP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.KANGASKHAN,e.MEW,e.AIPOM,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VESPIQUEN,e.AMBIPOM,e.WEAVILE,e.COTTONEE,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.VANILLUXE,e.PAWNIARD,e.BISHARP,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.MIMIKYU,e.NICKIT,e.THIEVUL,e.FALINKS,e.DRAKLOAK,e.DRAGAPULT,e.URSHIFU,e.TANDEMAUS,e.MAUSHOLD,e.BRAMBLIN,e.BRAMBLEGHAST,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.FEZANDIPITI,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN],[t.UPROAR]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.DODUO,e.DODRIO,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.TAUROS,e.GYARADOS,e.SNORLAX,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.VIGOROTH,e.SLAKING,e.NINJASK,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.ARON,e.LAIRON,e.AGGRON,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.ROSELIA,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SPINDA,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.WHISCASH,e.CHIMECHO,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.MUNCHLAX,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.PORYGON_Z,e.ROTOM,e.AZELF,e.HEATRAN,e.PHIONE,e.MANAPHY,e.VICTINI,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.STUNFISK,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.WISHIWASHI,e.PASSIMIAN,e.TURTONATOR,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.YAMPER,e.BOLTUND,e.CRAMORANT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.FALINKS,e.MORPEKO,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.BASCULEGION,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.KORAIDON,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.BLOODMOON_URSALUNA],[t.HEAT_WAVE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.WEEZING,e.MAGMAR,e.FLAREON,e.AERODACTYL,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.SOLROCK,e.SALAMENCE,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.MAGMORTAR,e.TOGEKISS,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DARUMAKA,e.DARMANITAN,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.SQUAWKABILLY,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.BOMBIRDIER,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.FEZANDIPITI,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY],[t.HAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.ARTICUNO,e.ZAPDOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LUNATONE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.REGICE,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HAPPINY,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.KELDEO,e.SKRELP,e.DRAGALGE,e.AMAURA,e.AURORUS,e.CARBINK,e.GOODRA,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.CURSOLA,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.CALYREX,"ice"]],[t.TORMENT]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LOUDRED,e.EXPLOUD,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHIELDON,e.BASTIODON,e.FLOATZEL,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.SALANDIT,e.SALAZZLE,e.BRUXISH,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.PHEROMOSA,e.BLACEPHALON,e.NICKIT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MORPEKO,e.GLASTRIER,e.ENAMORUS,e.SQUAWKABILLY,e.BOMBIRDIER,e.VAROOM,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.CALYREX,"ice"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.WILL_O_WISP]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.ALTARIA,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GROUDON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.LUNALA,e.MARSHADOW,e.BLACEPHALON,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.HOUNDSTONE,e.SLITHER_WING,e.CHI_YU,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_WEEZING,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK,[e.PALDEA_TAUROS,"blaze"]],[t.FACADE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FOCUS_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIBAREL,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.ZEKROM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.GOODRA,e.HOOPA,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.GRIMMSNARL,e.MR_RIME,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.PAWMO,e.PAWMOT,e.GARGANACL,e.PALAFIN,e.ANNIHILAPE,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MR_MIME,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.NATURE_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.KABUTOPS,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.BELLOSSOM,e.SUDOWOODO,e.SUNKERN,e.SUNFLORA,e.STEELIX,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CACNEA,e.CACTURNE,e.CRAWDAUNT,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.BONSLY,e.CARNIVINE,e.FINNEON,e.TANGROWTH,e.LEAFEON,e.HEATRAN,e.REGIGIGAS,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.AMAURA,e.AURORUS,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.XURKITREE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CURSOLA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_CORSOLA,e.HISUI_TYPHLOSION,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CHARGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.TAUNT]:[e.RATTATA,e.RATICATE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DODRIO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.GYARADOS,e.AERODACTYL,e.MEWTWO,e.MEW,e.CROBAT,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.GLALIE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHIELDON,e.BASTIODON,e.VESPIQUEN,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.ESCAVALIER,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.PYUKUMUKU,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.BOMBIRDIER,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.FLAMIGO,e.TATSUGIRI,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.RAGING_BOLT,e.IRON_BOULDER,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice","shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.HELPING_HAND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.ALOMOMOLA,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.RUFFLET,e.BRAVIARY,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.DIANCIE,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PYUKUMUKU,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.LUNALA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.YAMPER,e.BOLTUND,e.APPLETUN,e.TOXTRICITY,e.HATENNA,e.HATTREM,e.HATTERENE,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FALINKS,e.FROSMOTH,e.INDEEDEE,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_BUNDLE,e.IRON_MOTH,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.TRICK]:[e.CLEFAIRY,e.CLEFABLE,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLURK,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.TAPU_FINI,e.LUNALA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.FARIGIRAF,e.SCREAM_TAIL,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SUPERPOWER]:[e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.KRABBY,e.KINGLER,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.PINSIR,e.FLAREON,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACTURNE,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BIDOOF,e.BIBAREL,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.HONCHKROW,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAMOSWINE,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.STOUTLAND,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCOLIPEDE,e.BASCULIN,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.CARRACOSTA,e.REUNICLUS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.KOMALA,e.DRAMPA,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.MARSHADOW,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.APPLETUN,e.CRAMORANT,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.SIRFETCHD,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.ENAMORUS,e.CETODDLE,e.SLITHER_WING,e.OKIDOGI,e.OGERPON,[e.DEOXYS,"attack"],e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_BRAVIARY],[t.RECYCLE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.SLOWKING,e.GIRAFARIG,e.DELIBIRD,e.PORYGON2,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.MAGNEZONE,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.ARCEUS,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TRUBBISH,e.GARBODOR,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.HEATMOR,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.BUNNELBY,e.DIGGERSBY,e.ESPURR,e.MEOWSTIC,e.DEDENNE,e.KLEFKI,e.HOOPA,e.MORELULL,e.SHIINOTIC,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.FARIGIRAF,e.DIPPLIN,e.HYDRAPPLE,e.ALOLA_RAICHU,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MR_MIME,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.REVENGE]:[e.RATTATA,e.RATICATE,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.PINSIR,e.TAUROS,e.MEW,e.AIPOM,e.PINECO,e.FORRETRESS,e.QWILFISH,e.HERACROSS,e.HITMONTOP,e.TYRANITAR,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.MAKUHITA,e.HARIYAMA,e.CACTURNE,e.ZANGOOSE,e.CRAWDAUNT,e.DUSKULL,e.DUSCLOPS,e.STARLY,e.STARAVIA,e.STARAPTOR,e.AMBIPOM,e.VESPIQUEN,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.DUSKNOIR,e.REGIGIGAS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.KELDEO,e.PANGORO,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.TURTONATOR,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.SIRFETCHD,e.RUNERIGUS,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.BASCULEGION,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,[e.LYCANROC,"midnight"],e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.HISUI_SAMUROTT,e.GALAR_STUNFISK],[t.BRICK_BREAK]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.KABUTOPS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.TYROGUE,e.HITMONTOP,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BONSLY,e.MIME_JR,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.DEWOTT,e.SAMUROTT,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.PHEROMOSA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.FALINKS,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.GARGANACL,e.CERULEDGE,e.KLAWF,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.KINGAMBIT,e.GREAT_TUSK,e.SLITHER_WING,e.IRON_HANDS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.KNOCK_OFF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BEEDRILL,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.DODUO,e.DODRIO,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.TANGELA,e.GOLDEEN,e.SEAKING,e.SCYTHER,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEWTWO,e.MEW,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.MARILL,e.AZUMARILL,e.AIPOM,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.PHANPY,e.DONPHAN,e.ELEKID,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.MAWILE,e.SWALOT,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.ABSOL,e.METAGROSS,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.KRICKETUNE,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.LICKILICKY,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.REUNICLUS,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.ALOMOMOLA,e.FERROSEED,e.FERROTHORN,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESNAUGHT,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.GOODRA,e.TREVENANT,e.YVELTAL,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.DHELMISE,e.TAPU_FINI,e.SOLGALEO,e.NIHILEGO,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GREEDENT,e.NICKIT,e.SIZZLIPEDE,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.MORPEKO,e.COPPERAJAH,e.ZARUDE,e.MEOWSCARADA,e.QUAQUAVAL,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.PAWMO,e.PAWMOT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_JUGULIS,e.WO_CHIEN,e.ROARING_MOON,e.IRON_VALIANT,e.WALKING_WAKE,e.OKIDOGI,e.OGERPON,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.HISUI_DECIDUEYE],[t.ENDEAVOR]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.DODUO,e.DODRIO,e.DEWGONG,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.TAUROS,e.GYARADOS,e.FLAREON,e.MEW,e.MEGANIUM,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.SUDOWOODO,e.POLITOED,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.ARON,e.LAIRON,e.AGGRON,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.LUVDISC,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.WORMADAM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.SKUNTANK,e.HAPPINY,e.RHYPERIOR,e.TANGROWTH,e.TOGEKISS,e.MAMOSWINE,e.AZELF,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.BOUFFALANT,e.DURANT,e.KYUREM,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.XERNEAS,e.DIANCIE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.ORANGURU,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DRAMPA,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.SANDACONDA,e.CRAMORANT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.ALCREMIE,e.FALINKS,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.BASCULEGION,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.VELUZA,e.ANNIHILAPE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.SKILL_SWAP]:[e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.MOTHIM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TAPU_LELE,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FARIGIRAF,e.IRON_VALIANT,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.IMPRISON]:[e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.STANTLER,e.LUGIA,e.HO_OH,e.CELEBI,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.TOGEKISS,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,[e.MEOWSTIC,"male"],e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.NECROZMA,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.STONJOURNER,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.SKELEDIRGE,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SECRET_POWER]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.PECHARUNT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.DIVE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTOPS,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.BEARTIC,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.ARAQUANID,e.GOLISOPOD,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.FINIZEN,e.PALAFIN,e.DONDOZO,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"]],[t.FEATHER_DANCE]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.LUGIA,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.CHATOT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.BLAZE_KICK]:[e.CHARIZARD,e.HITMONLEE,e.MEW,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.VICTINI,e.MIENSHAO,e.GENESECT,e.INCINEROAR,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GALAR_ZAPDOS],[t.HYPER_VOICE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.ARCANINE,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.BLISSEY,e.LUGIA,e.HO_OH,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.MANECTRIC,e.WAILMER,e.WAILORD,e.GRUMPIG,e.SPINDA,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.BAGON,e.SHELGON,e.SALAMENCE,e.RAYQUAZA,e.TORTERRA,e.KRICKETUNE,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.HIPPOWDON,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MARACTUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.DELPHOX,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ROCKRUFF,e.LYCANROC,e.SALAZZLE,e.ORANGURU,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NECROZMA,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.INDEEDEE,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.ARBOLIVA,e.SQUAWKABILLY,e.TADBULB,e.BELLIBOLT,e.MABOSSTIFF,e.ESPATHRA,e.BOMBIRDIER,e.PALAFIN,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_JUGULIS,e.ROARING_MOON,e.IRON_VALIANT,e.RAGING_BOLT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.BLAST_BURN]:[e.CHARIZARD,e.MEW,e.TYPHLOSION,e.BLAZIKEN,e.INFERNAPE,e.EMBOAR,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.HYDRO_CANNON]:[e.BLASTOISE,e.MEW,e.FERALIGATR,e.SWAMPERT,e.EMPOLEON,e.SAMUROTT,e.GRENINJA,e.PRIMARINA,e.INTELEON,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.WEATHER_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.VULPIX,e.NINETALES,e.VILEPLUME,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.HORSEA,e.SEADRA,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.UMBREON,e.SLOWKING,e.DELIBIRD,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.MASQUERAIN,e.ROSELIA,e.WAILMER,e.WAILORD,e.TORKOAL,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.GASTRODON,e.DRIFLOON,e.DRIFBLIM,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.SNOVER,e.ABOMASNOW,e.ELECTIVIRE,e.MAGMORTAR,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PHIONE,e.MANAPHY,e.GIGALITH,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.LILLIGANT,e.MARACTUS,e.SWANNA,e.VANILLUXE,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.AMAURA,e.AURORUS,e.SYLVEON,e.GOODRA,e.VOLCANION,e.PRIMARINA,e.FOMANTIS,e.LURANTIS,e.SHIINOTIC,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ELDEGOSS,e.CRAMORANT,e.FROSMOTH,e.EISCUE,e.ENAMORUS,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RELLOR,e.RABSCA,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_LILLIGANT,e.HISUI_GOODRA],[t.FAKE_TEARS]:[e.PIKACHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.TOTODILE,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MISDREAVUS,e.SNUBBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SMOOCHUM,e.SHROOMISH,e.BRELOOM,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.MAWILE,e.PLUSLE,e.MINUN,e.ILLUMISE,e.SPINDA,e.CHIMECHO,e.SNORUNT,e.GLALIE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.GLAMEOW,e.BONSLY,e.WEAVILE,e.LEAFEON,e.GLACEON,e.FROSLASS,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.DEERLING,e.SAWSBUCK,e.VULLABY,e.MANDIBUZZ,e.MELOETTA,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.SYLVEON,e.DIANCIE,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.MORPEKO,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.SCREAM_TAIL,e.FLUTTER_MANE,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_YAMASK,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AIR_CUTTER]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.IRON_BUNDLE,e.IRON_JUGULIS,e.FEZANDIPITI,e.SHAYMIN,e.GALAR_ARTICUNO,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.OVERHEAT]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LOUDRED,e.EXPLOUD,e.MANECTRIC,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.DIALGA,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.ANNIHILAPE,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.MIRAIDON,e.GOUGING_FIRE,[e.ROTOM,"heat"],e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.ROCK_TOMB]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.ONIX,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.DUSCLOPS,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.HOOPA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPIDOPS,e.PAWMOT,e.GARGANACL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.OKIDOGI,e.OGERPON,e.ARCHALUDON,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.METAL_SOUND]:[e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.KABUTO,e.KABUTOPS,e.ZAPDOS,e.MEW,e.FORRETRESS,e.SKARMORY,e.ELEKID,e.ARON,e.LAIRON,e.AGGRON,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.SHIELDON,e.BASTIODON,[e.WORMADAM,"trash"],e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.DRILBUR,e.EXCADRILL,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.TYPE_NULL,e.SILVALLY,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.MAGEARNA,e.CORVIKNIGHT,e.TOXEL,e.TOXTRICITY,e.PERRSERKER,e.DURALUDON,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.IRON_LEAVES,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK],[t.COSMIC_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.STARYU,e.STARMIE,e.MEW,e.NATU,e.XATU,e.SKITTY,e.DELCATTY,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.CHIMECHO,e.METANG,e.METAGROSS,e.RAYQUAZA,e.JIRACHI,[e.DEOXYS,"","attack"],e.BUNEARY,e.LOPUNNY,e.CHINGLING,e.ARCEUS,e.SIGILYPH,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.MINIOR,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.ETERNATUS,e.RELLOR,e.RABSCA],[t.SIGNAL_BEAM]:[e.BLASTOISE,e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SEEL,e.DEWGONG,e.CLOYSTER,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.PORYGON,e.ARTICUNO,e.ZAPDOS,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.YANMA,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.FORRETRESS,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.ELEKID,e.RAIKOU,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.BEAUTIFLY,e.DUSTOX,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.GOREBYSS,e.METANG,e.METAGROSS,e.REGICE,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHINX,e.LUXIO,e.LUXRAY,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.FINNEON,e.LUMINEON,e.MANTYKE,e.MAGNEZONE,e.ELECTIVIRE,e.TOGEKISS,e.YANMEGA,e.GLACEON,e.PORYGON_Z,e.GALLADE,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.VICTINI,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.GOLETT,e.GOLURK,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.DELPHOX,e.VIVILLON,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.HOOPA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DRAMPA,e.LUNALA,e.PHEROMOSA,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.POIPOLE,e.NAGANADEL,e.WYRDEER,e.FARIGIRAF,e.ALOLA_RAICHU],[t.SAND_TOMB]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.ONIX,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.SKARMORY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.LAIRON,e.AGGRON,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.LANDORUS,e.DIGGERSBY,e.CARBINK,e.DIANCIE,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.RUNERIGUS,e.STONJOURNER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.SANDY_SHOCKS,e.IRON_THORNS,e.TING_LU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO],[t.MUDDY_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.AZURILL,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CLAMPERL,e.RELICANTH,e.KYOGRE,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.HIPPOPOTAS,e.HIPPOWDON,e.LICKILICKY,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.JELLICENT,e.STUNFISK,e.KELDEO,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.GOLISOPOD,e.DHELMISE,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DREDNAW,e.CLOBBOPUS,e.GRAPPLOCT,e.PINCURCHIN,e.BASCULEGION,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.TATSUGIRI,e.CLODSIRE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BULLET_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MORPEKO,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,[e.WORMADAM,"plant"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.AERIAL_ACE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.ZUBAT,e.GOLBAT,e.PARAS,e.PARASECT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.SLOWBRO,e.FARFETCHD,e.DODUO,e.DODRIO,e.CUBONE,e.MAROWAK,e.KANGASKHAN,e.MR_MIME,e.SCYTHER,e.PORYGON,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.PORYGON2,e.HITMONTOP,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.FLYGON,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.TROPIUS,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.KRICKETUNE,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.WEAVILE,e.TANGROWTH,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLISCOR,e.PORYGON_Z,e.GALLADE,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.GOGOAT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.LUNALA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.DRACOZOLT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.KINGAMBIT,e.SLITHER_WING,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.ICICLE_SPEAR]:[e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.DELIBIRD,e.SNORUNT,e.GLALIE,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.KYUREM,e.AURORUS,e.BERGMITE,e.AVALUGG,e.INTELEON,e.CURSOLA,e.MR_RIME,e.SNOM,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.CETODDLE,e.CETITAN,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.GALAR_CORSOLA,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.IRON_DEFENSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.METAPOD,e.BUTTERFREE,e.KAKUNA,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.RHYDON,e.MR_MIME,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.SUDOWOODO,e.SLOWKING,e.PINECO,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SILCOON,e.CASCOON,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.TORKOAL,e.SOLROCK,e.CORPHISH,e.CRAWDAUNT,e.CLAYDOL,e.ANORITH,e.ARMALDO,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.JIRACHI,e.TORTERRA,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.RIOLU,e.LUCARIO,e.DRAPION,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.CRYOGONAL,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SPEWPA,e.VIVILLON,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,e.ENAMORUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.KLAWF,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.KINGAMBIT,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.IRON_CROWN,[e.DEOXYS,"defense"],[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice"],e.HISUI_AVALUGG],[t.DRAGON_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TYRANITAR,e.SCEPTILE,e.AGGRON,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.PANGORO,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.GOODRA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.DRACOZOLT,e.DURALUDON,e.DRAGAPULT,e.REGIDRAGO,e.CERULEDGE,e.CYCLIZAR,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.GOUGING_FIRE,e.HISUI_GOODRA],[t.FRENZY_PLANT]:[e.VENUSAUR,e.MEW,e.MEGANIUM,e.SCEPTILE,e.TORTERRA,e.SERPERIOR,e.CHESNAUGHT,e.DECIDUEYE,e.RILLABOOM,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.BULK_UP]:[e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.PINSIR,e.MEWTWO,e.MEW,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ELECTIVIRE,e.GALLADE,e.DIALGA,e.PALKIA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.EELEKTROSS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.TALONFLAME,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BARBARACLE,e.HAWLUCHA,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.KOMALA,e.TURTONATOR,e.MIMIKYU,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.RABOOT,e.CINDERACE,e.CORVIKNIGHT,e.BOLTUND,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.FALINKS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.SCREAM_TAIL,e.SLITHER_WING,e.KORAIDON,e.OKIDOGI,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.BOUNCE]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PONYTA,e.RAPIDASH,e.HITMONLEE,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.MAGIKARP,e.GYARADOS,e.MEW,e.SPINARAK,e.ARIADOS,e.CHINCHOU,e.LANTURN,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.DONPHAN,e.STANTLER,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.ABSOL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.VICTINI,e.BLITZLE,e.ZEBSTRIKA,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.MARACTUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PYROAR,e.GOGOAT,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HAWLUCHA,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.TOGEDEMARU,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.DUBWOOL,e.ARROKUDA,e.BARRASKEWDA,e.REGIELEKI,e.LOKIX,e.FINIZEN,e.CETODDLE,e.CETITAN,e.CHI_YU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_ZAPDOS,e.GALAR_STUNFISK],[t.MUD_SHOT]:[e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SURSKIT,e.MASQUERAIN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SABLEYE,e.GULPIN,e.SWALOT,e.NUMEL,e.CAMERUPT,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.PACHIRISU,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.CROAGUNK,e.TOXICROAK,e.RHYPERIOR,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.CUBCHOO,e.BEARTIC,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.BOUFFALANT,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDSDALE,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.BASCULEGION,e.OVERQWIL,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.WO_CHIEN,e.TING_LU,e.KORAIDON,e.WALKING_WAKE,e.PIKACHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_STUNFISK,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.POISON_TAIL]:[e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORAN_M,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DRUDDIGON,e.SKRELP,e.DRAGALGE,e.GOOMY,e.GOODRA,e.SALANDIT,e.SALAZZLE,e.SILICOBRA,e.SANDACONDA,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.GRAFAIAI,e.CLODSIRE,e.DUDUNSPARCE,e.OKIDOGI,e.FEZANDIPITI,e.PIKACHU,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.COVET]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.AIPOM,e.ESPEON,e.UMBREON,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.TEDDIURSA,e.URSARING,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.BLISSEY,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.AZURILL,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LATIAS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,e.PACHIRISU,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.BONSLY,e.MIME_JR,e.HAPPINY,e.MUNCHLAX,e.ELECTIVIRE,e.MAGMORTAR,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANPOUR,e.SIMIPOUR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.DIANCIE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.TOGEDEMARU,e.MIMIKYU,e.POIPOLE,e.GREEDENT,e.PERRSERKER,e.SIRFETCHD,e.MR_RIME,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.ANNIHILAPE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.MAGICAL_LEAF]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.MR_MIME,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CLEFFA,e.TOGETIC,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.PANSAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.SYLVEON,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.FLUTTER_MANE,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,[e.MEOWSTIC,"female"],e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.CALM_MIND]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.NATU,e.XATU,e.SUDOWOODO,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.SNEASEL,e.CORSOLA,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LUGIA,e.HO_OH,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.LATIAS,e.LATIOS,e.KYOGRE,e.JIRACHI,e.DEOXYS,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.SPIRITOMB,e.LUCARIO,e.WEAVILE,e.LEAFEON,e.GLACEON,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ALOMOMOLA,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.LANDORUS,e.KELDEO,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.AMAURA,e.AURORUS,e.SYLVEON,e.CARBINK,e.KLEFKI,e.TREVENANT,e.XERNEAS,e.DIANCIE,e.HOOPA,e.PRIMARINA,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.MINIOR,e.KOMALA,e.BRUXISH,e.DRAMPA,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.XURKITREE,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.SNEASLER,e.ENAMORUS,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.LEAF_BLADE]:[e.VICTREEBEL,e.FARFETCHD,e.MEW,e.BELLOSSOM,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.LEAFEON,e.GALLADE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LEAVANNY,e.LILLIGANT,e.VIRIZION,e.SKIDDO,e.GOGOAT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.KARTANA,e.SIRFETCHD,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.DRAGON_DANCE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ONIX,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.STEELIX,e.KINGDRA,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.TYRUNT,e.TYRANTRUM,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.FLAPPLE,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.TATSUGIRI,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE],[t.ROCK_BLAST]:[e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SHELLDER,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.PINECO,e.FORRETRESS,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.LAIRON,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.HEATRAN,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.CONKELDURR,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.CINCCINO,e.TERRAKION,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.TRUMBEAK,e.TOUCANNON,e.LYCANROC,e.MINIOR,e.NECROZMA,e.STAKATAKA,e.BLACEPHALON,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.KLEAVOR,e.GARGANACL,e.KLAWF,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.IRON_THORNS,e.IRON_BOULDER,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG],[t.WATER_PULSE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.JYNX,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.SNORLAX,e.ARTICUNO,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.KINGDRA,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.AZURILL,e.SKITTY,e.DELCATTY,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.SPINDA,e.ZANGOOSE,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.SPIRITOMB,e.MUNCHLAX,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.GLACEON,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DRAMPA,e.KOMMO_O,e.TAPU_FINI,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.TANDEMAUS,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.SCREAM_TAIL,e.IRON_BUNDLE,e.WALKING_WAKE,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.ROOST]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.DODUO,e.DODRIO,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.DRAMPA,e.TAPU_KOKO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.ROARING_MOON,e.FEZANDIPITI,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.GRAVITY]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.STARYU,e.STARMIE,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.ESPEON,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.PORYGON2,e.STANTLER,e.BLISSEY,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MAGNEZONE,e.GLACEON,e.PORYGON_Z,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.ARCEUS,e.MUNNA,e.MUSHARNA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.GOLETT,e.GOLURK,e.LANDORUS,e.MELOETTA,e.GENESECT,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TOGEDEMARU,e.TAPU_LELE,e.TAPU_FINI,e.XURKITREE,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.HATTERENE,e.STONJOURNER,e.INDEEDEE,e.ETERNATUS,e.CALYREX,e.WYRDEER,e.GARGANACL,e.RABSCA,e.FARIGIRAF,e.SANDY_SHOCKS,e.IRON_LEAVES,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,[e.INDEEDEE,"male"]],[t.GYRO_BALL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GEODUDE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.VOLTORB,e.ELECTRODE,e.KOFFING,e.WEEZING,e.STARYU,e.STARMIE,e.OMANYTE,e.OMASTAR,e.MEW,e.TYPHLOSION,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MAGCARGO,e.DONPHAN,e.HITMONTOP,e.MILTANK,e.SABLEYE,e.TORKOAL,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.GLALIE,e.METANG,e.METAGROSS,e.RAYQUAZA,e.DRIFLOON,e.DRIFBLIM,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.TEPIG,e.PIGNITE,e.EMBOAR,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DARUMAKA,e.DARMANITAN,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.GOLETT,e.GOLURK,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CARBINK,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.PASSIMIAN,e.MINIOR,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.SKWOVET,e.GREEDENT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.PERRSERKER,e.DURALUDON,e.OVERQWIL,e.VAROOM,e.REVAVROOM,e.DUDUNSPARCE,e.SCREAM_TAIL,e.IRON_TREADS,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.BRINE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.CHINCHOU,e.LANTURN,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.WINGULL,e.PELIPPER,e.HARIYAMA,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.PANPOUR,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.TAPU_FINI,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.OVERQWIL,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH],[t.PLUCK]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.NATU,e.XATU,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.HO_OH,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.HONCHKROW,e.CHATOT,e.TOGEKISS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.INKAY,e.MALAMAR,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.DRACOZOLT,e.ARCTOZOLT,e.WATTREL,e.KILOWATTREL,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.VELUZA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.GALAR_ZAPDOS,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TAILWIND]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.BEAUTIFLY,e.DUSTOX,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.CHATOT,e.FINNEON,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ARCEUS,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.RESHIRAM,e.ZEKROM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.SILVALLY,e.DRAMPA,e.LUNALA,e.KARTANA,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.FROSMOTH,e.KLEAVOR,e.ENAMORUS,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_JUGULIS,e.ROARING_MOON,e.FEZANDIPITI,e.SHAYMIN,e.GIRATINA,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.U_TURN]:[e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.CELEBI,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.RAYQUAZA,e.JIRACHI,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.AMBIPOM,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHATOT,e.FINNEON,e.LUMINEON,e.YANMEGA,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PHIONE,e.MANAPHY,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.WHIMSICOTT,e.DARUMAKA,e.DARMANITAN,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FURFROU,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.WISHIWASHI,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.NAGANADEL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.FLAPPLE,e.PERRSERKER,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.TANDEMAUS,e.MAUSHOLD,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.FLITTLE,e.ESPATHRA,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.CLOSE_COMBAT]:[e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.PINSIR,e.TAUROS,e.MEW,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.SHARPEDO,e.ZANGOOSE,e.CRAWDAUNT,e.ABSOL,e.MONFERNO,e.INFERNAPE,e.STARAPTOR,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SAWK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ESCAVALIER,e.EELEKTROSS,e.HAXORUS,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.XERNEAS,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.QUAQUAVAL,e.PAWMOT,e.CERULEDGE,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.IRON_BOULDER,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS],[t.PAYBACK]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.DODRIO,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.MR_MIME,e.JYNX,e.TAUROS,e.GYARADOS,e.AERODACTYL,e.MEW,e.CROBAT,e.POLITOED,e.AIPOM,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.PINECO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.OCTILLERY,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.CRANIDOS,e.RAMPARDOS,e.FLOATZEL,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.DUSKNOIR,e.FROSLASS,e.AZELF,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.YVELTAL,e.ZYGARDE,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.BLACEPHALON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.PINCURCHIN,e.MORPEKO,e.COPPERAJAH,e.ARCTOZOLT,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.FLAMIGO,e.BRUTE_BONNET,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"]],[t.ASSURANCE]:[e.BEEDRILL,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.DODUO,e.KOFFING,e.WEEZING,e.KANGASKHAN,e.SCYTHER,e.TAUROS,e.AERODACTYL,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.MAWILE,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.ABSOL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.AZELF,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.PATRAT,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SCOLIPEDE,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.GOODRA,e.INCINEROAR,e.LYCANROC,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.TOGEDEMARU,e.DHELMISE,e.TAPU_KOKO,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.STONJOURNER,e.MORPEKO,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.GLASTRIER,e.SPECTRIER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.FARIGIRAF,e.KINGAMBIT,e.IRON_JUGULIS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,[e.CALYREX,"ice","shadow"],[e.PALDEA_TAUROS,"combat"]],[t.EMBARGO]:[e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.GASTLY,e.HAUNTER,e.GENGAR,e.MEWTWO,e.MEW,e.MURKROW,e.MISDREAVUS,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.DUSKNOIR,e.FROSLASS,e.DARKRAI,e.VICTINI,e.PURRLOIN,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.MIMIKYU,e.BRUXISH,e.DHELMISE,e.NECROZMA,e.MAGEARNA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.FLING]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.QUAGSIRE,e.SLOWKING,e.GLIGAR,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.KECLEON,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.GLISCOR,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.PALKIA,e.REGIGIGAS,e.PHIONE,e.MANAPHY,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.WHIMSICOTT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.EMOLGA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.DEDENNE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.BLACEPHALON,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.CINDERACE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.KUBFU,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAQUAVAL,e.SPIDOPS,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.ARBOLIVA,e.GARGANACL,e.ARMAROUGE,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.BLOODMOON_URSALUNA],[t.GASTRO_ACID]:[e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SNORLAX,e.MEW,e.BELLOSSOM,e.SHUCKLE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.MUNCHLAX,e.CARNIVINE,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PALPITOAD,e.SEISMITOAD,e.FOONGUS,e.AMOONGUSS,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DIGGERSBY,e.SWIRLIX,e.SLURPUFF,e.MAREANIE,e.TOXAPEX,e.PYUKUMUKU,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.TAROUNTULA,e.SPIDOPS,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POWER_SWAP]:[e.VULPIX,e.NINETALES,e.ABRA,e.KADABRA,e.ALAKAZAM,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.MAGMAR,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.GIRAFARIG,e.PORYGON2,e.MAGBY,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MEDITITE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.TANGROWTH,e.MAGMORTAR,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.SIGILYPH,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.ACCELGOR,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_MR_MIME,e.GALAR_ARTICUNO],[t.GUARD_SWAP]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.WOOPER,e.QUAGSIRE,e.UMBREON,e.GIRAFARIG,e.SLUGMA,e.MAGCARGO,e.SKARMORY,e.PORYGON2,e.GARDEVOIR,e.MAWILE,e.MEDITITE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.DARMANITAN,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.SHELMET,e.ACCELGOR,e.INKAY,e.MALAMAR,e.CARBINK,e.DIANCIE,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.MAGEARNA,e.DOTTLER,e.ORBEETLE,e.WOOLOO,e.DUBWOOL,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.ZAMAZENTA,e.CALYREX,e.RABSCA,e.FARIGIRAF,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,[e.INDEEDEE,"female"]],[t.WORRY_SEED]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.CHERUBI,e.CHERRIM,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.NIHILEGO,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.CAPSAKID,e.SCOVILLAIN,e.ALOLA_EXEGGUTOR,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.ETERNAL_FLOETTE],[t.TOXIC_SPIKES]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.VENONAT,e.VENOMOTH,e.TENTACOOL,e.TENTACRUEL,e.MUK,e.SHELLDER,e.CLOYSTER,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.OMANYTE,e.OMASTAR,e.MEW,e.SPINARAK,e.ARIADOS,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SHIFTRY,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.ROSERADE,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.GLISCOR,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SHELMET,e.ACCELGOR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.RUNERIGUS,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_YAMASK,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.FLARE_BLITZ]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.SOLGALEO,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.CENTISKORCH,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.AURA_SPHERE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.HITMONLEE,e.HITMONCHAN,e.MEWTWO,e.MEW,e.RAIKOU,e.CELEBI,e.BLAZIKEN,e.GARDEVOIR,e.MEDICHAM,e.ZANGOOSE,e.LATIAS,e.LATIOS,e.JIRACHI,e.INFERNAPE,e.LOPUNNY,e.LUCARIO,e.TOGEKISS,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.MIENFOO,e.MIENSHAO,e.KELDEO,e.CLAUNCHER,e.CLAWITZER,e.KOMMO_O,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.URSHIFU,e.MEOWSCARADA,e.ARMAROUGE,e.PALAFIN,e.IRON_VALIANT,e.ARCHALUDON,e.TERAPAGOS,e.HISUI_DECIDUEYE],[t.ROCK_POLISH]:[e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.FORRETRESS,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.MAGCARGO,e.CORSOLA,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.RHYPERIOR,e.GLISCOR,e.PROBOPASS,e.REGIGIGAS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.LANDORUS,e.GENESECT,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.NACLI,e.NACLSTACK,e.GARGANACL,e.GLIMMET,e.GLIMMORA,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.POISON_JAB]:[e.BEEDRILL,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.RAPIDASH,e.FARFETCHD,e.GRIMER,e.MUK,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.HITMONLEE,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.SNEASEL,e.DONPHAN,e.COMBUSKEN,e.BLAZIKEN,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.ROSELIA,e.GULPIN,e.SWALOT,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.DRILBUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VOLCARONA,e.COBALION,e.TERRAKION,e.KELDEO,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TOGEDEMARU,e.KOMMO_O,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.GUZZLORD,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZACIAN,e.ETERNATUS,e.URSHIFU,e.SNEASLER,e.OVERQWIL,e.TAROUNTULA,e.SPIDOPS,e.CERULEDGE,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_VALIANT,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.IRON_BOULDER,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.PALDEA_WOOPER],[t.DARK_PULSE]:[e.BLASTOISE,e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.GYARADOS,e.MEWTWO,e.MEW,e.CROBAT,e.UMBREON,e.MURKROW,e.MISDREAVUS,e.GLIGAR,e.STEELIX,e.SNEASEL,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.MAWILE,e.AGGRON,e.CARVANHA,e.SHARPEDO,e.CACNEA,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.GLALIE,e.DEOXYS,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.LUCARIO,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GLISCOR,e.PORYGON_Z,e.DUSKNOIR,e.ROTOM,e.HEATRAN,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FRILLISH,e.JELLICENT,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.GENESECT,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.MIMIKYU,e.GUZZLORD,e.NECROZMA,e.NAGANADEL,e.BLACEPHALON,e.INTELEON,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.RUNERIGUS,e.MORPEKO,e.DURALUDON,e.ZARUDE,e.SPECTRIER,e.OVERQWIL,e.MEOWSCARADA,e.LOKIX,e.ARMAROUGE,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.FEZANDIPITI,e.ARCHALUDON,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MEOWTH,e.GALAR_WEEZING,e.GALAR_MOLTRES,e.GALAR_YAMASK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.AQUA_TAIL]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.PSYDUCK,e.GOLDUCK,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.KANGASKHAN,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.VAPOREON,e.KABUTOPS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LANTURN,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.QWILFISH,e.MANTINE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.AGGRON,e.SEVIPER,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.MILOTIC,e.KECLEON,e.SPHEAL,e.SEALEO,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.KYOGRE,e.RAYQUAZA,e.BIDOOF,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.GARCHOMP,e.SKORUPI,e.DRAPION,e.FINNEON,e.LUMINEON,e.LICKILICKY,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PANPOUR,e.SIMIPOUR,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.MINCCINO,e.CINCCINO,e.EELEKTRIK,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.GOODRA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.BASCULEGION,e.OVERQWIL,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.DONDOZO,e.DUDUNSPARCE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_QWILFISH,e.HISUI_SAMUROTT],[t.SEED_BOMB]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.PINECO,e.FORRETRESS,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.ROSELIA,e.GULPIN,e.SWALOT,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LILEEP,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.WORMADAM,e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.MUNCHLAX,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROSEED,e.FERROTHORN,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.KOMALA,e.TAPU_BULU,e.CELESTEELA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.CALYREX,e.URSALUNA,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.FLITTLE,e.ESPATHRA,e.ANNIHILAPE,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.AIR_SLASH]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.ARTICUNO,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.NATU,e.XATU,e.YANMA,e.MURKROW,e.DUNSPARCE,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.SUICUNE,e.LUGIA,e.HO_OH,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFBLIM,e.HONCHKROW,e.LUMINEON,e.MANTYKE,e.TOGEKISS,e.YANMEGA,e.GALLADE,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.SIGILYPH,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.KELDEO,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.AEGISLASH,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.TYPE_NULL,e.SILVALLY,e.LUNALA,e.CELESTEELA,e.KARTANA,e.NAGANADEL,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.ZACIAN,e.KLEAVOR,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.IRON_LEAVES,e.FEZANDIPITI,e.IRON_BOULDER,e.IRON_CROWN,e.SHAYMIN,[e.ROTOM,"fan"],e.GALAR_ARTICUNO,e.GALAR_MOLTRES,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.X_SCISSOR]:[e.BEEDRILL,e.SANDSHREW,e.SANDSLASH,e.PARAS,e.PARASECT,e.KRABBY,e.KINGLER,e.SCYTHER,e.PINSIR,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SNEASEL,e.SKARMORY,e.GROVYLE,e.SCEPTILE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ZANGOOSE,e.SEVIPER,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.ABSOL,e.KRICKETUNE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LEAFEON,e.GLISCOR,e.GALLADE,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GENESECT,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MIMIKYU,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.CENTISKORCH,e.OBSTAGOON,e.PERRSERKER,e.KLEAVOR,e.SNEASLER,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.RELLOR,e.RABSCA,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.GALAR_MEOWTH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT],[t.BUG_BUZZ]:[e.BUTTERFREE,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.SCIZOR,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.ARCEUS,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.VIVILLON,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.IRON_MOTH,e.TERAPAGOS],[t.DRAGON_PULSE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.ARCANINE,e.ONIX,e.RHYHORN,e.RHYDON,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.FERALIGATR,e.AMPHAROS,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.LUGIA,e.SCEPTILE,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.FEEBAS,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.HEATRAN,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NECROZMA,e.POIPOLE,e.NAGANADEL,e.FLAPPLE,e.APPLETUN,e.RUNERIGUS,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.ARMAROUGE,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.HISUI_ARCANINE,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.POWER_GEM]:[e.MEOWTH,e.PERSIAN,e.GOLDUCK,e.STARYU,e.STARMIE,e.MEWTWO,e.MEW,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.SUDOWOODO,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.SLUGMA,e.MAGCARGO,e.CORSOLA,e.TYRANITAR,e.NOSEPASS,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.VESPIQUEN,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GABITE,e.GARCHOMP,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.CRESSELIA,e.ARCEUS,e.BOLDORE,e.GIGALITH,e.KLINK,e.KLANG,e.KLINKLANG,e.CARBINK,e.DIANCIE,e.MINIOR,e.NIHILEGO,e.NECROZMA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.MEOWSCARADA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.RABSCA,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_THORNS,e.GIMMIGHOUL,e.GHOLDENGO,e.MIRAIDON,e.TERAPAGOS,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.DRAIN_PUNCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GLOOM,e.VILEPLUME,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWBRO,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.LEDYBA,e.LEDIAN,e.TOGETIC,e.BELLOSSOM,e.SUDOWOODO,e.QUAGSIRE,e.SLOWKING,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOMBRE,e.LUDICOLO,e.SHROOMISH,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.SPINDA,e.CACNEA,e.CACTURNE,e.KECLEON,e.REGIROCK,e.JIRACHI,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.BUNEARY,e.LOPUNNY,e.MIME_JR,e.HAPPINY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.TOGEKISS,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.PIGNITE,e.EMBOAR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.REUNICLUS,e.EELEKTROSS,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.AROMATISSE,e.SLURPUFF,e.HAWLUCHA,e.TREVENANT,e.HOOPA,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.SHIINOTIC,e.BEWEAR,e.PASSIMIAN,e.MIMIKYU,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.GUZZLORD,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.TOXTRICITY,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.URSHIFU,e.ZARUDE,e.URSALUNA,e.PALAFIN,e.ANNIHILAPE,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING],[t.VACUUM_WAVE]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.SCYTHER,e.MEW,e.SCIZOR,e.HERACROSS,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.FLYGON,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.DEWOTT,e.SAMUROTT,e.MIENSHAO,e.COBALION,e.VIRIZION,e.KELDEO,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.KARTANA,e.INTELEON,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.CERULEDGE,e.ANNIHILAPE,e.IRON_VALIANT,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA],[t.FOCUS_BLAST]:[e.CHARMANDER,e.CHARIZARD,e.BLASTOISE,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.WIGGLYTUFF,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.MUK,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.LEDIAN,e.AMPHAROS,e.AZUMARILL,e.POLITOED,e.QUAGSIRE,e.SLOWKING,e.GRANBULL,e.HERACROSS,e.URSARING,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TYRANITAR,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.SWAMPERT,e.LUDICOLO,e.SHIFTRY,e.GARDEVOIR,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.CACTURNE,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.MONFERNO,e.INFERNAPE,e.RAMPARDOS,e.FLOATZEL,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.ESCAVALIER,e.HAXORUS,e.BEARTIC,e.ACCELGOR,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BISHARP,e.HEATMOR,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.DELPHOX,e.PANGORO,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.HAWLUCHA,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.VOLCANION,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_LELE,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.MR_RIME,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.SNEASLER,e.ENAMORUS,e.PAWMOT,e.ARMAROUGE,e.PALAFIN,e.ANNIHILAPE,e.KINGAMBIT,e.SCREAM_TAIL,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.KORAIDON,e.IRON_LEAVES,e.OKIDOGI,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.ENERGY_BALL]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.MISDREAVUS,e.GIRAFARIG,e.OCTILLERY,e.STANTLER,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.GARDEVOIR,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SABLEYE,e.MEDICHAM,e.ROSELIA,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LILEEP,e.CRADILY,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.MOTHIM,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.VIRIZION,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PRIMARINA,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.DRAMPA,e.DHELMISE,e.TAPU_LELE,e.TAPU_BULU,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.DOTTLER,e.ORBEETLE,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.INDEEDEE,e.ZARUDE,e.CALYREX,e.WYRDEER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.ARMAROUGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.GLIMMORA,e.FARIGIRAF,e.BRUTE_BONNET,e.FLUTTER_MANE,e.IRON_MOTH,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.TERAPAGOS,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_MR_MIME,e.GALAR_YAMASK,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.BRAVE_BIRD]:[e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.DODUO,e.DODRIO,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.DELIBIRD,e.SKARMORY,e.LUGIA,e.HO_OH,e.BLAZIKEN,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.SWABLU,e.ALTARIA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.HONCHKROW,e.UNFEZANT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TAPU_KOKO,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.ESPATHRA,e.BOMBIRDIER,e.FLAMIGO,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.EARTH_POWER]:[e.VENUSAUR,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.STANTLER,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.SHAYMIN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.STUNFISK,e.GOLETT,e.GOLURK,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.DIGGERSBY,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.NECROZMA,e.RILLABOOM,e.DREDNAW,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.REGIDRAGO,e.WYRDEER,e.URSALUNA,e.ENAMORUS,e.SKELEDIRGE,e.OINKOLOGNE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RABSCA,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GLIMMORA,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_THORNS,e.TING_LU,e.HYDRAPPLE,e.TERAPAGOS,[e.WORMADAM,"sandy"],e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_YAMASK,e.GALAR_STUNFISK,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.GIGA_IMPACT]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEOT,e.RATICATE,e.FEAROW,e.ARBOK,e.RAICHU,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFABLE,e.NINETALES,e.WIGGLYTUFF,e.GOLBAT,e.VILEPLUME,e.PARASECT,e.VENOMOTH,e.DUGTRIO,e.PERSIAN,e.GOLDUCK,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.ALAKAZAM,e.MACHAMP,e.VICTREEBEL,e.TENTACRUEL,e.GOLEM,e.RAPIDASH,e.SLOWBRO,e.MAGNETON,e.DODRIO,e.DEWGONG,e.MUK,e.CLOYSTER,e.GENGAR,e.HYPNO,e.KINGLER,e.ELECTRODE,e.EXEGGUTOR,e.MAROWAK,e.LICKITUNG,e.WEEZING,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.SEADRA,e.SEAKING,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMASTAR,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.FURRET,e.NOCTOWL,e.LEDIAN,e.ARIADOS,e.CROBAT,e.LANTURN,e.TOGETIC,e.XATU,e.AMPHAROS,e.BELLOSSOM,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.JUMPLUFF,e.SUNFLORA,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.URSARING,e.MAGCARGO,e.PILOSWINE,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.HOUNDOOM,e.KINGDRA,e.DONPHAN,e.PORYGON2,e.STANTLER,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.MIGHTYENA,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LUDICOLO,e.SHIFTRY,e.SWELLOW,e.PELIPPER,e.GARDEVOIR,e.MASQUERAIN,e.BRELOOM,e.SLAKING,e.NINJASK,e.SHEDINJA,e.EXPLOUD,e.HARIYAMA,e.DELCATTY,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDICHAM,e.MANECTRIC,e.SWALOT,e.SHARPEDO,e.WAILORD,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.FLYGON,e.CACTURNE,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.WHISCASH,e.CRAWDAUNT,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.BANETTE,e.DUSCLOPS,e.TROPIUS,e.ABSOL,e.GLALIE,e.WALREIN,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.STARAPTOR,e.BIBAREL,e.KRICKETUNE,e.LUXRAY,e.ROSERADE,e.RAMPARDOS,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.FLOATZEL,e.CHERRIM,e.GASTRODON,e.AMBIPOM,e.DRIFBLIM,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.PURUGLY,e.SKUNTANK,e.BRONZONG,e.SPIRITOMB,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.HIPPOWDON,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.LUMINEON,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.MUSHARNA,e.UNFEZANT,e.ZEBSTRIKA,e.GIGALITH,e.SWOOBAT,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.WHIMSICOTT,e.LILLIGANT,e.BASCULIN,e.KROOKODILE,e.DARMANITAN,e.CRUSTLE,e.SCRAFTY,e.SIGILYPH,e.COFAGRIGUS,e.CARRACOSTA,e.ARCHEOPS,e.GARBODOR,e.ZOROARK,e.CINCCINO,e.GOTHITELLE,e.REUNICLUS,e.SWANNA,e.VANILLUXE,e.SAWSBUCK,e.ESCAVALIER,e.AMOONGUSS,e.JELLICENT,e.ALOMOMOLA,e.GALVANTULA,e.FERROTHORN,e.KLINKLANG,e.EELEKTROSS,e.BEHEEYEM,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.BEARTIC,e.CRYOGONAL,e.ACCELGOR,e.MIENSHAO,e.DRUDDIGON,e.GOLURK,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.HYDREIGON,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DIGGERSBY,e.TALONFLAME,e.VIVILLON,e.PYROAR,e.FLORGES,e.GOGOAT,e.PANGORO,e.FURFROU,e.MEOWSTIC,e.AEGISLASH,e.AROMATISSE,e.SLURPUFF,e.MALAMAR,e.BARBARACLE,e.DRAGALGE,e.CLAWITZER,e.HELIOLISK,e.TYRANTRUM,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOODRA,e.KLEFKI,e.TREVENANT,e.GOURGEIST,e.AVALUGG,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.GUMSHOOS,e.VIKAVOLT,e.CRABOMINABLE,e.RIBOMBEE,e.LYCANROC,e.TOXAPEX,e.MUDSDALE,e.LURANTIS,e.SHIINOTIC,e.SALAZZLE,e.BEWEAR,e.TSAREENA,e.ORANGURU,e.PASSIMIAN,e.GOLISOPOD,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.NAGANADEL,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.GREEDENT,e.CORVIKNIGHT,e.ORBEETLE,e.THIEVUL,e.ELDEGOSS,e.DUBWOOL,e.DREDNAW,e.BOLTUND,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SANDACONDA,e.CRAMORANT,e.BARRASKEWDA,e.TOXTRICITY,e.CENTISKORCH,e.GRAPPLOCT,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL,e.OINKOLOGNE,e.SPIDOPS,e.LOKIX,e.PAWMOT,e.MAUSHOLD,e.DACHSBUN,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLSTACK,e.GARGANACL,e.BELLIBOLT,e.KILOWATTREL,e.MABOSSTIFF,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCRUEL,e.KLAWF,e.SCOVILLAIN,e.RABSCA,e.ESPATHRA,e.WUGTRIO,e.BOMBIRDIER,e.PALAFIN,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMORA,e.HOUNDSTONE,e.FLAMIGO,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.BAXCALIBUR,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_RAPIDASH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.NASTY_PLOT]:[e.PIKACHU,e.RAICHU,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.ALAKAZAM,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.PICHU,e.TOGEPI,e.TOGETIC,e.AIPOM,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.SMOOCHUM,e.CELEBI,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SKITTY,e.DELCATTY,e.SABLEYE,e.PLUSLE,e.MINUN,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.LUNATONE,e.CRAWDAUNT,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.MIME_JR,e.CHATOT,e.SPIRITOMB,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.TOGEKISS,e.PORYGON_Z,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.ELGYEM,e.BEHEEYEM,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.GOURGEIST,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.POIPOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.RUNERIGUS,e.MORPEKO,e.ZARUDE,e.SPECTRIER,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.TATSUGIRI,e.FARIGIRAF,e.GIMMIGHOUL,e.GHOLDENGO,e.CHI_YU,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.HYDRAPPLE,e.PECHARUNT,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.AVALANCHE]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.RHYDON,e.KANGASKHAN,e.STARMIE,e.JYNX,e.GYARADOS,e.LAPRAS,e.ARTICUNO,e.MEWTWO,e.MEW,e.FERALIGATR,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.SMOOCHUM,e.BLISSEY,e.SUICUNE,e.TYRANITAR,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.EXPLOUD,e.AGGRON,e.SHARPEDO,e.WAILMER,e.WAILORD,e.CRAWDAUNT,e.MILOTIC,e.CASTFORM,e.SNORUNT,e.GLALIE,e.WALREIN,e.REGICE,e.KYOGRE,e.RAYQUAZA,e.DEOXYS,e.EMPOLEON,e.RAMPARDOS,e.BASTIODON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.RHYPERIOR,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.REGIGIGAS,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABOMINABLE,e.MR_RIME,e.FROSMOTH,e.EISCUE,e.ARCTOZOLT,e.ARCTOVISH,e.GLASTRIER,e.URSALUNA,e.GARGANACL,e.CETODDLE,e.CETITAN,e.DONDOZO,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.SHADOW_CLAW]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.HAUNTER,e.GENGAR,e.RHYDON,e.KANGASKHAN,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.ZANGOOSE,e.ARMALDO,e.KECLEON,e.BANETTE,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.RHYPERIOR,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.BINACLE,e.BARBARACLE,e.PHANTUMP,e.TREVENANT,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.BEWEAR,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.LUNALA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.NAGANADEL,e.BLACEPHALON,e.THIEVUL,e.HATTERENE,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.RUNERIGUS,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SKELEDIRGE,e.TAROUNTULA,e.SPIDOPS,e.TANDEMAUS,e.MAUSHOLD,e.CERULEDGE,e.GRAFAIAI,e.KLAWF,e.ANNIHILAPE,e.KINGAMBIT,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_TYPHLOSION,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.THUNDER_FANG]:[e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.JOLTEON,e.AERODACTYL,e.MEW,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.RAIKOU,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.EELEKTRIK,e.EELEKTROSS,e.DRUDDIGON,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.ZEKROM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.TOXTRICITY,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.PAWMI,e.PAWMO,e.PAWMOT,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.GOUGING_FIRE,e.RAGING_BOLT,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.ICE_FANG]:[e.ARBOK,e.RHYHORN,e.RHYDON,e.GYARADOS,e.AERODACTYL,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SWINUB,e.PILOSWINE,e.DONPHAN,e.SUICUNE,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SNORUNT,e.GLALIE,e.WALREIN,e.HUNTAIL,e.SHINX,e.LUXIO,e.LUXRAY,e.BUIZEL,e.FLOATZEL,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.FROSLASS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BASCULIN,e.CUBCHOO,e.BEARTIC,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.TYRUNT,e.TYRANTRUM,e.BERGMITE,e.AVALUGG,e.YUNGOOS,e.GUMSHOOS,e.SILVALLY,e.BRUXISH,e.GREEDENT,e.THIEVUL,e.CHEWTLE,e.DREDNAW,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_TREADS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.KORAIDON,e.OKIDOGI,e.GALAR_SLOWBRO,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_AVALUGG],[t.FIRE_FANG]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.RHYHORN,e.RHYDON,e.FLAREON,e.AERODACTYL,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.DONPHAN,e.ENTEI,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.EXPLOUD,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.SEVIPER,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.SHINX,e.LUXIO,e.LUXRAY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.RHYPERIOR,e.GLISCOR,e.HEATRAN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SALANDIT,e.SALAZZLE,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GREEDENT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.SANDACONDA,e.CENTISKORCH,e.MORPEKO,e.DRACOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIDRAGO,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.CYCLIZAR,e.GREAVARD,e.HOUNDSTONE,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_JUGULIS,e.IRON_THORNS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.OKIDOGI,e.GOUGING_FIRE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION],[t.PSYCHO_CUT]:[e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.SCYTHER,e.JYNX,e.KABUTOPS,e.MEWTWO,e.MEW,e.SCIZOR,e.SNEASEL,e.CELEBI,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ABSOL,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.WEAVILE,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.LIEPARD,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.HAXORUS,e.PAWNIARD,e.BISHARP,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.DECIDUEYE,e.LURANTIS,e.TAPU_LELE,e.LUNALA,e.KARTANA,e.NECROZMA,e.ORBEETLE,e.HATTERENE,e.ZACIAN,e.SPECTRIER,e.KLEAVOR,e.CERULEDGE,e.VELUZA,e.IRON_VALIANT,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_RAPIDASH,e.GALAR_ARTICUNO,[e.CALYREX,"shadow"],e.HISUI_SAMUROTT,e.HISUI_DECIDUEYE],[t.ZEN_HEADBUTT]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.LICKITUNG,e.CHANSEY,e.MR_MIME,e.JYNX,e.TAUROS,e.LAPRAS,e.PORYGON,e.SNORLAX,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.DUNSPARCE,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.RELICANTH,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.GROUDON,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.HAPPINY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.LICKILICKY,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.CRESSELIA,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PATRAT,e.WATCHOG,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.THROH,e.SAWK,e.BASCULIN,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.GOLURK,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BRAIXEN,e.DELPHOX,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.HOOPA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.ORANGURU,e.SILVALLY,e.MINIOR,e.KOMALA,e.TOGEDEMARU,e.TAPU_BULU,e.SOLGALEO,e.NIHILEGO,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.APPLETUN,e.SANDACONDA,e.MR_RIME,e.RUNERIGUS,e.FALINKS,e.EISCUE,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.KUBFU,e.URSHIFU,e.GLASTRIER,e.CALYREX,e.WYRDEER,e.ENAMORUS,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CAPSAKID,e.SCOVILLAIN,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.IRON_TREADS,e.IRON_JUGULIS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_BRAVIARY,e.PALDEA_TAUROS],[t.FLASH_CANNON]:[e.BLASTOISE,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.HORSEA,e.SEADRA,e.STARYU,e.STARMIE,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.OCTILLERY,e.SKARMORY,e.KINGDRA,e.NOSEPASS,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.ARMALDO,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.JIRACHI,e.DEOXYS,e.EMPOLEON,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.RHYPERIOR,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.SIGILYPH,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BEHEEYEM,e.CRYOGONAL,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.DURANT,e.HYDREIGON,e.COBALION,e.THUNDURUS,e.ZEKROM,e.KYUREM,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.CLAUNCHER,e.CLAWITZER,e.AMAURA,e.AURORUS,e.CARBINK,e.KLEFKI,e.BERGMITE,e.AVALUGG,e.XERNEAS,e.DIANCIE,e.VOLCANION,e.TOUCANNON,e.VIKAVOLT,e.SANDYGAST,e.PALOSSAND,e.SILVALLY,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.SOLGALEO,e.CELESTEELA,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GLIMMORA,e.KINGAMBIT,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_JUGULIS,e.IRON_MOTH,e.GHOLDENGO,e.MIRAIDON,e.ARCHALUDON,e.IRON_CROWN,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.ROCK_CLIMB]:[e.VENUSAUR,e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.OMASTAR,e.KABUTOPS,e.SNORLAX,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.GLIGAR,e.STEELIX,e.GRANBULL,e.URSARING,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TYRANITAR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LUDICOLO,e.VIGOROTH,e.SLAKING,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AGGRON,e.ZANGOOSE,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.DARKRAI,e.ARCEUS,e.DRILBUR,e.EXCADRILL,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.DRUDDIGON,e.BOUFFALANT,e.DURANT,e.ROCKRUFF,e.LYCANROC,e.OBSTAGOON,e.URSALUNA,e.ANNIHILAPE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.DEFOG]:[e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.SPEAROW,e.FEAROW,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDIAN,e.CROBAT,e.TOGETIC,e.XATU,e.YANMA,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.CHIMECHO,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.CHATOT,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.ROTOM,e.GIRATINA,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.DUCKLETT,e.SWANNA,e.EMOLGA,e.CRYOGONAL,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.FLORGES,e.HAWLUCHA,e.KLEFKI,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.COMFEY,e.SILVALLY,e.DRAMPA,e.TAPU_KOKO,e.TAPU_FINI,e.LUNALA,e.KARTANA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.TRICK_ROOM]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.SPINDA,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.CRESSELIA,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.WHIMSICOTT,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FRILLISH,e.JELLICENT,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.CARBINK,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.COMFEY,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.MEOWSCARADA,e.ARMAROUGE,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.ALOLA_EXEGGUTOR,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.DRACO_METEOR]:[e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.KINGDRA,e.VIBRAVA,e.FLYGON,e.ALTARIA,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.GOOMY,e.SLIGGOO,e.GOODRA,e.NOIBAT,e.NOIVERN,e.ZYGARDE,e.SILVALLY,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.DRACOZOLT,e.DRACOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.LEAF_STORM]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.SHAYMIN,[e.ROTOM,"mow"],e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.POWER_WHIP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGUTOR,e.LICKITUNG,e.TANGELA,e.GYARADOS,e.MEW,e.ROSELIA,e.CRADILY,e.ROSERADE,e.CARNIVINE,e.LICKILICKY,e.TANGROWTH,e.PALPITOAD,e.SEISMITOAD,e.FERROTHORN,e.GOODRA,e.GOURGEIST,e.TSAREENA,e.DHELMISE,e.XURKITREE,e.SIZZLIPEDE,e.CENTISKORCH,e.HATTERENE,e.GRIMMSNARL,e.CUFANT,e.COPPERAJAH,e.ZARUDE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CYCLIZAR,e.WO_CHIEN,e.OGERPON,e.ALOLA_EXEGGUTOR],[t.CROSS_POISON]:[e.PARAS,e.PARASECT,e.MACHAMP,e.TENTACOOL,e.TENTACRUEL,e.SCYTHER,e.KABUTOPS,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.GLIGAR,e.SCIZOR,e.SCEPTILE,e.ANORITH,e.ARMALDO,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.TOXICROAK,e.GLISCOR,e.SCOLIPEDE,e.GARBODOR,e.JOLTIK,e.GALVANTULA,e.TOXAPEX,e.LURANTIS,e.SALAZZLE,e.NIHILEGO,e.NAGANADEL,e.OBSTAGOON,e.ETERNATUS,e.KLEAVOR,e.SHROODLE,e.GRAFAIAI,e.FEZANDIPITI],[t.GUNK_SHOT]:[e.EKANS,e.ARBOK,e.SANDSLASH,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.SNORLAX,e.MEW,e.AIPOM,e.GLIGAR,e.QWILFISH,e.TEDDIURSA,e.URSARING,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.PHANPY,e.DONPHAN,e.ZIGZAGOON,e.LINOONE,e.PELIPPER,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.GULPIN,e.SWALOT,e.ZANGOOSE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.ARCEUS,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.KROOKODILE,e.TRUBBISH,e.GARBODOR,e.MINCCINO,e.CINCCINO,e.DRUDDIGON,e.GENESECT,e.FROGADIER,e.GRENINJA,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.SKRELP,e.DRAGALGE,e.HOOPA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PASSIMIAN,e.KOMALA,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.TOXTRICITY,e.OBSTAGOON,e.PERRSERKER,e.ETERNATUS,e.URSALUNA,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.RELLOR,e.RABSCA,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,[e.WORMADAM,"trash"],e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MEOWTH,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.IRON_HEAD]:[e.ARCANINE,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.CUBONE,e.MAROWAK,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.MANTINE,e.SKARMORY,e.KINGDRA,e.PHANPY,e.DONPHAN,e.MILTANK,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.HARIYAMA,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.MILOTIC,e.GLALIE,e.WALREIN,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.EMBOAR,e.STOUTLAND,e.GIGALITH,e.EXCADRILL,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.CARRACOSTA,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.BRAVIARY,e.DURANT,e.COBALION,e.TERRAKION,e.KYUREM,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.AVALUGG,e.INCINEROAR,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.GOLISOPOD,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.SOLGALEO,e.NIHILEGO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.STAKATAKA,e.MELMETAL,e.CINDERACE,e.CORVIKNIGHT,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.PERRSERKER,e.FALINKS,e.EISCUE,e.CUFANT,e.COPPERAJAH,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.ENAMORUS,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CERULEDGE,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.CLODSIRE,e.FARIGIRAF,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_THORNS,e.ARCTIBAX,e.BAXCALIBUR,e.GHOLDENGO,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,e.TERAPAGOS,[e.WORMADAM,"trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_DARMANITAN,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS],[t.STONE_EDGE]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.GYARADOS,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEWTWO,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.HITMONTOP,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.BLAZIKEN,e.SWAMPERT,e.BRELOOM,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.MAWILE,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.ABSOL,e.RELICANTH,e.SALAMENCE,e.METAGROSS,e.REGIROCK,e.GROUDON,e.RAYQUAZA,e.TORTERRA,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.TOXICROAK,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.BEARTIC,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.DURANT,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.HAWLUCHA,e.CARBINK,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.TAPU_BULU,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.MARSHADOW,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.KLEAVOR,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ROARING_MOON,e.ARCHALUDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.STEALTH_ROCK]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.PRIMEAPE,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.CHANSEY,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.SKARMORY,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.CELEBI,e.MARSHTOMP,e.SWAMPERT,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.KECLEON,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.HEATRAN,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.PALPITOAD,e.SEISMITOAD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.FERROSEED,e.FERROTHORN,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HYDREIGON,e.COBALION,e.TERRAKION,e.ZEKROM,e.LANDORUS,e.BINACLE,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMMO_O,e.NIHILEGO,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.PERRSERKER,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.BOMBIRDIER,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.CLODSIRE,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.TING_LU,e.ARCHALUDON,e.TERAPAGOS,[e.WORMADAM,"sandy","trash"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_CORSOLA,e.GALAR_STUNFISK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_AVALUGG,e.PALDEA_WOOPER],[t.GRASS_KNOT]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.TANGELA,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SMOOCHUM,e.BLISSEY,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHROOMISH,e.BRELOOM,e.SKITTY,e.DELCATTY,e.MAWILE,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.KECLEON,e.TROPIUS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIDOOF,e.BIBAREL,e.BUDEW,e.ROSERADE,[e.WORMADAM,"plant"],e.PACHIRISU,e.CHERUBI,e.CHERRIM,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CARNIVINE,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.TOGEKISS,e.LEAFEON,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.SCRAGGY,e.SCRAFTY,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.FERROTHORN,e.EELEKTROSS,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.XERNEAS,e.ZYGARDE,e.HOOPA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.TOGEDEMARU,e.DRAMPA,e.DHELMISE,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.OBSTAGOON,e.MR_RIME,e.RUNERIGUS,e.ZARUDE,e.CALYREX,e.SNEASLER,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.TAROUNTULA,e.SPIDOPS,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.PALAFIN,e.FARIGIRAF,e.KINGAMBIT,e.SCREAM_TAIL,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_VALIANT,e.IRON_LEAVES,e.DIPPLIN,e.MUNKIDORI,e.OGERPON,e.HYDRAPPLE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.BUG_BITE]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.KRICKETOT,e.KRICKETUNE,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.HEATMOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.GOLISOPOD,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.SLITHER_WING,e.DIPPLIN,e.HYDRAPPLE],[t.CHARGE_BEAM]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.MR_MIME,e.ELECTABUZZ,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.REMORAID,e.OCTILLERY,e.PORYGON2,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.LUGIA,e.HO_OH,e.CELEBI,e.ZIGZAGOON,e.LINOONE,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SKITTY,e.DELCATTY,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.ABSOL,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.BIDOOF,e.BIBAREL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.GIRATINA,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.BLITZLE,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.DRUDDIGON,e.GOLURK,e.HYDREIGON,e.THUNDURUS,e.ZEKROM,e.MELOETTA,e.GENESECT,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.HELIOPTILE,e.HELIOLISK,e.AMAURA,e.AURORUS,e.DEDENNE,e.PUMPKABOO,e.GOURGEIST,e.HOOPA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.SHIINOTIC,e.ORANGURU,e.MINIOR,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.TAPU_LELE,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.NECROZMA,e.MAGEARNA,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.FARIGIRAF,e.FLUTTER_MANE,e.SANDY_SHOCKS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.HONE_CLAWS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.PARAS,e.PARASECT,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.KRABBY,e.KINGLER,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.AIPOM,e.GLIGAR,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.TYRANITAR,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.ZIGZAGOON,e.LINOONE,e.LOMBRE,e.LUDICOLO,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.ARON,e.LAIRON,e.AGGRON,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.CORPHISH,e.CRAWDAUNT,e.ANORITH,e.ARMALDO,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGISTEEL,e.LATIAS,e.LATIOS,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PRINPLUP,e.EMPOLEON,e.KRICKETUNE,e.VESPIQUEN,e.AMBIPOM,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.GIBLE,e.GABITE,e.GARCHOMP,e.LUCARIO,e.SKORUPI,e.DRAPION,e.WEAVILE,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.DRILBUR,e.EXCADRILL,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.FERROSEED,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.RUFFLET,e.BRAVIARY,e.HEATMOR,e.DURANT,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.GENESECT,e.QUILLADIN,e.CHESNAUGHT,e.TALONFLAME,e.PANGORO,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.TYRUNT,e.TYRANTRUM,e.HAWLUCHA,e.TREVENANT,e.NOIVERN,e.YVELTAL,e.MIMIKYU,e.ZERAORA,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.NICKIT,e.THIEVUL,e.OBSTAGOON,e.PERRSERKER,e.DURALUDON,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.KINGAMBIT,e.WALKING_WAKE,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_LINOONE,e.HISUI_SNEASEL,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY],[t.WONDER_ROOM]:[e.CLEFAIRY,e.CLEFABLE,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.PORYGON2,e.SMOOCHUM,e.LUGIA,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SABLEYE,e.ALTARIA,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.KECLEON,e.DUSKULL,e.DUSCLOPS,e.LATIOS,e.DEOXYS,e.MISMAGIUS,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.PORYGON_Z,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.DARKRAI,e.MUNNA,e.MUSHARNA,e.YAMASK,e.COFAGRIGUS,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.CARBINK,e.XERNEAS,e.DIANCIE,e.HOOPA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATTERENE,e.GRIMMSNARL,e.MR_RIME,e.RUNERIGUS,e.ALCREMIE,e.STONJOURNER,e.INDEEDEE,e.CALYREX,e.ALOLA_NINETALES,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.GALAR_YAMASK],[t.PSYSHOCK]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PORYGON2,e.STANTLER,e.SMOOCHUM,e.LUGIA,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.DARKRAI,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.AROMATISSE,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.FARIGIRAF,e.GREAT_TUSK,e.SCREAM_TAIL,e.FLUTTER_MANE,e.GHOLDENGO,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.VENOSHOCK]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.BELLOSSOM,e.PINECO,e.FORRETRESS,e.GLIGAR,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SHROOMISH,e.BRELOOM,e.ROSELIA,e.GULPIN,e.SWALOT,e.CACNEA,e.CACTURNE,e.SEVIPER,e.BUDEW,e.ROSERADE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.STUNKY,e.SKUNTANK,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.GLISCOR,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.FOONGUS,e.AMOONGUSS,e.SHELMET,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.TURTONATOR,e.BRUXISH,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.PINCURCHIN,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.BRUTE_BONNET,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.PALDEA_WOOPER],[t.MAGIC_ROOM]:[e.WIGGLYTUFF,e.ABRA,e.KADABRA,e.ALAKAZAM,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.MISDREAVUS,e.STANTLER,e.SMOOCHUM,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.LUNATONE,e.SHUPPET,e.BANETTE,e.LATIAS,e.JIRACHI,e.MISMAGIUS,e.MIME_JR,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.KLEFKI,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.DEWPIDER,e.ARAQUANID,e.MORELULL,e.SHIINOTIC,e.ORANGURU,e.MIMIKYU,e.BRUXISH,e.TAPU_LELE,e.TAPU_FINI,e.LUNALA,e.STAKATAKA,e.DOTTLER,e.ORBEETLE,e.HATTERENE,e.MR_RIME,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_MR_MIME],[t.SMACK_DOWN]:[e.BLASTOISE,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.PINSIR,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.MEW,e.SUDOWOODO,e.AIPOM,e.STEELIX,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.REMORAID,e.OCTILLERY,e.PHANPY,e.DONPHAN,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.AGGRON,e.CAMERUPT,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.REGIROCK,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.AMBIPOM,e.BONSLY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.GARBODOR,e.DRUDDIGON,e.TERRAKION,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.BINACLE,e.BARBARACLE,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.DIANCIE,e.VOLCANION,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.PASSIMIAN,e.TURTONATOR,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.MARSHADOW,e.STAKATAKA,e.BLACEPHALON,e.CINDERACE,e.INTELEON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.STONJOURNER,e.COPPERAJAH,e.KLEAVOR,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.ANNIHILAPE,e.GREAT_TUSK,e.IRON_THORNS,e.ARCHALUDON,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_DECIDUEYE,e.BLOODMOON_URSALUNA],[t.SLUDGE_WAVE]:[e.EKANS,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.VILEPLUME,e.VENOMOTH,e.DUGTRIO,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.SPINARAK,e.ARIADOS,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.SHUCKLE,e.OCTILLERY,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.GULPIN,e.SWALOT,e.SEVIPER,e.CRAWDAUNT,e.CRADILY,e.GASTRODON,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.TRUBBISH,e.GARBODOR,e.FRILLISH,e.JELLICENT,e.STUNFISK,e.TORNADUS,e.THUNDURUS,e.LANDORUS,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.ZYGARDE,e.VOLCANION,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.GOLISOPOD,e.DHELMISE,e.NIHILEGO,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.TOXTRICITY,e.ETERNATUS,e.SNEASLER,e.OVERQWIL,e.SHROODLE,e.GRAFAIAI,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.OKIDOGI,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_RATICATE,e.ALOLA_DUGTRIO,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_STUNFISK,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.HEAVY_SLAM]:[e.MACHOP,e.MACHOKE,e.MACHAMP,e.GRAVELER,e.GOLEM,e.MAGNEMITE,e.MAGNETON,e.ONIX,e.RHYHORN,e.RHYDON,e.SNORLAX,e.MEW,e.FORRETRESS,e.STEELIX,e.PHANPY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.WALREIN,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.KYOGRE,e.GROUDON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BRONZOR,e.BRONZONG,e.HIPPOWDON,e.MAGNEZONE,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLETT,e.GOLURK,e.COBALION,e.CARBINK,e.AVALUGG,e.VOLCANION,e.MUDBRAY,e.MUDSDALE,e.TURTONATOR,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CORVIKNIGHT,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.PERRSERKER,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.GLASTRIER,e.URSALUNA,e.NACLI,e.NACLSTACK,e.GARGANACL,e.TINKATON,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.GHOLDENGO,e.TING_LU,e.KORAIDON,e.MIRAIDON,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GOLEM,[e.CALYREX,"ice"],e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.ELECTRO_BALL]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEWTWO,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.RABSCA,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.GHOLDENGO,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.FLAME_CHARGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.VULPIX,e.NINETALES,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MAGMORTAR,e.HEATRAN,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.BLITZLE,e.ZEBSTRIKA,e.DARUMAKA,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.LARVESTA,e.VOLCARONA,e.RESHIRAM,e.GENESECT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.TYPE_NULL,e.SILVALLY,e.TURTONATOR,e.SOLGALEO,e.CELESTEELA,e.BLACEPHALON,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.YAMPER,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.SLITHER_WING,e.IRON_MOTH,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.LOW_SWEEP]:[e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.DROWZEE,e.HYPNO,e.HITMONLEE,e.HITMONCHAN,e.ELECTABUZZ,e.MAGMAR,e.MEWTWO,e.MEW,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.GRUMPIG,e.ZANGOOSE,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.PIGNITE,e.EMBOAR,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZOROARK,e.GOTHITELLE,e.HAXORUS,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.GRENINJA,e.PANCHAM,e.PANGORO,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DECIDUEYE,e.INCINEROAR,e.GUMSHOOS,e.MUDBRAY,e.MUDSDALE,e.LURANTIS,e.STUFFUL,e.BEWEAR,e.STEENEE,e.TSAREENA,e.PASSIMIAN,e.KOMALA,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.GRIMMSNARL,e.STONJOURNER,e.KUBFU,e.URSHIFU,e.ZARUDE,e.SNEASLER,e.FLORAGATO,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.LOKIX,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.GRAFAIAI,e.FLAMIGO,e.ANNIHILAPE,e.KINGAMBIT,e.SLITHER_WING,e.IRON_HANDS,e.GHOLDENGO,e.KORAIDON,e.OKIDOGI,e.OGERPON,[e.LYCANROC,"midnight"],e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.HISUI_DECIDUEYE],[t.ACID_SPRAY]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MAGMAR,e.MEW,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.WOOPER,e.QUAGSIRE,e.QWILFISH,e.REMORAID,e.OCTILLERY,e.MAGBY,e.GULPIN,e.SWALOT,e.SEVIPER,e.STUNKY,e.SKUNTANK,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.MAGMORTAR,e.ARCEUS,e.SCRAGGY,e.SCRAFTY,e.TRUBBISH,e.GARBODOR,e.KARRABLAST,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.EELEKTRIK,e.EELEKTROSS,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.SLIGGOO,e.GOODRA,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.NIHILEGO,e.FLAPPLE,e.TOXTRICITY,e.SNEASLER,e.OVERQWIL,e.ARMAROUGE,e.TADBULB,e.BELLIBOLT,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.VAROOM,e.REVAVROOM,e.GLIMMET,e.GLIMMORA,e.CLODSIRE,e.IRON_MOTH,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.PALDEA_WOOPER],[t.FOUL_PLAY]:[e.VULPIX,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.VOLTORB,e.ELECTRODE,e.MR_MIME,e.PORYGON,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.XATU,e.SUDOWOODO,e.AIPOM,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.SNEASEL,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PORYGON2,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.MASQUERAIN,e.SABLEYE,e.MAWILE,e.CACNEA,e.CACTURNE,e.KECLEON,e.SHUPPET,e.BANETTE,e.ABSOL,e.GLALIE,e.AMBIPOM,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.BONSLY,e.SPIRITOMB,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.PORYGON_Z,e.ROTOM,e.UXIE,e.DARKRAI,e.ARCEUS,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.FOONGUS,e.AMOONGUSS,e.STUNFISK,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.TORNADUS,e.THUNDURUS,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.SALANDIT,e.SALAZZLE,e.ORANGURU,e.NIHILEGO,e.PHEROMOSA,e.MARSHADOW,e.BLACEPHALON,e.NICKIT,e.THIEVUL,e.SINISTEA,e.POLTEAGEIST,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.MR_RIME,e.MORPEKO,e.DURALUDON,e.SPECTRIER,e.MEOWSCARADA,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.TOEDSCOOL,e.TOEDSCRUEL,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FARIGIRAF,e.KINGAMBIT,e.WO_CHIEN,e.POLTCHAGEIST,e.SINISTCHA,e.ARCHALUDON,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"shadow"],e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.ROUND]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.MELTAN,e.MELMETAL,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.NICKIT,e.THIEVUL,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.CHEWTLE,e.DREDNAW,e.YAMPER,e.BOLTUND,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SIZZLIPEDE,e.CENTISKORCH,e.CLOBBOPUS,e.GRAPPLOCT,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.MR_RIME,e.RUNERIGUS,e.MILCERY,e.ALCREMIE,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.GALAR_YAMASK,e.GALAR_STUNFISK],[t.ECHOED_VOICE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SPEAROW,e.FEAROW,e.PIKACHU,e.RAICHU,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.CUBONE,e.MAROWAK,e.CHANSEY,e.JYNX,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.POLITOED,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PHANPY,e.DONPHAN,e.SMOOCHUM,e.MILTANK,e.BLISSEY,e.LUGIA,e.HO_OH,e.CELEBI,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SKITTY,e.DELCATTY,e.PLUSLE,e.MINUN,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.SWABLU,e.ALTARIA,e.CHIMECHO,e.ABSOL,e.SPHEAL,e.SEALEO,e.WALREIN,e.RAYQUAZA,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.MISMAGIUS,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.HAPPINY,e.CHATOT,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PURRLOIN,e.LIEPARD,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ELGYEM,e.BEHEEYEM,e.CUBCHOO,e.BEARTIC,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.MELOETTA,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.AMAURA,e.AURORUS,e.SYLVEON,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.COMFEY,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NIHILEGO,e.PHEROMOSA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.ZERAORA,e.ARCTOZOLT,e.LECHONK,e.OINKOLOGNE,e.TANDEMAUS,e.MAUSHOLD,e.CETODDLE,e.CETITAN,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.STORED_POWER]:[e.CLEFAIRY,e.CLEFABLE,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.CHANSEY,e.MR_MIME,e.JYNX,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.ESPEON,e.UMBREON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.DUNSPARCE,e.STANTLER,e.SMOOCHUM,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.CLAYDOL,e.CHIMECHO,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.HAPPINY,e.SPIRITOMB,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MANAPHY,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.SYLVEON,e.KLEFKI,e.DIANCIE,e.PRIMARINA,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.NECROZMA,e.MAGEARNA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.CERULEDGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.DUDUNSPARCE,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.MUNKIDORI,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ETERNAL_FLOETTE,e.ALOLA_NINETALES,e.ALOLA_EXEGGUTOR,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.ALLY_SWITCH]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PONYTA,e.RAPIDASH,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.MAROWAK,e.CHANSEY,e.STARMIE,e.MR_MIME,e.JYNX,e.PORYGON,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.FORRETRESS,e.PORYGON2,e.TYROGUE,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SHEDINJA,e.SABLEYE,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIAS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.WORMADAM,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.SPIRITOMB,e.MAGNEZONE,e.TOGEKISS,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.MUNNA,e.MUSHARNA,e.ZEBSTRIKA,e.WOOBAT,e.SWOOBAT,e.AUDINO,e.YAMASK,e.COFAGRIGUS,e.ARCHEN,e.ARCHEOPS,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.KLANG,e.KLINKLANG,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.MIENFOO,e.MIENSHAO,e.GOLETT,e.GOLURK,e.MELOETTA,e.GENESECT,e.BRAIXEN,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.INKAY,e.MALAMAR,e.HELIOPTILE,e.HELIOLISK,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.HOOPA,e.CUTIEFLY,e.RIBOMBEE,e.COMFEY,e.ORANGURU,e.BRUXISH,e.DHELMISE,e.TAPU_LELE,e.NIHILEGO,e.NECROZMA,e.NAGANADEL,e.STAKATAKA,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.DOTTLER,e.ORBEETLE,e.SINISTEA,e.POLTEAGEIST,e.MR_RIME,e.RUNERIGUS,e.INDEEDEE,e.DRAKLOAK,e.DRAGAPULT,e.CALYREX,e.SPRIGATITO,e.ARMAROUGE,e.CERULEDGE,e.FLITTLE,e.GREAVARD,e.IRON_LEAVES,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_YAMASK],[t.SCALD]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.GYARADOS,e.VAPOREON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.RAIKOU,e.SUICUNE,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.AZURILL,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.FINNEON,e.LUMINEON,e.MANTYKE,e.PHIONE,e.MANAPHY,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.STUNFISK,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOODRA,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.WIMPOD,e.GOLISOPOD,e.BRUXISH,e.TAPU_FINI,e.INTELEON,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.SIZZLIPEDE,e.CENTISKORCH,e.CURSOLA,e.PINCURCHIN,e.DRACOVISH,e.DRAKLOAK,e.DRAGAPULT,e.WALKING_WAKE,e.POLTCHAGEIST,e.SINISTCHA,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_STUNFISK,[e.URSHIFU,"rapid-strike"]],[t.HEX]:[e.NIDOQUEEN,e.NIDOKING,e.VULPIX,e.NINETALES,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.HYPNO,e.MEWTWO,e.MEW,e.SPINARAK,e.ARIADOS,e.CROBAT,e.MURKROW,e.MISDREAVUS,e.DUNSPARCE,e.QWILFISH,e.SHIFTRY,e.SHEDINJA,e.SABLEYE,e.BALTOY,e.CLAYDOL,e.CASTFORM,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.ABSOL,e.SNORUNT,e.GLALIE,e.VESPIQUEN,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.SPIRITOMB,e.GALLADE,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.ARCEUS,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.ZORUA,e.ZOROARK,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.EELEKTROSS,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.DELPHOX,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.TOXAPEX,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.NIHILEGO,e.MARSHADOW,e.NAGANADEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.PINCURCHIN,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.ESPATHRA,e.GREAVARD,e.HOUNDSTONE,e.DUDUNSPARCE,e.BRUTE_BONNET,e.FLUTTER_MANE,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.IRON_VALIANT,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.FEZANDIPITI,e.PECHARUNT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.MAROWAK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_YAMASK,[e.CALYREX,"shadow"],e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.SKY_DROP]:[e.CHARIZARD,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.SKARMORY,e.LUGIA,e.HO_OH,e.PELIPPER,e.RAYQUAZA,e.RUFFLET,e.BRAVIARY,e.TORNADUS,e.THUNDURUS,e.HAWLUCHA,e.YVELTAL,e.VIKAVOLT,e.TAPU_KOKO,e.LUNALA,e.NAGANADEL],[t.INCINERATE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.GRIMER,e.MUK,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MAGMAR,e.TAUROS,e.GYARADOS,e.FLAREON,e.AERODACTYL,e.SNORLAX,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.SLOWKING,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.REMORAID,e.OCTILLERY,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.BLISSEY,e.ENTEI,e.HO_OH,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.POOCHYENA,e.MIGHTYENA,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.SABLEYE,e.MAWILE,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.FLYGON,e.ALTARIA,e.ZANGOOSE,e.SOLROCK,e.CASTFORM,e.KECLEON,e.ABSOL,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.HAPPINY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.LICKILICKY,e.RHYPERIOR,e.MAGMORTAR,e.TOGEKISS,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.DARKRAI,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.AUDINO,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.GOODRA,e.PUMPKABOO,e.GOURGEIST,e.VOLCANION,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.BLACEPHALON,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.DUDUNSPARCE,e.CHI_YU,e.ROARING_MOON,e.GOUGING_FIRE,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_SLOWKING,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.QUASH]:[e.NIDOQUEEN,e.NIDOKING,e.KINGLER,e.MEW,e.MURKROW,e.SLOWKING,e.KINGDRA,e.RAIKOU,e.ENTEI,e.SUICUNE,e.SLAKING,e.SABLEYE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.VESPIQUEN,e.HONCHKROW,e.SPIRITOMB,e.ARCEUS,e.PANCHAM,e.PANGORO,e.HOOPA,e.INCINEROAR,e.ORICORIO,e.ORANGURU,e.PALOSSAND,e.PYUKUMUKU,e.KOMALA,e.BLACEPHALON,e.HATENNA,e.MORPEKO,e.TINKATINK,e.IRON_LEAVES,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK],[t.ACROBATICS]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BUTTERFREE,e.BEEDRILL,e.ZUBAT,e.GOLBAT,e.VENOMOTH,e.MANKEY,e.PRIMEAPE,e.FARFETCHD,e.SCYTHER,e.ZAPDOS,e.MOLTRES,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.CROBAT,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.MURKROW,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.BEAUTIFLY,e.DUSTOX,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.LUNATONE,e.SOLROCK,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.STARLY,e.STARAVIA,e.STARAPTOR,e.MOTHIM,e.VESPIQUEN,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.HONCHKROW,e.FINNEON,e.LUMINEON,e.MANTYKE,e.GLISCOR,e.UXIE,e.MESPRIT,e.AZELF,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.WOOBAT,e.SWOOBAT,e.ARCHEN,e.ARCHEOPS,e.SWANNA,e.EMOLGA,e.ALOMOMOLA,e.EELEKTRIK,e.EELEKTROSS,e.CRYOGONAL,e.MIENFOO,e.MIENSHAO,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.TORNADUS,e.THUNDURUS,e.MELOETTA,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.SALAZZLE,e.TSAREENA,e.COMFEY,e.PASSIMIAN,e.MINIOR,e.KOMALA,e.TAPU_KOKO,e.LUNALA,e.CELESTEELA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.INTELEON,e.THIEVUL,e.FLAPPLE,e.CRAMORANT,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.KLEAVOR,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WATTREL,e.KILOWATTREL,e.SHROODLE,e.GRAFAIAI,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.CYCLIZAR,e.FLAMIGO,e.ANNIHILAPE,e.SLITHER_WING,e.IRON_BUNDLE,e.IRON_JUGULIS,e.IRON_MOTH,e.CHIEN_PAO,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.FEZANDIPITI,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.RETALIATE]:[e.RATTATA,e.RATICATE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.SENTRET,e.FURRET,e.TOGETIC,e.AIPOM,e.ESPEON,e.UMBREON,e.MURKROW,e.GIRAFARIG,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.HOUNDOUR,e.HOUNDOOM,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MEDITITE,e.MEDICHAM,e.CARVANHA,e.SHARPEDO,e.SPINDA,e.CACTURNE,e.ZANGOOSE,e.SEVIPER,e.CRAWDAUNT,e.CASTFORM,e.KECLEON,e.ABSOL,e.LATIAS,e.LATIOS,e.MONFERNO,e.INFERNAPE,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.SPIRITOMB,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.REGIGIGAS,e.DARKRAI,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.LEAVANNY,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.DURANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.INKAY,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.ZYGARDE,e.PASSIMIAN,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.DUBWOOL,e.CLOBBOPUS,e.GRAPPLOCT,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.MASCHIFF,e.KINGAMBIT,e.IRON_LEAVES,e.OGERPON,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT],[t.WATER_PLEDGE]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PANPOUR,e.SIMIPOUR,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.SILVALLY,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.HISUI_SAMUROTT],[t.FIRE_PLEDGE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.TEPIG,e.PIGNITE,e.EMBOAR,e.PANSEAR,e.SIMISEAR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.SILVALLY,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.HISUI_TYPHLOSION],[t.GRASS_PLEDGE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.SNIVY,e.SERVINE,e.SERPERIOR,e.PANSAGE,e.SIMISAGE,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.SILVALLY,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.HISUI_DECIDUEYE],[t.VOLT_SWITCH]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.FORRETRESS,e.ELEKID,e.RAIKOU,e.NOSEPASS,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PROBOPASS,e.ROTOM,e.BLITZLE,e.ZEBSTRIKA,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.COBALION,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.STRUGGLE_BUG]:[e.BUTTERFREE,e.BEEDRILL,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.SCYTHER,e.PINSIR,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.VOLBEAT,e.ILLUMISE,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.ANORITH,e.ARMALDO,e.STARAPTOR,e.KRICKETOT,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.DWEBBLE,e.CRUSTLE,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.GENESECT,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.WIMPOD,e.GOLISOPOD,e.BLIPBUG,e.DOTTLER,e.ORBEETLE,e.SIZZLIPEDE,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.RELLOR,e.RABSCA,e.IRON_MOTH],[t.BULLDOZE]:[e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.EKANS,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.SLOWPOKE,e.SLOWBRO,e.ONIX,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.AERODACTYL,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.SHUCKLE,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.MANTINE,e.PHANPY,e.DONPHAN,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.SCEPTILE,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.BRELOOM,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ALTARIA,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.BALTOY,e.CLAYDOL,e.CRADILY,e.ARMALDO,e.MILOTIC,e.DUSCLOPS,e.TROPIUS,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.RELICANTH,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.TURTWIG,e.GROTLE,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.BIBAREL,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.SHELLOS,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.MANTYKE,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.GLISCOR,e.MAMOSWINE,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.ARCEUS,e.PIGNITE,e.EMBOAR,e.SAMUROTT,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DRILBUR,e.EXCADRILL,e.CONKELDURR,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.DWEBBLE,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.DEERLING,e.SAWSBUCK,e.FERROTHORN,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.BINACLE,e.BARBARACLE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.PHANTUMP,e.TREVENANT,e.BERGMITE,e.AVALUGG,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.SOLGALEO,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CURSOLA,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.GLASTRIER,e.SPECTRIER,e.WYRDEER,e.URSALUNA,e.LECHONK,e.OINKOLOGNE,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.KORAIDON,e.GOUGING_FIRE,e.IRON_BOULDER,e.IRON_CROWN,[e.WORMADAM,"sandy"],e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,e.HISUI_SAMUROTT,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.FROST_BREATH]:[e.DEWGONG,e.CLOYSTER,e.JYNX,e.LAPRAS,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.REGICE,e.SNOVER,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.DRAGON_TAIL]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.BLASTOISE,e.ARBOK,e.NIDOQUEEN,e.NIDOKING,e.ONIX,e.LICKITUNG,e.RHYDON,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.MEGANIUM,e.FERALIGATR,e.AMPHAROS,e.SLOWKING,e.STEELIX,e.TYRANITAR,e.LUGIA,e.AGGRON,e.VIBRAVA,e.FLYGON,e.SEVIPER,e.MILOTIC,e.TROPIUS,e.BAGON,e.SHELGON,e.SALAMENCE,e.GROUDON,e.RAYQUAZA,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.LICKILICKY,e.RHYPERIOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.ARCEUS,e.SERPERIOR,e.SAMUROTT,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ARCHEOPS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.GUZZLORD,e.NAGANADEL,e.CHEWTLE,e.APPLETUN,e.DRACOZOLT,e.DURALUDON,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ETERNATUS,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_JUGULIS,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.WORK_UP]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.SANDSHREW,e.SANDSLASH,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.FARFETCHD,e.DODUO,e.DODRIO,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.CHANSEY,e.KANGASKHAN,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.AIPOM,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.HERACROSS,e.TEDDIURSA,e.URSARING,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.MILTANK,e.BLISSEY,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.ZIGZAGOON,e.LINOONE,e.TAILLOW,e.SWELLOW,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.SKITTY,e.DELCATTY,e.MEDITITE,e.MEDICHAM,e.SPINDA,e.ZANGOOSE,e.CASTFORM,e.KECLEON,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.HAPPINY,e.CHATOT,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.LICKILICKY,e.TOGEKISS,e.LEAFEON,e.GLACEON,e.GALLADE,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.MIENFOO,e.MIENSHAO,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.SYLVEON,e.HAWLUCHA,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TYPE_NULL,e.SILVALLY,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_BULU,e.SOLGALEO,e.LUNALA,e.BUZZWOLE,e.MARSHADOW,e.ZERAORA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CLOBBOPUS,e.GRAPPLOCT,e.OBSTAGOON,e.PERRSERKER,e.SIRFETCHD,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.IRON_JUGULIS,e.IRON_LEAVES,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,[e.LYCANROC,"dusk"],e.GALAR_MEOWTH,e.GALAR_FARFETCHD,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN,e.PALDEA_TAUROS],[t.ELECTROWEB]:[e.CATERPIE,e.METAPOD,e.BUTTERFREE,e.WEEDLE,e.KAKUNA,e.BEEDRILL,e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.PORYGON,e.MEW,e.SPINARAK,e.ARIADOS,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.PORYGON2,e.ELEKID,e.WURMPLE,e.SILCOON,e.BEAUTIFLY,e.CASCOON,e.DUSTOX,e.PLUSLE,e.MINUN,e.BURMY,e.WORMADAM,e.MOTHIM,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.PORYGON_Z,e.ROTOM,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.STUNFISK,e.THUNDURUS,e.GENESECT,e.SPEWPA,e.VIVILLON,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.PASSIMIAN,e.TOGEDEMARU,e.TAPU_KOKO,e.PHEROMOSA,e.XURKITREE,e.MAGEARNA,e.ZERAORA,e.MORPEKO,e.REGIELEKI,e.SPIDOPS,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.RAGING_BOLT,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM],[t.WILD_CHARGE]:[e.RATTATA,e.RATICATE,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.ELECTABUZZ,e.TAUROS,e.JOLTEON,e.SNORLAX,e.ZAPDOS,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.CHINCHOU,e.LANTURN,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.DUNSPARCE,e.SNUBBULL,e.GRANBULL,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.SLAKING,e.SKITTY,e.DELCATTY,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.SPINDA,e.RAYQUAZA,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ARCEUS,e.VICTINI,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.BLITZLE,e.ZEBSTRIKA,e.AUDINO,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.BOUFFALANT,e.LARVESTA,e.VOLCARONA,e.THUNDURUS,e.ZEKROM,e.BUNNELBY,e.DIGGERSBY,e.LITLEO,e.PYROAR,e.SKIDDO,e.GOGOAT,e.FURFROU,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.NOIBAT,e.NOIVERN,e.VOLCANION,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.SOLGALEO,e.XURKITREE,e.ZERAORA,e.GREEDENT,e.WOOLOO,e.DUBWOOL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.ZACIAN,e.ZAMAZENTA,e.REGIELEKI,e.WYRDEER,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MABOSSTIFF,e.CYCLIZAR,e.DUDUNSPARCE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.KORAIDON,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_RAICHU,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.PALDEA_TAUROS],[t.DRILL_RUN]:[e.BEEDRILL,e.SPEAROW,e.FEAROW,e.SANDSLASH,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.DODRIO,e.SEEL,e.DEWGONG,e.CLOYSTER,e.ONIX,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.LAPRAS,e.MEW,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.STEELIX,e.SKARMORY,e.DELIBIRD,e.HITMONTOP,e.BALTOY,e.CLAYDOL,e.RHYPERIOR,e.SAMUROTT,e.DRILBUR,e.EXCADRILL,e.KARRABLAST,e.ESCAVALIER,[e.LYCANROC,"midday","dusk"],e.GOLISOPOD,e.PHEROMOSA,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.BOMBIRDIER,e.VELUZA,e.DUDUNSPARCE,e.ALOLA_SANDSLASH,e.GALAR_RAPIDASH,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.RAZOR_SHELL]:[e.SLOWBRO,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.KABUTOPS,e.MEW,e.SLOWKING,e.CORPHISH,e.CRAWDAUNT,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.CARRACOSTA,e.ESCAVALIER,e.BINACLE,e.BARBARACLE,e.GOLISOPOD,e.DREDNAW,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_SAMUROTT],[t.HEAT_CRASH]:[e.CHARIZARD,e.ARCANINE,e.RHYDON,e.SNORLAX,e.MEW,e.SLUGMA,e.MAGCARGO,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GROUDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.REGIGIGAS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.GOLURK,e.RESHIRAM,e.VOLCANION,e.INCINEROAR,e.TURTONATOR,e.SOLGALEO,e.GUZZLORD,e.STAKATAKA,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.SIZZLIPEDE,e.CENTISKORCH,e.STONJOURNER,e.COPPERAJAH,e.SKELEDIRGE,e.SLITHER_WING,e.KORAIDON,e.GOUGING_FIRE,e.TERAPAGOS,e.HISUI_ARCANINE],[t.TAIL_SLAP]:[e.VULPIX,e.NINETALES,e.MEW,e.AIPOM,e.ZIGZAGOON,e.LINOONE,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.MINCCINO,e.CINCCINO,e.MEOWSTIC,[e.LYCANROC,"midday","dusk"],e.SKWOVET,e.GREEDENT,e.NICKIT,e.THIEVUL,e.ZACIAN,e.ZAMAZENTA,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES],[t.HURRICANE]:[e.CHARIZARD,e.BUTTERFREE,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.GYARADOS,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEWTWO,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.MURKROW,e.MANTINE,e.KINGDRA,e.LUGIA,e.SHIFTRY,e.TAILLOW,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.SWABLU,e.ALTARIA,e.CASTFORM,e.TROPIUS,e.SALAMENCE,e.RAYQUAZA,e.STARLY,e.STARAVIA,e.STARAPTOR,e.VESPIQUEN,e.HONCHKROW,e.ARCEUS,e.UNFEZANT,e.WHIMSICOTT,e.DUCKLETT,e.SWANNA,e.RUFFLET,e.BRAVIARY,e.MANDIBUZZ,e.VOLCARONA,e.TORNADUS,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.DECIDUEYE,e.ORICORIO,e.DRAMPA,e.CORVISQUIRE,e.CORVIKNIGHT,e.SANDACONDA,e.CRAMORANT,e.FROSMOTH,e.QUAQUAVAL,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.IRON_MOTH,e.ROARING_MOON,e.WALKING_WAKE,e.FEZANDIPITI,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_LILLIGANT,e.HISUI_BRAVIARY],[t.SNARL]:[e.EKANS,e.ARBOK,e.VULPIX,e.NINETALES,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.MEW,e.UMBREON,e.MURKROW,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.SABLEYE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SPOINK,e.GRUMPIG,e.SEVIPER,e.CRAWDAUNT,e.CHIMECHO,e.ABSOL,e.SHINX,e.LUXIO,e.LUXRAY,e.FLOATZEL,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.WEAVILE,e.DARKRAI,e.ARCEUS,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.SCRAGGY,e.SCRAFTY,e.ZORUA,e.ZOROARK,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.VULLABY,e.MANDIBUZZ,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.THUNDURUS,e.LITLEO,e.PYROAR,e.PANGORO,e.FURFROU,e.YVELTAL,e.INCINEROAR,e.ROCKRUFF,e.LYCANROC,e.GOLISOPOD,e.SILVALLY,e.DRAMPA,e.TAPU_BULU,e.SOLGALEO,e.GUZZLORD,e.NAGANADEL,e.ZERAORA,e.RILLABOOM,e.CINDERACE,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.OBSTAGOON,e.MORPEKO,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.BOMBIRDIER,e.GREAVARD,e.HOUNDSTONE,e.KINGAMBIT,e.IRON_JUGULIS,e.IRON_THORNS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.OKIDOGI,e.ARCHALUDON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.BLOODMOON_URSALUNA,[e.URSHIFU,"single-strike"]],[t.PHANTOM_FORCE]:[e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.DRIFLOON,e.DRIFBLIM,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.GIRATINA,e.ARCEUS,e.COFAGRIGUS,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.GOURGEIST,e.YVELTAL,e.HOOPA,e.DECIDUEYE,e.MIMIKYU,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.RUNERIGUS,e.DRAKLOAK,e.DRAGAPULT,e.SPECTRIER,e.BASCULEGION,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.GREAVARD,e.HOUNDSTONE,e.ANNIHILAPE,e.FLUTTER_MANE,e.POLTCHAGEIST,e.SINISTCHA,e.PECHARUNT,[e.CALYREX,"shadow"],e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.PETAL_BLIZZARD]:[e.VENUSAUR,e.GLOOM,e.VILEPLUME,e.MEW,e.MEGANIUM,e.BELLOSSOM,e.SUNFLORA,e.SHIFTRY,e.ROSELIA,e.TROPIUS,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SHAYMIN,e.SNIVY,e.SERVINE,e.SERPERIOR,e.LILLIGANT,e.MARACTUS,e.SAWSBUCK,e.FLABEBE,e.FLOETTE,e.FLORGES,e.FOMANTIS,e.LURANTIS,e.STEENEE,e.TSAREENA,e.COMFEY,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.ARBOLIVA,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.DISARMING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CHANSEY,e.MEW,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.BLISSEY,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.WHISMUR,e.SKITTY,e.DELCATTY,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.MILOTIC,e.CHIMECHO,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.HAPPINY,e.GALLADE,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.AUDINO,e.DUCKLETT,e.SWANNA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.TOGEDEMARU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.INDEEDEE,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.FLITTLE,e.ESPATHRA,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.FEZANDIPITI,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.DRAINING_KISS]:[e.BUTTERFREE,e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DROWZEE,e.HYPNO,e.JYNX,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.MARILL,e.AZUMARILL,e.ESPEON,e.MISDREAVUS,e.SMOOCHUM,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.MAWILE,e.ILLUMISE,e.MILOTIC,e.CHIMECHO,e.GOREBYSS,e.LUVDISC,e.LATIAS,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.TOGEKISS,e.GALLADE,e.FROSLASS,e.UXIE,e.MESPRIT,e.AZELF,e.AUDINO,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MIMIKYU,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MILCERY,e.ALCREMIE,e.INDEEDEE,e.SPECTRIER,e.CALYREX,e.ENAMORUS,e.DACHSBUN,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FINIZEN,e.PALAFIN,e.FLUTTER_MANE,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE],[t.GRASSY_TERRAIN]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.CHIKORITA,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNKERN,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.SHROOMISH,e.BRELOOM,e.CACNEA,e.CACTURNE,e.CRADILY,e.TROPIUS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.TANGROWTH,e.ARCEUS,e.SNIVY,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.FOONGUS,e.AMOONGUSS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.TAPU_BULU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.FLAPPLE,e.APPLETUN,e.ZARUDE,e.CALYREX,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.BRUTE_BONNET,e.WO_CHIEN,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.ETERNAL_FLOETTE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.MISTY_TERRAIN]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MR_MIME,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MAWILE,e.MIME_JR,e.GALLADE,e.ARCEUS,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.ALOMOMOLA,e.FLABEBE,e.FLOETTE,e.FLORGES,[e.MEOWSTIC,"male"],e.SPRITZEE,e.AROMATISSE,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.VOLCANION,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.MIMIKYU,e.TAPU_FINI,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.ZACIAN,e.ENAMORUS,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.FIDOUGH,e.DACHSBUN,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_VALIANT,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME],[t.PLAY_ROUGH]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.GROWLITHE,e.ARCANINE,e.PONYTA,e.RAPIDASH,e.DEWGONG,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SENTRET,e.FURRET,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SNUBBULL,e.GRANBULL,e.TEDDIURSA,e.URSARING,e.PHANPY,e.DONPHAN,e.MILTANK,e.POOCHYENA,e.MIGHTYENA,e.LINOONE,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.SKITTY,e.DELCATTY,e.MAWILE,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.SWABLU,e.ALTARIA,e.ABSOL,e.JIRACHI,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.CHERRIM,e.BUNEARY,e.LOPUNNY,e.GLAMEOW,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.TOGEKISS,e.UXIE,e.MESPRIT,e.AZELF,e.SHAYMIN,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.WHIMSICOTT,e.MINCCINO,e.CINCCINO,e.DEERLING,e.SAWSBUCK,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.MELOETTA,e.SKIDDO,e.GOGOAT,e.ESPURR,e.MEOWSTIC,e.SWIRLIX,e.SLURPUFF,e.SKRELP,e.DRAGALGE,e.TYRUNT,e.TYRANTRUM,e.SYLVEON,e.DEDENNE,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.KOMALA,e.MIMIKYU,e.DRAMPA,e.TAPU_LELE,e.TAPU_FINI,e.MAGEARNA,e.ZERAORA,e.NICKIT,e.THIEVUL,e.YAMPER,e.BOLTUND,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.CUFANT,e.COPPERAJAH,e.ZACIAN,e.ZAMAZENTA,e.URSALUNA,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.GREAT_TUSK,e.SCREAM_TAIL,e.IRON_BUNDLE,e.IRON_HANDS,e.FEZANDIPITI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.GALAR_MEOWTH,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.HISUI_TYPHLOSION],[t.CONFIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.PYUKUMUKU,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.BLACEPHALON,e.ZERAORA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE],[t.MYSTICAL_FIRE]:[e.CHARIZARD,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.PONYTA,e.RAPIDASH,e.MR_MIME,e.FLAREON,e.MOLTRES,e.MEW,e.TOGEPI,e.TOGETIC,e.HO_OH,e.RALTS,e.GARDEVOIR,e.LATIAS,e.LATIOS,e.MISMAGIUS,e.MAGMORTAR,e.TOGEKISS,e.VICTINI,e.DARMANITAN,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.VOLCARONA,e.RESHIRAM,e.DELPHOX,e.SYLVEON,e.PUMPKABOO,e.GOURGEIST,e.DIANCIE,e.SOLGALEO,e.BLACEPHALON,e.CENTISKORCH,e.HATENNA,e.HATTREM,e.HATTERENE,e.ALCREMIE,e.INDEEDEE,e.ETERNATUS,e.ENAMORUS,e.ARMAROUGE,e.FLUTTER_MANE,e.GALAR_PONYTA,e.GALAR_RAPIDASH],[t.EERIE_IMPULSE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.JOLTEON,e.PORYGON,e.ZAPDOS,e.MEW,e.LANTURN,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.WOOPER,e.QUAGSIRE,e.PORYGON2,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.BALTOY,e.CLAYDOL,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.PORYGON_Z,e.ROTOM,e.EMOLGA,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOLISK,e.DEDENNE,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.MAGEARNA,e.BOLTUND,e.TOXTRICITY,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.VENOM_DRENCH]:[e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.ZUBAT,e.GOLBAT,e.TENTACRUEL,e.KOFFING,e.WEEZING,e.MEW,e.CROBAT,e.QWILFISH,e.ROSERADE,e.STUNKY,e.SKUNTANK,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WOOBAT,e.SWOOBAT,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.TRUBBISH,e.GARBODOR,e.ACCELGOR,e.SKRELP,e.DRAGALGE,e.PHANTUMP,e.TREVENANT,e.MAREANIE,e.TOXAPEX,e.SALANDIT,e.SALAZZLE,e.PYUKUMUKU,e.NIHILEGO,e.POIPOLE,e.NAGANADEL,e.PINCURCHIN,e.ETERNATUS,e.GALAR_WEEZING,e.GALAR_SLOWKING,[e.TOXTRICITY,"low-key"]],[t.ELECTRIC_TERRAIN]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.VOLTORB,e.ELECTRODE,e.CHANSEY,e.JOLTEON,e.ZAPDOS,e.MEW,e.PICHU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BLISSEY,e.RAIKOU,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.PACHIRISU,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.ARCEUS,e.KLINKLANG,e.EELEKTRIK,e.EELEKTROSS,e.STUNFISK,e.THUNDURUS,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.TAPU_KOKO,e.XURKITREE,e.ZERAORA,e.MELMETAL,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.REGIELEKI,e.PAWMI,e.PAWMO,e.PAWMOT,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_VOLTORB,e.HISUI_ELECTRODE],[t.DAZZLING_GLEAM]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.ABRA,e.KADABRA,e.ALAKAZAM,e.TENTACOOL,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.DROWZEE,e.HYPNO,e.CHANSEY,e.STARYU,e.STARMIE,e.MR_MIME,e.MEW,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.SUNFLORA,e.ESPEON,e.MISDREAVUS,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.BLISSEY,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.NOSEPASS,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.SPOINK,e.GRUMPIG,e.SWABLU,e.ALTARIA,e.BALTOY,e.CLAYDOL,e.SHUPPET,e.BANETTE,e.CHIMECHO,e.JIRACHI,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.MISMAGIUS,e.CHINGLING,e.MIME_JR,e.FINNEON,e.LUMINEON,e.TOGEKISS,e.GALLADE,e.PROBOPASS,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.MUNNA,e.MUSHARNA,e.AUDINO,e.COTTONEE,e.WHIMSICOTT,e.SIGILYPH,e.MINCCINO,e.CINCCINO,e.FRILLISH,e.JELLICENT,e.MELOETTA,e.DELPHOX,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.DEDENNE,e.CARBINK,e.KLEFKI,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.CUTIEFLY,e.RIBOMBEE,e.MORELULL,e.SHIINOTIC,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.MINIOR,e.MIMIKYU,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.LUNALA,e.NIHILEGO,e.XURKITREE,e.MAGEARNA,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.MR_RIME,e.MILCERY,e.ALCREMIE,e.FROSMOTH,e.INDEEDEE,e.ZACIAN,e.ZAMAZENTA,e.ENAMORUS,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.TOEDSCOOL,e.TOEDSCRUEL,e.RABSCA,e.ESPATHRA,e.GLIMMET,e.GLIMMORA,e.FARIGIRAF,e.SCREAM_TAIL,e.FLUTTER_MANE,e.IRON_MOTH,e.GHOLDENGO,e.IRON_VALIANT,e.MIRAIDON,e.FEZANDIPITI,e.TERAPAGOS,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ETERNAL_FLOETTE,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_WEEZING,e.GALAR_MR_MIME,e.HISUI_BRAVIARY],[t.INFESTATION]:[e.BUTTERFREE,e.BEEDRILL,e.EKANS,e.ARBOK,e.ODDISH,e.GLOOM,e.VILEPLUME,e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GRIMER,e.MUK,e.GASTLY,e.HAUNTER,e.GENGAR,e.EXEGGCUTE,e.EXEGGUTOR,e.KOFFING,e.WEEZING,e.TANGELA,e.MR_MIME,e.MEW,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.WOOPER,e.QUAGSIRE,e.SHUCKLE,e.SLUGMA,e.MAGCARGO,e.BEAUTIFLY,e.DUSTOX,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.SEVIPER,e.LILEEP,e.CRADILY,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.HUNTAIL,e.GOREBYSS,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.MIME_JR,e.SPIRITOMB,e.SKORUPI,e.DRAPION,e.CARNIVINE,e.TANGROWTH,e.DUSKNOIR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.YAMASK,e.COFAGRIGUS,e.TRUBBISH,e.GARBODOR,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.KARRABLAST,e.ESCAVALIER,e.JOLTIK,e.GALVANTULA,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.DURANT,e.GENESECT,e.VIVILLON,e.PANGORO,e.BINACLE,e.BARBARACLE,e.GOOMY,e.SLIGGOO,e.GOODRA,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.SANDYGAST,e.PALOSSAND,e.MIMIKYU,e.STAKATAKA,e.BLIPBUG,e.FROSMOTH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.BRAMBLIN,e.BRAMBLEGHAST,e.DIPPLIN,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR],[t.POWER_UP_PUNCH]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.POLIWHIRL,e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.GRIMER,e.MUK,e.GENGAR,e.DROWZEE,e.HYPNO,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.RHYDON,e.CHANSEY,e.KANGASKHAN,e.MR_MIME,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.LEDYBA,e.LEDIAN,e.FLAAFFY,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.SNUBBULL,e.GRANBULL,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.DELIBIRD,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.COMBUSKEN,e.BLAZIKEN,e.MARSHTOMP,e.SWAMPERT,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.SABLEYE,e.MAWILE,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.VOLBEAT,e.ILLUMISE,e.GULPIN,e.SWALOT,e.GRUMPIG,e.SPINDA,e.FLYGON,e.CACNEA,e.CACTURNE,e.ZANGOOSE,e.KECLEON,e.DUSCLOPS,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.JIRACHI,e.DEOXYS,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.KRICKETUNE,e.CRANIDOS,e.RAMPARDOS,e.BUIZEL,e.FLOATZEL,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.LICKILICKY,e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR,e.GALLADE,e.DUSKNOIR,e.UXIE,e.MESPRIT,e.AZELF,e.REGIGIGAS,e.DARKRAI,e.VICTINI,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SAWK,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.GOTHITELLE,e.REUNICLUS,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.HEATMOR,e.MELOETTA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.PANCHAM,e.PANGORO,e.MEOWSTIC,e.BINACLE,e.BARBARACLE,e.HAWLUCHA,e.PHANTUMP,e.TREVENANT,e.HOOPA,e.CRABRAWLER,e.CRABOMINABLE,e.BUZZWOLE,e.ZERAORA,e.TOXEL,e.TOXTRICITY,e.CLOBBOPUS,e.GRAPPLOCT,e.GRIMMSNARL,e.URSALUNA,e.ANNIHILAPE,e.KINGAMBIT,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_MAROWAK,e.GALAR_DARUMAKA,e.GALAR_DARMANITAN],[t.DARKEST_LARIAT]:[e.POLIWRATH,e.MACHAMP,e.SNORLAX,e.MEW,e.SWAMPERT,e.ELECTIVIRE,e.DUSKNOIR,e.REGIGIGAS,e.KROOKODILE,e.GOLURK,e.PANGORO,e.INCINEROAR,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.MELMETAL,e.RILLABOOM,e.GRIMMSNARL,e.URSHIFU,e.ZARUDE],[t.HIGH_HORSEPOWER]:[e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.DUGTRIO,e.POLIWRATH,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.ONIX,e.KINGLER,e.RHYHORN,e.RHYDON,e.PINSIR,e.TAUROS,e.SNORLAX,e.MEW,e.SUDOWOODO,e.QUAGSIRE,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.HERACROSS,e.URSARING,e.SLUGMA,e.SWINUB,e.PILOSWINE,e.PHANPY,e.DONPHAN,e.MILTANK,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.NOSEPASS,e.AGGRON,e.NUMEL,e.CAMERUPT,e.BARBOACH,e.WHISCASH,e.GROUDON,e.TORTERRA,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.GLISCOR,e.MAMOSWINE,e.PROBOPASS,e.REGIGIGAS,e.PIGNITE,e.EMBOAR,e.ZEBSTRIKA,e.DRILBUR,e.EXCADRILL,e.GURDURR,e.CONKELDURR,e.KROOKODILE,e.SAWSBUCK,e.GOLURK,e.BOUFFALANT,e.TERRAKION,e.CHESNAUGHT,e.DIGGERSBY,e.GOGOAT,e.TYRANTRUM,e.AVALUGG,e.ZYGARDE,e.MUDBRAY,e.MUDSDALE,e.BEWEAR,e.TAPU_BULU,e.BUZZWOLE,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.GLASTRIER,e.WYRDEER,e.URSALUNA,e.OINKOLOGNE,e.KLAWF,e.REVAVROOM,e.ORTHWORM,e.CETODDLE,e.CETITAN,e.CLODSIRE,e.FARIGIRAF,e.GREAT_TUSK,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_THORNS,e.BAXCALIBUR,e.OKIDOGI,e.ALOLA_DUGTRIO,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.GALAR_PONYTA,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.BLOODMOON_URSALUNA],[t.SOLAR_BLADE]:[e.PONYTA,e.RAPIDASH,e.FARFETCHD,e.MEW,e.CELEBI,e.GROVYLE,e.SCEPTILE,e.NUZLEAF,e.SHIFTRY,e.TROPIUS,e.CHERRIM,e.TANGROWTH,e.LEAFEON,e.GALLADE,e.LILLIGANT,e.CRUSTLE,e.VIRIZION,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.DECIDUEYE,e.LURANTIS,e.TSAREENA,e.DHELMISE,e.KARTANA,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SIRFETCHD,e.ZACIAN,e.ZARUDE,e.CALYREX,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.CERULEDGE,e.WO_CHIEN,e.IRON_LEAVES,e.OGERPON,e.IRON_BOULDER,e.IRON_CROWN,e.GALAR_FARFETCHD,e.HISUI_LILLIGANT],[t.THROAT_CHOP]:[e.BEEDRILL,e.RATICATE,e.FEAROW,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.PARASECT,e.MEOWTH,e.PERSIAN,e.PRIMEAPE,e.POLIWRATH,e.MACHAMP,e.RAPIDASH,e.FARFETCHD,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.GOLDEEN,e.SEAKING,e.PINSIR,e.TAUROS,e.MEW,e.TYPHLOSION,e.ARIADOS,e.UMBREON,e.GLIGAR,e.QWILFISH,e.HERACROSS,e.SNEASEL,e.URSARING,e.CORSOLA,e.HOUNDOOM,e.STANTLER,e.RAIKOU,e.SCEPTILE,e.MIGHTYENA,e.LINOONE,e.SHIFTRY,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.VIBRAVA,e.FLYGON,e.ZANGOOSE,e.SEVIPER,e.BANETTE,e.ABSOL,e.DEOXYS,e.EMPOLEON,e.KRICKETUNE,e.LUXRAY,e.PURUGLY,e.STUNKY,e.SKUNTANK,e.DRAPION,e.TOXICROAK,e.CARNIVINE,e.WEAVILE,e.GLISCOR,e.GALLADE,e.DARKRAI,e.LIEPARD,e.SIMISAGE,e.SIMISEAR,e.SIMIPOUR,e.GIGALITH,e.AUDINO,e.SAWK,e.LEAVANNY,e.SCOLIPEDE,e.KROOKODILE,e.MARACTUS,e.SCRAFTY,e.ZOROARK,e.GALVANTULA,e.EELEKTRIK,e.EELEKTROSS,e.BEARTIC,e.BISHARP,e.BOUFFALANT,e.HEATMOR,e.HYDREIGON,e.PANGORO,e.MALAMAR,e.HAWLUCHA,e.HOOPA,e.INCINEROAR,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.NAGANADEL,e.ZERAORA,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXTRICITY,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.CURSOLA,e.SIRFETCHD,e.FALINKS,e.PINCURCHIN,e.ZARUDE,e.GLASTRIER,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.WIGLETT,e.WUGTRIO,e.FLAMIGO,e.CHIEN_PAO,e.TING_LU,e.ROARING_MOON,e.OGERPON,e.IRON_BOULDER,e.ALOLA_RATICATE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_RAPIDASH,e.GALAR_FARFETCHD,e.GALAR_ZAPDOS,e.GALAR_CORSOLA,e.GALAR_LINOONE,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice"]],[t.POLLEN_PUFF]:[e.BUTTERFREE,e.GLOOM,e.VILEPLUME,e.MEW,e.BELLOSSOM,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.CELEBI,e.VESPIQUEN,e.CHERUBI,e.CHERRIM,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.FOONGUS,e.AMOONGUSS,e.VIVILLON,e.FLABEBE,e.FLOETTE,e.FLORGES,e.CUTIEFLY,e.RIBOMBEE,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.COMFEY,e.GOSSIFLEUR,e.ELDEGOSS,e.CALYREX,e.MEOWSCARADA,e.ARBOLIVA,e.BRUTE_BONNET,e.WO_CHIEN,e.DIPPLIN,e.HYDRAPPLE,e.ETERNAL_FLOETTE,e.HISUI_LILLIGANT],[t.PSYCHIC_TERRAIN]:[e.ABRA,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.LUNATONE,e.SOLROCK,e.BALTOY,e.CLAYDOL,e.BRONZOR,e.BRONZONG,e.MIME_JR,e.GALLADE,e.CRESSELIA,e.ARCEUS,e.MUSHARNA,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.BEHEEYEM,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.MEOWSTIC,e.HOOPA,e.ORANGURU,e.BRUXISH,e.TAPU_LELE,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.ARMAROUGE,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_LEAVES,e.MUNKIDORI,e.ALOLA_RAICHU,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.LUNGE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODUO,e.DODRIO,e.MUK,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.HERACROSS,e.STANTLER,e.SURSKIT,e.MASQUERAIN,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.CACTURNE,e.KRICKETOT,e.KRICKETUNE,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.YANMEGA,e.GLISCOR,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.JOLTIK,e.EELEKTRIK,e.EELEKTROSS,e.LARVESTA,e.VOLCARONA,e.HAWLUCHA,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.BUZZWOLE,e.PHEROMOSA,e.SIZZLIPEDE,e.CENTISKORCH,e.FALINKS,e.SNOM,e.FROSMOTH,e.WYRDEER,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.LOKIX,e.TOEDSCOOL,e.TOEDSCRUEL,e.RELLOR,e.RABSCA,e.FLAMIGO,e.TATSUGIRI,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_MOTH],[t.SPEED_SWAP]:[e.RAICHU,e.ABRA,e.KADABRA,e.ALAKAZAM,e.PORYGON,e.MEWTWO,e.MEW,e.PORYGON2,e.BRONZOR,e.BRONZONG,e.PORYGON_Z,e.VICTINI,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.CUTIEFLY,e.RIBOMBEE,e.TAPU_LELE,e.PHEROMOSA,e.MAGEARNA,e.CALYREX,e.RABSCA,e.ALOLA_RAICHU],[t.SMART_STRIKE]:[e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.RAPIDASH,e.SEEL,e.DEWGONG,e.CLOYSTER,e.RHYHORN,e.RHYDON,e.GOLDEEN,e.SEAKING,e.TAUROS,e.LAPRAS,e.MEW,e.ARIADOS,e.TOGETIC,e.FORRETRESS,e.DUNSPARCE,e.HERACROSS,e.DONPHAN,e.AGGRON,e.RHYPERIOR,e.TOGEKISS,e.SAMUROTT,e.EXCADRILL,e.SCOLIPEDE,e.SAWSBUCK,e.ESCAVALIER,e.BOUFFALANT,e.COBALION,e.TERRAKION,e.VIRIZION,e.THUNDURUS,e.KELDEO,e.XERNEAS,e.TAPU_BULU,e.TAPU_FINI,e.CELESTEELA,e.KARTANA,e.NECROZMA,e.NAGANADEL,e.DREDNAW,e.FALINKS,e.GLASTRIER,e.OVERQWIL,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_LEAVES,e.GOUGING_FIRE,e.IRON_CROWN,e.GALAR_RAPIDASH,[e.CALYREX,"ice"],e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_SAMUROTT,e.PALDEA_TAUROS],[t.BRUTAL_SWING]:[e.CHARIZARD,e.BEEDRILL,e.EKANS,e.ARBOK,e.RAICHU,e.TENTACOOL,e.TENTACRUEL,e.FARFETCHD,e.ONIX,e.KINGLER,e.CUBONE,e.MAROWAK,e.LICKITUNG,e.RHYDON,e.SCYTHER,e.PINSIR,e.GYARADOS,e.AERODACTYL,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.SENTRET,e.FURRET,e.AMPHAROS,e.MARILL,e.AZUMARILL,e.STEELIX,e.SCIZOR,e.HERACROSS,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.TYRANITAR,e.SCEPTILE,e.SHIFTRY,e.AZURILL,e.MAWILE,e.AGGRON,e.FLYGON,e.SEVIPER,e.ARMALDO,e.MILOTIC,e.TROPIUS,e.ABSOL,e.SALAMENCE,e.METAGROSS,e.GROUDON,e.RAYQUAZA,e.DEOXYS,e.DRIFLOON,e.DRIFBLIM,e.LOPUNNY,e.GARCHOMP,e.DRAPION,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.GLISCOR,e.GIRATINA,e.SERPERIOR,e.EXCADRILL,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.KROKOROK,e.KROOKODILE,e.ESCAVALIER,e.FERROTHORN,e.HAXORUS,e.MIENSHAO,e.HEATMOR,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.GRENINJA,e.DIGGERSBY,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.MALAMAR,e.BARBARACLE,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.TREVENANT,e.GOURGEIST,e.INCINEROAR,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.ORANGURU,e.PASSIMIAN,e.TURTONATOR,e.DHELMISE,e.HAKAMO_O,e.KOMMO_O,e.TAPU_BULU,e.NIHILEGO,e.XURKITREE,e.CELESTEELA,e.GUZZLORD,e.NECROZMA,e.STAKATAKA,e.ZERAORA,e.MELMETAL,e.RILLABOOM,e.SKWOVET,e.GREEDENT,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.HATTREM,e.HATTERENE,e.SIRFETCHD,e.RUNERIGUS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.DRACOVISH,e.ZACIAN,e.ETERNATUS,e.ZARUDE,e.KLEAVOR,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.OKIDOGI,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_SLOWBRO,e.GALAR_FARFETCHD,e.GALAR_WEEZING,e.GALAR_YAMASK],[t.AURORA_VEIL]:[e.JYNX,e.ARTICUNO,e.MEW,e.DELIBIRD,e.SMOOCHUM,e.REGICE,e.ABOMASNOW,e.GLACEON,e.FROSLASS,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.CRYOGONAL,e.AMAURA,e.AURORUS,e.BERGMITE,e.AVALUGG,e.EISCUE,e.ARCTOVISH,e.IRON_BUNDLE,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.HISUI_AVALUGG],[t.PSYCHIC_FANGS]:[e.EKANS,e.ARBOK,e.GROWLITHE,e.ARCANINE,e.AERODACTYL,e.MEW,e.CROCONAW,e.FERALIGATR,e.ESPEON,e.GIRAFARIG,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.HOUNDOUR,e.HOUNDOOM,e.POOCHYENA,e.MIGHTYENA,e.MAWILE,e.ELECTRIKE,e.MANECTRIC,e.CARVANHA,e.SHARPEDO,e.SEVIPER,e.SALAMENCE,e.METAGROSS,e.SHINX,e.LUXIO,e.LUXRAY,e.GLISCOR,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.SWOOBAT,e.BASCULIN,e.LITLEO,e.PYROAR,e.TYRUNT,e.TYRANTRUM,e.YUNGOOS,e.GUMSHOOS,e.ROCKRUFF,e.LYCANROC,e.SILVALLY,e.BRUXISH,e.SOLGALEO,e.NECROZMA,e.GREEDENT,e.BOLTUND,e.ARROKUDA,e.BARRASKEWDA,e.MORPEKO,e.DRACOVISH,e.ARCTOVISH,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.BASCULEGION,e.FIDOUGH,e.DACHSBUN,e.MASCHIFF,e.MABOSSTIFF,e.GREAVARD,e.HOUNDSTONE,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.CHIEN_PAO,e.OKIDOGI,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.STOMPING_TANTRUM]:[e.VENUSAUR,e.RATICATE,e.ARBOK,e.SANDSHREW,e.SANDSLASH,e.NIDORINA,e.NIDOQUEEN,e.NIDORINO,e.NIDOKING,e.DIGLETT,e.DUGTRIO,e.MANKEY,e.PRIMEAPE,e.MACHOKE,e.MACHAMP,e.GEODUDE,e.GRAVELER,e.GOLEM,e.DODRIO,e.ONIX,e.KINGLER,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TAUROS,e.SNORLAX,e.DRAGONITE,e.MEWTWO,e.MEW,e.MEGANIUM,e.TYPHLOSION,e.ARIADOS,e.AMPHAROS,e.SUDOWOODO,e.WOOPER,e.QUAGSIRE,e.GIRAFARIG,e.DUNSPARCE,e.STEELIX,e.GRANBULL,e.URSARING,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.PHANPY,e.DONPHAN,e.MILTANK,e.BLISSEY,e.ENTEI,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.SWAMPERT,e.LINOONE,e.VIGOROTH,e.SLAKING,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.DELCATTY,e.LAIRON,e.AGGRON,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.SPINDA,e.CACTURNE,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.ARMALDO,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.GROUDON,e.DEOXYS,e.TORTERRA,e.BIBAREL,e.RAMPARDOS,e.BASTIODON,e.GASTRODON,e.PURUGLY,e.BRONZOR,e.BRONZONG,e.BONSLY,e.GARCHOMP,e.MUNCHLAX,e.HIPPOPOTAS,e.HIPPOWDON,e.DRAPION,e.ABOMASNOW,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.TEPIG,e.PIGNITE,e.EMBOAR,e.WATCHOG,e.STOUTLAND,e.BOLDORE,e.GIGALITH,e.EXCADRILL,e.AUDINO,e.CONKELDURR,e.SEISMITOAD,e.THROH,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.CRUSTLE,e.GARBODOR,e.SAWSBUCK,e.AMOONGUSS,e.EELEKTROSS,e.AXEW,e.FRAXURE,e.HAXORUS,e.STUNFISK,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.BOUFFALANT,e.HEATMOR,e.DURANT,e.ZWEILOUS,e.HYDREIGON,e.TERRAKION,e.LANDORUS,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.DIGGERSBY,e.SKIDDO,e.GOGOAT,e.PANGORO,e.TYRUNT,e.TYRANTRUM,e.CARBINK,e.GOODRA,e.AVALUGG,e.ZYGARDE,e.VOLCANION,e.INCINEROAR,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.ROCKRUFF,e.LYCANROC,e.MUDBRAY,e.MUDSDALE,e.STUFFUL,e.BEWEAR,e.KOMALA,e.TURTONATOR,e.DRAMPA,e.KOMMO_O,e.BUZZWOLE,e.CELESTEELA,e.GUZZLORD,e.STAKATAKA,e.RILLABOOM,e.GREEDENT,e.CHEWTLE,e.DREDNAW,e.APPLETUN,e.GRAPPLOCT,e.GRIMMSNARL,e.OBSTAGOON,e.CURSOLA,e.MR_RIME,e.STONJOURNER,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.DURALUDON,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.URSALUNA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.OINKOLOGNE,e.FIDOUGH,e.DACHSBUN,e.NACLI,e.NACLSTACK,e.GARGANACL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.WIGLETT,e.WUGTRIO,e.ORTHWORM,e.GREAVARD,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.OGERPON,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_RATICATE,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.GALAR_MR_MIME,e.GALAR_ZAPDOS,e.GALAR_SLOWKING,e.GALAR_CORSOLA,e.GALAR_LINOONE,e.GALAR_STUNFISK,[e.CALYREX,"ice","shadow"],e.HISUI_TYPHLOSION,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.LIQUIDATION]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.KRABBY,e.KINGLER,e.HORSEA,e.SEADRA,e.LAPRAS,e.VAPOREON,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.MARILL,e.AZUMARILL,e.POLITOED,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.KINGDRA,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.CARVANHA,e.SHARPEDO,e.WAILORD,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.ARMALDO,e.WALREIN,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BIBAREL,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.GARCHOMP,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.SEISMITOAD,e.BASCULIN,e.TIRTOUGA,e.CARRACOSTA,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.VOLCANION,e.PRIMARINA,e.CRABRAWLER,e.CRABOMINABLE,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.GOLISOPOD,e.BRUXISH,e.DHELMISE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.CLOBBOPUS,e.GRAPPLOCT,e.CURSOLA,e.PINCURCHIN,e.EISCUE,e.DRACOVISH,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.CLODSIRE,e.IRON_VALIANT,e.WALKING_WAKE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.GALAR_CORSOLA,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.BODY_PRESS]:[e.BLASTOISE,e.NIDOQUEEN,e.NIDOKING,e.JIGGLYPUFF,e.WIGGLYTUFF,e.GRAVELER,e.GOLEM,e.SLOWBRO,e.ONIX,e.HYPNO,e.LICKITUNG,e.RHYHORN,e.RHYDON,e.LAPRAS,e.SNORLAX,e.DRAGONITE,e.MEW,e.MEGANIUM,e.SUDOWOODO,e.QUAGSIRE,e.FORRETRESS,e.STEELIX,e.MANTINE,e.SKARMORY,e.DONPHAN,e.MILTANK,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.NOSEPASS,e.ARON,e.LAIRON,e.AGGRON,e.SWALOT,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.GRUMPIG,e.CLAYDOL,e.TROPIUS,e.WALREIN,e.RELICANTH,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.GROUDON,e.TORTERRA,e.RAMPARDOS,e.BASTIODON,e.BRONZONG,e.HIPPOPOTAS,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.MAMOSWINE,e.PROBOPASS,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.ARCEUS,e.EMBOAR,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.DARMANITAN,e.CRUSTLE,e.COFAGRIGUS,e.GARBODOR,e.FERROTHORN,e.EELEKTROSS,e.CUBCHOO,e.BEARTIC,e.GOLURK,e.COBALION,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.CHESNAUGHT,e.HAWLUCHA,e.CARBINK,e.GOODRA,e.AVALUGG,e.DIANCIE,e.VOLCANION,e.CRABOMINABLE,e.MUDSDALE,e.BEWEAR,e.TURTONATOR,e.DHELMISE,e.KOMMO_O,e.GUZZLORD,e.STAKATAKA,e.MELMETAL,e.RILLABOOM,e.GREEDENT,e.CORVIKNIGHT,e.DOTTLER,e.ORBEETLE,e.DUBWOOL,e.DREDNAW,e.CARKOL,e.COALOSSAL,e.APPLETUN,e.SANDACONDA,e.GRIMMSNARL,e.OBSTAGOON,e.RUNERIGUS,e.FALINKS,e.STONJOURNER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZAMAZENTA,e.URSHIFU,e.GLASTRIER,[e.CALYREX,"","ice"],e.URSALUNA,e.OINKOLOGNE,e.PAWMOT,e.DACHSBUN,e.NACLSTACK,e.GARGANACL,e.ORTHWORM,e.HOUNDSTONE,e.CETODDLE,e.CETITAN,e.DONDOZO,e.CLODSIRE,e.DUDUNSPARCE,e.GREAT_TUSK,e.BRUTE_BONNET,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.BAXCALIBUR,e.WO_CHIEN,e.TING_LU,e.ROARING_MOON,e.KORAIDON,e.OKIDOGI,e.ARCHALUDON,e.HYDRAPPLE,e.RAGING_BOLT,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_SLOWBRO,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.BREAKING_SWIPE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.ARBOK,e.ONIX,e.RHYDON,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.AMPHAROS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.KINGDRA,e.TYRANITAR,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.FLYGON,e.ALTARIA,e.SEVIPER,e.MILOTIC,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.RAMPARDOS,e.GABITE,e.GARCHOMP,e.RHYPERIOR,e.GLISCOR,e.DIALGA,e.PALKIA,e.GIRATINA,e.SERPERIOR,e.KROKOROK,e.KROOKODILE,e.AXEW,e.FRAXURE,e.HAXORUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.HELIOLISK,e.TYRANTRUM,e.GOODRA,e.NOIVERN,e.ZYGARDE,e.SALAZZLE,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NECROZMA,e.NAGANADEL,e.INTELEON,e.DRACOZOLT,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.DUDUNSPARCE,e.IRON_THORNS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.STEEL_BEAM]:[e.MAGNEMITE,e.MAGNETON,e.MEW,e.FORRETRESS,e.STEELIX,e.SCIZOR,e.SKARMORY,e.NOSEPASS,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.BELDUM,e.METANG,e.METAGROSS,e.REGISTEEL,e.JIRACHI,e.EMPOLEON,e.BRONZOR,e.BRONZONG,e.LUCARIO,e.MAGNEZONE,e.PROBOPASS,e.DIALGA,e.HEATRAN,e.ARCEUS,e.EXCADRILL,e.ESCAVALIER,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.PAWNIARD,e.BISHARP,e.DURANT,e.COBALION,e.GENESECT,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.KLEFKI,e.SILVALLY,e.TOGEDEMARU,e.SOLGALEO,e.CELESTEELA,e.KARTANA,e.MAGEARNA,e.STAKATAKA,e.MELTAN,e.MELMETAL,e.CORVIKNIGHT,e.PERRSERKER,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.ZACIAN,e.ZAMAZENTA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.VAROOM,e.REVAVROOM,e.ORTHWORM,e.KINGAMBIT,e.IRON_TREADS,e.GHOLDENGO,e.ARCHALUDON,e.IRON_CROWN,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.GALAR_MEOWTH,e.GALAR_STUNFISK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.EXPANDING_FORCE]:[e.WIGGLYTUFF,e.KADABRA,e.ALAKAZAM,e.SLOWPOKE,e.SLOWBRO,e.DROWZEE,e.HYPNO,e.EXEGGUTOR,e.STARMIE,e.MR_MIME,e.JYNX,e.MEWTWO,e.MEW,e.NATU,e.XATU,e.ESPEON,e.SLOWKING,e.GIRAFARIG,e.CELEBI,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.MEDITITE,e.MEDICHAM,e.SPOINK,e.GRUMPIG,e.BALTOY,e.CLAYDOL,e.CHIMECHO,e.METANG,e.METAGROSS,e.JIRACHI,e.DEOXYS,e.BRONZOR,e.BRONZONG,e.GALLADE,e.UXIE,e.MESPRIT,e.AZELF,e.CRESSELIA,e.VICTINI,e.MUNNA,e.MUSHARNA,e.WOOBAT,e.SWOOBAT,e.DARMANITAN,e.SIGILYPH,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.ELGYEM,e.BEHEEYEM,e.DELPHOX,e.ESPURR,e.MEOWSTIC,e.INKAY,e.MALAMAR,e.HOOPA,e.ORANGURU,e.BRUXISH,e.SOLGALEO,e.LUNALA,e.NECROZMA,e.BLACEPHALON,e.DOTTLER,e.ORBEETLE,e.HATENNA,e.HATTREM,e.HATTERENE,e.MR_RIME,e.INDEEDEE,e.CALYREX,e.WYRDEER,e.ARMAROUGE,e.RABSCA,e.ESPATHRA,e.VELUZA,e.FARIGIRAF,e.SCREAM_TAIL,e.IRON_VALIANT,e.IRON_CROWN,e.ALOLA_RAICHU,e.GALAR_PONYTA,e.GALAR_RAPIDASH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_MR_MIME,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.STEEL_ROLLER]:[e.SANDSHREW,e.SANDSLASH,e.JIGGLYPUFF,e.WIGGLYTUFF,e.CLOYSTER,e.LICKITUNG,e.SNORLAX,e.MEW,e.MARILL,e.AZUMARILL,e.STEELIX,e.QWILFISH,e.SHUCKLE,e.MILTANK,e.ARON,e.LAIRON,e.AGGRON,e.WAILMER,e.WAILORD,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.METANG,e.METAGROSS,e.REGISTEEL,e.BRONZOR,e.BRONZONG,e.MAGNEZONE,e.LICKILICKY,e.HEATRAN,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TOGEDEMARU,e.DHELMISE,e.SOLGALEO,e.CELESTEELA,e.GUZZLORD,e.MAGEARNA,e.STAKATAKA,e.MELMETAL,e.CUFANT,e.COPPERAJAH,e.DURALUDON,e.IRON_TREADS,e.ARCHALUDON,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH],[t.SCALE_SHOT]:[e.CHARIZARD,e.EKANS,e.ARBOK,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.GYARADOS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.DUNSPARCE,e.GLIGAR,e.QWILFISH,e.KINGDRA,e.LUGIA,e.SCEPTILE,e.CARVANHA,e.SHARPEDO,e.FLYGON,e.FEEBAS,e.MILOTIC,e.RELICANTH,e.LUVDISC,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.GIBLE,e.GABITE,e.GARCHOMP,e.DIALGA,e.PALKIA,e.BASCULIN,e.KROKOROK,e.KROOKODILE,e.ALOMOMOLA,e.AXEW,e.FRAXURE,e.HAXORUS,e.DRUDDIGON,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.SKRELP,e.DRAGALGE,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.ZYGARDE,e.WISHIWASHI,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.DRAMPA,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.NAGANADEL,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.ARROKUDA,e.BARRASKEWDA,e.REGIDRAGO,e.BASCULEGION,e.OVERQWIL,e.CYCLIZAR,e.VELUZA,e.DUDUNSPARCE,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_QWILFISH],[t.METEOR_BEAM]:[e.CLEFAIRY,e.CLEFABLE,e.ONIX,e.RHYDON,e.STARMIE,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.MEW,e.AMPHAROS,e.SUDOWOODO,e.STEELIX,e.SHUCKLE,e.CORSOLA,e.NOSEPASS,e.AGGRON,e.LUNATONE,e.SOLROCK,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.RELICANTH,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.BASTIODON,e.BRONZONG,e.RHYPERIOR,e.PROBOPASS,e.ARCEUS,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.CRUSTLE,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.ELGYEM,e.BEHEEYEM,e.BARBARACLE,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.CARBINK,e.DIANCIE,e.MINIOR,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.CELESTEELA,e.NECROZMA,e.STAKATAKA,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.CURSOLA,e.STONJOURNER,e.DRACOZOLT,e.ARCTOZOLT,e.DRACOVISH,e.ARCTOVISH,e.ETERNATUS,e.NACLI,e.NACLSTACK,e.GARGANACL,e.ARMAROUGE,e.KLAWF,e.GLIMMET,e.GLIMMORA,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.KORAIDON,e.ARCHALUDON,e.IRON_BOULDER,e.TERAPAGOS,e.ALOLA_GOLEM,e.GALAR_CORSOLA,e.HISUI_AVALUGG],[t.MISTY_EXPLOSION]:[e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEW,e.MARILL,e.AZUMARILL,e.GARDEVOIR,e.MUSHARNA,e.FLORGES,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.SYLVEON,e.CARBINK,e.XERNEAS,e.DIANCIE,e.PRIMARINA,e.MAGEARNA,e.HATTERENE,e.ALCREMIE,e.ENAMORUS,e.SCREAM_TAIL,e.GALAR_WEEZING],[t.GRASSY_GLIDE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.ODDISH,e.GLOOM,e.VILEPLUME,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.EXEGGCUTE,e.EXEGGUTOR,e.TANGELA,e.MEW,e.BELLOSSOM,e.SUNFLORA,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.ROSELIA,e.CACNEA,e.CACTURNE,e.TURTWIG,e.GROTLE,e.TORTERRA,e.BUDEW,e.ROSERADE,e.CHERUBI,e.CHERRIM,e.SNOVER,e.ABOMASNOW,e.TANGROWTH,e.LEAFEON,e.SHAYMIN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.MARACTUS,e.DEERLING,e.SAWSBUCK,e.VIRIZION,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.SKIDDO,e.GOGOAT,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.FOMANTIS,e.LURANTIS,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.DHELMISE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.GOSSIFLEUR,e.ELDEGOSS,e.WOOLOO,e.DUBWOOL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SIRFETCHD,e.ZARUDE,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.CAPSAKID,e.SCOVILLAIN,e.DIPPLIN,e.OGERPON,e.HYDRAPPLE,e.ALOLA_EXEGGUTOR,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.RISING_VOLTAGE]:[e.PIKACHU,e.RAICHU,e.MAGNEMITE,e.MAGNETON,e.ELECTABUZZ,e.JOLTEON,e.ZAPDOS,e.MEW,e.CHINCHOU,e.LANTURN,e.RAIKOU,e.ELECTRIKE,e.MANECTRIC,e.SHINX,e.LUXIO,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.ROTOM,e.EMOLGA,e.JOLTIK,e.GALVANTULA,e.KLINK,e.KLANG,e.KLINKLANG,e.THUNDURUS,e.ZEKROM,e.HELIOPTILE,e.HELIOLISK,e.DEDENNE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.TOGEDEMARU,e.XURKITREE,e.ZERAORA,e.YAMPER,e.BOLTUND,e.TOXTRICITY,e.PINCURCHIN,e.MORPEKO,e.DRACOZOLT,e.ARCTOZOLT,e.REGIELEKI,e.RAGING_BOLT,e.ALOLA_RAICHU],[t.TERRAIN_PULSE]:[e.VENUSAUR,e.BLASTOISE,e.EXEGGUTOR,e.LICKITUNG,e.KANGASKHAN,e.SNORLAX,e.MEW,e.DUNSPARCE,e.EXPLOUD,e.LUCARIO,e.LICKILICKY,e.REGIGIGAS,e.CLAUNCHER,e.CLAWITZER,e.CARBINK,e.XERNEAS,e.DIANCIE,e.ORANGURU,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.INDEEDEE,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.DUDUNSPARCE,e.ALOLA_EXEGGUTOR,e.GALAR_STUNFISK],[t.SKITTER_SMACK]:[e.EKANS,e.ARBOK,e.VENONAT,e.VENOMOTH,e.PERSIAN,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.OCTILLERY,e.SURSKIT,e.MASQUERAIN,e.NINCADA,e.NINJASK,e.SHEDINJA,e.SABLEYE,e.VOLBEAT,e.ILLUMISE,e.CACNEA,e.CACTURNE,e.SEVIPER,e.MILOTIC,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.KRICKETOT,e.KRICKETUNE,e.COMBEE,e.VESPIQUEN,e.SHELLOS,e.GASTRODON,e.SKORUPI,e.DRAPION,e.YANMEGA,e.GLISCOR,e.DUSKNOIR,e.GIRATINA,e.LIEPARD,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DWEBBLE,e.CRUSTLE,e.ZORUA,e.ZOROARK,e.JOLTIK,e.GALVANTULA,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.SHELMET,e.ACCELGOR,e.DURANT,e.LARVESTA,e.VOLCARONA,e.VIVILLON,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.ZYGARDE,e.HOOPA,e.DECIDUEYE,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.WIMPOD,e.GOLISOPOD,e.PHEROMOSA,e.MARSHADOW,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.GRAPPLOCT,e.SNOM,e.FROSMOTH,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SHROODLE,e.GRAFAIAI,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.RELLOR,e.RABSCA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.DUDUNSPARCE,e.SLITHER_WING,e.ALOLA_PERSIAN,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_SLIGGOO,e.HISUI_GOODRA],[t.BURNING_JEALOUSY]:[e.VULPIX,e.NINETALES,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.MISDREAVUS,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.TORKOAL,e.BANETTE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.MISMAGIUS,e.SKUNTANK,e.SPIRITOMB,e.MAGMORTAR,e.HEATRAN,e.LIEPARD,e.DARMANITAN,e.ZORUA,e.ZOROARK,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.HEATMOR,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.PYROAR,e.TREVENANT,e.INCINEROAR,e.SALANDIT,e.SALAZZLE,e.TURTONATOR,e.MIMIKYU,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.CURSOLA,e.SCOVILLAIN,e.CHI_YU,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK,e.GALAR_DARMANITAN,e.HISUI_TYPHLOSION,e.HISUI_ZORUA,e.HISUI_ZOROARK],[t.LASH_OUT]:[e.EKANS,e.ARBOK,e.MEOWTH,e.PERSIAN,e.MANKEY,e.PRIMEAPE,e.MUK,e.TAUROS,e.GYARADOS,e.MEWTWO,e.MEW,e.UMBREON,e.MURKROW,e.SNEASEL,e.HOUNDOUR,e.HOUNDOOM,e.PUPITAR,e.TYRANITAR,e.POOCHYENA,e.MIGHTYENA,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.HARIYAMA,e.SABLEYE,e.NUMEL,e.CAMERUPT,e.CACTURNE,e.SEVIPER,e.CRAWDAUNT,e.SHUPPET,e.BANETTE,e.MONFERNO,e.INFERNAPE,e.EMPOLEON,e.MISMAGIUS,e.HONCHKROW,e.STUNKY,e.SKUNTANK,e.SPIRITOMB,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.DARKRAI,e.PURRLOIN,e.LIEPARD,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARMANITAN,e.SCRAGGY,e.SCRAFTY,e.ARCHEN,e.ARCHEOPS,e.ZORUA,e.ZOROARK,e.LAMPENT,e.CHANDELURE,e.STUNFISK,e.DRUDDIGON,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.VULLABY,e.MANDIBUZZ,e.ZWEILOUS,e.HYDREIGON,e.TORNADUS,e.THUNDURUS,e.PANCHAM,e.PANGORO,e.INKAY,e.MALAMAR,e.TYRUNT,e.TYRANTRUM,e.PHANTUMP,e.TREVENANT,e.YVELTAL,e.HOOPA,e.INCINEROAR,e.MUDSDALE,e.TURTONATOR,e.DRAMPA,e.GUZZLORD,e.NICKIT,e.THIEVUL,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.OBSTAGOON,e.PERRSERKER,e.MORPEKO,e.ZARUDE,e.GLASTRIER,e.SPECTRIER,e.SNEASLER,e.OVERQWIL,e.MEOWSCARADA,e.OINKOLOGNE,e.LOKIX,e.SQUAWKABILLY,e.MASCHIFF,e.MABOSSTIFF,e.SCOVILLAIN,e.BOMBIRDIER,e.REVAVROOM,e.ANNIHILAPE,e.KINGAMBIT,e.BRUTE_BONNET,e.IRON_JUGULIS,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_MUK,[e.LYCANROC,"midnight"],e.GALAR_MEOWTH,e.GALAR_MOLTRES,e.GALAR_ZIGZAGOON,e.GALAR_LINOONE,e.GALAR_DARMANITAN,e.GALAR_STUNFISK,[e.URSHIFU,"single-strike"],[e.CALYREX,"ice","shadow"],e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_GOODRA,e.PALDEA_TAUROS],[t.POLTERGEIST]:[e.GASTLY,e.HAUNTER,e.GENGAR,e.MEW,e.MISDREAVUS,e.SHEDINJA,e.SABLEYE,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.MISMAGIUS,e.SPIRITOMB,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.GIRATINA,e.YAMASK,e.COFAGRIGUS,e.FRILLISH,e.JELLICENT,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.GOLETT,e.GOLURK,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.DECIDUEYE,e.SANDYGAST,e.PALOSSAND,e.DHELMISE,e.LUNALA,e.MARSHADOW,e.SINISTEA,e.POLTEAGEIST,e.CURSOLA,e.RUNERIGUS,e.SPECTRIER,e.SKELEDIRGE,e.CERULEDGE,e.BRAMBLIN,e.BRAMBLEGHAST,e.RABSCA,e.GREAVARD,e.HOUNDSTONE,e.FLUTTER_MANE,e.GHOLDENGO,e.POLTCHAGEIST,e.SINISTCHA,e.MUNKIDORI,e.PECHARUNT,e.ALOLA_MAROWAK,e.GALAR_YAMASK,e.HISUI_TYPHLOSION,e.HISUI_ZOROARK],[t.CORROSIVE_GAS]:[e.VILEPLUME,e.TENTACRUEL,e.GASTLY,e.HAUNTER,e.GENGAR,e.KOFFING,e.WEEZING,e.MEW,e.STUNKY,e.SKUNTANK,e.TOXICROAK,e.TRUBBISH,e.GARBODOR,e.SALAZZLE,e.NIHILEGO,e.GUZZLORD,e.GALAR_WEEZING],[t.COACHING]:[e.POLIWRATH,e.MACHOP,e.MACHOKE,e.MACHAMP,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.HERACROSS,e.HITMONTOP,e.COMBUSKEN,e.BLAZIKEN,e.MAKUHITA,e.HARIYAMA,e.INFERNAPE,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.GALLADE,e.PIGNITE,e.EMBOAR,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.THROH,e.SAWK,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.MELOETTA,e.CHESNAUGHT,e.PANCHAM,e.PANGORO,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,e.STUFFUL,e.BEWEAR,e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.BUZZWOLE,e.PHEROMOSA,e.MARSHADOW,e.ZERAORA,e.CINDERACE,e.CLOBBOPUS,e.GRAPPLOCT,e.SIRFETCHD,e.FALINKS,e.ZAMAZENTA,e.KUBFU,e.URSHIFU,e.SNEASLER,e.QUAQUAVAL,e.PAWMO,e.PAWMOT,e.ANNIHILAPE,e.IRON_VALIANT,e.IRON_LEAVES,e.GALAR_ZAPDOS,e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE],[t.FLIP_TURN]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.PSYDUCK,e.GOLDUCK,e.TENTACOOL,e.TENTACRUEL,e.SEEL,e.DEWGONG,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.VAPOREON,e.KABUTOPS,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.CHINCHOU,e.LANTURN,e.QWILFISH,e.KINGDRA,e.SWAMPERT,e.CARVANHA,e.SHARPEDO,e.MILOTIC,e.LUVDISC,e.LATIOS,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.FINNEON,e.LUMINEON,e.PHIONE,e.MANAPHY,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.SWANNA,e.ALOMOMOLA,e.KELDEO,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.WISHIWASHI,e.BRUXISH,e.INTELEON,e.ARROKUDA,e.BARRASKEWDA,e.EISCUE,e.BASCULEGION,e.QUAXWELL,e.QUAQUAVAL,e.PALAFIN,e.VELUZA,e.IRON_BUNDLE,e.WALKING_WAKE,e.HISUI_SAMUROTT],[t.TRIPLE_AXEL]:[e.SEEL,e.DEWGONG,e.JYNX,e.ARTICUNO,e.MEW,e.BELLOSSOM,e.SNEASEL,e.DELIBIRD,e.HITMONTOP,e.KIRLIA,e.GARDEVOIR,e.MILOTIC,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.AMBIPOM,e.BUNEARY,e.LOPUNNY,e.WEAVILE,e.GLACEON,e.GALLADE,e.FROSLASS,e.LEAVANNY,e.MINCCINO,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.MELOETTA,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.STEENEE,e.TSAREENA,e.PHEROMOSA,e.MR_RIME,e.FROSMOTH,e.MEOWSCARADA,e.QUAXWELL,e.QUAQUAVAL,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.GALAR_MR_MIME,e.HISUI_LILLIGANT],[t.DUAL_WINGBEAT]:[e.CHARIZARD,e.BUTTERFREE,e.CLEFAIRY,e.CLEFABLE,e.ZUBAT,e.GOLBAT,e.FARFETCHD,e.SCYTHER,e.AERODACTYL,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRAGONITE,e.MEW,e.HOOTHOOT,e.NOCTOWL,e.CROBAT,e.TOGETIC,e.NATU,e.XATU,e.MURKROW,e.DUNSPARCE,e.GLIGAR,e.SCIZOR,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.LUGIA,e.HO_OH,e.CELEBI,e.WINGULL,e.PELIPPER,e.MASQUERAIN,e.NINJASK,e.VIBRAVA,e.FLYGON,e.SWABLU,e.ALTARIA,e.TROPIUS,e.SALAMENCE,e.LATIAS,e.LATIOS,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.COMBEE,e.VESPIQUEN,e.HONCHKROW,e.TOGEKISS,e.YANMEGA,e.GLISCOR,e.PALKIA,e.GIRATINA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.WOOBAT,e.SWOOBAT,e.SIGILYPH,e.ARCHEN,e.ARCHEOPS,e.EMOLGA,e.DRUDDIGON,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HYDREIGON,e.VOLCARONA,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.HAWLUCHA,e.NOIBAT,e.NOIVERN,e.YVELTAL,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.VIKAVOLT,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.LUNALA,e.BUZZWOLE,e.NAGANADEL,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.FLAPPLE,e.CRAMORANT,e.SIRFETCHD,e.FROSMOTH,e.KLEAVOR,e.SQUAWKABILLY,e.WATTREL,e.KILOWATTREL,e.BOMBIRDIER,e.FLAMIGO,e.DUDUNSPARCE,e.SLITHER_WING,e.IRON_JUGULIS,e.KORAIDON,e.FEZANDIPITI,e.GALAR_FARFETCHD,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.HISUI_BRAVIARY,e.HISUI_DECIDUEYE],[t.SCORCHING_SANDS]:[e.CHARIZARD,e.SANDSHREW,e.SANDSLASH,e.NIDOQUEEN,e.NIDOKING,e.NINETALES,e.DIGLETT,e.DUGTRIO,e.ARCANINE,e.RAPIDASH,e.ONIX,e.CUBONE,e.MAROWAK,e.RHYHORN,e.RHYDON,e.MAGMAR,e.FLAREON,e.MOLTRES,e.MEW,e.TYPHLOSION,e.STEELIX,e.MAGCARGO,e.ENTEI,e.HO_OH,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.BALTOY,e.CLAYDOL,e.GROUDON,e.INFERNAPE,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.GIBLE,e.GABITE,e.GARCHOMP,e.HIPPOPOTAS,e.HIPPOWDON,e.RHYPERIOR,e.MAGMORTAR,e.HEATRAN,e.ARCEUS,e.VICTINI,e.DRILBUR,e.EXCADRILL,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.GOLETT,e.GOLURK,e.HEATMOR,e.RESHIRAM,e.LANDORUS,e.DELPHOX,e.DIGGERSBY,e.ZYGARDE,e.DIANCIE,e.VOLCANION,e.INCINEROAR,e.SANDYGAST,e.PALOSSAND,e.MINIOR,e.TURTONATOR,e.CINDERACE,e.CARKOL,e.COALOSSAL,e.SILICOBRA,e.SANDACONDA,e.SIZZLIPEDE,e.CENTISKORCH,e.SKELEDIRGE,e.ARMAROUGE,e.SANDY_SHOCKS,e.GOUGING_FIRE,e.TERAPAGOS,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MAROWAK,e.HISUI_GROWLITHE,e.HISUI_ARCANINE],[t.TERA_BLAST]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.BUTTERFREE,e.BEEDRILL,e.PIDGEY,e.PIDGEOTTO,e.PIDGEOT,e.RATTATA,e.RATICATE,e.SPEAROW,e.FEAROW,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.SANDSHREW,e.SANDSLASH,e.NIDORAN_F,e.NIDORINA,e.NIDOQUEEN,e.NIDORAN_M,e.NIDORINO,e.NIDOKING,e.CLEFAIRY,e.CLEFABLE,e.VULPIX,e.NINETALES,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ZUBAT,e.GOLBAT,e.ODDISH,e.GLOOM,e.VILEPLUME,e.PARAS,e.PARASECT,e.VENONAT,e.VENOMOTH,e.DIGLETT,e.DUGTRIO,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.MANKEY,e.PRIMEAPE,e.GROWLITHE,e.ARCANINE,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.ABRA,e.KADABRA,e.ALAKAZAM,e.MACHOP,e.MACHOKE,e.MACHAMP,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.TENTACOOL,e.TENTACRUEL,e.GEODUDE,e.GRAVELER,e.GOLEM,e.PONYTA,e.RAPIDASH,e.SLOWPOKE,e.SLOWBRO,e.MAGNEMITE,e.MAGNETON,e.FARFETCHD,e.DODUO,e.DODRIO,e.SEEL,e.DEWGONG,e.GRIMER,e.MUK,e.SHELLDER,e.CLOYSTER,e.GASTLY,e.HAUNTER,e.GENGAR,e.ONIX,e.DROWZEE,e.HYPNO,e.KRABBY,e.KINGLER,e.VOLTORB,e.ELECTRODE,e.EXEGGCUTE,e.EXEGGUTOR,e.CUBONE,e.MAROWAK,e.HITMONLEE,e.HITMONCHAN,e.LICKITUNG,e.KOFFING,e.WEEZING,e.RHYHORN,e.RHYDON,e.CHANSEY,e.TANGELA,e.KANGASKHAN,e.HORSEA,e.SEADRA,e.GOLDEEN,e.SEAKING,e.STARYU,e.STARMIE,e.MR_MIME,e.SCYTHER,e.JYNX,e.ELECTABUZZ,e.MAGMAR,e.PINSIR,e.TAUROS,e.GYARADOS,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.PORYGON,e.OMANYTE,e.OMASTAR,e.KABUTO,e.KABUTOPS,e.AERODACTYL,e.SNORLAX,e.ARTICUNO,e.ZAPDOS,e.MOLTRES,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.HOOTHOOT,e.NOCTOWL,e.LEDYBA,e.LEDIAN,e.SPINARAK,e.ARIADOS,e.CROBAT,e.CHINCHOU,e.LANTURN,e.PICHU,e.CLEFFA,e.IGGLYBUFF,e.TOGEPI,e.TOGETIC,e.NATU,e.XATU,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.POLITOED,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.YANMA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.GLIGAR,e.STEELIX,e.SNUBBULL,e.GRANBULL,e.QWILFISH,e.SCIZOR,e.SHUCKLE,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SLUGMA,e.MAGCARGO,e.SWINUB,e.PILOSWINE,e.CORSOLA,e.REMORAID,e.OCTILLERY,e.DELIBIRD,e.MANTINE,e.SKARMORY,e.HOUNDOUR,e.HOUNDOOM,e.KINGDRA,e.PHANPY,e.DONPHAN,e.PORYGON2,e.STANTLER,e.TYROGUE,e.HITMONTOP,e.SMOOCHUM,e.ELEKID,e.MAGBY,e.MILTANK,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.LARVITAR,e.PUPITAR,e.TYRANITAR,e.LUGIA,e.HO_OH,e.CELEBI,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.POOCHYENA,e.MIGHTYENA,e.ZIGZAGOON,e.LINOONE,e.BEAUTIFLY,e.DUSTOX,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.TAILLOW,e.SWELLOW,e.WINGULL,e.PELIPPER,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.NINCADA,e.NINJASK,e.SHEDINJA,e.WHISMUR,e.LOUDRED,e.EXPLOUD,e.MAKUHITA,e.HARIYAMA,e.AZURILL,e.NOSEPASS,e.SKITTY,e.DELCATTY,e.SABLEYE,e.MAWILE,e.ARON,e.LAIRON,e.AGGRON,e.MEDITITE,e.MEDICHAM,e.ELECTRIKE,e.MANECTRIC,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.ROSELIA,e.GULPIN,e.SWALOT,e.CARVANHA,e.SHARPEDO,e.WAILMER,e.WAILORD,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SPOINK,e.GRUMPIG,e.SPINDA,e.TRAPINCH,e.VIBRAVA,e.FLYGON,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.ZANGOOSE,e.SEVIPER,e.LUNATONE,e.SOLROCK,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.BALTOY,e.CLAYDOL,e.LILEEP,e.CRADILY,e.ANORITH,e.ARMALDO,e.FEEBAS,e.MILOTIC,e.CASTFORM,e.KECLEON,e.SHUPPET,e.BANETTE,e.DUSKULL,e.DUSCLOPS,e.TROPIUS,e.CHIMECHO,e.ABSOL,e.SNORUNT,e.GLALIE,e.SPHEAL,e.SEALEO,e.WALREIN,e.CLAMPERL,e.HUNTAIL,e.GOREBYSS,e.RELICANTH,e.LUVDISC,e.BAGON,e.SHELGON,e.SALAMENCE,e.BELDUM,e.METANG,e.METAGROSS,e.REGIROCK,e.REGICE,e.REGISTEEL,e.LATIAS,e.LATIOS,e.KYOGRE,e.GROUDON,e.RAYQUAZA,e.JIRACHI,e.DEOXYS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.STARLY,e.STARAVIA,e.STARAPTOR,e.BIDOOF,e.BIBAREL,e.KRICKETOT,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.BUDEW,e.ROSERADE,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.BURMY,e.WORMADAM,e.MOTHIM,e.COMBEE,e.VESPIQUEN,e.PACHIRISU,e.BUIZEL,e.FLOATZEL,e.CHERUBI,e.CHERRIM,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.DRIFLOON,e.DRIFBLIM,e.BUNEARY,e.LOPUNNY,e.MISMAGIUS,e.HONCHKROW,e.GLAMEOW,e.PURUGLY,e.CHINGLING,e.STUNKY,e.SKUNTANK,e.BRONZOR,e.BRONZONG,e.BONSLY,e.MIME_JR,e.HAPPINY,e.CHATOT,e.SPIRITOMB,e.GIBLE,e.GABITE,e.GARCHOMP,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.HIPPOPOTAS,e.HIPPOWDON,e.SKORUPI,e.DRAPION,e.CROAGUNK,e.TOXICROAK,e.CARNIVINE,e.FINNEON,e.LUMINEON,e.MANTYKE,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.MAGNEZONE,e.LICKILICKY,e.RHYPERIOR,e.TANGROWTH,e.ELECTIVIRE,e.MAGMORTAR,e.TOGEKISS,e.YANMEGA,e.LEAFEON,e.GLACEON,e.GLISCOR,e.MAMOSWINE,e.PORYGON_Z,e.GALLADE,e.PROBOPASS,e.DUSKNOIR,e.FROSLASS,e.ROTOM,e.UXIE,e.MESPRIT,e.AZELF,e.DIALGA,e.PALKIA,e.HEATRAN,e.REGIGIGAS,e.GIRATINA,e.CRESSELIA,e.PHIONE,e.MANAPHY,e.DARKRAI,e.SHAYMIN,e.ARCEUS,e.VICTINI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.PATRAT,e.WATCHOG,e.LILLIPUP,e.HERDIER,e.STOUTLAND,e.PURRLOIN,e.LIEPARD,e.PANSAGE,e.SIMISAGE,e.PANSEAR,e.SIMISEAR,e.PANPOUR,e.SIMIPOUR,e.MUNNA,e.MUSHARNA,e.PIDOVE,e.TRANQUILL,e.UNFEZANT,e.BLITZLE,e.ZEBSTRIKA,e.ROGGENROLA,e.BOLDORE,e.GIGALITH,e.WOOBAT,e.SWOOBAT,e.DRILBUR,e.EXCADRILL,e.AUDINO,e.TIMBURR,e.GURDURR,e.CONKELDURR,e.TYMPOLE,e.PALPITOAD,e.SEISMITOAD,e.THROH,e.SAWK,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.VENIPEDE,e.WHIRLIPEDE,e.SCOLIPEDE,e.COTTONEE,e.WHIMSICOTT,e.PETILIL,e.LILLIGANT,e.BASCULIN,e.SANDILE,e.KROKOROK,e.KROOKODILE,e.DARUMAKA,e.DARMANITAN,e.MARACTUS,e.DWEBBLE,e.CRUSTLE,e.SCRAGGY,e.SCRAFTY,e.SIGILYPH,e.YAMASK,e.COFAGRIGUS,e.TIRTOUGA,e.CARRACOSTA,e.ARCHEN,e.ARCHEOPS,e.TRUBBISH,e.GARBODOR,e.ZORUA,e.ZOROARK,e.MINCCINO,e.CINCCINO,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.SOLOSIS,e.DUOSION,e.REUNICLUS,e.DUCKLETT,e.SWANNA,e.VANILLITE,e.VANILLISH,e.VANILLUXE,e.DEERLING,e.SAWSBUCK,e.EMOLGA,e.KARRABLAST,e.ESCAVALIER,e.FOONGUS,e.AMOONGUSS,e.FRILLISH,e.JELLICENT,e.ALOMOMOLA,e.JOLTIK,e.GALVANTULA,e.FERROSEED,e.FERROTHORN,e.KLINK,e.KLANG,e.KLINKLANG,e.TYNAMO,e.EELEKTRIK,e.EELEKTROSS,e.ELGYEM,e.BEHEEYEM,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.SHELMET,e.ACCELGOR,e.STUNFISK,e.MIENFOO,e.MIENSHAO,e.DRUDDIGON,e.GOLETT,e.GOLURK,e.PAWNIARD,e.BISHARP,e.BOUFFALANT,e.RUFFLET,e.BRAVIARY,e.VULLABY,e.MANDIBUZZ,e.HEATMOR,e.DURANT,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.LARVESTA,e.VOLCARONA,e.COBALION,e.TERRAKION,e.VIRIZION,e.TORNADUS,e.THUNDURUS,e.RESHIRAM,e.ZEKROM,e.LANDORUS,e.KYUREM,e.KELDEO,e.MELOETTA,e.GENESECT,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FENNEKIN,e.BRAIXEN,e.DELPHOX,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.BUNNELBY,e.DIGGERSBY,e.FLETCHLING,e.FLETCHINDER,e.TALONFLAME,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.PANCHAM,e.PANGORO,e.FURFROU,e.ESPURR,e.MEOWSTIC,e.HONEDGE,e.DOUBLADE,e.AEGISLASH,e.SPRITZEE,e.AROMATISSE,e.SWIRLIX,e.SLURPUFF,e.INKAY,e.MALAMAR,e.BINACLE,e.BARBARACLE,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.HELIOPTILE,e.HELIOLISK,e.TYRUNT,e.TYRANTRUM,e.AMAURA,e.AURORUS,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.CARBINK,e.GOOMY,e.SLIGGOO,e.GOODRA,e.KLEFKI,e.PHANTUMP,e.TREVENANT,e.PUMPKABOO,e.GOURGEIST,e.BERGMITE,e.AVALUGG,e.NOIBAT,e.NOIVERN,e.XERNEAS,e.YVELTAL,e.ZYGARDE,e.DIANCIE,e.HOOPA,e.VOLCANION,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.PIKIPEK,e.TRUMBEAK,e.TOUCANNON,e.YUNGOOS,e.GUMSHOOS,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CRABRAWLER,e.CRABOMINABLE,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.WISHIWASHI,e.MAREANIE,e.TOXAPEX,e.MUDBRAY,e.MUDSDALE,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.MORELULL,e.SHIINOTIC,e.SALANDIT,e.SALAZZLE,e.STUFFUL,e.BEWEAR,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.WIMPOD,e.GOLISOPOD,e.SANDYGAST,e.PALOSSAND,e.TYPE_NULL,e.SILVALLY,e.MINIOR,e.KOMALA,e.TURTONATOR,e.TOGEDEMARU,e.MIMIKYU,e.BRUXISH,e.DRAMPA,e.DHELMISE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.TAPU_KOKO,e.TAPU_LELE,e.TAPU_BULU,e.TAPU_FINI,e.SOLGALEO,e.LUNALA,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.ZERAORA,e.ALOLA_RATTATA,e.ALOLA_RATICATE,e.ALOLA_RAICHU,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.ALOLA_GRIMER,e.ALOLA_MUK,e.ALOLA_EXEGGUTOR,e.ALOLA_MAROWAK,e.ETERNAL_FLOETTE,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.SKWOVET,e.GREEDENT,e.ROOKIDEE,e.CORVISQUIRE,e.CORVIKNIGHT,e.CHEWTLE,e.DREDNAW,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.SILICOBRA,e.SANDACONDA,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.TOXEL,e.TOXTRICITY,e.SINISTEA,e.POLTEAGEIST,e.HATENNA,e.HATTREM,e.HATTERENE,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.PINCURCHIN,e.SNOM,e.FROSMOTH,e.STONJOURNER,e.EISCUE,e.INDEEDEE,e.MORPEKO,e.CUFANT,e.COPPERAJAH,e.DREEPY,e.DRAKLOAK,e.DRAGAPULT,e.ZACIAN,e.ZAMAZENTA,e.ETERNATUS,e.KUBFU,e.URSHIFU,e.ZARUDE,e.REGIELEKI,e.REGIDRAGO,e.GLASTRIER,e.SPECTRIER,e.CALYREX,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.BASCULEGION,e.SNEASLER,e.OVERQWIL,e.ENAMORUS,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.PAWMI,e.PAWMO,e.PAWMOT,e.TANDEMAUS,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.SQUAWKABILLY,e.NACLI,e.NACLSTACK,e.GARGANACL,e.CHARCADET,e.ARMAROUGE,e.CERULEDGE,e.TADBULB,e.BELLIBOLT,e.WATTREL,e.KILOWATTREL,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.WIGLETT,e.WUGTRIO,e.BOMBIRDIER,e.FINIZEN,e.PALAFIN,e.VAROOM,e.REVAVROOM,e.CYCLIZAR,e.ORTHWORM,e.GLIMMET,e.GLIMMORA,e.GREAVARD,e.HOUNDSTONE,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.ANNIHILAPE,e.CLODSIRE,e.FARIGIRAF,e.DUDUNSPARCE,e.KINGAMBIT,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.GIMMIGHOUL,e.GHOLDENGO,e.WO_CHIEN,e.CHIEN_PAO,e.TING_LU,e.CHI_YU,e.ROARING_MOON,e.IRON_VALIANT,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.IRON_LEAVES,e.DIPPLIN,e.POLTCHAGEIST,e.SINISTCHA,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI,e.OGERPON,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN,e.PECHARUNT,e.GALAR_MEOWTH,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_WEEZING,e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES,e.GALAR_SLOWKING,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_VOLTORB,e.HISUI_ELECTRODE,e.HISUI_TYPHLOSION,e.HISUI_QWILFISH,e.HISUI_SNEASEL,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_BRAVIARY,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.ICE_SPINNER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.DELIBIRD,e.DONPHAN,e.HITMONTOP,e.LUDICOLO,e.SNORUNT,e.GLALIE,e.REGICE,e.REGISTEEL,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.BRONZOR,e.BRONZONG,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.FROSLASS,e.CINCCINO,e.CRYOGONAL,e.MIENSHAO,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.KOMALA,e.MAGEARNA,e.DREDNAW,e.FROSMOTH,e.EISCUE,e.QUAQUAVAL,e.CYCLIZAR,e.CETODDLE,e.CETITAN,e.DUDUNSPARCE,e.GREAT_TUSK,e.IRON_TREADS,e.IRON_BUNDLE,e.CHIEN_PAO,e.TERAPAGOS,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,[e.URSHIFU,"rapid-strike"],e.HISUI_LILLIGANT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG],[t.SNOWSCAPE]:[e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.LAPRAS,e.ARTICUNO,e.DRAGONITE,e.MEW,e.MARILL,e.AZUMARILL,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.MISDREAVUS,e.SNEASEL,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.BLISSEY,e.SUICUNE,e.WINGULL,e.PELIPPER,e.SPOINK,e.GRUMPIG,e.ALTARIA,e.SNORUNT,e.GLALIE,e.LUVDISC,e.REGICE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.SHELLOS,e.GASTRODON,e.MISMAGIUS,e.HAPPINY,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.PALKIA,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KYUREM,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.SKRELP,e.DRAGALGE,e.BERGMITE,e.AVALUGG,e.DIANCIE,e.PRIMARINA,e.CRABOMINABLE,e.MAGEARNA,e.INTELEON,e.FROSMOTH,e.EISCUE,e.GLASTRIER,e.BASCULEGION,e.CETODDLE,e.CETITAN,e.VELUZA,e.SCREAM_TAIL,e.IRON_BUNDLE,e.FRIGIBAX,e.ARCTIBAX,e.BAXCALIBUR,e.CHIEN_PAO,e.ALOLA_SANDSHREW,e.ALOLA_SANDSLASH,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_ARTICUNO,[e.CALYREX,"ice"],e.HISUI_SAMUROTT,e.HISUI_ZORUA,e.HISUI_ZOROARK,e.HISUI_AVALUGG],[t.POUNCE]:[e.VENONAT,e.VENOMOTH,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.SCYTHER,e.MEW,e.SPINARAK,e.ARIADOS,e.YANMA,e.PINECO,e.FORRETRESS,e.DUNSPARCE,e.SCIZOR,e.HERACROSS,e.SURSKIT,e.MASQUERAIN,e.SHROOMISH,e.BRELOOM,e.SLAKING,e.VOLBEAT,e.ILLUMISE,e.SEVIPER,e.SHUPPET,e.BANETTE,e.KRICKETUNE,e.VESPIQUEN,e.YANMEGA,e.HEATRAN,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.LARVESTA,e.VOLCARONA,e.SCATTERBUG,e.SPEWPA,e.VIVILLON,e.CLAUNCHER,e.CLAWITZER,e.GRUBBIN,e.CHARJABUG,e.VIKAVOLT,e.CUTIEFLY,e.RIBOMBEE,e.MAREANIE,e.TOXAPEX,e.MIMIKYU,e.APPLIN,e.FLAPPLE,e.APPLETUN,e.CRAMORANT,e.SNOM,e.FROSMOTH,e.DRAKLOAK,e.DRAGAPULT,e.KLEAVOR,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.SQUAWKABILLY,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.RELLOR,e.RABSCA,e.FLITTLE,e.ESPATHRA,e.TINKATINK,e.TINKATUFF,e.TINKATON,e.FLAMIGO,e.DUDUNSPARCE,e.IRON_MOTH,e.DIPPLIN,e.HYDRAPPLE],[t.TRAILBLAZE]:[e.BULBASAUR,e.IVYSAUR,e.VENUSAUR,e.EKANS,e.ARBOK,e.PIKACHU,e.RAICHU,e.JIGGLYPUFF,e.WIGGLYTUFF,e.ODDISH,e.GLOOM,e.VILEPLUME,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.BELLSPROUT,e.WEEPINBELL,e.VICTREEBEL,e.DODRIO,e.DROWZEE,e.HYPNO,e.HITMONCHAN,e.CHANSEY,e.SCYTHER,e.TAUROS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.SNORLAX,e.MEWTWO,e.MEW,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.SPINARAK,e.ARIADOS,e.PICHU,e.IGGLYBUFF,e.MAREEP,e.FLAAFFY,e.AMPHAROS,e.BELLOSSOM,e.MARILL,e.AZUMARILL,e.SUDOWOODO,e.HOPPIP,e.SKIPLOOM,e.JUMPLUFF,e.AIPOM,e.SUNKERN,e.SUNFLORA,e.WOOPER,e.QUAGSIRE,e.ESPEON,e.UMBREON,e.GIRAFARIG,e.SNUBBULL,e.GRANBULL,e.SCIZOR,e.HERACROSS,e.SNEASEL,e.TEDDIURSA,e.URSARING,e.SWINUB,e.PILOSWINE,e.DELIBIRD,e.HOUNDOUR,e.HOUNDOOM,e.PHANPY,e.DONPHAN,e.STANTLER,e.ELEKID,e.BLISSEY,e.RAIKOU,e.ENTEI,e.SUICUNE,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.POOCHYENA,e.MIGHTYENA,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.SEEDOT,e.NUZLEAF,e.SHIFTRY,e.VIGOROTH,e.SLAKING,e.MEDITITE,e.MEDICHAM,e.PLUSLE,e.MINUN,e.VOLBEAT,e.ILLUMISE,e.NUMEL,e.CAMERUPT,e.SPOINK,e.GRUMPIG,e.CACNEA,e.CACTURNE,e.SWABLU,e.ALTARIA,e.SEVIPER,e.BANETTE,e.TROPIUS,e.SNORUNT,e.GLALIE,e.METANG,e.METAGROSS,e.TURTWIG,e.GROTLE,e.TORTERRA,e.KRICKETUNE,e.SHINX,e.LUXIO,e.LUXRAY,e.CRANIDOS,e.RAMPARDOS,e.SHIELDON,e.BASTIODON,e.PACHIRISU,e.AMBIPOM,e.STUNKY,e.SKUNTANK,e.BONSLY,e.MUNCHLAX,e.RIOLU,e.LUCARIO,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.ELECTIVIRE,e.LEAFEON,e.GLACEON,e.MAMOSWINE,e.FROSLASS,e.SHAYMIN,e.ARCEUS,e.SNIVY,e.SERVINE,e.SERPERIOR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.BLITZLE,e.ZEBSTRIKA,e.SEWADDLE,e.SWADLOON,e.LEAVANNY,e.PETILIL,e.LILLIGANT,e.SCRAGGY,e.SCRAFTY,e.DUCKLETT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.DEERLING,e.SAWSBUCK,e.CHANDELURE,e.AXEW,e.FRAXURE,e.HAXORUS,e.CUBCHOO,e.BEARTIC,e.MIENFOO,e.MIENSHAO,e.LARVESTA,e.VOLCARONA,e.CHESPIN,e.QUILLADIN,e.CHESNAUGHT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.LITLEO,e.PYROAR,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKIDDO,e.GOGOAT,e.MEOWSTIC,e.MALAMAR,e.SYLVEON,e.HAWLUCHA,e.DEDENNE,e.PHANTUMP,e.TREVENANT,e.ROWLET,e.DARTRIX,e.DECIDUEYE,e.YUNGOOS,e.GUMSHOOS,e.ORICORIO,e.CUTIEFLY,e.RIBOMBEE,e.ROCKRUFF,e.LYCANROC,e.DEWPIDER,e.ARAQUANID,e.FOMANTIS,e.LURANTIS,e.SALANDIT,e.SALAZZLE,e.BOUNSWEET,e.STEENEE,e.TSAREENA,e.COMFEY,e.ORANGURU,e.PASSIMIAN,e.KOMALA,e.MIMIKYU,e.GROOKEY,e.THWACKEY,e.RILLABOOM,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.SKWOVET,e.GREEDENT,e.FLAPPLE,e.APPLETUN,e.TOXTRICITY,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.FALINKS,e.ZACIAN,e.ZAMAZENTA,e.URSHIFU,e.ZARUDE,e.GLASTRIER,e.WYRDEER,e.KLEAVOR,e.URSALUNA,e.SNEASLER,e.SPRIGATITO,e.FLORAGATO,e.MEOWSCARADA,e.LECHONK,e.OINKOLOGNE,e.TAROUNTULA,e.SPIDOPS,e.NYMBLE,e.LOKIX,e.MAUSHOLD,e.FIDOUGH,e.DACHSBUN,e.SMOLIV,e.DOLLIV,e.ARBOLIVA,e.MASCHIFF,e.MABOSSTIFF,e.SHROODLE,e.GRAFAIAI,e.BRAMBLIN,e.BRAMBLEGHAST,e.TOEDSCOOL,e.TOEDSCRUEL,e.KLAWF,e.CAPSAKID,e.SCOVILLAIN,e.CYCLIZAR,e.CLODSIRE,e.FARIGIRAF,e.BRUTE_BONNET,e.SLITHER_WING,e.WO_CHIEN,e.IRON_LEAVES,e.MUNKIDORI,e.OGERPON,e.ALOLA_RAICHU,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_MEOWTH,e.GALAR_ZAPDOS,[e.CALYREX,"ice"],e.HISUI_SNEASEL,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE,e.PALDEA_TAUROS,e.PALDEA_WOOPER,e.BLOODMOON_URSALUNA],[t.CHILLING_WATER]:[e.SQUIRTLE,e.WARTORTLE,e.BLASTOISE,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.MEOWTH,e.PERSIAN,e.PSYDUCK,e.GOLDUCK,e.POLIWAG,e.POLIWHIRL,e.POLIWRATH,e.TENTACOOL,e.TENTACRUEL,e.SLOWPOKE,e.SLOWBRO,e.SEEL,e.DEWGONG,e.SHELLDER,e.CLOYSTER,e.CHANSEY,e.HORSEA,e.SEADRA,e.GYARADOS,e.LAPRAS,e.VAPOREON,e.SNORLAX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEWTWO,e.MEW,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.SENTRET,e.FURRET,e.CHINCHOU,e.LANTURN,e.CLEFFA,e.MARILL,e.AZUMARILL,e.POLITOED,e.AIPOM,e.WOOPER,e.QUAGSIRE,e.SLOWKING,e.DUNSPARCE,e.QWILFISH,e.DELIBIRD,e.KINGDRA,e.BLISSEY,e.SUICUNE,e.LUGIA,e.MUDKIP,e.MARSHTOMP,e.SWAMPERT,e.LOTAD,e.LOMBRE,e.LUDICOLO,e.NUZLEAF,e.SHIFTRY,e.WINGULL,e.PELIPPER,e.SURSKIT,e.MASQUERAIN,e.SLAKOTH,e.VIGOROTH,e.SLAKING,e.MAKUHITA,e.HARIYAMA,e.VOLBEAT,e.SPOINK,e.GRUMPIG,e.BARBOACH,e.WHISCASH,e.CORPHISH,e.CRAWDAUNT,e.FEEBAS,e.MILOTIC,e.SNORUNT,e.GLALIE,e.LATIAS,e.LATIOS,e.KYOGRE,e.PIPLUP,e.PRINPLUP,e.EMPOLEON,e.BUIZEL,e.FLOATZEL,e.SHELLOS,e.GASTRODON,e.AMBIPOM,e.HONCHKROW,e.MUNCHLAX,e.CROAGUNK,e.TOXICROAK,e.FINNEON,e.LUMINEON,e.SNOVER,e.ABOMASNOW,e.WEAVILE,e.GLACEON,e.FROSLASS,e.PALKIA,e.PHIONE,e.MANAPHY,e.ARCEUS,e.OSHAWOTT,e.DEWOTT,e.SAMUROTT,e.BASCULIN,e.MINCCINO,e.CINCCINO,e.DUCKLETT,e.SWANNA,e.ALOMOMOLA,e.CUBCHOO,e.BEARTIC,e.CRYOGONAL,e.TORNADUS,e.KELDEO,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.SKRELP,e.DRAGALGE,e.CLAUNCHER,e.CLAWITZER,e.GOOMY,e.SLIGGOO,e.GOODRA,e.BERGMITE,e.AVALUGG,e.POPPLIO,e.BRIONNE,e.PRIMARINA,e.YUNGOOS,e.GUMSHOOS,e.CRABRAWLER,e.CRABOMINABLE,e.MAREANIE,e.TOXAPEX,e.DEWPIDER,e.ARAQUANID,e.ORANGURU,e.PASSIMIAN,e.SANDYGAST,e.PALOSSAND,e.BRUXISH,e.SOBBLE,e.DRIZZILE,e.INTELEON,e.CHEWTLE,e.DREDNAW,e.CRAMORANT,e.ARROKUDA,e.BARRASKEWDA,e.IMPIDIMP,e.MORGREM,e.GRIMMSNARL,e.PERRSERKER,e.PINCURCHIN,e.EISCUE,e.BASCULEGION,e.OVERQWIL,e.MEOWSCARADA,e.QUAXLY,e.QUAXWELL,e.QUAQUAVAL,e.LECHONK,e.OINKOLOGNE,e.MAUSHOLD,e.TADBULB,e.BELLIBOLT,e.WIGLETT,e.WUGTRIO,e.FINIZEN,e.PALAFIN,e.FLAMIGO,e.CETODDLE,e.CETITAN,e.VELUZA,e.DONDOZO,e.TATSUGIRI,e.CLODSIRE,e.DUDUNSPARCE,e.IRON_BUNDLE,e.WALKING_WAKE,e.ALOLA_VULPIX,e.ALOLA_NINETALES,e.ALOLA_MEOWTH,e.ALOLA_PERSIAN,e.ETERNAL_FLOETTE,e.GALAR_SLOWPOKE,e.GALAR_SLOWBRO,e.GALAR_SLOWKING,[e.URSHIFU,"rapid-strike"],e.HISUI_QWILFISH,e.HISUI_SAMUROTT,e.HISUI_SLIGGOO,e.HISUI_GOODRA,e.HISUI_AVALUGG,[e.PALDEA_TAUROS,"aqua"],e.PALDEA_WOOPER],[t.HARD_PRESS]:[e.GRAVELER,e.GOLEM,e.SNORLAX,e.MEW,e.FORRETRESS,e.SCIZOR,e.TYRANITAR,e.SWAMPERT,e.SLAKING,e.CRAWDAUNT,e.METANG,e.METAGROSS,e.REGIROCK,e.REGISTEEL,e.TORTERRA,e.SHIELDON,e.BASTIODON,e.BRONZONG,e.HIPPOWDON,e.ABOMASNOW,e.MAGNEZONE,e.MAMOSWINE,e.PROBOPASS,e.DUSKNOIR,e.HEATRAN,e.REGIGIGAS,e.EMBOAR,e.CONKELDURR,e.BEARTIC,e.GOLURK,e.CRABOMINABLE,e.STONJOURNER,e.COPPERAJAH,e.URSALUNA,e.GARGANACL,e.TINKATON,e.PALAFIN,e.REVAVROOM,e.CETITAN,e.IRON_TREADS,e.IRON_HANDS,e.OKIDOGI,e.ARCHALUDON,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_AVALUGG,e.BLOODMOON_URSALUNA],[t.DRAGON_CHEER]:[e.CHARIZARD,e.GYARADOS,e.LAPRAS,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.MEW,e.AMPHAROS,e.SCEPTILE,e.FLYGON,e.SWABLU,e.ALTARIA,e.MILOTIC,e.BAGON,e.SHELGON,e.SALAMENCE,e.LATIAS,e.LATIOS,e.RAYQUAZA,e.CRANIDOS,e.RAMPARDOS,e.GIBLE,e.GABITE,e.GARCHOMP,e.AXEW,e.FRAXURE,e.HAXORUS,e.DEINO,e.ZWEILOUS,e.HYDREIGON,e.RESHIRAM,e.ZEKROM,e.KYUREM,e.GOODRA,e.NOIVERN,e.SALAZZLE,e.JANGMO_O,e.HAKAMO_O,e.KOMMO_O,e.DURALUDON,e.DRAKLOAK,e.DRAGAPULT,e.REGIDRAGO,e.CYCLIZAR,e.TATSUGIRI,e.IRON_JUGULIS,e.BAXCALIBUR,e.ROARING_MOON,e.KORAIDON,e.MIRAIDON,e.WALKING_WAKE,e.DIPPLIN,e.ARCHALUDON,e.HYDRAPPLE,e.GOUGING_FIRE,e.RAGING_BOLT,e.ALOLA_EXEGGUTOR,e.HISUI_GOODRA],[t.ALLURING_VOICE]:[e.PIKACHU,e.RAICHU,e.CLEFAIRY,e.CLEFABLE,e.JIGGLYPUFF,e.WIGGLYTUFF,e.DEWGONG,e.LAPRAS,e.EEVEE,e.VAPOREON,e.JOLTEON,e.FLAREON,e.MEW,e.CLEFFA,e.IGGLYBUFF,e.MARILL,e.AZUMARILL,e.ESPEON,e.UMBREON,e.BLISSEY,e.RALTS,e.KIRLIA,e.GARDEVOIR,e.AZURILL,e.PLUSLE,e.MINUN,e.FLYGON,e.ALTARIA,e.MILOTIC,e.LATIAS,e.PACHIRISU,e.FINNEON,e.LUMINEON,e.LEAFEON,e.GLACEON,e.GALLADE,e.PHIONE,e.MANAPHY,e.LILLIGANT,e.MINCCINO,e.CINCCINO,e.SWANNA,e.ALOMOMOLA,e.MELOETTA,e.FLABEBE,e.FLOETTE,e.FLORGES,e.MEOWSTIC,e.SYLVEON,e.PRIMARINA,e.ORICORIO,e.RIBOMBEE,e.COMFEY,e.ALCREMIE,e.ENAMORUS,e.SKELEDIRGE,e.FIDOUGH,e.DACHSBUN,e.ARBOLIVA,e.FEZANDIPITI,e.ALOLA_RAICHU,e.ETERNAL_FLOETTE,[e.INDEEDEE,"female"]],[t.TEMPER_FLARE]:[e.CHARMANDER,e.CHARMELEON,e.CHARIZARD,e.GROWLITHE,e.ARCANINE,e.MAGMAR,e.GYARADOS,e.FLAREON,e.MOLTRES,e.MEW,e.CYNDAQUIL,e.QUILAVA,e.TYPHLOSION,e.SNUBBULL,e.GRANBULL,e.SLUGMA,e.MAGCARGO,e.HOUNDOUR,e.HOUNDOOM,e.MAGBY,e.TORCHIC,e.COMBUSKEN,e.BLAZIKEN,e.NUMEL,e.CAMERUPT,e.TORKOAL,e.SHELGON,e.SALAMENCE,e.CHIMCHAR,e.MONFERNO,e.INFERNAPE,e.DRIFLOON,e.DRIFBLIM,e.STUNKY,e.SKUNTANK,e.RHYPERIOR,e.MAGMORTAR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.LITWICK,e.LAMPENT,e.CHANDELURE,e.FLETCHINDER,e.TALONFLAME,e.PYROAR,e.LITTEN,e.TORRACAT,e.INCINEROAR,e.TOUCANNON,e.SALANDIT,e.SALAZZLE,e.SCORBUNNY,e.RABOOT,e.CINDERACE,e.ROLYCOLY,e.CARKOL,e.COALOSSAL,e.FUECOCO,e.CROCALOR,e.SKELEDIRGE,e.KLAWF,e.SCOVILLAIN,e.REVAVROOM,e.CYCLIZAR,e.GREAT_TUSK,e.SLITHER_WING,e.CHI_YU,e.KORAIDON,e.GOUGING_FIRE,e.HISUI_GROWLITHE,e.HISUI_ARCANINE,e.HISUI_TYPHLOSION,[e.PALDEA_TAUROS,"blaze"]],[t.SUPERCELL_SLAM]:[e.ELECTRODE,e.RHYHORN,e.RHYDON,e.ELECTABUZZ,e.SNORLAX,e.ZAPDOS,e.MEW,e.AMPHAROS,e.ELEKID,e.RAIKOU,e.MANECTRIC,e.LUXRAY,e.RAMPARDOS,e.MAGNEZONE,e.RHYPERIOR,e.ELECTIVIRE,e.PROBOPASS,e.ARCEUS,e.BLITZLE,e.ZEBSTRIKA,e.EELEKTROSS,e.THUNDURUS,e.ZEKROM,e.VIKAVOLT,e.PINCURCHIN,e.COPPERAJAH,e.REGIELEKI,e.URSALUNA,e.PAWMOT,e.BELLIBOLT,e.KILOWATTREL,e.CYCLIZAR,e.GREAT_TUSK,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_HANDS,e.IRON_THORNS,e.MIRAIDON,e.RAGING_BOLT,e.IRON_CROWN,e.TERAPAGOS,e.ALOLA_GEODUDE,e.ALOLA_GRAVELER,e.ALOLA_GOLEM,e.HISUI_ELECTRODE],[t.PSYCHIC_NOISE]:[e.JIGGLYPUFF,e.WIGGLYTUFF,e.VENONAT,e.VENOMOTH,e.PSYDUCK,e.GOLDUCK,e.SLOWBRO,e.GENGAR,e.DROWZEE,e.HYPNO,e.EXEGGCUTE,e.EXEGGUTOR,e.LAPRAS,e.MEWTWO,e.MEW,e.NOCTOWL,e.YANMA,e.ESPEON,e.MURKROW,e.SLOWKING,e.MISDREAVUS,e.GIRAFARIG,e.LUGIA,e.GARDEVOIR,e.GRUMPIG,e.FLYGON,e.CHIMECHO,e.METANG,e.METAGROSS,e.LATIOS,e.JIRACHI,e.DEOXYS,e.VESPIQUEN,e.MISMAGIUS,e.HONCHKROW,e.CHINGLING,e.BRONZOR,e.BRONZONG,e.YANMEGA,e.UXIE,e.MESPRIT,e.GOTHITA,e.GOTHORITA,e.GOTHITELLE,e.REUNICLUS,e.DELPHOX,e.FLORGES,e.ESPURR,e.MEOWSTIC,e.MALAMAR,e.TREVENANT,e.NOIVERN,e.HOOPA,e.PRIMARINA,e.RIBOMBEE,e.ORANGURU,e.BRUXISH,e.TOXTRICITY,e.HATTERENE,e.INDEEDEE,e.WYRDEER,e.RABSCA,e.FARIGIRAF,e.SCREAM_TAIL,e.MUNKIDORI,e.IRON_CROWN,e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR,e.GALAR_ARTICUNO,e.GALAR_SLOWKING,e.HISUI_BRAVIARY],[t.UPPER_HAND]:[e.PIKACHU,e.RAICHU,e.POLIWRATH,e.HITMONLEE,e.HITMONCHAN,e.MEW,e.AIPOM,e.HERACROSS,e.SNEASEL,e.TYROGUE,e.HITMONTOP,e.TREECKO,e.GROVYLE,e.SCEPTILE,e.BLAZIKEN,e.SHIFTRY,e.HARIYAMA,e.MEDITITE,e.MEDICHAM,e.ZANGOOSE,e.MONFERNO,e.INFERNAPE,e.AMBIPOM,e.RIOLU,e.LUCARIO,e.CROAGUNK,e.TOXICROAK,e.WEAVILE,e.GALLADE,e.SAMUROTT,e.CONKELDURR,e.SCRAGGY,e.SCRAFTY,e.MIENFOO,e.MIENSHAO,e.COBALION,e.TERRAKION,e.VIRIZION,e.KELDEO,e.GRENINJA,e.TALONFLAME,e.HAWLUCHA,e.CRABRAWLER,e.CRABOMINABLE,[e.LYCANROC,"midnight"],e.PASSIMIAN,e.HAKAMO_O,e.KOMMO_O,e.FALINKS,e.SNEASLER,e.QUAQUAVAL,e.SPIDOPS,e.PAWMO,e.PAWMOT,e.FLAMIGO,e.OKIDOGI,e.ALOLA_RAICHU,e.HISUI_SAMUROTT,e.HISUI_LILLIGANT,e.HISUI_DECIDUEYE]};function KZ(){const E={};for(const A in fn){const s=Number(A),R=fn[A];for(const n of R)if(Array.isArray(n)){const[I,...r]=n,L=Number(I);E[L]||(E[L]=[]);for(const N of r)E[L].push([N,s])}else{const I=Number(n);E[I]||(E[I]=[]),E[I].push(s)}}return E}o(KZ,"transposeTmSpecies");const Lk=KZ(),Zl={[t.MEGA_PUNCH]:V.GREAT,[t.PAY_DAY]:V.ULTRA,[t.FIRE_PUNCH]:V.GREAT,[t.ICE_PUNCH]:V.GREAT,[t.THUNDER_PUNCH]:V.GREAT,[t.SWORDS_DANCE]:V.COMMON,[t.CUT]:V.COMMON,[t.FLY]:V.COMMON,[t.MEGA_KICK]:V.GREAT,[t.BODY_SLAM]:V.GREAT,[t.TAKE_DOWN]:V.GREAT,[t.DOUBLE_EDGE]:V.ULTRA,[t.PIN_MISSILE]:V.COMMON,[t.ROAR]:V.COMMON,[t.FLAMETHROWER]:V.ULTRA,[t.HYDRO_PUMP]:V.ULTRA,[t.SURF]:V.ULTRA,[t.ICE_BEAM]:V.ULTRA,[t.BLIZZARD]:V.ULTRA,[t.PSYBEAM]:V.GREAT,[t.HYPER_BEAM]:V.ULTRA,[t.LOW_KICK]:V.COMMON,[t.COUNTER]:V.COMMON,[t.STRENGTH]:V.GREAT,[t.SOLAR_BEAM]:V.ULTRA,[t.FIRE_SPIN]:V.COMMON,[t.THUNDERBOLT]:V.ULTRA,[t.THUNDER_WAVE]:V.COMMON,[t.THUNDER]:V.ULTRA,[t.EARTHQUAKE]:V.ULTRA,[t.DIG]:V.GREAT,[t.TOXIC]:V.GREAT,[t.PSYCHIC]:V.ULTRA,[t.AGILITY]:V.COMMON,[t.NIGHT_SHADE]:V.COMMON,[t.SCREECH]:V.COMMON,[t.DOUBLE_TEAM]:V.COMMON,[t.CONFUSE_RAY]:V.COMMON,[t.LIGHT_SCREEN]:V.COMMON,[t.HAZE]:V.COMMON,[t.REFLECT]:V.COMMON,[t.FOCUS_ENERGY]:V.COMMON,[t.METRONOME]:V.COMMON,[t.SELF_DESTRUCT]:V.GREAT,[t.FIRE_BLAST]:V.ULTRA,[t.WATERFALL]:V.GREAT,[t.SWIFT]:V.COMMON,[t.AMNESIA]:V.COMMON,[t.DREAM_EATER]:V.GREAT,[t.LEECH_LIFE]:V.ULTRA,[t.FLASH]:V.COMMON,[t.EXPLOSION]:V.GREAT,[t.REST]:V.COMMON,[t.ROCK_SLIDE]:V.GREAT,[t.TRI_ATTACK]:V.ULTRA,[t.SUPER_FANG]:V.COMMON,[t.SUBSTITUTE]:V.COMMON,[t.THIEF]:V.GREAT,[t.SNORE]:V.COMMON,[t.CURSE]:V.COMMON,[t.REVERSAL]:V.COMMON,[t.SPITE]:V.COMMON,[t.PROTECT]:V.COMMON,[t.SCARY_FACE]:V.COMMON,[t.SLUDGE_BOMB]:V.GREAT,[t.MUD_SLAP]:V.COMMON,[t.SPIKES]:V.COMMON,[t.ICY_WIND]:V.GREAT,[t.OUTRAGE]:V.ULTRA,[t.SANDSTORM]:V.COMMON,[t.GIGA_DRAIN]:V.ULTRA,[t.ENDURE]:V.COMMON,[t.CHARM]:V.COMMON,[t.FALSE_SWIPE]:V.COMMON,[t.SWAGGER]:V.COMMON,[t.STEEL_WING]:V.GREAT,[t.ATTRACT]:V.COMMON,[t.SLEEP_TALK]:V.COMMON,[t.HEAL_BELL]:V.COMMON,[t.RETURN]:V.ULTRA,[t.FRUSTRATION]:V.COMMON,[t.SAFEGUARD]:V.COMMON,[t.PAIN_SPLIT]:V.COMMON,[t.MEGAHORN]:V.ULTRA,[t.BATON_PASS]:V.COMMON,[t.ENCORE]:V.COMMON,[t.IRON_TAIL]:V.GREAT,[t.METAL_CLAW]:V.COMMON,[t.SYNTHESIS]:V.GREAT,[t.HIDDEN_POWER]:V.GREAT,[t.RAIN_DANCE]:V.COMMON,[t.SUNNY_DAY]:V.COMMON,[t.CRUNCH]:V.GREAT,[t.PSYCH_UP]:V.COMMON,[t.SHADOW_BALL]:V.ULTRA,[t.FUTURE_SIGHT]:V.GREAT,[t.ROCK_SMASH]:V.COMMON,[t.WHIRLPOOL]:V.COMMON,[t.BEAT_UP]:V.COMMON,[t.UPROAR]:V.GREAT,[t.HEAT_WAVE]:V.ULTRA,[t.HAIL]:V.COMMON,[t.TORMENT]:V.COMMON,[t.WILL_O_WISP]:V.COMMON,[t.FACADE]:V.GREAT,[t.FOCUS_PUNCH]:V.COMMON,[t.NATURE_POWER]:V.COMMON,[t.CHARGE]:V.COMMON,[t.TAUNT]:V.COMMON,[t.HELPING_HAND]:V.COMMON,[t.TRICK]:V.COMMON,[t.SUPERPOWER]:V.ULTRA,[t.RECYCLE]:V.COMMON,[t.REVENGE]:V.GREAT,[t.BRICK_BREAK]:V.GREAT,[t.KNOCK_OFF]:V.GREAT,[t.ENDEAVOR]:V.COMMON,[t.SKILL_SWAP]:V.COMMON,[t.IMPRISON]:V.COMMON,[t.SECRET_POWER]:V.COMMON,[t.DIVE]:V.GREAT,[t.FEATHER_DANCE]:V.COMMON,[t.BLAZE_KICK]:V.GREAT,[t.HYPER_VOICE]:V.ULTRA,[t.BLAST_BURN]:V.ULTRA,[t.HYDRO_CANNON]:V.ULTRA,[t.WEATHER_BALL]:V.COMMON,[t.FAKE_TEARS]:V.COMMON,[t.AIR_CUTTER]:V.GREAT,[t.OVERHEAT]:V.ULTRA,[t.ROCK_TOMB]:V.GREAT,[t.METAL_SOUND]:V.COMMON,[t.COSMIC_POWER]:V.COMMON,[t.SIGNAL_BEAM]:V.GREAT,[t.SAND_TOMB]:V.COMMON,[t.MUDDY_WATER]:V.GREAT,[t.BULLET_SEED]:V.GREAT,[t.AERIAL_ACE]:V.GREAT,[t.ICICLE_SPEAR]:V.GREAT,[t.IRON_DEFENSE]:V.GREAT,[t.DRAGON_CLAW]:V.ULTRA,[t.FRENZY_PLANT]:V.ULTRA,[t.BULK_UP]:V.COMMON,[t.BOUNCE]:V.GREAT,[t.MUD_SHOT]:V.GREAT,[t.POISON_TAIL]:V.GREAT,[t.COVET]:V.GREAT,[t.MAGICAL_LEAF]:V.GREAT,[t.CALM_MIND]:V.GREAT,[t.LEAF_BLADE]:V.ULTRA,[t.DRAGON_DANCE]:V.GREAT,[t.ROCK_BLAST]:V.GREAT,[t.WATER_PULSE]:V.GREAT,[t.ROOST]:V.GREAT,[t.GRAVITY]:V.COMMON,[t.GYRO_BALL]:V.COMMON,[t.BRINE]:V.GREAT,[t.PLUCK]:V.GREAT,[t.TAILWIND]:V.GREAT,[t.U_TURN]:V.GREAT,[t.CLOSE_COMBAT]:V.ULTRA,[t.PAYBACK]:V.COMMON,[t.ASSURANCE]:V.COMMON,[t.EMBARGO]:V.COMMON,[t.FLING]:V.COMMON,[t.GASTRO_ACID]:V.GREAT,[t.POWER_SWAP]:V.COMMON,[t.GUARD_SWAP]:V.COMMON,[t.WORRY_SEED]:V.GREAT,[t.TOXIC_SPIKES]:V.GREAT,[t.FLARE_BLITZ]:V.ULTRA,[t.AURA_SPHERE]:V.GREAT,[t.ROCK_POLISH]:V.COMMON,[t.POISON_JAB]:V.GREAT,[t.DARK_PULSE]:V.GREAT,[t.AQUA_TAIL]:V.GREAT,[t.SEED_BOMB]:V.GREAT,[t.AIR_SLASH]:V.GREAT,[t.X_SCISSOR]:V.GREAT,[t.BUG_BUZZ]:V.GREAT,[t.DRAGON_PULSE]:V.GREAT,[t.POWER_GEM]:V.GREAT,[t.DRAIN_PUNCH]:V.GREAT,[t.VACUUM_WAVE]:V.COMMON,[t.FOCUS_BLAST]:V.GREAT,[t.ENERGY_BALL]:V.GREAT,[t.BRAVE_BIRD]:V.ULTRA,[t.EARTH_POWER]:V.ULTRA,[t.GIGA_IMPACT]:V.GREAT,[t.NASTY_PLOT]:V.COMMON,[t.AVALANCHE]:V.GREAT,[t.SHADOW_CLAW]:V.GREAT,[t.THUNDER_FANG]:V.GREAT,[t.ICE_FANG]:V.GREAT,[t.FIRE_FANG]:V.GREAT,[t.PSYCHO_CUT]:V.GREAT,[t.ZEN_HEADBUTT]:V.GREAT,[t.FLASH_CANNON]:V.GREAT,[t.ROCK_CLIMB]:V.GREAT,[t.DEFOG]:V.COMMON,[t.TRICK_ROOM]:V.COMMON,[t.DRACO_METEOR]:V.ULTRA,[t.LEAF_STORM]:V.ULTRA,[t.POWER_WHIP]:V.ULTRA,[t.CROSS_POISON]:V.GREAT,[t.GUNK_SHOT]:V.ULTRA,[t.IRON_HEAD]:V.GREAT,[t.STONE_EDGE]:V.ULTRA,[t.STEALTH_ROCK]:V.COMMON,[t.GRASS_KNOT]:V.ULTRA,[t.BUG_BITE]:V.GREAT,[t.CHARGE_BEAM]:V.GREAT,[t.HONE_CLAWS]:V.COMMON,[t.WONDER_ROOM]:V.COMMON,[t.PSYSHOCK]:V.GREAT,[t.VENOSHOCK]:V.GREAT,[t.MAGIC_ROOM]:V.COMMON,[t.SMACK_DOWN]:V.COMMON,[t.SLUDGE_WAVE]:V.GREAT,[t.HEAVY_SLAM]:V.GREAT,[t.ELECTRO_BALL]:V.GREAT,[t.FLAME_CHARGE]:V.GREAT,[t.LOW_SWEEP]:V.GREAT,[t.ACID_SPRAY]:V.COMMON,[t.FOUL_PLAY]:V.ULTRA,[t.ROUND]:V.COMMON,[t.ECHOED_VOICE]:V.COMMON,[t.STORED_POWER]:V.COMMON,[t.ALLY_SWITCH]:V.COMMON,[t.SCALD]:V.GREAT,[t.HEX]:V.GREAT,[t.SKY_DROP]:V.GREAT,[t.INCINERATE]:V.GREAT,[t.QUASH]:V.COMMON,[t.ACROBATICS]:V.GREAT,[t.RETALIATE]:V.GREAT,[t.WATER_PLEDGE]:V.GREAT,[t.FIRE_PLEDGE]:V.GREAT,[t.GRASS_PLEDGE]:V.GREAT,[t.VOLT_SWITCH]:V.GREAT,[t.STRUGGLE_BUG]:V.COMMON,[t.BULLDOZE]:V.GREAT,[t.FROST_BREATH]:V.GREAT,[t.DRAGON_TAIL]:V.GREAT,[t.WORK_UP]:V.COMMON,[t.ELECTROWEB]:V.GREAT,[t.WILD_CHARGE]:V.GREAT,[t.DRILL_RUN]:V.GREAT,[t.RAZOR_SHELL]:V.GREAT,[t.HEAT_CRASH]:V.GREAT,[t.TAIL_SLAP]:V.GREAT,[t.HURRICANE]:V.ULTRA,[t.SNARL]:V.COMMON,[t.PHANTOM_FORCE]:V.ULTRA,[t.PETAL_BLIZZARD]:V.GREAT,[t.DISARMING_VOICE]:V.GREAT,[t.DRAINING_KISS]:V.GREAT,[t.GRASSY_TERRAIN]:V.COMMON,[t.MISTY_TERRAIN]:V.COMMON,[t.PLAY_ROUGH]:V.GREAT,[t.CONFIDE]:V.COMMON,[t.MYSTICAL_FIRE]:V.GREAT,[t.EERIE_IMPULSE]:V.COMMON,[t.VENOM_DRENCH]:V.COMMON,[t.ELECTRIC_TERRAIN]:V.COMMON,[t.DAZZLING_GLEAM]:V.ULTRA,[t.INFESTATION]:V.COMMON,[t.POWER_UP_PUNCH]:V.GREAT,[t.DARKEST_LARIAT]:V.GREAT,[t.HIGH_HORSEPOWER]:V.ULTRA,[t.SOLAR_BLADE]:V.GREAT,[t.THROAT_CHOP]:V.GREAT,[t.POLLEN_PUFF]:V.GREAT,[t.PSYCHIC_TERRAIN]:V.COMMON,[t.LUNGE]:V.GREAT,[t.SPEED_SWAP]:V.COMMON,[t.SMART_STRIKE]:V.GREAT,[t.BRUTAL_SWING]:V.GREAT,[t.AURORA_VEIL]:V.COMMON,[t.PSYCHIC_FANGS]:V.GREAT,[t.STOMPING_TANTRUM]:V.GREAT,[t.LIQUIDATION]:V.ULTRA,[t.BODY_PRESS]:V.ULTRA,[t.BREAKING_SWIPE]:V.GREAT,[t.STEEL_BEAM]:V.ULTRA,[t.EXPANDING_FORCE]:V.GREAT,[t.STEEL_ROLLER]:V.COMMON,[t.SCALE_SHOT]:V.ULTRA,[t.METEOR_BEAM]:V.GREAT,[t.MISTY_EXPLOSION]:V.COMMON,[t.GRASSY_GLIDE]:V.COMMON,[t.RISING_VOLTAGE]:V.COMMON,[t.TERRAIN_PULSE]:V.COMMON,[t.SKITTER_SMACK]:V.GREAT,[t.BURNING_JEALOUSY]:V.GREAT,[t.LASH_OUT]:V.GREAT,[t.POLTERGEIST]:V.ULTRA,[t.CORROSIVE_GAS]:V.COMMON,[t.COACHING]:V.COMMON,[t.FLIP_TURN]:V.COMMON,[t.TRIPLE_AXEL]:V.COMMON,[t.DUAL_WINGBEAT]:V.COMMON,[t.SCORCHING_SANDS]:V.GREAT,[t.TERA_BLAST]:V.GREAT,[t.ICE_SPINNER]:V.GREAT,[t.SNOWSCAPE]:V.COMMON,[t.POUNCE]:V.COMMON,[t.TRAILBLAZE]:V.COMMON,[t.CHILLING_WATER]:V.COMMON,[t.HARD_PRESS]:V.GREAT,[t.DRAGON_CHEER]:V.COMMON,[t.ALLURING_VOICE]:V.GREAT,[t.TEMPER_FLARE]:V.GREAT,[t.SUPERCELL_SLAM]:V.GREAT,[t.PSYCHIC_NOISE]:V.GREAT,[t.UPPER_HAND]:V.COMMON};function zR(E,A=!1,s=!1,R=!1,n=HO.DEFAULT){let I=aa(rt[E]);if(u.exists(`nature:${I}`)&&(I=u.t(`nature:${I}`)),A){let r=null,L=null;for(const C of ka){const U=al(E,C);U>1?r=C:U<1&&(L=C)}const N=s?k.SUMMARY_ALT:k.WINDOW,l=R?(C,U)=>C:(C,U)=>hO(C,U,n);r&&L?I=`${l(`${I}${s?" ":`
`}(`,N)}${l(`+${u.t(Or(r))}`,k.SUMMARY_PINK)}${l("/",N)}${l(`-${u.t(Or(L))}`,k.SUMMARY_BLUE)}${l(")",N)}`:I=l(`${I}${s?" ":`
`}(-)`,N)}return I}o(zR,"getNatureName");function al(E,A){switch(A){case p.ATK:switch(E){case rt.LONELY:case rt.BRAVE:case rt.ADAMANT:case rt.NAUGHTY:return 1.1;case rt.BOLD:case rt.TIMID:case rt.MODEST:case rt.CALM:return .9}break;case p.DEF:switch(E){case rt.BOLD:case rt.RELAXED:case rt.IMPISH:case rt.LAX:return 1.1;case rt.LONELY:case rt.HASTY:case rt.MILD:case rt.GENTLE:return .9}break;case p.SPATK:switch(E){case rt.MODEST:case rt.MILD:case rt.QUIET:case rt.RASH:return 1.1;case rt.ADAMANT:case rt.IMPISH:case rt.JOLLY:case rt.CAREFUL:return .9}break;case p.SPDEF:switch(E){case rt.CALM:case rt.GENTLE:case rt.SASSY:case rt.CAREFUL:return 1.1;case rt.NAUGHTY:case rt.LAX:case rt.NAIVE:case rt.RASH:return .9}break;case p.SPD:switch(E){case rt.TIMID:case rt.HASTY:case rt.JOLLY:case rt.NAIVE:return 1.1;case rt.BRAVE:case rt.RELAXED:case rt.QUIET:case rt.SASSY:return .9}break}return 1}o(al,"getNatureStatMultiplier");const ok=99;function fO(E){switch(E){case we.POKEBALL:return"pb";case we.GREAT_BALL:return"gb";case we.ULTRA_BALL:return"ub";case we.ROGUE_BALL:return"rb";case we.MASTER_BALL:return"mb";case we.LUXURY_BALL:return"lb"}}o(fO,"getPokeballAtlasKey");function ZC(E){let A;switch(E){case we.POKEBALL:A=u.t("pokeball:pokeBall");break;case we.GREAT_BALL:A=u.t("pokeball:greatBall");break;case we.ULTRA_BALL:A=u.t("pokeball:ultraBall");break;case we.ROGUE_BALL:A=u.t("pokeball:rogueBall");break;case we.MASTER_BALL:A=u.t("pokeball:masterBall");break;case we.LUXURY_BALL:A=u.t("pokeball:luxuryBall");break}return A}o(ZC,"getPokeballName");function XC(E){switch(E){case we.POKEBALL:return 1;case we.GREAT_BALL:return 1.5;case we.ULTRA_BALL:return 2;case we.ROGUE_BALL:return 3;case we.MASTER_BALL:return-1;case we.LUXURY_BALL:return 1}}o(XC,"getPokeballCatchMultiplier");function Rn(E){switch(E){case we.POKEBALL:return 13969705;case we.GREAT_BALL:return 9745630;case we.ULTRA_BALL:return 15125809;case we.ROGUE_BALL:return 13969705;case we.MASTER_BALL:return 10764733;case we.LUXURY_BALL:return 16768618}}o(Rn,"getPokeballTintColor");function FZ(E){var n;if(a.gameMode.isFreshStartChallenge())return 0;const A=a.gameData.getSpeciesCount(I=>!!I.caughtAttr),s=new je(1);(n=a.findModifier(I=>I instanceof $N))==null||n.apply(s);const R=a.gameMode.isDaily||A>800?2.5:A>600?2:A>400?1.5:A>200?1:A>100?.5:0;return Math.floor(s.value*R*Math.min(255,E)/6)}o(FZ,"getCriticalCaptureChance");function Tk(E,A,s,R,n,I=!1){let r=1,L=A,N=s;const l=s-A,C=E.x,U=C+3,D=C-3;let M=4;const h=o(()=>{a.tweens.add({targets:E,y:s,duration:r*R,ease:"Cubic.easeIn",onComplete:o(()=>{a.playSound("se/pb_bounce_1",{volume:r}),r=r>.01?r*.5:0,r?(L=l*r,N=s-L,a.tweens.add({targets:E,y:N,duration:r*R,ease:"Cubic.easeOut",onComplete:o(()=>h(),"onComplete")})):n&&n()},"onComplete")})},"doBounce"),_=o(()=>{a.tweens.add({targets:E,x:D,duration:125,ease:"Linear",onComplete:o(()=>{a.tweens.add({targets:E,x:U,duration:125,ease:"Linear",onComplete:o(()=>{M--,M>0?_():a.tweens.add({targets:E,x:C,duration:60,ease:"Linear",onComplete:o(()=>a.time.delayedCall(500,h),"onComplete")})},"onComplete")})},"onComplete")})},"doCritShake");I?a.time.delayedCall(500,_):h()}o(Tk,"doPokeballBounceAnim");const YZ={},xB=class xB{constructor(){this.SEED_OVERRIDE="",this.DAILY_RUN_SEED_OVERRIDE=null,this.WEATHER_OVERRIDE=Oe.NONE,this.BATTLE_TYPE_OVERRIDE=null,this.STARTING_WAVE_OVERRIDE=0,this.STARTING_BIOME_OVERRIDE=T.TOWN,this.ARENA_TINT_OVERRIDE=null,this.XP_MULTIPLIER_OVERRIDE=null,this.LEVEL_CAP_OVERRIDE=0,this.NEVER_CRIT_OVERRIDE=!1,this.STARTING_MONEY_OVERRIDE=0,this.WAIVE_SHOP_FEES_OVERRIDE=!1,this.WAIVE_ROLL_FEE_OVERRIDE=!1,this.FREE_CANDY_UPGRADE_OVERRIDE=!1,this.POKEBALL_OVERRIDE={active:!1,pokeballs:{[we.POKEBALL]:5,[we.GREAT_BALL]:0,[we.ULTRA_BALL]:0,[we.ROGUE_BALL]:0,[we.MASTER_BALL]:0}},this.ITEM_UNLOCK_OVERRIDE=[],this.BYPASS_TUTORIAL_SKIP_OVERRIDE=!1,this.ACHIEVEMENTS_REUNLOCK_OVERRIDE=!1,this.STATUS_ACTIVATION_OVERRIDE=null,this.STARTER_FORM_OVERRIDES={},this.STARTING_LEVEL_OVERRIDE=0,this.STARTER_SPECIES_OVERRIDE=0,this.STARTER_FUSION_OVERRIDE=!1,this.STARTER_FUSION_SPECIES_OVERRIDE=0,this.ABILITY_OVERRIDE=O.NONE,this.PASSIVE_ABILITY_OVERRIDE=O.NONE,this.HAS_PASSIVE_ABILITY_OVERRIDE=null,this.STATUS_OVERRIDE=re.NONE,this.GENDER_OVERRIDE=null,this.MOVESET_OVERRIDE=[],this.SHINY_OVERRIDE=null,this.VARIANT_OVERRIDE=null,this.OPP_SPECIES_OVERRIDE=0,this.OPP_FUSION_OVERRIDE=!1,this.OPP_FUSION_SPECIES_OVERRIDE=0,this.OPP_LEVEL_OVERRIDE=0,this.OPP_ABILITY_OVERRIDE=O.NONE,this.OPP_PASSIVE_ABILITY_OVERRIDE=O.NONE,this.OPP_HAS_PASSIVE_ABILITY_OVERRIDE=null,this.OPP_STATUS_OVERRIDE=re.NONE,this.OPP_GENDER_OVERRIDE=null,this.OPP_MOVESET_OVERRIDE=[],this.OPP_SHINY_OVERRIDE=null,this.OPP_VARIANT_OVERRIDE=null,this.OPP_IVS_OVERRIDE=[],this.OPP_FORM_OVERRIDES={},this.OPP_HEALTH_SEGMENTS_OVERRIDE=0,this.EGG_IMMEDIATE_HATCH_OVERRIDE=!1,this.EGG_TIER_OVERRIDE=null,this.EGG_SHINY_OVERRIDE=!1,this.EGG_VARIANT_OVERRIDE=null,this.EGG_FREE_GACHA_PULLS_OVERRIDE=!1,this.EGG_GACHA_PULL_COUNT_OVERRIDE=0,this.UNLIMITED_EGG_COUNT_OVERRIDE=!1,this.MYSTERY_ENCOUNTER_RATE_OVERRIDE=null,this.MYSTERY_ENCOUNTER_TIER_OVERRIDE=null,this.MYSTERY_ENCOUNTER_OVERRIDE=null,this.STARTING_MODIFIER_OVERRIDE=[],this.OPP_MODIFIER_OVERRIDE=[],this.STARTING_HELD_ITEMS_OVERRIDE=[],this.OPP_HELD_ITEMS_OVERRIDE=[],this.ITEM_REWARD_OVERRIDE=[],this.DISABLE_STANDARD_TRAINERS_OVERRIDE=!1}};o(xB,"DefaultOverrides");let Mh=xB;const WZ=new Mh,xe={...WZ,...YZ};function yZ(){return new Promise((E,A)=>{_O.daily.getSeed().then(s=>{E(s)})})}o(yZ,"fetchDailyRunSeed");function wZ(E){const A=[];return a.executeWithSeedOffset(()=>{const s=a.gameMode.getStartingLevel();if(/\d{18}$/.test(E)){for(let n=0;n<3;n++){const I=6+n*6,r=ms(Number.parseInt(E.slice(I,I+4)),Number.parseInt(E.slice(I+4,I+6)));A.push(Xb(r,s))}return}const R=[];R.push(Math.min(Math.round(3.5+Math.abs(Vc(1))),8)),R.push(He(9-R[0],1)),R.push(10-(R[0]+R[1]));for(let n=0;n<R.length;n++){const I=R[n],r=Object.keys(tA).map(l=>Number.parseInt(l)).filter(l=>tA[l]===I),L=$e(eE(r)),N=$e(L.getTrainerSpeciesForLevel(s,!0,Ze.STRONGER));A.push(Xb(N,s))}},0,E),A}o(wZ,"getDailyRunStarters");function Xb(E,A){const s=E instanceof P?E:$e(E.speciesId),R=E instanceof P?void 0:E.formIndex,n=new WE(s,A,void 0,R,void 0,void 0,void 0,void 0,void 0,void 0),I={species:s,dexAttr:n.getDexAttr(),abilityIndex:n.abilityIndex,passive:!1,nature:n.getNature(),pokerus:n.pokerus};return n.destroy(),I}o(Xb,"getDailyRunStarter");const vZ={[T.CAVE]:3,[T.LAKE]:3,[T.PLAINS]:3,[T.SNOWY_FOREST]:3,[T.SWAMP]:3,[T.TALL_GRASS]:3,[T.ABYSS]:2,[T.RUINS]:2,[T.BADLANDS]:2,[T.BEACH]:2,[T.CONSTRUCTION_SITE]:2,[T.DESERT]:2,[T.DOJO]:2,[T.FACTORY]:2,[T.FAIRY_CAVE]:2,[T.FOREST]:2,[T.GRASS]:2,[T.MEADOW]:2,[T.MOUNTAIN]:2,[T.SEA]:2,[T.SEABED]:2,[T.SLUM]:2,[T.TEMPLE]:2,[T.VOLCANO]:2,[T.GRAVEYARD]:1,[T.ICE_CAVE]:1,[T.ISLAND]:1,[T.JUNGLE]:1,[T.LABORATORY]:1,[T.METROPOLIS]:1,[T.POWER_PLANT]:1,[T.SPACE]:1,[T.WASTELAND]:1,[T.TOWN]:0,[T.END]:0};function VZ(){const E=dE(T).filter(n=>n!==T.TOWN&&n!==T.END);let A=0;const s=[];for(const n of E)A+=vZ[n],s.push(A);const R=He(A);for(let n=0;n<E.length;n++)if(R<s[n])return E[n];return E[He(E.length)]}o(VZ,"getDailyStartingBiome");var hA=(E=>(E[E.CLASSIC=0]="CLASSIC",E[E.ENDLESS=1]="ENDLESS",E[E.SPLICED_ENDLESS=2]="SPLICED_ENDLESS",E[E.DAILY=3]="DAILY",E[E.CHALLENGE=4]="CHALLENGE",E))(hA||{});const JA=[10,180],xZ=[10,180],bB=class bB{constructor(A,s,R){this.modeId=A,this.challenges=[],Object.assign(this,s),this.isChallenge&&(this.challenges=Dh.map(n=>Uh(n))),this.battleConfig=R||{}}setChallengeValue(A,s){this.isChallenge||(this.isChallenge=!0,this.challenges=Dh.map(R=>Uh(R))),this.challenges.filter(R=>R.id===A).map(R=>R.value=s)}hasChallenge(A){return this.challenges.some(s=>s.id===A&&s.value!==0)}isFreshStartChallenge(){return this.hasChallenge(ut.FRESH_START)}getStartingLevel(){if(xe.STARTING_LEVEL_OVERRIDE)return xe.STARTING_LEVEL_OVERRIDE;switch(this.modeId){case 3:return 20;default:return 5}}getStartingMoney(){return xe.STARTING_MONEY_OVERRIDE||1e3}getStartingBiome(){switch(this.modeId){case 3:return VZ();default:return xe.STARTING_BIOME_OVERRIDE||T.TOWN}}getWaveForDifficulty(A,s=!1){switch(this.modeId){case 3:return A+30+(s?0:Math.floor(A/5));default:return A}}isWaveTrainer(A,s){if(this.isDaily)return A%10===5||!(A%10)&&A>10&&!this.isWaveFinal(A);if(A%30===(a.offsetGym?0:20)&&!this.isWaveFinal(A))return!0;if(A%10!==1&&A%10){const R=s.getTrainerChance();let n=!0;if(R){const I=Math.floor(A/10)*10;for(let r=Math.max(A-3,I+2);r<=Math.min(A+3,I+9);r++)if(r!==A){if(r%30===(a.offsetGym?0:20)||this.isFixedBattle(r)){n=!1;break}if(r<A&&(a.executeWithSeedOffset(()=>{const L=s.getTrainerChance();He(L)||(n=!1)},r),!n))break}}return!!(n&&R&&!He(R))}return!1}isTrainerBoss(A,s,R){switch(this.modeId){case 3:return A>10&&A<50&&!(A%10);default:return A%30===(R?0:20)&&(s!==T.END||this.isClassic||this.isWaveFinal(A))}}getOverrideSpecies(A){if(this.isDaily&&this.isWaveFinal(A)){const s=qA.filter(R=>(R.subLegendary||R.legendary||R.mythical)&&R.baseTotal>=600&&R.speciesId!==e.ETERNATUS&&R.speciesId!==e.ARCEUS);return eE(s)}return null}isWaveFinal(A,s=this.modeId){switch(s){case 0:case 4:return A===200;case 1:case 2:return!(A%250);case 3:return A===50}}isBoss(A){return A%10===0}isBattleClassicFinalBoss(A){return(this.modeId===0||this.modeId===4)&&this.isWaveFinal(A)}isEndlessBoss(A){return A%50===0&&(this.modeId===1||this.modeId===2)}isEndlessMinorBoss(A){return A%250===0&&(this.modeId===1||this.modeId===2)}isEndlessMajorBoss(A){return A%1e3===0&&(this.modeId===1||this.modeId===2)}isFixedBattle(A){const s=new BE;return this.battleConfig.hasOwnProperty(A)||PR(rO.FIXED_BATTLES,A,s)}getFixedBattle(A){const s=new BE;return PR(rO.FIXED_BATTLES,A,s)?s:this.battleConfig[A]}getClearScoreBonus(){switch(this.modeId){case 0:case 4:return 5e3;case 3:return 2500;default:return 0}}getEnemyModifierChance(A){switch(this.modeId){case 0:case 4:case 3:return A?6:18;case 1:case 2:return A?4:12}}getName(){switch(this.modeId){case 0:return u.t("gameMode:classic");case 1:return u.t("gameMode:endless");case 2:return u.t("gameMode:endlessSpliced");case 3:return u.t("gameMode:dailyRun");case 4:return u.t("gameMode:challenge")}}getMysteryEncounterLegalWaves(){switch(this.modeId){case 0:return JA;case 4:return xZ;default:return[0,0]}}static getModeName(A){switch(A){case 0:return u.t("gameMode:classic");case 1:return u.t("gameMode:endless");case 2:return u.t("gameMode:endlessSpliced");case 3:return u.t("gameMode:dailyRun");case 4:return u.t("gameMode:challenge")}}};o(bB,"GameMode");let bR=bB;function QC(E){switch(E){case 0:return new bR(0,{isClassic:!0,hasTrainers:!0,hasMysteryEncounters:!0},b8);case 1:return new bR(1,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0});case 2:return new bR(2,{isEndless:!0,hasShortBiomes:!0,hasRandomBosses:!0,isSplicedOnly:!0});case 3:return new bR(3,{isDaily:!0,hasTrainers:!0,hasNoShop:!0});case 4:return new bR(4,{isClassic:!0,hasTrainers:!0,isChallenge:!0,hasMysteryEncounters:!0},b8)}}o(QC,"getGameMode");var Qs=(E=>(E[E.ENDLESS_MODE=0]="ENDLESS_MODE",E[E.MINI_BLACK_HOLE=1]="MINI_BLACK_HOLE",E[E.SPLICED_ENDLESS_MODE=2]="SPLICED_ENDLESS_MODE",E[E.EVIOLITE=3]="EVIOLITE",E))(Qs||{});function bZ(E){switch(E){case 0:return`${bR.getModeName(hA.ENDLESS)} Mode`;case 1:return u.t("modifierType:ModifierType.MINI_BLACK_HOLE.name");case 2:return`${bR.getModeName(hA.SPLICED_ENDLESS)} Mode`;case 3:return u.t("modifierType:ModifierType.EVIOLITE.name")}}o(bZ,"getUnlockableName");var Jt=(E=>(E[E.UNSET=0]="UNSET",E[E.MALE=1]="MALE",E[E.FEMALE=2]="FEMALE",E))(Jt||{}),wL=(E=>(E[E.COMMON=0]="COMMON",E[E.GREAT=1]="GREAT",E[E.ULTRA=2]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=4]="MASTER",E))(wL||{});const kB=class kB{constructor(A,s,R,n,I,r){this.name=s,this.description=R,this.iconImage=n,this.score=I,this.conditionFunc=r,this.localizationKey=A}getName(A=Jt.UNSET){const s=Jt[A].toLowerCase();return u.t(`achv:${this.localizationKey}.name`,{context:s})}getDescription(){return this.description}getIconImage(){return this.iconImage}setSecret(A){return this.secret=!0,this.hasParent=!!A,this}validate(A){return!this.conditionFunc||this.conditionFunc(A)}getTier(){return this.score>=100?4:this.score>=75?3:this.score>=50?2:this.score>=25?1:0}};o(kB,"Achv");let wA=kB;const ZB=class ZB extends wA{constructor(A,s,R,n,I){super(A,s,"",n,I,r=>a.money>=this.moneyAmount),this.moneyAmount=R}};o(ZB,"MoneyAchv");let Ki=ZB;const XB=class XB extends wA{constructor(A,s,R,n,I){super(A,s,"",n,I,r=>a.gameData.gameStats.ribbonsOwned>=this.ribbonAmount),this.ribbonAmount=R}};o(XB,"RibbonAchv");let ci=XB;const QB=class QB extends wA{constructor(A,s,R,n,I){super(A,s,"",n,I,r=>(r[0]instanceof je?r[0].value:r[0])>=this.damageAmount),this.damageAmount=R}};o(QB,"DamageAchv");let Fi=QB;const $B=class $B extends wA{constructor(A,s,R,n,I){super(A,s,"",n,I,r=>(r[0]instanceof je?r[0].value:r[0])>=this.healAmount),this.healAmount=R}};o($B,"HealAchv");let Yi=$B;const JB=class JB extends wA{constructor(A,s,R,n,I){super(A,s,"",n,I,r=>(r[0]instanceof je?r[0].value:r[0])>=this.level),this.level=R}};o(JB,"LevelAchv");let hr=JB;const zB=class zB extends wA{constructor(A,s,R,n,I,r){super(A,s,R,n,I,L=>r(L[0]))}};o(zB,"ModifierAchv");let $C=zB;const jB=class jB extends wA{constructor(A,s,R,n,I,r){super(A,s,R,n,I,L=>r(L[0]))}};o(jB,"ChallengeAchv");let pA=jB;function ff(E){var R,n;const A=((n=(R=a)==null?void 0:R.gameData)==null?void 0:n.gender)??Jt.MALE,s=Jt[A].toLowerCase();switch(E){case"10K_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:ht._10K_MONEY.moneyAmount.toLocaleString("en-US")});case"100K_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:ht._100K_MONEY.moneyAmount.toLocaleString("en-US")});case"1M_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:ht._1M_MONEY.moneyAmount.toLocaleString("en-US")});case"10M_MONEY":return u.t("achv:MoneyAchv.description",{context:s,moneyAmount:ht._10M_MONEY.moneyAmount.toLocaleString("en-US")});case"250_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:ht._250_DMG.damageAmount.toLocaleString("en-US")});case"1000_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:ht._1000_DMG.damageAmount.toLocaleString("en-US")});case"2500_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:ht._2500_DMG.damageAmount.toLocaleString("en-US")});case"10000_DMG":return u.t("achv:DamageAchv.description",{context:s,damageAmount:ht._10000_DMG.damageAmount.toLocaleString("en-US")});case"250_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:ht._250_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(Or(p.HP))});case"1000_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:ht._1000_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(Or(p.HP))});case"2500_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:ht._2500_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(Or(p.HP))});case"10000_HEAL":return u.t("achv:HealAchv.description",{context:s,healAmount:ht._10000_HEAL.healAmount.toLocaleString("en-US"),HP:u.t(Or(p.HP))});case"LV_100":return u.t("achv:LevelAchv.description",{context:s,level:ht.LV_100.level});case"LV_250":return u.t("achv:LevelAchv.description",{context:s,level:ht.LV_250.level});case"LV_1000":return u.t("achv:LevelAchv.description",{context:s,level:ht.LV_1000.level});case"10_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:ht._10_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"25_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:ht._25_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"50_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:ht._50_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"75_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:ht._75_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"100_RIBBONS":return u.t("achv:RibbonAchv.description",{context:s,ribbonAmount:ht._100_RIBBONS.ribbonAmount.toLocaleString("en-US")});case"TRANSFER_MAX_STAT_STAGE":return u.t("achv:TRANSFER_MAX_STAT_STAGE.description",{context:s});case"MAX_FRIENDSHIP":return u.t("achv:MAX_FRIENDSHIP.description",{context:s});case"MEGA_EVOLVE":return u.t("achv:MEGA_EVOLVE.description",{context:s});case"GIGANTAMAX":return u.t("achv:GIGANTAMAX.description",{context:s});case"TERASTALLIZE":return u.t("achv:TERASTALLIZE.description",{context:s});case"STELLAR_TERASTALLIZE":return u.t("achv:STELLAR_TERASTALLIZE.description",{context:s});case"SPLICE":return u.t("achv:SPLICE.description",{context:s});case"MINI_BLACK_HOLE":return u.t("achv:MINI_BLACK_HOLE.description",{context:s});case"CATCH_MYTHICAL":return u.t("achv:CATCH_MYTHICAL.description",{context:s});case"CATCH_SUB_LEGENDARY":return u.t("achv:CATCH_SUB_LEGENDARY.description",{context:s});case"CATCH_LEGENDARY":return u.t("achv:CATCH_LEGENDARY.description",{context:s});case"SEE_SHINY":return u.t("achv:SEE_SHINY.description",{context:s});case"SHINY_PARTY":return u.t("achv:SHINY_PARTY.description",{context:s});case"HATCH_MYTHICAL":return u.t("achv:HATCH_MYTHICAL.description",{context:s});case"HATCH_SUB_LEGENDARY":return u.t("achv:HATCH_SUB_LEGENDARY.description",{context:s});case"HATCH_LEGENDARY":return u.t("achv:HATCH_LEGENDARY.description",{context:s});case"HATCH_SHINY":return u.t("achv:HATCH_SHINY.description",{context:s});case"HIDDEN_ABILITY":return u.t("achv:HIDDEN_ABILITY.description",{context:s});case"PERFECT_IVS":return u.t("achv:PERFECT_IVS.description",{context:s});case"CLASSIC_VICTORY":return u.t("achv:CLASSIC_VICTORY.description",{context:s});case"UNEVOLVED_CLASSIC_VICTORY":return u.t("achv:UNEVOLVED_CLASSIC_VICTORY.description",{context:s});case"MONO_GEN_ONE":return u.t("achv:MONO_GEN_ONE.description",{context:s});case"MONO_GEN_TWO":return u.t("achv:MONO_GEN_TWO.description",{context:s});case"MONO_GEN_THREE":return u.t("achv:MONO_GEN_THREE.description",{context:s});case"MONO_GEN_FOUR":return u.t("achv:MONO_GEN_FOUR.description",{context:s});case"MONO_GEN_FIVE":return u.t("achv:MONO_GEN_FIVE.description",{context:s});case"MONO_GEN_SIX":return u.t("achv:MONO_GEN_SIX.description",{context:s});case"MONO_GEN_SEVEN":return u.t("achv:MONO_GEN_SEVEN.description",{context:s});case"MONO_GEN_EIGHT":return u.t("achv:MONO_GEN_EIGHT.description",{context:s});case"MONO_GEN_NINE":return u.t("achv:MONO_GEN_NINE.description",{context:s});case"MONO_NORMAL":case"MONO_FIGHTING":case"MONO_FLYING":case"MONO_POISON":case"MONO_GROUND":case"MONO_ROCK":case"MONO_BUG":case"MONO_GHOST":case"MONO_STEEL":case"MONO_FIRE":case"MONO_WATER":case"MONO_GRASS":case"MONO_ELECTRIC":case"MONO_PSYCHIC":case"MONO_ICE":case"MONO_DRAGON":case"MONO_DARK":case"MONO_FAIRY":return u.t("achv:MonoType.description",{context:s,type:u.t(`pokemonInfo:Type.${E.slice(5)}`)});case"FRESH_START":return u.t("achv:FRESH_START.description",{context:s});case"INVERSE_BATTLE":return u.t("achv:INVERSE_BATTLE.description",{context:s});case"FLIP_STATS":return u.t("achv:FLIP_STATS.description",{context:s});case"FLIP_INVERSE":return u.t("achv:FLIP_INVERSE.description",{context:s});case"BREEDERS_IN_SPACE":return u.t("achv:BREEDERS_IN_SPACE.description",{context:s});default:return""}}o(ff,"getAchievementDescription");const ht={_10K_MONEY:new Ki("10K_MONEY","",1e4,"nugget",10),_100K_MONEY:new Ki("100K_MONEY","",1e5,"big_nugget",25).setSecret(!0),_1M_MONEY:new Ki("1M_MONEY","",1e6,"relic_gold",50).setSecret(!0),_10M_MONEY:new Ki("10M_MONEY","",1e7,"coin_case",100).setSecret(!0),_250_DMG:new Fi("250_DMG","",250,"lucky_punch",10),_1000_DMG:new Fi("1000_DMG","",1e3,"lucky_punch_great",25).setSecret(!0),_2500_DMG:new Fi("2500_DMG","",2500,"lucky_punch_ultra",50).setSecret(!0),_10000_DMG:new Fi("10000_DMG","",1e4,"lucky_punch_master",100).setSecret(!0),_250_HEAL:new Yi("250_HEAL","",250,"potion",10),_1000_HEAL:new Yi("1000_HEAL","",1e3,"super_potion",25).setSecret(!0),_2500_HEAL:new Yi("2500_HEAL","",2500,"hyper_potion",50).setSecret(!0),_10000_HEAL:new Yi("10000_HEAL","",1e4,"max_potion",100).setSecret(!0),LV_100:new hr("LV_100","",100,"rare_candy",25).setSecret(),LV_250:new hr("LV_250","",250,"rarer_candy",50).setSecret(!0),LV_1000:new hr("LV_1000","",1e3,"candy_jar",100).setSecret(!0),_10_RIBBONS:new ci("10_RIBBONS","",10,"bronze_ribbon",10),_25_RIBBONS:new ci("25_RIBBONS","",25,"great_ribbon",25).setSecret(!0),_50_RIBBONS:new ci("50_RIBBONS","",50,"ultra_ribbon",50).setSecret(!0),_75_RIBBONS:new ci("75_RIBBONS","",75,"rogue_ribbon",75).setSecret(!0),_100_RIBBONS:new ci("100_RIBBONS","",100,"master_ribbon",100).setSecret(!0),TRANSFER_MAX_STAT_STAGE:new wA("TRANSFER_MAX_STAT_STAGE","","TRANSFER_MAX_STAT_STAGE.description","baton",20),MAX_FRIENDSHIP:new wA("MAX_FRIENDSHIP","","MAX_FRIENDSHIP.description","soothe_bell",25),MEGA_EVOLVE:new wA("MEGA_EVOLVE","","MEGA_EVOLVE.description","mega_bracelet",50),GIGANTAMAX:new wA("GIGANTAMAX","","GIGANTAMAX.description","dynamax_band",50),TERASTALLIZE:new wA("TERASTALLIZE","","TERASTALLIZE.description","tera_orb",25),STELLAR_TERASTALLIZE:new wA("STELLAR_TERASTALLIZE","","STELLAR_TERASTALLIZE.description","stellar_tera_shard",25).setSecret(!0),SPLICE:new wA("SPLICE","","SPLICE.description","dna_splicers",10),MINI_BLACK_HOLE:new $C("MINI_BLACK_HOLE","","MINI_BLACK_HOLE.description","mini_black_hole",25,E=>E instanceof VI).setSecret(),CATCH_MYTHICAL:new wA("CATCH_MYTHICAL","","CATCH_MYTHICAL.description","strange_ball",50).setSecret(),CATCH_SUB_LEGENDARY:new wA("CATCH_SUB_LEGENDARY","","CATCH_SUB_LEGENDARY.description","rb",75).setSecret(),CATCH_LEGENDARY:new wA("CATCH_LEGENDARY","","CATCH_LEGENDARY.description","mb",100).setSecret(),SEE_SHINY:new wA("SEE_SHINY","","SEE_SHINY.description","pb_gold",75),SHINY_PARTY:new wA("SHINY_PARTY","","SHINY_PARTY.description","shiny_charm",100).setSecret(!0),HATCH_MYTHICAL:new wA("HATCH_MYTHICAL","","HATCH_MYTHICAL.description","mystery_egg",75).setSecret(),HATCH_SUB_LEGENDARY:new wA("HATCH_SUB_LEGENDARY","","HATCH_SUB_LEGENDARY.description","oval_stone",100).setSecret(),HATCH_LEGENDARY:new wA("HATCH_LEGENDARY","","HATCH_LEGENDARY.description","lucky_egg",125).setSecret(),HATCH_SHINY:new wA("HATCH_SHINY","","HATCH_SHINY.description","golden_egg",100).setSecret(),HIDDEN_ABILITY:new wA("HIDDEN_ABILITY","","HIDDEN_ABILITY.description","ability_charm",75),PERFECT_IVS:new wA("PERFECT_IVS","","PERFECT_IVS.description","blunder_policy",100),CLASSIC_VICTORY:new wA("CLASSIC_VICTORY","","CLASSIC_VICTORY.description","relic_crown",150,E=>a.gameData.gameStats.sessionsWon===0),UNEVOLVED_CLASSIC_VICTORY:new wA("UNEVOLVED_CLASSIC_VICTORY","","UNEVOLVED_CLASSIC_VICTORY.description","eviolite",175,E=>a.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in jt)),MONO_GEN_ONE_VICTORY:new pA("MONO_GEN_ONE","","MONO_GEN_ONE.description","ribbon_gen1",100,E=>E instanceof nO&&E.value===1&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_TWO_VICTORY:new pA("MONO_GEN_TWO","","MONO_GEN_TWO.description","ribbon_gen2",100,E=>E instanceof nO&&E.value===2&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_THREE_VICTORY:new pA("MONO_GEN_THREE","","MONO_GEN_THREE.description","ribbon_gen3",100,E=>E instanceof nO&&E.value===3&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_FOUR_VICTORY:new pA("MONO_GEN_FOUR","","MONO_GEN_FOUR.description","ribbon_gen4",100,E=>E instanceof nO&&E.value===4&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_FIVE_VICTORY:new pA("MONO_GEN_FIVE","","MONO_GEN_FIVE.description","ribbon_gen5",100,E=>E instanceof nO&&E.value===5&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_SIX_VICTORY:new pA("MONO_GEN_SIX","","MONO_GEN_SIX.description","ribbon_gen6",100,E=>E instanceof nO&&E.value===6&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_SEVEN_VICTORY:new pA("MONO_GEN_SEVEN","","MONO_GEN_SEVEN.description","ribbon_gen7",100,E=>E instanceof nO&&E.value===7&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_EIGHT_VICTORY:new pA("MONO_GEN_EIGHT","","MONO_GEN_EIGHT.description","ribbon_gen8",100,E=>E instanceof nO&&E.value===8&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GEN_NINE_VICTORY:new pA("MONO_GEN_NINE","","MONO_GEN_NINE.description","ribbon_gen9",100,E=>E instanceof nO&&E.value===9&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_NORMAL:new pA("MONO_NORMAL","","MONO_NORMAL.description","silk_scarf",100,E=>E instanceof vE&&E.value===1&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FIGHTING:new pA("MONO_FIGHTING","","MONO_FIGHTING.description","black_belt",100,E=>E instanceof vE&&E.value===2&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FLYING:new pA("MONO_FLYING","","MONO_FLYING.description","sharp_beak",100,E=>E instanceof vE&&E.value===3&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_POISON:new pA("MONO_POISON","","MONO_POISON.description","poison_barb",100,E=>E instanceof vE&&E.value===4&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GROUND:new pA("MONO_GROUND","","MONO_GROUND.description","soft_sand",100,E=>E instanceof vE&&E.value===5&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ROCK:new pA("MONO_ROCK","","MONO_ROCK.description","hard_stone",100,E=>E instanceof vE&&E.value===6&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_BUG:new pA("MONO_BUG","","MONO_BUG.description","silver_powder",100,E=>E instanceof vE&&E.value===7&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GHOST:new pA("MONO_GHOST","","MONO_GHOST.description","spell_tag",100,E=>E instanceof vE&&E.value===8&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_STEEL:new pA("MONO_STEEL","","MONO_STEEL.description","metal_coat",100,E=>E instanceof vE&&E.value===9&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FIRE:new pA("MONO_FIRE","","MONO_FIRE.description","charcoal",100,E=>E instanceof vE&&E.value===10&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_WATER:new pA("MONO_WATER","","MONO_WATER.description","mystic_water",100,E=>E instanceof vE&&E.value===11&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_GRASS:new pA("MONO_GRASS","","MONO_GRASS.description","miracle_seed",100,E=>E instanceof vE&&E.value===12&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ELECTRIC:new pA("MONO_ELECTRIC","","MONO_ELECTRIC.description","magnet",100,E=>E instanceof vE&&E.value===13&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_PSYCHIC:new pA("MONO_PSYCHIC","","MONO_PSYCHIC.description","twisted_spoon",100,E=>E instanceof vE&&E.value===14&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_ICE:new pA("MONO_ICE","","MONO_ICE.description","never_melt_ice",100,E=>E instanceof vE&&E.value===15&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_DRAGON:new pA("MONO_DRAGON","","MONO_DRAGON.description","dragon_fang",100,E=>E instanceof vE&&E.value===16&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_DARK:new pA("MONO_DARK","","MONO_DARK.description","black_glasses",100,E=>E instanceof vE&&E.value===17&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),MONO_FAIRY:new pA("MONO_FAIRY","","MONO_FAIRY.description","fairy_feather",100,E=>E instanceof vE&&E.value===18&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),FRESH_START:new pA("FRESH_START","","FRESH_START.description","reviver_seed",100,E=>E instanceof tS&&E.value>0&&!a.gameMode.challenges.some(A=>[ut.INVERSE_BATTLE,ut.FLIP_STAT].includes(A.id)&&A.value>0)),INVERSE_BATTLE:new pA("INVERSE_BATTLE","","INVERSE_BATTLE.description","inverse",100,E=>E instanceof AS&&E.value>0),FLIP_STATS:new pA("FLIP_STATS","","FLIP_STATS.description","dubious_disc",100,E=>E instanceof yr&&E.value>0),FLIP_INVERSE:new pA("FLIP_INVERSE","","FLIP_INVERSE.description","cracked_pot",100,E=>E instanceof yr&&E.value>0&&a.gameMode.challenges.some(A=>A.id===ut.INVERSE_BATTLE&&A.value>0)).setSecret(),BREEDERS_IN_SPACE:new wA("BREEDERS_IN_SPACE","","BREEDERS_IN_SPACE.description","moon_stone",50).setSecret()};function kZ(){const E=Object.keys(ht);E.forEach((A,s)=>{ht[A].id=A,ht[A].hasParent&&(ht[A].parentId=E[s-1])})}o(kZ,"initAchievements");const Qb={[c.YOUNGSTER]:[{encounter:["dialogue:youngster.encounter.1","dialogue:youngster.encounter.2","dialogue:youngster.encounter.3","dialogue:youngster.encounter.4","dialogue:youngster.encounter.5","dialogue:youngster.encounter.6","dialogue:youngster.encounter.7","dialogue:youngster.encounter.8","dialogue:youngster.encounter.9","dialogue:youngster.encounter.10","dialogue:youngster.encounter.11","dialogue:youngster.encounter.12","dialogue:youngster.encounter.13"],victory:["dialogue:youngster.victory.1","dialogue:youngster.victory.2","dialogue:youngster.victory.3","dialogue:youngster.victory.4","dialogue:youngster.victory.5","dialogue:youngster.victory.6","dialogue:youngster.victory.7","dialogue:youngster.victory.8","dialogue:youngster.victory.9","dialogue:youngster.victory.10","dialogue:youngster.victory.11","dialogue:youngster.victory.12","dialogue:youngster.victory.13"]},{encounter:["dialogue:lass.encounter.1","dialogue:lass.encounter.2","dialogue:lass.encounter.3","dialogue:lass.encounter.4","dialogue:lass.encounter.5","dialogue:lass.encounter.6","dialogue:lass.encounter.7","dialogue:lass.encounter.8","dialogue:lass.encounter.9"],victory:["dialogue:lass.victory.1","dialogue:lass.victory.2","dialogue:lass.victory.3","dialogue:lass.victory.4","dialogue:lass.victory.5","dialogue:lass.victory.6","dialogue:lass.victory.7","dialogue:lass.victory.8","dialogue:lass.victory.9"]}],[c.BREEDER]:[{encounter:["dialogue:breeder.encounter.1","dialogue:breeder.encounter.2","dialogue:breeder.encounter.3"],victory:["dialogue:breeder.victory.1","dialogue:breeder.victory.2","dialogue:breeder.victory.3"],defeat:["dialogue:breeder.defeat.1","dialogue:breeder.defeat.2","dialogue:breeder.defeat.3"]},{encounter:["dialogue:breeder_female.encounter.1","dialogue:breeder_female.encounter.2","dialogue:breeder_female.encounter.3"],victory:["dialogue:breeder_female.victory.1","dialogue:breeder_female.victory.2","dialogue:breeder_female.victory.3"],defeat:["dialogue:breeder_female.defeat.1","dialogue:breeder_female.defeat.2","dialogue:breeder_female.defeat.3"]}],[c.FISHERMAN]:[{encounter:["dialogue:fisherman.encounter.1","dialogue:fisherman.encounter.2","dialogue:fisherman.encounter.3"],victory:["dialogue:fisherman.victory.1","dialogue:fisherman.victory.2","dialogue:fisherman.victory.3"]},{encounter:["dialogue:fisherman_female.encounter.1","dialogue:fisherman_female.encounter.2","dialogue:fisherman_female.encounter.3"],victory:["dialogue:fisherman_female.victory.1","dialogue:fisherman_female.victory.2","dialogue:fisherman_female.victory.3"]}],[c.SWIMMER]:[{encounter:["dialogue:swimmer.encounter.1","dialogue:swimmer.encounter.2","dialogue:swimmer.encounter.3"],victory:["dialogue:swimmer.victory.1","dialogue:swimmer.victory.2","dialogue:swimmer.victory.3"]}],[c.BACKPACKER]:[{encounter:["dialogue:backpacker.encounter.1","dialogue:backpacker.encounter.2","dialogue:backpacker.encounter.3","dialogue:backpacker.encounter.4"],victory:["dialogue:backpacker.victory.1","dialogue:backpacker.victory.2","dialogue:backpacker.victory.3","dialogue:backpacker.victory.4"]}],[c.ACE_TRAINER]:[{encounter:["dialogue:ace_trainer.encounter.1","dialogue:ace_trainer.encounter.2","dialogue:ace_trainer.encounter.3","dialogue:ace_trainer.encounter.4"],victory:["dialogue:ace_trainer.victory.1","dialogue:ace_trainer.victory.2","dialogue:ace_trainer.victory.3","dialogue:ace_trainer.victory.4"],defeat:["dialogue:ace_trainer.defeat.1","dialogue:ace_trainer.defeat.2","dialogue:ace_trainer.defeat.3","dialogue:ace_trainer.defeat.4"]}],[c.PARASOL_LADY]:[{encounter:["dialogue:parasol_lady.encounter.1"],victory:["dialogue:parasol_lady.victory.1"]}],[c.TWINS]:[{encounter:["dialogue:twins.encounter.1","dialogue:twins.encounter.2","dialogue:twins.encounter.3"],victory:["dialogue:twins.victory.1","dialogue:twins.victory.2","dialogue:twins.victory.3"],defeat:["dialogue:twins.defeat.1","dialogue:twins.defeat.2","dialogue:twins.defeat.3"]}],[c.CYCLIST]:[{encounter:["dialogue:cyclist.encounter.1","dialogue:cyclist.encounter.2","dialogue:cyclist.encounter.3"],victory:["dialogue:cyclist.victory.1","dialogue:cyclist.victory.2","dialogue:cyclist.victory.3"]}],[c.BLACK_BELT]:[{encounter:["dialogue:black_belt.encounter.1","dialogue:black_belt.encounter.2"],victory:["dialogue:black_belt.victory.1","dialogue:black_belt.victory.2"]},{encounter:["dialogue:battle_girl.encounter.1"],victory:["dialogue:battle_girl.victory.1"]}],[c.HIKER]:[{encounter:["dialogue:hiker.encounter.1","dialogue:hiker.encounter.2"],victory:["dialogue:hiker.victory.1","dialogue:hiker.victory.2"]}],[c.RANGER]:[{encounter:["dialogue:ranger.encounter.1","dialogue:ranger.encounter.2"],victory:["dialogue:ranger.victory.1","dialogue:ranger.victory.2"],defeat:["dialogue:ranger.defeat.1","dialogue:ranger.defeat.2"]}],[c.SCIENTIST]:[{encounter:["dialogue:scientist.encounter.1"],victory:["dialogue:scientist.victory.1"]}],[c.SCHOOL_KID]:[{encounter:["dialogue:school_kid.encounter.1","dialogue:school_kid.encounter.2"],victory:["dialogue:school_kid.victory.1","dialogue:school_kid.victory.2"]}],[c.ARTIST]:[{encounter:["dialogue:artist.encounter.1"],victory:["dialogue:artist.victory.1"]}],[c.GUITARIST]:[{encounter:["dialogue:guitarist.encounter.1"],victory:["dialogue:guitarist.victory.1"]}],[c.WORKER]:[{encounter:["dialogue:worker.encounter.1"],victory:["dialogue:worker.victory.1"]},{encounter:["dialogue:worker_female.encounter.1"],victory:["dialogue:worker_female.victory.1"],defeat:["dialogue:worker_female.defeat.1"]},{encounter:["dialogue:worker_double.encounter.1"],victory:["dialogue:worker_double.victory.1"]}],[c.SNOW_WORKER]:[{encounter:["dialogue:snow_worker.encounter.1"],victory:["dialogue:snow_worker.victory.1"]},{encounter:["dialogue:snow_worker_double.encounter.1"],victory:["dialogue:snow_worker_double.victory.1"]}],[c.HEX_MANIAC]:[{encounter:["dialogue:hex_maniac.encounter.1","dialogue:hex_maniac.encounter.2"],victory:["dialogue:hex_maniac.victory.1","dialogue:hex_maniac.victory.2"],defeat:["dialogue:hex_maniac.defeat.1","dialogue:hex_maniac.defeat.2"]}],[c.PSYCHIC]:[{encounter:["dialogue:psychic.encounter.1"],victory:["dialogue:psychic.victory.1"]}],[c.OFFICER]:[{encounter:["dialogue:officer.encounter.1","dialogue:officer.encounter.2"],victory:["dialogue:officer.victory.1","dialogue:officer.victory.2"]}],[c.BEAUTY]:[{encounter:["dialogue:beauty.encounter.1"],victory:["dialogue:beauty.victory.1"]}],[c.BAKER]:[{encounter:["dialogue:baker.encounter.1"],victory:["dialogue:baker.victory.1"]}],[c.BIKER]:[{encounter:["dialogue:biker.encounter.1"],victory:["dialogue:biker.victory.1"]}],[c.FIREBREATHER]:[{encounter:["dialogue:firebreather.encounter.1","dialogue:firebreather.encounter.2","dialogue:firebreather.encounter.3"],victory:["dialogue:firebreather.victory.1","dialogue:firebreather.victory.2","dialogue:firebreather.victory.3"]}],[c.SAILOR]:[{encounter:["dialogue:sailor.encounter.1","dialogue:sailor.encounter.2","dialogue:sailor.encounter.3"],victory:["dialogue:sailor.victory.1","dialogue:sailor.victory.2","dialogue:sailor.victory.3"]}],[c.CLERK]:[{encounter:["dialogue:clerk.encounter.1","dialogue:clerk.encounter.2","dialogue:clerk.encounter.3"],victory:["dialogue:clerk.victory.1","dialogue:clerk.victory.2","dialogue:clerk.victory.3"]},{encounter:["dialogue:clerk_female.encounter.1","dialogue:clerk_female.encounter.2","dialogue:clerk_female.encounter.3"],victory:["dialogue:clerk_female.victory.1","dialogue:clerk_female.victory.2","dialogue:clerk_female.victory.3"]}],[c.HOOLIGANS]:[{encounter:["dialogue:hooligans.encounter.1","dialogue:hooligans.encounter.2"],victory:["dialogue:hooligans.victory.1","dialogue:hooligans.victory.2"]}],[c.MUSICIAN]:[{encounter:["dialogue:musician.encounter.1","dialogue:musician.encounter.2","dialogue:musician.encounter.3","dialogue:musician.encounter.4"],victory:["dialogue:musician.victory.1","dialogue:musician.victory.2","dialogue:musician.victory.3"]}],[c.PILOT]:[{encounter:["dialogue:pilot.encounter.1","dialogue:pilot.encounter.2","dialogue:pilot.encounter.3","dialogue:pilot.encounter.4"],victory:["dialogue:pilot.victory.1","dialogue:pilot.victory.2","dialogue:pilot.victory.3","dialogue:pilot.victory.4"]}],[c.POKEFAN]:[{encounter:["dialogue:pokefan.encounter.1","dialogue:pokefan.encounter.2","dialogue:pokefan.encounter.3"],victory:["dialogue:pokefan.victory.1","dialogue:pokefan.victory.2","dialogue:pokefan.victory.3"]},{encounter:["dialogue:pokefan_female.encounter.1","dialogue:pokefan_female.encounter.2","dialogue:pokefan_female.encounter.3"],victory:["dialogue:pokefan_female.victory.1","dialogue:pokefan_female.victory.2","dialogue:pokefan_female.victory.3"]}],[c.RICH]:[{encounter:["dialogue:rich.encounter.1","dialogue:rich.encounter.2","dialogue:rich.encounter.3"],victory:["dialogue:rich.victory.1","dialogue:rich.victory.2","dialogue:rich.victory.3"]},{encounter:["dialogue:rich_female.encounter.1","dialogue:rich_female.encounter.2","dialogue:rich_female.encounter.3"],victory:["dialogue:rich_female.victory.1","dialogue:rich_female.victory.2","dialogue:rich_female.victory.3"]}],[c.RICH_KID]:[{encounter:["dialogue:rich_kid.encounter.1","dialogue:rich_kid.encounter.2","dialogue:rich_kid.encounter.3"],victory:["dialogue:rich_kid.victory.1","dialogue:rich_kid.victory.2","dialogue:rich_kid.victory.3","dialogue:rich_kid.victory.4"]},{encounter:["dialogue:rich_kid_female.encounter.1","dialogue:rich_kid_female.encounter.2","dialogue:rich_kid_female.encounter.3"],victory:["dialogue:rich_kid_female.victory.1","dialogue:rich_kid_female.victory.2","dialogue:rich_kid_female.victory.3","dialogue:rich_kid_female.victory.4"]}],[c.ROCKET_GRUNT]:[{encounter:["dialogue:rocket_grunt.encounter.1","dialogue:rocket_grunt.encounter.2","dialogue:rocket_grunt.encounter.3","dialogue:rocket_grunt.encounter.4","dialogue:rocket_grunt.encounter.5"],victory:["dialogue:rocket_grunt.victory.1","dialogue:rocket_grunt.victory.2","dialogue:rocket_grunt.victory.3","dialogue:rocket_grunt.victory.4","dialogue:rocket_grunt.victory.5"]}],[c.ARCHER]:[{encounter:["dialogue:archer.encounter.1","dialogue:archer.encounter.2","dialogue:archer.encounter.3"],victory:["dialogue:archer.victory.1","dialogue:archer.victory.2","dialogue:archer.victory.3"]}],[c.ARIANA]:[{encounter:["dialogue:ariana.encounter.1","dialogue:ariana.encounter.2","dialogue:ariana.encounter.3"],victory:["dialogue:ariana.victory.1","dialogue:ariana.victory.2","dialogue:ariana.victory.3"]}],[c.PROTON]:[{encounter:["dialogue:proton.encounter.1","dialogue:proton.encounter.2","dialogue:proton.encounter.3"],victory:["dialogue:proton.victory.1","dialogue:proton.victory.2","dialogue:proton.victory.3"]}],[c.PETREL]:[{encounter:["dialogue:petrel.encounter.1","dialogue:petrel.encounter.2","dialogue:petrel.encounter.3"],victory:["dialogue:petrel.victory.1","dialogue:petrel.victory.2","dialogue:petrel.victory.3"]}],[c.MAGMA_GRUNT]:[{encounter:["dialogue:magma_grunt.encounter.1","dialogue:magma_grunt.encounter.2","dialogue:magma_grunt.encounter.3","dialogue:magma_grunt.encounter.4","dialogue:magma_grunt.encounter.5"],victory:["dialogue:magma_grunt.victory.1","dialogue:magma_grunt.victory.2","dialogue:magma_grunt.victory.3","dialogue:magma_grunt.victory.4","dialogue:magma_grunt.victory.5"]}],[c.TABITHA]:[{encounter:["dialogue:tabitha.encounter.1","dialogue:tabitha.encounter.2","dialogue:tabitha.encounter.3"],victory:["dialogue:tabitha.victory.1","dialogue:tabitha.victory.2","dialogue:tabitha.victory.3"]}],[c.COURTNEY]:[{encounter:["dialogue:courtney.encounter.1","dialogue:courtney.encounter.2","dialogue:courtney.encounter.3"],victory:["dialogue:courtney.victory.1","dialogue:courtney.victory.2","dialogue:courtney.victory.3"]}],[c.AQUA_GRUNT]:[{encounter:["dialogue:aqua_grunt.encounter.1","dialogue:aqua_grunt.encounter.2","dialogue:aqua_grunt.encounter.3","dialogue:aqua_grunt.encounter.4","dialogue:aqua_grunt.encounter.5"],victory:["dialogue:aqua_grunt.victory.1","dialogue:aqua_grunt.victory.2","dialogue:aqua_grunt.victory.3","dialogue:aqua_grunt.victory.4","dialogue:aqua_grunt.victory.5"]}],[c.MATT]:[{encounter:["dialogue:matt.encounter.1","dialogue:matt.encounter.2","dialogue:matt.encounter.3"],victory:["dialogue:matt.victory.1","dialogue:matt.victory.2","dialogue:matt.victory.3"]}],[c.SHELLY]:[{encounter:["dialogue:shelly.encounter.1","dialogue:shelly.encounter.2","dialogue:shelly.encounter.3"],victory:["dialogue:shelly.victory.1","dialogue:shelly.victory.2","dialogue:shelly.victory.3"]}],[c.GALACTIC_GRUNT]:[{encounter:["dialogue:galactic_grunt.encounter.1","dialogue:galactic_grunt.encounter.2","dialogue:galactic_grunt.encounter.3","dialogue:galactic_grunt.encounter.4","dialogue:galactic_grunt.encounter.5"],victory:["dialogue:galactic_grunt.victory.1","dialogue:galactic_grunt.victory.2","dialogue:galactic_grunt.victory.3","dialogue:galactic_grunt.victory.4","dialogue:galactic_grunt.victory.5"]}],[c.JUPITER]:[{encounter:["dialogue:jupiter.encounter.1","dialogue:jupiter.encounter.2","dialogue:jupiter.encounter.3"],victory:["dialogue:jupiter.victory.1","dialogue:jupiter.victory.2","dialogue:jupiter.victory.3"]}],[c.MARS]:[{encounter:["dialogue:mars.encounter.1","dialogue:mars.encounter.2","dialogue:mars.encounter.3"],victory:["dialogue:mars.victory.1","dialogue:mars.victory.2","dialogue:mars.victory.3"]}],[c.SATURN]:[{encounter:["dialogue:saturn.encounter.1","dialogue:saturn.encounter.2","dialogue:saturn.encounter.3"],victory:["dialogue:saturn.victory.1","dialogue:saturn.victory.2","dialogue:saturn.victory.3"]}],[c.PLASMA_GRUNT]:[{encounter:["dialogue:plasma_grunt.encounter.1","dialogue:plasma_grunt.encounter.2","dialogue:plasma_grunt.encounter.3","dialogue:plasma_grunt.encounter.4","dialogue:plasma_grunt.encounter.5"],victory:["dialogue:plasma_grunt.victory.1","dialogue:plasma_grunt.victory.2","dialogue:plasma_grunt.victory.3","dialogue:plasma_grunt.victory.4","dialogue:plasma_grunt.victory.5"]}],[c.ZINZOLIN]:[{encounter:["dialogue:zinzolin.encounter.1","dialogue:zinzolin.encounter.2","dialogue:zinzolin.encounter.3"],victory:["dialogue:zinzolin.victory.1","dialogue:zinzolin.victory.2","dialogue:zinzolin.victory.3"]}],[c.COLRESS]:[{encounter:["dialogue:colress.encounter.1","dialogue:colress.encounter.2","dialogue:colress.encounter.3"],victory:["dialogue:colress.victory.1","dialogue:colress.victory.2","dialogue:colress.victory.3"]}],[c.FLARE_GRUNT]:[{encounter:["dialogue:flare_grunt.encounter.1","dialogue:flare_grunt.encounter.2","dialogue:flare_grunt.encounter.3","dialogue:flare_grunt.encounter.4","dialogue:flare_grunt.encounter.5"],victory:["dialogue:flare_grunt.victory.1","dialogue:flare_grunt.victory.2","dialogue:flare_grunt.victory.3","dialogue:flare_grunt.victory.4","dialogue:flare_grunt.victory.5"]}],[c.BRYONY]:[{encounter:["dialogue:bryony.encounter.1","dialogue:bryony.encounter.2","dialogue:bryony.encounter.3"],victory:["dialogue:bryony.victory.1","dialogue:bryony.victory.2","dialogue:bryony.victory.3"]}],[c.XEROSIC]:[{encounter:["dialogue:xerosic.encounter.1","dialogue:xerosic.encounter.2","dialogue:xerosic.encounter.3"],victory:["dialogue:xerosic.victory.1","dialogue:xerosic.victory.2","dialogue:xerosic.victory.3"]}],[c.AETHER_GRUNT]:[{encounter:["dialogue:aether_grunt.encounter.1","dialogue:aether_grunt.encounter.2","dialogue:aether_grunt.encounter.3","dialogue:aether_grunt.encounter.4","dialogue:aether_grunt.encounter.5"],victory:["dialogue:aether_grunt.victory.1","dialogue:aether_grunt.victory.2","dialogue:aether_grunt.victory.3","dialogue:aether_grunt.victory.4","dialogue:aether_grunt.victory.5"]}],[c.FABA]:[{encounter:["dialogue:faba.encounter.1","dialogue:faba.encounter.2","dialogue:faba.encounter.3"],victory:["dialogue:faba.victory.1","dialogue:faba.victory.2","dialogue:faba.victory.3"]}],[c.SKULL_GRUNT]:[{encounter:["dialogue:skull_grunt.encounter.1","dialogue:skull_grunt.encounter.2","dialogue:skull_grunt.encounter.3","dialogue:skull_grunt.encounter.4","dialogue:skull_grunt.encounter.5"],victory:["dialogue:skull_grunt.victory.1","dialogue:skull_grunt.victory.2","dialogue:skull_grunt.victory.3","dialogue:skull_grunt.victory.4","dialogue:skull_grunt.victory.5"]}],[c.PLUMERIA]:[{encounter:["dialogue:plumeria.encounter.1","dialogue:plumeria.encounter.2","dialogue:plumeria.encounter.3"],victory:["dialogue:plumeria.victory.1","dialogue:plumeria.victory.2","dialogue:plumeria.victory.3"]}],[c.MACRO_GRUNT]:[{encounter:["dialogue:macro_grunt.encounter.1","dialogue:macro_grunt.encounter.2","dialogue:macro_grunt.encounter.3","dialogue:macro_grunt.encounter.4","dialogue:macro_grunt.encounter.5"],victory:["dialogue:macro_grunt.victory.1","dialogue:macro_grunt.victory.2","dialogue:macro_grunt.victory.3","dialogue:macro_grunt.victory.4","dialogue:macro_grunt.victory.5"]}],[c.OLEANA]:[{encounter:["dialogue:oleana.encounter.1","dialogue:oleana.encounter.2","dialogue:oleana.encounter.3"],victory:["dialogue:oleana.victory.1","dialogue:oleana.victory.2","dialogue:oleana.victory.3"]}],[c.STAR_GRUNT]:[{encounter:["dialogue:star_grunt.encounter.1","dialogue:star_grunt.encounter.2","dialogue:star_grunt.encounter.3","dialogue:star_grunt.encounter.4","dialogue:star_grunt.encounter.5"],victory:["dialogue:star_grunt.victory.1","dialogue:star_grunt.victory.2","dialogue:star_grunt.victory.3","dialogue:star_grunt.victory.4","dialogue:star_grunt.victory.5"]}],[c.GIACOMO]:[{encounter:["dialogue:giacomo.encounter.1","dialogue:giacomo.encounter.2"],victory:["dialogue:giacomo.victory.1","dialogue:giacomo.victory.2"]}],[c.MELA]:[{encounter:["dialogue:mela.encounter.1","dialogue:mela.encounter.2"],victory:["dialogue:mela.victory.1","dialogue:mela.victory.2"]}],[c.ATTICUS]:[{encounter:["dialogue:atticus.encounter.1","dialogue:atticus.encounter.2"],victory:["dialogue:atticus.victory.1","dialogue:atticus.victory.2"]}],[c.ORTEGA]:[{encounter:["dialogue:ortega.encounter.1","dialogue:ortega.encounter.2"],victory:["dialogue:ortega.victory.1","dialogue:ortega.victory.2"]}],[c.ERI]:[{encounter:["dialogue:eri.encounter.1","dialogue:eri.encounter.2"],victory:["dialogue:eri.victory.1","dialogue:eri.victory.2"]}],[c.ROCKET_BOSS_GIOVANNI_1]:[{encounter:["dialogue:rocket_boss_giovanni_1.encounter.1"],victory:["dialogue:rocket_boss_giovanni_1.victory.1"],defeat:["dialogue:rocket_boss_giovanni_1.defeat.1"]}],[c.ROCKET_BOSS_GIOVANNI_2]:[{encounter:["dialogue:rocket_boss_giovanni_2.encounter.1"],victory:["dialogue:rocket_boss_giovanni_2.victory.1"],defeat:["dialogue:rocket_boss_giovanni_2.defeat.1"]}],[c.MAXIE]:[{encounter:["dialogue:magma_boss_maxie_1.encounter.1"],victory:["dialogue:magma_boss_maxie_1.victory.1"],defeat:["dialogue:magma_boss_maxie_1.defeat.1"]}],[c.MAXIE_2]:[{encounter:["dialogue:magma_boss_maxie_2.encounter.1"],victory:["dialogue:magma_boss_maxie_2.victory.1"],defeat:["dialogue:magma_boss_maxie_2.defeat.1"]}],[c.ARCHIE]:[{encounter:["dialogue:aqua_boss_archie_1.encounter.1"],victory:["dialogue:aqua_boss_archie_1.victory.1"],defeat:["dialogue:aqua_boss_archie_1.defeat.1"]}],[c.ARCHIE_2]:[{encounter:["dialogue:aqua_boss_archie_2.encounter.1"],victory:["dialogue:aqua_boss_archie_2.victory.1"],defeat:["dialogue:aqua_boss_archie_2.defeat.1"]}],[c.CYRUS]:[{encounter:["dialogue:galactic_boss_cyrus_1.encounter.1"],victory:["dialogue:galactic_boss_cyrus_1.victory.1"],defeat:["dialogue:galactic_boss_cyrus_1.defeat.1"]}],[c.CYRUS_2]:[{encounter:["dialogue:galactic_boss_cyrus_2.encounter.1"],victory:["dialogue:galactic_boss_cyrus_2.victory.1"],defeat:["dialogue:galactic_boss_cyrus_2.defeat.1"]}],[c.GHETSIS]:[{encounter:["dialogue:plasma_boss_ghetsis_1.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_1.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_1.defeat.1"]}],[c.GHETSIS_2]:[{encounter:["dialogue:plasma_boss_ghetsis_2.encounter.1"],victory:["dialogue:plasma_boss_ghetsis_2.victory.1"],defeat:["dialogue:plasma_boss_ghetsis_2.defeat.1"]}],[c.LYSANDRE]:[{encounter:["dialogue:flare_boss_lysandre_1.encounter.1"],victory:["dialogue:flare_boss_lysandre_1.victory.1"],defeat:["dialogue:flare_boss_lysandre_1.defeat.1"]}],[c.LYSANDRE_2]:[{encounter:["dialogue:flare_boss_lysandre_2.encounter.1"],victory:["dialogue:flare_boss_lysandre_2.victory.1"],defeat:["dialogue:flare_boss_lysandre_2.defeat.1"]}],[c.LUSAMINE]:[{encounter:["dialogue:aether_boss_lusamine_1.encounter.1"],victory:["dialogue:aether_boss_lusamine_1.victory.1"],defeat:["dialogue:aether_boss_lusamine_1.defeat.1"]}],[c.LUSAMINE_2]:[{encounter:["dialogue:aether_boss_lusamine_2.encounter.1"],victory:["dialogue:aether_boss_lusamine_2.victory.1"],defeat:["dialogue:aether_boss_lusamine_2.defeat.1"]}],[c.GUZMA]:[{encounter:["dialogue:skull_boss_guzma_1.encounter.1"],victory:["dialogue:skull_boss_guzma_1.victory.1"],defeat:["dialogue:skull_boss_guzma_1.defeat.1"]}],[c.GUZMA_2]:[{encounter:["dialogue:skull_boss_guzma_2.encounter.1"],victory:["dialogue:skull_boss_guzma_2.victory.1"],defeat:["dialogue:skull_boss_guzma_2.defeat.1"]}],[c.ROSE]:[{encounter:["dialogue:macro_boss_rose_1.encounter.1"],victory:["dialogue:macro_boss_rose_1.victory.1"],defeat:["dialogue:macro_boss_rose_1.defeat.1"]}],[c.ROSE_2]:[{encounter:["dialogue:macro_boss_rose_2.encounter.1"],victory:["dialogue:macro_boss_rose_2.victory.1"],defeat:["dialogue:macro_boss_rose_2.defeat.1"]}],[c.PENNY]:[{encounter:["dialogue:star_boss_penny_1.encounter.1"],victory:["dialogue:star_boss_penny_1.victory.1"],defeat:["dialogue:star_boss_penny_1.defeat.1"]}],[c.PENNY_2]:[{encounter:["dialogue:star_boss_penny_2.encounter.1"],victory:["dialogue:star_boss_penny_2.victory.1"],defeat:["dialogue:star_boss_penny_2.defeat.1"]}],[c.BUCK]:[{encounter:["dialogue:stat_trainer_buck.encounter.1","dialogue:stat_trainer_buck.encounter.2"],victory:["dialogue:stat_trainer_buck.victory.1","dialogue:stat_trainer_buck.victory.2"],defeat:["dialogue:stat_trainer_buck.defeat.1","dialogue:stat_trainer_buck.defeat.2"]}],[c.CHERYL]:[{encounter:["dialogue:stat_trainer_cheryl.encounter.1","dialogue:stat_trainer_cheryl.encounter.2"],victory:["dialogue:stat_trainer_cheryl.victory.1","dialogue:stat_trainer_cheryl.victory.2"],defeat:["dialogue:stat_trainer_cheryl.defeat.1","dialogue:stat_trainer_cheryl.defeat.2"]}],[c.MARLEY]:[{encounter:["dialogue:stat_trainer_marley.encounter.1","dialogue:stat_trainer_marley.encounter.2"],victory:["dialogue:stat_trainer_marley.victory.1","dialogue:stat_trainer_marley.victory.2"],defeat:["dialogue:stat_trainer_marley.defeat.1","dialogue:stat_trainer_marley.defeat.2"]}],[c.MIRA]:[{encounter:["dialogue:stat_trainer_mira.encounter.1","dialogue:stat_trainer_mira.encounter.2"],victory:["dialogue:stat_trainer_mira.victory.1","dialogue:stat_trainer_mira.victory.2"],defeat:["dialogue:stat_trainer_mira.defeat.1","dialogue:stat_trainer_mira.defeat.2"]}],[c.RILEY]:[{encounter:["dialogue:stat_trainer_riley.encounter.1","dialogue:stat_trainer_riley.encounter.2"],victory:["dialogue:stat_trainer_riley.victory.1","dialogue:stat_trainer_riley.victory.2"],defeat:["dialogue:stat_trainer_riley.defeat.1","dialogue:stat_trainer_riley.defeat.2"]}],[c.VICTOR]:[{encounter:["dialogue:winstrates_victor.encounter.1"],victory:["dialogue:winstrates_victor.victory.1"]}],[c.VICTORIA]:[{encounter:["dialogue:winstrates_victoria.encounter.1"],victory:["dialogue:winstrates_victoria.victory.1"]}],[c.VIVI]:[{encounter:["dialogue:winstrates_vivi.encounter.1"],victory:["dialogue:winstrates_vivi.victory.1"]}],[c.VICKY]:[{encounter:["dialogue:winstrates_vicky.encounter.1"],victory:["dialogue:winstrates_vicky.victory.1"]}],[c.VITO]:[{encounter:["dialogue:winstrates_vito.encounter.1"],victory:["dialogue:winstrates_vito.victory.1"]}],[c.BROCK]:{encounter:["dialogue:brock.encounter.1","dialogue:brock.encounter.2","dialogue:brock.encounter.3"],victory:["dialogue:brock.victory.1","dialogue:brock.victory.2","dialogue:brock.victory.3"],defeat:["dialogue:brock.defeat.1","dialogue:brock.defeat.2","dialogue:brock.defeat.3"]},[c.MISTY]:{encounter:["dialogue:misty.encounter.1","dialogue:misty.encounter.2","dialogue:misty.encounter.3"],victory:["dialogue:misty.victory.1","dialogue:misty.victory.2","dialogue:misty.victory.3"],defeat:["dialogue:misty.defeat.1","dialogue:misty.defeat.2","dialogue:misty.defeat.3"]},[c.LT_SURGE]:{encounter:["dialogue:lt_surge.encounter.1","dialogue:lt_surge.encounter.2","dialogue:lt_surge.encounter.3"],victory:["dialogue:lt_surge.victory.1","dialogue:lt_surge.victory.2","dialogue:lt_surge.victory.3"],defeat:["dialogue:lt_surge.defeat.1","dialogue:lt_surge.defeat.2","dialogue:lt_surge.defeat.3"]},[c.ERIKA]:{encounter:["dialogue:erika.encounter.1","dialogue:erika.encounter.2","dialogue:erika.encounter.3","dialogue:erika.encounter.4"],victory:["dialogue:erika.victory.1","dialogue:erika.victory.2","dialogue:erika.victory.3","dialogue:erika.victory.4"],defeat:["dialogue:erika.defeat.1","dialogue:erika.defeat.2","dialogue:erika.defeat.3","dialogue:erika.defeat.4"]},[c.JANINE]:{encounter:["dialogue:janine.encounter.1","dialogue:janine.encounter.2","dialogue:janine.encounter.3"],victory:["dialogue:janine.victory.1","dialogue:janine.victory.2","dialogue:janine.victory.3"],defeat:["dialogue:janine.defeat.1","dialogue:janine.defeat.2","dialogue:janine.defeat.3"]},[c.SABRINA]:{encounter:["dialogue:sabrina.encounter.1","dialogue:sabrina.encounter.2","dialogue:sabrina.encounter.3"],victory:["dialogue:sabrina.victory.1","dialogue:sabrina.victory.2","dialogue:sabrina.victory.3"],defeat:["dialogue:sabrina.defeat.1","dialogue:sabrina.defeat.2","dialogue:sabrina.defeat.3"]},[c.BLAINE]:{encounter:["dialogue:blaine.encounter.1","dialogue:blaine.encounter.2","dialogue:blaine.encounter.3"],victory:["dialogue:blaine.victory.1","dialogue:blaine.victory.2","dialogue:blaine.victory.3"],defeat:["dialogue:blaine.defeat.1","dialogue:blaine.defeat.2","dialogue:blaine.defeat.3"]},[c.GIOVANNI]:{encounter:["dialogue:giovanni.encounter.1","dialogue:giovanni.encounter.2","dialogue:giovanni.encounter.3"],victory:["dialogue:giovanni.victory.1","dialogue:giovanni.victory.2","dialogue:giovanni.victory.3"],defeat:["dialogue:giovanni.defeat.1","dialogue:giovanni.defeat.2","dialogue:giovanni.defeat.3"]},[c.ROXANNE]:{encounter:["dialogue:roxanne.encounter.1","dialogue:roxanne.encounter.2","dialogue:roxanne.encounter.3"],victory:["dialogue:roxanne.victory.1","dialogue:roxanne.victory.2","dialogue:roxanne.victory.3"],defeat:["dialogue:roxanne.defeat.1","dialogue:roxanne.defeat.2","dialogue:roxanne.defeat.3"]},[c.BRAWLY]:{encounter:["dialogue:brawly.encounter.1","dialogue:brawly.encounter.2","dialogue:brawly.encounter.3"],victory:["dialogue:brawly.victory.1","dialogue:brawly.victory.2","dialogue:brawly.victory.3"],defeat:["dialogue:brawly.defeat.1","dialogue:brawly.defeat.2","dialogue:brawly.defeat.3"]},[c.WATTSON]:{encounter:["dialogue:wattson.encounter.1","dialogue:wattson.encounter.2","dialogue:wattson.encounter.3"],victory:["dialogue:wattson.victory.1","dialogue:wattson.victory.2","dialogue:wattson.victory.3"],defeat:["dialogue:wattson.defeat.1","dialogue:wattson.defeat.2","dialogue:wattson.defeat.3"]},[c.FLANNERY]:{encounter:["dialogue:flannery.encounter.1","dialogue:flannery.encounter.2","dialogue:flannery.encounter.3"],victory:["dialogue:flannery.victory.1","dialogue:flannery.victory.2","dialogue:flannery.victory.3"],defeat:["dialogue:flannery.defeat.1","dialogue:flannery.defeat.2","dialogue:flannery.defeat.3"]},[c.NORMAN]:{encounter:["dialogue:norman.encounter.1","dialogue:norman.encounter.2","dialogue:norman.encounter.3"],victory:["dialogue:norman.victory.1","dialogue:norman.victory.2","dialogue:norman.victory.3"],defeat:["dialogue:norman.defeat.1","dialogue:norman.defeat.2","dialogue:norman.defeat.3"]},[c.WINONA]:{encounter:["dialogue:winona.encounter.1","dialogue:winona.encounter.2","dialogue:winona.encounter.3"],victory:["dialogue:winona.victory.1","dialogue:winona.victory.2","dialogue:winona.victory.3"],defeat:["dialogue:winona.defeat.1","dialogue:winona.defeat.2","dialogue:winona.defeat.3"]},[c.TATE]:{encounter:["dialogue:tate.encounter.1","dialogue:tate.encounter.2","dialogue:tate.encounter.3"],victory:["dialogue:tate.victory.1","dialogue:tate.victory.2","dialogue:tate.victory.3"],defeat:["dialogue:tate.defeat.1","dialogue:tate.defeat.2","dialogue:tate.defeat.3"]},[c.LIZA]:{encounter:["dialogue:liza.encounter.1","dialogue:liza.encounter.2","dialogue:liza.encounter.3"],victory:["dialogue:liza.victory.1","dialogue:liza.victory.2","dialogue:liza.victory.3"],defeat:["dialogue:liza.defeat.1","dialogue:liza.defeat.2","dialogue:liza.defeat.3"]},[c.JUAN]:{encounter:["dialogue:juan.encounter.1","dialogue:juan.encounter.2","dialogue:juan.encounter.3","dialogue:juan.encounter.4"],victory:["dialogue:juan.victory.1","dialogue:juan.victory.2","dialogue:juan.victory.3","dialogue:juan.victory.4"],defeat:["dialogue:juan.defeat.1","dialogue:juan.defeat.2","dialogue:juan.defeat.3","dialogue:juan.defeat.4"]},[c.CRASHER_WAKE]:{encounter:["dialogue:crasher_wake.encounter.1","dialogue:crasher_wake.encounter.2","dialogue:crasher_wake.encounter.3"],victory:["dialogue:crasher_wake.victory.1","dialogue:crasher_wake.victory.2","dialogue:crasher_wake.victory.3"],defeat:["dialogue:crasher_wake.defeat.1","dialogue:crasher_wake.defeat.2","dialogue:crasher_wake.defeat.3"]},[c.FALKNER]:{encounter:["dialogue:falkner.encounter.1","dialogue:falkner.encounter.2","dialogue:falkner.encounter.3"],victory:["dialogue:falkner.victory.1","dialogue:falkner.victory.2","dialogue:falkner.victory.3"],defeat:["dialogue:falkner.defeat.1","dialogue:falkner.defeat.2","dialogue:falkner.defeat.3"]},[c.NESSA]:{encounter:["dialogue:nessa.encounter.1","dialogue:nessa.encounter.2","dialogue:nessa.encounter.3"],victory:["dialogue:nessa.victory.1","dialogue:nessa.victory.2","dialogue:nessa.victory.3"],defeat:["dialogue:nessa.defeat.1","dialogue:nessa.defeat.2","dialogue:nessa.defeat.3"]},[c.MELONY]:{encounter:["dialogue:melony.encounter.1","dialogue:melony.encounter.2","dialogue:melony.encounter.3"],victory:["dialogue:melony.victory.1","dialogue:melony.victory.2","dialogue:melony.victory.3"],defeat:["dialogue:melony.defeat.1","dialogue:melony.defeat.2","dialogue:melony.defeat.3"]},[c.MARLON]:{encounter:["dialogue:marlon.encounter.1","dialogue:marlon.encounter.2","dialogue:marlon.encounter.3"],victory:["dialogue:marlon.victory.1","dialogue:marlon.victory.2","dialogue:marlon.victory.3"],defeat:["dialogue:marlon.defeat.1","dialogue:marlon.defeat.2","dialogue:marlon.defeat.3"]},[c.SHAUNTAL]:{encounter:["dialogue:shauntal.encounter.1","dialogue:shauntal.encounter.2","dialogue:shauntal.encounter.3"],victory:["dialogue:shauntal.victory.1","dialogue:shauntal.victory.2","dialogue:shauntal.victory.3"],defeat:["dialogue:shauntal.defeat.1","dialogue:shauntal.defeat.2","dialogue:shauntal.defeat.3"]},[c.MARSHAL]:{encounter:["dialogue:marshal.encounter.1","dialogue:marshal.encounter.2","dialogue:marshal.encounter.3"],victory:["dialogue:marshal.victory.1","dialogue:marshal.victory.2","dialogue:marshal.victory.3"],defeat:["dialogue:marshal.defeat.1","dialogue:marshal.defeat.2","dialogue:marshal.defeat.3"]},[c.CHEREN]:{encounter:["dialogue:cheren.encounter.1","dialogue:cheren.encounter.2","dialogue:cheren.encounter.3"],victory:["dialogue:cheren.victory.1","dialogue:cheren.victory.2","dialogue:cheren.victory.3"],defeat:["dialogue:cheren.defeat.1","dialogue:cheren.defeat.2","dialogue:cheren.defeat.3"]},[c.CHILI]:{encounter:["dialogue:chili.encounter.1","dialogue:chili.encounter.2","dialogue:chili.encounter.3"],victory:["dialogue:chili.victory.1","dialogue:chili.victory.2","dialogue:chili.victory.3"],defeat:["dialogue:chili.defeat.1","dialogue:chili.defeat.2","dialogue:chili.defeat.3"]},[c.CILAN]:{encounter:["dialogue:cilan.encounter.1","dialogue:cilan.encounter.2","dialogue:cilan.encounter.3"],victory:["dialogue:cilan.victory.1","dialogue:cilan.victory.2","dialogue:cilan.victory.3"],defeat:["dialogue:cilan.defeat.1","dialogue:cilan.defeat.2","dialogue:cilan.defeat.3"]},[c.ROARK]:{encounter:["dialogue:roark.encounter.1","dialogue:roark.encounter.2","dialogue:roark.encounter.3","dialogue:roark.encounter.4"],victory:["dialogue:roark.victory.1","dialogue:roark.victory.2","dialogue:roark.victory.3","dialogue:roark.victory.4"],defeat:["dialogue:roark.defeat.1","dialogue:roark.defeat.2","dialogue:roark.defeat.3"]},[c.MORTY]:{encounter:["dialogue:morty.encounter.1","dialogue:morty.encounter.2","dialogue:morty.encounter.3","dialogue:morty.encounter.4","dialogue:morty.encounter.5","dialogue:morty.encounter.6"],victory:["dialogue:morty.victory.1","dialogue:morty.victory.2","dialogue:morty.victory.3","dialogue:morty.victory.4","dialogue:morty.victory.5","dialogue:morty.victory.6"],defeat:["dialogue:morty.defeat.1","dialogue:morty.defeat.2","dialogue:morty.defeat.3","dialogue:morty.defeat.4","dialogue:morty.defeat.5","dialogue:morty.defeat.6"]},[c.CRISPIN]:{encounter:["dialogue:crispin.encounter.1","dialogue:crispin.encounter.2"],victory:["dialogue:crispin.victory.1","dialogue:crispin.victory.2"],defeat:["dialogue:crispin.defeat.1","dialogue:crispin.defeat.2"]},[c.AMARYS]:{encounter:["dialogue:amarys.encounter.1"],victory:["dialogue:amarys.victory.1"],defeat:["dialogue:amarys.defeat.1"]},[c.LACEY]:{encounter:["dialogue:lacey.encounter.1"],victory:["dialogue:lacey.victory.1"],defeat:["dialogue:lacey.defeat.1"]},[c.DRAYTON]:{encounter:["dialogue:drayton.encounter.1"],victory:["dialogue:drayton.victory.1"],defeat:["dialogue:drayton.defeat.1"]},[c.RAMOS]:{encounter:["dialogue:ramos.encounter.1"],victory:["dialogue:ramos.victory.1"],defeat:["dialogue:ramos.defeat.1"]},[c.VIOLA]:{encounter:["dialogue:viola.encounter.1","dialogue:viola.encounter.2"],victory:["dialogue:viola.victory.1","dialogue:viola.victory.2"],defeat:["dialogue:viola.defeat.1","dialogue:viola.defeat.2"]},[c.CANDICE]:{encounter:["dialogue:candice.encounter.1","dialogue:candice.encounter.2"],victory:["dialogue:candice.victory.1","dialogue:candice.victory.2"],defeat:["dialogue:candice.defeat.1","dialogue:candice.defeat.2"]},[c.GARDENIA]:{encounter:["dialogue:gardenia.encounter.1"],victory:["dialogue:gardenia.victory.1"],defeat:["dialogue:gardenia.defeat.1"]},[c.AARON]:{encounter:["dialogue:aaron.encounter.1"],victory:["dialogue:aaron.victory.1"],defeat:["dialogue:aaron.defeat.1"]},[c.CRESS]:{encounter:["dialogue:cress.encounter.1"],victory:["dialogue:cress.victory.1"],defeat:["dialogue:cress.defeat.1"]},[c.ALLISTER]:{encounter:["dialogue:allister.encounter.1"],victory:["dialogue:allister.victory.1"],defeat:["dialogue:allister.defeat.1"]},[c.CLAY]:{encounter:["dialogue:clay.encounter.1"],victory:["dialogue:clay.victory.1"],defeat:["dialogue:clay.defeat.1"]},[c.KOFU]:{encounter:["dialogue:kofu.encounter.1"],victory:["dialogue:kofu.victory.1"],defeat:["dialogue:kofu.defeat.1"]},[c.TULIP]:{encounter:["dialogue:tulip.encounter.1"],victory:["dialogue:tulip.victory.1"],defeat:["dialogue:tulip.defeat.1"]},[c.SIDNEY]:{encounter:["dialogue:sidney.encounter.1"],victory:["dialogue:sidney.victory.1"],defeat:["dialogue:sidney.defeat.1"]},[c.PHOEBE]:{encounter:["dialogue:phoebe.encounter.1"],victory:["dialogue:phoebe.victory.1"],defeat:["dialogue:phoebe.defeat.1"]},[c.GLACIA]:{encounter:["dialogue:glacia.encounter.1"],victory:["dialogue:glacia.victory.1"],defeat:["dialogue:glacia.defeat.1"]},[c.DRAKE]:{encounter:["dialogue:drake.encounter.1"],victory:["dialogue:drake.victory.1"],defeat:["dialogue:drake.defeat.1"]},[c.WALLACE]:{encounter:["dialogue:wallace.encounter.1"],victory:["dialogue:wallace.victory.1"],defeat:["dialogue:wallace.defeat.1"]},[c.LORELEI]:{encounter:["dialogue:lorelei.encounter.1"],victory:["dialogue:lorelei.victory.1"],defeat:["dialogue:lorelei.defeat.1"]},[c.WILL]:{encounter:["dialogue:will.encounter.1"],victory:["dialogue:will.victory.1"],defeat:["dialogue:will.defeat.1"]},[c.MALVA]:{encounter:["dialogue:malva.encounter.1"],victory:["dialogue:malva.victory.1"],defeat:["dialogue:malva.defeat.1"]},[c.HALA]:{encounter:["dialogue:hala.encounter.1"],victory:["dialogue:hala.victory.1"],defeat:["dialogue:hala.defeat.1"]},[c.MOLAYNE]:{encounter:["dialogue:molayne.encounter.1"],victory:["dialogue:molayne.victory.1"],defeat:["dialogue:molayne.defeat.1"]},[c.RIKA]:{encounter:["dialogue:rika.encounter.1"],victory:["dialogue:rika.victory.1"],defeat:["dialogue:rika.defeat.1"]},[c.BRUNO]:{encounter:["dialogue:bruno.encounter.1"],victory:["dialogue:bruno.victory.1"],defeat:["dialogue:bruno.defeat.1"]},[c.BUGSY]:{encounter:["dialogue:bugsy.encounter.1"],victory:["dialogue:bugsy.victory.1"],defeat:["dialogue:bugsy.defeat.1"]},[c.KOGA]:{encounter:["dialogue:koga.encounter.1"],victory:["dialogue:koga.victory.1"],defeat:["dialogue:koga.defeat.1"]},[c.BERTHA]:{encounter:["dialogue:bertha.encounter.1"],victory:["dialogue:bertha.victory.1"],defeat:["dialogue:bertha.defeat.1"]},[c.LENORA]:{encounter:["dialogue:lenora.encounter.1"],victory:["dialogue:lenora.victory.1"],defeat:["dialogue:lenora.defeat.1"]},[c.SIEBOLD]:{encounter:["dialogue:siebold.encounter.1"],victory:["dialogue:siebold.victory.1"],defeat:["dialogue:siebold.defeat.1"]},[c.ROXIE]:{encounter:["dialogue:roxie.encounter.1"],victory:["dialogue:roxie.victory.1"],defeat:["dialogue:roxie.defeat.1"]},[c.OLIVIA]:{encounter:["dialogue:olivia.encounter.1"],victory:["dialogue:olivia.victory.1"],defeat:["dialogue:olivia.defeat.1"]},[c.POPPY]:{encounter:["dialogue:poppy.encounter.1"],victory:["dialogue:poppy.victory.1"],defeat:["dialogue:poppy.defeat.1"]},[c.AGATHA]:{encounter:["dialogue:agatha.encounter.1"],victory:["dialogue:agatha.victory.1"],defeat:["dialogue:agatha.defeat.1"]},[c.FLINT]:{encounter:["dialogue:flint.encounter.1"],victory:["dialogue:flint.victory.1"],defeat:["dialogue:flint.defeat.1"]},[c.GRIMSLEY]:{encounter:["dialogue:grimsley.encounter.1"],victory:["dialogue:grimsley.victory.1"],defeat:["dialogue:grimsley.defeat.1"]},[c.CAITLIN]:{encounter:["dialogue:caitlin.encounter.1"],victory:["dialogue:caitlin.victory.1"],defeat:["dialogue:caitlin.defeat.1"]},[c.DIANTHA]:{encounter:["dialogue:diantha.encounter.1"],victory:["dialogue:diantha.victory.1"],defeat:["dialogue:diantha.defeat.1"]},[c.WIKSTROM]:{encounter:["dialogue:wikstrom.encounter.1"],victory:["dialogue:wikstrom.victory.1"],defeat:["dialogue:wikstrom.defeat.1"]},[c.ACEROLA]:{encounter:["dialogue:acerola.encounter.1"],victory:["dialogue:acerola.victory.1"],defeat:["dialogue:acerola.defeat.1"]},[c.LARRY_ELITE]:{encounter:["dialogue:larry_elite.encounter.1"],victory:["dialogue:larry_elite.victory.1"],defeat:["dialogue:larry_elite.defeat.1"]},[c.LANCE]:{encounter:["dialogue:lance.encounter.1","dialogue:lance.encounter.2"],victory:["dialogue:lance.victory.1","dialogue:lance.victory.2"],defeat:["dialogue:lance.defeat.1","dialogue:lance.defeat.2"]},[c.KAREN]:{encounter:["dialogue:karen.encounter.1","dialogue:karen.encounter.2","dialogue:karen.encounter.3"],victory:["dialogue:karen.victory.1","dialogue:karen.victory.2","dialogue:karen.victory.3"],defeat:["dialogue:karen.defeat.1","dialogue:karen.defeat.2","dialogue:karen.defeat.3"]},[c.MILO]:{encounter:["dialogue:milo.encounter.1"],victory:["dialogue:milo.victory.1"],defeat:["dialogue:milo.defeat.1"]},[c.LUCIAN]:{encounter:["dialogue:lucian.encounter.1"],victory:["dialogue:lucian.victory.1"],defeat:["dialogue:lucian.defeat.1"]},[c.DRASNA]:{encounter:["dialogue:drasna.encounter.1"],victory:["dialogue:drasna.victory.1"],defeat:["dialogue:drasna.defeat.1"]},[c.KAHILI]:{encounter:["dialogue:kahili.encounter.1"],victory:["dialogue:kahili.victory.1"],defeat:["dialogue:kahili.defeat.1"]},[c.HASSEL]:{encounter:["dialogue:hassel.encounter.1"],victory:["dialogue:hassel.victory.1"],defeat:["dialogue:hassel.defeat.1"]},[c.BLUE]:{encounter:["dialogue:blue.encounter.1"],victory:["dialogue:blue.victory.1"],defeat:["dialogue:blue.defeat.1"]},[c.PIERS]:{encounter:["dialogue:piers.encounter.1"],victory:["dialogue:piers.victory.1"],defeat:["dialogue:piers.defeat.1"]},[c.RED]:{encounter:["dialogue:red.encounter.1"],victory:["dialogue:red.victory.1"],defeat:["dialogue:red.defeat.1"]},[c.JASMINE]:{encounter:["dialogue:jasmine.encounter.1"],victory:["dialogue:jasmine.victory.1"],defeat:["dialogue:jasmine.defeat.1"]},[c.LANCE_CHAMPION]:{encounter:["dialogue:lance_champion.encounter.1"],victory:["dialogue:lance_champion.victory.1"],defeat:["dialogue:lance_champion.defeat.1"]},[c.STEVEN]:{encounter:["dialogue:steven.encounter.1"],victory:["dialogue:steven.victory.1"],defeat:["dialogue:steven.defeat.1"]},[c.CYNTHIA]:{encounter:["dialogue:cynthia.encounter.1"],victory:["dialogue:cynthia.victory.1"],defeat:["dialogue:cynthia.defeat.1"]},[c.IRIS]:{encounter:["dialogue:iris.encounter.1"],victory:["dialogue:iris.victory.1"],defeat:["dialogue:iris.defeat.1"]},[c.KUKUI]:{encounter:["dialogue:kukui.encounter.1"],victory:["dialogue:kukui.victory.1"],defeat:["dialogue:kukui.defeat.1"]},[c.HAU]:{encounter:["dialogue:hau.encounter.1"],victory:["dialogue:hau.victory.1"],defeat:["dialogue:hau.defeat.1"]},[c.GEETA]:{encounter:["dialogue:geeta.encounter.1"],victory:["dialogue:geeta.victory.1"],defeat:["dialogue:geeta.defeat.1"]},[c.NEMONA]:{encounter:["dialogue:nemona.encounter.1"],victory:["dialogue:nemona.victory.1"],defeat:["dialogue:nemona.defeat.1"]},[c.LEON]:{encounter:["dialogue:leon.encounter.1"],victory:["dialogue:leon.victory.1"],defeat:["dialogue:leon.defeat.1"]},[c.MUSTARD]:{encounter:["dialogue:mustard.encounter.1"],victory:["dialogue:mustard.victory.1"],defeat:["dialogue:mustard.defeat.1"]},[c.WHITNEY]:{encounter:["dialogue:whitney.encounter.1"],victory:["dialogue:whitney.victory.1"],defeat:["dialogue:whitney.defeat.1"]},[c.CHUCK]:{encounter:["dialogue:chuck.encounter.1"],victory:["dialogue:chuck.victory.1"],defeat:["dialogue:chuck.defeat.1"]},[c.KATY]:{encounter:["dialogue:katy.encounter.1"],victory:["dialogue:katy.victory.1"],defeat:["dialogue:katy.defeat.1"]},[c.PRYCE]:{encounter:["dialogue:pryce.encounter.1"],victory:["dialogue:pryce.victory.1"],defeat:["dialogue:pryce.defeat.1"]},[c.CLAIR]:{encounter:["dialogue:clair.encounter.1"],victory:["dialogue:clair.victory.1"],defeat:["dialogue:clair.defeat.1"]},[c.MAYLENE]:{encounter:["dialogue:maylene.encounter.1"],victory:["dialogue:maylene.victory.1"],defeat:["dialogue:maylene.defeat.1"]},[c.FANTINA]:{encounter:["dialogue:fantina.encounter.1"],victory:["dialogue:fantina.victory.1"],defeat:["dialogue:fantina.defeat.1"]},[c.BYRON]:{encounter:["dialogue:byron.encounter.1"],victory:["dialogue:byron.victory.1"],defeat:["dialogue:byron.defeat.1"]},[c.OLYMPIA]:{encounter:["dialogue:olympia.encounter.1"],victory:["dialogue:olympia.victory.1"],defeat:["dialogue:olympia.defeat.1"]},[c.VOLKNER]:{encounter:["dialogue:volkner.encounter.1"],victory:["dialogue:volkner.victory.1"],defeat:["dialogue:volkner.defeat.1"]},[c.BURGH]:{encounter:["dialogue:burgh.encounter.1","dialogue:burgh.encounter.2"],victory:["dialogue:burgh.victory.1","dialogue:burgh.victory.2"],defeat:["dialogue:burgh.defeat.1","dialogue:burgh.defeat.2"]},[c.ELESA]:{encounter:["dialogue:elesa.encounter.1"],victory:["dialogue:elesa.victory.1"],defeat:["dialogue:elesa.defeat.1"]},[c.SKYLA]:{encounter:["dialogue:skyla.encounter.1"],victory:["dialogue:skyla.victory.1"],defeat:["dialogue:skyla.defeat.1"]},[c.BRYCEN]:{encounter:["dialogue:brycen.encounter.1"],victory:["dialogue:brycen.victory.1"],defeat:["dialogue:brycen.defeat.1"]},[c.DRAYDEN]:{encounter:["dialogue:drayden.encounter.1"],victory:["dialogue:drayden.victory.1"],defeat:["dialogue:drayden.defeat.1"]},[c.GRANT]:{encounter:["dialogue:grant.encounter.1"],victory:["dialogue:grant.victory.1"],defeat:["dialogue:grant.defeat.1"]},[c.KORRINA]:{encounter:["dialogue:korrina.encounter.1"],victory:["dialogue:korrina.victory.1"],defeat:["dialogue:korrina.defeat.1"]},[c.CLEMONT]:{encounter:["dialogue:clemont.encounter.1"],victory:["dialogue:clemont.victory.1"],defeat:["dialogue:clemont.defeat.1"]},[c.VALERIE]:{encounter:["dialogue:valerie.encounter.1"],victory:["dialogue:valerie.victory.1"],defeat:["dialogue:valerie.defeat.1"]},[c.WULFRIC]:{encounter:["dialogue:wulfric.encounter.1"],victory:["dialogue:wulfric.victory.1"],defeat:["dialogue:wulfric.defeat.1"]},[c.KABU]:{encounter:["dialogue:kabu.encounter.1"],victory:["dialogue:kabu.victory.1"],defeat:["dialogue:kabu.defeat.1"]},[c.BEA]:{encounter:["dialogue:bea.encounter.1"],victory:["dialogue:bea.victory.1"],defeat:["dialogue:bea.defeat.1"]},[c.OPAL]:{encounter:["dialogue:opal.encounter.1"],victory:["dialogue:opal.victory.1"],defeat:["dialogue:opal.defeat.1"]},[c.BEDE]:{encounter:["dialogue:bede.encounter.1"],victory:["dialogue:bede.victory.1"],defeat:["dialogue:bede.defeat.1"]},[c.GORDIE]:{encounter:["dialogue:gordie.encounter.1"],victory:["dialogue:gordie.victory.1"],defeat:["dialogue:gordie.defeat.1"]},[c.MARNIE]:{encounter:["dialogue:marnie.encounter.1"],victory:["dialogue:marnie.victory.1"],defeat:["dialogue:marnie.defeat.1"]},[c.RAIHAN]:{encounter:["dialogue:raihan.encounter.1"],victory:["dialogue:raihan.victory.1"],defeat:["dialogue:raihan.defeat.1"]},[c.BRASSIUS]:{encounter:["dialogue:brassius.encounter.1"],victory:["dialogue:brassius.victory.1"],defeat:["dialogue:brassius.defeat.1"]},[c.IONO]:{encounter:["dialogue:iono.encounter.1"],victory:["dialogue:iono.victory.1"],defeat:["dialogue:iono.defeat.1"]},[c.LARRY]:{encounter:["dialogue:larry.encounter.1"],victory:["dialogue:larry.victory.1"],defeat:["dialogue:larry.defeat.1"]},[c.RYME]:{encounter:["dialogue:ryme.encounter.1"],victory:["dialogue:ryme.victory.1"],defeat:["dialogue:ryme.defeat.1"]},[c.GRUSHA]:{encounter:["dialogue:grusha.encounter.1"],victory:["dialogue:grusha.victory.1"],defeat:["dialogue:grusha.defeat.1"]},[c.MARNIE_ELITE]:{encounter:["dialogue:marnie_elite.encounter.1","dialogue:marnie_elite.encounter.2"],victory:["dialogue:marnie_elite.victory.1","dialogue:marnie_elite.victory.2"],defeat:["dialogue:marnie_elite.defeat.1","dialogue:marnie_elite.defeat.2"]},[c.NESSA_ELITE]:{encounter:["dialogue:nessa_elite.encounter.1","dialogue:nessa_elite.encounter.2"],victory:["dialogue:nessa_elite.victory.1","dialogue:nessa_elite.victory.2"],defeat:["dialogue:nessa_elite.defeat.1","dialogue:nessa_elite.defeat.2"]},[c.BEA_ELITE]:{encounter:["dialogue:bea_elite.encounter.1","dialogue:bea_elite.encounter.2"],victory:["dialogue:bea_elite.victory.1","dialogue:bea_elite.victory.2"],defeat:["dialogue:bea_elite.defeat.1","dialogue:bea_elite.defeat.2"]},[c.ALLISTER_ELITE]:{encounter:["dialogue:allister_elite.encounter.1","dialogue:allister_elite.encounter.2"],victory:["dialogue:allister_elite.victory.1","dialogue:allister_elite.victory.2"],defeat:["dialogue:allister_elite.defeat.1","dialogue:allister_elite.defeat.2"]},[c.RAIHAN_ELITE]:{encounter:["dialogue:raihan_elite.encounter.1","dialogue:raihan_elite.encounter.2"],victory:["dialogue:raihan_elite.victory.1","dialogue:raihan_elite.victory.2"],defeat:["dialogue:raihan_elite.defeat.1","dialogue:raihan_elite.defeat.2"]},[c.ALDER]:{encounter:["dialogue:alder.encounter.1"],victory:["dialogue:alder.victory.1"],defeat:["dialogue:alder.defeat.1"]},[c.KIERAN]:{encounter:["dialogue:kieran.encounter.1"],victory:["dialogue:kieran.victory.1"],defeat:["dialogue:kieran.defeat.1"]},[c.RIVAL]:[{encounter:["dialogue:rival.encounter.1"],victory:["dialogue:rival.victory.1"]},{encounter:["dialogue:rival_female.encounter.1"],victory:["dialogue:rival_female.victory.1"]}],[c.RIVAL_2]:[{encounter:["dialogue:rival_2.encounter.1"],victory:["dialogue:rival_2.victory.1"]},{encounter:["dialogue:rival_2_female.encounter.1"],victory:["dialogue:rival_2_female.victory.1"],defeat:["dialogue:rival_2_female.defeat.1"]}],[c.RIVAL_3]:[{encounter:["dialogue:rival_3.encounter.1"],victory:["dialogue:rival_3.victory.1"]},{encounter:["dialogue:rival_3_female.encounter.1"],victory:["dialogue:rival_3_female.victory.1"],defeat:["dialogue:rival_3_female.defeat.1"]}],[c.RIVAL_4]:[{encounter:["dialogue:rival_4.encounter.1"],victory:["dialogue:rival_4.victory.1"]},{encounter:["dialogue:rival_4_female.encounter.1"],victory:["dialogue:rival_4_female.victory.1"],defeat:["dialogue:rival_4_female.defeat.1"]}],[c.RIVAL_5]:[{encounter:["dialogue:rival_5.encounter.1"],victory:["dialogue:rival_5.victory.1"]},{encounter:["dialogue:rival_5_female.encounter.1"],victory:["dialogue:rival_5_female.victory.1"],defeat:["dialogue:rival_5_female.defeat.1"]}],[c.RIVAL_6]:[{encounter:["dialogue:rival_6.encounter.1"],victory:["dialogue:rival_6.victory.1"]},{encounter:["dialogue:rival_6_female.encounter.1"],victory:["dialogue:rival_6_female.victory.1"]}]},Ul={blue_red_double:{encounter:["doubleBattleDialogue:blue_red_double.encounter.1"],victory:["doubleBattleDialogue:blue_red_double.victory.1"]},red_blue_double:{encounter:["doubleBattleDialogue:red_blue_double.encounter.1"],victory:["doubleBattleDialogue:red_blue_double.victory.1"]},tate_liza_double:{encounter:["doubleBattleDialogue:tate_liza_double.encounter.1"],victory:["doubleBattleDialogue:tate_liza_double.victory.1"]},liza_tate_double:{encounter:["doubleBattleDialogue:liza_tate_double.encounter.1"],victory:["doubleBattleDialogue:liza_tate_double.victory.1"]},wallace_steven_double:{encounter:["doubleBattleDialogue:wallace_steven_double.encounter.1"],victory:["doubleBattleDialogue:wallace_steven_double.victory.1"]},steven_wallace_double:{encounter:["doubleBattleDialogue:steven_wallace_double.encounter.1"],victory:["doubleBattleDialogue:steven_wallace_double.victory.1"]},alder_iris_double:{encounter:["doubleBattleDialogue:alder_iris_double.encounter.1"],victory:["doubleBattleDialogue:alder_iris_double.victory.1"]},iris_alder_double:{encounter:["doubleBattleDialogue:iris_alder_double.encounter.1"],victory:["doubleBattleDialogue:iris_alder_double.victory.1"]},marnie_piers_double:{encounter:["doubleBattleDialogue:marnie_piers_double.encounter.1"],victory:["doubleBattleDialogue:marnie_piers_double.victory.1"]},piers_marnie_double:{encounter:["doubleBattleDialogue:piers_marnie_double.encounter.1"],victory:["doubleBattleDialogue:piers_marnie_double.victory.1"]}},Sk={[DE.FINAL_BOSS]:{encounter:"battleSpecDialogue:encounter",firstStageWin:"battleSpecDialogue:firstStageWin",secondStageWin:"battleSpecDialogue:secondStageWin"}};function k0(E){const A=/@c\{(.*?)\}/.exec(E);return A?A[1]:"neutral"}o(k0,"getCharVariantFromDialogue");function ZZ(){const E=Object.keys(Qb).map(A=>Number.parseInt(A));for(const A of E){const s=Qb[A],R=["encounter","victory","defeat"];for(const n of R)Array.isArray(s)?(s[0][n]&&(tE[A][`${n}Messages`]=s[0][n]),s.length>1&&(tE[A][`female${n.slice(0,1).toUpperCase()}${n.slice(1)}Messages`]=s[1][n])):tE[A][`${n}Messages`]=s[n]}}o(ZZ,"initTrainerTypeDialogue");const ze={BROCK:[e.GEODUDE,e.ONIX],MISTY:[e.STARYU,e.PSYDUCK],LT_SURGE:[e.VOLTORB,e.PIKACHU,e.ELECTABUZZ],ERIKA:[e.ODDISH,e.BELLSPROUT,e.TANGELA,e.HOPPIP],JANINE:[e.VENONAT,e.SPINARAK,e.ZUBAT],SABRINA:[e.ABRA,e.MR_MIME,e.ESPEON],BLAINE:[e.GROWLITHE,e.PONYTA,e.MAGMAR],GIOVANNI:[e.SANDILE,e.MURKROW,e.NIDORAN_M,e.NIDORAN_F],FALKNER:[e.PIDGEY,e.HOOTHOOT,e.DODUO],BUGSY:[e.SCYTHER,e.HERACROSS,e.SHUCKLE,e.PINSIR],WHITNEY:[e.JIGGLYPUFF,e.MILTANK,e.AIPOM,e.GIRAFARIG],MORTY:[e.GASTLY,e.MISDREAVUS,e.SABLEYE],CHUCK:[e.POLIWRATH,e.MANKEY],JASMINE:[e.MAGNEMITE,e.STEELIX],PRYCE:[e.SEEL,e.SWINUB],CLAIR:[e.DRATINI,e.HORSEA,e.GYARADOS],ROXANNE:[e.GEODUDE,e.NOSEPASS],BRAWLY:[e.MACHOP,e.MAKUHITA],WATTSON:[e.MAGNEMITE,e.VOLTORB,e.ELECTRIKE],FLANNERY:[e.SLUGMA,e.TORKOAL,e.NUMEL],NORMAN:[e.SLAKOTH,e.SPINDA,e.ZIGZAGOON,e.KECLEON],WINONA:[e.SWABLU,e.WINGULL,e.TROPIUS,e.SKARMORY],TATE:[e.SOLROCK,e.NATU,e.CHIMECHO,e.GALLADE],LIZA:[e.LUNATONE,e.SPOINK,e.BALTOY,e.GARDEVOIR],JUAN:[e.HORSEA,e.BARBOACH,e.SPHEAL,e.RELICANTH],ROARK:[e.CRANIDOS,e.LARVITAR,e.GEODUDE],GARDENIA:[e.ROSELIA,e.TANGELA,e.TURTWIG],MAYLENE:[e.LUCARIO,e.MEDITITE,e.CHIMCHAR],CRASHER_WAKE:[e.BUIZEL,e.WOOPER,e.PIPLUP,e.MAGIKARP],FANTINA:[e.MISDREAVUS,e.DRIFLOON,e.SPIRITOMB],BYRON:[e.SHIELDON,e.BRONZOR,e.AGGRON],CANDICE:[e.SNEASEL,e.SNOVER,e.SNORUNT],VOLKNER:[e.SHINX,e.CHINCHOU,e.ROTOM],CILAN:[e.PANSAGE,e.FOONGUS,e.PETILIL],CHILI:[e.PANSEAR,e.DARUMAKA,e.NUMEL],CRESS:[e.PANPOUR,e.TYMPOLE,e.SLOWPOKE],CHEREN:[e.LILLIPUP,e.MINCCINO,e.PIDOVE],LENORA:[e.PATRAT,e.DEERLING,e.AUDINO],ROXIE:[e.VENIPEDE,e.TRUBBISH,e.SKORUPI],BURGH:[e.SEWADDLE,e.SHELMET,e.KARRABLAST],ELESA:[e.EMOLGA,e.BLITZLE,e.JOLTIK],CLAY:[e.DRILBUR,e.SANDILE,e.GOLETT],SKYLA:[e.DUCKLETT,e.WOOBAT,e.RUFFLET],BRYCEN:[e.CRYOGONAL,e.VANILLITE,e.CUBCHOO],DRAYDEN:[e.DRUDDIGON,e.AXEW,e.DEINO],MARLON:[e.WAILMER,e.FRILLISH,e.TIRTOUGA],VIOLA:[e.SURSKIT,e.SCATTERBUG],GRANT:[e.AMAURA,e.TYRUNT],KORRINA:[e.HAWLUCHA,e.LUCARIO,e.MIENFOO],RAMOS:[e.SKIDDO,e.HOPPIP,e.BELLSPROUT],CLEMONT:[e.HELIOPTILE,e.MAGNEMITE,e.EMOLGA],VALERIE:[e.SYLVEON,e.MAWILE,e.MR_MIME],OLYMPIA:[e.ESPURR,e.SIGILYPH,e.SLOWKING],WULFRIC:[e.BERGMITE,e.SNOVER,e.CRYOGONAL],MILO:[e.GOSSIFLEUR,e.APPLIN,e.BOUNSWEET],NESSA:[e.CHEWTLE,e.ARROKUDA,e.WIMPOD],KABU:[e.SIZZLIPEDE,e.VULPIX,e.TORKOAL],BEA:[e.GALAR_FARFETCHD,e.MACHOP,e.CLOBBOPUS],ALLISTER:[e.GALAR_YAMASK,e.GALAR_CORSOLA,e.GASTLY],OPAL:[e.MILCERY,e.TOGETIC,e.GALAR_WEEZING],BEDE:[e.HATENNA,e.GALAR_PONYTA,e.GARDEVOIR],GORDIE:[e.ROLYCOLY,e.STONJOURNER,e.BINACLE],MELONY:[e.SNOM,e.GALAR_DARUMAKA,e.GALAR_MR_MIME],PIERS:[e.GALAR_ZIGZAGOON,e.SCRAGGY,e.INKAY],MARNIE:[e.IMPIDIMP,e.PURRLOIN,e.MORPEKO],RAIHAN:[e.DURALUDON,e.TURTONATOR,e.GOOMY],KATY:[e.TEDDIURSA,e.NYMBLE,e.TAROUNTULA],BRASSIUS:[e.SUDOWOODO,e.BRAMBLIN,e.SMOLIV],IONO:[e.MISDREAVUS,e.TADBULB,e.WATTREL],KOFU:[e.CRABRAWLER,e.VELUZA,e.WIGLETT,e.WINGULL],LARRY:[e.STARLY,e.DUNSPARCE,e.LECHONK,e.KOMALA],RYME:[e.TOXEL,e.GREAVARD,e.SHUPPET,e.MIMIKYU],TULIP:[e.FLABEBE,e.FLITTLE,e.RALTS,e.GIRAFARIG],GRUSHA:[e.SWABLU,e.CETODDLE,e.CUBCHOO,e.ALOLA_VULPIX],LORELEI:[e.JYNX,[e.SLOWBRO,e.GALAR_SLOWBRO],e.LAPRAS,[e.CLOYSTER,e.ALOLA_SANDSLASH]],BRUNO:[e.MACHAMP,e.HITMONCHAN,e.HITMONLEE,[e.GOLEM,e.ALOLA_GOLEM]],AGATHA:[e.GENGAR,[e.ARBOK,e.WEEZING],e.CROBAT,e.ALOLA_MAROWAK],LANCE:[e.DRAGONITE,e.GYARADOS,e.AERODACTYL,e.ALOLA_EXEGGUTOR],WILL:[e.XATU,e.JYNX,[e.SLOWBRO,e.SLOWKING],e.EXEGGUTOR],KOGA:[[e.MUK,e.WEEZING],[e.VENOMOTH,e.ARIADOS],e.CROBAT,e.TENTACRUEL],KAREN:[e.UMBREON,e.HONCHKROW,e.HOUNDOOM,e.WEAVILE],SIDNEY:[[e.SHIFTRY,e.CACTURNE],[e.SHARPEDO,e.CRAWDAUNT],e.ABSOL,e.MIGHTYENA],PHOEBE:[e.SABLEYE,e.DUSKNOIR,e.BANETTE,[e.DRIFBLIM,e.MISMAGIUS]],GLACIA:[e.GLALIE,e.WALREIN,e.FROSLASS,e.ABOMASNOW],DRAKE:[e.ALTARIA,e.SALAMENCE,e.FLYGON,e.KINGDRA],AARON:[[e.SCIZOR,e.KLEAVOR],e.HERACROSS,[e.VESPIQUEN,e.YANMEGA],e.DRAPION],BERTHA:[e.WHISCASH,e.HIPPOWDON,e.GLISCOR,e.RHYPERIOR],FLINT:[[e.RAPIDASH,e.FLAREON],e.MAGMORTAR,[e.STEELIX,e.LOPUNNY],e.INFERNAPE],LUCIAN:[e.MR_MIME,e.GALLADE,e.BRONZONG,[e.ALAKAZAM,e.ESPEON]],SHAUNTAL:[e.COFAGRIGUS,e.CHANDELURE,e.GOLURK,e.JELLICENT],MARSHAL:[e.CONKELDURR,e.MIENSHAO,e.THROH,e.SAWK],GRIMSLEY:[e.LIEPARD,e.KINGAMBIT,e.SCRAFTY,e.KROOKODILE],CAITLIN:[e.MUSHARNA,e.GOTHITELLE,e.SIGILYPH,e.REUNICLUS],MALVA:[e.PYROAR,e.TORKOAL,e.CHANDELURE,e.TALONFLAME],SIEBOLD:[e.CLAWITZER,e.GYARADOS,e.BARBARACLE,e.STARMIE],WIKSTROM:[e.KLEFKI,e.PROBOPASS,e.SCIZOR,e.AEGISLASH],DRASNA:[e.DRAGALGE,e.DRUDDIGON,e.ALTARIA,e.NOIVERN],HALA:[e.HARIYAMA,e.BEWEAR,e.CRABOMINABLE,[e.POLIWRATH,e.ANNIHILAPE]],MOLAYNE:[e.KLEFKI,e.MAGNEZONE,e.METAGROSS,e.ALOLA_DUGTRIO],OLIVIA:[e.RELICANTH,e.CARBINK,e.ALOLA_GOLEM,e.LYCANROC],ACEROLA:[[e.BANETTE,e.DRIFBLIM],e.MIMIKYU,e.DHELMISE,e.PALOSSAND],KAHILI:[[e.BRAVIARY,e.MANDIBUZZ],e.HAWLUCHA,e.ORICORIO,e.TOUCANNON],MARNIE_ELITE:[e.MORPEKO,e.LIEPARD,[e.TOXICROAK,e.SCRAFTY],e.GRIMMSNARL],NESSA_ELITE:[e.GOLISOPOD,[e.QUAGSIRE,e.PELIPPER],e.TOXAPEX,e.DREDNAW],BEA_ELITE:[e.HAWLUCHA,[e.GRAPPLOCT,e.SIRFETCHD],e.FALINKS,e.MACHAMP],ALLISTER_ELITE:[e.DUSKNOIR,[e.POLTEAGEIST,e.RUNERIGUS],e.CURSOLA,e.GENGAR],RAIHAN_ELITE:[e.GOODRA,[e.TORKOAL,e.TURTONATOR],e.FLYGON,e.ARCHALUDON],RIKA:[e.CLODSIRE,[e.DUGTRIO,e.DONPHAN],e.CAMERUPT,e.WHISCASH],POPPY:[e.TINKATON,e.BRONZONG,e.CORVIKNIGHT,e.COPPERAJAH],LARRY_ELITE:[e.FLAMIGO,e.STARAPTOR,[e.ALTARIA,e.TROPIUS],e.ORICORIO],HASSEL:[e.BAXCALIBUR,[e.FLAPPLE,e.APPLETUN],e.DRAGALGE,e.NOIVERN],CRISPIN:[e.BLAZIKEN,e.MAGMORTAR,[e.CAMERUPT,e.TALONFLAME],e.ROTOM],AMARYS:[e.METAGROSS,e.SCIZOR,e.EMPOLEON,e.SKARMORY],LACEY:[e.EXCADRILL,e.PRIMARINA,[e.WHIMSICOTT,e.ALCREMIE],e.GRANBULL],DRAYTON:[e.ARCHALUDON,e.DRAGONITE,e.HAXORUS,e.SCEPTILE]},qB=class qB{constructor(A,s,R,n){this.size=A,this.strength=s,this.sameSpecies=!!R,this.balanced=!!n}getStrength(A){return this.strength}isSameSpecies(A){return this.sameSpecies}isBalanced(A){return this.balanced}};o(qB,"TrainerPartyTemplate");let Rt=qB;const eg=class eg extends Rt{constructor(...A){super(A.reduce((s,R)=>(s+=R.size,s),0),Ze.AVERAGE),this.templates=A}getStrength(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.getStrength(A-s);s+=R.size}return super.getStrength(A)}isSameSpecies(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isSameSpecies(A-s);s+=R.size}return super.isSameSpecies(A)}isBalanced(A){let s=0;for(const R of this.templates){if(s+R.size>A)return R.isBalanced(A-s);s+=R.size}return super.isBalanced(A)}};o(eg,"TrainerPartyCompoundTemplate");let QA=eg;const Xe={ONE_WEAK_ONE_STRONG:new QA(new Rt(1,Ze.WEAK),new Rt(1,Ze.STRONG)),ONE_AVG:new Rt(1,Ze.AVERAGE),ONE_AVG_ONE_STRONG:new QA(new Rt(1,Ze.AVERAGE),new Rt(1,Ze.STRONG)),ONE_STRONG:new Rt(1,Ze.STRONG),ONE_STRONGER:new Rt(1,Ze.STRONGER),TWO_WEAKER:new Rt(2,Ze.WEAKER),TWO_WEAK:new Rt(2,Ze.WEAK),TWO_WEAK_ONE_AVG:new QA(new Rt(2,Ze.WEAK),new Rt(1,Ze.AVERAGE)),TWO_WEAK_SAME_ONE_AVG:new QA(new Rt(2,Ze.WEAK,!0),new Rt(1,Ze.AVERAGE)),TWO_WEAK_SAME_TWO_WEAK_SAME:new QA(new Rt(2,Ze.WEAK,!0),new Rt(2,Ze.WEAK,!0)),TWO_WEAK_ONE_STRONG:new QA(new Rt(2,Ze.WEAK),new Rt(1,Ze.STRONG)),TWO_AVG:new Rt(2,Ze.AVERAGE),TWO_AVG_ONE_STRONG:new QA(new Rt(2,Ze.AVERAGE),new Rt(1,Ze.STRONG)),TWO_AVG_SAME_ONE_AVG:new QA(new Rt(2,Ze.AVERAGE,!0),new Rt(1,Ze.AVERAGE)),TWO_AVG_SAME_ONE_STRONG:new QA(new Rt(2,Ze.AVERAGE,!0),new Rt(1,Ze.STRONG)),TWO_AVG_SAME_TWO_AVG_SAME:new QA(new Rt(2,Ze.AVERAGE,!0),new Rt(2,Ze.AVERAGE,!0)),TWO_STRONG:new Rt(2,Ze.STRONG),THREE_WEAK:new Rt(3,Ze.WEAK),THREE_WEAK_SAME:new Rt(3,Ze.WEAK,!0),THREE_AVG:new Rt(3,Ze.AVERAGE),THREE_AVG_SAME:new Rt(3,Ze.AVERAGE,!0),THREE_WEAK_BALANCED:new Rt(3,Ze.WEAK,!1,!0),FOUR_WEAKER:new Rt(4,Ze.WEAKER),FOUR_WEAKER_SAME:new Rt(4,Ze.WEAKER,!0),FOUR_WEAK:new Rt(4,Ze.WEAK),FOUR_WEAK_SAME:new Rt(4,Ze.WEAK,!0),FOUR_WEAK_BALANCED:new Rt(4,Ze.WEAK,!1,!0),FIVE_WEAKER:new Rt(5,Ze.WEAKER),FIVE_WEAK:new Rt(5,Ze.WEAK),FIVE_WEAK_BALANCED:new Rt(5,Ze.WEAK,!1,!0),SIX_WEAKER:new Rt(6,Ze.WEAKER),SIX_WEAKER_SAME:new Rt(6,Ze.WEAKER,!0),SIX_WEAK_SAME:new Rt(6,Ze.WEAK,!0),SIX_WEAK_BALANCED:new Rt(6,Ze.WEAK,!1,!0),GYM_LEADER_1:new QA(new Rt(1,Ze.AVERAGE),new Rt(1,Ze.STRONG)),GYM_LEADER_2:new QA(new Rt(1,Ze.AVERAGE),new Rt(1,Ze.STRONG),new Rt(1,Ze.STRONGER)),GYM_LEADER_3:new QA(new Rt(2,Ze.AVERAGE),new Rt(1,Ze.STRONG),new Rt(1,Ze.STRONGER)),GYM_LEADER_4:new QA(new Rt(3,Ze.AVERAGE),new Rt(1,Ze.STRONG),new Rt(1,Ze.STRONGER)),GYM_LEADER_5:new QA(new Rt(3,Ze.AVERAGE),new Rt(2,Ze.STRONG),new Rt(1,Ze.STRONGER)),ELITE_FOUR:new QA(new Rt(2,Ze.AVERAGE),new Rt(3,Ze.STRONG),new Rt(1,Ze.STRONGER)),CHAMPION:new QA(new Rt(4,Ze.STRONG),new Rt(2,Ze.STRONGER,!1,!0)),RIVAL:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE)),RIVAL_2:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE),new Rt(1,Ze.WEAK,!1,!0)),RIVAL_3:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE),new Rt(1,Ze.AVERAGE,!1,!0),new Rt(1,Ze.WEAK,!1,!0)),RIVAL_4:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE),new Rt(2,Ze.AVERAGE,!1,!0),new Rt(1,Ze.WEAK,!1,!0)),RIVAL_5:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE),new Rt(3,Ze.AVERAGE,!1,!0),new Rt(1,Ze.STRONG)),RIVAL_6:new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.AVERAGE),new Rt(3,Ze.AVERAGE,!1,!0),new Rt(1,Ze.STRONGER))};function WA(){var A;const E=(A=a.currentBattle)==null?void 0:A.waveIndex;return E<40?Xe.TWO_AVG:E<63?Xe.THREE_AVG:E<65?Xe.TWO_AVG_ONE_STRONG:E<112?Xe.GYM_LEADER_4:Xe.GYM_LEADER_5}o(WA,"getEvilGruntPartyTemplate");function vL(...E){const{currentBattle:A,gameMode:s}=a,R=s.getWaveForDifficulty((A==null?void 0:A.waveIndex)||to,!0),n=Math.ceil((R-20)/30);return E[Phaser.Math.Clamp(n,0,E.length-1)]}o(vL,"getWavePartyTemplate");function XZ(){return vL(Xe.GYM_LEADER_1,Xe.GYM_LEADER_2,Xe.GYM_LEADER_3,Xe.GYM_LEADER_4,Xe.GYM_LEADER_5)}o(XZ,"getGymLeaderPartyTemplate");var ye=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E))(ye||{});const QZ={[ye.COMMON]:[e.RATTATA,e.SPEAROW,e.EKANS,e.VILEPLUME,e.DIGLETT,e.GROWLITHE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.EXEGGCUTE,e.CUBONE,e.KOFFING,e.MAGIKARP,e.ZUBAT,e.ONIX,e.HOUNDOUR,e.MURKROW],[ye.UNCOMMON]:[e.ABRA,e.GASTLY,e.OMANYTE,e.KABUTO,e.PORYGON,e.MANKEY,e.SCYTHER,e.ELEKID,e.MAGBY,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GEODUDE,e.ALOLA_GRIMER,e.PALDEA_TAUROS],[ye.RARE]:[e.DRATINI,e.LARVITAR]},$Z={[ye.COMMON]:[e.DIGLETT,e.GROWLITHE,e.VULPIX,e.KOFFING,e.RHYHORN,e.SLUGMA,e.HOUNDOUR,e.POOCHYENA,e.TORKOAL,e.ZANGOOSE,e.SOLROCK,e.BALTOY,e.ROLYCOLY],[ye.UNCOMMON]:[e.MAGBY,e.TRAPINCH,e.LILEEP,e.ANORITH,e.GOLETT,e.FLETCHLING,e.SALANDIT,e.TURTONATOR,e.TOEDSCOOL,e.CAPSAKID,e.HISUI_GROWLITHE],[ye.RARE]:[e.CHARCADET,e.ARON]},JZ={[ye.COMMON]:[e.TENTACOOL,e.GRIMER,e.AZURILL,e.CHINCHOU,e.REMORAID,e.POOCHYENA,e.LOTAD,e.WINGULL,e.WAILMER,e.SEVIPER,e.BARBOACH,e.CORPHISH,e.SPHEAL,e.CLAMPERL],[ye.UNCOMMON]:[e.MANTYKE,e.HORSEA,e.FEEBAS,e.TYMPOLE,e.SKRELP,e.WIMPOD,e.DHELMISE,e.ARROKUDA,e.CLOBBOPUS,e.HISUI_QWILFISH,e.WIGLETT],[ye.RARE]:[e.BASCULEGION,e.DONDOZO]},zZ={[ye.COMMON]:[e.ZUBAT,e.MAGNEMITE,e.RHYHORN,e.TANGELA,e.LICKITUNG,e.MAGIKARP,e.YANMA,e.MURKROW,e.SWINUB,e.ELEKID,e.MAGBY,e.BRONZOR,e.SKORUPI],[ye.UNCOMMON]:[e.ABRA,e.GLIGAR,e.SNEASEL,e.DUSKULL,e.DRIFLOON,e.CRANIDOS,e.SHIELDON,e.ROTOM,e.HISUI_QWILFISH],[ye.RARE]:[e.SPIRITOMB,e.TEDDIURSA,e.HISUI_SNEASEL,e.HISUI_LILLIGANT]},jZ={[ye.COMMON]:[e.SNEASEL,e.SWINUB,e.SNORUNT,e.SNOVER,e.TIMBURR,e.TYMPOLE,e.SANDILE,e.DARUMAKA,e.VANILLITE,e.FOONGUS,e.FRILLISH,e.JOLTIK,e.FERROSEED,e.CUBCHOO,e.GALAR_DARUMAKA],[ye.UNCOMMON]:[e.SPHEAL,e.DRILBUR,e.SIGILYPH,e.YAMASK,e.ZORUA,e.TYNAMO,e.MIENFOO,e.GOLETT,e.PAWNIARD,e.VULLABY,e.DURANT,e.BERGMITE,e.EISCUE,e.ALOLA_SANDSHREW,e.HISUI_ZORUA],[ye.RARE]:[e.DEINO,e.FRIGIBAX,e.HISUI_BRAVIARY]},qZ={[ye.COMMON]:[e.MAGNEMITE,e.GRIMER,e.VOLTORB,e.PORYGON,e.BRONZOR,e.ROTOM,e.MUNNA,e.DWEBBLE,e.FERROSEED,e.ELGYEM],[ye.UNCOMMON]:[e.BELDUM,e.SIGILYPH,e.TIRTOUGA,e.ARCHEN,e.TYNAMO,e.GOLETT,e.BLIPBUG,e.VAROOM,e.ALOLA_GRIMER,e.HISUI_VOLTORB],[ye.RARE]:[e.ELEKID,e.MAGBY,e.PAWNIARD,e.DURALUDON]},e9={[ye.COMMON]:[e.ELECTRIKE,e.SKORUPI,e.PURRLOIN,e.FOONGUS,e.BUNNELBY,e.FLETCHLING,e.LITLEO,e.PANGORO,e.ESPURR,e.INKAY,e.CLAUNCHER,e.HELIOPTILE],[ye.UNCOMMON]:[e.HOUNDOUR,e.SNEASEL,e.LITWICK,e.HONEDGE,e.BINACLE,e.SKRELP,e.NOIBAT,e.PHANTUMP,e.PUMPKABOO],[ye.RARE]:[e.GOOMY,e.HISUI_AVALUGG]},t9={[ye.COMMON]:[e.ABRA,e.SLOWPOKE,e.MAGNEMITE,e.EXEGGUTOR,e.NATU,e.BALTOY,e.MIME_JR,e.ELGYEM,e.INKAY,e.BRUXISH,e.BLIPBUG,e.ALOLA_RAICHU],[ye.UNCOMMON]:[e.RALTS,e.MEDITITE,e.BELDUM,e.SOLOSIS,e.HATENNA,e.STANTLER,e.GIRAFARIG,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE],[ye.RARE]:[e.PORYGON,e.ARMAROUGE]},A9={[ye.COMMON]:[e.GASTLY,e.KOFFING,e.ZUBAT,e.VENONAT,e.STUNKY,e.CROAGUNK,e.VENIPEDE,e.SCRAGGY,e.MAREANIE,e.FOMANTIS,e.ALOLA_GRIMER],[ye.UNCOMMON]:[e.NIDORAN_F,e.SKORUPI,e.PAWNIARD,e.VULLABY,e.TOXEL,e.GLIMMET,e.PALDEA_WOOPER,e.GALAR_SLOWPOKE],[ye.RARE]:[e.SKRELP,e.HISUI_SNEASEL]},E9={[ye.COMMON]:[e.VULPIX,e.FEEBAS,e.MAWILE,e.FROSLASS,e.GOTHITA,e.FLABEBE,e.SALANDIT,e.TSAREENA,e.SINISTEA,e.HATENNA,e.INDEEDEE,e.GALAR_PONYTA],[ye.UNCOMMON]:[e.TOGEPI,e.VULLABY,e.MAREANIE,e.CUFANT,e.TINKATINK,e.ALOLA_VULPIX,e.GALAR_CORSOLA],[ye.RARE]:[e.APPLIN,e.HISUI_LILLIGANT]},s9={[ye.COMMON]:[e.MURKROW,e.SEEDOT,e.SABLEYE,e.CACNEA,e.STUNKY,e.SANDILE,e.INKAY,e.NYMBLE,e.MASCHIFF],[ye.UNCOMMON]:[e.UMBREON,e.CORPHISH,e.SNEASEL,e.ZORUA,e.IMPIDIMP,e.BOMBIRDIER,e.GALAR_ZIGZAGOON],[ye.RARE]:[e.DEINO,e.SPRIGATITO]},R9={[ye.COMMON]:[e.GROWLITHE,e.HOUNDOUR,e.NUMEL,e.TORKOAL,e.FLETCHLING,e.LITLEO,e.SIZZLIPEDE,e.ROLYCOLY,e.CAPSAKID],[ye.UNCOMMON]:[e.PONYTA,e.FLAREON,e.MAGBY,e.DARUMAKA,e.LITWICK,e.SALANDIT,e.TURTONATOR],[ye.RARE]:[e.LARVESTA,e.FUECOCO]},O9={[ye.COMMON]:[e.GRIMER,e.VENONAT,e.SEVIPER,e.STUNKY,e.FOONGUS,e.MAREANIE,e.TOXEL,e.GRAFAIAI,e.PALDEA_WOOPER],[ye.UNCOMMON]:[e.ZUBAT,e.GASTLY,e.SKRELP,e.OVERQWIL,e.ALOLA_GRIMER,e.GALAR_SLOWPOKE],[ye.RARE]:[e.GLIMMET,e.BULBASAUR]},n9={[ye.COMMON]:[e.IGGLYBUFF,e.AZURILL,e.COTTONEE,e.FLABEBE,e.KLEFKI,e.CUTIEFLY,e.HATENNA,e.TINKATINK],[ye.UNCOMMON]:[e.CLEFFA,e.TOGEPI,e.GARDEVOIR,e.SYLVEON,e.MIMIKYU,e.IMPIDIMP,e.ALOLA_VULPIX],[ye.RARE]:[e.GALAR_PONYTA,e.POPPLIO]},a9={[ye.COMMON]:[e.TYROGUE,e.SHROOMISH,e.MAKUHITA,e.RIOLU,e.CROAGUNK,e.SCRAGGY,e.MIENFOO,e.PASSIMIAN,e.PAWMI],[ye.UNCOMMON]:[e.MEDITITE,e.GALLADE,e.TIMBURR,e.HAWLUCHA,e.STUFFUL,e.FALINKS,e.FLAMIGO,e.PALDEA_TAUROS],[ye.RARE]:[e.JANGMO_O,e.QUAXLY]},i9={rocket:QZ,magma:$Z,aqua:JZ,galactic:zZ,plasma_zinzolin:jZ,plasma_colress:qZ,flare:e9,aether:t9,macro_cosmos:E9,skull:A9,star_dark:s9,star_fire:R9,star_poison:O9,star_fairy:n9,star_fighting:a9};var nr=(E=>(E[E.NO_TERA=0]="NO_TERA",E[E.INSTANT_TERA=1]="INSTANT_TERA",E[E.SMART_TERA=2]="SMART_TERA",E))(nr||{}),oe=(E=>(E[E.NONE=0]="NONE",E[E.TRAINER=1]="TRAINER",E[E.TRAINER_PARTNER=2]="TRAINER_PARTNER",E))(oe||{}),Et=(E=>(E[E.MYSTERIOUS_CHALLENGERS=0]="MYSTERIOUS_CHALLENGERS",E[E.MYSTERIOUS_CHEST=1]="MYSTERIOUS_CHEST",E[E.DARK_DEAL=2]="DARK_DEAL",E[E.FIGHT_OR_FLIGHT=3]="FIGHT_OR_FLIGHT",E[E.SLUMBERING_SNORLAX=4]="SLUMBERING_SNORLAX",E[E.TRAINING_SESSION=5]="TRAINING_SESSION",E[E.DEPARTMENT_STORE_SALE=6]="DEPARTMENT_STORE_SALE",E[E.SHADY_VITAMIN_DEALER=7]="SHADY_VITAMIN_DEALER",E[E.FIELD_TRIP=8]="FIELD_TRIP",E[E.SAFARI_ZONE=9]="SAFARI_ZONE",E[E.LOST_AT_SEA=10]="LOST_AT_SEA",E[E.FIERY_FALLOUT=11]="FIERY_FALLOUT",E[E.THE_STRONG_STUFF=12]="THE_STRONG_STUFF",E[E.THE_POKEMON_SALESMAN=13]="THE_POKEMON_SALESMAN",E[E.AN_OFFER_YOU_CANT_REFUSE=14]="AN_OFFER_YOU_CANT_REFUSE",E[E.DELIBIRDY=15]="DELIBIRDY",E[E.ABSOLUTE_AVARICE=16]="ABSOLUTE_AVARICE",E[E.A_TRAINERS_TEST=17]="A_TRAINERS_TEST",E[E.TRASH_TO_TREASURE=18]="TRASH_TO_TREASURE",E[E.BERRIES_ABOUND=19]="BERRIES_ABOUND",E[E.CLOWNING_AROUND=20]="CLOWNING_AROUND",E[E.PART_TIMER=21]="PART_TIMER",E[E.DANCING_LESSONS=22]="DANCING_LESSONS",E[E.WEIRD_DREAM=23]="WEIRD_DREAM",E[E.THE_WINSTRATE_CHALLENGE=24]="THE_WINSTRATE_CHALLENGE",E[E.TELEPORTING_HIJINKS=25]="TELEPORTING_HIJINKS",E[E.BUG_TYPE_SUPERFAN=26]="BUG_TYPE_SUPERFAN",E[E.FUN_AND_GAMES=27]="FUN_AND_GAMES",E[E.UNCOMMON_BREED=28]="UNCOMMON_BREED",E[E.GLOBAL_TRADE_SYSTEM=29]="GLOBAL_TRADE_SYSTEM",E[E.THE_EXPERT_POKEMON_BREEDER=30]="THE_EXPERT_POKEMON_BREEDER",E))(Et||{}),zt=(E=>(E[E.COMMON=66]="COMMON",E[E.GREAT=40]="GREAT",E[E.ULTRA=19]="ULTRA",E[E.ROGUE=3]="ROGUE",E[E.MASTER=0]="MASTER",E))(zt||{});const jE=[{name:"Winter Holiday Update",eventType:0,shinyMultiplier:2,upgradeUnlockedVouchers:!0,startDate:new Date(Date.UTC(2024,11,21,0)),endDate:new Date(Date.UTC(2025,0,4,0)),bannerKey:"winter_holidays2024-event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.GIMMIGHOUL,blockEvolution:!0},{species:e.DELIBIRD},{species:e.STANTLER},{species:e.CYNDAQUIL},{species:e.PIPLUP},{species:e.CHESPIN},{species:e.BALTOY},{species:e.SNOVER},{species:e.CHINGLING},{species:e.LITWICK},{species:e.CUBCHOO},{species:e.SWIRLIX},{species:e.AMAURA},{species:e.MUDBRAY},{species:e.ROLYCOLY},{species:e.MILCERY},{species:e.SMOLIV},{species:e.ALOLA_VULPIX},{species:e.GALAR_DARUMAKA},{species:e.IRON_BUNDLE}],delibirdyBuff:["CATCHING_CHARM","SHINY_CHARM","ABILITY_CHARM","EXP_CHARM","SUPER_EXP_CHARM","HEALING_CHARM"],weather:[{weatherType:Oe.SNOW,weight:1}],mysteryEncounterTierChanges:[{mysteryEncounter:Et.DELIBIRDY,tier:zt.COMMON},{mysteryEncounter:Et.PART_TIMER,disable:!0},{mysteryEncounter:Et.AN_OFFER_YOU_CANT_REFUSE,disable:!0},{mysteryEncounter:Et.FIELD_TRIP,disable:!0},{mysteryEncounter:Et.DEPARTMENT_STORE_SALE,disable:!0}],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Year of the Snake",eventType:2,luckBoost:1,startDate:new Date(Date.UTC(2025,0,29,0)),endDate:new Date(Date.UTC(2025,1,3,0)),bannerKey:"yearofthesnakeevent",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.EKANS},{species:e.ONIX},{species:e.DRATINI},{species:e.CLEFFA},{species:e.UMBREON},{species:e.DUNSPARCE},{species:e.TEDDIURSA},{species:e.SEVIPER},{species:e.LUNATONE},{species:e.CHINGLING},{species:e.SNIVY},{species:e.DARUMAKA},{species:e.DRAMPA},{species:e.SILICOBRA},{species:e.BLOODMOON_URSALUNA}],luckBoostedSpecies:[e.EKANS,e.ARBOK,e.ONIX,e.STEELIX,e.DRATINI,e.DRAGONAIR,e.DRAGONITE,e.CLEFFA,e.CLEFAIRY,e.CLEFABLE,e.UMBREON,e.DUNSPARCE,e.DUDUNSPARCE,e.TEDDIURSA,e.URSARING,e.URSALUNA,e.SEVIPER,e.LUNATONE,e.RAYQUAZA,e.CHINGLING,e.CHIMECHO,e.CRESSELIA,e.DARKRAI,e.SNIVY,e.SERVINE,e.SERPERIOR,e.DARUMAKA,e.DARMANITAN,e.ZYGARDE,e.DRAMPA,e.LUNALA,e.BLACEPHALON,e.SILICOBRA,e.SANDACONDA,e.ROARING_MOON,e.BLOODMOON_URSALUNA],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"Valentine",eventType:0,startDate:new Date(Date.UTC(2025,1,10)),endDate:new Date(Date.UTC(2025,1,21)),boostFusions:!0,shinyMultiplier:2,bannerKey:"valentines2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.NIDORAN_F},{species:e.NIDORAN_M},{species:e.IGGLYBUFF},{species:e.SMOOCHUM},{species:e.VOLBEAT},{species:e.ILLUMISE},{species:e.ROSELIA},{species:e.LUVDISC},{species:e.WOOBAT},{species:e.FRILLISH},{species:e.ALOMOMOLA},{species:e.FURFROU,formIndex:1},{species:e.ESPURR},{species:e.SPRITZEE},{species:e.SWIRLIX},{species:e.APPLIN},{species:e.MILCERY},{species:e.INDEEDEE},{species:e.TANDEMAUS},{species:e.ENAMORUS}],luckBoostedSpecies:[e.LUVDISC],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"PKMNDAY2025",eventType:2,startDate:new Date(Date.UTC(2025,1,27)),endDate:new Date(Date.UTC(2025,2,4)),classicFriendshipMultiplier:4,bannerKey:"pkmnday2025event",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","pt-BR","zh-CN"],eventEncounters:[{species:e.PIKACHU,formIndex:1,blockEvolution:!0},{species:e.EEVEE,formIndex:1,blockEvolution:!0},{species:e.CHIKORITA},{species:e.TOTODILE},{species:e.TEPIG}],luckBoostedSpecies:[e.PICHU,e.PIKACHU,e.RAICHU,e.ALOLA_RAICHU,e.PSYDUCK,e.GOLDUCK,e.EEVEE,e.FLAREON,e.JOLTEON,e.VAPOREON,e.ESPEON,e.UMBREON,e.LEAFEON,e.GLACEON,e.SYLVEON,e.CHIKORITA,e.BAYLEEF,e.MEGANIUM,e.TOTODILE,e.CROCONAW,e.FERALIGATR,e.TEPIG,e.PIGNITE,e.EMBOAR,e.ZYGARDE,e.ETERNAL_FLOETTE],classicWaveRewards:[{wave:8,type:"SHINY_CHARM"},{wave:8,type:"ABILITY_CHARM"},{wave:8,type:"CATCHING_CHARM"},{wave:25,type:"SHINY_CHARM"}]},{name:"April Fools 2025",eventType:2,startDate:new Date(Date.UTC(2025,2,31)),endDate:new Date(Date.UTC(2025,3,3)),bannerKey:"aprf25",scale:.21,availableLangs:["en","de","it","fr","ja","ko","es-ES","es-MX","pt-BR","zh-CN"],trainerShinyChance:13107,music:[["title","title_afd"],["battle_rival_3","battle_rival_3_afd"]],dailyRunChallenges:[{challenge:ut.INVERSE_BATTLE,value:1}]}],tg=class tg{isActive(A){return A.startDate<new Date&&new Date<A.endDate}activeEvent(){return jE.find(A=>this.isActive(A))}isEventActive(){return jE.some(A=>this.isActive(A))}activeEventHasBanner(){return jE.filter(s=>this.isActive(s)&&s.hasOwnProperty("bannerKey")).length>0}getShinyMultiplier(){let A=1;const s=jE.filter(R=>R.eventType===0&&this.isActive(R));for(const R of s)A*=R.shinyMultiplier??1;return A}getEventBannerFilename(){var A;return((A=jE.find(s=>this.isActive(s)))==null?void 0:A.bannerKey)??""}getEventBannerLangs(){var s;const A=[];return A.push(...(s=jE.find(R=>this.isActive(R)&&!Pe(R.availableLangs)))==null?void 0:s.availableLangs),A}getEventEncounters(){const A=[];return jE.filter(s=>this.isActive(s)).map(s=>{Pe(s.eventEncounters)||A.push(...s.eventEncounters)}),A}getClassicFriendshipMultiplier(){let A=HZ;const s=jE.filter(R=>this.isActive(R));for(const R of s)!Pe(R.classicFriendshipMultiplier)&&R.classicFriendshipMultiplier>A&&(A=R.classicFriendshipMultiplier);return A}getUpgradeUnlockedVouchers(){return jE.some(A=>this.isActive(A)&&(A.upgradeUnlockedVouchers??!1))}getDelibirdyBuff(){const A=[];return jE.filter(s=>this.isActive(s)).map(s=>{Pe(s.delibirdyBuff)||A.push(...s.delibirdyBuff)}),A}getWeather(){const A=[];return jE.filter(s=>this.isActive(s)).map(s=>{Pe(s.weather)||A.push(...s.weather)}),A}getAllMysteryEncounterChanges(){const A=[];return jE.filter(s=>this.isActive(s)).map(s=>{Pe(s.mysteryEncounterTierChanges)||A.push(...s.mysteryEncounterTierChanges)}),A}getEventMysteryEncountersDisabled(){const A=[];return jE.filter(s=>this.isActive(s)&&!Pe(s.mysteryEncounterTierChanges)).map(s=>{var R;(R=s.mysteryEncounterTierChanges)==null||R.map(n=>{n.disable&&A.push(n.mysteryEncounter)})}),A}getMysteryEncounterTierForEvent(A,s){let R=s;return jE.filter(n=>this.isActive(n)&&!Pe(n.mysteryEncounterTierChanges)).map(n=>{var I;(I=n.mysteryEncounterTierChanges)==null||I.map(r=>{r.mysteryEncounter===A&&(R=r.tier??s)})}),R}getEventLuckBoost(){let A=0;const s=jE.filter(R=>this.isActive(R)&&!Pe(R.luckBoost));for(const R of s)A+=R.luckBoost;return A}getEventLuckBoostedSpecies(){const A=[];return jE.filter(s=>this.isActive(s)).map(s=>{Pe(s.luckBoostedSpecies)||A.push(...s.luckBoostedSpecies.filter(R=>!A.includes(R)))}),A}areFusionsBoosted(){return jE.some(A=>this.isActive(A)&&A.boostFusions)}getFixedBattleEventRewards(A){const s=[];return jE.filter(R=>this.isActive(R)&&!Pe(R.classicWaveRewards)).map(R=>{s.push(...R.classicWaveRewards.filter(n=>n.wave===A).map(n=>n.type))}),s}getClassicTrainerShinyChance(){let A=0;return jE.filter(R=>this.isActive(R)&&!Pe(R.trainerShinyChance)).map(R=>A+=R.trainerShinyChance),A}getEventBgmReplacement(A){let s=A;return jE.map(R=>{this.isActive(R)&&!Pe(R.music)&&R.music.map(n=>{n[0]===A&&(`${R.name}${n[0]}${n[1]}`,s=n[1])})}),s}startEventChallenges(){var s;const A=(s=this.activeEvent())==null?void 0:s.dailyRunChallenges;A==null||A.forEach(R=>a.gameMode.setChallengeValue(R.challenge,R.value))}};o(tg,"TimedEventManager");let JC=tg;const Ag=class Ag extends Phaser.GameObjects.Container{constructor(A,s,R){super(a,A,s),this.availableWidth=a.scaledCanvas.width,this.event=R,this.setVisible(!1)}setWidth(A){var s;if(A!==this.availableWidth){this.availableWidth=A;const R=this.availableWidth/2+(((s=this.event)==null?void 0:s.xOffset)??0);this.banner&&(this.banner.x=R),this.eventTimerText&&(this.eventTimerText.x=R)}}setup(){var s;const A=u.resolvedLanguage;if((s=this.event)!=null&&s.bannerKey){let R=this.event.bannerKey;A&&this.event.availableLangs&&this.event.availableLangs.length>0&&(this.event.availableLangs.includes(A)?R+="-"+A:R+="-en"),this.event.bannerKey;const n=5,I=this.event.eventType!==1,r=a.game.canvas.height/6-n-(I?10:0)-(this.event.yOffset??0);this.banner=new Phaser.GameObjects.Image(a,this.availableWidth/2,r-n,R),this.banner.setName("img-event-banner"),this.banner.setOrigin(.5,1),this.banner.setScale(this.event.scale??.18),I&&(this.eventTimerText=Se(this.banner.x,this.banner.y+2,this.timeToGo(this.event.endDate),k.WINDOW),this.eventTimerText.setName("text-event-timer"),this.eventTimerText.setScale(.15),this.eventTimerText.setOrigin(.5,0),this.add(this.eventTimerText)),this.add(this.banner)}}show(){this.setVisible(!0),this.updateCountdown(),this.eventTimer=setInterval(()=>{this.updateCountdown()},1e3)}clear(){this.setVisible(!1),this.eventTimer&&clearInterval(this.eventTimer),this.eventTimer=null}timeToGo(A){function s(l){return(l<10?"0":"")+l}o(s,"z");const R=new Date;let n=Math.abs(A.getTime()-R.getTime());n=Math.abs(n);const I=n/864e5|0,r=n%864e5/36e5|0,L=n%36e5/6e4|0,N=Math.round(n%6e4/1e3);return u.t("menu:eventTimer",{days:s(I),hours:s(r),mins:s(L),secs:s(N)})}updateCountdown(){this.event&&this.event.eventType!==1&&this.eventTimerText.setText(this.timeToGo(this.event.endDate))}};o(Ag,"TimedEventDisplay");let ch=Ag;const EE=new JC,$b=460,I9=100,Eg=class Eg{constructor(A=nr.NO_TERA){this.teraMode=nr.NO_TERA,this.teraMode=A,this.instantTeras=[]}canTerastallize(){return this.teraMode!==nr.NO_TERA}setInstantTera(A){this.teraMode=nr.INSTANT_TERA,this.instantTeras.push(A)}};o(Eg,"TrainerAI");let hh=Eg;const C0=class C0{constructor(A,s){this.hasGenders=!1,this.hasDouble=!1,this.hasCharSprite=!1,this.doubleOnly=!1,this.moneyMultiplier=1,this.isBoss=!1,this.hasStaticParty=!1,this.useSameSeedForAllMembers=!1,this.genAIFuncs=[],this.modifierRewardFuncs=[],this.eventRewardFuncs=[],this.partyMemberFuncs={},this.hasVoucher=!1,this.encounterMessages=[],this.victoryMessages=[],this.defeatMessages=[],this.trainerType=A,this.trainerAI=new hh,this.name=aa(c[this.getDerivedType()]),this.battleBgm="battle_trainer",this.mixedBattleBgm="battle_trainer",this.victoryBgm="victory_trainer",this.partyTemplates=[Xe.TWO_AVG],this.speciesFilter=R=>(s||!R.legendary&&!R.subLegendary&&!R.mythical)&&!R.isTrainerForbidden()}getKey(){return c[this.getDerivedType()].toString().toLowerCase()}getSpriteKey(A,s=!1){let R=this.getKey();return this.hasGenders&&(R+=`_${A?"f":"m"}`),this.trainerTypeDouble&&A&&s&&(R=c[this.getDerivedType(this.trainerTypeDouble)].toString().toLowerCase()),R}setName(A){return A==="Finn"&&(EO()||sO(),A==="Finn"&&(A=u.t("trainerNames:rival"))),this.name=A,this}setHasVoucher(A){this.hasVoucher=A}setTitle(A){return EO()||sO(),A=A.toLowerCase().replace(/\s/g,"_"),this.title=u.t(`titles:${A}`),this}getDerivedType(A=null){let s=A||this.trainerType;switch(s){case c.RIVAL_2:case c.RIVAL_3:case c.RIVAL_4:case c.RIVAL_5:case c.RIVAL_6:s=c.RIVAL;break;case c.LANCE_CHAMPION:s=c.LANCE;break;case c.LARRY_ELITE:s=c.LARRY;break;case c.ROCKET_BOSS_GIOVANNI_1:case c.ROCKET_BOSS_GIOVANNI_2:s=c.GIOVANNI;break;case c.MAXIE_2:s=c.MAXIE;break;case c.ARCHIE_2:s=c.ARCHIE;break;case c.CYRUS_2:s=c.CYRUS;break;case c.GHETSIS_2:s=c.GHETSIS;break;case c.LYSANDRE_2:s=c.LYSANDRE;break;case c.LUSAMINE_2:s=c.LUSAMINE;break;case c.GUZMA_2:s=c.GUZMA;break;case c.ROSE_2:s=c.ROSE;break;case c.PENNY_2:s=c.PENNY;break;case c.MARNIE_ELITE:s=c.MARNIE;break;case c.NESSA_ELITE:s=c.NESSA;break;case c.BEA_ELITE:s=c.BEA;break;case c.ALLISTER_ELITE:s=c.ALLISTER;break;case c.RAIHAN_ELITE:s=c.RAIHAN;break}return s}setHasGenders(A,s){return A==="Ivy"?(EO()||sO(),this.nameFemale=u.t("trainerNames:rival_female")):this.nameFemale=A,this.hasGenders=!0,s&&(this.femaleEncounterBgm=typeof s=="number"?c[s].toString().replace(/_/g," ").toLowerCase():s),this}setHasDouble(A,s){return this.hasDouble=!0,this.nameDouble=A,s&&(this.doubleEncounterBgm=typeof s=="number"?c[s].toString().replace(/\_/g," ").toLowerCase():s),this}setDoubleTrainerType(A){return this.trainerTypeDouble=A,this.setDoubleMessages(this.nameDouble),this}setDoubleMessages(A){Ul[A]&&(this.doubleEncounterMessages=Ul[A].encounter,this.doubleVictoryMessages=Ul[A].victory,this.doubleDefeatMessages=Ul[A].defeat)}setDoubleTitle(A){return EO()||sO(),A=A.toLowerCase().replace(/\s/g,"_"),this.titleDouble=u.t(`titles:${A}`),this}setHasCharSprite(){return this.hasCharSprite=!0,this}setDoubleOnly(){return this.doubleOnly=!0,this}setMoneyMultiplier(A){return this.moneyMultiplier=A,this}setBoss(){return this.isBoss=!0,this}setStaticParty(){return this.hasStaticParty=!0,this}setUseSameSeedForAllMembers(){return this.useSameSeedForAllMembers=!0,this}setMixedBattleBgm(A){return this.mixedBattleBgm=A,this}setBattleBgm(A){return this.battleBgm=A,this}setEncounterBgm(A){return this.encounterBgm=typeof A=="number"?c[A].toString().toLowerCase():A,this}setVictoryBgm(A){return this.victoryBgm=A,this}setPartyTemplates(...A){return this.partyTemplates=A,this}setPartyTemplateFunc(A){return this.partyTemplateFunc=A,this}setPartyMemberFunc(A,s){return this.partyMemberFuncs[A]=s,this}setSpeciesPools(A){return this.speciesPools=Array.isArray(A)?{[ye.COMMON]:A}:A,this}setSpeciesFilter(A,s){const R=this.speciesFilter;return this.speciesFilter=s?A:n=>A(n)&&R(n),this}setSpecialtyType(A){return this.specialtyType=A,this}setGenModifiersFunc(A){return this.genModifiersFunc=A,this}setRandomTeraModifiers(A,s){return this.genAIFuncs.push(R=>{const n=!this.hasSpecialtyType()||this.specialtyType===i.BUG,I=new Array(R.length).fill(null).map((L,N)=>N).filter(L=>n||R[L].species.speciesId!==e.SHEDINJA),r=Pe(s)?-1:Phaser.Math.Wrap(s,0,R.length);for(let L=0;L<Math.min(A(),R.length);L++){const N=I.indexOf(r)>-1?r:eE(I);I.splice(I.indexOf(N),1),this.hasSpecialtyType()&&(R[N].teraType=this.specialtyType),this.trainerAI.setInstantTera(N)}}),this}setInstantTera(A){return this.trainerAI.setInstantTera(A),this}setEventModifierRewardFuncs(A){return this.eventRewardFuncs=EE.getFixedBattleEventRewards(A).map(s=>j[s]),this}setModifierRewardFuncs(...A){return this.modifierRewardFuncs=A.map(s=>()=>{const R=s(),n=R();return n.withIdFromFunc(R),n}),this}initForEvilTeamAdmin(A,s,R,n){EO()||sO(),Pe(n)||this.setSpecialtyType(n),this.setPartyTemplates(Xe.RIVAL_5),this.speciesPools=i9[s],R.forEach((r,L)=>{Array.isArray(r)||(r=[r]),this.setPartyMemberFunc(-(L+1),Ie(r))});const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${I}`),this.setHasVoucher(!1),this.setTitle(A),this.setMoneyMultiplier(1.5),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForStatTrainer(A=!1){EO()||sO(),this.setPartyTemplates(Xe.ELITE_FOUR);const s=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${s}`),this.setMoneyMultiplier(2),this.setBoss(),this.setStaticParty(),this.setBattleBgm("battle_trainer"),this.setVictoryBgm("victory_trainer"),this}initForEvilTeamLeader(A,s,R=!1,n){EO()||sO(),R?this.setPartyTemplates(Xe.ELITE_FOUR):this.setPartyTemplates(Xe.RIVAL_5),s.forEach((r,L)=>{Array.isArray(r)||(r=[r]),this.setPartyMemberFunc(-(L+1),Ie(r))}),Pe(n)||(this.setSpeciesFilter(r=>r.isOfType(n)),this.setSpecialtyType(n));const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${I}`),this.setTitle(A),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_plasma_boss"),this.setVictoryBgm("victory_team_plasma"),this}initForGymLeader(A,s,R,n=!1,I){EO()||sO(),this.setPartyTemplateFunc(XZ),A.forEach((L,N)=>{Array.isArray(L)||(L=[L]),this.setPartyMemberFunc(-(N+1),Ie(L))}),this.setSpeciesFilter(L=>L.isOfType(R)),this.setSpecialtyType(R);const r=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${r}`),this.setTitle("gym_leader"),s||this.setTitle("gym_leader_female"),this.setMoneyMultiplier(2.5),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_gym"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>n||a.currentBattle.waveIndex>=I9?1:0,I),this}initForEliteFour(A,s,R,n){EO()||sO(),this.setPartyTemplates(Xe.ELITE_FOUR),A.forEach((r,L)=>{Array.isArray(r)||(r=[r]),this.setPartyMemberFunc(-(L+1),Ie(r))}),Pe(R)?this.setSpeciesFilter(r=>r.baseTotal>=$b):(this.setSpeciesFilter(r=>r.isOfType(R)&&r.baseTotal>=$b),this.setSpecialtyType(R));const I=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${I}`),this.setTitle("elite_four"),s||this.setTitle("elite_four_female"),this.setMoneyMultiplier(3.25),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_unova_elite"),this.setVictoryBgm("victory_gym"),this.setRandomTeraModifiers(()=>1,n),this}initForChampion(A){EO()||sO(),this.setPartyTemplates(Xe.CHAMPION);const s=this.name.toLowerCase().replace(/\s/g,"_");return this.name=u.t(`trainerNames:${s}`),this.setTitle("champion"),A||this.setTitle("champion_female"),this.setMoneyMultiplier(10),this.setBoss(),this.setStaticParty(),this.setHasVoucher(!0),this.setBattleBgm("battle_champion_alder"),this.setVictoryBgm("victory_champion"),this}setLocalizedName(A){return EO()||sO(),this.name=u.t(`trainerNames:${A.toLowerCase().replace(/\s/g,"_")}`),this}getTitle(A=oe.NONE,s){const R=this.name;if(!A&&s===LA.DOUBLE&&this.nameDouble)return this.nameDouble;if(this.hasGenders){if(this.nameFemale){if(s===LA.FEMALE||s===LA.DOUBLE&&A===oe.TRAINER_PARTNER)return this.nameFemale}else if(s&&(EO()||sO(),u.exists(`trainerClasses:${this.name.toLowerCase()}`)))return R+"_female"}return R}loadAssets(A){return new Promise(s=>{const R=A===LA.DOUBLE,n=this.getSpriteKey(A===LA.FEMALE,!1),I=this.getSpriteKey(!0,!0);a.loadAtlas(n,"trainer"),R&&a.loadAtlas(I,"trainer"),a.load.once(Phaser.Loader.Events.COMPLETE,()=>{const r=console.warn;console.warn=()=>{};const L=a.anims.generateFrameNames(n,{zeroPad:4,suffix:".png",start:1,end:128}),N=R?a.anims.generateFrameNames(I,{zeroPad:4,suffix:".png",start:1,end:128}):"";console.warn=r,a.anims.exists(n)||a.anims.create({key:n,frames:L,frameRate:24,repeat:-1}),R&&!a.anims.exists(I)&&a.anims.create({key:I,frames:N,frameRate:24,repeat:-1}),s()}),a.load.isLoading()||a.load.start()})}hasSpecialtyType(){return!Pe(this.specialtyType)&&this.specialtyType!==i.UNKNOWN}clone(){var s,R,n,I,r,L,N,l,C;let A=new C0(this.trainerType);return A=this.trainerTypeDouble?A.setDoubleTrainerType(this.trainerTypeDouble):A,A=this.name?A.setName(this.name):A,A=this.hasGenders?A.setHasGenders(this.nameFemale,this.femaleEncounterBgm):A,A=this.hasDouble?A.setHasDouble(this.nameDouble,this.doubleEncounterBgm):A,A=this.title?A.setTitle(this.title):A,A=this.titleDouble?A.setDoubleTitle(this.titleDouble):A,A=this.hasCharSprite?A.setHasCharSprite():A,A=this.doubleOnly?A.setDoubleOnly():A,A=this.moneyMultiplier?A.setMoneyMultiplier(this.moneyMultiplier):A,A=this.isBoss?A.setBoss():A,A=this.hasStaticParty?A.setStaticParty():A,A=this.useSameSeedForAllMembers?A.setUseSameSeedForAllMembers():A,A=this.battleBgm?A.setBattleBgm(this.battleBgm):A,A=this.encounterBgm?A.setEncounterBgm(this.encounterBgm):A,A=this.victoryBgm?A.setVictoryBgm(this.victoryBgm):A,A=this.genModifiersFunc?A.setGenModifiersFunc(this.genModifiersFunc):A,this.modifierRewardFuncs&&(A.modifierRewardFuncs=this.modifierRewardFuncs.slice(0)),this.partyTemplates&&(A.partyTemplates=this.partyTemplates.slice(0)),A=this.partyTemplateFunc?A.setPartyTemplateFunc(this.partyTemplateFunc):A,this.partyMemberFuncs&&Object.keys(this.partyMemberFuncs).forEach(U=>{A=A.setPartyMemberFunc(Number.parseInt(U,10),this.partyMemberFuncs[U])}),A=this.speciesPools?A.setSpeciesPools(this.speciesPools):A,A=this.speciesFilter?A.setSpeciesFilter(this.speciesFilter):A,A.specialtyType=this.specialtyType,A.encounterMessages=(s=this.encounterMessages)==null?void 0:s.slice(0),A.victoryMessages=(R=this.victoryMessages)==null?void 0:R.slice(0),A.defeatMessages=(n=this.defeatMessages)==null?void 0:n.slice(0),A.femaleEncounterMessages=(I=this.femaleEncounterMessages)==null?void 0:I.slice(0),A.femaleVictoryMessages=(r=this.femaleVictoryMessages)==null?void 0:r.slice(0),A.femaleDefeatMessages=(L=this.femaleDefeatMessages)==null?void 0:L.slice(0),A.doubleEncounterMessages=(N=this.doubleEncounterMessages)==null?void 0:N.slice(0),A.doubleVictoryMessages=(l=this.doubleVictoryMessages)==null?void 0:l.slice(0),A.doubleDefeatMessages=(C=this.doubleDefeatMessages)==null?void 0:C.slice(0),A}};o(C0,"TrainerConfig");let Ce=C0,ue=0;function Ie(E,A=oe.TRAINER,s=!1,R){return(n,I)=>{let r=eE(E);return s||(r=$e(r).getTrainerSpeciesForLevel(n,!0,I,a.currentBattle.waveIndex)),a.addEnemyPokemon($e(r),n,A,void 0,!1,void 0,R)}}o(Ie,"getRandomPartyMemberFunc");function gL(E,A=oe.TRAINER,s,R){const n=o(I=>!I.legendary&&!I.subLegendary&&!I.mythical&&!I.isTrainerForbidden()&&E(I),"speciesFilter");return(I,r)=>{const L=a.currentBattle.waveIndex,N=$e(a.randomSpecies(L,I,!1,n).getTrainerSpeciesForLevel(I,!0,r,L));return a.addEnemyPokemon(N,I,A,void 0,!1,void 0,R)}}o(gL,"getSpeciesFilterRandomPartyMemberFunc");const tE={[c.UNKNOWN]:new Ce(0).setHasGenders(),[c.ACE_TRAINER]:new Ce(++ue).setHasGenders("Ace Trainer Female").setHasDouble("Ace Duo").setMoneyMultiplier(2.25).setEncounterBgm(c.ACE_TRAINER).setPartyTemplateFunc(()=>vL(Xe.THREE_WEAK_BALANCED,Xe.FOUR_WEAK_BALANCED,Xe.FIVE_WEAK_BALANCED,Xe.SIX_WEAK_BALANCED)),[c.ARTIST]:new Ce(++ue).setEncounterBgm(c.RICH).setPartyTemplates(Xe.ONE_STRONG,Xe.TWO_AVG,Xe.THREE_AVG).setSpeciesPools([e.SMEARGLE]),[c.BACKERS]:new Ce(++ue).setHasGenders("Backers").setDoubleOnly().setEncounterBgm(c.CYCLIST),[c.BACKPACKER]:new Ce(++ue).setHasGenders("Backpacker Female").setHasDouble("Backpackers").setSpeciesFilter(E=>E.isOfType(i.FLYING)||E.isOfType(i.ROCK)).setEncounterBgm(c.BACKPACKER).setPartyTemplates(Xe.ONE_STRONG,Xe.ONE_WEAK_ONE_STRONG,Xe.ONE_AVG_ONE_STRONG).setSpeciesPools({[ye.COMMON]:[e.RHYHORN,e.AIPOM,e.MAKUHITA,e.MAWILE,e.NUMEL,e.LILLIPUP,e.SANDILE,e.WOOLOO],[ye.UNCOMMON]:[e.GIRAFARIG,e.ZANGOOSE,e.SEVIPER,e.CUBCHOO,e.PANCHAM,e.SKIDDO,e.MUDBRAY],[ye.RARE]:[e.TAUROS,e.STANTLER,e.DARUMAKA,e.BOUFFALANT,e.DEERLING,e.IMPIDIMP],[ye.SUPER_RARE]:[e.GALAR_DARUMAKA,e.TEDDIURSA]}),[c.BAKER]:new Ce(++ue).setEncounterBgm(c.CLERK).setMoneyMultiplier(1.35).setSpeciesFilter(E=>[E.ability1,E.ability2,E.abilityHidden].some(A=>!!A&&[O.WHITE_SMOKE,O.GLUTTONY,O.HONEY_GATHER,O.HARVEST,O.CHEEK_POUCH,O.SWEET_VEIL,O.RIPEN,O.PURIFYING_SALT,O.WELL_BAKED_BODY,O.SUPERSWEET_SYRUP,O.HOSPITALITY].includes(A))||E.getLevelMoves().some(A=>[t.SOFT_BOILED,t.SPORE,t.MILK_DRINK,t.OVERHEAT,t.TEATIME].includes(A[1]))),[c.BEAUTY]:new Ce(++ue).setMoneyMultiplier(1.55).setEncounterBgm(c.PARASOL_LADY).setPartyTemplates(Xe.TWO_AVG_SAME_ONE_AVG,Xe.TWO_AVG_SAME_ONE_STRONG,Xe.THREE_AVG_SAME,Xe.THREE_AVG,Xe.FOUR_WEAK,Xe.ONE_STRONG).setSpeciesPools({[ye.COMMON]:[e.MEOWTH,e.GOLDEEN,e.MAREEP,e.MARILL,e.SKITTY,e.GLAMEOW,e.PURRLOIN],[ye.UNCOMMON]:[e.SMOOCHUM,e.ROSELIA,e.LUVDISC,e.BLITZLE,e.SEWADDLE,e.PETILIL,e.MINCCINO,e.GOTHITA,e.SPRITZEE,e.FLITTLE],[ye.RARE]:[e.FEEBAS,e.FURFROU,e.SALANDIT,e.BRUXISH,e.HATENNA,e.SNOM,e.ALOLA_VULPIX],[ye.SUPER_RARE]:[e.CLAMPERL,e.AMAURA,e.SYLVEON,e.GOOMY,e.POPPLIO]}),[c.BIKER]:new Ce(++ue).setMoneyMultiplier(1.4).setEncounterBgm(c.ROUGHNECK).setSpeciesPools({[ye.COMMON]:[e.EKANS,e.KOFFING,e.CROAGUNK,e.VENIPEDE,e.SCRAGGY],[ye.UNCOMMON]:[e.GRIMER,e.VOLTORB,e.TEDDIURSA,e.MAGBY,e.SKORUPI,e.SANDILE,e.PAWNIARD,e.SHROODLE],[ye.RARE]:[e.VAROOM,e.CYCLIZAR]}),[c.BLACK_BELT]:new Ce(++ue).setHasGenders("Battle Girl",c.PSYCHIC).setHasDouble("Crush Kin").setEncounterBgm(c.ROUGHNECK).setSpecialtyType(i.FIGHTING).setPartyTemplates(Xe.TWO_WEAK_ONE_AVG,Xe.TWO_WEAK_ONE_AVG,Xe.TWO_AVG,Xe.TWO_AVG,Xe.TWO_WEAK_ONE_STRONG,Xe.THREE_AVG,Xe.TWO_AVG_ONE_STRONG).setSpeciesPools({[ye.COMMON]:[e.NIDORAN_F,e.NIDORAN_M,e.MACHOP,e.MAKUHITA,e.MEDITITE,e.CROAGUNK,e.TIMBURR],[ye.UNCOMMON]:[e.MANKEY,e.POLIWRATH,e.TYROGUE,e.BRELOOM,e.SCRAGGY,e.MIENFOO,e.PANCHAM,e.STUFFUL,e.CRABRAWLER],[ye.RARE]:[e.HERACROSS,e.RIOLU,e.THROH,e.SAWK,e.PASSIMIAN,e.CLOBBOPUS],[ye.SUPER_RARE]:[e.HITMONTOP,e.INFERNAPE,e.GALLADE,e.HAWLUCHA,e.HAKAMO_O],[ye.ULTRA_RARE]:[e.KUBFU]}),[c.BREEDER]:new Ce(++ue).setMoneyMultiplier(1.325).setEncounterBgm(c.POKEFAN).setHasGenders("Breeder Female").setHasDouble("Breeders").setPartyTemplateFunc(()=>vL(Xe.FOUR_WEAKER,Xe.FIVE_WEAKER,Xe.SIX_WEAKER)).setSpeciesFilter(E=>E.baseTotal<450),[c.CLERK]:new Ce(++ue).setHasGenders("Clerk Female").setHasDouble("Colleagues").setEncounterBgm(c.CLERK).setPartyTemplates(Xe.TWO_WEAK,Xe.THREE_WEAK,Xe.ONE_AVG,Xe.TWO_AVG,Xe.TWO_WEAK_ONE_AVG).setSpeciesPools({[ye.COMMON]:[e.MEOWTH,e.PSYDUCK,e.BUDEW,e.PIDOVE,e.CINCCINO,e.LITLEO],[ye.UNCOMMON]:[e.JIGGLYPUFF,e.MAGNEMITE,e.MARILL,e.COTTONEE,e.SKIDDO],[ye.RARE]:[e.BUIZEL,e.SNEASEL,e.KLEFKI,e.INDEEDEE]}),[c.CYCLIST]:new Ce(++ue).setMoneyMultiplier(1.3).setHasGenders("Cyclist Female").setHasDouble("Cyclists").setEncounterBgm(c.CYCLIST).setPartyTemplates(Xe.TWO_WEAK,Xe.ONE_AVG).setSpeciesPools({[ye.COMMON]:[e.DODUO,e.PICHU,e.TAILLOW,e.STARLY,e.PONYTA],[ye.UNCOMMON]:[e.ELECTRIKE,e.SHINX,e.BLITZLE,e.DUCKLETT,e.WATTREL],[ye.RARE]:[e.YANMA,e.NINJASK,e.WHIRLIPEDE,e.EMOLGA,e.SKIDDO],[ye.SUPER_RARE]:[e.ACCELGOR,e.DREEPY]}),[c.DANCER]:new Ce(++ue).setMoneyMultiplier(1.55).setEncounterBgm(c.CYCLIST).setPartyTemplates(Xe.TWO_WEAK,Xe.ONE_AVG,Xe.TWO_AVG,Xe.TWO_WEAK_SAME_TWO_WEAK_SAME).setSpeciesPools({[ye.COMMON]:[e.RALTS,e.SPOINK,e.LOTAD,e.BUDEW],[ye.UNCOMMON]:[e.SPINDA,e.SWABLU,e.MARACTUS],[ye.RARE]:[e.BELLOSSOM,e.HITMONTOP,e.MIME_JR,e.ORICORIO],[ye.SUPER_RARE]:[e.QUAXLY,e.JANGMO_O]}),[c.DEPOT_AGENT]:new Ce(++ue).setMoneyMultiplier(1.45).setEncounterBgm(c.CLERK),[c.DOCTOR]:new Ce(++ue).setHasGenders("Nurse","lass").setHasDouble("Medical Team").setMoneyMultiplier(3).setEncounterBgm(c.CLERK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.HEAL_PULSE)),[c.FIREBREATHER]:new Ce(++ue).setMoneyMultiplier(1.4).setEncounterBgm(c.ROUGHNECK).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SMOG)||E.isOfType(i.FIRE)),[c.FISHERMAN]:new Ce(++ue).setMoneyMultiplier(1.25).setEncounterBgm(c.BACKPACKER).setSpecialtyType(i.WATER).setPartyTemplates(Xe.TWO_WEAK_SAME_ONE_AVG,Xe.ONE_AVG,Xe.THREE_WEAK_SAME,Xe.ONE_STRONG,Xe.SIX_WEAKER).setSpeciesPools({[ye.COMMON]:[e.TENTACOOL,e.MAGIKARP,e.GOLDEEN,e.STARYU,e.REMORAID,e.SKRELP,e.CLAUNCHER,e.ARROKUDA],[ye.UNCOMMON]:[e.POLIWAG,e.SHELLDER,e.KRABBY,e.HORSEA,e.CARVANHA,e.BARBOACH,e.CORPHISH,e.FINNEON,e.TYMPOLE,e.BASCULIN,e.FRILLISH,e.INKAY],[ye.RARE]:[e.CHINCHOU,e.CORSOLA,e.WAILMER,e.BARBOACH,e.CLAMPERL,e.LUVDISC,e.MANTYKE,e.ALOMOMOLA,e.TATSUGIRI,e.VELUZA],[ye.SUPER_RARE]:[e.LAPRAS,e.FEEBAS,e.RELICANTH,e.DONDOZO]}),[c.GUITARIST]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.ROUGHNECK).setSpecialtyType(i.ELECTRIC).setSpeciesFilter(E=>E.isOfType(i.ELECTRIC)),[c.HARLEQUIN]:new Ce(++ue).setEncounterBgm(c.PSYCHIC).setSpeciesFilter(E=>fn[t.TRICK_ROOM].indexOf(E.speciesId)>-1),[c.HIKER]:new Ce(++ue).setEncounterBgm(c.BACKPACKER).setPartyTemplates(Xe.TWO_AVG_SAME_ONE_AVG,Xe.TWO_AVG_SAME_ONE_STRONG,Xe.TWO_AVG,Xe.FOUR_WEAK,Xe.ONE_STRONG).setSpeciesPools({[ye.COMMON]:[e.SANDSHREW,e.DIGLETT,e.GEODUDE,e.MACHOP,e.ARON,e.ROGGENROLA,e.DRILBUR,e.NACLI],[ye.UNCOMMON]:[e.ZUBAT,e.RHYHORN,e.ONIX,e.CUBONE,e.WOOBAT,e.SWINUB,e.NOSEPASS,e.HIPPOPOTAS,e.DWEBBLE,e.KLAWF,e.TOEDSCOOL],[ye.RARE]:[e.TORKOAL,e.TRAPINCH,e.BARBOACH,e.GOLETT,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.GALAR_STUNFISK,e.PALDEA_WOOPER],[ye.SUPER_RARE]:[e.MAGBY,e.LARVITAR]}),[c.HOOLIGANS]:new Ce(++ue).setDoubleOnly().setMoneyMultiplier(1.5).setEncounterBgm(c.ROUGHNECK).setPartyTemplateFunc(()=>vL(Xe.TWO_WEAK,Xe.TWO_AVG,Xe.ONE_AVG_ONE_STRONG)).setSpeciesFilter(E=>E.isOfType(i.POISON)||E.isOfType(i.DARK)),[c.HOOPSTER]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.CYCLIST),[c.INFIELDER]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.CYCLIST),[c.JANITOR]:new Ce(++ue).setMoneyMultiplier(1.1).setEncounterBgm(c.CLERK),[c.LINEBACKER]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.CYCLIST),[c.MAID]:new Ce(++ue).setMoneyMultiplier(1.6).setEncounterBgm(c.RICH),[c.MUSICIAN]:new Ce(++ue).setMoneyMultiplier(1.1).setEncounterBgm(c.POKEFAN).setPartyTemplates(Xe.FOUR_WEAKER,Xe.THREE_WEAK,Xe.TWO_WEAK_ONE_AVG,Xe.TWO_AVG).setSpeciesFilter(E=>!!E.getLevelMoves().find(A=>A[1]===t.SING)),[c.HEX_MANIAC]:new Ce(++ue).setMoneyMultiplier(1.5).setEncounterBgm(c.PSYCHIC).setPartyTemplates(Xe.TWO_AVG,Xe.ONE_AVG_ONE_STRONG,Xe.TWO_AVG_SAME_ONE_AVG,Xe.THREE_AVG,Xe.TWO_STRONG).setSpeciesFilter(E=>E.isOfType(i.GHOST)||E.isOfType(i.PSYCHIC)),[c.NURSERY_AIDE]:new Ce(++ue).setMoneyMultiplier(1.3).setEncounterBgm("lass"),[c.OFFICER]:new Ce(++ue).setMoneyMultiplier(1.55).setEncounterBgm(c.CLERK).setPartyTemplates(Xe.ONE_AVG,Xe.ONE_STRONG,Xe.TWO_AVG,Xe.TWO_WEAK_SAME_ONE_AVG).setSpeciesPools({[ye.COMMON]:[e.VULPIX,e.GROWLITHE,e.SNUBBULL,e.POOCHYENA,e.ELECTRIKE,e.LILLIPUP,e.YAMPER,e.FIDOUGH],[ye.UNCOMMON]:[e.HOUNDOUR,e.ROCKRUFF,e.MASCHIFF],[ye.RARE]:[e.JOLTEON,e.RIOLU],[ye.SUPER_RARE]:[],[ye.ULTRA_RARE]:[e.ENTEI,e.SUICUNE,e.RAIKOU]}),[c.PARASOL_LADY]:new Ce(++ue).setMoneyMultiplier(1.55).setEncounterBgm(c.PARASOL_LADY).setPartyTemplates(Xe.TWO_AVG_SAME_ONE_AVG,Xe.TWO_AVG_SAME_ONE_STRONG,Xe.TWO_AVG,Xe.FOUR_WEAK,Xe.ONE_STRONG).setSpeciesFilter(E=>[E.ability1,E.ability2,E.abilityHidden].some(A=>!!A&&[O.DRIZZLE,O.SWIFT_SWIM,O.HYDRATION,O.RAIN_DISH,O.DRY_SKIN,O.WIND_POWER].includes(A))||E.getLevelMoves().some(A=>A[1]===t.RAIN_DANCE)),[c.PILOT]:new Ce(++ue).setMoneyMultiplier(1.75).setEncounterBgm(c.CLERK).setPartyTemplates(Xe.THREE_WEAK,Xe.TWO_WEAK_ONE_AVG,Xe.TWO_AVG,Xe.THREE_AVG).setSpeciesFilter(E=>fn[t.FLY].indexOf(E.speciesId)>-1),[c.POKEFAN]:new Ce(++ue).setMoneyMultiplier(1.4).setName("PokéFan").setHasGenders("PokéFan Female").setHasDouble("PokéFan Family").setEncounterBgm(c.POKEFAN).setPartyTemplates(Xe.SIX_WEAKER,Xe.FOUR_WEAK,Xe.TWO_AVG,Xe.ONE_STRONG,Xe.FOUR_WEAK_SAME,Xe.FIVE_WEAK,Xe.SIX_WEAKER_SAME).setSpeciesFilter(E=>fn[t.HELPING_HAND].indexOf(E.speciesId)>-1),[c.PRESCHOOLER]:new Ce(++ue).setMoneyMultiplier(.2).setEncounterBgm(c.YOUNGSTER).setHasGenders("Preschooler Female","lass").setHasDouble("Preschoolers").setPartyTemplates(Xe.THREE_WEAK,Xe.FOUR_WEAKER,Xe.TWO_WEAK_SAME_ONE_AVG,Xe.FIVE_WEAKER).setSpeciesPools({[ye.COMMON]:[e.CATERPIE,e.PICHU,e.SANDSHREW,e.LEDYBA,e.BUDEW,e.BURMY,e.WOOLOO,e.PAWMI,e.SMOLIV],[ye.UNCOMMON]:[e.EEVEE,e.CLEFFA,e.IGGLYBUFF,e.SWINUB,e.WOOPER,e.DRIFLOON,e.DEDENNE,e.STUFFUL],[ye.RARE]:[e.RALTS,e.RIOLU,e.JOLTIK,e.TANDEMAUS],[ye.SUPER_RARE]:[e.DARUMAKA,e.TINKATINK]}),[c.PSYCHIC]:new Ce(++ue).setHasGenders("Psychic Female").setHasDouble("Psychics").setMoneyMultiplier(1.4).setEncounterBgm(c.PSYCHIC).setPartyTemplates(Xe.TWO_WEAK,Xe.TWO_AVG,Xe.TWO_WEAK_SAME_ONE_AVG,Xe.TWO_WEAK_SAME_TWO_WEAK_SAME,Xe.ONE_STRONGER).setSpeciesPools({[ye.COMMON]:[e.ABRA,e.DROWZEE,e.RALTS,e.SPOINK,e.GOTHITA,e.SOLOSIS,e.BLIPBUG,e.ESPURR,e.HATENNA],[ye.UNCOMMON]:[e.MIME_JR,e.EXEGGCUTE,e.MEDITITE,e.NATU,e.EXEGGCUTE,e.WOOBAT,e.INKAY,e.ORANGURU],[ye.RARE]:[e.ELGYEM,e.SIGILYPH,e.BALTOY,e.GIRAFARIG,e.MEOWSTIC],[ye.SUPER_RARE]:[e.BELDUM,e.ESPEON,e.STANTLER]}),[c.RANGER]:new Ce(++ue).setMoneyMultiplier(1.4).setName("Pokémon Ranger").setEncounterBgm(c.BACKPACKER).setHasGenders("Pokémon Ranger Female").setHasDouble("Pokémon Rangers").setSpeciesPools({[ye.COMMON]:[e.PICHU,e.GROWLITHE,e.PONYTA,e.ZIGZAGOON,e.SEEDOT,e.BIDOOF,e.RIOLU,e.SEWADDLE,e.SKIDDO,e.SALANDIT,e.YAMPER],[ye.UNCOMMON]:[e.AZURILL,e.TAUROS,e.MAREEP,e.FARFETCHD,e.TEDDIURSA,e.SHROOMISH,e.ELECTRIKE,e.BUDEW,e.BUIZEL,e.MUDBRAY,e.STUFFUL],[ye.RARE]:[e.EEVEE,e.SCYTHER,e.KANGASKHAN,e.RALTS,e.MUNCHLAX,e.ZORUA,e.PALDEA_TAUROS,e.TINKATINK,e.CYCLIZAR,e.FLAMIGO],[ye.SUPER_RARE]:[e.LARVESTA]}),[c.RICH]:new Ce(++ue).setMoneyMultiplier(3.25).setName("Gentleman").setHasGenders("Madame").setHasDouble("Rich Couple").setPartyTemplates(Xe.THREE_WEAK,Xe.FOUR_WEAK,Xe.TWO_WEAK_ONE_AVG,Xe.THREE_AVG).setSpeciesFilter(E=>E.isOfType(i.NORMAL)||E.isOfType(i.ELECTRIC)),[c.RICH_KID]:new Ce(++ue).setMoneyMultiplier(2.5).setName("Rich Boy").setHasGenders("Lady").setHasDouble("Rich Kids").setEncounterBgm(c.RICH).setPartyTemplates(Xe.FOUR_WEAKER,Xe.THREE_WEAK_SAME,Xe.TWO_WEAK_SAME_ONE_AVG).setSpeciesFilter(E=>E.baseTotal<=460),[c.ROUGHNECK]:new Ce(++ue).setMoneyMultiplier(1.4).setEncounterBgm(c.ROUGHNECK).setSpeciesFilter(E=>E.isOfType(i.DARK)),[c.SAILOR]:new Ce(++ue).setMoneyMultiplier(1.4).setEncounterBgm(c.BACKPACKER).setSpeciesFilter(E=>E.isOfType(i.WATER)||E.isOfType(i.FIGHTING)),[c.SCIENTIST]:new Ce(++ue).setHasGenders("Scientist Female").setHasDouble("Scientists").setMoneyMultiplier(1.7).setEncounterBgm(c.SCIENTIST).setSpeciesPools({[ye.COMMON]:[e.MAGNEMITE,e.GRIMER,e.DROWZEE,e.VOLTORB,e.KOFFING],[ye.UNCOMMON]:[e.BALTOY,e.BRONZOR,e.FERROSEED,e.KLINK,e.CHARJABUG,e.BLIPBUG,e.HELIOPTILE],[ye.RARE]:[e.ABRA,e.DITTO,e.PORYGON,e.ELEKID,e.SOLOSIS,e.GALAR_WEEZING],[ye.SUPER_RARE]:[e.OMANYTE,e.KABUTO,e.AERODACTYL,e.LILEEP,e.ANORITH,e.CRANIDOS,e.SHIELDON,e.TIRTOUGA,e.ARCHEN,e.ARCTOVISH,e.ARCTOZOLT,e.DRACOVISH,e.DRACOZOLT],[ye.ULTRA_RARE]:[e.ROTOM,e.MELTAN]}),[c.SMASHER]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.CYCLIST),[c.SNOW_WORKER]:new Ce(++ue).setName("Worker").setHasDouble("Workers").setMoneyMultiplier(1.7).setEncounterBgm(c.CLERK).setSpeciesFilter(E=>E.isOfType(i.ICE)||E.isOfType(i.STEEL)),[c.STRIKER]:new Ce(++ue).setMoneyMultiplier(1.2).setEncounterBgm(c.CYCLIST),[c.SCHOOL_KID]:new Ce(++ue).setMoneyMultiplier(.75).setEncounterBgm(c.YOUNGSTER).setHasGenders("School Kid Female","lass").setHasDouble("School Kids").setSpeciesPools({[ye.COMMON]:[e.ODDISH,e.EXEGGCUTE,e.TEDDIURSA,e.WURMPLE,e.RALTS,e.SHROOMISH,e.FLETCHLING],[ye.UNCOMMON]:[e.VOLTORB,e.WHISMUR,e.MEDITITE,e.MIME_JR,e.NYMBLE],[ye.RARE]:[e.TANGELA,e.EEVEE,e.YANMA],[ye.SUPER_RARE]:[e.TADBULB]}),[c.SWIMMER]:new Ce(++ue).setMoneyMultiplier(1.3).setEncounterBgm(c.PARASOL_LADY).setHasGenders("Swimmer Female").setHasDouble("Swimmers").setSpecialtyType(i.WATER).setSpeciesFilter(E=>E.isOfType(i.WATER)),[c.TWINS]:new Ce(++ue).setDoubleOnly().setMoneyMultiplier(.65).setUseSameSeedForAllMembers().setPartyTemplateFunc(()=>vL(Xe.TWO_WEAK,Xe.TWO_AVG,Xe.TWO_STRONG)).setPartyMemberFunc(0,Ie([e.PLUSLE,e.VOLBEAT,e.PACHIRISU,e.SILCOON,e.METAPOD,e.IGGLYBUFF,e.PETILIL,e.EEVEE])).setPartyMemberFunc(1,Ie([e.MINUN,e.ILLUMISE,e.EMOLGA,e.CASCOON,e.KAKUNA,e.CLEFFA,e.COTTONEE,e.EEVEE],oe.TRAINER_PARTNER)).setEncounterBgm(c.TWINS),[c.VETERAN]:new Ce(++ue).setHasGenders("Veteran Female").setHasDouble("Veteran Duo").setMoneyMultiplier(2.5).setEncounterBgm(c.ACE_TRAINER).setSpeciesFilter(E=>E.isOfType(i.DRAGON)),[c.WAITER]:new Ce(++ue).setHasGenders("Waitress").setHasDouble("Restaurant Staff").setMoneyMultiplier(1.5).setEncounterBgm(c.CLERK).setSpeciesPools({[ye.COMMON]:[e.CLEFFA,e.CHATOT,e.PANSAGE,e.PANSEAR,e.PANPOUR,e.MINCCINO],[ye.UNCOMMON]:[e.TROPIUS,e.PETILIL,e.BOUNSWEET,e.INDEEDEE],[ye.RARE]:[e.APPLIN,e.SINISTEA,e.POLTCHAGEIST]}),[c.WORKER]:new Ce(++ue).setHasGenders("Worker Female").setHasDouble("Workers").setEncounterBgm(c.CLERK).setMoneyMultiplier(1.7).setSpeciesFilter(E=>E.isOfType(i.ROCK)||E.isOfType(i.STEEL)),[c.YOUNGSTER]:new Ce(++ue).setMoneyMultiplier(.5).setEncounterBgm(c.YOUNGSTER).setHasGenders("Lass","lass").setHasDouble("Beginners").setPartyTemplates(Xe.TWO_WEAKER).setSpeciesPools([e.CATERPIE,e.WEEDLE,e.RATTATA,e.SENTRET,e.POOCHYENA,e.ZIGZAGOON,e.WURMPLE,e.BIDOOF,e.PATRAT,e.LILLIPUP]),[c.ROCKET_GRUNT]:new Ce(++ue).setHasGenders("Rocket Grunt Female").setHasDouble("Rocket Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.WEEDLE,e.RATTATA,e.EKANS,e.SANDSHREW,e.ZUBAT,e.ODDISH,e.GEODUDE,e.SLOWPOKE,e.GRIMER,e.KOFFING],[ye.UNCOMMON]:[e.MANKEY,e.GROWLITHE,e.MAGNEMITE,e.ONIX,e.VOLTORB,e.EXEGGCUTE,e.CUBONE,e.LICKITUNG,e.TAUROS,e.MAGIKARP,e.MURKROW,e.ELEKID,e.MAGBY],[ye.RARE]:[e.ABRA,e.GASTLY,e.SCYTHER,e.PORYGON,e.OMANYTE,e.KABUTO,e.ALOLA_RATTATA,e.ALOLA_SANDSHREW,e.ALOLA_MEOWTH,e.ALOLA_GEODUDE,e.ALOLA_GRIMER,e.PALDEA_TAUROS],[ye.SUPER_RARE]:[e.DRATINI,e.LARVITAR]}),[c.ARCHER]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.HOUNDOOM]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.ARIANA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin_female","rocket",[e.ARBOK]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.PROTON]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.CROBAT]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.PETREL]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("rocket_admin","rocket",[e.WEEZING]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_rocket_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.MAGMA_GRUNT]:new Ce(++ue).setHasGenders("Magma Grunt Female").setHasDouble("Magma Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.DIGLETT,e.GROWLITHE,e.SLUGMA,e.POOCHYENA,e.ZIGZAGOON,e.NUMEL,e.TORKOAL,e.BALTOY],[ye.UNCOMMON]:[e.RHYHORN,e.PHANPY,e.MAGBY,e.ZANGOOSE,e.SOLROCK,e.HEATMOR,e.ROLYCOLY,e.CAPSAKID],[ye.RARE]:[e.TRAPINCH,e.LILEEP,e.ANORITH,e.GOLETT,e.TURTONATOR,e.TOEDSCOOL,e.HISUI_GROWLITHE],[ye.SUPER_RARE]:[e.CHARCADET,e.ARON]}),[c.TABITHA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin","magma",[e.CAMERUPT]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.COURTNEY]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("magma_admin_female","magma",[e.CAMERUPT]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.AQUA_GRUNT]:new Ce(++ue).setHasGenders("Aqua Grunt Female").setHasDouble("Aqua Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.QWILFISH,e.REMORAID,e.ZIGZAGOON,e.LOTAD,e.WINGULL,e.CARVANHA,e.WAILMER,e.BARBOACH,e.CORPHISH,e.SPHEAL],[ye.UNCOMMON]:[e.TENTACOOL,e.HORSEA,e.CHINCHOU,e.WOOPER,e.AZURILL,e.SEVIPER,e.CLAMPERL,e.WIMPOD,e.CLOBBOPUS],[ye.RARE]:[e.MANTYKE,e.TYMPOLE,e.SKRELP,e.ARROKUDA,e.WIGLETT,e.HISUI_QWILFISH,e.PALDEA_WOOPER],[ye.SUPER_RARE]:[e.BASCULEGION,e.DONDOZO]}),[c.MATT]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin","aqua",[e.SHARPEDO]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.SHELLY]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aqua_admin_female","aqua",[e.SHARPEDO]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aqua_magma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.GALACTIC_GRUNT]:new Ce(++ue).setHasGenders("Galactic Grunt Female").setHasDouble("Galactic Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.WURMPLE,e.SHINX,e.BURMY,e.DRIFLOON,e.GLAMEOW,e.STUNKY,e.BRONZOR,e.CROAGUNK,e.CARNIVINE],[ye.UNCOMMON]:[e.ZUBAT,e.LICKITUNG,e.RHYHORN,e.TANGELA,e.YANMA,e.GLIGAR,e.SWINUB,e.SKORUPI],[ye.RARE]:[e.SNEASEL,e.TEDDIURSA,e.ELEKID,e.MAGBY,e.DUSKULL,e.HISUI_GROWLITHE,e.HISUI_QWILFISH],[ye.SUPER_RARE]:[e.SPIRITOMB,e.ROTOM,e.HISUI_SNEASEL]}),[c.JUPITER]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.SKUNTANK]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.MARS]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander_female","galactic",[e.PURUGLY]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.SATURN]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("galactic_commander","galactic",[e.TOXICROAK]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_galactic_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.PLASMA_GRUNT]:new Ce(++ue).setHasGenders("Plasma Grunt Female").setHasDouble("Plasma Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.PATRAT,e.LILLIPUP,e.PURRLOIN,e.WOOBAT,e.TYMPOLE,e.SANDILE,e.SCRAGGY,e.TRUBBISH,e.VANILLITE],[ye.UNCOMMON]:[e.TIMBURR,e.VENIPEDE,e.DARUMAKA,e.FOONGUS,e.FRILLISH,e.JOLTIK,e.KLINK,e.CUBCHOO,e.GOLETT],[ye.RARE]:[e.DRILBUR,e.ZORUA,e.MIENFOO,e.PAWNIARD,e.BOUFFALANT,e.RUFFLET,e.VULLABY,e.DURANT],[ye.SUPER_RARE]:[e.AXEW,e.DRUDDIGON,e.DEINO,e.HISUI_ZORUA]}),[c.ZINZOLIN]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_sage","plasma_zinzolin",[e.CRYOGONAL]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_plasma_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.COLRESS]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("plasma_boss","plasma_colress",[e.KLINKLANG]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_colress").setMixedBattleBgm("battle_colress").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.FLARE_GRUNT]:new Ce(++ue).setHasGenders("Flare Grunt Female").setHasDouble("Flare Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.HOUNDOUR,e.GULPIN,e.SKORUPI,e.CROAGUNK,e.PURRLOIN,e.SCRAGGY,e.FLETCHLING,e.SCATTERBUG,e.LITLEO,e.ESPURR,e.INKAY],[ye.UNCOMMON]:[e.POOCHYENA,e.ELECTRIKE,e.FOONGUS,e.PANCHAM,e.BINACLE,e.SKRELP,e.CLAUNCHER,e.HELIOPTILE,e.PHANTUMP,e.PUMPKABOO],[ye.RARE]:[e.SNEASEL,e.LITWICK,e.PAWNIARD,e.NOIBAT],[ye.SUPER_RARE]:[e.SLIGGOO,e.HISUI_SLIGGOO,e.HISUI_AVALUGG]}),[c.BRYONY]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin_female","flare",[e.LIEPARD]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.XEROSIC]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("flare_admin","flare",[e.MALAMAR]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_flare_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.AETHER_GRUNT]:new Ce(++ue).setHasGenders("Aether Grunt Female").setHasDouble("Aether Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.CORSOLA,e.LILLIPUP,e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF,e.MORELULL,e.BOUNSWEET,e.COMFEY,e.KOMALA,e.TOGEDEMARU,e.ALOLA_RAICHU,e.ALOLA_DIGLETT,e.ALOLA_GEODUDE,e.ALOLA_EXEGGUTOR],[ye.UNCOMMON]:[e.POLIWAG,e.CRABRAWLER,e.ORICORIO,e.CUTIEFLY,e.WISHIWASHI,e.MUDBRAY,e.STUFFUL,e.ORANGURU,e.PASSIMIAN,e.PYUKUMUKU,e.BRUXISH,e.ALOLA_SANDSHREW,e.ALOLA_VULPIX,e.ALOLA_MAROWAK],[ye.RARE]:[e.MINIOR,e.TURTONATOR,e.MIMIKYU,e.DRAMPA,e.GALAR_CORSOLA],[ye.SUPER_RARE]:[e.PORYGON,e.JANGMO_O]}),[c.FABA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("aether_admin","aether",[e.HYPNO]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_aether_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.SKULL_GRUNT]:new Ce(++ue).setHasGenders("Skull Grunt Female").setHasDouble("Skull Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.EKANS,e.VENONAT,e.DROWZEE,e.KOFFING,e.SPINARAK,e.SCRAGGY,e.TRUBBISH,e.MAREANIE,e.SALANDIT,e.ALOLA_RATTATA,e.ALOLA_MEOWTH,e.ALOLA_GRIMER],[ye.UNCOMMON]:[e.ZUBAT,e.GASTLY,e.HOUNDOUR,e.SABLEYE,e.VENIPEDE,e.SANDILE,e.VULLABY,e.PANCHAM,e.FOMANTIS,e.ALOLA_MAROWAK],[ye.RARE]:[e.PAWNIARD,e.WISHIWASHI,e.SANDYGAST,e.MIMIKYU,e.DHELMISE,e.NYMBLE],[ye.SUPER_RARE]:[e.GRUBBIN,e.DEWPIDER]}),[c.PLUMERIA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("skull_admin","skull",[e.SALAZZLE]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_skull_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.MACRO_GRUNT]:new Ce(++ue).setHasGenders("Macro Grunt Female").setHasDouble("Macro Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_macro_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.STEELIX,e.MAWILE,e.FERROSEED,e.KLINK,e.SKWOVET,e.ROOKIDEE,e.ROLYCOLY,e.CUFANT,e.GALAR_MEOWTH,e.GALAR_ZIGZAGOON],[ye.UNCOMMON]:[e.MAGNEMITE,e.RIOLU,e.DRILBUR,e.APPLIN,e.CRAMORANT,e.ARROKUDA,e.SINISTEA,e.HATENNA,e.FALINKS,e.GALAR_PONYTA,e.GALAR_YAMASK],[ye.RARE]:[e.SCIZOR,e.BELDUM,e.HONEDGE,e.GALAR_FARFETCHD,e.GALAR_MR_MIME,e.GALAR_DARUMAKA],[ye.SUPER_RARE]:[e.DURALUDON,e.DREEPY]}),[c.OLEANA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("macro_admin","macro_cosmos",[e.GARBODOR]).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_oleana").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()),[c.STAR_GRUNT]:new Ce(++ue).setHasGenders("Star Grunt Female").setHasDouble("Star Grunts").setMoneyMultiplier(1).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_grunt").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setSpeciesPools({[ye.COMMON]:[e.DUNSPARCE,e.HOUNDOUR,e.AZURILL,e.GULPIN,e.FOONGUS,e.FLETCHLING,e.LITLEO,e.FLABEBE,e.CRABRAWLER,e.NYMBLE,e.PAWMI,e.FIDOUGH,e.SQUAWKABILLY,e.MASCHIFF,e.SHROODLE,e.KLAWF,e.WIGLETT,e.PALDEA_WOOPER],[ye.UNCOMMON]:[e.KOFFING,e.EEVEE,e.GIRAFARIG,e.RALTS,e.TORKOAL,e.SEVIPER,e.SCRAGGY,e.ZORUA,e.MIMIKYU,e.IMPIDIMP,e.FALINKS,e.CAPSAKID,e.TINKATINK,e.BOMBIRDIER,e.CYCLIZAR,e.FLAMIGO,e.PALDEA_TAUROS],[ye.RARE]:[e.MANKEY,e.PAWNIARD,e.CHARCADET,e.FLITTLE,e.VAROOM,e.ORTHWORM],[ye.SUPER_RARE]:[e.DONDOZO,e.GIMMIGHOUL]}),[c.GIACOMO]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_dark",[e.KINGAMBIT],i.DARK).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=1,E.moveset=[new Lt(t.WICKED_TORQUE),new Lt(t.SPIN_OUT),new Lt(t.SHIFT_GEAR),new Lt(t.HIGH_HORSEPOWER)]})),[c.MELA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fire",[e.ARMAROUGE],i.FIRE).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=2,E.moveset=[new Lt(t.BLAZING_TORQUE),new Lt(t.SPIN_OUT),new Lt(t.SHIFT_GEAR),new Lt(t.HIGH_HORSEPOWER)]})),[c.ATTICUS]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_poison",[e.REVAVROOM],i.POISON).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=3,E.moveset=[new Lt(t.NOXIOUS_TORQUE),new Lt(t.SPIN_OUT),new Lt(t.SHIFT_GEAR),new Lt(t.HIGH_HORSEPOWER)]})),[c.ORTEGA]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fairy",[e.DACHSBUN],i.FAIRY).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=4,E.moveset=[new Lt(t.MAGICAL_TORQUE),new Lt(t.SPIN_OUT),new Lt(t.SHIFT_GEAR),new Lt(t.HIGH_HORSEPOWER)]})),[c.ERI]:new Ce(++ue).setMoneyMultiplier(1.5).initForEvilTeamAdmin("star_admin","star_fighting",[e.ANNIHILAPE],i.FIGHTING).setEncounterBgm(c.PLASMA_GRUNT).setBattleBgm("battle_plasma_grunt").setMixedBattleBgm("battle_star_admin").setVictoryBgm("victory_team_plasma").setPartyTemplateFunc(()=>WA()).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=5,E.moveset=[new Lt(t.COMBAT_TORQUE),new Lt(t.SPIN_OUT),new Lt(t.SHIFT_GEAR),new Lt(t.HIGH_HORSEPOWER)]})),[c.BROCK]:new Ce(ue=c.BROCK).initForGymLeader(ze.BROCK,!0,i.ROCK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.MISTY]:new Ce(++ue).initForGymLeader(ze.MISTY,!1,i.WATER).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.LT_SURGE]:new Ce(++ue).initForGymLeader(ze.LT_SURGE,!0,i.ELECTRIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.ERIKA]:new Ce(++ue).initForGymLeader(ze.ERIKA,!1,i.GRASS).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.JANINE]:new Ce(++ue).initForGymLeader(ze.JANINE,!1,i.POISON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.SABRINA]:new Ce(++ue).initForGymLeader(ze.SABRINA,!1,i.PSYCHIC).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.BLAINE]:new Ce(++ue).initForGymLeader(ze.BLAINE,!0,i.FIRE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.GIOVANNI]:new Ce(++ue).initForGymLeader(ze.GIOVANNI,!0,i.DARK).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.FALKNER]:new Ce(++ue).initForGymLeader(ze.FALKNER,!0,i.FLYING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.BUGSY]:new Ce(++ue).initForGymLeader(ze.BUGSY,!0,i.BUG).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.WHITNEY]:new Ce(++ue).initForGymLeader(ze.WHITNEY,!1,i.NORMAL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.MORTY]:new Ce(++ue).initForGymLeader(ze.MORTY,!0,i.GHOST).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.CHUCK]:new Ce(++ue).initForGymLeader(ze.CHUCK,!0,i.FIGHTING).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.JASMINE]:new Ce(++ue).initForGymLeader(ze.JASMINE,!1,i.STEEL).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.PRYCE]:new Ce(++ue).initForGymLeader(ze.PRYCE,!0,i.ICE).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.CLAIR]:new Ce(++ue).initForGymLeader(ze.CLAIR,!1,i.DRAGON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.ROXANNE]:new Ce(++ue).initForGymLeader(ze.ROXANNE,!1,i.ROCK).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.BRAWLY]:new Ce(++ue).initForGymLeader(ze.BRAWLY,!0,i.FIGHTING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.WATTSON]:new Ce(++ue).initForGymLeader(ze.WATTSON,!0,i.ELECTRIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.FLANNERY]:new Ce(++ue).initForGymLeader(ze.FLANNERY,!1,i.FIRE).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.NORMAN]:new Ce(++ue).initForGymLeader(ze.NORMAN,!0,i.NORMAL).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.WINONA]:new Ce(++ue).initForGymLeader(ze.WINONA,!1,i.FLYING).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.TATE]:new Ce(++ue).initForGymLeader(ze.TATE,!0,i.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("tate_liza_double").setDoubleTrainerType(c.LIZA).setDoubleTitle("gym_leader_double"),[c.LIZA]:new Ce(++ue).initForGymLeader(ze.LIZA,!1,i.PSYCHIC).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym").setHasDouble("liza_tate_double").setDoubleTrainerType(c.TATE).setDoubleTitle("gym_leader_double"),[c.JUAN]:new Ce(++ue).initForGymLeader(ze.JUAN,!0,i.WATER).setBattleBgm("battle_hoenn_gym").setMixedBattleBgm("battle_hoenn_gym"),[c.ROARK]:new Ce(++ue).initForGymLeader(ze.ROARK,!0,i.ROCK).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.GARDENIA]:new Ce(++ue).initForGymLeader(ze.GARDENIA,!1,i.GRASS).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.MAYLENE]:new Ce(++ue).initForGymLeader(ze.MAYLENE,!1,i.FIGHTING).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.CRASHER_WAKE]:new Ce(++ue).initForGymLeader(ze.CRASHER_WAKE,!0,i.WATER).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.FANTINA]:new Ce(++ue).initForGymLeader(ze.FANTINA,!1,i.GHOST).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.BYRON]:new Ce(++ue).initForGymLeader(ze.BYRON,!0,i.STEEL).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.CANDICE]:new Ce(++ue).initForGymLeader(ze.CANDICE,!1,i.ICE).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.VOLKNER]:new Ce(++ue).initForGymLeader(ze.VOLKNER,!0,i.ELECTRIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.CILAN]:new Ce(++ue).initForGymLeader(ze.CILAN,!0,i.GRASS).setMixedBattleBgm("battle_unova_gym"),[c.CHILI]:new Ce(++ue).initForGymLeader(ze.CHILI,!0,i.FIRE).setMixedBattleBgm("battle_unova_gym"),[c.CRESS]:new Ce(++ue).initForGymLeader(ze.CRESS,!0,i.WATER).setMixedBattleBgm("battle_unova_gym"),[c.CHEREN]:new Ce(++ue).initForGymLeader(ze.CHEREN,!0,i.NORMAL).setMixedBattleBgm("battle_unova_gym"),[c.LENORA]:new Ce(++ue).initForGymLeader(ze.LENORA,!1,i.NORMAL).setMixedBattleBgm("battle_unova_gym"),[c.ROXIE]:new Ce(++ue).initForGymLeader(ze.ROXIE,!1,i.POISON).setMixedBattleBgm("battle_unova_gym"),[c.BURGH]:new Ce(++ue).initForGymLeader(ze.BURGH,!0,i.BUG).setMixedBattleBgm("battle_unova_gym"),[c.ELESA]:new Ce(++ue).initForGymLeader(ze.ELESA,!1,i.ELECTRIC).setMixedBattleBgm("battle_unova_gym"),[c.CLAY]:new Ce(++ue).initForGymLeader(ze.CLAY,!0,i.GROUND).setMixedBattleBgm("battle_unova_gym"),[c.SKYLA]:new Ce(++ue).initForGymLeader(ze.SKYLA,!1,i.FLYING).setMixedBattleBgm("battle_unova_gym"),[c.BRYCEN]:new Ce(++ue).initForGymLeader(ze.BRYCEN,!0,i.ICE).setMixedBattleBgm("battle_unova_gym"),[c.DRAYDEN]:new Ce(++ue).initForGymLeader(ze.DRAYDEN,!0,i.DRAGON).setMixedBattleBgm("battle_unova_gym"),[c.MARLON]:new Ce(++ue).initForGymLeader(ze.MARLON,!0,i.WATER).setMixedBattleBgm("battle_unova_gym"),[c.VIOLA]:new Ce(++ue).initForGymLeader(ze.VIOLA,!1,i.BUG).setMixedBattleBgm("battle_kalos_gym"),[c.GRANT]:new Ce(++ue).initForGymLeader(ze.GRANT,!0,i.ROCK).setMixedBattleBgm("battle_kalos_gym"),[c.KORRINA]:new Ce(++ue).initForGymLeader(ze.KORRINA,!1,i.FIGHTING).setMixedBattleBgm("battle_kalos_gym"),[c.RAMOS]:new Ce(++ue).initForGymLeader(ze.RAMOS,!0,i.GRASS).setMixedBattleBgm("battle_kalos_gym"),[c.CLEMONT]:new Ce(++ue).initForGymLeader(ze.CLEMONT,!0,i.ELECTRIC).setMixedBattleBgm("battle_kalos_gym"),[c.VALERIE]:new Ce(++ue).initForGymLeader(ze.VALERIE,!1,i.FAIRY).setMixedBattleBgm("battle_kalos_gym"),[c.OLYMPIA]:new Ce(++ue).initForGymLeader(ze.OLYMPIA,!1,i.PSYCHIC).setMixedBattleBgm("battle_kalos_gym"),[c.WULFRIC]:new Ce(++ue).initForGymLeader(ze.WULFRIC,!0,i.ICE).setMixedBattleBgm("battle_kalos_gym"),[c.MILO]:new Ce(++ue).initForGymLeader(ze.MILO,!0,i.GRASS).setMixedBattleBgm("battle_galar_gym"),[c.NESSA]:new Ce(++ue).setName("Nessa").initForGymLeader(ze.NESSA,!1,i.WATER).setMixedBattleBgm("battle_galar_gym"),[c.KABU]:new Ce(++ue).initForGymLeader(ze.KABU,!0,i.FIRE).setMixedBattleBgm("battle_galar_gym"),[c.BEA]:new Ce(++ue).setName("Bea").initForGymLeader(ze.BEA,!1,i.FIGHTING).setMixedBattleBgm("battle_galar_gym"),[c.ALLISTER]:new Ce(++ue).setName("Allister").initForGymLeader(ze.ALLISTER,!0,i.GHOST).setMixedBattleBgm("battle_galar_gym"),[c.OPAL]:new Ce(++ue).initForGymLeader(ze.OPAL,!1,i.FAIRY).setMixedBattleBgm("battle_galar_gym"),[c.BEDE]:new Ce(++ue).initForGymLeader(ze.BEDE,!0,i.FAIRY).setMixedBattleBgm("battle_galar_gym"),[c.GORDIE]:new Ce(++ue).initForGymLeader(ze.GORDIE,!0,i.ROCK).setMixedBattleBgm("battle_galar_gym"),[c.MELONY]:new Ce(++ue).initForGymLeader(ze.MELONY,!1,i.ICE).setMixedBattleBgm("battle_galar_gym"),[c.PIERS]:new Ce(++ue).initForGymLeader(ze.PIERS,!0,i.DARK).setHasDouble("piers_marnie_double").setDoubleTrainerType(c.MARNIE).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[c.MARNIE]:new Ce(++ue).setName("Marnie").initForGymLeader(ze.MARNIE,!1,i.DARK).setHasDouble("marnie_piers_double").setDoubleTrainerType(c.PIERS).setDoubleTitle("gym_leader_double").setMixedBattleBgm("battle_galar_gym"),[c.RAIHAN]:new Ce(++ue).setName("Raihan").initForGymLeader(ze.RAIHAN,!0,i.DRAGON).setMixedBattleBgm("battle_galar_gym"),[c.KATY]:new Ce(++ue).initForGymLeader(ze.KATY,!1,i.BUG,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.BRASSIUS]:new Ce(++ue).initForGymLeader(ze.BRASSIUS,!0,i.GRASS,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.IONO]:new Ce(++ue).initForGymLeader(ze.IONO,!1,i.ELECTRIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.KOFU]:new Ce(++ue).initForGymLeader(ze.KOFU,!0,i.WATER,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.LARRY]:new Ce(++ue).setName("Larry").initForGymLeader(ze.LARRY,!0,i.NORMAL,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.RYME]:new Ce(++ue).initForGymLeader(ze.RYME,!1,i.GHOST,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.TULIP]:new Ce(++ue).initForGymLeader(ze.TULIP,!1,i.PSYCHIC,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.GRUSHA]:new Ce(++ue).initForGymLeader(ze.GRUSHA,!0,i.ICE,!0,-1).setMixedBattleBgm("battle_paldea_gym"),[c.LORELEI]:new Ce(ue=c.LORELEI).initForEliteFour(ze.LORELEI,!1,i.ICE).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.BRUNO]:new Ce(++ue).initForEliteFour(ze.BRUNO,!0,i.FIGHTING).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.AGATHA]:new Ce(++ue).initForEliteFour(ze.AGATHA,!1,i.GHOST).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.LANCE]:new Ce(++ue).setName("Lance").initForEliteFour(ze.LANCE,!0,i.DRAGON).setBattleBgm("battle_kanto_gym").setMixedBattleBgm("battle_kanto_gym"),[c.WILL]:new Ce(++ue).initForEliteFour(ze.WILL,!0,i.PSYCHIC).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.KOGA]:new Ce(++ue).initForEliteFour(ze.KOGA,!0,i.POISON).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.KAREN]:new Ce(++ue).initForEliteFour(ze.KAREN,!1,i.DARK).setBattleBgm("battle_johto_gym").setMixedBattleBgm("battle_johto_gym"),[c.SIDNEY]:new Ce(++ue).initForEliteFour(ze.SIDNEY,!0,i.DARK).setMixedBattleBgm("battle_hoenn_elite"),[c.PHOEBE]:new Ce(++ue).initForEliteFour(ze.PHOEBE,!1,i.GHOST).setMixedBattleBgm("battle_hoenn_elite"),[c.GLACIA]:new Ce(++ue).initForEliteFour(ze.GLACIA,!1,i.ICE).setMixedBattleBgm("battle_hoenn_elite"),[c.DRAKE]:new Ce(++ue).initForEliteFour(ze.DRAKE,!0,i.DRAGON).setMixedBattleBgm("battle_hoenn_elite"),[c.AARON]:new Ce(++ue).initForEliteFour(ze.AARON,!0,i.BUG).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.BERTHA]:new Ce(++ue).initForEliteFour(ze.BERTHA,!1,i.GROUND).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.FLINT]:new Ce(++ue).initForEliteFour(ze.FLINT,!0,i.FIRE,3).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.LUCIAN]:new Ce(++ue).initForEliteFour(ze.LUCIAN,!0,i.PSYCHIC).setBattleBgm("battle_sinnoh_gym").setMixedBattleBgm("battle_sinnoh_gym"),[c.SHAUNTAL]:new Ce(++ue).initForEliteFour(ze.SHAUNTAL,!1,i.GHOST).setMixedBattleBgm("battle_unova_elite"),[c.MARSHAL]:new Ce(++ue).initForEliteFour(ze.MARSHAL,!0,i.FIGHTING).setMixedBattleBgm("battle_unova_elite"),[c.GRIMSLEY]:new Ce(++ue).initForEliteFour(ze.GRIMSLEY,!0,i.DARK).setMixedBattleBgm("battle_unova_elite"),[c.CAITLIN]:new Ce(++ue).initForEliteFour(ze.CAITLIN,!1,i.PSYCHIC).setMixedBattleBgm("battle_unova_elite"),[c.MALVA]:new Ce(++ue).initForEliteFour(ze.MALVA,!1,i.FIRE).setMixedBattleBgm("battle_kalos_elite"),[c.SIEBOLD]:new Ce(++ue).initForEliteFour(ze.SIEBOLD,!0,i.WATER).setMixedBattleBgm("battle_kalos_elite"),[c.WIKSTROM]:new Ce(++ue).initForEliteFour(ze.WIKSTROM,!0,i.STEEL).setMixedBattleBgm("battle_kalos_elite"),[c.DRASNA]:new Ce(++ue).initForEliteFour(ze.DRASNA,!1,i.DRAGON).setMixedBattleBgm("battle_kalos_elite"),[c.HALA]:new Ce(++ue).initForEliteFour(ze.HALA,!0,i.FIGHTING).setMixedBattleBgm("battle_alola_elite"),[c.MOLAYNE]:new Ce(++ue).initForEliteFour(ze.MOLAYNE,!0,i.STEEL).setMixedBattleBgm("battle_alola_elite"),[c.OLIVIA]:new Ce(++ue).initForEliteFour(ze.OLIVIA,!1,i.ROCK).setMixedBattleBgm("battle_alola_elite"),[c.ACEROLA]:new Ce(++ue).initForEliteFour(ze.ACEROLA,!1,i.GHOST).setMixedBattleBgm("battle_alola_elite"),[c.KAHILI]:new Ce(++ue).initForEliteFour(ze.KAHILI,!1,i.FLYING).setMixedBattleBgm("battle_alola_elite"),[c.MARNIE_ELITE]:new Ce(++ue).setName("Marnie").initForEliteFour(ze.MARNIE_ELITE,!1,i.DARK).setMixedBattleBgm("battle_galar_elite"),[c.NESSA_ELITE]:new Ce(++ue).setName("Nessa").initForEliteFour(ze.NESSA_ELITE,!1,i.WATER).setMixedBattleBgm("battle_galar_elite"),[c.BEA_ELITE]:new Ce(++ue).setName("Bea").initForEliteFour(ze.BEA_ELITE,!1,i.FIGHTING).setMixedBattleBgm("battle_galar_elite"),[c.ALLISTER_ELITE]:new Ce(++ue).setName("Allister").initForEliteFour(ze.ALLISTER_ELITE,!0,i.GHOST).setMixedBattleBgm("battle_galar_elite"),[c.RAIHAN_ELITE]:new Ce(++ue).setName("Raihan").initForEliteFour(ze.RAIHAN_ELITE,!0,i.DRAGON).setMixedBattleBgm("battle_galar_elite"),[c.RIKA]:new Ce(++ue).initForEliteFour(ze.RIKA,!1,i.GROUND,5).setMixedBattleBgm("battle_paldea_elite"),[c.POPPY]:new Ce(++ue).initForEliteFour(ze.POPPY,!1,i.STEEL,5).setMixedBattleBgm("battle_paldea_elite"),[c.LARRY_ELITE]:new Ce(++ue).setName("Larry").initForEliteFour(ze.LARRY_ELITE,!0,i.FLYING,5).setMixedBattleBgm("battle_paldea_elite"),[c.HASSEL]:new Ce(++ue).initForEliteFour(ze.HASSEL,!0,i.DRAGON,5).setMixedBattleBgm("battle_paldea_elite"),[c.CRISPIN]:new Ce(++ue).initForEliteFour(ze.CRISPIN,!0,i.FIRE,5).setMixedBattleBgm("battle_bb_elite"),[c.AMARYS]:new Ce(++ue).initForEliteFour(ze.AMARYS,!1,i.STEEL,5).setMixedBattleBgm("battle_bb_elite"),[c.LACEY]:new Ce(++ue).initForEliteFour(ze.LACEY,!1,i.FAIRY,5).setMixedBattleBgm("battle_bb_elite"),[c.DRAYTON]:new Ce(++ue).initForEliteFour(ze.DRAYTON,!0,i.DRAGON,5).setMixedBattleBgm("battle_bb_elite"),[c.BLUE]:new Ce(ue=c.BLUE).initForChampion(!0).setBattleBgm("battle_kanto_champion").setMixedBattleBgm("battle_kanto_champion").setHasDouble("blue_red_double").setDoubleTrainerType(c.RED).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ie([e.ALAKAZAM])).setPartyMemberFunc(1,Ie([e.MACHAMP])).setPartyMemberFunc(2,Ie([e.HO_OH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.RHYPERIOR,e.ELECTIVIRE,e.MAGMORTAR])).setPartyMemberFunc(4,Ie([e.ARCANINE,e.EXEGGUTOR,e.GYARADOS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(5,Ie([e.PIDGEOT],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.MALE})).setInstantTera(3),[c.RED]:new Ce(++ue).initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setHasDouble("red_blue_double").setDoubleTrainerType(c.BLUE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ie([e.PIKACHU],oe.TRAINER,!0,E=>{E.formIndex=8,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.MALE})).setPartyMemberFunc(1,Ie([e.ESPEON,e.UMBREON,e.SYLVEON])).setPartyMemberFunc(2,Ie([e.LUGIA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR])).setPartyMemberFunc(4,Ie([e.SNORLAX],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(5,Ie([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.MALE})).setInstantTera(3),[c.LANCE_CHAMPION]:new Ce(++ue).setName("Lance").initForChampion(!0).setBattleBgm("battle_johto_champion").setMixedBattleBgm("battle_johto_champion").setPartyMemberFunc(0,Ie([e.GYARADOS,e.KINGDRA])).setPartyMemberFunc(1,Ie([e.AERODACTYL])).setPartyMemberFunc(2,Ie([e.SALAMENCE],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})).setPartyMemberFunc(3,Ie([e.CHARIZARD])).setPartyMemberFunc(4,Ie([e.TYRANITAR,e.GARCHOMP,e.KOMMO_O],oe.TRAINER,!0,E=>{E.teraType=i.DRAGON,E.abilityIndex=E.species.speciesId===e.KOMMO_O?1:2})).setPartyMemberFunc(5,Ie([e.DRAGONITE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.setBoss(!0,2)})).setInstantTera(4),[c.STEVEN]:new Ce(++ue).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("steven_wallace_double").setDoubleTrainerType(c.WALLACE).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ie([e.SKARMORY])).setPartyMemberFunc(1,Ie([e.CRADILY,e.ARMALDO])).setPartyMemberFunc(2,Ie([e.AGGRON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(3,Ie([e.GOLURK,e.RUNERIGUS])).setPartyMemberFunc(4,Ie([e.REGIROCK,e.REGICE,e.REGISTEEL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(5,Ie([e.METAGROSS],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})).setInstantTera(4),[c.WALLACE]:new Ce(++ue).initForChampion(!0).setBattleBgm("battle_hoenn_champion_g5").setMixedBattleBgm("battle_hoenn_champion_g6").setHasDouble("wallace_steven_double").setDoubleTrainerType(c.STEVEN).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ie([e.PELIPPER],oe.TRAINER,!0,E=>{E.abilityIndex=1,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.LUDICOLO])).setPartyMemberFunc(2,Ie([e.LATIAS,e.LATIOS],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.SWAMPERT,e.GASTRODON,e.SEISMITOAD])).setPartyMemberFunc(4,Ie([e.REGIELEKI,e.REGIDRAGO],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(5,Ie([e.MILOTIC],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.FEMALE,E.setBoss(!0,2)})).setInstantTera(4),[c.CYNTHIA]:new Ce(++ue).initForChampion(!1).setBattleBgm("battle_sinnoh_champion").setMixedBattleBgm("battle_sinnoh_champion").setPartyMemberFunc(0,Ie([e.SPIRITOMB],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.LUCARIO])).setPartyMemberFunc(2,Ie([e.GIRATINA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.MILOTIC,e.ROSERADE,e.HISUI_ARCANINE],oe.TRAINER,!0,E=>{E.teraType=E.species.type1})).setPartyMemberFunc(4,Ie([e.TOGEKISS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(5,Ie([e.GARCHOMP],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.FEMALE})).setInstantTera(3),[c.ALDER]:new Ce(++ue).initForChampion(!0).setHasDouble("alder_iris_double").setDoubleTrainerType(c.IRIS).setDoubleTitle("champion_double").setBattleBgm("battle_champion_alder").setMixedBattleBgm("battle_champion_alder").setPartyMemberFunc(0,Ie([e.BOUFFALANT,e.BRAVIARY])).setPartyMemberFunc(1,Ie([e.HISUI_LILLIGANT,e.HISUI_ZOROARK,e.BASCULEGION],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(2,Ie([e.ZEKROM],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.KELDEO],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.CHANDELURE,e.KROOKODILE,e.REUNICLUS,e.CONKELDURR],oe.TRAINER,!0,E=>{E.teraType=E.species.speciesId===e.KROOKODILE?i.DARK:E.species.type1})).setPartyMemberFunc(5,Ie([e.VOLCARONA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.setBoss(!0,2)})).setInstantTera(4),[c.IRIS]:new Ce(++ue).initForChampion(!1).setBattleBgm("battle_champion_iris").setMixedBattleBgm("battle_champion_iris").setHasDouble("iris_alder_double").setDoubleTrainerType(c.ALDER).setDoubleTitle("champion_double").setPartyMemberFunc(0,Ie([e.DRUDDIGON])).setPartyMemberFunc(1,Ie([e.ARCHEOPS])).setPartyMemberFunc(2,Ie([e.RESHIRAM],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.SALAMENCE,e.HYDREIGON,e.ARCHALUDON],oe.TRAINER,!0,E=>{E.teraType=i.DRAGON})).setPartyMemberFunc(4,Ie([e.LAPRAS],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName()})).setPartyMemberFunc(5,Ie([e.HAXORUS],oe.TRAINER,!0,E=>{E.abilityIndex=1,E.generateAndPopulateMoveset(),E.gender=At.FEMALE,E.setBoss(!0,2)})).setInstantTera(3),[c.DIANTHA]:new Ce(++ue).initForChampion(!1).setMixedBattleBgm("battle_kalos_champion").setPartyMemberFunc(0,Ie([e.HAWLUCHA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.TREVENANT,e.GOURGEIST])).setPartyMemberFunc(2,Ie([e.XERNEAS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.TYRANTRUM,e.AURORUS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2,E.teraType=E.species.type2})).setPartyMemberFunc(4,Ie([e.GOODRA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(5,Ie([e.GARDEVOIR],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.FEMALE})).setInstantTera(3),[c.KUKUI]:new Ce(++ue).initForChampion(!0).setMixedBattleBgm("battle_champion_kukui").setPartyMemberFunc(0,Ie([e.LYCANROC],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=2})).setPartyMemberFunc(1,Ie([e.MAGNEZONE,e.ALOLA_NINETALES])).setPartyMemberFunc(2,Ie([e.TORNADUS,e.THUNDURUS,e.LANDORUS],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(3,Ie([e.TAPU_KOKO,e.TAPU_FINI],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.SNORLAX],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1})).setPartyMemberFunc(5,Ie([e.INCINEROAR,e.HISUI_DECIDUEYE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.teraType=E.species.type2})).setInstantTera(5),[c.HAU]:new Ce(++ue).initForChampion(!0).setMixedBattleBgm("battle_alola_champion").setPartyMemberFunc(0,Ie([e.ALOLA_RAICHU],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.NOIVERN])).setPartyMemberFunc(2,Ie([e.SOLGALEO],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.TAPU_LELE,e.TAPU_BULU],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.teraType=E.species.type1})).setPartyMemberFunc(4,Ie([e.ZYGARDE],oe.TRAINER,!0,E=>{E.formIndex=1,E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(5,Ie([e.DECIDUEYE,e.PRIMARINA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2),E.gender=E.species.speciesId===e.PRIMARINA?At.FEMALE:At.MALE})).setInstantTera(3),[c.LEON]:new Ce(++ue).initForChampion(!0).setMixedBattleBgm("battle_galar_champion").setPartyMemberFunc(0,Ie([e.AEGISLASH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.RHYPERIOR,e.SEISMITOAD,e.MR_RIME])).setPartyMemberFunc(2,Ie([e.ZACIAN],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.DRAGAPULT])).setPartyMemberFunc(4,Ie([e.RILLABOOM,e.CINDERACE,e.INTELEON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2)})).setPartyMemberFunc(5,Ie([e.CHARIZARD],oe.TRAINER,!0,E=>{E.formIndex=3,E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.MALE})).setInstantTera(3),[c.MUSTARD]:new Ce(++ue).initForChampion(!0).setMixedBattleBgm("battle_mustard").setPartyMemberFunc(0,Ie([e.CORVIKNIGHT],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.KOMMO_O],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(2,Ie([e.GALAR_SLOWBRO,e.GALAR_SLOWKING],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.teraType=i.PSYCHIC})).setPartyMemberFunc(3,Ie([e.GALAR_DARMANITAN],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.BLASTOISE,e.VENUSAUR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.setBoss(!0,2),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(5,Ie([e.URSHIFU],oe.TRAINER,!0,E=>{E.formIndex=He(2,2),E.generateAndPopulateMoveset(),E.generateName(),E.gender=At.MALE,E.pokeball=we.ULTRA_BALL})).setInstantTera(2),[c.GEETA]:new Ce(++ue).initForChampion(!1).setMixedBattleBgm("battle_champion_geeta").setPartyMemberFunc(0,Ie([e.GLIMMORA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.setBoss(!0,2)})).setPartyMemberFunc(1,Ie([e.ESPATHRA,e.VELUZA])).setPartyMemberFunc(2,Ie([e.MIRAIDON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.BAXCALIBUR])).setPartyMemberFunc(4,Ie([e.CHESNAUGHT,e.DELPHOX,e.GRENINJA])).setPartyMemberFunc(5,Ie([e.KINGAMBIT],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1,E.teraType=i.FLYING})).setInstantTera(5),[c.NEMONA]:new Ce(++ue).initForChampion(!1).setMixedBattleBgm("battle_champion_nemona").setPartyMemberFunc(0,Ie([e.LYCANROC],oe.TRAINER,!0,E=>{E.formIndex=0,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.PAWMOT])).setPartyMemberFunc(2,Ie([e.KORAIDON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.GHOLDENGO])).setPartyMemberFunc(4,Ie([e.ARMAROUGE,e.CERULEDGE],oe.TRAINER,!0,E=>{E.teraType=E.species.type2})).setPartyMemberFunc(5,Ie([e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.setBoss(!0,2)})).setInstantTera(4),[c.KIERAN]:new Ce(++ue).initForChampion(!0).setMixedBattleBgm("battle_champion_kieran").setPartyMemberFunc(0,Ie([e.POLIWRATH,e.POLITOED],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.INCINEROAR,e.GRIMMSNARL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=E.species.speciesId===e.INCINEROAR?2:0})).setPartyMemberFunc(2,Ie([e.TERAPAGOS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(3,Ie([e.URSALUNA,e.BLOODMOON_URSALUNA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.OGERPON],oe.TRAINER,!0,E=>{E.formIndex=He(4),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.moveset.some(A=>!Pe(A)&&A.moveId===t.IVY_CUDGEL)||(E.moveset[0]=new Lt(t.IVY_CUDGEL))})).setPartyMemberFunc(5,Ie([e.HYDRAPPLE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.setBoss(!0,2)})).setInstantTera(4),[c.RIVAL]:new Ce(ue=c.RIVAL).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setEncounterBgm(c.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(Xe.RIVAL).setModifierRewardFuncs(()=>j.SUPER_EXP_CHARM,()=>j.EXP_SHARE).setEventModifierRewardFuncs(8).setPartyMemberFunc(0,Ie([e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],oe.TRAINER,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ie([e.PIDGEY,e.HOOTHOOT,e.TAILLOW,e.STARLY,e.PIDOVE,e.FLETCHLING,e.PIKIPEK,e.ROOKIDEE,e.WATTREL],oe.TRAINER,!0)),[c.RIVAL_2]:new Ce(++ue).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.25).setEncounterBgm(c.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(Xe.RIVAL_2).setModifierRewardFuncs(()=>j.EXP_SHARE).setEventModifierRewardFuncs(25).setPartyMemberFunc(0,Ie([e.IVYSAUR,e.CHARMELEON,e.WARTORTLE,e.BAYLEEF,e.QUILAVA,e.CROCONAW,e.GROVYLE,e.COMBUSKEN,e.MARSHTOMP,e.GROTLE,e.MONFERNO,e.PRINPLUP,e.SERVINE,e.PIGNITE,e.DEWOTT,e.QUILLADIN,e.BRAIXEN,e.FROGADIER,e.DARTRIX,e.TORRACAT,e.BRIONNE,e.THWACKEY,e.RABOOT,e.DRIZZILE,e.FLORAGATO,e.CROCALOR,e.QUAXWELL],oe.TRAINER,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ie([e.PIDGEOTTO,e.HOOTHOOT,e.TAILLOW,e.STARAVIA,e.TRANQUILL,e.FLETCHINDER,e.TRUMBEAK,e.CORVISQUIRE,e.WATTREL],oe.TRAINER,!0)).setPartyMemberFunc(2,gL(E=>!jt.hasOwnProperty(E.speciesId)&&!IA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)),[c.RIVAL_3]:new Ce(++ue).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setStaticParty().setMoneyMultiplier(1.5).setEncounterBgm(c.RIVAL).setBattleBgm("battle_rival").setMixedBattleBgm("battle_rival").setPartyTemplates(Xe.RIVAL_3).setPartyMemberFunc(0,Ie([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],oe.TRAINER,!0,E=>E.abilityIndex=0)).setPartyMemberFunc(1,Ie([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],oe.TRAINER,!0)).setPartyMemberFunc(2,gL(E=>!jt.hasOwnProperty(E.speciesId)&&!IA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540),[c.RIVAL_4]:new Ce(++ue).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(1.75).setEncounterBgm(c.RIVAL).setBattleBgm("battle_rival_2").setMixedBattleBgm("battle_rival_2").setPartyTemplates(Xe.RIVAL_4).setModifierRewardFuncs(()=>j.TERA_ORB).setPartyMemberFunc(0,Ie([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],oe.TRAINER,!0,E=>{E.abilityIndex=0,E.teraType=E.species.type1})).setPartyMemberFunc(1,Ie([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],oe.TRAINER,!0)).setPartyMemberFunc(2,gL(E=>!jt.hasOwnProperty(E.speciesId)&&!IA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setInstantTera(0),[c.RIVAL_5]:new Ce(++ue).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(2.25).setEncounterBgm(c.RIVAL).setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(Xe.RIVAL_5).setPartyMemberFunc(0,Ie([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.abilityIndex=0,E.teraType=E.species.type1})).setPartyMemberFunc(1,Ie([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],oe.TRAINER,!0)).setPartyMemberFunc(2,gL(E=>!jt.hasOwnProperty(E.speciesId)&&!IA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ie([e.RAYQUAZA],oe.TRAINER,!0,E=>{E.setBoss(!0,3),E.pokeball=we.MASTER_BALL,E.shiny=EE.getClassicTrainerShinyChance()===0,E.variant=1})).setInstantTera(0),[c.RIVAL_6]:new Ce(++ue).setName("Finn").setHasGenders("Ivy").setHasCharSprite().setTitle("Rival").setBoss().setStaticParty().setMoneyMultiplier(3).setEncounterBgm("final").setBattleBgm("battle_rival_3").setMixedBattleBgm("battle_rival_3").setPartyTemplates(Xe.RIVAL_6).setPartyMemberFunc(0,Ie([e.VENUSAUR,e.CHARIZARD,e.BLASTOISE,e.MEGANIUM,e.TYPHLOSION,e.FERALIGATR,e.SCEPTILE,e.BLAZIKEN,e.SWAMPERT,e.TORTERRA,e.INFERNAPE,e.EMPOLEON,e.SERPERIOR,e.EMBOAR,e.SAMUROTT,e.CHESNAUGHT,e.DELPHOX,e.GRENINJA,e.DECIDUEYE,e.INCINEROAR,e.PRIMARINA,e.RILLABOOM,e.CINDERACE,e.INTELEON,e.MEOWSCARADA,e.SKELEDIRGE,e.QUAQUAVAL],oe.TRAINER,!0,E=>{E.setBoss(!0,3),E.abilityIndex=0,E.teraType=E.species.type1,E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.PIDGEOT,e.NOCTOWL,e.SWELLOW,e.STARAPTOR,e.UNFEZANT,e.TALONFLAME,e.TOUCANNON,e.CORVIKNIGHT,e.KILOWATTREL],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(2,gL(E=>!jt.hasOwnProperty(E.speciesId)&&!IA.hasOwnProperty(E.speciesId)&&E.baseTotal>=450)).setSpeciesFilter(E=>E.baseTotal>=540).setPartyMemberFunc(5,Ie([e.RAYQUAZA],oe.TRAINER,!0,E=>{E.setBoss(),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL,E.shiny=EE.getClassicTrainerShinyChance()===0,E.variant=1,E.formIndex=1,E.generateName()})).setInstantTera(0),[c.ROCKET_BOSS_GIOVANNI_1]:new Ce(ue=c.ROCKET_BOSS_GIOVANNI_1).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[]).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.PERSIAN],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE})).setPartyMemberFunc(1,Ie([e.DUGTRIO,e.ALOLA_DUGTRIO])).setPartyMemberFunc(2,Ie([e.HONCHKROW])).setPartyMemberFunc(3,Ie([e.NIDOQUEEN,e.NIDOKING])).setPartyMemberFunc(4,Ie([e.RHYPERIOR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.abilityIndex=1})).setPartyMemberFunc(5,Ie([e.KANGASKHAN],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName()})),[c.ROCKET_BOSS_GIOVANNI_2]:new Ce(++ue).setName("Giovanni").initForEvilTeamLeader("Rocket Boss",[],!0).setMixedBattleBgm("battle_rocket_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.TYRANITAR],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.GASTRODON,e.SEISMITOAD],oe.TRAINER,!0,E=>{E.species.speciesId===e.GASTRODON?E.abilityIndex=0:E.species.speciesId===e.SEISMITOAD&&(E.abilityIndex=2)})).setPartyMemberFunc(2,Ie([e.GARCHOMP,e.EXCADRILL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.species.speciesId===e.GARCHOMP?E.abilityIndex=2:E.species.speciesId===e.EXCADRILL&&(E.abilityIndex=0)})).setPartyMemberFunc(3,Ie([e.RHYPERIOR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.abilityIndex=1})).setPartyMemberFunc(4,Ie([e.KANGASKHAN],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(5,Ie([e.MEWTWO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.MAXIE]:new Ce(++ue).setName("Maxie").initForEvilTeamLeader("Magma Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.SOLROCK])).setPartyMemberFunc(1,Ie([e.TALONFLAME])).setPartyMemberFunc(2,Ie([e.WEEZING,e.GALAR_WEEZING])).setPartyMemberFunc(3,Ie([e.TORKOAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ie([e.DONPHAN])).setPartyMemberFunc(5,Ie([e.CAMERUPT],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})),[c.MAXIE_2]:new Ce(++ue).setName("Maxie").initForEvilTeamLeader("Magma Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.TYPHLOSION,e.SOLROCK],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.NINETALES,e.TORKOAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.NINETALES?E.abilityIndex=2:E.species.speciesId===e.TORKOAL&&(E.abilityIndex=1)})).setPartyMemberFunc(2,Ie([e.SCOVILLAIN],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=0})).setPartyMemberFunc(3,Ie([e.GREAT_TUSK],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.CAMERUPT],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})).setPartyMemberFunc(5,Ie([e.GROUDON],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.ARCHIE]:new Ce(++ue).setName("Archie").initForEvilTeamLeader("Aqua Boss",[]).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.LUDICOLO])).setPartyMemberFunc(1,Ie([e.PELIPPER],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(2,Ie([e.MUK,e.ALOLA_MUK])).setPartyMemberFunc(3,Ie([e.WAILORD])).setPartyMemberFunc(4,Ie([e.QWILFISH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(5,Ie([e.SHARPEDO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})),[c.ARCHIE_2]:new Ce(++ue).setName("Archie").initForEvilTeamLeader("Aqua Boss",[],!0).setMixedBattleBgm("battle_aqua_magma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.LUDICOLO,e.EMPOLEON],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.POLITOED,e.PELIPPER],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.POLITOED?E.abilityIndex=2:E.species.speciesId===e.PELIPPER&&(E.abilityIndex=1)})).setPartyMemberFunc(2,Ie([e.DHELMISE])).setPartyMemberFunc(3,Ie([e.OVERQWIL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ie([e.SHARPEDO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})).setPartyMemberFunc(5,Ie([e.KYOGRE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.CYRUS]:new Ce(++ue).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[]).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.GYARADOS])).setPartyMemberFunc(1,Ie([e.HONCHKROW,e.HISUI_BRAVIARY])).setPartyMemberFunc(2,Ie([e.MAGNEZONE])).setPartyMemberFunc(3,Ie([e.UXIE,e.MESPRIT,e.AZELF])).setPartyMemberFunc(4,Ie([e.HOUNDOOM],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(5,Ie([e.WEAVILE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.gender=At.MALE})),[c.CYRUS_2]:new Ce(++ue).setName("Cyrus").initForEvilTeamLeader("Galactic Boss",[],!0).setMixedBattleBgm("battle_galactic_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.CROBAT],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.MAGNEZONE])).setPartyMemberFunc(2,Ie([e.UXIE,e.MESPRIT,e.AZELF],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(3,Ie([e.HOUNDOOM],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(4,Ie([e.WEAVILE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.gender=At.MALE})).setPartyMemberFunc(5,Ie([e.DIALGA,e.PALKIA],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.GHETSIS]:new Ce(++ue).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[]).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.COFAGRIGUS])).setPartyMemberFunc(1,Ie([e.SEISMITOAD])).setPartyMemberFunc(2,Ie([e.GALVANTULA,e.EELEKTROSS])).setPartyMemberFunc(3,Ie([e.DRAPION,e.TOXICROAK])).setPartyMemberFunc(4,Ie([e.KINGAMBIT])).setPartyMemberFunc(5,Ie([e.HYDREIGON],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.gender=At.MALE})),[c.GHETSIS_2]:new Ce(++ue).setName("Ghetsis").initForEvilTeamLeader("Plasma Boss",[],!0).setMixedBattleBgm("battle_plasma_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.RUNERIGUS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset()})).setPartyMemberFunc(1,Ie([e.JELLICENT,e.BASCULEGION],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE,E.formIndex=0})).setPartyMemberFunc(2,Ie([e.KINGAMBIT])).setPartyMemberFunc(3,Ie([e.VOLCARONA,e.IRON_MOTH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.HYDREIGON,e.IRON_JUGULIS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.species.speciesId===e.HYDREIGON?E.gender=At.MALE:E.species.speciesId===e.IRON_JUGULIS&&(E.gender=At.GENDERLESS)})).setPartyMemberFunc(5,Ie([e.KYUREM],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.LYSANDRE]:new Ce(++ue).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[]).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.MIENSHAO])).setPartyMemberFunc(1,Ie([e.HONCHKROW,e.TALONFLAME])).setPartyMemberFunc(2,Ie([e.PYROAR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.MALE})).setPartyMemberFunc(3,Ie([e.DRAGALGE,e.CLAWITZER],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.DRAGALGE?E.abilityIndex=2:E.species.speciesId===e.CLAWITZER&&(E.abilityIndex=0)})).setPartyMemberFunc(4,Ie([e.GALLADE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(5,Ie([e.GYARADOS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})),[c.LYSANDRE_2]:new Ce(++ue).setName("Lysandre").initForEvilTeamLeader("Flare Boss",[],!0).setMixedBattleBgm("battle_flare_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.PYROAR],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=At.MALE})).setPartyMemberFunc(1,Ie([e.DRAGALGE,e.CLAWITZER],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.DRAGALGE?E.abilityIndex=2:E.species.speciesId===e.CLAWITZER&&(E.abilityIndex=0)})).setPartyMemberFunc(2,Ie([e.AEGISLASH,e.HISUI_GOODRA])).setPartyMemberFunc(3,Ie([e.IRON_VALIANT],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.GYARADOS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=1,E.generateName(),E.gender=At.MALE})).setPartyMemberFunc(5,Ie([e.ZYGARDE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL,E.formIndex=0})),[c.LUSAMINE]:new Ce(++ue).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[]).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.CLEFABLE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.gender=At.FEMALE})).setPartyMemberFunc(1,Ie([e.LILLIGANT,e.HISUI_LILLIGANT])).setPartyMemberFunc(2,Ie([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(3,Ie([e.GALAR_SLOWBRO,e.GALAR_SLOWKING])).setPartyMemberFunc(4,Ie([e.BEWEAR])).setPartyMemberFunc(5,Ie([e.NIHILEGO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})),[c.LUSAMINE_2]:new Ce(++ue).setName("Lusamine").initForEvilTeamLeader("Aether Boss",[],!0).setMixedBattleBgm("battle_aether_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.CLEFABLE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=At.FEMALE})).setPartyMemberFunc(1,Ie([e.MILOTIC,e.PRIMARINA])).setPartyMemberFunc(2,Ie([e.SILVALLY],oe.TRAINER,!0,E=>{E.formIndex=He(18),E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL,E.moveset.some(A=>!Pe(A)&&A.moveId===t.MULTI_ATTACK)||(E.moveset[0]=new Lt(t.MULTI_ATTACK))})).setPartyMemberFunc(3,Ie([e.PHEROMOSA],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.NIHILEGO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(5,Ie([e.NECROZMA],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.formIndex=2,E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.GUZMA]:new Ce(++ue).setName("Guzma").initForEvilTeamLeader("Skull Boss",[]).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.YANMEGA,e.LOKIX],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.YANMEGA?E.abilityIndex=1:E.species.speciesId===e.LOKIX&&(E.abilityIndex=2)})).setPartyMemberFunc(1,Ie([e.HERACROSS])).setPartyMemberFunc(2,Ie([e.SCIZOR,e.KLEAVOR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.species.speciesId===e.SCIZOR?E.abilityIndex=1:E.species.speciesId===e.KLEAVOR&&(E.abilityIndex=2)})).setPartyMemberFunc(3,Ie([e.GALVANTULA,e.VIKAVOLT])).setPartyMemberFunc(4,Ie([e.PINSIR],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=we.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(5,Ie([e.GOLISOPOD],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.gender=At.MALE})),[c.GUZMA_2]:new Ce(++ue).setName("Guzma").initForEvilTeamLeader("Skull Boss",[],!0).setMixedBattleBgm("battle_skull_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.GOLISOPOD],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.abilityIndex=2,E.gender=At.MALE})).setPartyMemberFunc(1,Ie([e.BUZZWOLE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(2,Ie([e.CRAWDAUNT,e.HISUI_SAMUROTT],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=2})).setPartyMemberFunc(3,Ie([e.XURKITREE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.GENESECT],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.formIndex=He(4,1),E.moveset.some(A=>!Pe(A)&&A.moveId===t.TECHNO_BLAST)||(E.moveset[2]=new Lt(t.TECHNO_BLAST))})).setPartyMemberFunc(5,Ie([e.PINSIR],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.formIndex=1,E.generateAndPopulateMoveset(),E.generateName(),E.pokeball=we.ULTRA_BALL})),[c.ROSE]:new Ce(++ue).setName("Rose").initForEvilTeamLeader("Macro Boss",[]).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.ARCHALUDON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.ESCAVALIER,e.FERROTHORN],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(2,Ie([e.SIRFETCHD,e.MR_RIME],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(3,Ie([e.CORVIKNIGHT],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.KLINKLANG,e.PERRSERKER],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(5,Ie([e.COPPERAJAH],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=we.ULTRA_BALL,E.gender=At.FEMALE})),[c.ROSE_2]:new Ce(++ue).setName("Rose").initForEvilTeamLeader("Macro Boss",[],!0).setMixedBattleBgm("battle_macro_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.ARCHALUDON],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.AEGISLASH,e.GHOLDENGO],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(2,Ie([e.DRACOZOLT,e.DRACOVISH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL,E.abilityIndex=1})).setPartyMemberFunc(3,Ie([e.MELMETAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(4,Ie([e.GALAR_ARTICUNO,e.GALAR_ZAPDOS,e.GALAR_MOLTRES],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(5,Ie([e.COPPERAJAH],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName(),E.pokeball=we.ULTRA_BALL,E.gender=At.FEMALE})),[c.PENNY]:new Ce(++ue).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[]).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.JOLTEON,e.LEAFEON])).setPartyMemberFunc(1,Ie([e.VAPOREON,e.UMBREON])).setPartyMemberFunc(2,Ie([e.ESPEON,e.GLACEON])).setPartyMemberFunc(3,Ie([e.FLAREON])).setPartyMemberFunc(4,Ie([e.SYLVEON],oe.TRAINER,!0,E=>{E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=At.FEMALE})).setPartyMemberFunc(5,Ie([e.EEVEE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.pokeball=we.ULTRA_BALL,E.generateName()})).setInstantTera(4),[c.PENNY_2]:new Ce(++ue).setName("Cassiopeia").initForEvilTeamLeader("Star Boss",[],!0).setMixedBattleBgm("battle_star_boss").setVictoryBgm("victory_team_plasma").setPartyMemberFunc(0,Ie([e.SYLVEON],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.abilityIndex=2,E.generateAndPopulateMoveset(),E.gender=At.FEMALE})).setPartyMemberFunc(1,Ie([e.ROTOM],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=He(5,1)})).setPartyMemberFunc(2,Ie([e.RAIKOU,e.ENTEI,e.SUICUNE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(3,Ie([e.REVAVROOM],oe.TRAINER,!0,E=>{E.formIndex=He(5,1),E.generateAndPopulateMoveset(),E.pokeball=we.ROGUE_BALL})).setPartyMemberFunc(4,Ie([e.ZAMAZENTA],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})).setPartyMemberFunc(5,Ie([e.EEVEE],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=2,E.generateName(),E.pokeball=we.ULTRA_BALL})).setInstantTera(0),[c.BUCK]:new Ce(++ue).setName("Buck").initForStatTrainer(!0).setPartyMemberFunc(0,Ie([e.CLAYDOL],oe.TRAINER,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.VENUSAUR,e.COALOSSAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.GREAT_BALL,E.species.speciesId===e.VENUSAUR?(E.formIndex=2,E.abilityIndex=2):E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ie([e.AGGRON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ie([e.TORKOAL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.abilityIndex=1})).setPartyMemberFunc(4,Ie([e.GREAT_TUSK],oe.TRAINER,!0)).setPartyMemberFunc(5,Ie([e.HEATRAN],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.CHERYL]:new Ce(++ue).setName("Cheryl").initForStatTrainer().setPartyMemberFunc(0,Ie([e.BLISSEY],oe.TRAINER,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.SNORLAX,e.LAPRAS],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ie([e.AUDINO],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ie([e.GOODRA],oe.TRAINER,!0)).setPartyMemberFunc(4,Ie([e.IRON_HANDS],oe.TRAINER,!0)).setPartyMemberFunc(5,Ie([e.CRESSELIA,e.ENAMORUS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.ENAMORUS&&(E.formIndex=1,E.generateName()),E.pokeball=we.MASTER_BALL})),[c.MARLEY]:new Ce(++ue).setName("Marley").initForStatTrainer().setPartyMemberFunc(0,Ie([e.ARCANINE],oe.TRAINER,!0,E=>{E.setBoss(!0,3),E.generateAndPopulateMoveset(),E.pokeball=we.ULTRA_BALL})).setPartyMemberFunc(1,Ie([e.CINDERACE,e.INTELEON],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ie([e.AERODACTYL],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.formIndex=1,E.generateName()})).setPartyMemberFunc(3,Ie([e.DRAGAPULT],oe.TRAINER,!0)).setPartyMemberFunc(4,Ie([e.IRON_BUNDLE],oe.TRAINER,!0)).setPartyMemberFunc(5,Ie([e.REGIELEKI],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.MIRA]:new Ce(++ue).setName("Mira").initForStatTrainer().setPartyMemberFunc(0,Ie([e.ALAKAZAM],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=we.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ie([e.GENGAR,e.HATTERENE],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.GREAT_BALL,E.formIndex=E.species.speciesId===e.GENGAR?2:1,E.generateName()})).setPartyMemberFunc(2,Ie([e.FLUTTER_MANE],oe.TRAINER,!0)).setPartyMemberFunc(3,Ie([e.HYDREIGON],oe.TRAINER,!0)).setPartyMemberFunc(4,Ie([e.MAGNEZONE],oe.TRAINER,!0)).setPartyMemberFunc(5,Ie([e.LATIOS,e.LATIAS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.pokeball=we.MASTER_BALL})),[c.RILEY]:new Ce(++ue).setName("Riley").initForStatTrainer(!0).setPartyMemberFunc(0,Ie([e.LUCARIO],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.formIndex=1,E.pokeball=we.ULTRA_BALL,E.generateName()})).setPartyMemberFunc(1,Ie([e.RILLABOOM,e.CENTISKORCH],oe.TRAINER,!0,E=>{E.generateAndPopulateMoveset(),E.pokeball=we.GREAT_BALL,E.formIndex=1,E.generateName()})).setPartyMemberFunc(2,Ie([e.TYRANITAR],oe.TRAINER,!0)).setPartyMemberFunc(3,Ie([e.ROARING_MOON],oe.TRAINER,!0)).setPartyMemberFunc(4,Ie([e.URSALUNA],oe.TRAINER,!0)).setPartyMemberFunc(5,Ie([e.REGIGIGAS,e.LANDORUS],oe.TRAINER,!0,E=>{E.setBoss(!0,2),E.generateAndPopulateMoveset(),E.species.speciesId===e.LANDORUS&&(E.formIndex=1,E.generateName()),E.pokeball=we.MASTER_BALL})),[c.VICTOR]:new Ce(++ue).setTitle("The Winstrates").setLocalizedName("Victor").setMoneyMultiplier(1).setPartyTemplates(Xe.ONE_AVG_ONE_STRONG),[c.VICTORIA]:new Ce(++ue).setTitle("The Winstrates").setLocalizedName("Victoria").setMoneyMultiplier(1).setPartyTemplates(Xe.ONE_AVG_ONE_STRONG),[c.VIVI]:new Ce(++ue).setTitle("The Winstrates").setLocalizedName("Vivi").setMoneyMultiplier(1).setPartyTemplates(Xe.TWO_AVG_ONE_STRONG),[c.VICKY]:new Ce(++ue).setTitle("The Winstrates").setLocalizedName("Vicky").setMoneyMultiplier(1).setPartyTemplates(Xe.ONE_AVG),[c.VITO]:new Ce(++ue).setTitle("The Winstrates").setLocalizedName("Vito").setMoneyMultiplier(2).setPartyTemplates(new QA(new Rt(3,Ze.AVERAGE),new Rt(2,Ze.STRONG))),[c.BUG_TYPE_SUPERFAN]:new Ce(++ue).setMoneyMultiplier(2.25).setEncounterBgm(c.ACE_TRAINER).setPartyTemplates(new Rt(2,Ze.AVERAGE)),[c.EXPERT_POKEMON_BREEDER]:new Ce(++ue).setMoneyMultiplier(3).setEncounterBgm(c.ACE_TRAINER).setLocalizedName("Expert Pokemon Breeder").setPartyTemplates(new Rt(3,Ze.AVERAGE)),[c.FUTURE_SELF_M]:new Ce(++ue).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self M").setPartyTemplates(new Rt(6,Ze.STRONG)),[c.FUTURE_SELF_F]:new Ce(++ue).setMoneyMultiplier(0).setEncounterBgm("mystery_encounter_weird_dream").setBattleBgm("mystery_encounter_weird_dream").setMixedBattleBgm("mystery_encounter_weird_dream").setVictoryBgm("mystery_encounter_weird_dream").setLocalizedName("Future Self F").setPartyTemplates(new Rt(6,Ze.STRONG))};var uE=(E=>(E[E.REGULAR=0]="REGULAR",E[E.PLUS=1]="PLUS",E[E.PREMIUM=2]="PREMIUM",E[E.GOLDEN=3]="GOLDEN",E))(uE||{});const sg=class sg{constructor(A,s,R){this.description=s,this.voucherType=A,this.conditionFunc=R}validate(A){return!this.conditionFunc||this.conditionFunc(A)}getName(A){return zC(this.voucherType)}getIconImage(){return Jn(this.voucherType)}getTier(){switch(this.voucherType){case 0:return wL.COMMON;case 1:return wL.GREAT;case 2:return wL.ULTRA;case 3:return wL.ROGUE}}};o(sg,"Voucher");let ES=sg;function zC(E){switch(E){case 0:return u.t("voucher:eggVoucher");case 1:return u.t("voucher:eggVoucherPlus");case 2:return u.t("voucher:eggVoucherPremium");case 3:return u.t("voucher:eggVoucherGold")}}o(zC,"getVoucherTypeName");function Jn(E){switch(E){case 0:return"coupon";case 1:return"pair_of_tickets";case 2:return"mystic_ticket";case 3:return"golden_mystic_ticket"}}o(Jn,"getVoucherTypeIcon");const Us={};function r9(){for(const s of[ht.CLASSIC_VICTORY]){const R=s.score>=150?3:s.score>=100?2:s.score>=75?1:0;Us[s.id]=new ES(R,ff(s.localizationKey))}const E=Object.keys(tE).filter(s=>tE[s].isBoss&&tE[s].getDerivedType()!==c.RIVAL&&tE[s].hasVoucher);for(const s of E){const R=tE[s].moneyMultiplier<10?1:2,n=c[s],I=tE[s].name,r=tE[s],L=r.title?` (${r.title})`:"";Us[n]=new ES(R,`${u.t("voucher:defeatTrainer",{trainerName:I})} ${L}`)}const A=Object.keys(Us);for(const s of A)Us[s].id=s}o(r9,"initVouchers");var yE=(E=>(E[E.PLAYER=0]="PLAYER",E[E.WILD=1]="WILD",E[E.TRAINER=2]="TRAINER",E[E.ENEMY_BUFF=3]="ENEMY_BUFF",E[E.DAILY_STARTER=4]="DAILY_STARTER",E))(yE||{});const Rg=class Rg{constructor(A,s,R,n,I){this.localeKey=A,this.iconImage=s,this.group=n,this.soundName=I??"se/restore",this.newModifierFunc=R}get name(){return u.t(`${this.localeKey}.name`)}getDescription(){return u.t(`${this.localeKey}.description`)}setTier(A){this.tier=A}getOrInferTier(A=0){if(this.tier)return this.tier;if(!this.id)return null;let s;switch(A){case 0:s=[A,2,1];break;case 1:s=[A,0,2];break;case 2:s=[A,0,1];break;default:s=[A];break}for(const R of s){const n=aS(R);for(const I of dE(V))if(n.hasOwnProperty(I)&&n[I].find(r=>r.modifierType.id===this.id))return this.tier=I}return null}withIdFromFunc(A){return this.id=Object.keys(j).find(s=>j[s]===A),this}withTierFromPool(A=0,s,R=0){let n;for(const I of Object.values(aS(A)))for(const r of I)if(this.id===r.modifierType.id){let L;if(r.weight instanceof Function?L=s?r.weight(s,R):0:L=r.weight,L>0)return this.tier=r.modifierType.tier,this;Pe(n)&&(n=r.modifierType.tier)}return n&&(this.tier=n),this}newModifier(...A){return this.newModifierFunc&&this.newModifierFunc(this,A)}};o(Rg,"ModifierType");let iA=Rg;const Og=class Og extends iA{constructor(A){super(null,null,null),this.genTypeFunc=A}generateType(A,s){const R=this.genTypeFunc(A,s);return R&&(R.id=this.id,R.setTier(this.tier)),R}};o(Og,"ModifierTypeGenerator");let YE=Og;const ng=class ng extends iA{constructor(A,s,R){super("",A,(n,I)=>new xM(this,s,R),"pb","se/pb_bounce_1"),this.pokeballType=s,this.count=R}get name(){return u.t("modifierType:ModifierType.AddPokeballModifierType.name",{modifierCount:this.count,pokeballName:ZC(this.pokeballType)})}getDescription(){return u.t("modifierType:ModifierType.AddPokeballModifierType.description",{modifierCount:this.count,pokeballName:ZC(this.pokeballType),catchRate:XC(this.pokeballType)>-1?`${XC(this.pokeballType)}x`:"100%",pokeballAmount:`${a.pokeballCounts[this.pokeballType]}`})}};o(ng,"AddPokeballModifierType");let hi=ng;const ag=class ag extends iA{constructor(A,s){super("",Jn(A),(R,n)=>new bM(this,A,s),"voucher"),this.count=s,this.voucherType=A}get name(){return u.t("modifierType:ModifierType.AddVoucherModifierType.name",{modifierCount:this.count,voucherTypeName:zC(this.voucherType)})}getDescription(){return u.t("modifierType:ModifierType.AddVoucherModifierType.description",{modifierCount:this.count,voucherTypeName:zC(this.voucherType)})}};o(ag,"AddVoucherModifierType");let XL=ag;const ig=class ig extends iA{constructor(A,s,R,n,I,r){super(A,s,R,I,r),this.selectFilter=n}};o(ig,"PokemonModifierType");let oR=ig;const Ig=class Ig extends oR{constructor(A,s,R,n,I){super(A,s,R,r=>{const L=this.newModifier(r),N=a.findModifier(C=>C instanceof Ft&&C.pokemonId===r.id&&C.matchType(L)),l=L.getMaxStackCount();return l?N&&N.stackCount===l?u.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.tooMany",{pokemonName:ee(r)}):null:u.t("modifierType:ModifierType.PokemonHeldItemModifierType.extra.inoperable",{pokemonName:ee(r)})},n,I)}newModifier(...A){return super.newModifier(...A)}};o(Ig,"PokemonHeldItemModifierType");let GA=Ig;const rg=class rg extends oR{constructor(A){super("",`${i[A].toLowerCase()}_tera_shard`,(s,R)=>new ZM(s,R[0].id,A),s=>{var R;return[s.species.speciesId,(R=s.fusionSpecies)==null?void 0:R.speciesId].filter(n=>n===e.TERAPAGOS||n===e.OGERPON||n===e.SHEDINJA).length>0?kE.NoEffectMessage:null},"tera_shard"),this.teraType=A}get name(){return u.t("modifierType:ModifierType.TerastallizeModifierType.name",{teraType:u.t(`pokemonInfo:Type.${i[this.teraType]}`)})}getDescription(){return u.t("modifierType:ModifierType.TerastallizeModifierType.description",{teraType:u.t(`pokemonInfo:Type.${i[this.teraType]}`)})}getPregenArgs(){return[this.teraType]}};o(rg,"TerastallizeModifierType");let jC=rg;const Lg=class Lg extends oR{constructor(A,s,R,n,I=!1,r,L,N){super(A,s,r||((l,C)=>new ai(this,C[0].id,this.restorePoints,this.restorePercent,this.healStatus,!1)),L||(l=>!l.hp||l.isFullHp()&&(!this.healStatus||!l.status&&!l.getTag(w.CONFUSED))?kE.NoEffectMessage:null),N||"potion"),this.restorePoints=R,this.restorePercent=n,this.healStatus=I}getDescription(){return this.restorePoints?u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.description",{restorePoints:this.restorePoints,restorePercent:this.restorePercent}):this.healStatus?u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fullyWithStatus"):u.t("modifierType:ModifierType.PokemonHpRestoreModifierType.extra.fully")}};o(Lg,"PokemonHpRestoreModifierType");let Ka=Lg;const og=class og extends Ka{constructor(A,s,R){super(A,s,0,R,!1,(n,I)=>new ai(this,I[0].id,0,this.restorePercent,!1,!0),n=>n.isFainted()?null:kE.NoEffectMessage,"revive"),this.selectFilter=n=>n.hp?kE.NoEffectMessage:null}getDescription(){return u.t("modifierType:ModifierType.PokemonReviveModifierType.description",{restorePercent:this.restorePercent})}};o(og,"PokemonReviveModifierType");let qC=og;const Tg=class Tg extends oR{constructor(A,s){super(A,s,(R,n)=>new XM(this,n[0].id),R=>!R.hp||!R.status&&!R.getTag(w.CONFUSED)?kE.NoEffectMessage:null)}getDescription(){return u.t("modifierType:ModifierType.PokemonStatusHealModifierType.description")}};o(Tg,"PokemonStatusHealModifierType");let _h=Tg;const Sg=class Sg extends oR{constructor(A,s,R,n,I,r){super(A,s,R,n,r),this.moveSelectFilter=I}};o(Sg,"PokemonMoveModifierType");let wr=Sg;const Ng=class Ng extends wr{constructor(A,s,R){super(A,s,(n,I)=>new QM(this,I[0].id,I[1],this.restorePoints),n=>null,n=>n.ppUsed?null:kE.NoEffectMessage,"ether"),this.restorePoints=R}getDescription(){return this.restorePoints>-1?u.t("modifierType:ModifierType.PokemonPpRestoreModifierType.description",{restorePoints:this.restorePoints}):u.t("modifierType:ModifierType.PokemonPpRestoreModifierType.extra.fully")}};o(Ng,"PokemonPpRestoreModifierType");let sS=Ng;const lg=class lg extends oR{constructor(A,s,R){super(A,s,(n,I)=>new $M(this,I[0].id,this.restorePoints),n=>n.getMoveset().filter(I=>I.ppUsed).length?null:kE.NoEffectMessage,"elixir"),this.restorePoints=R}getDescription(){return this.restorePoints>-1?u.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.description",{restorePoints:this.restorePoints}):u.t("modifierType:ModifierType.PokemonAllMovePpRestoreModifierType.extra.fully")}};o(lg,"PokemonAllMovePpRestoreModifierType");let eu=lg;const Cg=class Cg extends wr{constructor(A,s,R){super(A,s,(n,I)=>new JM(this,I[0].id,I[1],this.upPoints),n=>null,n=>n.getMove().pp<5||n.ppUp>=3||n.maxPpOverride?kE.NoEffectMessage:null,"ppUp"),this.upPoints=R}getDescription(){return u.t("modifierType:ModifierType.PokemonPpUpModifierType.description",{upPoints:this.upPoints})}};o(Cg,"PokemonPpUpModifierType");let RS=Cg;const ug=class ug extends oR{constructor(A){var s;super("",`mint_${((s=$R(p).find(R=>al(A,p[R])>1))==null?void 0:s.toLowerCase())||"neutral"}`,(R,n)=>new zM(this,n[0].id,this.nature),R=>R.getNature()===this.nature?kE.NoEffectMessage:null,"mint"),this.nature=A}get name(){return u.t("modifierType:ModifierType.PokemonNatureChangeModifierType.name",{natureName:zR(this.nature)})}getDescription(){return u.t("modifierType:ModifierType.PokemonNatureChangeModifierType.description",{natureName:zR(this.nature,!0,!0,!0)})}};o(ug,"PokemonNatureChangeModifierType");let tu=ug;const Ug=class Ug extends oR{constructor(A,s,R){super(A,s,(n,I)=>new yN(n,I[0].id,I[1]),n=>n.getLearnableLevelMoves().length?null:kE.NoEffectMessage,R)}};o(Ug,"RememberMoveModifierType");let _r=Ug;const Dg=class Dg extends iA{constructor(A,s,R){super(A,s,(n,I)=>new NL(this,R),"lure"),this.maxBattles=R}getDescription(){return u.t("modifierType:ModifierType.DoubleBattleChanceBoosterModifierType.description",{battleCount:this.maxBattles})}};o(Dg,"DoubleBattleChanceBoosterModifierType");let QL=Dg;const Mg=class Mg extends iA{constructor(A){const s=Lu.items[A];super("",s,(R,n)=>new lL(this,this.stat,5)),this.stat=A,this.nameKey=s,this.quantityKey=A!==p.ACC?"percentage":"stage"}get name(){return u.t(`modifierType:TempStatStageBoosterItem.${this.nameKey}`)}getDescription(){return u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:u.t(mE(this.stat)),amount:u.t(`modifierType:ModifierType.TempStatStageBoosterModifierType.extra.${this.quantityKey}`)})}getPregenArgs(){return[this.stat]}};o(Mg,"TempStatStageBoosterModifierType");let Au=Mg;const cg=class cg extends GA{constructor(A){super("",`${gt[A].toLowerCase()}_berry`,(s,R)=>new GE(s,R[0].id,A),"berry"),this.berryType=A}get name(){return rf(this.berryType)}getDescription(){return $j(this.berryType)}getPregenArgs(){return[this.berryType]}};o(cg,"BerryModifierType");let OS=cg;var Ph=(E=>(E[E.SILK_SCARF=0]="SILK_SCARF",E[E.BLACK_BELT=1]="BLACK_BELT",E[E.SHARP_BEAK=2]="SHARP_BEAK",E[E.POISON_BARB=3]="POISON_BARB",E[E.SOFT_SAND=4]="SOFT_SAND",E[E.HARD_STONE=5]="HARD_STONE",E[E.SILVER_POWDER=6]="SILVER_POWDER",E[E.SPELL_TAG=7]="SPELL_TAG",E[E.METAL_COAT=8]="METAL_COAT",E[E.CHARCOAL=9]="CHARCOAL",E[E.MYSTIC_WATER=10]="MYSTIC_WATER",E[E.MIRACLE_SEED=11]="MIRACLE_SEED",E[E.MAGNET=12]="MAGNET",E[E.TWISTED_SPOON=13]="TWISTED_SPOON",E[E.NEVER_MELT_ICE=14]="NEVER_MELT_ICE",E[E.DRAGON_FANG=15]="DRAGON_FANG",E[E.BLACK_GLASSES=16]="BLACK_GLASSES",E[E.FAIRY_FEATHER=17]="FAIRY_FEATHER",E))(Ph||{});const hg=class hg extends GA{constructor(A,s){var R;super("",`${(R=Ph[A])==null?void 0:R.toLowerCase()}`,(n,I)=>new Bn(this,I[0].id,A,s)),this.moveType=A,this.boostPercent=s}get name(){var A;return u.t(`modifierType:AttackTypeBoosterItem.${(A=Ph[this.moveType])==null?void 0:A.toLowerCase()}`)}getDescription(){return u.t("modifierType:ModifierType.AttackTypeBoosterModifierType.description",{moveType:u.t(`pokemonInfo:Type.${i[this.moveType]}`)})}getPregenArgs(){return[this.moveType]}};o(hg,"AttackTypeBoosterModifierType");let Eu=hg;const _g=class _g extends GA{constructor(A){const s=ou.items[A];super(`modifierType:SpeciesBoosterItem.${A}`,A.toLowerCase(),(R,n)=>new KI(R,n[0].id,s.stats,s.multiplier,s.species)),this.key=A}getPregenArgs(){return[this.key]}};o(_g,"SpeciesStatBoosterModifierType");let su=_g;const Pg=class Pg extends oR{constructor(A,s){super(A,s,(R,n)=>new WN(this,n[0].id),R=>null)}getDescription(){let A=1;const s=a.modifiers.find(R=>R instanceof ni);return s&&(A+=s.stackCount),u.t("modifierType:ModifierType.PokemonLevelIncrementModifierType.description",{levels:A})}};o(Pg,"PokemonLevelIncrementModifierType");let Gh=Pg;const Gg=class Gg extends iA{constructor(A,s){super(A,s,(R,n)=>new WN(this,-1))}getDescription(){let A=1;const s=a.modifiers.find(R=>R instanceof ni);return s&&(A+=s.stackCount),u.t("modifierType:ModifierType.AllPokemonLevelIncrementModifierType.description",{levels:A})}};o(Gg,"AllPokemonLevelIncrementModifierType");let dh=Gg;const dg=class dg extends GA{constructor(A){const s=ru.items[A];super("",s,(R,n)=>new HN(this,n[0].id,this.stat)),this.stat=A,this.key=s}get name(){return u.t(`modifierType:BaseStatBoosterItem.${this.key}`)}getDescription(){return u.t("modifierType:ModifierType.BaseStatBoosterModifierType.description",{stat:u.t(mE(this.stat))})}getPregenArgs(){return[this.stat]}};o(dg,"BaseStatBoosterModifierType");let Ru=dg;const Hg=class Hg extends GA{constructor(A){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_SHUCKLE_JUICE","berry_juice",(s,R)=>new BN(this,R[0].id,this.statModifier)),this.statModifier=A}getDescription(){return u.t("modifierType:ModifierType.PokemonBaseStatTotalModifierType.description",{increaseDecrease:u.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.increase":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.decrease"),blessCurse:u.t(this.statModifier>=0?"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.blessed":"modifierType:ModifierType.PokemonBaseStatTotalModifierType.extra.cursed"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier]}};o(Hg,"PokemonBaseStatTotalModifierType");let Ou=Hg;const fg=class fg extends GA{constructor(A,s){super("modifierType:ModifierType.MYSTERY_ENCOUNTER_OLD_GATEAU","old_gateau",(R,n)=>new gN(this,n[0].id,this.statModifier,this.stats)),this.statModifier=A,this.stats=s}getDescription(){return u.t("modifierType:ModifierType.PokemonBaseStatFlatModifierType.description",{stats:this.stats.map(A=>u.t(mE(A))).join("/"),statValue:this.statModifier})}getPregenArgs(){return[this.statModifier,this.stats]}};o(fg,"PokemonBaseStatFlatModifierType");let nu=fg;const Bg=class Bg extends iA{constructor(A,s,R,n){super(A,s,n||((I,r)=>new ai(this,-1,0,100,!1))),this.descriptionKey=R}getDescription(){return u.t(`${this.descriptionKey||"modifierType:ModifierType.AllPokemonFullHpRestoreModifierType"}.description`)}};o(Bg,"AllPokemonFullHpRestoreModifierType");let Hh=Bg;const gg=class gg extends Hh{constructor(A,s){super(A,s,"modifierType:ModifierType.AllPokemonFullReviveModifierType",(R,n)=>new ai(this,-1,0,100,!1,!0))}};o(gg,"AllPokemonFullReviveModifierType");let fh=gg;const mg=class mg extends iA{constructor(A,s,R,n){super(A,s,(I,r)=>new e0(this,R),"money","se/buy"),this.moneyMultiplier=R,this.moneyMultiplierDescriptorKey=n}getDescription(){const A=new je(a.getWaveMoneyAmount(this.moneyMultiplier));a.applyModifiers(CO,!0,A);const s=Ol(a.moneyFormat,A.value);return u.t("modifierType:ModifierType.MoneyRewardModifierType.description",{moneyMultiplier:u.t(this.moneyMultiplierDescriptorKey),moneyAmount:s})}};o(mg,"MoneyRewardModifierType");let $L=mg;const pg=class pg extends iA{constructor(A,s,R){super(A,s,()=>new _L(this,R)),this.boostPercent=R}getDescription(){return u.t("modifierType:ModifierType.ExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};o(pg,"ExpBoosterModifierType");let JL=pg;const Kg=class Kg extends GA{constructor(A,s,R){super(A,s,(n,I)=>new VN(this,I[0].id,R)),this.boostPercent=R}getDescription(){return u.t("modifierType:ModifierType.PokemonExpBoosterModifierType.description",{boostPercent:this.boostPercent})}};o(Kg,"PokemonExpBoosterModifierType");let au=Kg;const Fg=class Fg extends GA{constructor(A,s){super(A,s,(R,n)=>new kN(this,n[0].id))}getDescription(){return u.t("modifierType:ModifierType.PokemonFriendshipBoosterModifierType.description")}};o(Fg,"PokemonFriendshipBoosterModifierType");let Bh=Fg;const Yg=class Yg extends GA{constructor(A,s,R,n,I){super(A,s,(r,L)=>new XN(this,L[0].id,R),n,I),this.amount=R}getDescription(){return u.t("modifierType:ModifierType.PokemonMoveAccuracyBoosterModifierType.description",{accuracyAmount:this.amount})}};o(Yg,"PokemonMoveAccuracyBoosterModifierType");let gh=Yg;const Wg=class Wg extends GA{constructor(A,s){super(A,s,(R,n)=>new Ta(R,n[0].id))}getDescription(){return u.t("modifierType:ModifierType.PokemonMultiHitModifierType.description")}};o(Wg,"PokemonMultiHitModifierType");let mh=Wg;const yg=class yg extends oR{constructor(A){super("",`tm_${i[Ve[A].type].toLowerCase()}`,(s,R)=>new jM(this,R[0].id),s=>s.compatibleTms.indexOf(A)===-1||s.getMoveset().filter(R=>R.moveId===A).length?kE.NoEffectMessage:null,"tm"),this.moveId=A}get name(){return u.t("modifierType:ModifierType.TmModifierType.name",{moveId:ZR(Object.keys(fn).indexOf(this.moveId.toString())+1,3),moveName:Ve[this.moveId].name})}getDescription(){return u.t(a.enableMoveInfo?"modifierType:ModifierType.TmModifierTypeWithInfo.description":"modifierType:ModifierType.TmModifierType.description",{moveName:Ve[this.moveId].name})}};o(yg,"TmModifierType");let LI=yg;const wg=class wg extends oR{constructor(A){super("",aI[A].toLowerCase(),(s,R)=>new qM(this,R[0].id),s=>jt.hasOwnProperty(s.species.speciesId)&&jt[s.species.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFormKey())).length&&s.getFormKey()!==Me.GIGANTAMAX||s.isFusion()&&s.fusionSpecies&&jt.hasOwnProperty(s.fusionSpecies.speciesId)&&jt[s.fusionSpecies.speciesId].filter(R=>R.item===this.evolutionItem&&(!R.condition||R.condition.predicate(s))&&(R.preFormKey===null||R.preFormKey===s.getFusionFormKey())).length&&s.getFusionFormKey()!==Me.GIGANTAMAX?null:kE.NoEffectMessage),this.evolutionItem=A}get name(){return u.t(`modifierType:EvolutionItem.${aI[this.evolutionItem]}`)}getDescription(){return u.t("modifierType:ModifierType.EvolutionItemModifierType.description")}getPregenArgs(){return[this.evolutionItem]}};o(wg,"EvolutionItemModifierType");let iu=wg;const vg=class vg extends oR{constructor(A){super("",_R[A].toLowerCase(),(s,R)=>new GR(this,R[0].id,A,!0),s=>mR.hasOwnProperty(s.species.speciesId)&&mR[s.species.speciesId].filter(R=>R.trigger.hasTriggerType(Ke)&&R.preFormKey===s.getFormKey()).flatMap(R=>R.findTrigger(Ke)).flatMap(R=>R.item).includes(this.formChangeItem)?null:kE.NoEffectMessage),this.formChangeItem=A}get name(){return u.t(`modifierType:FormChangeItem.${_R[this.formChangeItem]}`)}getDescription(){return u.t("modifierType:ModifierType.FormChangeItemModifierType.description")}getPregenArgs(){return[this.formChangeItem]}};o(vg,"FormChangeItemModifierType");let nS=vg;const Vg=class Vg extends oR{constructor(A,s){super(A,s,(R,n)=>new wN(this,n[0].id,n[1].id),R=>R.isFusion()?kE.NoEffectMessage:null)}getDescription(){return u.t("modifierType:ModifierType.FusePokemonModifierType.description")}};o(Vg,"FusePokemonModifierType");let Iu=Vg;const xg=class xg extends YE{constructor(){super((A,s)=>{if(s&&s.length===1&&s[0]in i)return new Eu(s[0],20);const R=A.flatMap(l=>l.getMoveset().map(C=>C.getMove()).filter(C=>C instanceof m).map(C=>C.type));if(!R.length)return null;const n=new Map;let I=0;for(const l of R){if(n.has(l))if(n.get(l)<3)n.set(l,n.get(l)+1);else continue;else n.set(l,1);I++}if(!I)return null;let r;const L=He(I);let N=0;for(const l of n.keys()){const C=n.get(l);if(L<=N+C){r=l;break}N+=C}return new Eu(r,20)})}};o(xg,"AttackTypeBoosterModifierTypeGenerator");let ph=xg;const u0=class u0 extends YE{constructor(){super((A,s)=>{if(s)return new Ru(s[0]);const R=He(p.SPD+1);return new Ru(R)})}};o(u0,"BaseStatBoosterModifierTypeGenerator"),u0.items={[p.HP]:"hp_up",[p.ATK]:"protein",[p.DEF]:"iron",[p.SPATK]:"calcium",[p.SPDEF]:"zinc",[p.SPD]:"carbos"};let ru=u0;const U0=class U0 extends YE{constructor(){super((A,s)=>{if(s&&s.length===1&&Rk.includes(s[0]))return new Au(s[0]);const R=He(p.ACC,p.ATK);return new Au(R)})}};o(U0,"TempStatStageBoosterModifierTypeGenerator"),U0.items={[p.ATK]:"x_attack",[p.DEF]:"x_defense",[p.SPATK]:"x_sp_atk",[p.SPDEF]:"x_sp_def",[p.SPD]:"x_speed",[p.ACC]:"x_accuracy"};let Lu=U0;const fo=class fo extends YE{constructor(){super((A,s)=>{const R=fo.items;if(s&&s.length===1&&s[0]in R)return new su(s[0]);const n=Object.values(R),I=Object.keys(R),r=I.map(()=>0);for(const N of A){const l=N.getSpeciesForm(!0).speciesId,C=N.isFusion()?N.getFusionSpeciesForm(!0).speciesId:null,U=!1;for(const D in n){const M=n[D].species,h=n[D].stats;N.getHeldItems().some(d=>d instanceof KI&&d.contains(M[0],h[0]))||(M.includes(l)||C&&M.includes(C)?r[D]++:M.includes(e.PIKACHU))}}let L=0;for(const N of r)L+=N;if(L!==0){const N=He(L,1);let l=0;for(const C in r)if(r[C]!==0){const U=l+r[C];if(N<=l+r[C])return new su(I[C]);l=U}}return null})}};o(fo,"SpeciesStatBoosterModifierTypeGenerator"),fo.items={LIGHT_BALL:{stats:[p.ATK,p.SPATK],multiplier:2,species:[e.PIKACHU]},THICK_CLUB:{stats:[p.ATK],multiplier:2,species:[e.CUBONE,e.MAROWAK,e.ALOLA_MAROWAK]},METAL_POWDER:{stats:[p.DEF],multiplier:2,species:[e.DITTO]},QUICK_POWDER:{stats:[p.SPD],multiplier:2,species:[e.DITTO]}};let ou=fo;const bg=class bg extends YE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in t)return new LI(R[0]);const I=s.map(L=>{const N=L.getLearnableLevelMoves();return L.compatibleTms.filter(l=>!L.moveset.find(C=>C.moveId===l)&&!N.find(C=>C===l))}).flat().filter(L=>Zl[L]===A).filter(L=>!Ve[L].name.endsWith(" (N)")).filter((L,N,l)=>l.indexOf(L)===N);if(!I.length)return null;const r=He(I.length);return new LI(I[r])})}};o(bg,"TmModifierTypeGenerator");let zL=bg;const kg=class kg extends YE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in aI)return new iu(R[0]);const n=[s.filter(I=>jt.hasOwnProperty(I.species.speciesId)&&(!I.pauseEvolutions||I.species.speciesId===e.SLOWPOKE||I.species.speciesId===e.EEVEE)).flatMap(I=>jt[I.species.speciesId].filter(L=>L.item!==aI.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===I.getFormKey())&&(!L.condition||L.condition.predicate(I)))),s.filter(I=>I.isFusion()&&I.fusionSpecies&&jt.hasOwnProperty(I.fusionSpecies.speciesId)&&(!I.pauseEvolutions||I.fusionSpecies.speciesId===e.SLOWPOKE||I.fusionSpecies.speciesId===e.EEVEE)).flatMap(I=>jt[I.fusionSpecies.speciesId].filter(L=>L.item!==aI.NONE&&(L.evoFormKey===null||(L.preFormKey||"")===I.getFusionFormKey())&&(!L.condition||L.condition.predicate(I))))].flat().flatMap(I=>I.item).filter(I=>(!!I&&I>50)===A);return n.length?new iu(n[He(n.length)]):null})}};o(kg,"EvolutionItemModifierTypeGenerator");let Tu=kg;const Zg=class Zg extends YE{constructor(A){super((s,R)=>{if(R&&R.length===1&&R[0]in _R)return new nS(R[0]);const n=[...new Set(s.filter(I=>mR.hasOwnProperty(I.species.speciesId)).flatMap(I=>{let L=mR[I.species.speciesId].filter(N=>(N.formKey.indexOf(Me.MEGA)===-1&&N.formKey.indexOf(Me.PRIMAL)===-1||a.getModifiers(CL).length)&&(N.formKey.indexOf(Me.GIGANTAMAX)===-1&&N.formKey.indexOf(Me.ETERNAMAX)===-1||a.getModifiers(uL).length)&&(!N.conditions.length||N.conditions.filter(l=>l instanceof RA&&l.predicate(I)).length)&&N.preFormKey===I.getFormKey()).map(N=>N.findTrigger(Ke)).filter(N=>(N==null?void 0:N.active)&&!a.findModifier(l=>l instanceof GR&&l.pokemonId===I.id&&l.formChangeItem===N.item));if(I.species.speciesId===e.NECROZMA){let N=!1,l=!1,C=!1;L.forEach((U,D)=>{switch(U.item,U.item){case _R.ULTRANECROZIUM_Z:N=!0;break;case _R.N_LUNARIZER:l=!0;break;case _R.N_SOLARIZER:C=!0;break}}),N&&l&&C&&(L=L.filter(U=>U.item!==_R.ULTRANECROZIUM_Z))}return L}))].flat().flatMap(I=>I.item).filter(I=>(I&&I<100)===A);return n.length?new nS(n[He(n.length)]):null})}};o(Zg,"FormChangeItemModifierTypeGenerator");let Su=Zg;const Xg=class Xg extends GA{constructor(A,s,R,n,I){super(A,s,(r,L)=>new xI(r,L[0].id,R),n,I),this.chancePercent=R}getDescription(){return u.t("modifierType:ModifierType.ContactHeldItemTransferChanceModifierType.description",{chancePercent:this.chancePercent})}};o(Xg,"ContactHeldItemTransferChanceModifierType");let Kh=Xg;const Qg=class Qg extends GA{constructor(A,s,R,n){super(A,s,(I,r)=>new VI(I,r[0].id),R,n)}getDescription(){return u.t("modifierType:ModifierType.TurnHeldItemTransferModifierType.description")}};o(Qg,"TurnHeldItemTransferModifierType");let Fh=Qg;const $g=class $g extends iA{constructor(A,s,R,n,I){super(A,s,(r,L)=>new PL(r,n,R,I),"enemy_status_chance"),this.chancePercent=R,this.effect=n}getDescription(){return u.t("modifierType:ModifierType.EnemyAttackStatusEffectChanceModifierType.description",{chancePercent:this.chancePercent,statusEffect:nk(this.effect)})}};o($g,"EnemyAttackStatusEffectChanceModifierType");let jL=$g;const Jg=class Jg extends iA{constructor(A,s,R){super(A,s,(n,I)=>new El(n,R),"enemy_endure"),this.chancePercent=R}getDescription(){return u.t("modifierType:ModifierType.EnemyEndureChanceModifierType.description",{chancePercent:this.chancePercent})}};o(Jg,"EnemyEndureChanceModifierType");let Yh=Jg;function Nk(E,A){return()=>{const s=a.gameMode,R=a.currentBattle.waveIndex;return s.isClassic&&R>=E?0:A}}o(Nk,"skipInClassicAfterWave");function on(E){return Nk(199,E)}o(on,"skipInLastClassicWaveOrDefault");function Ac(E,A){return()=>{const s=a.getModifiers(NL);return!(a.gameMode.isClassic&&a.currentBattle.waveIndex===199)&&(s.length===0||s.filter(R=>R.getMaxBattles()===E&&R.getBattleCount()>=E*.6).length===0)?A:0}}o(Ac,"lureWeightFunc");const zg=class zg{constructor(A,s,R){this.modifierType=A(),this.modifierType.id=Object.keys(j).find(n=>j[n]===A),this.weight=s,this.maxWeight=R||(s instanceof Function?0:s)}setTier(A){this.modifierType.setTier(A)}};o(zg,"WeightedModifierType");let ke=zg;const j={POKEBALL:o(()=>new hi("pb",we.POKEBALL,5),"POKEBALL"),GREAT_BALL:o(()=>new hi("gb",we.GREAT_BALL,5),"GREAT_BALL"),ULTRA_BALL:o(()=>new hi("ub",we.ULTRA_BALL,5),"ULTRA_BALL"),ROGUE_BALL:o(()=>new hi("rb",we.ROGUE_BALL,5),"ROGUE_BALL"),MASTER_BALL:o(()=>new hi("mb",we.MASTER_BALL,1),"MASTER_BALL"),RARE_CANDY:o(()=>new Gh("modifierType:ModifierType.RARE_CANDY","rare_candy"),"RARE_CANDY"),RARER_CANDY:o(()=>new dh("modifierType:ModifierType.RARER_CANDY","rarer_candy"),"RARER_CANDY"),EVOLUTION_ITEM:o(()=>new Tu(!1),"EVOLUTION_ITEM"),RARE_EVOLUTION_ITEM:o(()=>new Tu(!0),"RARE_EVOLUTION_ITEM"),FORM_CHANGE_ITEM:o(()=>new Su(!1),"FORM_CHANGE_ITEM"),RARE_FORM_CHANGE_ITEM:o(()=>new Su(!0),"RARE_FORM_CHANGE_ITEM"),EVOLUTION_TRACKER_GIMMIGHOUL:o(()=>new GA("modifierType:ModifierType.EVOLUTION_TRACKER_GIMMIGHOUL","relic_gold",(E,A)=>new fN(E,A[0].id,e.GIMMIGHOUL,10)),"EVOLUTION_TRACKER_GIMMIGHOUL"),MEGA_BRACELET:o(()=>new iA("modifierType:ModifierType.MEGA_BRACELET","mega_bracelet",(E,A)=>new CL(E)),"MEGA_BRACELET"),DYNAMAX_BAND:o(()=>new iA("modifierType:ModifierType.DYNAMAX_BAND","dynamax_band",(E,A)=>new uL(E)),"DYNAMAX_BAND"),TERA_ORB:o(()=>new iA("modifierType:ModifierType.TERA_ORB","tera_orb",(E,A)=>new UL(E)),"TERA_ORB"),MAP:o(()=>new iA("modifierType:ModifierType.MAP","map",(E,A)=>new GN(E)),"MAP"),POTION:o(()=>new Ka("modifierType:ModifierType.POTION","potion",20,10),"POTION"),SUPER_POTION:o(()=>new Ka("modifierType:ModifierType.SUPER_POTION","super_potion",50,25),"SUPER_POTION"),HYPER_POTION:o(()=>new Ka("modifierType:ModifierType.HYPER_POTION","hyper_potion",200,50),"HYPER_POTION"),MAX_POTION:o(()=>new Ka("modifierType:ModifierType.MAX_POTION","max_potion",0,100),"MAX_POTION"),FULL_RESTORE:o(()=>new Ka("modifierType:ModifierType.FULL_RESTORE","full_restore",0,100,!0),"FULL_RESTORE"),REVIVE:o(()=>new qC("modifierType:ModifierType.REVIVE","revive",50),"REVIVE"),MAX_REVIVE:o(()=>new qC("modifierType:ModifierType.MAX_REVIVE","max_revive",100),"MAX_REVIVE"),FULL_HEAL:o(()=>new _h("modifierType:ModifierType.FULL_HEAL","full_heal"),"FULL_HEAL"),SACRED_ASH:o(()=>new fh("modifierType:ModifierType.SACRED_ASH","sacred_ash"),"SACRED_ASH"),REVIVER_SEED:o(()=>new GA("modifierType:ModifierType.REVIVER_SEED","reviver_seed",(E,A)=>new cL(E,A[0].id)),"REVIVER_SEED"),WHITE_HERB:o(()=>new GA("modifierType:ModifierType.WHITE_HERB","white_herb",(E,A)=>new FN(E,A[0].id)),"WHITE_HERB"),ETHER:o(()=>new sS("modifierType:ModifierType.ETHER","ether",10),"ETHER"),MAX_ETHER:o(()=>new sS("modifierType:ModifierType.MAX_ETHER","max_ether",-1),"MAX_ETHER"),ELIXIR:o(()=>new eu("modifierType:ModifierType.ELIXIR","elixir",10),"ELIXIR"),MAX_ELIXIR:o(()=>new eu("modifierType:ModifierType.MAX_ELIXIR","max_elixir",-1),"MAX_ELIXIR"),PP_UP:o(()=>new RS("modifierType:ModifierType.PP_UP","pp_up",1),"PP_UP"),PP_MAX:o(()=>new RS("modifierType:ModifierType.PP_MAX","pp_max",3),"PP_MAX"),LURE:o(()=>new QL("modifierType:ModifierType.LURE","lure",10),"LURE"),SUPER_LURE:o(()=>new QL("modifierType:ModifierType.SUPER_LURE","super_lure",15),"SUPER_LURE"),MAX_LURE:o(()=>new QL("modifierType:ModifierType.MAX_LURE","max_lure",30),"MAX_LURE"),SPECIES_STAT_BOOSTER:o(()=>new ou,"SPECIES_STAT_BOOSTER"),TEMP_STAT_STAGE_BOOSTER:o(()=>new Lu,"TEMP_STAT_STAGE_BOOSTER"),DIRE_HIT:o(()=>new class extends iA{getDescription(){return u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.description",{stat:u.t("modifierType:ModifierType.DIRE_HIT.extra.raises"),amount:u.t("modifierType:ModifierType.TempStatStageBoosterModifierType.extra.stage")})}}("modifierType:ModifierType.DIRE_HIT","dire_hit",(E,A)=>new PN(E,5)),"DIRE_HIT"),BASE_STAT_BOOSTER:o(()=>new ru,"BASE_STAT_BOOSTER"),ATTACK_TYPE_BOOSTER:o(()=>new ph,"ATTACK_TYPE_BOOSTER"),MINT:o(()=>new YE((E,A)=>A&&A.length===1&&A[0]in rt?new tu(A[0]):new tu(He(dE(rt).length))),"MINT"),MYSTICAL_ROCK:o(()=>new GA("modifierType:ModifierType.MYSTICAL_ROCK","mystical_rock",(E,A)=>new hL(E,A[0].id)),"MYSTICAL_ROCK"),TERA_SHARD:o(()=>new YE((E,A)=>{if(A&&A.length===1&&A[0]in i)return new jC(A[0]);if(!a.getModifiers(UL).length)return null;const s=[];for(const I of E)I.hasSpecies(e.TERAPAGOS)||I.hasSpecies(e.OGERPON)||I.hasSpecies(e.SHEDINJA)||s.push(I.teraType);let R=i.UNKNOWN;s.length>0&&s.filter(I=>I===s[0]).length===s.length&&(R=s[0]);let n=He(64)?He(18):i.STELLAR;for(;n===R;)n=He(64)?He(18):i.STELLAR;return new jC(n)}),"TERA_SHARD"),BERRY:o(()=>new YE((E,A)=>{if(A&&A.length===1&&A[0]in gt)return new OS(A[0]);const s=dE(gt);let R;const n=He(12);return n<2?R=gt.SITRUS:n<4?R=gt.LUM:n<6?R=gt.LEPPA:R=s[He(s.length-3)+2],new OS(R)}),"BERRY"),TM_COMMON:o(()=>new zL(V.COMMON),"TM_COMMON"),TM_GREAT:o(()=>new zL(V.GREAT),"TM_GREAT"),TM_ULTRA:o(()=>new zL(V.ULTRA),"TM_ULTRA"),MEMORY_MUSHROOM:o(()=>new _r("modifierType:ModifierType.MEMORY_MUSHROOM","big_mushroom"),"MEMORY_MUSHROOM"),EXP_SHARE:o(()=>new iA("modifierType:ModifierType.EXP_SHARE","exp_share",(E,A)=>new xN(E)),"EXP_SHARE"),EXP_BALANCE:o(()=>new iA("modifierType:ModifierType.EXP_BALANCE","exp_balance",(E,A)=>new bN(E)),"EXP_BALANCE"),OVAL_CHARM:o(()=>new iA("modifierType:ModifierType.OVAL_CHARM","oval_charm",(E,A)=>new vN(E)),"OVAL_CHARM"),EXP_CHARM:o(()=>new JL("modifierType:ModifierType.EXP_CHARM","exp_charm",25),"EXP_CHARM"),SUPER_EXP_CHARM:o(()=>new JL("modifierType:ModifierType.SUPER_EXP_CHARM","super_exp_charm",60),"SUPER_EXP_CHARM"),GOLDEN_EXP_CHARM:o(()=>new JL("modifierType:ModifierType.GOLDEN_EXP_CHARM","golden_exp_charm",100),"GOLDEN_EXP_CHARM"),LUCKY_EGG:o(()=>new au("modifierType:ModifierType.LUCKY_EGG","lucky_egg",40),"LUCKY_EGG"),GOLDEN_EGG:o(()=>new au("modifierType:ModifierType.GOLDEN_EGG","golden_egg",100),"GOLDEN_EGG"),SOOTHE_BELL:o(()=>new Bh("modifierType:ModifierType.SOOTHE_BELL","soothe_bell"),"SOOTHE_BELL"),SCOPE_LENS:o(()=>new GA("modifierType:ModifierType.SCOPE_LENS","scope_lens",(E,A)=>new ML(E,A[0].id,1)),"SCOPE_LENS"),LEEK:o(()=>new GA("modifierType:ModifierType.LEEK","leek",(E,A)=>new mN(E,A[0].id,2,[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD])),"LEEK"),EVIOLITE:o(()=>new GA("modifierType:ModifierType.EVIOLITE","eviolite",(E,A)=>new kM(E,A[0].id,[p.DEF,p.SPDEF],1.5)),"EVIOLITE"),SOUL_DEW:o(()=>new GA("modifierType:ModifierType.SOUL_DEW","soul_dew",(E,A)=>new ZN(E,A[0].id)),"SOUL_DEW"),NUGGET:o(()=>new $L("modifierType:ModifierType.NUGGET","nugget",1,"modifierType:ModifierType.MoneyRewardModifierType.extra.small"),"NUGGET"),BIG_NUGGET:o(()=>new $L("modifierType:ModifierType.BIG_NUGGET","big_nugget",2.5,"modifierType:ModifierType.MoneyRewardModifierType.extra.moderate"),"BIG_NUGGET"),RELIC_GOLD:o(()=>new $L("modifierType:ModifierType.RELIC_GOLD","relic_gold",10,"modifierType:ModifierType.MoneyRewardModifierType.extra.large"),"RELIC_GOLD"),AMULET_COIN:o(()=>new iA("modifierType:ModifierType.AMULET_COIN","amulet_coin",(E,A)=>new CO(E)),"AMULET_COIN"),GOLDEN_PUNCH:o(()=>new GA("modifierType:ModifierType.GOLDEN_PUNCH","golden_punch",(E,A)=>new ii(E,A[0].id)),"GOLDEN_PUNCH"),COIN_CASE:o(()=>new iA("modifierType:ModifierType.COIN_CASE","coin_case",(E,A)=>new QN(E)),"COIN_CASE"),LOCK_CAPSULE:o(()=>new iA("modifierType:ModifierType.LOCK_CAPSULE","lock_capsule",(E,A)=>new JN(E)),"LOCK_CAPSULE"),GRIP_CLAW:o(()=>new Kh("modifierType:ModifierType.GRIP_CLAW","grip_claw",10),"GRIP_CLAW"),WIDE_LENS:o(()=>new gh("modifierType:ModifierType.WIDE_LENS","wide_lens",5),"WIDE_LENS"),MULTI_LENS:o(()=>new mh("modifierType:ModifierType.MULTI_LENS","zoom_lens"),"MULTI_LENS"),HEALING_CHARM:o(()=>new iA("modifierType:ModifierType.HEALING_CHARM","healing_charm",(E,A)=>new wI(E,1.1)),"HEALING_CHARM"),CANDY_JAR:o(()=>new iA("modifierType:ModifierType.CANDY_JAR","candy_jar",(E,A)=>new ni(E)),"CANDY_JAR"),BERRY_POUCH:o(()=>new iA("modifierType:ModifierType.BERRY_POUCH","berry_pouch",(E,A)=>new yI(E)),"BERRY_POUCH"),FOCUS_BAND:o(()=>new GA("modifierType:ModifierType.FOCUS_BAND","focus_band",(E,A)=>new pN(E,A[0].id)),"FOCUS_BAND"),QUICK_CLAW:o(()=>new GA("modifierType:ModifierType.QUICK_CLAW","quick_claw",(E,A)=>new FI(E,A[0].id)),"QUICK_CLAW"),KINGS_ROCK:o(()=>new GA("modifierType:ModifierType.KINGS_ROCK","kings_rock",(E,A)=>new KN(E,A[0].id)),"KINGS_ROCK"),LEFTOVERS:o(()=>new GA("modifierType:ModifierType.LEFTOVERS","leftovers",(E,A)=>new YI(E,A[0].id)),"LEFTOVERS"),SHELL_BELL:o(()=>new GA("modifierType:ModifierType.SHELL_BELL","shell_bell",(E,A)=>new WI(E,A[0].id)),"SHELL_BELL"),TOXIC_ORB:o(()=>new GA("modifierType:ModifierType.TOXIC_ORB","toxic_orb",(E,A)=>new Oi(E,A[0].id)),"TOXIC_ORB"),FLAME_ORB:o(()=>new GA("modifierType:ModifierType.FLAME_ORB","flame_orb",(E,A)=>new Oi(E,A[0].id)),"FLAME_ORB"),BATON:o(()=>new GA("modifierType:ModifierType.BATON","baton",(E,A)=>new ba(E,A[0].id)),"BATON"),SHINY_CHARM:o(()=>new iA("modifierType:ModifierType.SHINY_CHARM","shiny_charm",(E,A)=>new vI(E)),"SHINY_CHARM"),ABILITY_CHARM:o(()=>new iA("modifierType:ModifierType.ABILITY_CHARM","ability_charm",(E,A)=>new gn(E)),"ABILITY_CHARM"),CATCHING_CHARM:o(()=>new iA("modifierType:ModifierType.CATCHING_CHARM","catching_charm",(E,A)=>new $N(E)),"CATCHING_CHARM"),IV_SCANNER:o(()=>new iA("modifierType:ModifierType.IV_SCANNER","scanner",(E,A)=>new bI(E)),"IV_SCANNER"),DNA_SPLICERS:o(()=>new Iu("modifierType:ModifierType.DNA_SPLICERS","dna_splicers"),"DNA_SPLICERS"),MINI_BLACK_HOLE:o(()=>new Fh("modifierType:ModifierType.MINI_BLACK_HOLE","mini_black_hole"),"MINI_BLACK_HOLE"),VOUCHER:o(()=>new XL(uE.REGULAR,1),"VOUCHER"),VOUCHER_PLUS:o(()=>new XL(uE.PLUS,1),"VOUCHER_PLUS"),VOUCHER_PREMIUM:o(()=>new XL(uE.PREMIUM,1),"VOUCHER_PREMIUM"),GOLDEN_POKEBALL:o(()=>new iA("modifierType:ModifierType.GOLDEN_POKEBALL","pb_gold",(E,A)=>new ri(E),void 0,"se/pb_bounce_1"),"GOLDEN_POKEBALL"),SILVER_POKEBALL:o(()=>new iA("modifierType:ModifierType.SILVER_POKEBALL","pb_silver",(E,A)=>new Li(E,100),void 0,"se/pb_bounce_1"),"SILVER_POKEBALL"),ENEMY_DAMAGE_BOOSTER:o(()=>new iA("modifierType:ModifierType.ENEMY_DAMAGE_BOOSTER","wl_item_drop",(E,A)=>new qN(E,5)),"ENEMY_DAMAGE_BOOSTER"),ENEMY_DAMAGE_REDUCTION:o(()=>new iA("modifierType:ModifierType.ENEMY_DAMAGE_REDUCTION","wl_guard_spec",(E,A)=>new el(E,2.5)),"ENEMY_DAMAGE_REDUCTION"),ENEMY_HEAL:o(()=>new iA("modifierType:ModifierType.ENEMY_HEAL","wl_potion",(E,A)=>new tl(E,2,10)),"ENEMY_HEAL"),ENEMY_ATTACK_POISON_CHANCE:o(()=>new jL("modifierType:ModifierType.ENEMY_ATTACK_POISON_CHANCE","wl_antidote",5,re.POISON,10),"ENEMY_ATTACK_POISON_CHANCE"),ENEMY_ATTACK_PARALYZE_CHANCE:o(()=>new jL("modifierType:ModifierType.ENEMY_ATTACK_PARALYZE_CHANCE","wl_paralyze_heal",2.5,re.PARALYSIS,10),"ENEMY_ATTACK_PARALYZE_CHANCE"),ENEMY_ATTACK_BURN_CHANCE:o(()=>new jL("modifierType:ModifierType.ENEMY_ATTACK_BURN_CHANCE","wl_burn_heal",5,re.BURN,10),"ENEMY_ATTACK_BURN_CHANCE"),ENEMY_STATUS_EFFECT_HEAL_CHANCE:o(()=>new iA("modifierType:ModifierType.ENEMY_STATUS_EFFECT_HEAL_CHANCE","wl_full_heal",(E,A)=>new Al(E,2.5,10)),"ENEMY_STATUS_EFFECT_HEAL_CHANCE"),ENEMY_ENDURE_CHANCE:o(()=>new Yh("modifierType:ModifierType.ENEMY_ENDURE_CHANCE","wl_reset_urge",2),"ENEMY_ENDURE_CHANCE"),ENEMY_FUSED_CHANCE:o(()=>new iA("modifierType:ModifierType.ENEMY_FUSED_CHANCE","wl_custom_spliced",(E,A)=>new sl(E,1)),"ENEMY_FUSED_CHANCE"),MYSTERY_ENCOUNTER_SHUCKLE_JUICE:o(()=>new YE((E,A)=>A?new Ou(A[0]):new Ou(He(20,1))),"MYSTERY_ENCOUNTER_SHUCKLE_JUICE"),MYSTERY_ENCOUNTER_OLD_GATEAU:o(()=>new YE((E,A)=>A?new nu(A[0],A[1]):new nu(He(20,1),[p.HP,p.ATK,p.DEF])),"MYSTERY_ENCOUNTER_OLD_GATEAU"),MYSTERY_ENCOUNTER_BLACK_SLUDGE:o(()=>new YE((E,A)=>A?new iA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new Ii(s,A[0])):new iA("modifierType:ModifierType.MYSTERY_ENCOUNTER_BLACK_SLUDGE","black_sludge",(s,R)=>new Ii(s,2.5))),"MYSTERY_ENCOUNTER_BLACK_SLUDGE"),MYSTERY_ENCOUNTER_MACHO_BRACE:o(()=>new GA("modifierType:ModifierType.MYSTERY_ENCOUNTER_MACHO_BRACE","macho_brace",(E,A)=>new pI(E,A[0].id)),"MYSTERY_ENCOUNTER_MACHO_BRACE"),MYSTERY_ENCOUNTER_GOLDEN_BUG_NET:o(()=>new iA("modifierType:ModifierType.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET","golden_net",(E,A)=>new zN(E)),"MYSTERY_ENCOUNTER_GOLDEN_BUG_NET")};function mL(E){return a.gameMode.isClassic&&a.pokeballCounts[E]>=ok}o(mL,"hasMaximumBalls");const ar={[V.COMMON]:[new ke(j.POKEBALL,()=>mL(we.POKEBALL)?0:6,6),new ke(j.RARE_CANDY,2),new ke(j.POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=10&&s.getHpRatio()<=.875&&!s.isFainted()).length,3)*3,9),new ke(j.SUPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=25&&s.getHpRatio()<=.75&&!s.isFainted()).length,3),3),new ke(j.ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof GE&&R.berryType===gt.LEPPA)&&s.getMoveset().filter(R=>R.ppUsed&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new ke(j.MAX_ETHER,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof GE&&R.berryType===gt.LEPPA)&&s.getMoveset().filter(R=>R.ppUsed&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new ke(j.LURE,Ac(10,2)),new ke(j.TEMP_STAT_STAGE_BOOSTER,4),new ke(j.BERRY,2),new ke(j.TM_COMMON,2)].map(E=>(E.setTier(V.COMMON),E)),[V.GREAT]:[new ke(j.GREAT_BALL,()=>mL(we.GREAT_BALL)?0:6,6),new ke(j.PP_UP,2),new ke(j.FULL_HEAL,E=>Math.min(E.filter(s=>s.hp&&!!s.status&&!s.getHeldItems().some(R=>{var n;return R instanceof Oi?R.getStatusEffect()===((n=s.status)==null?void 0:n.effect):!1})).length,3)*6,18),new ke(j.REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*9,27),new ke(j.MAX_REVIVE,E=>Math.min(E.filter(s=>s.isFainted()).length,3)*3,9),new ke(j.SACRED_ASH,E=>E.filter(A=>A.isFainted()).length>=Math.ceil(E.length/2)?1:0,1),new ke(j.HYPER_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.625&&!s.isFainted()).length,3)*3,9),new ke(j.MAX_POTION,E=>Math.min(E.filter(s=>s.getInverseHp()>=100&&s.getHpRatio()<=.5&&!s.isFainted()).length,3),3),new ke(j.FULL_RESTORE,E=>{const A=Math.min(E.filter(R=>R.hp&&!!R.status&&!R.getHeldItems().some(n=>{var I;return n instanceof Oi?n.getStatusEffect()===((I=R.status)==null?void 0:I.effect):!1})).length,3);return Math.floor((Math.min(E.filter(R=>R.getInverseHp()>=100&&R.getHpRatio()<=.5&&!R.isFainted()).length,3)+A)/2)},3),new ke(j.ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof GE&&R.berryType===gt.LEPPA)&&s.getMoveset().filter(R=>R.ppUsed&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3)*3,9),new ke(j.MAX_ELIXIR,E=>Math.min(E.filter(s=>s.hp&&!s.getHeldItems().some(R=>R instanceof GE&&R.berryType===gt.LEPPA)&&s.getMoveset().filter(R=>R.ppUsed&&R.getMovePp()-R.ppUsed<=5&&R.ppUsed>Math.floor(R.getMovePp()/2)).length).length,3),3),new ke(j.DIRE_HIT,4),new ke(j.SUPER_LURE,Ac(15,4)),new ke(j.NUGGET,on(5)),new ke(j.EVOLUTION_ITEM,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/15),8),8),new ke(j.MAP,()=>a.gameMode.isClassic&&a.currentBattle.waveIndex<180?2:0,2),new ke(j.SOOTHE_BELL,2),new ke(j.TM_GREAT,3),new ke(j.MEMORY_MUSHROOM,E=>{if(!E.find(s=>s.getLearnableLevelMoves().length))return 0;const A=E.map(s=>s.level).reduce((s,R)=>Math.max(s,R),1);return Math.min(Math.ceil(A/20),4)},4),new ke(j.BASE_STAT_BOOSTER,3),new ke(j.TERA_SHARD,E=>E.filter(A=>!(A.hasSpecies(e.TERAPAGOS)||A.hasSpecies(e.OGERPON)||A.hasSpecies(e.SHEDINJA))).length>0?1:0),new ke(j.DNA_SPLICERS,E=>{if(E.filter(A=>!A.fusionSpecies).length>1){if(a.gameMode.isSplicedOnly)return 4;if(a.gameMode.isClassic&&EE.areFusionsBoosted())return 2}return 0},4),new ke(j.VOUCHER,(E,A)=>a.gameMode.isDaily?0:Math.max(1-A,0),1)].map(E=>(E.setTier(V.GREAT),E)),[V.ULTRA]:[new ke(j.ULTRA_BALL,()=>mL(we.ULTRA_BALL)?0:15,15),new ke(j.MAX_LURE,Ac(30,4)),new ke(j.BIG_NUGGET,on(12)),new ke(j.PP_MAX,3),new ke(j.MINT,4),new ke(j.RARE_EVOLUTION_ITEM,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/15)*4,32),32),new ke(j.FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/50),4)*6,24),new ke(j.AMULET_COIN,on(3)),new ke(j.EVIOLITE,E=>{const{gameMode:A,gameData:s}=a;return(A.isDaily||!A.isFreshStartChallenge()&&s.isUnlocked(Qs.EVIOLITE))&&E.some(R=>!R.isMax()&&(R.getSpeciesForm(!0).speciesId in jt||R.isFusion()&&R.getFusionSpeciesForm(!0).speciesId in jt)?!R.getHeldItems().some(n=>n.type.id==="EVIOLITE"):!1)?10:0}),new ke(j.SPECIES_STAT_BOOSTER,12),new ke(j.LEEK,E=>{const A=[e.FARFETCHD,e.GALAR_FARFETCHD,e.SIRFETCHD];return E.some(s=>!s.getHeldItems().some(R=>R instanceof mN)&&(A.includes(s.getSpeciesForm(!0).speciesId)||s.isFusion()&&A.includes(s.getFusionSpeciesForm(!0).speciesId)))?12:0},12),new ke(j.TOXIC_ORB,E=>E.some(A=>{if(!A.getHeldItems().some(R=>R.type.id==="FLAME_ORB"||R.type.id==="TOXIC_ORB")){const R=A.getMoveset(!0).filter(L=>!Pe(L)).map(L=>L.moveId),n=A.canSetStatus(re.TOXIC,!0,!0,null,!0),I=[t.FACADE,t.PSYCHO_SHIFT].some(L=>R.includes(L)),r=[].some(L=>R.includes(L));if(n){const L=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(C=>A.hasAbility(C,!1,!0)),N=[O.TOXIC_BOOST,O.POISON_HEAL].some(C=>A.hasAbility(C,!1,!0)),l=[O.FLARE_BOOST].some(C=>A.hasAbility(C,!1,!0));return N||L&&!l||I}return r}return!1})?10:0,10),new ke(j.FLAME_ORB,E=>E.some(A=>{if(!A.getHeldItems().some(R=>R.type.id==="FLAME_ORB"||R.type.id==="TOXIC_ORB")){const R=A.getMoveset(!0).filter(L=>!Pe(L)).map(L=>L.moveId),n=A.canSetStatus(re.BURN,!0,!0,null,!0),I=[t.FACADE,t.PSYCHO_SHIFT].some(L=>R.includes(L)),r=[].some(L=>R.includes(L));if(n){const L=[O.QUICK_FEET,O.GUTS,O.MARVEL_SCALE,O.MAGIC_GUARD].some(C=>A.hasAbility(C,!1,!0)),N=[O.FLARE_BOOST].some(C=>A.hasAbility(C,!1,!0)),l=[O.TOXIC_BOOST,O.POISON_HEAL].some(C=>A.hasAbility(C,!1,!0));return N||L&&!l||I}return r}return!1})?10:0,10),new ke(j.MYSTICAL_ROCK,E=>E.some(A=>{let s=!1;for(const R of A.getHeldItems())if(R.type.id==="MYSTICAL_ROCK"){s=R.getStackCount()===R.getMaxStackCount();break}if(!s){const R=A.getMoveset(!0).map(r=>r.moveId),n=[O.DROUGHT,O.ORICHALCUM_PULSE,O.DRIZZLE,O.SAND_STREAM,O.SAND_SPIT,O.SNOW_WARNING,O.ELECTRIC_SURGE,O.HADRON_ENGINE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.SEED_SOWER,O.MISTY_SURGE].some(r=>A.hasAbility(r,!1,!0)),I=[t.SUNNY_DAY,t.RAIN_DANCE,t.SANDSTORM,t.SNOWSCAPE,t.HAIL,t.CHILLY_RECEPTION,t.ELECTRIC_TERRAIN,t.PSYCHIC_TERRAIN,t.GRASSY_TERRAIN,t.MISTY_TERRAIN].some(r=>R.includes(r));return n||I}return!1})?10:0,10),new ke(j.REVIVER_SEED,4),new ke(j.CANDY_JAR,on(5)),new ke(j.ATTACK_TYPE_BOOSTER,9),new ke(j.TM_ULTRA,11),new ke(j.RARER_CANDY,4),new ke(j.GOLDEN_PUNCH,on(2)),new ke(j.IV_SCANNER,on(4)),new ke(j.EXP_CHARM,on(8)),new ke(j.EXP_SHARE,on(10)),new ke(j.TERA_ORB,()=>a.gameMode.isClassic?0:Math.min(Math.max(Math.floor(a.currentBattle.waveIndex/50)*2,1),4),4),new ke(j.QUICK_CLAW,3),new ke(j.WIDE_LENS,7)].map(E=>(E.setTier(V.ULTRA),E)),[V.ROGUE]:[new ke(j.ROGUE_BALL,()=>mL(we.ROGUE_BALL)?0:16,16),new ke(j.RELIC_GOLD,on(2)),new ke(j.LEFTOVERS,3),new ke(j.SHELL_BELL,3),new ke(j.BERRY_POUCH,4),new ke(j.GRIP_CLAW,5),new ke(j.SCOPE_LENS,4),new ke(j.BATON,2),new ke(j.SOUL_DEW,7),new ke(j.CATCHING_CHARM,()=>a.gameMode.isClassic?0:4,4),new ke(j.ABILITY_CHARM,Nk(189,6)),new ke(j.FOCUS_BAND,5),new ke(j.KINGS_ROCK,3),new ke(j.LOCK_CAPSULE,()=>a.gameMode.isClassic?0:3),new ke(j.SUPER_EXP_CHARM,on(8)),new ke(j.RARE_FORM_CHANGE_ITEM,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/50),4)*6,24),new ke(j.MEGA_BRACELET,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/50),4)*9,36),new ke(j.DYNAMAX_BAND,()=>Math.min(Math.ceil(a.currentBattle.waveIndex/50),4)*9,36),new ke(j.VOUCHER_PLUS,(E,A)=>a.gameMode.isDaily?0:Math.max(3-A*1,0),3)].map(E=>(E.setTier(V.ROGUE),E)),[V.MASTER]:[new ke(j.MASTER_BALL,()=>mL(we.MASTER_BALL)?0:24,24),new ke(j.SHINY_CHARM,14),new ke(j.HEALING_CHARM,18),new ke(j.MULTI_LENS,18),new ke(j.VOUCHER_PREMIUM,(E,A)=>!a.gameMode.isDaily&&!a.gameMode.isEndless&&!a.gameMode.isSplicedOnly?Math.max(5-A*2,0):0,5),new ke(j.DNA_SPLICERS,E=>!(a.gameMode.isClassic&&EE.areFusionsBoosted())&&!a.gameMode.isSplicedOnly&&E.filter(A=>!A.fusionSpecies).length>1?24:0,24),new ke(j.MINI_BLACK_HOLE,()=>a.gameMode.isDaily||!a.gameMode.isFreshStartChallenge()&&a.gameData.isUnlocked(Qs.MINI_BLACK_HOLE)?1:0,1)].map(E=>(E.setTier(V.MASTER),E))},L9={[V.COMMON]:[new ke(j.BERRY,1)].map(E=>(E.setTier(V.COMMON),E)),[V.GREAT]:[new ke(j.BASE_STAT_BOOSTER,1)].map(E=>(E.setTier(V.GREAT),E)),[V.ULTRA]:[new ke(j.ATTACK_TYPE_BOOSTER,10),new ke(j.WHITE_HERB,0)].map(E=>(E.setTier(V.ULTRA),E)),[V.ROGUE]:[new ke(j.LUCKY_EGG,4)].map(E=>(E.setTier(V.ROGUE),E)),[V.MASTER]:[new ke(j.GOLDEN_EGG,1)].map(E=>(E.setTier(V.MASTER),E))},o9={[V.COMMON]:[new ke(j.BERRY,8),new ke(j.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(V.COMMON),E)),[V.GREAT]:[new ke(j.BASE_STAT_BOOSTER,3)].map(E=>(E.setTier(V.GREAT),E)),[V.ULTRA]:[new ke(j.ATTACK_TYPE_BOOSTER,10),new ke(j.WHITE_HERB,0)].map(E=>(E.setTier(V.ULTRA),E)),[V.ROGUE]:[new ke(j.FOCUS_BAND,2),new ke(j.LUCKY_EGG,4),new ke(j.QUICK_CLAW,1),new ke(j.GRIP_CLAW,1),new ke(j.WIDE_LENS,1)].map(E=>(E.setTier(V.ROGUE),E)),[V.MASTER]:[new ke(j.KINGS_ROCK,1),new ke(j.LEFTOVERS,1),new ke(j.SHELL_BELL,1),new ke(j.SCOPE_LENS,1)].map(E=>(E.setTier(V.MASTER),E))},T9={[V.COMMON]:[new ke(j.ENEMY_DAMAGE_BOOSTER,9),new ke(j.ENEMY_DAMAGE_REDUCTION,9),new ke(j.ENEMY_ATTACK_POISON_CHANCE,3),new ke(j.ENEMY_ATTACK_PARALYZE_CHANCE,3),new ke(j.ENEMY_ATTACK_BURN_CHANCE,3),new ke(j.ENEMY_STATUS_EFFECT_HEAL_CHANCE,9),new ke(j.ENEMY_ENDURE_CHANCE,4),new ke(j.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(V.COMMON),E)),[V.GREAT]:[new ke(j.ENEMY_DAMAGE_BOOSTER,5),new ke(j.ENEMY_DAMAGE_REDUCTION,5),new ke(j.ENEMY_STATUS_EFFECT_HEAL_CHANCE,5),new ke(j.ENEMY_ENDURE_CHANCE,5),new ke(j.ENEMY_FUSED_CHANCE,1)].map(E=>(E.setTier(V.GREAT),E)),[V.ULTRA]:[new ke(j.ENEMY_DAMAGE_BOOSTER,10),new ke(j.ENEMY_DAMAGE_REDUCTION,10),new ke(j.ENEMY_HEAL,10),new ke(j.ENEMY_STATUS_EFFECT_HEAL_CHANCE,10),new ke(j.ENEMY_ENDURE_CHANCE,10),new ke(j.ENEMY_FUSED_CHANCE,5)].map(E=>(E.setTier(V.ULTRA),E)),[V.ROGUE]:[].map(E=>(E.setTier(V.ROGUE),E)),[V.MASTER]:[].map(E=>(E.setTier(V.MASTER),E))},S9={[V.COMMON]:[new ke(j.BASE_STAT_BOOSTER,1),new ke(j.BERRY,3)].map(E=>(E.setTier(V.COMMON),E)),[V.GREAT]:[new ke(j.ATTACK_TYPE_BOOSTER,5)].map(E=>(E.setTier(V.GREAT),E)),[V.ULTRA]:[new ke(j.REVIVER_SEED,4),new ke(j.SOOTHE_BELL,1),new ke(j.SOUL_DEW,1),new ke(j.GOLDEN_PUNCH,1)].map(E=>(E.setTier(V.ULTRA),E)),[V.ROGUE]:[new ke(j.GRIP_CLAW,5),new ke(j.BATON,2),new ke(j.FOCUS_BAND,5),new ke(j.QUICK_CLAW,3),new ke(j.KINGS_ROCK,3)].map(E=>(E.setTier(V.ROGUE),E)),[V.MASTER]:[new ke(j.LEFTOVERS,1),new ke(j.SHELL_BELL,1)].map(E=>(E.setTier(V.MASTER),E))};function Z0(E){const A=E();return A.id||(A.id=Object.keys(j).find(s=>j[s]===E)),A}o(Z0,"getModifierType");let lk={},Wh={},Ck={},yh={},uk={};function aS(E){let A;switch(E){case 0:A=ar;break;case 1:A=L9;break;case 2:A=o9;break;case 3:A=T9;break;case 4:A=S9;break}return A}o(aS,"getModifierPoolForType");const N9=[768/1024,195/1024,48/1024,12/1024,1/1024],Dl=new Map;function Ti(E,A,s=0){const R=aS(A);Dl.forEach((L,N)=>{Dl.set(N,!1)});const n={},I={},r=Object.fromEntries(new Map(Object.keys(R).map(L=>{n[L]=[];const N=new Map,l=[];let C=0,U=0;R[L].reduce((D,M)=>{const h=M,_=a.findModifiers(H=>H.type.id===h.modifierType.id,A===0),d=h.modifierType instanceof YE?h.modifierType.generateType(E):h.modifierType,f=!_.length||d instanceof GA||d instanceof nS||_.find(H=>H.stackCount<H.getMaxStackCount(!0))?h.weight instanceof Function?h.weight(E,s):h.weight:0;if(h.maxWeight){const H=h.modifierType.id;l.push(H);const B=f;I[H]={weight:B,tier:Number.parseInt(L),tierPercent:0,totalPercent:0},C+=B}if(f)D+=f;else return n[L].push(U++),D;return Dl.has(M.modifierType.id)&&Dl.set(M.modifierType.id,!0),N.set(D,U++),D},0);for(const D of l)I[D].tierPercent=Math.floor(I[D].weight/C*1e4)/100;return[L,Object.fromEntries(N)]})));for(const L of Object.keys(I))I[L].totalPercent=Math.floor(I[L].tierPercent*N9[I[L].tier]*100)/100,I[L].tier=V[I[L].tier];switch(A){case 0:lk=r,Wh=n;break;case 1:case 2:yh=r;break;case 3:uk=r;break;case 4:Ck=r;break}}o(Ti,"regenerateModifierPoolThresholds");function l9(E){return j[E]}o(l9,"getModifierTypeFuncById");function Bf(E,A,s,R){const n=[],I=Math.min(E*5,50);if(!R)new Array(E).fill(0).map((r,L)=>{n.push(Ec(n,I,A,s&&s.length>L?s[L]:void 0))});else{if(R!=null&&R.guaranteedModifierTypeOptions&&R.guaranteedModifierTypeOptions.length>0&&n.push(...R.guaranteedModifierTypeOptions),R.guaranteedModifierTypeFuncs&&R.guaranteedModifierTypeFuncs.length>0&&R.guaranteedModifierTypeFuncs.forEach((r,L)=>{var U;const N=Object.keys(j).find(D=>j[D]===r);let l=(U=j[N])==null?void 0:U.call(j);l=l.withIdFromFunc(j[N]).withTierFromPool(0,A);const C=l instanceof YE?l.generateType(A):l;if(C){const D=new us(C,0);n.push(D)}}),R.guaranteedModifierTiers&&R.guaranteedModifierTiers.length>0){const r=R.allowLuckUpgrades??!0;for(const L of R.guaranteedModifierTiers)n.push(Ec(n,I,A,L,r))}if(n.length<E&&R.fillRemaining)for(;n.length<E;)n.push(Ec(n,I,A,void 0))}return C9(n,A),n}o(Bf,"getPlayerModifierTypeOptions");function Ec(E,A,s,R,n){n=n??!0;let I=oI(s,0,R,void 0,0,n),r=0;for(;E.length&&++r<A&&E.filter(L=>L.type.name===(I==null?void 0:I.type.name)||L.type.group===(I==null?void 0:I.type.group)).length;)I=oI(s,0,(I==null?void 0:I.type.tier)??R,I==null?void 0:I.upgradeCount,0,n);return I}o(Ec,"getModifierTypeOptionWithRetry");function C9(E,A){const s=Math.min(E.length,xe.ITEM_REWARD_OVERRIDE.length);for(let R=0;R<s;R++){const n=xe.ITEM_REWARD_OVERRIDE[R],I=j[n.name];let r=I();if(r instanceof YE){const L="type"in n&&n.type!==null?[n.type]:void 0;r=r.generateType(A,L)}r&&(E[R].type=r.withIdFromFunc(I).withTierFromPool(0,A))}}o(C9,"overridePlayerModifierTypeOptions");function Uk(E,A){return E%10?[[new us(j.POTION(),0,A*.2),new us(j.ETHER(),0,A*.4),new us(j.REVIVE(),0,A*2)],[new us(j.SUPER_POTION(),0,A*.45),new us(j.FULL_HEAL(),0,A)],[new us(j.ELIXIR(),0,A),new us(j.MAX_ETHER(),0,A)],[new us(j.HYPER_POTION(),0,A*.8),new us(j.MAX_REVIVE(),0,A*2.75),new us(j.MEMORY_MUSHROOM(),0,A*4)],[new us(j.MAX_POTION(),0,A*1.5),new us(j.MAX_ELIXIR(),0,A*2.5)],[new us(j.FULL_RESTORE(),0,A*2.25)],[new us(j.SACRED_ASH(),0,A*10)]].slice(0,Math.ceil(Math.max(E+10,0)/30)).flat():[]}o(Uk,"getPlayerShopModifierTypeOptionsForWave");function u9(E,A){var N;let s;switch(E){case V.ULTRA:s=5;break;case V.GREAT:s=3;break;default:s=1;break}const R=50;let n=oI([],3,E),I=0,r;for(;++I<R&&(r=A.find(l=>{var C;return l.type.id===((C=n==null?void 0:n.type)==null?void 0:C.id)}))&&r.getMaxStackCount()<r.stackCount+(I<10?s:1);)n=oI([],3,E);const L=(N=n==null?void 0:n.type)==null?void 0:N.newModifier();return L.stackCount=s,L}o(u9,"getEnemyBuffModifierForWave");function U9(E,A,s,R,n=0){const I=new Array(A).fill(0).map(()=>{var r;return(r=oI(s,R,void 0,n&&!He(n)?1:0))==null?void 0:r.type});return E%1e3||I.push(Z0(j.MINI_BLACK_HOLE)),I}o(U9,"getEnemyModifierTypesForWave");function D9(E){var s,R;const A=[];for(const n of E)for(let I=0;I<3;I++){const r=He(64);let L;r>25?L=V.COMMON:r>12?L=V.GREAT:r>4?L=V.ULTRA:r?L=V.ROGUE:L=V.MASTER;const N=(R=(s=oI(E,4,L))==null?void 0:s.type)==null?void 0:R.newModifier(n);A.push(N)}return A}o(D9,"getDailyRunStarterModifiers");function oI(E,A,s,R,n=0,I=!0){const r=!A,L=aS(A);let N;switch(A){case 0:N=lk;break;case 1:N=yh;break;case 2:N=yh;break;case 3:N=uk;break;case 4:N=Ck;break}if(s===void 0){const h=He(1024);if(R||(R=0),r&&h&&I){const _=TI(E),d=Math.floor(128/((_+4)/4));let f=!1;do f=He(d)<4,f&&R++;while(f)}for(h>255?s=V.COMMON:h>60?s=V.GREAT:h>12?s=V.ULTRA:h?s=V.ROGUE:s=V.MASTER,s+=R;s&&(!ar.hasOwnProperty(s)||!ar[s].length);)s--,R&&R--}else if(R===void 0&&r){if(R=0,s<V.MASTER&&I){const h=TI(E),_=Math.floor(128/((h+4)/4));for(;ar.hasOwnProperty(s+R+1)&&ar[s+R+1].length&&He(_)<4;)R++;s+=R}}else n===10&&s&&(n=0,s--);const l=Object.keys(N[s]),C=Number.parseInt(l[l.length-1]),U=He(C);let D;for(const h of l){const _=Number.parseInt(h);if(U<_){D=N[s][_];break}}if(D===void 0)return null;r&&(Wh[s].filter(h=>h<=D).length,Wh[s]);let M=L[s][D].modifierType;return M instanceof YE&&(M=M.generateType(E),M===null)?(r&&V[s],oI(E,A,s,R,++n)):new us(M,R)}o(oI,"getNewModifierTypeOption");function M9(E){let A=ar[E||V.COMMON][0];return A instanceof ke&&(A=A.modifierType),A}o(M9,"getDefaultModifierTypeForTier");const jg=class jg{constructor(A,s,R=0){this.type=A,this.upgradeCount=s,this.cost=Math.min(Math.round(R),Number.MAX_SAFE_INTEGER)}};o(jg,"ModifierTypeOption");let us=jg;function TI(E){if(a.gameMode.isDaily){const R=new je(0);return a.executeWithSeedOffset(()=>{R.value=He(15)},0,a.seed),R.value}const A=EE.getEventLuckBoostedSpecies(),s=Phaser.Math.Clamp(E.map(R=>R.isAllowedInBattle()?R.getLuck()+(A.includes(R.species.speciesId)?1:0):0).reduce((R,n)=>R+=n,0),0,14);return Math.min(EE.getEventLuckBoost()+(s??0),14)}o(TI,"getPartyLuckValue");function Dk(E){return["D","C","C+","B-","B","B+","A-","A","A+","A++","S","S+","SS","SS+","SSS"][E]}o(Dk,"getLuckString");function Mk(E){let A;return E>11?A=V.LUXURY:E>9?A=V.MASTER:E>5?A=V.ROGUE:E>2?A=V.ULTRA:E?A=V.GREAT:A=V.COMMON,Rr(A)}o(Mk,"getLuckTextTint");var LO=(E=>(E.Intro="INTRO",E.Access_Menu="ACCESS_MENU",E.Menu="MENU",E.Starter_Select="STARTER_SELECT",E.Pokedex="POKEDEX",E.Pokerus="POKERUS",E.Stat_Change="STAT_CHANGE",E.Select_Item="SELECT_ITEM",E.Egg_Gacha="EGG_GACHA",E))(LO||{});const c9={INTRO:o(()=>new Promise(E=>{a.ui.showText(u.t("tutorial:intro"),null,()=>E(),null,!0)}),"INTRO"),ACCESS_MENU:o(()=>new Promise(E=>{if(a.enableTouchControls)return E();a.showFieldOverlay(1e3).then(()=>a.ui.showText(u.t("tutorial:accessMenu"),null,()=>a.hideFieldOverlay(1e3).then(()=>E()),null,!0))}),"ACCESS_MENU"),MENU:o(()=>new Promise(E=>{a.gameData.saveTutorialFlag("ACCESS_MENU",!0),a.ui.showText(u.t("tutorial:menu"),null,()=>a.ui.showText("",null,()=>E()),null,!0)}),"MENU"),STARTER_SELECT:o(()=>new Promise(E=>{a.ui.showText(u.t("tutorial:starterSelect"),null,()=>a.ui.showText("",null,()=>E()),null,!0)}),"STARTER_SELECT"),POKERUS:o(()=>new Promise(E=>{a.ui.showText(u.t("tutorial:pokerus"),null,()=>a.ui.showText("",null,()=>E()),null,!0)}),"POKERUS"),STAT_CHANGE:o(()=>new Promise(E=>{a.showFieldOverlay(1e3).then(()=>a.ui.showText(u.t("tutorial:statChange"),null,()=>a.ui.showText("",null,()=>a.hideFieldOverlay(1e3).then(()=>E())),null,!0))}),"STAT_CHANGE"),SELECT_ITEM:o(()=>new Promise(E=>{a.ui.setModeWithoutClear(te.MESSAGE).then(()=>{a.ui.showText(u.t("tutorial:selectItem"),null,()=>a.ui.showText("",null,()=>a.ui.setModeWithoutClear(te.MODIFIER_SELECT).then(()=>E())),null,!0)})}),"SELECT_ITEM"),EGG_GACHA:o(()=>new Promise(E=>{a.ui.showText(u.t("tutorial:eggGacha"),null,()=>a.ui.showText("",null,()=>E()),null,!0)}),"EGG_GACHA")};async function Za(E){if(!a.enableTutorials&&!xe.BYPASS_TUTORIAL_SKIP_OVERRIDE||a.gameData.getTutorialFlags()[E]&&!xe.BYPASS_TUTORIAL_SKIP_OVERRIDE)return!1;const A=a.ui.getHandler(),s=a.disableMenu;return a.disableMenu=!0,A instanceof ia&&(A.tutorialActive=!0),await h9(A),await c9[E](),await _9(A),a.disableMenu=s,a.gameData.saveTutorialFlag(E,!0),A instanceof ia&&(A.tutorialActive=!1),!0}o(Za,"handleTutorial");async function h9(E){if(E instanceof ia&&E.tutorialOverlay)a.tweens.add({targets:E.tutorialOverlay,alpha:.5,duration:750,ease:"Sine.easeOut",onComplete:o(()=>!0,"onComplete")});else return!0}o(h9,"showTutorialOverlay");async function _9(E){if(E instanceof ia&&E.tutorialOverlay)a.tweens.add({targets:E.tutorialOverlay,alpha:0,duration:500,ease:"Sine.easeOut",onComplete:o(()=>!0,"onComplete")});else return!0}o(_9,"hideTutorialOverlay");var ea=(E=>(E[E.REROLL=0]="REROLL",E[E.REWARDS=1]="REWARDS",E[E.SHOP=2]="SHOP",E[E.CHECK_TEAM=3]="CHECK_TEAM",E))(ea||{});const Pa=7,Jb=12,zb=24,vn=-62,qg=class qg extends ia{constructor(){super(te.CONFIRM),this.moveInfoOverlayActive=!1,this.rowCursor=0,this.options=[],this.shopOptionsRows=[]}setup(){const A=this.getUi();this.modifierContainer=a.add.container(0,0),A.add(this.modifierContainer);const R=document.createElement("canvas").getContext("2d"),n=Wn(k.PARTY,a.uiTheme).styleOptions;R&&(R.font=n.fontSize+"px "+n.fontFamily,this.transferButtonWidth=R.measureText(u.t("modifierSelectUiHandler:transfer")).width,this.checkButtonWidth=R.measureText(u.t("modifierSelectUiHandler:checkTeam")).width),this.transferButtonContainer=a.add.container((a.game.canvas.width-this.checkButtonWidth)/6-21,vn),this.transferButtonContainer.setName("transfer-btn"),this.transferButtonContainer.setVisible(!1),A.add(this.transferButtonContainer);const I=Se(-4,-2,u.t("modifierSelectUiHandler:transfer"),k.PARTY);I.setName("text-transfer-btn"),I.setOrigin(1,0),this.transferButtonContainer.add(I),this.checkButtonContainer=a.add.container(a.game.canvas.width/6-1,vn),this.checkButtonContainer.setName("use-btn"),this.checkButtonContainer.setVisible(!1),A.add(this.checkButtonContainer);const r=Se(-4,-2,u.t("modifierSelectUiHandler:checkTeam"),k.PARTY);r.setName("text-use-btn"),r.setOrigin(1,0),this.checkButtonContainer.add(r),this.rerollButtonContainer=a.add.container(16,vn),this.rerollButtonContainer.setName("reroll-brn"),this.rerollButtonContainer.setVisible(!1),A.add(this.rerollButtonContainer);const L=Se(-4,-2,u.t("modifierSelectUiHandler:reroll"),k.PARTY);L.setName("text-reroll-btn"),L.setOrigin(0,0),this.rerollButtonContainer.add(L),this.rerollCostText=Se(0,0,"",k.MONEY),this.rerollCostText.setName("text-reroll-cost"),this.rerollCostText.setOrigin(0,0),this.rerollCostText.setPositionRelative(L,L.displayWidth+5,1),this.rerollButtonContainer.add(this.rerollCostText),this.lockRarityButtonContainer=a.add.container(16,vn),this.lockRarityButtonContainer.setVisible(!1),A.add(this.lockRarityButtonContainer),this.lockRarityButtonText=Se(-4,-2,u.t("modifierSelectUiHandler:lockRarities"),k.PARTY),this.lockRarityButtonText.setOrigin(0,0),this.lockRarityButtonContainer.add(this.lockRarityButtonText),this.continueButtonContainer=a.add.container(a.game.canvas.width/12,-(a.game.canvas.height/12)),this.continueButtonContainer.setVisible(!1),A.add(this.continueButtonContainer);const N=Se(-24,5,u.t("modifierSelectUiHandler:continueNextWaveButton"),k.MESSAGE);N.setName("text-continue-btn"),this.continueButtonContainer.add(N);const l=1;this.moveInfoOverlay=new JR({delayVisibility:!0,scale:l,onSide:!0,right:!0,x:1,y:-JR.getHeight(l,!0)-1,width:a.game.canvas.width/6-2}),A.add(this.moveInfoOverlay),a.addInfoToggle(this.moveInfoOverlay)}show(A){if(a.disableMenu=!1,this.active)return A.length>=3&&(this.awaitingActionInput=!0,this.onActionInput=A[2]),this.moveInfoOverlay.active=this.moveInfoOverlayActive,!1;if(A.length!==4||!Array.isArray(A[1])||!(A[2]instanceof Function))return!1;super.show(A),this.getUi().clearText(),this.player=A[0];const s=this.player&&!!a.findModifiers(D=>D instanceof Ft&&D.isTransferable).length,R=!!a.findModifier(D=>D instanceof JN);this.transferButtonContainer.setVisible(!1),this.transferButtonContainer.setAlpha(0),this.checkButtonContainer.setVisible(!1),this.checkButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!1),this.rerollButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setVisible(!1),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setVisible(!1),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setPositionRelative(this.lockRarityButtonContainer,0,R?-12:0),this.rerollCost=A[3],this.updateRerollCostText();const n=A[1],I=a.gameMode.hasNoShop,r=new je(a.getWaveMoneyAmount(1));a.applyModifier(Ii,!0,r);const L=I?[]:Uk(a.currentBattle.waveIndex,r.value),N=L.length>Pa?-12:-24;for(let D=0;D<n.length;D++){const M=a.game.canvas.width/6/(n.length+2),h=new Nu(M*(D+1)+M*.5,-a.game.canvas.height/12+N,n[D]);h.setScale(.5),a.add.existing(h),this.modifierContainer.add(h),this.options.push(h)}const l=this.continueButtonContainer.getAt(0);l.y=N-5,l.setVisible(this.options.length===0);for(let D=0;D<L.length;D++){const M=D<Pa?0:1,h=D<Pa?D:D-Pa,_=L.slice(M?Pa:0,M?void 0:Pa),d=a.game.canvas.width/6/(_.length+2),f=new Nu(d*(h+1)+d*.5,-a.game.canvas.height/12-a.game.canvas.height/32-(42-(28*M-1)),L[D]);f.setScale(.375),a.add.existing(f),this.modifierContainer.add(f),M>=this.shopOptionsRows.length&&this.shopOptionsRows.push([]),this.shopOptionsRows[M].push(f)}const C=n.map(D=>D.upgradeCount).reduce((D,M)=>Math.max(M,D),0);a.getModifierBar().updateModifiers(a.modifiers,!0),a.showShopOverlay(750*a.gameSpeed),a.updateAndShowText(750),a.updateBiomeWaveText(),a.updateMoneyText();let U=0;return a.tweens.addCounter({ease:"Sine.easeIn",duration:1250,onUpdate:o(D=>{const M=D.getValue(),h=Math.floor(M*n.length);if(h>U&&h<=n.length){const _=this.options[U];_==null||_.show(Math.floor((1-M)*1250)*.325+2e3*C,-(C-n[U].upgradeCount)),U++}},"onUpdate")}),a.time.delayedCall(1e3+C*2e3,()=>{for(const D of this.shopOptionsRows.flat())D.show(0,0)}),a.time.delayedCall(4e3+C*2e3,()=>{s&&(this.transferButtonContainer.setAlpha(0),this.transferButtonContainer.setVisible(!0),a.tweens.add({targets:this.transferButtonContainer,alpha:1,duration:250})),this.rerollButtonContainer.setAlpha(0),this.checkButtonContainer.setAlpha(0),this.lockRarityButtonContainer.setAlpha(0),this.continueButtonContainer.setAlpha(0),this.rerollButtonContainer.setVisible(!0),this.checkButtonContainer.setVisible(!0),this.continueButtonContainer.setVisible(this.rerollCost<0),this.lockRarityButtonContainer.setVisible(R),a.tweens.add({targets:[this.checkButtonContainer,this.continueButtonContainer],alpha:1,duration:250}),a.tweens.add({targets:[this.rerollButtonContainer,this.lockRarityButtonContainer],alpha:this.rerollCost<0?.5:1,duration:250});const D=o(()=>{a.shopCursorTarget===ea.CHECK_TEAM?(this.setRowCursor(0),this.setCursor(2)):a.shopCursorTarget===ea.SHOP&&a.gameMode.hasNoShop?(this.setRowCursor(ea.REWARDS),this.setCursor(0)):(this.setRowCursor(a.shopCursorTarget),this.setCursor(0))},"updateCursorTarget");D(),Za(LO.Select_Item).then(M=>{M&&D(),this.awaitingActionInput=!0,this.onActionInput=A[2]})}),!0}processInput(A){const s=this.getUi();if(!this.awaitingActionInput)return!1;let R=!1;if(A===X.ACTION){if(R=!0,this.onActionInput){const n=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,n(this.rowCursor,this.cursor)?(this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1):(this.awaitingActionInput=!0,this.onActionInput=n)}}else if(A===X.CANCEL){if(this.player&&(R=!0,this.onActionInput)){const n=this.onActionInput;this.awaitingActionInput=!1,this.onActionInput=null,n(-1),this.moveInfoOverlayActive=this.moveInfoOverlay.active,this.moveInfoOverlay.setVisible(!1),this.moveInfoOverlay.active=!1}}else switch(A){case X.UP:this.rowCursor===0&&this.cursor===3?R=this.setCursor(0):this.rowCursor<this.shopOptionsRows.length+1?R=this.setRowCursor(this.rowCursor+1):R=this.setRowCursor(0);break;case X.DOWN:this.rowCursor?R=this.setRowCursor(this.rowCursor-1):this.lockRarityButtonContainer.visible&&this.cursor===0?R=this.setCursor(3):R=this.setRowCursor(this.shopOptionsRows.length+1);break;case X.LEFT:if(this.rowCursor)this.cursor?R=this.setCursor(this.cursor-1):this.rowCursor===1&&this.options.length===0?R=!1:R=this.setCursor(this.getRowItems(this.rowCursor)-1);else switch(this.cursor){case 0:R=this.setCursor(2);break;case 1:this.lockRarityButtonContainer.visible?R=this.setCursor(3):R=this.rerollButtonContainer.visible&&this.setCursor(0);break;case 2:this.transferButtonContainer.visible?R=this.setCursor(1):this.rerollButtonContainer.visible?R=this.setCursor(0):R=!1;break;case 3:this.lockRarityButtonContainer.visible?R=this.setCursor(2):R=!1}break;case X.RIGHT:if(this.rowCursor)this.cursor<this.getRowItems(this.rowCursor)-1?R=this.setCursor(this.cursor+1):this.rowCursor===1&&this.options.length===0?R=this.setRowCursor(0):R=this.setCursor(0);else switch(this.cursor){case 0:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break;case 1:R=this.setCursor(2);break;case 2:R=this.setCursor(0);break;case 3:this.transferButtonContainer.visible?R=this.setCursor(1):R=this.setCursor(2);break}break}return R&&s.playSelect(),R}setCursor(A){const s=this.getUi(),R=super.setCursor(A);this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.modifierContainer.add(this.cursorObj));const n=this.rowCursor===1?this.options:this.shopOptionsRows[this.shopOptionsRows.length-(this.rowCursor-1)];if(this.cursorObj.setScale(this.rowCursor===1?2:this.rowCursor>=2?1.5:1),this.moveInfoOverlay.clear(),this.rowCursor){if(this.rowCursor===1&&n.length===0)return this.cursorObj.setScale(1.25),this.cursorObj.setPosition(a.game.canvas.width/18+23,-a.game.canvas.height/12-(this.shopOptionsRows.length>1?Jb-2:zb-2)),s.showText(u.t("modifierSelectUiHandler:continueNextWaveDescription")),R;const I=a.game.canvas.width/6/(n.length+2);this.rowCursor<2?this.cursorObj.setPosition(I*(A+1)+I*.5-20,-a.game.canvas.height/12-(this.shopOptionsRows.length>1?Jb-2:zb-2)):this.cursorObj.setPosition(I*(A+1)+I*.5-16,-a.game.canvas.height/12-a.game.canvas.height/32-(-14+28*(this.rowCursor-(this.shopOptionsRows.length-1))));const r=n[this.cursor].modifierTypeOption.type;r&&s.showText(r.getDescription()),r instanceof LI&&this.moveInfoOverlay.show(Ve[r.moveId])}else A===0?(this.cursorObj.setPosition(6,this.lockRarityButtonContainer.visible?vn-8:vn+4),s.showText(u.t("modifierSelectUiHandler:rerollDesc"))):A===1?(this.cursorObj.setPosition((a.game.canvas.width-this.transferButtonWidth-this.checkButtonWidth)/6-30,vn+4),s.showText(u.t("modifierSelectUiHandler:transferDesc"))):A===2?(this.cursorObj.setPosition((a.game.canvas.width-this.checkButtonWidth)/6-10,vn+4),s.showText(u.t("modifierSelectUiHandler:checkTeamDesc"))):(this.cursorObj.setPosition(6,vn+4),s.showText(u.t("modifierSelectUiHandler:lockRaritiesDesc")));return R}setRowCursor(A){const s=this.rowCursor;if(A!==s){this.rowCursor=A;let R=Math.round(this.cursor/Math.max(this.getRowItems(s)-1,1)*(this.getRowItems(A)-1));return A===1&&this.options.length===0&&(R=0),A===0&&(this.options.length===0&&(R=1),R===0&&!this.rerollButtonContainer.visible&&(R=1),R===1&&!this.transferButtonContainer.visible&&(R=2)),A===0&&s>1&&R===0&&this.lockRarityButtonContainer.visible&&(R=3),A===this.shopOptionsRows.length+1&&s===0&&this.cursor===3&&(R=0),this.cursor=-1,this.setCursor(R),!0}return!1}getRowItems(A){switch(A){case 0:return 3;case 1:return this.options.length;default:return this.shopOptionsRows[this.shopOptionsRows.length-(A-1)].length}}setRerollCost(A){this.rerollCost=A}updateCostText(){const A=this.shopOptionsRows.flat();for(const s of A)s.updateCostText();this.updateRerollCostText()}updateRerollCostText(){if(this.rerollCost<0){this.rerollCostText.setVisible(!1);return}this.rerollCostText.setVisible(!0);const s=a.money>=this.rerollCost,R=Ol(a.moneyFormat,this.rerollCost);this.rerollCostText.setText(u.t("modifierSelectUiHandler:rerollCost",{formattedMoney:R})),this.rerollCostText.setColor(this.getTextColor(s?k.MONEY:k.PARTY_RED)),this.rerollCostText.setShadowColor(this.getTextColor(s?k.MONEY:k.PARTY_RED,!0))}updateLockRaritiesText(){const A=a.lockModifierTiers?k.SUMMARY_BLUE:k.PARTY;this.lockRarityButtonText.setColor(this.getTextColor(A)),this.lockRarityButtonText.setShadowColor(this.getTextColor(A,!0))}clear(){super.clear(),this.moveInfoOverlay.clear(),this.moveInfoOverlayActive=!1,this.awaitingActionInput=!1,this.onActionInput=null,this.getUi().clearText(),this.eraseCursor(),this.cursor=0,this.rowCursor=0,a.hideShopOverlay(750*a.gameSpeed),a.hideLuckText(250),a.getModifierBar().updateModifiers(a.modifiers);const A=this.options.concat(this.shopOptionsRows.flat());this.options.splice(0,this.options.length),this.shopOptionsRows.splice(0,this.shopOptionsRows.length),a.tweens.add({targets:A,scale:.01,duration:250,ease:"Cubic.easeIn",onComplete:o(()=>A.forEach(s=>s.destroy()),"onComplete")}),[this.rerollButtonContainer,this.checkButtonContainer,this.transferButtonContainer,this.lockRarityButtonContainer,this.continueButtonContainer].forEach(s=>{s.visible&&a.tweens.add({targets:s,alpha:0,duration:250,ease:"Cubic.easeIn",onComplete:o(()=>{this.options.length?s.setAlpha(1):s.setVisible(!1)},"onComplete")})})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(qg,"ModifierSelectUiHandler");let wh=qg;const em=class em extends TE.GameObjects.Container{constructor(A,s,R){super(a,A,s),this.modifierTypeOption=R,this.setup()}setup(){var s,R,n;if(!this.modifierTypeOption.cost){const I=o(()=>{const r=a.add.sprite(0,-182,"pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount));return r.setScale(2),r},"getPb");this.pb=I(),this.add(this.pb),this.pbTint=I(),this.pbTint.setVisible(!1),this.add(this.pbTint)}this.itemContainer=a.add.container(0,0),this.itemContainer.setScale(.5),this.itemContainer.setAlpha(0),this.add(this.itemContainer);const A=o(()=>{var r;return a.add.sprite(0,0,"items",(r=this.modifierTypeOption.type)==null?void 0:r.iconImage)},"getItem");this.item=A(),this.itemContainer.add(this.item),this.modifierTypeOption.cost||(this.itemTint=A(),this.itemTint.setTintFill(TE.Display.Color.GetColor(255,192,255)),this.itemContainer.add(this.itemTint)),this.itemText=Se(0,35,(s=this.modifierTypeOption.type)==null?void 0:s.name,k.PARTY,{align:"center"}),this.itemText.setOrigin(.5,0),this.itemText.setAlpha(0),this.itemText.setTint((R=this.modifierTypeOption.type)!=null&&R.tier?Rr((n=this.modifierTypeOption.type)==null?void 0:n.tier):void 0),this.add(this.itemText),this.modifierTypeOption.cost&&(this.itemCostText=Se(0,45,"",k.MONEY,{align:"center"}),this.itemCostText.setOrigin(.5,0),this.itemCostText.setAlpha(0),this.add(this.itemCostText),this.updateCostText())}show(A,s){if(!this.modifierTypeOption.cost){a.tweens.add({targets:this.pb,y:0,duration:1250,ease:"Bounce.Out"});let R=1,n=0,I=!1;a.tweens.addCounter({from:1,to:0,duration:1250,ease:"Bounce.Out",onUpdate:o(r=>{if(!a)return;const L=r.getValue();!I&&L>R?(a.playSound("se/pb_bounce_1",{volume:1/++n}),I=!0):I&&L<R&&(I=!1),R=L},"onUpdate")});for(let r=0;r<this.modifierTypeOption.upgradeCount;r++){const L=r;a.time.delayedCall(A-2e3*(this.modifierTypeOption.upgradeCount-(L+1+s)),()=>{a.playSound("se/upgrade",{rate:1+.25*L}),this.pbTint.setPosition(this.pb.x,this.pb.y),this.pbTint.setTintFill(16777215),this.pbTint.setAlpha(0),this.pbTint.setVisible(!0),a.tweens.add({targets:this.pbTint,alpha:1,duration:1e3,ease:"Sine.easeIn",onComplete:o(()=>{this.pb.setTexture("pb",this.getPbAtlasKey(-this.modifierTypeOption.upgradeCount+(L+1))),a.tweens.add({targets:this.pbTint,alpha:0,duration:750,ease:"Sine.easeOut",onComplete:o(()=>{this.pbTint.setVisible(!1)},"onComplete")})},"onComplete")})})}}a.time.delayedCall(A+2e3,()=>{a&&(this.modifierTypeOption.cost||(this.pb.setTexture("pb",`${this.getPbAtlasKey(0)}_open`),a.playSound("se/pb_rel"),a.tweens.add({targets:this.pb,duration:500,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:o(()=>this.pb.destroy(),"onComplete")})),a.tweens.add({targets:this.itemContainer,duration:500,ease:"Elastic.Out",scale:2,alpha:1}),this.modifierTypeOption.cost||a.tweens.add({targets:this.itemTint,alpha:0,duration:500,ease:"Sine.easeIn",onComplete:o(()=>this.itemTint.destroy(),"onComplete")}),a.tweens.add({targets:this.itemText,duration:500,alpha:1,y:25,ease:"Cubic.easeInOut"}),this.itemCostText&&a.tweens.add({targets:this.itemCostText,duration:500,alpha:1,y:35,ease:"Cubic.easeInOut"}))})}getPbAtlasKey(A=0){var s;return fO(((s=this.modifierTypeOption.type)==null?void 0:s.tier)+A)}updateCostText(){const A=xe.WAIVE_ROLL_FEE_OVERRIDE?0:this.modifierTypeOption.cost,s=A<=a.money?k.MONEY:k.PARTY_RED,R=Ol(a.moneyFormat,A);this.itemCostText.setText(u.t("modifierSelectUiHandler:itemCost",{formattedMoney:R})),this.itemCostText.setColor(eA(s,!1,a.uiTheme)),this.itemCostText.setShadowColor(eA(s,!0,a.uiTheme))}};o(em,"ModifierOption");let Nu=em;const tm=class tm{start(){}end(){a.shiftPhase()}};o(tm,"Phase");let nE=tm;const Am=class Am extends nE{showEnemyTrainer(A=oe.NONE){if(!a.currentBattle.trainer){console.warn("Enemy trainer is missing!");return}const s=a.currentBattle.trainer.getSprites(),R=a.currentBattle.trainer.getTintSprites();for(let n=0;n<s.length;n++){const I=!A||!n==(A===oe.TRAINER)||s.length<2;[s[n],R[n]].map(r=>{I&&(r.x=A||s.length<2?0:n?16:-16),r.setVisible(I),r.clearTint()}),s[n].setVisible(I),R[n].setVisible(I),s[n].clearTint(),R[n].clearTint()}a.tweens.add({targets:a.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}hideEnemyTrainer(){a.tweens.add({targets:a.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};o(Am,"BattlePhase");let HE=Am;const Bo=class Bo extends HE{constructor(A=0,s,R,n=!1){super(),this.rerollCount=A,this.modifierTiers=s,this.customModifierSettings=R,this.isCopy=n}start(){var n,I,r;super.start(),!this.rerollCount&&!this.isCopy?this.updateSeed():this.rerollCount&&(a.reroll=!1);const A=a.getPlayerParty();this.isCopy||Ti(A,this.getPoolType(),this.rerollCount);const s=new je(3);if(this.isPlayer()&&(a.applyModifiers(ri,!0,s),a.applyModifiers(Li,!0,s)),this.customModifierSettings){const L=(((n=this.customModifierSettings.guaranteedModifierTiers)==null?void 0:n.length)||0)+(((I=this.customModifierSettings.guaranteedModifierTypeOptions)==null?void 0:I.length)||0)+(((r=this.customModifierSettings.guaranteedModifierTypeFuncs)==null?void 0:r.length)||0);if(this.customModifierSettings.fillRemaining){const N=s.value;s.value=N>L?N:L}else s.value=L}this.typeOptions=this.getModifierTypeOptions(s.value);const R=o((L,N)=>{if(L<0||N<0)return a.ui.showText(u.t("battle:skipItemQuestion"),null,()=>{a.ui.setOverlayMode(te.CONFIRM,()=>{a.ui.revertMode(),a.ui.setMode(te.MESSAGE),super.end()},()=>a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers)))}),!1;let l,C;const U=this.getRerollCost(a.lockModifierTiers);switch(L){case 0:switch(N){case 0:if(U<0||a.money<U)return a.ui.playError(),!1;a.reroll=!0,a.unshiftPhase(new Bo(this.rerollCount+1,this.typeOptions.map(f=>{var H;return(H=f.type)==null?void 0:H.tier}).filter(f=>f!==void 0))),a.ui.clearText(),a.ui.setMode(te.MESSAGE).then(()=>super.end()),xe.WAIVE_ROLL_FEE_OVERRIDE||(a.money-=U,a.updateMoneyText(),a.animateMoneyChanged(!1)),a.playSound("se/buy");break;case 1:a.ui.setModeWithoutClear(te.PARTY,gs.MODIFIER_TRANSFER,-1,(f,H,B,K)=>{if(K!==void 0&&f<6&&K<6&&f!==K&&H>-1){const v=a.findModifiers(Z=>Z instanceof Ft&&Z.isTransferable&&Z.pokemonId===A[f].id)[H];a.tryTransferHeldItemModifier(v,A[K],!0,B,void 0,void 0,!1)}else a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers))},kE.FilterItemMaxStacks);break;case 2:a.ui.setModeWithoutClear(te.PARTY,gs.CHECK,-1,()=>{a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers))});break;case 3:if(U<0)return a.ui.playError(),!1;a.lockModifierTiers=!a.lockModifierTiers;const d=a.ui.getHandler();return d.setRerollCost(this.getRerollCost(a.lockModifierTiers)),d.updateLockRaritiesText(),d.updateRerollCostText(),!1}return!0;case 1:if(this.typeOptions.length===0)return a.ui.clearText(),a.ui.setMode(te.MESSAGE),super.end(),!0;this.typeOptions[N].type&&(l=this.typeOptions[N].type);break;default:const M=Uk(a.currentBattle.waveIndex,a.getWaveMoneyAmount(1)),h=M[L>2||M.length<=Pa?N:N+Pa];h.type&&(l=h.type);const _=new je(h.cost);a.applyModifier(Ii,!0,_),C=_.value;break}if(C&&a.money<C&&!xe.WAIVE_ROLL_FEE_OVERRIDE)return a.ui.playError(),!1;const D=o((M,h=!1)=>{const _=a.addModifier(M,!1,h,void 0,void 0,C);(M.type instanceof _r||M.type instanceof LI)&&a.unshiftPhase(this.copy()),C&&!(M.type instanceof _r)?_?(xe.WAIVE_ROLL_FEE_OVERRIDE||(a.money-=C,a.updateMoneyText(),a.animateMoneyChanged(!1)),a.playSound("se/buy"),a.ui.getHandler().updateCostText()):a.ui.playError():(a.ui.clearText(),a.ui.setMode(te.MESSAGE),super.end())},"applyModifier");if(l instanceof oR)if(l instanceof Iu)a.ui.setModeWithoutClear(te.PARTY,gs.SPLICE,-1,(M,h)=>{h!==void 0&&M<6&&h<6&&M!==h?a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer()).then(()=>{const _=l.newModifier(A[M],A[h]);D(_,!0)}):a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers))},l.selectFilter);else{const M=l,h=l instanceof wr,_=l instanceof LI,d=l instanceof _r,f=l instanceof sS||l instanceof RS,H=h?gs.MOVE_MODIFIER:_?gs.TM_MODIFIER:d?gs.REMEMBER_MOVE_MODIFIER:gs.MODIFIER,B=_?l.moveId:void 0;a.ui.setModeWithoutClear(te.PARTY,H,-1,(K,Y)=>{K<6?a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer()).then(()=>{const v=h?l.newModifier(A[K],Y-iS.MOVE_1):d?l.newModifier(A[K],Y):l.newModifier(A[K]);D(v,!0)}):a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers))},M.selectFilter,l instanceof wr?l.moveSelectFilter:void 0,B,f)}else D(l.newModifier());return!C},"modifierSelectCallback");a.ui.setMode(te.MODIFIER_SELECT,this.isPlayer(),this.typeOptions,R,this.getRerollCost(a.lockModifierTiers))}updateSeed(){a.resetSeed()}isPlayer(){return!0}getRerollCost(A){var r;let s=0;if(xe.WAIVE_ROLL_FEE_OVERRIDE)return s;if(A){const L=[50,125,300,750,2e3];for(const N of this.typeOptions)s+=L[N.type.tier??0]}else s=250;let R=1;if(!Pe((r=this.customModifierSettings)==null?void 0:r.rerollMultiplier)){if(this.customModifierSettings.rerollMultiplier<0)return-1;R=this.customModifierSettings.rerollMultiplier}const n=Math.min(Math.ceil(a.currentBattle.waveIndex/10)*s*2**this.rerollCount*R,Number.MAX_SAFE_INTEGER),I=new je(n);return a.applyModifier(Ii,!0,I),I.value}getPoolType(){return yE.PLAYER}getModifierTypeOptions(A){return Bf(A,a.getPlayerParty(),a.lockModifierTiers?this.modifierTiers:void 0,this.customModifierSettings)}copy(){var A;return new Bo(this.rerollCount,this.modifierTiers,{guaranteedModifierTypeOptions:this.typeOptions,rerollMultiplier:(A=this.customModifierSettings)==null?void 0:A.rerollMultiplier,allowLuckUpgrades:!1},!0)}addModifier(A){return a.addModifier(A,!1,!0)}};o(Bo,"SelectModifierPhase");let BO=Bo;const jb=u.t("partyUiHandler:choosePokemon");var gs=(E=>(E[E.SWITCH=0]="SWITCH",E[E.FAINT_SWITCH=1]="FAINT_SWITCH",E[E.POST_BATTLE_SWITCH=2]="POST_BATTLE_SWITCH",E[E.REVIVAL_BLESSING=3]="REVIVAL_BLESSING",E[E.MODIFIER=4]="MODIFIER",E[E.MOVE_MODIFIER=5]="MOVE_MODIFIER",E[E.TM_MODIFIER=6]="TM_MODIFIER",E[E.REMEMBER_MOVE_MODIFIER=7]="REMEMBER_MOVE_MODIFIER",E[E.MODIFIER_TRANSFER=8]="MODIFIER_TRANSFER",E[E.SPLICE=9]="SPLICE",E[E.RELEASE=10]="RELEASE",E[E.CHECK=11]="CHECK",E[E.SELECT=12]="SELECT",E))(gs||{}),iS=(E=>(E[E.CANCEL=-1]="CANCEL",E[E.SEND_OUT=0]="SEND_OUT",E[E.PASS_BATON=1]="PASS_BATON",E[E.REVIVE=2]="REVIVE",E[E.APPLY=3]="APPLY",E[E.TEACH=4]="TEACH",E[E.TRANSFER=5]="TRANSFER",E[E.SUMMARY=6]="SUMMARY",E[E.POKEDEX=7]="POKEDEX",E[E.UNPAUSE_EVOLUTION=8]="UNPAUSE_EVOLUTION",E[E.SPLICE=9]="SPLICE",E[E.UNSPLICE=10]="UNSPLICE",E[E.RELEASE=11]="RELEASE",E[E.RENAME=12]="RENAME",E[E.SELECT=13]="SELECT",E[E.SCROLL_UP=1e3]="SCROLL_UP",E[E.SCROLL_DOWN=1001]="SCROLL_DOWN",E[E.FORM_CHANGE_ITEM=2e3]="FORM_CHANGE_ITEM",E[E.MOVE_1=3e3]="MOVE_1",E[E.MOVE_2=3001]="MOVE_2",E[E.MOVE_3=3002]="MOVE_3",E[E.MOVE_4=3003]="MOVE_4",E[E.ALL=4e3]="ALL",E))(iS||{});const xO=class xO extends hs{constructor(){super(te.PARTY),this.optionsCursor=0,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.lastCursor=0,this.FilterChallengeLegal=A=>{const s=new Pt(!0);return PR(rO.POKEMON_IN_BATTLE,A,s),s.value?null:u.t("partyUiHandler:cantBeUsed",{pokemonName:ee(A)})},this.localizedOptions=[0,6,7,-1,3,11,4,9,10,2,5,8,1,12,13]}setup(){const A=this.getUi(),s=a.add.container(0,0);s.setName("party"),s.setVisible(!1),A.add(s),this.partyContainer=s,this.partyBg=a.add.image(0,0,"party_bg"),this.partyBg.setName("img-party-bg"),s.add(this.partyBg),this.partyBg.setOrigin(0,1);const R=a.add.container(0,0);R.setName("party-slots"),s.add(R),this.partySlotsContainer=R;const n=a.add.container(0,-32);n.setName("party-msg-box"),s.add(n);const I=Gt(1,31,262,30);I.setName("window-party-msg-box"),I.setOrigin(0,1),n.add(I),this.partyMessageBox=I;const r=Se(10,8,jb,k.WINDOW,{maxLines:2});r.setName("text-party-msg"),r.setOrigin(0,0),n.add(r),this.message=r;const L=new Vh(291,-16);s.add(L),this.partyCancelButton=L,this.optionsContainer=a.add.container(a.game.canvas.width/6-1,-1),s.add(this.optionsContainer),this.iconAnimHandler=new II,this.iconAnimHandler.setup();const N=1;this.moveInfoOverlay=new JR({scale:N,top:!0,x:1,y:-JR.getHeight(N)-1,width:a.game.canvas.width/12-30}),A.add(this.moveInfoOverlay),this.options=[],this.partySlots=[]}show(A){return!A.length||this.active?!1:(super.show(A),this.moveInfoOverlay.clear(),this.partyUiMode=A[0],this.fieldIndex=A.length>1?A[1]:-1,this.selectCallback=A.length>2&&A[2]instanceof Function?A[2]:void 0,this.selectFilter=A.length>3&&A[3]instanceof Function?A[3]:xO.FilterAll,this.moveSelectFilter=A.length>4&&A[4]instanceof Function?A[4]:xO.FilterAllMoves,this.tmMoveId=A.length>5&&A[5]?A[5]:t.NONE,this.showMovePp=A.length>6&&A[6],this.partyContainer.setVisible(!0),this.partyBg.setTexture(`party_bg${a.currentBattle.double?"_double":""}`),this.populatePartySlots(),this.setCursor(0),!0)}processInput(A){var n,I;const s=this.getUi();if(this.pendingPrompt||this.blockInput)return!1;if(this.awaitingActionInput){if((A===X.ACTION||A===X.CANCEL)&&this.onActionInput){s.playSelect();const r=this.onActionInput;return this.onActionInput=null,r(),this.awaitingActionInput=!1,!0}return!1}let R=!1;if(this.optionsMode){const r=this.options[this.optionsCursor];if(A===X.ACTION){const L=a.getPlayerParty()[this.cursor];if(this.partyUiMode===8&&!this.transferMode&&r!==-1){this.startTransfer();let N;for(let l=0;l<a.getPlayerParty().length;l++){const C=a.getPlayerParty()[l],U=o(h=>a.findModifiers(_=>_ instanceof Ft&&_.isTransferable&&_.pokemonId===h.id),"getTransferrableItemsFromPokemon"),D=a.findModifier(h=>h instanceof Ft&&h.pokemonId===C.id&&h.matchType(U(L)[this.transferOptionCursor])),M=this.partySlots.filter(h=>h.getPokemon()===C)[0];l!==this.transferCursor?D?D.getMaxStackCount()===D.stackCount?N=u.t("partyUiHandler:notAble"):N=u.t("partyUiHandler:able"):N=u.t("partyUiHandler:able"):N="",M.slotHpBar.setVisible(!1),M.slotHpOverlay.setVisible(!1),M.slotHpText.setVisible(!1),M.slotDescriptionLabel.setText(N),M.slotDescriptionLabel.setVisible(!0)}return this.clearOptions(),s.playSelect(),!0}if(this.partyUiMode===7&&r!==-1){this.moveInfoOverlay.clear();const N=this.selectFilter(L);return N===null?((n=this.selectCallback)==null||n.call(this,this.cursor,r),this.clearOptions()):(this.clearOptions(),this.showText(N,void 0,()=>this.showText("",0),void 0,!0)),s.playSelect(),!0}if(![6,7,8,10,11,-1,12].includes(r)||r===11&&this.partyUiMode===10){let N;const l=o(C=>a.findModifiers(U=>U instanceof Ft&&U.isTransferable&&U.pokemonId===C.id),"getTransferrableItemsFromPokemon");if(r!==5&&r!==9?(N=this.selectFilter(L),N===null&&(r===0||r===1)&&(N=this.FilterChallengeLegal(L)),N===null&&this.partyUiMode===5&&(N=this.moveSelectFilter(L.moveset[this.optionsCursor]))):N=this.selectFilter(L,l(a.getPlayerParty()[this.transferCursor])[this.transferOptionCursor]),N===null){if(this.partyUiMode!==9&&this.clearOptions(),this.selectCallback&&this.partyUiMode!==11)if(r===5)this.transferCursor!==this.cursor&&(this.transferAll?l(a.getPlayerParty()[this.transferCursor]).forEach((C,U,D)=>{const M=D.length-1-U;this.selectCallback(this.transferCursor,M,this.transferQuantitiesMax[M],this.cursor)}):this.selectCallback(this.transferCursor,this.transferOptionCursor,this.transferQuantities[this.transferOptionCursor],this.cursor)),this.clearTransfer();else if(this.partyUiMode===9)r===9?(this.selectCallback(this.transferCursor,this.cursor),this.clearTransfer()):this.startTransfer(),this.clearOptions();else if(r===11)this.doRelease(this.cursor);else{const C=this.selectCallback;this.selectCallback=null,C(this.cursor,r)}else if(r>=2e3&&a.getCurrentPhase()instanceof BO){if(this.partyUiMode===11){const U=this.getFormChangeItemsModifiers(L)[r-2e3];U.active=!U.active,a.triggerPokemonFormChange(L,Ke,!1,!0)}}else this.cursor&&a.getCurrentPhase().handleCommand(OA.POKEMON,this.cursor,r===1);return this.partyUiMode!==4&&this.partyUiMode!==6&&this.partyUiMode!==5&&s.playSelect(),!0}this.clearOptions(),this.showText(N,void 0,()=>this.showText("",0),void 0,!0)}else{if(r===6)return s.playSelect(),s.setModeWithoutClear(te.SUMMARY,L).then(()=>this.clearOptions()),!0;if(r===7){s.playSelect();const N={shiny:L.shiny,variant:L.variant,form:L.formIndex,female:L.gender===At.FEMALE};return s.setOverlayMode(te.POKEDEX_PAGE,L.species,N).then(()=>this.clearOptions()),!0}else if(r===8)this.clearOptions(),s.playSelect(),L.pauseEvolutions=!L.pauseEvolutions,this.showText(u.t(L.pauseEvolutions?"partyUiHandler:pausedEvolutions":"partyUiHandler:unpausedEvolutions",{pokemonName:ee(L)}),void 0,()=>this.showText("",0),null,!0);else if(r===10)this.clearOptions(),s.playSelect(),this.showText(u.t("partyUiHandler:unspliceConfirmation",{fusionName:(I=L.fusionSpecies)==null?void 0:I.name,pokemonName:L.name}),null,()=>{s.setModeWithoutClear(te.CONFIRM,()=>{const N=L.name;L.unfuse().then(()=>{this.clearPartySlots(),this.populatePartySlots(),s.setMode(te.PARTY),this.showText(u.t("partyUiHandler:wasReverted",{fusionName:N,pokemonName:L.name}),void 0,()=>{s.setMode(te.PARTY),this.showText("",0)},null,!0)})},()=>{s.setMode(te.PARTY),this.showText("",0)})});else{if(r===11)return this.clearOptions(),s.playSelect(),this.cursor>=a.currentBattle.getBattlerCount()||!L.isAllowedInBattle()?(this.blockInput=!0,this.showText(u.t("partyUiHandler:releaseConfirmation",{pokemonName:ee(L)}),null,()=>{this.blockInput=!1,s.setModeWithoutClear(te.CONFIRM,()=>{s.setMode(te.PARTY),this.doRelease(this.cursor)},()=>{s.setMode(te.PARTY),this.showText("",0)})})):this.showText(u.t("partyUiHandler:releaseInBattle"),null,()=>this.showText("",0),null,!0),!0;if(r===12)return this.clearOptions(),s.playSelect(),s.setModeWithoutClear(te.RENAME_POKEMON,{buttonActions:[N=>{s.playSelect(),L.nickname=N,L.updateInfo(),this.clearPartySlots(),this.populatePartySlots(),s.setMode(te.PARTY)},()=>{s.setMode(te.PARTY)}]},L),!0;if(r===-1)return this.processInput(X.CANCEL);if(r===13)return s.playSelect(),!0}}}else{if(A===X.CANCEL)return this.clearOptions(),s.playSelect(),!0;switch(A){case X.LEFT:this.partyUiMode===8&&(this.transferQuantities[r]=this.transferQuantities[r]===1?this.transferQuantitiesMax[r]:this.transferQuantities[r]-1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case X.RIGHT:this.partyUiMode===8&&(this.transferQuantities[r]=this.transferQuantities[r]===this.transferQuantitiesMax[r]?1:this.transferQuantities[r]+1,this.updateOptions(),R=this.setCursor(this.optionsCursor));break;case X.UP:this.partyUiMode===8&&(r!==4e3&&(this.transferQuantities[r]=this.transferQuantitiesMax[r]),this.updateOptions()),R=this.setCursor(this.optionsCursor?this.optionsCursor-1:this.options.length-1);break;case X.DOWN:this.partyUiMode===8&&(r!==4e3&&(this.transferQuantities[r]=this.transferQuantitiesMax[r]),this.updateOptions()),R=this.setCursor(this.optionsCursor<this.options.length-1?this.optionsCursor+1:0);break}if(this.partyUiMode===7){const L=this.options[this.optionsCursor],N=a.getPlayerParty()[this.cursor],l=Ve[N.getLearnableLevelMoves()[L]];l?this.moveInfoOverlay.show(l):this.moveInfoOverlay.clear()}}}else{if(A===X.ACTION){if(this.cursor<6){if(this.partyUiMode===8&&!this.transferMode){const N=a.findModifiers(l=>l instanceof Ft&&l.isTransferable&&l.pokemonId===a.getPlayerParty()[this.cursor].id);this.transferQuantities=N.map(l=>l.getStackCount()),this.transferQuantitiesMax=N.map(l=>l.getStackCount())}this.showOptions(),s.playSelect()}else if(this.partyUiMode===1||this.partyUiMode===3)s.playError();else return this.processInput(X.CANCEL);return!0}if(A===X.CANCEL){if((this.partyUiMode===8||this.partyUiMode===9)&&this.transferMode)this.clearTransfer(),s.playSelect();else if(this.partyUiMode!==1&&this.partyUiMode!==3)if(this.selectCallback){const N=this.selectCallback;this.selectCallback=null,N(6,-1),s.playSelect()}else s.setMode(te.COMMAND,this.fieldIndex),s.playSelect();return!0}const r=this.partySlots.length,L=a.currentBattle.getBattlerCount();switch(A){case X.UP:R=this.setCursor(this.cursor?this.cursor<6?this.cursor-1:r-1:6);break;case X.DOWN:R=this.setCursor(this.cursor<6?this.cursor<r-1?this.cursor+1:6:0);break;case X.LEFT:this.cursor>=L&&this.cursor<=6&&(R=this.setCursor(0));break;case X.RIGHT:if(r===L){R=this.setCursor(6);break}if(L>=2&&r>L&&this.getCursor()===0&&this.lastCursor===1){R=this.setCursor(2);break}if(r>L&&this.cursor<L){R=this.setCursor(this.lastCursor<6&&this.lastCursor||L);break}}}return R&&s.playSelect(),R}populatePartySlots(){const A=a.getPlayerParty();this.cursor<6&&this.cursor>=A.length?this.cursor=A.length-1:this.cursor===6&&this.partyCancelButton.select(),this.lastCursor<6&&this.lastCursor>=A.length&&(this.lastCursor=A.length-1);for(const s in A){const R=Number.parseInt(s),n=new vh(R,A[s],this.iconAnimHandler,this.partyUiMode,this.tmMoveId);a.add.existing(n),this.partySlotsContainer.add(n),this.partySlots.push(n),this.cursor===R&&n.select()}}setCursor(A){let s;if(this.optionsMode){s=this.optionsCursor!==A;let R=!1;if(s&&this.optionsScroll)if(Math.abs(A-this.optionsCursor)===this.options.length-1)this.optionsScrollCursor=A?this.optionsScrollTotal-8:0,this.updateOptions();else{const n=A&&A>this.optionsCursor;n?this.options[A]===1001&&(R=!0,this.optionsScrollCursor++):!A&&this.optionsScrollCursor&&(R=!0,this.optionsScrollCursor--),R&&this.optionsScrollCursor===1&&(this.optionsScrollCursor+=n?1:-1)}R?this.updateOptions():this.optionsCursor=A,this.optionsCursorObj||(this.optionsCursorObj=a.add.image(0,0,"cursor"),this.optionsCursorObj.setOrigin(0,0),this.optionsContainer.add(this.optionsCursorObj)),this.optionsCursorObj.setPosition(8-this.optionsBg.displayWidth,-19-16*(this.options.length-1-this.optionsCursor))}else s=this.cursor!==A,s&&(this.lastCursor=this.cursor,this.cursor=A,this.lastCursor<6?this.partySlots[this.lastCursor].deselect():this.lastCursor===6&&this.partyCancelButton.deselect(),A<6?this.partySlots[A].select():A===6&&this.partyCancelButton.select());return s}showText(A,s,R,n,I,r){A.length===0&&(A=jb),(A==null?void 0:A.indexOf(`
`))===-1?(this.partyMessageBox.setSize(262,30),this.message.setY(10)):(this.partyMessageBox.setSize(262,42),this.message.setY(-5)),super.showText(A,s,R,n,I,r)}showOptions(){if(this.cursor===6)return;this.optionsMode=!0;let A=u.t("partyUiHandler:doWhatWithThisPokemon");switch(this.partyUiMode){case 5:A=u.t("partyUiHandler:selectAMove");break;case 8:this.transferMode||(A=u.t("partyUiHandler:changeQuantity"));break;case 9:this.transferMode||(A=u.t("partyUiHandler:selectAnotherPokemonToSplice"));break}this.showText(A,0),this.updateOptions(),this.partyUiMode===8?this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),42):this.partyMessageBox.setSize(262-Math.max(this.optionsBg.displayWidth-56,0),30),this.setCursor(0)}updateOptions(){var l;const A=a.getPlayerParty()[this.cursor],s=this.partyUiMode===7?A.getLearnableLevelMoves():[];this.partyUiMode===7&&(s!=null&&s.length)&&this.moveInfoOverlay.show(Ve[s[0]]);const R=this.partyUiMode===8?a.findModifiers(C=>C instanceof Ft&&C.isTransferable&&C.pokemonId===A.id):[];this.options.length&&(this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor());let n;if(this.partyUiMode!==5&&this.partyUiMode!==7&&(this.transferMode||this.partyUiMode!==8)){switch(this.partyUiMode){case 0:case 1:case 2:if(this.cursor>=a.currentBattle.getBattlerCount()){const C=this.partyUiMode!==1&&a.findModifier(M=>M instanceof ba&&M.pokemonId===a.getPlayerField()[this.fieldIndex].id),U=a.getPlayerField()[this.fieldIndex].getMoveHistory(),D=this.partyUiMode===1&&U.length&&((l=Ve[U[U.length-1].move].getAttrs(nR)[0])==null?void 0:l.isBatonPass())&&U[U.length-1].result===DA.SUCCESS;this.options.push(D&&!C?1:0),C&&!D&&this.options.push(1)}break;case 3:this.options.push(2);break;case 4:this.options.push(3);break;case 6:this.options.push(4);break;case 8:this.options.push(5);break;case 9:this.transferMode?this.cursor!==this.transferCursor&&this.options.push(9):this.options.push(3);break;case 10:this.options.push(11);break;case 11:if(a.getCurrentPhase()instanceof BO){n=this.getFormChangeItemsModifiers(A);for(let C=0;C<n.length;C++)this.options.push(2e3+C)}break;case 12:this.options.push(13);break}this.options.push(6),this.options.push(7),this.options.push(12),(jt.hasOwnProperty(A.species.speciesId)||A.isFusion()&&A.fusionSpecies&&jt.hasOwnProperty(A.fusionSpecies.speciesId))&&this.options.push(8),this.partyUiMode===0?(A.isFusion()&&this.options.push(10),this.options.push(11)):this.partyUiMode===9&&A.isFusion()&&this.options.push(10)}else if(this.partyUiMode===5)for(let C=0;C<A.moveset.length;C++)this.options.push(3e3+C);else if(this.partyUiMode===7){const C=A.getLearnableLevelMoves();for(let U=0;U<C.length;U++)this.options.push(U)}else{for(let C=0;C<R.length;C++)this.options.push(C);R.length>1&&this.options.push(4e3)}this.optionsScrollTotal=this.options.length;let I=this.optionsScrollCursor,r=Math.min(this.optionsScrollTotal,I+(!I||this.optionsScrollCursor+8>=this.optionsScrollTotal?8:7));this.optionsScroll=this.optionsScrollTotal>9,this.optionsScroll&&(this.options.splice(r,this.optionsScrollTotal),this.options.splice(0,I),I&&this.options.unshift(1e3),r<this.optionsScrollTotal&&this.options.push(1001)),this.options.push(-1),this.optionsBg=Gt(0,0,0,16*this.options.length+13),this.optionsBg.setOrigin(1,1),this.optionsContainer.add(this.optionsBg),I=0,r=this.options.length;let L=0;const N=[];for(let C=I;C<r;C++){const U=this.options[this.options.length-(C+1)];let D=!1,M;if(U===1e3)M="↑";else if(U===1001)M="↓";else if(this.partyUiMode!==7&&(this.partyUiMode!==8||this.transferMode)||U===-1)switch(U){case 3e3:case 3001:case 3002:case 3003:const f=A.moveset[U-3e3];if(this.showMovePp){const H=f.getMovePp(),B=H-f.ppUsed;M=`${f.getName()} ${B}/${H}`}else M=f.getName();break;default:if(n&&U>=2e3){const H=n[U-2e3];M=`${H.active?u.t("partyUiHandler:DEACTIVATE"):u.t("partyUiHandler:ACTIVATE")} ${H.type.name}`}else U===8?M=`${A.pauseEvolutions?u.t("partyUiHandler:UNPAUSE_EVOLUTION"):u.t("partyUiHandler:PAUSE_EVOLUTION")}`:this.localizedOptions.includes(U)?M=u.t(`partyUiHandler:${iS[U]}`):M=aa(iS[U]);break}else if(this.partyUiMode===7){const f=s[U];M=Ve[f].name,D=!A.getSpeciesForm().getLevelMoves().find(H=>H[1]===f)}else U===4e3?M=u.t("partyUiHandler:ALL"):M=R[U].type.name;const h=-6-16*C,_=pE(0,h-16,M,k.WINDOW,{maxLines:1});D&&(_.setColor("#40c8f8"),_.setShadowColor("#006090")),_.setOrigin(0,0);const d=R[U];if(this.partyUiMode===8&&this.transferQuantitiesMax[U]>1&&!this.transferMode&&d!==void 0&&d.type.name===M){let f=` (${this.transferQuantities[U]})`;this.transferQuantitiesMax[U]===d.getMaxHeldItemCount(void 0)&&(f=`[color=${eA(k.SUMMARY_RED)}]${f}[/color]`),_.setText(M+f)}_.setText(`[shadow]${_.text}[/shadow]`),N.push(_),L=Math.max(_.displayWidth,L),this.optionsContainer.add(_)}this.optionsBg.width=Math.max(L+24,94);for(const C of N)C.x=15-this.optionsBg.width}startTransfer(){this.transferMode=!0,this.transferCursor=this.cursor,this.transferOptionCursor=this.getOptionsCursorWithScroll(),this.transferAll=this.options[this.optionsCursor]===4e3,this.partySlots[this.transferCursor].setTransfer(!0)}clearTransfer(){this.transferMode=!1,this.transferAll=!1,this.partySlots[this.transferCursor].setTransfer(!1);for(let A=0;A<this.partySlots.length;A++)this.partySlots[A].slotDescriptionLabel.setVisible(!1),this.partySlots[A].slotHpBar.setVisible(!0),this.partySlots[A].slotHpOverlay.setVisible(!0),this.partySlots[A].slotHpText.setVisible(!0)}doRelease(A){this.showText(this.getReleaseMessage(ee(a.getPlayerParty()[A])),null,()=>{if(this.clearPartySlots(),a.removePartyMemberModifiers(A),a.getPlayerParty().splice(A,1)[0].destroy(),this.populatePartySlots(),this.cursor>=a.getPlayerParty().length&&this.setCursor(this.cursor-1),this.partyUiMode===10){const R=this.selectCallback;this.selectCallback=null,R==null||R(this.cursor,11)}this.showText("",0)},null,!0)}getReleaseMessage(A){const s=YA(128);return s<20?u.t("partyUiHandler:goodbye",{pokemonName:A}):s<40?u.t("partyUiHandler:byebye",{pokemonName:A}):s<60?u.t("partyUiHandler:farewell",{pokemonName:A}):s<80?u.t("partyUiHandler:soLong",{pokemonName:A}):s<100?u.t("partyUiHandler:thisIsWhereWePart",{pokemonName:A}):s<108?u.t("partyUiHandler:illMissYou",{pokemonName:A}):s<116?u.t("partyUiHandler:illNeverForgetYou",{pokemonName:A}):s<124?u.t("partyUiHandler:untilWeMeetAgain",{pokemonName:A}):s<127?u.t("partyUiHandler:sayonara",{pokemonName:A}):u.t("partyUiHandler:smellYaLater",{pokemonName:A})}getFormChangeItemsModifiers(A){let s=a.findModifiers(n=>n instanceof GR&&n.pokemonId===A.id);const R=s.filter(n=>n.active&&n.formChangeItem===_R.ULTRANECROZIUM_Z);return R.length>0?R:(s.find(n=>n.active)?s=s.filter(n=>n.active||n.formChangeItem===_R.ULTRANECROZIUM_Z):A.species.speciesId===e.NECROZMA&&(s=s.filter(n=>n.formChangeItem!==_R.ULTRANECROZIUM_Z)),s)}getOptionsCursorWithScroll(){return this.optionsCursor+this.optionsScrollCursor+(this.options&&this.options[0]===1e3?-1:0)}clearOptions(){this.moveInfoOverlay.clear(),this.optionsMode=!1,this.optionsScroll=!1,this.optionsScrollCursor=0,this.optionsScrollTotal=0,this.options.splice(0,this.options.length),this.optionsContainer.removeAll(!0),this.eraseOptionsCursor(),this.partyMessageBox.setSize(262,30),this.showText("",0)}eraseOptionsCursor(){this.optionsCursorObj&&this.optionsCursorObj.destroy(),this.optionsCursorObj=null}clear(){super.clear(),this.moveInfoOverlay.clear(),this.partyContainer.setVisible(!1),this.clearPartySlots()}clearPartySlots(){this.partySlots.splice(0,this.partySlots.length),this.partySlotsContainer.removeAll(!0)}};o(xO,"PartyUiHandler"),xO.FilterAll=A=>null,xO.FilterNonFainted=A=>A.isFainted()?u.t("partyUiHandler:noEnergy",{pokemonName:ee(A)}):null,xO.FilterFainted=A=>A.isFainted()?null:u.t("partyUiHandler:hasEnergy",{pokemonName:ee(A)}),xO.FilterAllMoves=A=>null,xO.FilterItemMaxStacks=(A,s)=>{const R=a.findModifier(n=>n instanceof Ft&&n.pokemonId===A.id&&n.matchType(s));return R&&R.stackCount===R.getMaxStackCount()?u.t("partyUiHandler:tooManyItems",{pokemonName:ee(A)}):null},xO.NoEffectMessage=u.t("partyUiHandler:anyEffect");let kE=xO;const Em=class Em extends Phaser.GameObjects.Container{constructor(A,s,R,n,I){super(a,A>=a.currentBattle.getBattlerCount()?230.5:64,A>=a.currentBattle.getBattlerCount()?-184+(a.currentBattle.double?-40:0)+(28+(a.currentBattle.double?8:0))*A:-124+(a.currentBattle.double?-8:0)+A*64),this.slotIndex=A,this.pokemon=s,this.iconAnimHandler=R,this.setup(n,I)}getPokemon(){return this.pokemon}setup(A,s){var f;const n=(u.resolvedLanguage??"en")==="ja",I=a.currentBattle.getBattlerCount(),r=`party_slot${this.slotIndex>=I?"":"_main"}`,L=a.add.sprite(0,0,r,`${r}${this.pokemon.hp?"":"_fnt"}`);this.slotBg=L,this.add(L);const N=a.add.sprite(this.slotIndex>=I?-85.5:-51,this.slotIndex>=I?0:-20.5,"party_pb");this.slotPb=N,this.add(N),this.pokemonIcon=a.addPokemonIcon(this.pokemon,N.x,N.y,.5,.5,!0),this.add(this.pokemonIcon),this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ss.PASSIVE);const l=a.add.container(0,0);this.add(l);let C=this.pokemon.getNameToRender(),U;const D=Se(0,0,C,k.PARTY);for(U=D.displayWidth;U>(this.slotIndex>=I?52:76-(this.pokemon.fusionSpecies?8:0));)C=`${C.slice(0,C.endsWith(".")?-2:-1).trimEnd()}.`,D.setText(C),U=D.displayWidth;D.destroy(),this.slotName=Se(0,0,C,k.PARTY),this.slotName.setPositionRelative(L,this.slotIndex>=I?21:24,(this.slotIndex>=I?2:10)+(n?2:0)),this.slotName.setOrigin(0,0);const M=a.add.image(0,0,"party_slot_overlay_lv");M.setPositionRelative(L,(this.slotIndex>=I?21:24)+8,(this.slotIndex>=I?2:10)+12),M.setOrigin(0,0);const h=Se(0,0,this.pokemon.level.toString(),this.pokemon.level<a.getMaxExpLevel()?k.PARTY:k.PARTY_RED);h.setPositionRelative(M,9,n?1.5:0),h.setOrigin(0,.25),l.add([this.slotName,M,h]);const _=kI(this.pokemon.getGender(!0));if(_){const H=Se(0,0,_,k.PARTY);H.setColor(sn(this.pokemon.getGender(!0))),H.setShadowColor(sn(this.pokemon.getGender(!0),!0)),this.slotIndex>=I?H.setPositionRelative(M,36,0):H.setPositionRelative(this.slotName,76-(this.pokemon.fusionSpecies?8:0),3),H.setOrigin(0,.25),l.add(H)}if(this.pokemon.fusionSpecies){const H=a.add.image(0,0,"icon_spliced");H.setScale(.5),H.setOrigin(0,0),this.slotIndex>=I?H.setPositionRelative(M,36+(_?8:0),.5):H.setPositionRelative(this.slotName,76,3.5),l.add(H)}if(this.pokemon.status){const H=a.add.sprite(0,0,Ds("statuses"));H.setFrame(re[(f=this.pokemon.status)==null?void 0:f.effect].toLowerCase()),H.setOrigin(0,0),H.setPositionRelative(M,this.slotIndex>=I?43:55,0),l.add(H)}if(this.pokemon.isShiny()){const H=this.pokemon.isFusion()&&this.pokemon.shiny&&this.pokemon.fusionShiny,B=a.add.image(0,0,`shiny_star_small${H?"_1":""}`);if(B.setOrigin(0,0),B.setPositionRelative(this.slotName,-9,3),B.setTint(lE(H?this.pokemon.variant:this.pokemon.getVariant())),l.add(B),H){const K=a.add.image(0,0,"shiny_star_small_2");K.setOrigin(0,0),K.setPosition(B.x,B.y),K.setTint(lE(this.pokemon.fusionVariant)),l.add(K)}}this.slotHpBar=a.add.image(0,0,"party_slot_hp_bar"),this.slotHpBar.setPositionRelative(L,this.slotIndex>=I?72:8,this.slotIndex>=I?6:31),this.slotHpBar.setOrigin(0,0),this.slotHpBar.setVisible(!1);const d=this.pokemon.getHpRatio();if(this.slotHpOverlay=a.add.sprite(0,0,"party_slot_hp_overlay",d>.5?"high":d>.25?"medium":"low"),this.slotHpOverlay.setPositionRelative(this.slotHpBar,16,2),this.slotHpOverlay.setOrigin(0,0),this.slotHpOverlay.setScale(d,1),this.slotHpOverlay.setVisible(!1),this.slotHpText=Se(0,0,`${this.pokemon.hp}/${this.pokemon.getMaxHp()}`,k.PARTY),this.slotHpText.setPositionRelative(this.slotHpBar,this.slotHpBar.width-3,this.slotHpBar.height-2+(n?2:0)),this.slotHpText.setOrigin(1,0),this.slotHpText.setVisible(!1),this.slotDescriptionLabel=Se(0,0,"",k.MESSAGE),this.slotDescriptionLabel.setPositionRelative(L,this.slotIndex>=I?94:32,this.slotIndex>=I?16:46),this.slotDescriptionLabel.setOrigin(0,1),this.slotDescriptionLabel.setVisible(!1),l.add([this.slotHpBar,this.slotHpOverlay,this.slotHpText,this.slotDescriptionLabel]),A!==6)this.slotDescriptionLabel.setVisible(!1),this.slotHpBar.setVisible(!0),this.slotHpOverlay.setVisible(!0),this.slotHpText.setVisible(!0);else{this.slotHpBar.setVisible(!1),this.slotHpOverlay.setVisible(!1),this.slotHpText.setVisible(!1);let H;this.pokemon.getMoveset().filter(B=>B.moveId===s).length>0?H=u.t("partyUiHandler:learned"):this.pokemon.compatibleTms.indexOf(s)===-1?H=u.t("partyUiHandler:notAble"):H=u.t("partyUiHandler:able"),this.slotDescriptionLabel.setText(H),this.slotDescriptionLabel.setVisible(!0)}}select(){this.selected||(this.selected=!0,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ss.ACTIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.iconAnimHandler.addOrUpdate(this.pokemonIcon,ss.PASSIVE),this.updateSlotTexture(),this.slotPb.setFrame("party_pb"))}setTransfer(A){this.transfer!==A&&(this.transfer=A,this.updateSlotTexture())}updateSlotTexture(){const A=a.currentBattle.getBattlerCount();this.slotBg.setTexture(`party_slot${this.slotIndex>=A?"":"_main"}`,`party_slot${this.slotIndex>=A?"":"_main"}${this.transfer?"_swap":this.pokemon.hp?"":"_fnt"}${this.selected?"_sel":""}`)}};o(Em,"PartySlot");let vh=Em;const sm=class sm extends Phaser.GameObjects.Container{constructor(A,s){super(a,A,s),this.setup()}setup(){const A=a.add.sprite(0,0,"party_cancel");this.add(A),this.partyCancelBg=A;const s=a.add.sprite(-17,0,"party_pb");this.add(s),this.partyCancelPb=s;const R=Se(-8,-7,u.t("partyUiHandler:cancel"),k.PARTY);this.add(R)}select(){this.selected||(this.selected=!0,this.partyCancelBg.setFrame("party_cancel_sel"),this.partyCancelPb.setFrame("party_pb_sel"))}deselect(){this.selected&&(this.selected=!1,this.partyCancelBg.setFrame("party_cancel"),this.partyCancelPb.setFrame("party_pb"))}};o(sm,"PartyCancelButton");let Vh=sm;const Rm=class Rm extends HE{executeForAll(A){const s=a.getField(!0).filter(R=>R.summonData);for(const R of s)A(R)}};o(Rm,"FieldPhase");let On=Rm;const Om=class Om extends On{constructor(A){super(),A=A??a.getField().find(s=>s==null?void 0:s.isActive()).getBattlerIndex(),A===void 0&&console.warn("There are no Pokemon on the field!"),this.battlerIndex=A,this.player=A<2,this.fieldIndex=A%2}getPokemon(){return this.battlerIndex>Wt.ENEMY_2?a.getPokemonById(this.battlerIndex):a.getField()[this.battlerIndex]}};o(Om,"PokemonPhase");let ns=Om;const nm=class nm extends ns{constructor(A){super(A)}start(){var R;super.start();const A=a.currentBattle.turnCommands[this.fieldIndex],s=(R=A==null?void 0:A.move)==null?void 0:R.move;a.ui.setMode(te.TARGET_SELECT,this.fieldIndex,s,n=>{a.ui.setMode(te.MESSAGE);const I=a.getField(),r=I[this.fieldIndex],L=Ve[s];if(L&&r.isMoveTargetRestricted(L.id,r,I[n[0]])){const N=r.getRestrictingTag(s,r,I[n[0]]).selectionDeniedText(r,L.id);a.queueMessage(u.t(N,{moveName:L.name}),0,!0),n=[]}n.length<1?(a.currentBattle.turnCommands[this.fieldIndex]=null,a.unshiftPhase(new IS(this.fieldIndex))):A.targets=n,(A==null?void 0:A.command)===OA.BALL&&this.fieldIndex&&(a.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),this.end()})}};o(nm,"SelectTargetPhase");let lu=nm;var PE=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.TRAINER_BATTLE=1]="TRAINER_BATTLE",E[E.WILD_BATTLE=2]="WILD_BATTLE",E[E.BOSS_BATTLE=3]="BOSS_BATTLE",E[E.NO_BATTLE=4]="NO_BATTLE",E))(PE||{});const go=class go extends On{constructor(A){super(),this.fieldIndex=A}start(){var r,L,N,l,C;super.start(),a.updateGameInfo();const A=a.ui.handlers[te.COMMAND],s=a.currentBattle.battleType===Ht.MYSTERY_ENCOUNTER||a.currentBattle.battleType===Ht.TRAINER||a.arena.biomeType===T.END;if(A&&(a.currentBattle.turn===1&&(!a.commandCursorMemory||s)||A.getCursor()===OA.POKEMON?A.setCursor(OA.FIGHT):A.setCursor(A.getCursor())),this.fieldIndex)if(a.getPlayerField().filter(U=>U.isActive()).length===1)this.fieldIndex=$s.CENTER;else{const U=a.currentBattle.turnCommands[this.fieldIndex-1];((U==null?void 0:U.command)===OA.BALL||(U==null?void 0:U.command)===OA.RUN)&&(a.currentBattle.turnCommands[this.fieldIndex]={command:U==null?void 0:U.command,skip:!0})}if((r=a.currentBattle)!=null&&r.double&&((N=(L=this.getPokemon().getAlly())==null?void 0:L.getTag(w.COMMANDED))==null?void 0:N.getSourcePokemon())===this.getPokemon()&&(a.currentBattle.turnCommands[this.fieldIndex]={command:OA.FIGHT,move:{move:t.NONE,targets:[]},skip:!0}),this.getPokemon().getTag(w.ENCORE)&&this.getPokemon().lapseTag(w.ENCORE),(l=a.currentBattle.turnCommands[this.fieldIndex])!=null&&l.skip)return this.end();const n=a.getPlayerField()[this.fieldIndex],I=n.getMoveQueue();for(;I.length&&I[0]&&I[0].move&&!I[0].virtual&&(!n.getMoveset().find(U=>U.moveId===I[0].move)||!n.getMoveset()[n.getMoveset().findIndex(U=>U.moveId===I[0].move)].isUsable(n,I[0].ignorePP));)I.shift();if(I.length>0){const U=I[0];if(!U.move)this.handleCommand(OA.FIGHT,-1);else{const D=n.getMoveset().findIndex(M=>M.moveId===U.move);D>-1&&n.getMoveset()[D].isUsable(n,U.ignorePP)||U.virtual?this.handleCommand(OA.FIGHT,D,U.ignorePP,U):a.ui.setMode(te.COMMAND,this.fieldIndex)}}else a.currentBattle.isBattleMysteryEncounter()&&((C=a.currentBattle.mysteryEncounter)!=null&&C.skipToFightInput)?(a.ui.clearText(),a.ui.setMode(te.FIGHT,this.fieldIndex)):a.ui.setMode(te.COMMAND,this.fieldIndex)}handleCommand(A,s,...R){var r,L;const n=a.getPlayerField()[this.fieldIndex];let I=!1;switch(A){case OA.TERA:case OA.FIGHT:let N=!1;const l=R.length===2?R[1]:void 0;if(s===-1||n.trySelectMove(s,R[0])||(N=s>-1&&!n.getMoveset().filter(_=>_.isUsable(n)).length)){let _;N?_=t.STRUGGLE:l!==void 0?_=l.move:s>-1?_=n.getMoveset()[s].moveId:_=t.NONE;const d={command:OA.FIGHT,cursor:s,move:{move:_,targets:[],ignorePP:R[0]},args:R},f={command:A,targets:[this.fieldIndex],skip:A===OA.FIGHT},H=l===void 0?Fn(n,_):{targets:l.targets,multiple:l.targets.length>1};_||(d.targets=[this.fieldIndex]),ee(n),H.targets.length>1&&H.multiple&&a.unshiftPhase(new lu(this.fieldIndex)),d.move&&(H.targets.length<=1||H.multiple)?d.move.targets=H.targets:d.move&&n.getTag(w.CHARGING)&&n.getMoveQueue().length>=1?d.move.targets=n.getMoveQueue()[0].targets:a.unshiftPhase(new lu(this.fieldIndex)),a.currentBattle.preTurnCommands[this.fieldIndex]=f,a.currentBattle.turnCommands[this.fieldIndex]=d,I=!0}else if(s<n.getMoveset().length){const _=n.getMoveset()[s];a.ui.setMode(te.MESSAGE);const d=n.isMoveRestricted(_.moveId,n)?n.getRestrictingTag(_.moveId,n).selectionDeniedText(n,_.moveId):_.getName().endsWith(" (N)")?"battle:moveNotImplemented":"battle:moveNoPP",f=_.getName().replace(" (N)","");a.ui.showText(u.t(d,{moveName:f}),null,()=>{a.ui.clearText(),a.ui.setMode(te.FIGHT,this.fieldIndex)},null,!0)}break;case OA.BALL:const C=a.getEnemyField().filter(_=>_.isActive(!0)).some(_=>!a.gameData.dexData[_.species.speciesId].caughtAttr)&&a.gameData.getStarterCount(_=>!!_.caughtAttr)<Object.keys(tA).length-1;if(a.arena.biomeType===T.END&&(!a.gameMode.isClassic||a.gameMode.isFreshStartChallenge()||C))a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noPokeballForce"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else if(a.currentBattle.battleType===Ht.TRAINER)a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noPokeballTrainer"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else if(a.currentBattle.isBattleMysteryEncounter()&&!a.currentBattle.mysteryEncounter.catchAllowed)a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noPokeballMysteryEncounter"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else{const _=a.getEnemyField().filter(d=>d.isActive(!0)).map(d=>d.getBattlerIndex());if(_.length>1)a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noPokeballMulti"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else if(s<5){const d=a.getEnemyField().find(f=>f.isActive(!0));d!=null&&d.isBoss()&&(d==null?void 0:d.bossSegmentIndex)>=1&&!(d!=null&&d.hasAbility(O.WONDER_GUARD,!1,!0))&&s<we.MASTER_BALL?(a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noPokeballStrong"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0)):(a.currentBattle.turnCommands[this.fieldIndex]={command:OA.BALL,cursor:s},a.currentBattle.turnCommands[this.fieldIndex].targets=_,this.fieldIndex&&(a.currentBattle.turnCommands[this.fieldIndex-1].skip=!0),I=!0)}}break;case OA.POKEMON:case OA.RUN:const U=A===OA.POKEMON,{currentBattle:D,arena:M}=a,h=(r=D.mysteryEncounter)==null?void 0:r.fleeAllowed;if(!U&&(M.biomeType===T.END||!Pe(h)&&!h))a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noEscapeForce"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else if(!U&&(D.battleType===Ht.TRAINER||((L=D.mysteryEncounter)==null?void 0:L.encounterMode)===PE.TRAINER_BATTLE))a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:noEscapeTrainer"),null,()=>{a.ui.showText("",0),a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else{const _=U&&R[0],d=[];if(_||!n.isTrapped(d))D.turnCommands[this.fieldIndex]=U?{command:OA.POKEMON,cursor:s,args:R}:{command:OA.RUN},I=!0,!U&&this.fieldIndex&&(D.turnCommands[this.fieldIndex-1].skip=!0);else if(d.length>0)U||a.ui.setMode(te.MESSAGE),a.ui.showText(d[0],null,()=>{a.ui.showText("",0),U||a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0);else{const f=n.getTag(jR),H=a.arena.getTagOnSide(Fe.FAIRY_LOCK,Dt.PLAYER);if(!f&&!H){u.t(`battle:noEscape${U?"Switch":"Flee"}`);break}U||(a.ui.setMode(te.COMMAND,this.fieldIndex),a.ui.setMode(te.MESSAGE));const B=o(K=>{a.ui.showText(u.t("battle:noEscapePokemon",{pokemonName:K.sourceId&&a.getPokemonById(K.sourceId)?ee(a.getPokemonById(K.sourceId)):"",moveName:K.getMoveName(),escapeVerb:U?u.t("battle:escapeVerbSwitch"):u.t("battle:escapeVerbFlee")}),null,()=>{a.ui.showText("",0),U||a.ui.setMode(te.COMMAND,this.fieldIndex)},null,!0)},"showNoEscapeText");f?B(f):H&&B(H)}}break}return I&&this.end(),I}cancel(){this.fieldIndex&&(a.unshiftPhase(new go(0)),a.unshiftPhase(new go(1)),this.end())}getFieldIndex(){return this.fieldIndex}getPokemon(){return a.getPlayerField()[this.fieldIndex]}end(){a.ui.setMode(te.MESSAGE).then(()=>super.end())}};o(go,"CommandPhase");let IS=go;var OA=(E=>(E[E.FIGHT=0]="FIGHT",E[E.BALL=1]="BALL",E[E.POKEMON=2]="POKEMON",E[E.RUN=3]="RUN",E[E.TERA=4]="TERA",E))(OA||{});const am=class am extends Js{constructor(){super(te.COMMAND),this.fieldIndex=0,this.cursor2=0}setup(){const A=this.getUi(),s=[u.t("commandUiHandler:fight"),u.t("commandUiHandler:ball"),u.t("commandUiHandler:pokemon"),u.t("commandUiHandler:run")];this.commandsContainer=a.add.container(217,-38.7),this.commandsContainer.setName("commands"),this.commandsContainer.setVisible(!1),A.add(this.commandsContainer),this.teraButton=a.add.sprite(-32,15,"button_tera"),this.teraButton.setName("terrastallize-button"),this.teraButton.setScale(1.3),this.teraButton.setFrame("fire"),this.teraButton.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0,teraColor:BR(i.FIRE),isTerastallized:!1}),this.commandsContainer.add(this.teraButton);for(let R=0;R<s.length;R++){const n=Se(R%2===0?0:55.8,R<2?0:16,s[R],k.WINDOW);n.setName(s[R]),this.commandsContainer.add(n)}}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0,this.commandsContainer.setVisible(!0);let s;const R=a.getCurrentPhase();R instanceof IS?s=R:s=a.getStandbyPhase(),this.canTera()?(this.teraButton.setVisible(!0),this.teraButton.setFrame(i[a.getField()[this.fieldIndex].getTeraType()].toLowerCase())):(this.teraButton.setVisible(!1),this.cursor===4&&this.setCursor(0)),this.toggleTeraButton();const n=this.getUi().getMessageHandler();return n.bg.setVisible(!0),n.commandWindow.setVisible(!0),n.movesWindowContainer.setVisible(!1),n.message.setWordWrapWidth(this.canTera()?910:1110),n.showText(u.t("commandUiHandler:actionMessage",{pokemonName:ee(s.getPokemon())}),0),this.getCursor()===2?this.setCursor(0):this.setCursor(this.getCursor()),!0}processInput(A){const s=this.getUi();let R=!1;const n=this.getCursor();if(A===X.CANCEL||A===X.ACTION)if(A===X.ACTION)switch(n){case 0:s.setMode(te.FIGHT,a.getCurrentPhase().getFieldIndex()),R=!0;break;case 1:s.setModeWithoutClear(te.BALL),R=!0;break;case 2:s.setMode(te.PARTY,gs.SWITCH,a.getCurrentPhase().getPokemon().getFieldIndex(),null,kE.FilterNonFainted),R=!0;break;case 3:a.getCurrentPhase().handleCommand(3,0),R=!0;break;case 4:s.setMode(te.FIGHT,a.getCurrentPhase().getFieldIndex(),4),R=!0;break}else a.getCurrentPhase().cancel();else switch(A){case X.UP:(n===2||n===3)&&(R=this.setCursor(n-2));break;case X.DOWN:(n===0||n===1)&&(R=this.setCursor(n+2));break;case X.LEFT:n===1||n===3?R=this.setCursor(n-1):(n===0||n===2)&&this.canTera()&&(R=this.setCursor(4),this.toggleTeraButton());break;case X.RIGHT:n===0||n===2?R=this.setCursor(n+1):n===4&&(R=this.setCursor(0),this.toggleTeraButton());break}return R&&s.playSelect(),R}canTera(){var r;const A=!!a.getModifiers(UL).length,s=a.getField()[this.fieldIndex],R=s.isMega()||s.isMax()||s.hasSpecies(e.NECROZMA,"ultra"),n=a.arena.playerTerasUsed,I=((r=a.currentBattle.preTurnCommands[0])==null?void 0:r.command)===4&&this.fieldIndex>0?1:0;return A&&!R&&n+I<1}toggleTeraButton(){this.teraButton.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0,teraColor:BR(a.getField()[this.fieldIndex].getTeraType()),isTerastallized:this.getCursor()===4})}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getCursor()!==A;return s&&(this.fieldIndex?this.cursor2=A:this.cursor=A),this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.commandsContainer.add(this.cursorObj)),A===4?this.cursorObj.setVisible(!1):(this.cursorObj.setPosition(-5+(A%2===1?56:0),8+(A>=2?16:0)),this.cursorObj.setVisible(!0)),s}clear(){super.clear(),this.getUi().getMessageHandler().commandWindow.setVisible(!1),this.commandsContainer.setVisible(!1),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(am,"CommandUiHandler");let xh=am;const mo=class mo extends Js{constructor(){super(te.FIGHT),this.fieldIndex=0,this.fromCommand=OA.FIGHT,this.cursor2=0}setup(){const A=this.getUi();this.movesContainer=a.add.container(18,-38.7),this.movesContainer.setName(mo.MOVES_CONTAINER_NAME),A.add(this.movesContainer),this.moveInfoContainer=a.add.container(1,0),this.moveInfoContainer.setName("move-info"),A.add(this.moveInfoContainer),this.typeIcon=a.add.sprite(a.scaledCanvas.width-57,-36,Ds("types"),"unknown"),this.typeIcon.setVisible(!1),this.moveInfoContainer.add(this.typeIcon),this.moveCategoryIcon=a.add.sprite(a.scaledCanvas.width-25,-36,"categories","physical"),this.moveCategoryIcon.setVisible(!1),this.moveInfoContainer.add(this.moveCategoryIcon),this.ppLabel=Se(a.scaledCanvas.width-70,-26,"PP",k.MOVE_INFO_CONTENT),this.ppLabel.setOrigin(0,.5),this.ppLabel.setVisible(!1),this.ppLabel.setText(u.t("fightUiHandler:pp")),this.moveInfoContainer.add(this.ppLabel),this.ppText=Se(a.scaledCanvas.width-12,-26,"--/--",k.MOVE_INFO_CONTENT),this.ppText.setOrigin(1,.5),this.ppText.setVisible(!1),this.moveInfoContainer.add(this.ppText),this.powerLabel=Se(a.scaledCanvas.width-70,-18,"POWER",k.MOVE_INFO_CONTENT),this.powerLabel.setOrigin(0,.5),this.powerLabel.setVisible(!1),this.powerLabel.setText(u.t("fightUiHandler:power")),this.moveInfoContainer.add(this.powerLabel),this.powerText=Se(a.scaledCanvas.width-12,-18,"---",k.MOVE_INFO_CONTENT),this.powerText.setOrigin(1,.5),this.powerText.setVisible(!1),this.moveInfoContainer.add(this.powerText),this.accuracyLabel=Se(a.scaledCanvas.width-70,-10,"ACC",k.MOVE_INFO_CONTENT),this.accuracyLabel.setOrigin(0,.5),this.accuracyLabel.setVisible(!1),this.accuracyLabel.setText(u.t("fightUiHandler:accuracy")),this.moveInfoContainer.add(this.accuracyLabel),this.accuracyText=Se(a.scaledCanvas.width-12,-10,"---",k.MOVE_INFO_CONTENT),this.accuracyText.setOrigin(1,.5),this.accuracyText.setVisible(!1),this.moveInfoContainer.add(this.accuracyText);const s=1;this.moveInfoOverlay=new JR({delayVisibility:!0,scale:s,onSide:!0,right:!0,x:0,y:-JR.getHeight(s,!0),width:a.game.canvas.width/6+4,hideEffectBox:!0,hideBg:!0}),A.add(this.moveInfoOverlay),a.addInfoToggle(this.moveInfoOverlay),a.addInfoToggle(this)}show(A){super.show(A),this.fieldIndex=A.length?A[0]:0,this.fromCommand=A.length>1?A[1]:OA.FIGHT;const s=this.getUi().getMessageHandler();return s.bg.setVisible(!1),s.commandWindow.setVisible(!1),s.movesWindowContainer.setVisible(!0),a.getCurrentPhase().getPokemon().battleSummonData.turnCount<=1?this.setCursor(0):this.setCursor(this.getCursor()),this.displayMoves(),this.toggleInfo(!1),this.active=!0,!0}processInput(A){const s=this.getUi();let R=!1;const n=this.getCursor();if(A===X.CANCEL||A===X.ACTION)if(A===X.ACTION)a.getCurrentPhase().handleCommand(this.fromCommand,n,!1)?R=!0:s.playError();else{const{battleType:I,mysteryEncounter:r}=a.currentBattle;(I!==Ht.MYSTERY_ENCOUNTER||!(r!=null&&r.skipToFightInput))&&(s.setMode(te.COMMAND,this.fieldIndex),R=!0)}else switch(A){case X.UP:n>=2&&(R=this.setCursor(n-2));break;case X.DOWN:n<2&&(R=this.setCursor(n+2));break;case X.LEFT:n%2===1&&(R=this.setCursor(n-1));break;case X.RIGHT:n%2===0&&(R=this.setCursor(n+1));break}return R&&s.playSelect(),R}toggleInfo(A){var s,R;A&&(this.movesContainer.setVisible(!1),(s=this.cursorObj)==null||s.setVisible(!1)),a.tweens.add({targets:[this.movesContainer,this.cursorObj],duration:Ot(125),ease:"Sine.easeInOut",alpha:A?0:1}),A||(this.movesContainer.setVisible(!0),(R=this.cursorObj)==null||R.setVisible(!0))}isActive(){return this.active}getCursor(){return this.fieldIndex?this.cursor2:this.cursor}setCursor(A){const s=this.getUi();this.moveInfoOverlay.clear();const R=this.getCursor()!==A;if(R&&(this.fieldIndex?this.cursor2=A:this.cursor=A),!this.cursorObj){const L=this.fromCommand===OA.TERA;this.cursorObj=a.add.image(0,0,L?"cursor_tera":"cursor"),this.cursorObj.setScale(L?.7:1),s.add(this.cursorObj)}const n=a.getCurrentPhase().getPokemon(),I=n.getMoveset(),r=A<I.length;if(r){const L=I[A],N=n.getMoveType(L.getMove()),l=Ds("types");this.typeIcon.setTexture(l,i[N].toLowerCase()).setScale(.8);const C=L.getMove().category;this.moveCategoryIcon.setTexture("categories",g[C].toLowerCase()).setScale(1);const U=L.getMove().power,D=L.getMove().accuracy,M=L.getMovePp(),h=M-L.ppUsed,_=ZR(h,2,"  "),d=ZR(M,2,"  ");this.ppText.setText(`${_}/${d}`),this.powerText.setText(`${U>=0?U:"---"}`),this.accuracyText.setText(`${D>=0?D:"---"}`);const f=h/M;let H=k.MOVE_PP_FULL;f>.25&&f<=.5?H=k.MOVE_PP_HALF_FULL:f>0&&f<=.25?H=k.MOVE_PP_NEAR_EMPTY:f===0&&(H=k.MOVE_PP_EMPTY),this.ppText.setColor(this.getTextColor(H,!1)),this.ppText.setShadowColor(this.getTextColor(H,!0)),this.moveInfoOverlay.show(L.getMove()),n.getOpponents().forEach(B=>{B.updateEffectiveness(this.getEffectivenessText(n,B,L))})}return this.typeIcon.setVisible(r),this.ppLabel.setVisible(r),this.ppText.setVisible(r),this.powerLabel.setVisible(r),this.powerText.setVisible(r),this.accuracyLabel.setVisible(r),this.accuracyText.setVisible(r),this.moveCategoryIcon.setVisible(r),this.cursorObj.setPosition(13+(A%2===1?100:0),-31+(A>=2?15:0)),R}getEffectivenessText(A,s,R){var I;const n=s.getMoveEffectiveness(A,R.getMove(),!((I=s.battleData)!=null&&I.abilityRevealed));if(n!==void 0)return`${n}x`}displayMoves(){const A=a.getCurrentPhase().getPokemon(),s=A.getMoveset();for(let R=0;R<4;R++){const n=Se(R%2===0?0:100,R<2?0:16,"-",k.WINDOW);if(n.setName("text-empty-move"),R<s.length){const I=s[R];n.setText(I.getName()),n.setName(I.getName()),n.setColor(this.getMoveColor(A,I)??n.style.color)}this.movesContainer.add(n)}}getMoveColor(A,s){if(!a.typeHints)return;const R=A.getOpponents();return R.length<=0?void 0:R.map(I=>I.getMoveEffectiveness(A,s.getMove(),!I.battleData.abilityRevealed)).sort((I,r)=>r-I).map(I=>iZ(I??0))[0]}clear(){super.clear();const A=this.getUi().getMessageHandler();this.clearMoves(),this.typeIcon.setVisible(!1),this.ppLabel.setVisible(!1),this.ppText.setVisible(!1),this.powerLabel.setVisible(!1),this.powerText.setVisible(!1),this.accuracyLabel.setVisible(!1),this.accuracyText.setVisible(!1),this.moveCategoryIcon.setVisible(!1),this.moveInfoOverlay.clear(),A.bg.setVisible(!0),this.eraseCursor(),this.active=!1}clearMoves(){this.movesContainer.removeAll(!0),a.getCurrentPhase().getPokemon().getOpponents().forEach(s=>{s.updateEffectiveness(void 0)})}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(mo,"FightUiHandler"),mo.MOVES_CONTAINER_NAME="moves";let bh=mo;const P9="↑",G9="↓",im=class im extends Js{constructor(A){super(A),this.scrollCursor=0,this.fullCursor=0,this.scale=.1666666667,this.unskippedIndices=[],this.defaultTextStyle=k.WINDOW}getWindowHeight(){var A,s;return(Math.min((((A=this.config)==null?void 0:A.options)||[]).length,((s=this.config)==null?void 0:s.maxOptions)||99)+1)*96*this.scale}setup(){const A=this.getUi();this.optionSelectContainer=a.add.container(a.game.canvas.width/6-1,-48),this.optionSelectContainer.setName(`option-select-${this.mode?te[this.mode]:"UNKNOWN"}`),this.optionSelectContainer.setVisible(!1),A.add(this.optionSelectContainer),this.optionSelectBg=Gt(0,0,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setName("option-select-bg"),this.optionSelectBg.setOrigin(1,1),this.optionSelectContainer.add(this.optionSelectBg),this.optionSelectTextContainer=a.add.container(0,0),this.optionSelectContainer.add(this.optionSelectTextContainer),this.optionSelectIcons=[],this.scale=Wn(k.WINDOW,a.uiTheme).scale,this.setCursor(0)}setupOptions(){var I,r,L,N,l,C,U;const A=((I=this.config)==null?void 0:I.options)??[],s=A;if(this.unskippedIndices=this.getUnskippedIndices(A),this.optionSelectText)if(this.optionSelectText instanceof Cf)try{this.optionSelectText.destroy()}catch(D){console.error("Error while destroying optionSelectText:",D)}else console.warn("optionSelectText is not an instance of BBCodeText.");(r=this.optionSelectIcons)!=null&&r.length&&(this.optionSelectIcons.map(D=>D.destroy()),this.optionSelectIcons.splice(0,this.optionSelectIcons.length));const R=(L=this.config)!=null&&L.options&&((N=this.config)==null?void 0:N.options.length)>((l=this.config)==null?void 0:l.maxOptions)?this.getOptionsWithScroll():s,n=a.ui.getMode()===te.AUTO_COMPLETE?R:s;this.optionSelectText=pE(0,0,n.map(D=>D.item?`[shadow=${eA(D.style??this.defaultTextStyle,!0,a.uiTheme)}][color=${eA(D.style??k.WINDOW,!1,a.uiTheme)}]    ${D.label}[/color][/shadow]`:`[shadow=${eA(D.style??this.defaultTextStyle,!0,a.uiTheme)}][color=${eA(D.style??k.WINDOW,!1,a.uiTheme)}]${D.label}[/color][/shadow]`).join(`
`),k.WINDOW,{maxLines:s.length,lineSpacing:12}),this.optionSelectText.setOrigin(0,0),this.optionSelectText.setName("text-option-select"),this.optionSelectTextContainer.add(this.optionSelectText),this.optionSelectContainer.setPosition(a.game.canvas.width/6-1-(((C=this.config)==null?void 0:C.xOffset)||0),-48+(((U=this.config)==null?void 0:U.yOffset)||0)),this.optionSelectBg.width=Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth()),this.optionSelectBg.height=this.getWindowHeight(),this.optionSelectTextContainer.setPosition(this.optionSelectBg.x-this.optionSelectBg.width+12+24*this.scale,this.optionSelectBg.y-this.optionSelectBg.height+2+42*this.scale),this.textContent=R.map(D=>D.item?`[shadow=${eA(D.style??this.defaultTextStyle,!0,a.uiTheme)}][color=${eA(D.style??k.WINDOW,!1,a.uiTheme)}]    ${D.label}[/color][/shadow]`:`[shadow=${eA(D.style??this.defaultTextStyle,!0,a.uiTheme)}][color=${eA(D.style??k.WINDOW,!1,a.uiTheme)}]${D.label}[/color][/shadow]`).join(`
`),this.optionSelectText.setText(this.textContent),s.forEach((D,M)=>{if(D.item){const h=a.add.sprite(0,0,"items",D.item);if(h.setScale(3*this.scale),this.optionSelectIcons.push(h),this.optionSelectTextContainer.add(h),h.setPositionRelative(this.optionSelectText,36*this.scale,7+M*(114*this.scale-3)),D.item==="candy"){const _=a.add.sprite(0,0,"items","candy_overlay");_.setScale(3*this.scale),this.optionSelectIcons.push(_),this.optionSelectTextContainer.add(_),_.setPositionRelative(this.optionSelectText,36*this.scale,7+M*(114*this.scale-3)),D.itemArgs&&(h.setTint(Es(bE(D.itemArgs[0]))),_.setTint(Es(bE(D.itemArgs[1]))))}}})}show(A){var s,R,n,I,r;return!A.length||!A[0].hasOwnProperty("options")||!A[0].options.length?!1:(super.show(A),this.config=A[0],this.setupOptions(),a.ui.bringToTop(this.optionSelectContainer),this.optionSelectContainer.setVisible(!0),this.scrollCursor=0,this.fullCursor=0,this.setCursor(0),this.config.delay&&(this.blockInput=!0,this.optionSelectTextContainer.setAlpha(.5),(s=this.cursorObj)==null||s.setAlpha(.8),a.time.delayedCall(Ot(this.config.delay),()=>this.unblockInput())),(R=this.config)!=null&&R.supportHover&&((r=(I=(n=this.config)==null?void 0:n.options[this.unskippedIndices[this.fullCursor]])==null?void 0:I.onHover)==null||r.call(I)),!0)}processInput(A){var I,r,L,N,l,C,U,D;const s=this.getUi();let R=!1,n=!0;if(A===X.ACTION||A===X.CANCEL){if(this.blockInput)return s.playError(),!1;if(R=!0,A===X.CANCEL)if((I=this.config)!=null&&I.maxOptions&&this.config.options.length>this.config.maxOptions)this.setCursor(this.unskippedIndices.length-1);else if(!((r=this.config)!=null&&r.noCancel))this.setCursor(this.unskippedIndices.length-1);else return!1;const M=(L=this.config)==null?void 0:L.options[this.unskippedIndices[this.fullCursor]];M!=null&&M.handler()?(M.keepOpen||this.clear(),n=!M.overrideSound):s.playError()}else if(A===X.SUBMIT&&s.getMode()===te.AUTO_COMPLETE){R=!0;const M=(N=this.config)==null?void 0:N.options[this.unskippedIndices[this.fullCursor]];M!=null&&M.handler()?(M.keepOpen||this.clear(),n=!M.overrideSound):s.playError()}else{switch(A){case X.UP:this.fullCursor===0?R=this.setCursor(this.unskippedIndices.length-1):this.fullCursor&&(R=this.setCursor(this.fullCursor-1));break;case X.DOWN:this.fullCursor<this.unskippedIndices.length-1?R=this.setCursor(this.fullCursor+1):R=this.setCursor(0);break}(l=this.config)!=null&&l.supportHover&&((D=(U=(C=this.config)==null?void 0:C.options[this.unskippedIndices[this.fullCursor]])==null?void 0:U.onHover)==null||D.call(U))}return R&&n&&s.playSelect(),R}unblockInput(){var A;this.blockInput&&(this.blockInput=!1,this.optionSelectTextContainer.setAlpha(1),(A=this.cursorObj)==null||A.setAlpha(1))}getOptionsWithScroll(){var I;if(!this.config)return[];const A=this.config.options.slice(0);if(!this.config.maxOptions||this.config.options.length<this.config.maxOptions)return A;const s=A.length,R=this.scrollCursor,n=Math.min(s,R+(!R||this.scrollCursor+(this.config.maxOptions-1)>=s?this.config.maxOptions-1:this.config.maxOptions-2));return(I=this.config)!=null&&I.maxOptions&&A.length>this.config.maxOptions&&(A.splice(n,s),A.splice(0,R),R&&A.unshift({label:P9,handler:o(()=>!0,"handler"),style:this.defaultTextStyle}),n<s&&A.push({label:G9,handler:o(()=>!0,"handler"),style:this.defaultTextStyle})),A}getUnskippedIndices(A){return A.map((R,n)=>R.skip?null:n).filter(R=>R!==null)}setCursor(A){var R;const s=this.fullCursor!==A;if(s&&((R=this.config)!=null&&R.maxOptions)&&this.config.options.length>this.config.maxOptions)if(A===this.unskippedIndices.length-1)this.fullCursor=A,this.cursor=this.config.maxOptions-(this.config.options.length-this.unskippedIndices[A]),this.scrollCursor=this.config.options.length-this.config.maxOptions+1;else if(A===0)this.fullCursor=A,this.cursor=this.unskippedIndices[A],this.scrollCursor=0;else if(A&&A>this.fullCursor){const I=this.unskippedIndices[A]-this.unskippedIndices[this.fullCursor],r=this.unskippedIndices[A+1]-this.unskippedIndices[A]-1;this.cursor+I+r>=this.config.maxOptions-1?(this.fullCursor=A,this.cursor=this.config.maxOptions-2-r,this.scrollCursor=this.unskippedIndices[this.fullCursor]-this.cursor+1):(this.fullCursor=A,this.cursor=this.unskippedIndices[A]-this.scrollCursor+(this.scrollCursor?1:0))}else{const I=this.unskippedIndices[A]-this.unskippedIndices[A-1];this.cursor-I<1?(this.fullCursor=A,this.cursor=1,this.scrollCursor=this.unskippedIndices[this.fullCursor]-this.cursor+1):(this.fullCursor=A,this.cursor=this.unskippedIndices[A]-this.scrollCursor+(this.scrollCursor?1:0))}else this.fullCursor=A,this.cursor=this.unskippedIndices[A];return this.setupOptions(),this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.optionSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.optionSelectBg,12,102*this.scale+this.cursor*(114*this.scale-3)),s}clear(){super.clear(),this.config=null,this.optionSelectContainer.setVisible(!1),this.fullCursor=0,this.scrollCursor=0,this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(im,"AbstractOptionSelectUiHandler");let rS=im;const po=class po extends rS{constructor(){super(te.CONFIRM)}getWindowWidth(){return po.windowWidth}show(A){if(A.length===5&&A[0]instanceof Function&&A[1]instanceof Function&&A[2]instanceof Function&&A[3]instanceof Function&&A[4]==="fullParty"){const s={options:[{label:u.t("partyUiHandler:SUMMARY"),handler:o(()=>(A[0](),!0),"handler")},{label:u.t("partyUiHandler:POKEDEX"),handler:o(()=>(A[1](),!0),"handler")},{label:u.t("menu:yes"),handler:o(()=>(A[2](),!0),"handler")},{label:u.t("menu:no"),handler:o(()=>(A[3](),!0),"handler")}],delay:A.length>=9&&A[8]!==null?A[8]:0};super.show([s]),this.switchCheck=A.length>=6&&A[5]!==null&&A[5];const R=A.length>=7&&A[6]!==null?A[6]:0,n=A.length>=8&&A[7]!==null?A[7]:0;return this.optionSelectContainer.setPosition(a.game.canvas.width/6-1+R,-48+n),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}if(A.length>=2&&A[0]instanceof Function&&A[1]instanceof Function){const s={options:[{label:u.t("menu:yes"),handler:o(()=>(A[0](),!0),"handler")},{label:u.t("menu:no"),handler:o(()=>(A[1](),!0),"handler")}],delay:A.length>=6&&A[5]!==null?A[5]:0,noCancel:A.length>=7&&A[6]!==null?A[6]:!1};super.show([s]),this.switchCheck=A.length>=3&&A[2]!==null&&A[2];const R=A.length>=4&&A[3]!==null?A[3]:0,n=A.length>=5&&A[4]!==null?A[4]:0;return this.optionSelectContainer.setPosition(a.game.canvas.width/6-1+R,-48+n),this.setCursor(this.switchCheck?this.switchCheckCursor:0),!0}return!1}processInput(A){var s;return A===X.CANCEL&&this.blockInput&&!((s=this.config)!=null&&s.noCancel)&&this.unblockInput(),super.processInput(A)}setCursor(A){const s=super.setCursor(A);return s&&this.switchCheck&&(this.switchCheckCursor=this.cursor),s}};o(po,"ConfirmUiHandler"),po.windowWidth=48;let Cu=po;const Im=class Im extends Js{constructor(){super(te.BALL),this.scale=.1666666667}setup(){const A=this.getUi();this.scale=Wn(k.WINDOW,a.uiTheme).scale;let s="";for(let I=0;I<Object.keys(a.pokeballCounts).length;I++)s+=`${ZC(I)}
`;s+="Cancel";const R=Se(0,0,s,k.WINDOW,{align:"right",maxLines:6}),n=R.displayWidth;this.pokeballSelectContainer=a.add.container(a.game.canvas.width/6-51-Math.max(64,n),-49),this.pokeballSelectContainer.setVisible(!1),A.add(this.pokeballSelectContainer),this.pokeballSelectBg=Gt(0,0,50+Math.max(64,n),32+480*this.scale),this.pokeballSelectBg.setOrigin(0,1),this.pokeballSelectContainer.add(this.pokeballSelectBg),this.pokeballSelectContainer.add(R),R.setOrigin(0,0),R.setPositionRelative(this.pokeballSelectBg,42,9),R.setLineSpacing(this.scale*72),this.countsText=Se(0,0,"",k.WINDOW,{maxLines:5}),this.countsText.setPositionRelative(this.pokeballSelectBg,18,9),this.countsText.setLineSpacing(this.scale*72),this.pokeballSelectContainer.add(this.countsText),this.setCursor(0)}show(A){return super.show(A),this.updateCounts(),this.pokeballSelectContainer.setVisible(!0),this.setCursor(this.cursor),!0}processInput(A){const s=this.getUi();let R=!1;const n=Object.keys(a.pokeballCounts).length;if(A===X.ACTION||A===X.CANCEL){const I=a.getCurrentPhase();R=!0,A===X.ACTION&&this.cursor<n?a.pokeballCounts[this.cursor]?I.handleCommand(OA.BALL,this.cursor)&&(a.ui.setMode(te.COMMAND,I.getFieldIndex()),a.ui.setMode(te.MESSAGE),R=!0):s.playError():(s.setMode(te.COMMAND,I.getFieldIndex()),R=!0)}else switch(A){case X.UP:R=this.setCursor(this.cursor?this.cursor-1:n);break;case X.DOWN:R=this.setCursor(this.cursor<n?this.cursor+1:0);break}return R&&s.playSelect(),R}updateCounts(){this.countsText.setText(Object.values(a.pokeballCounts).map(A=>`x${A}`).join(`
`))}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.pokeballSelectContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.pokeballSelectBg,12,15+(6+this.cursor*96)*this.scale),s}clear(){super.clear(),this.pokeballSelectContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(Im,"BallUiHandler");let kh=Im,Ut=null;const d9=v0(32);function uu(){return new Promise(E=>{{Ut={username:"Guest",lastSessionSlot:-1,discordId:"",googleId:"",hasAdminRole:!1};let A=-1;for(let s=0;s<5;s++)if(localStorage.getItem(`sessionData${s||""}_${Ut.username}`)){A=s;break}return Ut.lastSessionSlot=A,["data","sessionData","sessionData1","sessionData2","sessionData3","sessionData4"].map(s=>{const R=localStorage.getItem(s);if(R&&(Ut!=null&&Ut.username)){const n=localStorage.getItem(`${s}_${Ut.username}`);n&&localStorage.setItem(`${s}_${Ut.username}_bak`,n),localStorage.setItem(`${s}_${Ut.username}`,R),localStorage.removeItem(s)}}),E([!0,200])}})}o(uu,"updateUserInfo");var Zh=(E=>(E[E.PROFILE=0]="PROFILE",E[E.STATS=1]="STATS",E[E.MOVES=2]="MOVES",E))(Zh||{}),X0=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.LEARN_MOVE=1]="LEARN_MOVE",E))(X0||{});const rm=class rm extends Js{constructor(){super(te.SUMMARY)}setup(){const A=this.getUi();this.summaryContainer=a.add.container(0,0),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer);const s=a.add.image(0,0,"summary_bg");s.setOrigin(0,1),this.summaryContainer.add(s),this.tabSprite=a.add.sprite(134,-s.displayHeight+16,"summary_tabs_1"),this.tabSprite.setOrigin(1,1),this.summaryContainer.add(this.tabSprite);const R=Se(4,-165,u.t("pokemonSummary:pokemonInfo"),k.SUMMARY);R.setOrigin(0,1),this.summaryContainer.add(R),this.shinyOverlay=a.add.image(6,-54,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,1),this.shinyOverlay.setVisible(!1),this.summaryContainer.add(this.shinyOverlay),this.numberText=Se(17,-149,"0000",k.SUMMARY),this.numberText.setOrigin(0,1),this.summaryContainer.add(this.numberText),this.pokemonSprite=a.initPokemonSprite(a.add.sprite(56,-106,"pkmn__sub"),void 0,!1,!0),this.summaryContainer.add(this.pokemonSprite),this.nameText=Se(6,-54,"",k.SUMMARY),this.nameText.setOrigin(0,0),this.summaryContainer.add(this.nameText),this.splicedIcon=a.add.sprite(0,-54,"icon_spliced"),this.splicedIcon.setVisible(!1),this.splicedIcon.setOrigin(0,0),this.splicedIcon.setScale(.75),this.splicedIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.splicedIcon),this.shinyIcon=a.add.image(0,-54,"shiny_star"),this.shinyIcon.setVisible(!1),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.75),this.shinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.shinyIcon),this.fusionShinyIcon=a.add.image(0,0,"shiny_star_2"),this.fusionShinyIcon.setVisible(!1),this.fusionShinyIcon.setOrigin(0,0),this.fusionShinyIcon.setScale(.75),this.summaryContainer.add(this.fusionShinyIcon),this.pokeball=a.add.sprite(6,-19,"pb"),this.pokeball.setOrigin(0,1),this.summaryContainer.add(this.pokeball),this.candyIcon=a.add.sprite(13,-140,"candy"),this.candyIcon.setScale(.8),this.summaryContainer.add(this.candyIcon),this.candyOverlay=a.add.sprite(13,-140,"candy_overlay"),this.candyOverlay.setScale(.8),this.summaryContainer.add(this.candyOverlay),this.candyShadow=a.add.sprite(13,-140,"candy"),this.candyShadow.setTint(0),this.candyShadow.setAlpha(.5),this.candyShadow.setScale(.8),this.candyShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,30,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.candyShadow),this.candyCountText=Se(20,-146,"x0",k.WINDOW_ALT,{fontSize:"76px"}),this.candyCountText.setOrigin(0,0),this.summaryContainer.add(this.candyCountText),this.friendshipIcon=a.add.sprite(13,-60,"friendship"),this.friendshipIcon.setScale(.8),this.summaryContainer.add(this.friendshipIcon),this.friendshipOverlay=a.add.sprite(13,-60,"friendship_overlay"),this.friendshipOverlay.setScale(.8),this.summaryContainer.add(this.friendshipOverlay),this.friendshipShadow=a.add.sprite(13,-60,"friendship"),this.friendshipShadow.setTint(0),this.friendshipShadow.setAlpha(.5),this.friendshipShadow.setScale(.8),this.friendshipShadow.setInteractive(new Phaser.Geom.Rectangle(0,0,50,16),Phaser.Geom.Rectangle.Contains),this.summaryContainer.add(this.friendshipShadow),this.friendshipText=Se(20,-66,"x0",k.WINDOW_ALT,{fontSize:"76px"}),this.friendshipText.setOrigin(0,0),this.summaryContainer.add(this.friendshipText),this.championRibbon=a.add.image(88,-146,"champion_ribbon"),this.championRibbon.setOrigin(0,0),this.championRibbon.setScale(1.25),this.summaryContainer.add(this.championRibbon),this.championRibbon.setVisible(!1),this.levelText=Se(24,-17,"",k.SUMMARY_ALT),this.levelText.setOrigin(0,1),this.summaryContainer.add(this.levelText),this.genderText=Se(96,-17,"",k.SUMMARY),this.genderText.setOrigin(0,1),this.summaryContainer.add(this.genderText),this.statusContainer=a.add.container(-106,-16);const n=a.add.image(0,0,"summary_status");n.setOrigin(0,0),this.statusContainer.add(n);const I=Se(3,0,u.t("pokemonSummary:status"),k.SUMMARY);I.setOrigin(0,0),this.statusContainer.add(I),this.status=a.add.sprite(91,4,Ds("statuses")),this.status.setOrigin(.5,0),this.statusContainer.add(this.status),this.summaryContainer.add(this.statusContainer),this.moveEffectContainer=a.add.container(106,-62),this.summaryContainer.add(this.moveEffectContainer);const r=a.add.image(0,0,"summary_moves_effect");r.setOrigin(0,0),this.moveEffectContainer.add(r);const L=Se(8,12,u.t("pokemonSummary:powerAccuracyCategory"),k.SUMMARY);L.setLineSpacing(9),L.setOrigin(0,0),this.moveEffectContainer.add(L),this.movePowerText=Se(99,27,"0",k.WINDOW_ALT),this.movePowerText.setOrigin(1,1),this.moveEffectContainer.add(this.movePowerText),this.moveAccuracyText=Se(99,43,"0",k.WINDOW_ALT),this.moveAccuracyText.setOrigin(1,1),this.moveEffectContainer.add(this.moveAccuracyText),this.moveCategoryIcon=a.add.sprite(99,57,"categories"),this.moveCategoryIcon.setOrigin(1,1),this.moveEffectContainer.add(this.moveCategoryIcon);const N=o(()=>{const l=a.add.sprite(0,0,this.getPageKey(0));return l.setOrigin(0,1),l},"getSummaryPageBg");this.summaryContainer.add(this.summaryPageContainer=a.add.container(106,0)),this.summaryPageContainer.add(N()),this.summaryPageContainer.setVisible(!1),this.summaryContainer.add(this.summaryPageTransitionContainer=a.add.container(106,0)),this.summaryPageTransitionContainer.add(N()),this.summaryPageTransitionContainer.setVisible(!1)}getPageKey(A){return A===void 0&&(A=this.cursor),`summary_${Zh[A].toLowerCase()}`}show(A){var U,D;super.show(A),this.pokemon=A[0],this.summaryUiMode=A.length>1?A[1]:0,this.playerParty=A[4]??!0,a.ui.bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.cursor=-1,this.shinyOverlay.setVisible(this.pokemon.isShiny());const s=KE[this.pokemon.species.getRootSpeciesId()];this.candyIcon.setTint(Es(bE(s[0]))),this.candyOverlay.setTint(Es(bE(s[1]))),this.numberText.setText(ZR(this.pokemon.species.speciesId,4)),this.numberText.setColor(this.getTextColor(this.pokemon.isShiny()?k.SUMMARY_GOLD:k.SUMMARY)),this.numberText.setShadowColor(this.getTextColor(this.pokemon.isShiny()?k.SUMMARY_GOLD:k.SUMMARY,!0));const R=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(R)}catch(M){console.error(`Failed to play animation for ${R}`,M)}this.pokemonSprite.setPipelineData("teraColor",BR(this.pokemon.getTeraType())),this.pokemonSprite.setPipelineData("isTerastallized",this.pokemon.isTerastallized),this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(M=>{var h,_,d;delete this.pokemonSprite.pipelineData[`${M}Base`],(_=(h=this.pokemon)==null?void 0:h.summonData)!=null&&_.speciesForm&&(M+="Base"),this.pokemonSprite.pipelineData[M]=(d=this.pokemon)==null?void 0:d.getSprite().pipelineData[M]}),this.pokemon.cry(),this.nameText.setText(this.pokemon.getNameToRender());const n=this.pokemon.isFusion();this.splicedIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+2,3),this.splicedIcon.setVisible(n),this.splicedIcon.visible&&(this.splicedIcon.on("pointerover",()=>{var M,h,_,d;return a.ui.showTooltip("",`${(M=this.pokemon)==null?void 0:M.species.getName(this.pokemon.formIndex)}/${(d=(h=this.pokemon)==null?void 0:h.fusionSpecies)==null?void 0:d.getName((_=this.pokemon)==null?void 0:_.fusionFormIndex)}`,!0)}),this.splicedIcon.on("pointerout",()=>a.ui.hideTooltip())),a.gameData.starterData[this.pokemon.species.getRootSpeciesId()].classicWinCount>0&&a.gameData.starterData[this.pokemon.species.getRootSpeciesId(!0)].classicWinCount>0?this.championRibbon.setVisible(!0):this.championRibbon.setVisible(!1);let I=a.gameData.starterData[this.pokemon.species.getRootSpeciesId()].friendship;(!I||I===void 0)&&(I=0);const r=nl(tA[this.pokemon.species.getRootSpeciesId()]),L=16-16*(I/r);this.candyShadow.visible&&(this.candyShadow.on("pointerover",()=>a.ui.showTooltip("",`${I}/${r}`,!0)),this.candyShadow.on("pointerout",()=>a.ui.hideTooltip())),this.candyCountText.setText(`x${a.gameData.starterData[this.pokemon.species.getRootSpeciesId()].candyCount}`),this.candyShadow.setCrop(0,0,16,L),this.friendshipShadow.visible&&(this.friendshipShadow.on("pointerover",()=>a.ui.showTooltip("",`${u.t("pokemonSummary:friendship")}`,!0)),this.friendshipShadow.on("pointerout",()=>a.ui.hideTooltip())),this.friendshipText.setText(`${((U=this.pokemon)==null?void 0:U.friendship)||"0"} / 255`),this.friendshipShadow.setCrop(0,0,16,16-16*((((D=this.pokemon)==null?void 0:D.friendship)||0)/255));const N=n&&this.pokemon.shiny&&this.pokemon.fusionShiny,l=N?this.pokemon.variant:this.pokemon.getVariant();if(this.shinyIcon.setPositionRelative(this.nameText,this.nameText.displayWidth+(this.splicedIcon.visible?this.splicedIcon.displayWidth+1:0)+1,3),this.shinyIcon.setTexture(`shiny_star${N?"_1":""}`),this.shinyIcon.setVisible(this.pokemon.isShiny()),this.shinyIcon.setTint(lE(l)),this.shinyIcon.visible){const M=N||l?`${l===2?u.t("common:epicShiny"):l===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${N?`/${this.pokemon.fusionVariant===2?u.t("common:epicShiny"):this.pokemon.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.shinyIcon.on("pointerover",()=>a.ui.showTooltip("",`${u.t("common:shinyOnHover")}${M?` (${M})`:""}`,!0)),this.shinyIcon.on("pointerout",()=>a.ui.hideTooltip())}switch(this.fusionShinyIcon.setPosition(this.shinyIcon.x,this.shinyIcon.y),this.fusionShinyIcon.setVisible(N),n&&this.fusionShinyIcon.setTint(lE(this.pokemon.fusionVariant)),this.pokeball.setFrame(fO(this.pokemon.pokeball)),this.levelText.setText(`${u.t("pokemonSummary:lv")}${this.pokemon.level.toString()}`),this.genderText.setText(kI(this.pokemon.getGender(!0))),this.genderText.setColor(sn(this.pokemon.getGender(!0))),this.genderText.setShadowColor(sn(this.pokemon.getGender(!0),!0)),this.summaryUiMode){case 0:{const M=A.length<2?0:A[2];this.hideMoveEffect(!0),this.setCursor(M),A.length>3&&(this.selectCallback=A[3]);break}case 1:this.newMove=A[2],this.moveSelectFunction=A[3],this.showMoveEffect(!0),this.setCursor(2),this.showMoveSelect();break}const C=A.length>=2;return this.pokemon.status||this.pokemon.pokerus?(this.showStatus(!C),this.status.setFrame(this.pokemon.status?re[this.pokemon.status.effect].toLowerCase():"pokerus")):this.hideStatus(!C),!0}processInput(A){var r,L,N,l,C,U,D,M,h;if(this.transitioning)return!1;const s=this.getUi(),R=s.handlers[te.PARTY].active;let n=!1,I=!1;if(this.moveSelect)if(A===X.ACTION)if(this.pokemon&&this.moveCursor<this.pokemon.moveset.length){if(this.summaryUiMode===1)(r=this.moveSelectFunction)==null||r.call(this,this.moveCursor);else if(this.selectedMoveIndex===-1)this.selectedMoveIndex=this.moveCursor,this.setCursor(this.moveCursor);else{if(this.selectedMoveIndex!==this.moveCursor){const _=(L=this.pokemon)==null?void 0:L.moveset[this.selectedMoveIndex];this.pokemon.moveset[this.selectedMoveIndex]=this.pokemon.moveset[this.moveCursor],this.pokemon.moveset[this.moveCursor]=_;const d=this.moveRowsContainer.getAt(this.selectedMoveIndex),f=this.moveRowsContainer.getAt(this.moveCursor);this.moveRowsContainer.moveTo(d,this.moveCursor),this.moveRowsContainer.moveTo(f,this.selectedMoveIndex),d.setY(this.moveCursor*16),f.setY(this.selectedMoveIndex*16)}this.selectedMoveIndex=-1,this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}n=!0}else{if(this.moveCursor===4)return this.processInput(X.CANCEL);I=!0}else if(A===X.CANCEL)this.hideMoveSelect(),n=!0;else switch(A){case X.UP:n=this.setCursor(this.moveCursor?this.moveCursor-1:4);break;case X.DOWN:n=this.setCursor(this.moveCursor<4?this.moveCursor+1:0);break;case X.LEFT:if(this.moveSelect=!1,this.setCursor(1),this.summaryUiMode===1){this.hideMoveEffect(),this.destroyBlinkCursor(),n=!0;break}this.hideMoveSelect(),n=!0;break}else if(A===X.ACTION)this.cursor===2?(this.showMoveSelect(),n=!0):this.cursor===0&&((N=this.pokemon)!=null&&N.hasPassive())?((C=this.abilityContainer.nameText)==null||C.setVisible(!((l=this.abilityContainer.descriptionText)!=null&&l.visible)),(U=this.abilityContainer.descriptionText)==null||U.setVisible(!this.abilityContainer.descriptionText.visible),this.abilityContainer.labelImage.setVisible(!this.abilityContainer.labelImage.visible),(M=this.passiveContainer.nameText)==null||M.setVisible(!((D=this.passiveContainer.descriptionText)!=null&&D.visible)),(h=this.passiveContainer.descriptionText)==null||h.setVisible(!this.passiveContainer.descriptionText.visible),this.passiveContainer.labelImage.setVisible(!this.passiveContainer.labelImage.visible)):this.cursor===1&&(this.permStatsContainer.setVisible(!this.permStatsContainer.visible),this.ivContainer.setVisible(!this.ivContainer.visible));else if(A===X.CANCEL){if(this.summaryUiMode===1)this.hideMoveSelect();else{if(this.selectCallback instanceof Function){const _=this.selectCallback;this.selectCallback=null,_()}R?s.setMode(te.PARTY):s.setMode(te.MESSAGE)}n=!0}else{const _=dE(Zh);switch(A){case X.UP:case X.DOWN:{if(this.summaryUiMode===1||!R)break;const d=A===X.DOWN,f=a.getPlayerParty(),H=this.pokemon?f.indexOf(this.pokemon):-1;if(d&&H<f.length-1||!d&&H){const B=this.cursor;this.clear(),this.show([f[H+(d?1:-1)],this.summaryUiMode,B])}break}case X.LEFT:this.cursor&&(n=this.setCursor(this.cursor-1));break;case X.RIGHT:this.cursor<_.length-1&&(n=this.setCursor(this.cursor+1),this.summaryUiMode===1&&this.cursor===2&&(this.moveSelect=!0));break}}return n?s.playSelect():I&&s.playError(),n||I}setCursor(A,s=!1){let R=s||this.moveCursor!==A;if(this.moveSelect){this.moveCursor=A;const n=this.getSelectedMove();n?(this.moveDescriptionText.setY(84),this.movePowerText.setText(n.power>=0?n.power.toString():"---"),this.moveAccuracyText.setText(n.accuracy>=0?n.accuracy.toString():"---"),this.moveCategoryIcon.setFrame(g[n.category].toLowerCase()),this.showMoveEffect()):this.hideMoveEffect(),this.moveDescriptionText.setText((n==null?void 0:n.effect)||"");const I=Math.floor(this.moveDescriptionText.displayHeight/14.83);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),I>3&&(this.descriptionScrollTween=a.tweens.add({targets:this.moveDescriptionText,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((I-3)*2e3),y:`-=${14.83*(I-3)}`})),this.moveCursorObj||(this.moveCursorObj=a.add.sprite(-2,0,"summary_moves_cursor","highlight"),this.moveCursorObj.setOrigin(0,1),this.movesContainer.add(this.moveCursorObj)),this.moveCursorObj.setY(16*this.moveCursor+1),this.moveCursorBlinkTimer&&this.moveCursorBlinkTimer.destroy(),this.moveCursorObj.setVisible(!0),this.moveCursorBlinkTimer=a.time.addEvent({loop:!0,delay:Ot(600),callback:o(()=>{var r;(r=this.moveCursorObj)==null||r.setVisible(!1),a.time.delayedCall(Ot(100),()=>{this.moveCursorObj&&this.moveCursorObj.setVisible(!0)})},"callback")}),this.selectedMoveIndex>-1&&(this.selectedMoveCursorObj||(this.selectedMoveCursorObj=a.add.sprite(-2,0,"summary_moves_cursor","select"),this.selectedMoveCursorObj.setOrigin(0,1),this.movesContainer.add(this.selectedMoveCursorObj),this.movesContainer.moveBelow(this.selectedMoveCursorObj,this.moveCursorObj)),this.selectedMoveCursorObj.setY(16*this.selectedMoveIndex+1))}else if(R=this.cursor!==A,R){const n=this.cursor<A;this.cursor=A,this.tabSprite.setTexture(`summary_tabs_${this.cursor+1}`),this.getUi().hideTooltip(),this.summaryPageContainer.visible?(this.transitioning=!0,this.populatePageContainer(this.summaryPageTransitionContainer,n?A:A+1),n?this.summaryPageTransitionContainer.x+=214:this.populatePageContainer(this.summaryPageContainer),a.tweens.add({targets:this.summaryPageTransitionContainer,x:n?"-=214":"+=214",duration:250,onComplete:o(()=>{n?(this.populatePageContainer(this.summaryPageContainer),this.cursor===2&&(this.moveCursorObj=null,this.showMoveSelect(),this.showMoveEffect())):this.summaryPageTransitionContainer.x-=214,this.summaryPageTransitionContainer.setVisible(!1),this.transitioning=!1},"onComplete")}),this.summaryPageTransitionContainer.setVisible(!0)):(this.populatePageContainer(this.summaryPageContainer),this.summaryPageContainer.setVisible(!0))}return R}populatePageContainer(A,s){var n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K,Y,v,Z,z,q,J;s===void 0&&(s=this.cursor),A.getAll().length>1&&(A.each(Ae=>{Ae instanceof Phaser.GameObjects.Container&&Ae.removeAll(!0)}),A.removeBetween(1,void 0,!0));const R=A.getAt(0);switch(R.setTexture(this.getPageKey(s)),this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=null),s){case 0:{const Ae=a.add.container(0,-R.height);A.add(Ae);const Q=pE(7,12,`${u.t("pokemonSummary:ot")}/${hO((Ut==null?void 0:Ut.username)||u.t("pokemonSummary:unknown"),a.gameData.gender===Jt.FEMALE?k.SUMMARY_PINK:k.SUMMARY_BLUE)}`,k.SUMMARY_ALT);Q.setOrigin(0,0),Ae.add(Q);const Re=Se(141,12,`${u.t("pokemonSummary:idNo")}${a.gameData.trainerId.toString()}`,k.SUMMARY_ALT);Re.setOrigin(0,0),Ae.add(Re);const W=Se(7,28,`${u.t("pokemonSummary:type")}/`,k.WINDOW_ALT);W.setOrigin(0,0),Ae.add(W);const ie=o((Ne,Ue,me=!1)=>{const st=W.width*W.scale+9+34*Ne,Ct=me?a.add.sprite(st,42,"type_tera"):a.add.sprite(st,42,Ds("types"),i[Ue].toLowerCase());if(me){Ct.setScale(.5);const tt=BR(Ue);Ct.setTint(Phaser.Display.Color.GetColor(tt[0],tt[1],tt[2]))}return Ct.setOrigin(0,1),Ct},"getTypeIcon"),Be=(n=this.pokemon)==null?void 0:n.getTypes(!1,!1,!0);if(Ae.add(ie(0,Be[0])),Be.length>1&&Ae.add(ie(1,Be[1])),(I=this.pokemon)!=null&&I.getLuck()){const Ne=Se(141,28,u.t("common:luckIndicator"),k.SUMMARY_ALT);Ne.setOrigin(0,0),Ae.add(Ne);const Ue=Se(141+Ne.displayWidth+2,28,this.pokemon.getLuck().toString(),k.SUMMARY);Ue.setOrigin(0,0),Ue.setTint(lE(Math.min(this.pokemon.getLuck()-1,2))),Ae.add(Ue)}if(a.gameData.achvUnlocks.hasOwnProperty(ht.TERASTALLIZE.id)&&!Pe(this.pokemon)){const Ne=a.add.sprite(123,26,"button_tera");Ne.setName("terrastallize-icon"),Ne.setFrame(i[this.pokemon.getTeraType()].toLowerCase()),Ae.add(Ne)}this.abilityContainer={labelImage:a.add.image(0,0,"summary_profile_ability"),ability:(r=this.pokemon)==null?void 0:r.getAbility(!0),nameText:null,descriptionText:null};const he=[this.abilityContainer];(L=this.pokemon)!=null&&L.hasPassive()&&(this.passiveContainer={labelImage:a.add.image(0,0,"summary_profile_passive"),ability:this.pokemon.getPassiveAbility(),nameText:null,descriptionText:null},he.push(this.passiveContainer),this.abilityPrompt=a.add.image(0,0,(N=a.inputController)!=null&&N.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,43),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),Ae.add(this.abilityPrompt)),he.forEach(Ne=>{var Ct,tt;Ne.labelImage.setPosition(17,43),Ne.labelImage.setVisible(!0),Ne.labelImage.setOrigin(0,0),Ae.add(Ne.labelImage),Ne.nameText=Se(7,66,(Ct=Ne.ability)==null?void 0:Ct.name,k.SUMMARY_ALT),Ne.nameText.setOrigin(0,1),Ae.add(Ne.nameText),Ne.descriptionText=Se(7,69,(tt=Ne.ability)==null?void 0:tt.description,k.WINDOW_ALT,{wordWrap:{width:1224}}),Ne.descriptionText.setOrigin(0,0),Ae.add(Ne.descriptionText);const Ue=a.make.graphics({});Ue.setScale(6),Ue.fillStyle(16777215),Ue.beginPath(),Ue.fillRect(110,90.5,206,31);const me=Ue.createGeometryMask();Ne.descriptionText.setMask(me);const st=Math.floor(Ne.descriptionText.displayHeight/14.83);st>2&&(Ne.descriptionText.setY(69),this.descriptionScrollTween=a.tweens.add({targets:Ne.descriptionText,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((st-2)*2e3),y:`-=${14.83*(st-2)}`}))}),(l=this.passiveContainer)==null||l.labelImage.setVisible(!1),(U=(C=this.passiveContainer)==null?void 0:C.nameText)==null||U.setVisible(!1),(M=(D=this.passiveContainer)==null?void 0:D.descriptionText)==null||M.setVisible(!1);const ve=hO("",k.WINDOW_ALT),_e=aa(rt[(h=this.pokemon)==null?void 0:h.getNature()]),Le=`${hO(aa(zR((_=this.pokemon)==null?void 0:_.getNature())),k.SUMMARY_RED)}${ve}`,Ee=u.t("pokemonSummary:memoString",{metFragment:u.t(`pokemonSummary:metFragment.${((d=this.pokemon)==null?void 0:d.metBiome)===-1?"apparently":"normal"}`,{biome:`${hO(GL((f=this.pokemon)==null?void 0:f.metBiome),k.SUMMARY_RED)}${ve}`,level:`${hO((H=this.pokemon)==null?void 0:H.metLevel.toString(),k.SUMMARY_RED)}${ve}`,wave:`${hO((B=this.pokemon)!=null&&B.metWave?this.pokemon.metWave.toString():u.t("pokemonSummary:unknownTrainer"),k.SUMMARY_RED)}${ve}`}),natureFragment:u.t(`pokemonSummary:natureFragment.${_e}`,{nature:Le})}),se=pE(7,113,String(Ee),k.WINDOW_ALT);se.setOrigin(0,0),Ae.add(se);break}case 1:{this.statsContainer=a.add.container(0,-R.height),A.add(this.statsContainer),this.permStatsContainer=a.add.container(27,56),this.statsContainer.add(this.permStatsContainer),this.ivContainer=a.add.container(27,56),this.statsContainer.add(this.ivContainer),this.statsContainer.setVisible(!0),Hn.forEach((st,Ct)=>{var Te,fe,qe,Je,pe,it;const tt=u.t(mE(st)),ft=Ct%3,Xt=Math.floor(Ct/3),pt=al((Te=this.pokemon)==null?void 0:Te.getNature(),Ct),fA=Se(115*Xt+(Xt===1?5:0),16*ft,tt,pt===1?k.SUMMARY:pt>1?k.SUMMARY_PINK:k.SUMMARY_BLUE),cA=Se(115*Xt+(Xt===1?5:0),16*ft,tt,((fe=this.pokemon)==null?void 0:fe.ivs[st])===31?k.SUMMARY_GOLD:k.SUMMARY);fA.setOrigin(.5,0),cA.setOrigin(.5,0),this.permStatsContainer.add(fA),this.ivContainer.add(cA);const x=st!==p.HP?bl((qe=this.pokemon)==null?void 0:qe.getStat(st)):`${bl((Je=this.pokemon)==null?void 0:Je.hp,!0)}/${bl((pe=this.pokemon)==null?void 0:pe.getMaxHp(),!0)}`,be=`${(it=this.pokemon)==null?void 0:it.ivs[st]}/31`,Ye=Se(93+88*Xt,16*ft,x,k.WINDOW_ALT);Ye.setOrigin(1,0),this.permStatsContainer.add(Ye);const le=Se(93+88*Xt,16*ft,be,k.WINDOW_ALT);le.setOrigin(1,0),this.ivContainer.add(le)}),this.ivContainer.setVisible(!1),a.findModifiers(st=>{var Ct;return st instanceof Ft&&st.pokemonId===((Ct=this.pokemon)==null?void 0:Ct.id)},this.playerParty).sort(cN).forEach((st,Ct)=>{const tt=st.getIcon(!0);tt.setPosition(Ct%17*12+3,14*Math.floor(Ct/17)+15),this.statsContainer.add(tt),tt.setInteractive(new Phaser.Geom.Rectangle(0,0,32,32),Phaser.Geom.Rectangle.Contains),tt.on("pointerover",()=>a.ui.showTooltip(st.type.name,st.type.getDescription(),!0)),tt.on("pointerout",()=>a.ui.hideTooltip())});const Q=(K=this.pokemon)==null?void 0:K.level,Re=(Y=this.pokemon)==null?void 0:Y.levelExp,W=(v=this.pokemon)==null?void 0:v.exp,ie=(Z=this.pokemon)==null?void 0:Z.species.growthRate,Be=sk(Q+1,ie),he=Q<a.getMaxExpLevel()?Re/Be:0,ve=Se(6,112,u.t("pokemonSummary:expPoints"),k.SUMMARY);ve.setOrigin(0,0),this.statsContainer.add(ve);const _e=Se(6,128,u.t("pokemonSummary:nextLv"),k.SUMMARY);_e.setOrigin(0,0),this.statsContainer.add(_e);const Le=Se(208,112,W.toString(),k.WINDOW_ALT);Le.setOrigin(1,0),this.statsContainer.add(Le);const Ee=Q<a.getMaxExpLevel()?IO(Q+1,ie)-W:0,se=Se(208,128,Ee.toString(),k.WINDOW_ALT);se.setOrigin(1,0),this.statsContainer.add(se);const Ne=a.add.image(140,145,"summary_stats_overlay_exp");Ne.setOrigin(0,0),this.statsContainer.add(Ne);const Ue=a.make.graphics({});Ue.setScale(6),Ue.fillStyle(16777215),Ue.beginPath(),Ue.fillRect(140+A.x,145+A.y+21,Math.floor(he*64),3);const me=Ue.createGeometryMask();Ne.setMask(me),this.abilityPrompt=a.add.image(0,0,(z=a.inputController)!=null&&z.gamepadSupport?"summary_profile_prompt_a":"summary_profile_prompt_z"),this.abilityPrompt.setPosition(8,47),this.abilityPrompt.setVisible(!0),this.abilityPrompt.setOrigin(0,0),this.statsContainer.add(this.abilityPrompt);break}case 2:{this.movesContainer=a.add.container(5,-R.height+26),A.add(this.movesContainer),this.extraMoveRowContainer=a.add.container(0,64),this.extraMoveRowContainer.setVisible(!1),this.movesContainer.add(this.extraMoveRowContainer);const Ae=a.add.image(-2,1,"summary_moves_overlay_row");Ae.setOrigin(0,1),this.extraMoveRowContainer.add(Ae);const Q=Se(35,0,this.summaryUiMode===1&&this.newMove?this.newMove.name:u.t("pokemonSummary:cancel"),this.summaryUiMode===1?k.SUMMARY_PINK:k.SUMMARY);if(Q.setOrigin(0,1),this.extraMoveRowContainer.add(Q),this.summaryUiMode===1){if(this.extraMoveRowContainer.setVisible(!0),this.newMove&&this.pokemon){const ve=Ds("types"),_e=this.pokemon.getMoveType(this.newMove),Le=a.add.sprite(0,0,ve,i[_e].toLowerCase());Le.setOrigin(0,1),this.extraMoveRowContainer.add(Le)}const ie=a.add.image(163,-1,"summary_moves_overlay_pp");ie.setOrigin(0,1),this.extraMoveRowContainer.add(ie);const Be=ZR((q=this.newMove)==null?void 0:q.pp,2,"  "),he=Se(173,1,`${Be}/${Be}`,k.WINDOW);he.setOrigin(0,1),this.extraMoveRowContainer.add(he)}this.moveRowsContainer=a.add.container(0,0),this.movesContainer.add(this.moveRowsContainer);for(let ie=0;ie<4;ie++){const Be=this.pokemon&&this.pokemon.moveset.length>ie?(J=this.pokemon)==null?void 0:J.moveset[ie]:null,he=a.add.container(0,16*ie);if(this.moveRowsContainer.add(he),Be&&this.pokemon){const Ee=Ds("types"),se=this.pokemon.getMoveType(Be.getMove()),Ne=a.add.sprite(0,0,Ee,i[se].toLowerCase());Ne.setOrigin(0,1),he.add(Ne)}const ve=Se(35,0,Be?Be.getName():"-",k.SUMMARY);ve.setOrigin(0,1),he.add(ve);const _e=a.add.image(163,-1,"summary_moves_overlay_pp");_e.setOrigin(0,1),he.add(_e);const Le=Se(173,1,"--/--",k.WINDOW);if(Le.setOrigin(0,1),Be){const Ee=Be.getMovePp(),se=Ee-Be.ppUsed;Le.setText(`${ZR(se,2,"  ")}/${ZR(Ee,2,"  ")}`)}he.add(Le)}this.moveDescriptionText=Se(2,84,"",k.WINDOW_ALT,{wordWrap:{width:1212}}),this.movesContainer.add(this.moveDescriptionText);const Re=a.make.graphics({});Re.setScale(6),Re.fillStyle(16777215),Re.beginPath(),Re.fillRect(112,130,202,46);const W=Re.createGeometryMask();this.moveDescriptionText.setMask(W);break}}}showStatus(A){this.statusVisible||(this.statusVisible=!0,a.tweens.add({targets:this.statusContainer,x:0,duration:A?0:250,ease:"Sine.easeOut"}))}hideStatus(A){this.statusVisible&&(this.statusVisible=!1,a.tweens.add({targets:this.statusContainer,x:-106,duration:A?0:250,ease:"Sine.easeIn"}))}getSelectedMove(){return this.cursor!==2?null:this.moveCursor<4&&this.pokemon&&this.moveCursor<this.pokemon.moveset.length?this.pokemon.moveset[this.moveCursor].getMove():this.summaryUiMode===1&&this.moveCursor===4?this.newMove:null}showMoveSelect(){this.moveSelect=!0,this.extraMoveRowContainer.setVisible(!0),this.selectedMoveIndex=-1,this.setCursor(0),this.showMoveEffect()}hideMoveSelect(){var A;if(this.summaryUiMode===1){(A=this.moveSelectFunction)==null||A.call(this,4);return}this.moveSelect=!1,this.extraMoveRowContainer.setVisible(!1),this.moveDescriptionText.setText(""),this.destroyBlinkCursor(),this.hideMoveEffect()}destroyBlinkCursor(){this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null)}showMoveEffect(A){this.moveEffectsVisible||(this.moveEffectsVisible=!0,a.tweens.add({targets:this.moveEffectContainer,x:6,duration:A?0:250,ease:"Sine.easeOut"}))}hideMoveEffect(A){this.moveEffectsVisible&&(this.moveEffectsVisible=!1,a.tweens.add({targets:this.moveEffectContainer,x:106,duration:A?0:250,ease:"Sine.easeIn"}))}clear(){super.clear(),this.pokemon=null,this.cursor=-1,this.newMove=null,this.moveSelect&&(this.moveSelect=!1,this.moveSelectFunction=null,this.extraMoveRowContainer.setVisible(!1),this.moveCursorBlinkTimer&&(this.moveCursorBlinkTimer.destroy(),this.moveCursorBlinkTimer=null),this.moveCursorObj&&(this.moveCursorObj.destroy(),this.moveCursorObj=null),this.selectedMoveCursorObj&&(this.selectedMoveCursorObj.destroy(),this.selectedMoveCursorObj=null),this.hideMoveEffect(!0)),this.summaryContainer.setVisible(!1),this.summaryPageContainer.setVisible(!1)}};o(rm,"SummaryUiHandler");let Xh=rm;const _E={[e.BULBASAUR]:[t.SAPPY_SEED,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.MATCHA_GOTCHA],[e.CHARMANDER]:[t.DRAGON_DANCE,t.BITTER_BLADE,t.EARTH_POWER,t.OBLIVION_WING],[e.SQUIRTLE]:[t.FREEZE_DRY,t.ARMOR_CANNON,t.SHORE_UP,t.ORIGIN_PULSE],[e.CATERPIE]:[t.SANDSEAR_STORM,t.SILK_TRAP,t.TWIN_BEAM,t.BLEAKWIND_STORM],[e.WEEDLE]:[t.THOUSAND_ARROWS,t.NOXIOUS_TORQUE,t.ATTACK_ORDER,t.VICTORY_DANCE],[e.PIDGEY]:[t.BLEAKWIND_STORM,t.SANDSEAR_STORM,t.CALM_MIND,t.BOOMBURST],[e.RATTATA]:[t.HYPER_FANG,t.PSYCHIC_FANGS,t.FIRE_FANG,t.EXTREME_SPEED],[e.SPEAROW]:[t.FLOATY_FALL,t.HYPER_DRILL,t.TIDY_UP,t.TRIPLE_ARROWS],[e.EKANS]:[t.NOXIOUS_TORQUE,t.DRAGON_DANCE,t.SLACK_OFF,t.SHED_TAIL],[e.SANDSHREW]:[t.HIGH_HORSEPOWER,t.DIRE_CLAW,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.NIDORAN_F]:[t.CALM_MIND,t.MOONLIGHT,t.MALIGNANT_CHAIN,t.SANDSEAR_STORM],[e.NIDORAN_M]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.NOXIOUS_TORQUE,t.PRECIPICE_BLADES],[e.VULPIX]:[t.MOONBLAST,t.INFERNAL_PARADE,t.MORNING_SUN,t.TAIL_GLOW],[e.ZUBAT]:[t.FLOATY_FALL,t.DIRE_CLAW,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.ODDISH]:[t.SLUDGE_BOMB,t.FIERY_DANCE,t.STRENGTH_SAP,t.SPORE],[e.PARAS]:[t.LEECH_LIFE,t.HORN_LEECH,t.CRABHAMMER,t.SAPPY_SEED],[e.VENONAT]:[t.SLUDGE_BOMB,t.TOXIC_THREAD,t.EARTH_POWER,t.STORED_POWER],[e.DIGLETT]:[t.TRIPLE_DIVE,t.SWORDS_DANCE,t.TRIPLE_AXEL,t.HEADLONG_RUSH],[e.MEOWTH]:[t.HEART_STAMP,t.SWORDS_DANCE,t.SIZZLY_SLIDE,t.TAIL_SLAP],[e.PSYDUCK]:[t.FROST_BREATH,t.AQUA_STEP,t.MYSTICAL_POWER,t.BOUNCY_BUBBLE],[e.MANKEY]:[t.DRAIN_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.NO_RETREAT],[e.GROWLITHE]:[t.ZING_ZAP,t.PARTING_SHOT,t.MORNING_SUN,t.SACRED_FIRE],[e.POLIWAG]:[t.SLACK_OFF,t.WILDBOLT_STORM,t.DRAIN_PUNCH,t.SURGING_STRIKES],[e.ABRA]:[t.AURA_SPHERE,t.BADDY_BAD,t.ICE_BEAM,t.PSYSTRIKE],[e.MACHOP]:[t.COMBAT_TORQUE,t.METEOR_MASH,t.MOUNTAIN_GALE,t.FISSURE],[e.BELLSPROUT]:[t.SOLAR_BLADE,t.STRENGTH_SAP,t.FIRE_LASH,t.VICTORY_DANCE],[e.TENTACOOL]:[t.BANEFUL_BUNKER,t.MALIGNANT_CHAIN,t.BOUNCY_BUBBLE,t.STRENGTH_SAP],[e.GEODUDE]:[t.FLARE_BLITZ,t.HEAD_SMASH,t.SHORE_UP,t.SHELL_SMASH],[e.PONYTA]:[t.HEADLONG_RUSH,t.FIRE_LASH,t.SWORDS_DANCE,t.VOLT_TACKLE],[e.SLOWPOKE]:[t.SPLISHY_SPLASH,t.FROST_BREATH,t.SHED_TAIL,t.MYSTICAL_POWER],[e.MAGNEMITE]:[t.PARABOLIC_CHARGE,t.FLAMETHROWER,t.ICE_BEAM,t.THUNDERCLAP],[e.FARFETCHD]:[t.IVY_CUDGEL,t.TRIPLE_ARROWS,t.DRILL_RUN,t.VICTORY_DANCE],[e.DODUO]:[t.TRIPLE_AXEL,t.HYPER_DRILL,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.SEEL]:[t.FREEZE_DRY,t.BOUNCY_BUBBLE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.GRIMER]:[t.SUCKER_PUNCH,t.CURSE,t.NOXIOUS_TORQUE,t.STRENGTH_SAP],[e.SHELLDER]:[t.ROCK_BLAST,t.WATER_SHURIKEN,t.BANEFUL_BUNKER,t.BONE_RUSH],[e.GASTLY]:[t.MALIGNANT_CHAIN,t.AURA_SPHERE,t.PARTING_SHOT,t.DARK_VOID],[e.ONIX]:[t.SHORE_UP,t.THOUSAND_WAVES,t.COIL,t.DIAMOND_STORM],[e.DROWZEE]:[t.BADDY_BAD,t.STRENGTH_SAP,t.LUMINA_CRASH,t.DARK_VOID],[e.KRABBY]:[t.DIRE_CLAW,t.DRAGON_HAMMER,t.IVY_CUDGEL,t.JET_PUNCH],[e.VOLTORB]:[t.NASTY_PLOT,t.FUSION_FLARE,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.EXEGGCUTE]:[t.FICKLE_BEAM,t.APPLE_ACID,t.HEAT_WAVE,t.LUMINA_CRASH],[e.CUBONE]:[t.HEAD_SMASH,t.WOOD_HAMMER,t.SHADOW_SNEAK,t.BITTER_BLADE],[e.LICKITUNG]:[t.CRUSH_GRIP,t.FIRE_LASH,t.SLACK_OFF,t.MAGICAL_TORQUE],[e.KOFFING]:[t.SCALD,t.RECOVER,t.BODY_PRESS,t.MALIGNANT_CHAIN],[e.RHYHORN]:[t.SHORE_UP,t.ICE_HAMMER,t.ACCELEROCK,t.HEAD_SMASH],[e.TANGELA]:[t.NATURES_MADNESS,t.SNAP_TRAP,t.PARTING_SHOT,t.SAPPY_SEED],[e.KANGASKHAN]:[t.POWER_UP_PUNCH,t.TRAILBLAZE,t.COVET,t.SEISMIC_TOSS],[e.HORSEA]:[t.SNIPE_SHOT,t.FROST_BREATH,t.SLUDGE_BOMB,t.CLANGING_SCALES],[e.GOLDEEN]:[t.GLACIAL_LANCE,t.SUPERCELL_SLAM,t.DRAGON_DANCE,t.FISHIOUS_REND],[e.STARYU]:[t.CALM_MIND,t.BOUNCY_BUBBLE,t.MOONBLAST,t.MYSTICAL_POWER],[e.SCYTHER]:[t.MIGHTY_CLEAVE,t.GEAR_GRIND,t.STORM_THROW,t.BITTER_BLADE],[e.PINSIR]:[t.HEADLONG_RUSH,t.LEECH_LIFE,t.CRUSH_GRIP,t.EXTREME_SPEED],[e.TAUROS]:[t.SWORDS_DANCE,t.FIRE_LASH,t.WICKED_TORQUE,t.COLLISION_COURSE],[e.MAGIKARP]:[t.FLIP_TURN,t.ICE_SPINNER,t.KNOCK_OFF,t.DRAGON_ASCENT],[e.LAPRAS]:[t.RECOVER,t.FREEZE_DRY,t.SCALD,t.SHELL_SMASH],[e.DITTO]:[t.MIMIC,t.SKETCH,t.METRONOME,t.IMPRISON],[e.EEVEE]:[t.WISH,t.NO_RETREAT,t.ZIPPY_ZAP,t.BOOMBURST],[e.PORYGON]:[t.THUNDERCLAP,t.AURA_SPHERE,t.FLAMETHROWER,t.TECHNO_BLAST],[e.OMANYTE]:[t.FREEZE_DRY,t.GIGA_DRAIN,t.POWER_GEM,t.STEAM_ERUPTION],[e.KABUTO]:[t.CEASELESS_EDGE,t.HIGH_HORSEPOWER,t.CRABHAMMER,t.MIGHTY_CLEAVE],[e.AERODACTYL]:[t.FLOATY_FALL,t.FLARE_BLITZ,t.SWORDS_DANCE,t.MIGHTY_CLEAVE],[e.ARTICUNO]:[t.EARTH_POWER,t.CALM_MIND,t.AURORA_VEIL,t.AEROBLAST],[e.ZAPDOS]:[t.BLEAKWIND_STORM,t.CALM_MIND,t.SANDSEAR_STORM,t.ELECTRO_SHOT],[e.MOLTRES]:[t.EARTH_POWER,t.CALM_MIND,t.AEROBLAST,t.TORCH_SONG],[e.DRATINI]:[t.DRAGON_HAMMER,t.CRUSH_GRIP,t.FIRE_LASH,t.GIGATON_HAMMER],[e.MEWTWO]:[t.METEOR_MASH,t.MOONBLAST,t.THUNDEROUS_KICK,t.PHOTON_GEYSER],[e.MEW]:[t.PHOTON_GEYSER,t.MOONBLAST,t.ASTRAL_BARRAGE,t.SHELL_SMASH],[e.CHIKORITA]:[t.SAPPY_SEED,t.STONE_AXE,t.DRAGON_DANCE,t.SPORE],[e.CYNDAQUIL]:[t.NASTY_PLOT,t.EARTH_POWER,t.FIERY_DANCE,t.ELECTRO_DRIFT],[e.TOTODILE]:[t.THUNDER_PUNCH,t.DRAGON_DANCE,t.PLAY_ROUGH,t.SURGING_STRIKES],[e.SENTRET]:[t.TIDY_UP,t.FAKE_OUT,t.NUZZLE,t.EXTREME_SPEED],[e.HOOTHOOT]:[t.CALM_MIND,t.ESPER_WING,t.AEROBLAST,t.BOOMBURST],[e.LEDYBA]:[t.POLLEN_PUFF,t.MAT_BLOCK,t.PARTING_SHOT,t.SPORE],[e.SPINARAK]:[t.PARTING_SHOT,t.ATTACK_ORDER,t.GASTRO_ACID,t.STRENGTH_SAP],[e.CHINCHOU]:[t.THUNDERCLAP,t.BOUNCY_BUBBLE,t.THUNDER_CAGE,t.TAIL_GLOW],[e.PICHU]:[t.MOONBLAST,t.TRIPLE_AXEL,t.FIERY_DANCE,t.AURA_WHEEL],[e.CLEFFA]:[t.CALM_MIND,t.EARTH_POWER,t.WISH,t.LIGHT_OF_RUIN],[e.IGGLYBUFF]:[t.DRAIN_PUNCH,t.GRAV_APPLE,t.SOFT_BOILED,t.EXTREME_SPEED],[e.TOGEPI]:[t.SCORCHING_SANDS,t.SPLISHY_SPLASH,t.RELIC_SONG,t.FIERY_DANCE],[e.NATU]:[t.REVIVAL_BLESSING,t.NASTY_PLOT,t.MOONBLAST,t.OBLIVION_WING],[e.MAREEP]:[t.ICE_BEAM,t.PARABOLIC_CHARGE,t.CORE_ENFORCER,t.TAIL_GLOW],[e.HOPPIP]:[t.FLOATY_FALL,t.STRENGTH_SAP,t.SAPPY_SEED,t.SPORE],[e.AIPOM]:[t.ROCK_BLAST,t.STORM_THROW,t.FAKE_OUT,t.SWORDS_DANCE],[e.SUNKERN]:[t.SPORE,t.QUIVER_DANCE,t.FIERY_DANCE,t.HYDRO_STEAM],[e.YANMA]:[t.NASTY_PLOT,t.EARTH_POWER,t.HEAT_WAVE,t.BLEAKWIND_STORM],[e.WOOPER]:[t.SIZZLY_SLIDE,t.RECOVER,t.SHED_TAIL,t.SURGING_STRIKES],[e.MURKROW]:[t.TRIPLE_ARROWS,t.FLOATY_FALL,t.TIDY_UP,t.WICKED_BLOW],[e.MISDREAVUS]:[t.TAKE_HEART,t.MOONBLAST,t.AURA_SPHERE,t.MOONGEIST_BEAM],[e.UNOWN]:[t.NATURE_POWER,t.COSMIC_POWER,t.ANCIENT_POWER,t.MYSTICAL_POWER],[e.GIRAFARIG]:[t.MYSTICAL_POWER,t.NIGHT_DAZE,t.RECOVER,t.BOOMBURST],[e.PINECO]:[t.METAL_BURST,t.SHORE_UP,t.BODY_PRESS,t.DIAMOND_STORM],[e.DUNSPARCE]:[t.WICKED_TORQUE,t.MAGICAL_TORQUE,t.BLAZING_TORQUE,t.EXTREME_SPEED],[e.GLIGAR]:[t.FLOATY_FALL,t.THOUSAND_WAVES,t.SPIKY_SHIELD,t.MIGHTY_CLEAVE],[e.SNUBBULL]:[t.FACADE,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.QWILFISH]:[t.BARB_BARRAGE,t.BANEFUL_BUNKER,t.RECOVER,t.FISHIOUS_REND],[e.SHUCKLE]:[t.STUFF_CHEEKS,t.HEAL_ORDER,t.BODY_PRESS,t.SALT_CURE],[e.HERACROSS]:[t.ROCK_BLAST,t.STORM_THROW,t.ICICLE_SPEAR,t.SCALE_SHOT],[e.SNEASEL]:[t.DIRE_CLAW,t.DARKEST_LARIAT,t.TRIPLE_AXEL,t.CLOSE_COMBAT],[e.TEDDIURSA]:[t.MOUNTAIN_GALE,t.FAKE_OUT,t.SLACK_OFF,t.PRECIPICE_BLADES],[e.SLUGMA]:[t.BURNING_BULWARK,t.POWER_GEM,t.SOLAR_BEAM,t.MAGMA_STORM],[e.SWINUB]:[t.SLACK_OFF,t.MOUNTAIN_GALE,t.STONE_AXE,t.PRECIPICE_BLADES],[e.CORSOLA]:[t.SCALD,t.FREEZE_DRY,t.STRENGTH_SAP,t.SALT_CURE],[e.REMORAID]:[t.WATER_SHURIKEN,t.TAKE_HEART,t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE],[e.DELIBIRD]:[t.BONEMERANG,t.FLOATY_FALL,t.VICTORY_DANCE,t.GLACIAL_LANCE],[e.SKARMORY]:[t.ROOST,t.BODY_PRESS,t.SPIKY_SHIELD,t.BEAK_BLAST],[e.HOUNDOUR]:[t.FIERY_WRATH,t.THUNDERBOLT,t.MOONBLAST,t.ARMOR_CANNON],[e.PHANPY]:[t.SHORE_UP,t.SWORDS_DANCE,t.MOUNTAIN_GALE,t.COLLISION_COURSE],[e.STANTLER]:[t.THUNDEROUS_KICK,t.PHOTON_GEYSER,t.SWORDS_DANCE,t.BOOMBURST],[e.SMEARGLE]:[t.CONVERSION,t.BURNING_BULWARK,t.SALT_CURE,t.DARK_VOID],[e.TYROGUE]:[t.VICTORY_DANCE,t.THUNDEROUS_KICK,t.METEOR_MASH,t.WICKED_BLOW],[e.SMOOCHUM]:[t.LUSTER_PURGE,t.AURA_SPHERE,t.FREEZE_DRY,t.QUIVER_DANCE],[e.ELEKID]:[t.FIRE_LASH,t.ZING_ZAP,t.MOUNTAIN_GALE,t.SHIFT_GEAR],[e.MAGBY]:[t.THUNDERCLAP,t.EARTH_POWER,t.ENERGY_BALL,t.BLUE_FLARE],[e.MILTANK]:[t.BODY_PRESS,t.BULK_UP,t.KNOCK_OFF,t.SIZZLY_SLIDE],[e.RAIKOU]:[t.PARABOLIC_CHARGE,t.NASTY_PLOT,t.FROST_BREATH,t.ELECTRO_DRIFT],[e.ENTEI]:[t.BURNING_BULWARK,t.DRAGON_DANCE,t.EARTHQUAKE,t.PYRO_BALL],[e.SUICUNE]:[t.RECOVER,t.NASTY_PLOT,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.LARVITAR]:[t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.SHORE_UP,t.DIAMOND_STORM],[e.LUGIA]:[t.NASTY_PLOT,t.LUMINA_CRASH,t.AURA_SPHERE,t.OBLIVION_WING],[e.HO_OH]:[t.BRAVE_BIRD,t.DRAGON_DANCE,t.REVIVAL_BLESSING,t.BOLT_BEAK],[e.CELEBI]:[t.PHOTON_GEYSER,t.MATCHA_GOTCHA,t.REVIVAL_BLESSING,t.QUIVER_DANCE],[e.TREECKO]:[t.NASTY_PLOT,t.CORE_ENFORCER,t.FLAMETHROWER,t.SEED_FLARE],[e.TORCHIC]:[t.THUNDEROUS_KICK,t.ZING_ZAP,t.BURNING_BULWARK,t.PYRO_BALL],[e.MUDKIP]:[t.SHORE_UP,t.MOUNTAIN_GALE,t.AQUA_STEP,t.PRECIPICE_BLADES],[e.POOCHYENA]:[t.KNOCK_OFF,t.CLOSE_COMBAT,t.DIRE_CLAW,t.VICTORY_DANCE],[e.ZIGZAGOON]:[t.EXTREME_SPEED,t.NUZZLE,t.HIGH_HORSEPOWER,t.TIDY_UP],[e.WURMPLE]:[t.BATON_PASS,t.BLEAKWIND_STORM,t.STORED_POWER,t.MALIGNANT_CHAIN],[e.LOTAD]:[t.REVELATION_DANCE,t.APPLE_ACID,t.ICE_BEAM,t.QUIVER_DANCE],[e.SEEDOT]:[t.SWORDS_DANCE,t.SACRED_SWORD,t.KOWTOW_CLEAVE,t.BITTER_BLADE],[e.TAILLOW]:[t.BOOMBURST,t.FACADE,t.HEADLONG_RUSH,t.NO_RETREAT],[e.WINGULL]:[t.THUNDER,t.FLIP_TURN,t.CALM_MIND,t.STEAM_ERUPTION],[e.RALTS]:[t.PSYBLADE,t.BITTER_BLADE,t.NO_RETREAT,t.BOOMBURST],[e.SURSKIT]:[t.POLLEN_PUFF,t.FIERY_DANCE,t.BOUNCY_BUBBLE,t.AEROBLAST],[e.SHROOMISH]:[t.ACCELEROCK,t.TRAILBLAZE,t.STORM_THROW,t.SAPPY_SEED],[e.SLAKOTH]:[t.FACADE,t.DRAIN_PUNCH,t.KNOCK_OFF,t.SKILL_SWAP],[e.NINCADA]:[t.BULLDOZE,t.STICKY_WEB,t.SHADOW_BONE,t.SHELL_SMASH],[e.WHISMUR]:[t.ALLURING_VOICE,t.SHIFT_GEAR,t.SPARKLING_ARIA,t.TORCH_SONG],[e.MAKUHITA]:[t.COMBAT_TORQUE,t.SLACK_OFF,t.HEAT_CRASH,t.DOUBLE_IRON_BASH],[e.AZURILL]:[t.JET_PUNCH,t.MAGICAL_TORQUE,t.SWORDS_DANCE,t.SURGING_STRIKES],[e.NOSEPASS]:[t.SHORE_UP,t.BODY_PRESS,t.CALM_MIND,t.TACHYON_CUTTER],[e.SKITTY]:[t.THUNDEROUS_KICK,t.ENTRAINMENT,t.TIDY_UP,t.V_CREATE],[e.SABLEYE]:[t.RECOVER,t.TOPSY_TURVY,t.CURSE,t.SALT_CURE],[e.MAWILE]:[t.BULLET_PUNCH,t.HORN_LEECH,t.EARTHQUAKE,t.MAGICAL_TORQUE],[e.ARON]:[t.HEAD_SMASH,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.MEDITITE]:[t.THUNDEROUS_KICK,t.SUCKER_PUNCH,t.BULLET_PUNCH,t.PHOTON_GEYSER],[e.ELECTRIKE]:[t.FROST_BREATH,t.HEAT_WAVE,t.NASTY_PLOT,t.ELECTRO_DRIFT],[e.PLUSLE]:[t.FLAMETHROWER,t.GLITZY_GLOW,t.SPLISHY_SPLASH,t.TAIL_GLOW],[e.MINUN]:[t.ICE_BEAM,t.BADDY_BAD,t.SPARKLY_SWIRL,t.TAIL_GLOW],[e.VOLBEAT]:[t.BATON_PASS,t.STICKY_WEB,t.DECORATE,t.VICTORY_DANCE],[e.ILLUMISE]:[t.PARTING_SHOT,t.GLITZY_GLOW,t.POWDER,t.QUIVER_DANCE],[e.GULPIN]:[t.MALIGNANT_CHAIN,t.EARTH_POWER,t.CALM_MIND,t.STRENGTH_SAP],[e.CARVANHA]:[t.THUNDER_FANG,t.GUNK_SHOT,t.OBSTRUCT,t.SURGING_STRIKES],[e.WAILMER]:[t.TAKE_HEART,t.COMEUPPANCE,t.SLACK_OFF,t.STEAM_ERUPTION],[e.NUMEL]:[t.TRICK_ROOM,t.ENERGY_BALL,t.SLACK_OFF,t.BLUE_FLARE],[e.TORKOAL]:[t.MORNING_SUN,t.BURNING_BULWARK,t.BODY_PRESS,t.HYDRO_STEAM],[e.SPOINK]:[t.AURA_SPHERE,t.MILK_DRINK,t.EXPANDING_FORCE,t.TAIL_GLOW],[e.SPINDA]:[t.SUPERPOWER,t.SLACK_OFF,t.FLEUR_CANNON,t.V_CREATE],[e.TRAPINCH]:[t.FIRE_LASH,t.DRAGON_DARTS,t.THOUSAND_ARROWS,t.DRAGON_ENERGY],[e.CACNEA]:[t.EARTH_POWER,t.CEASELESS_EDGE,t.NIGHT_DAZE,t.SAPPY_SEED],[e.SWABLU]:[t.ROOST,t.NASTY_PLOT,t.FLOATY_FALL,t.BOOMBURST],[e.ZANGOOSE]:[t.FACADE,t.HIGH_HORSEPOWER,t.EXTREME_SPEED,t.TIDY_UP],[e.SEVIPER]:[t.ICE_BEAM,t.BITTER_BLADE,t.SUCKER_PUNCH,t.NO_RETREAT],[e.LUNATONE]:[t.REVELATION_DANCE,t.MOONGEIST_BEAM,t.SHELL_SMASH,t.LUMINA_CRASH],[e.SOLROCK]:[t.MIGHTY_CLEAVE,t.PHOTON_GEYSER,t.SHELL_SMASH,t.SACRED_FIRE],[e.BARBOACH]:[t.DRAGON_DANCE,t.ZING_ZAP,t.ICE_SPINNER,t.SURGING_STRIKES],[e.CORPHISH]:[t.CEASELESS_EDGE,t.SHELL_SIDE_ARM,t.SUCKER_PUNCH,t.JET_PUNCH],[e.BALTOY]:[t.RECOVER,t.GLARE,t.RUINATION,t.MYSTICAL_POWER],[e.LILEEP]:[t.POWER_GEM,t.SCALD,t.STRENGTH_SAP,t.SAPPY_SEED],[e.ANORITH]:[t.FIRST_IMPRESSION,t.LEECH_LIFE,t.DRAGON_DANCE,t.MIGHTY_CLEAVE],[e.FEEBAS]:[t.CALM_MIND,t.FREEZE_DRY,t.MOONBLAST,t.STEAM_ERUPTION],[e.CASTFORM]:[t.BOOMBURST,t.HYDRO_STEAM,t.ERUPTION,t.QUIVER_DANCE],[e.KECLEON]:[t.ZIPPY_ZAP,t.COIL,t.EXTREME_SPEED,t.MULTI_ATTACK],[e.SHUPPET]:[t.STORM_THROW,t.TIDY_UP,t.PARTING_SHOT,t.SPECTRAL_THIEF],[e.DUSKULL]:[t.BULK_UP,t.DRAIN_PUNCH,t.RECOVER,t.RAGE_FIST],[e.TROPIUS]:[t.STUFF_CHEEKS,t.EARTH_POWER,t.APPLE_ACID,t.SAPPY_SEED],[e.ABSOL]:[t.KOWTOW_CLEAVE,t.SACRED_SWORD,t.PSYBLADE,t.BITTER_BLADE],[e.WYNAUT]:[t.RECOVER,t.SHED_TAIL,t.TAUNT,t.COMEUPPANCE],[e.SNORUNT]:[t.SPARKLY_SWIRL,t.NASTY_PLOT,t.EARTH_POWER,t.BLOOD_MOON],[e.SPHEAL]:[t.FLIP_TURN,t.FREEZE_DRY,t.SLACK_OFF,t.STEAM_ERUPTION],[e.CLAMPERL]:[t.SHELL_SIDE_ARM,t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.RELICANTH]:[t.DRAGON_DANCE,t.SHORE_UP,t.WAVE_CRASH,t.DIAMOND_STORM],[e.LUVDISC]:[t.BATON_PASS,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.BAGON]:[t.HEADLONG_RUSH,t.FIRE_LASH,t.DRAGON_DANCE,t.DRAGON_DARTS],[e.BELDUM]:[t.HEADLONG_RUSH,t.DRAIN_PUNCH,t.ICE_SPINNER,t.SHIFT_GEAR],[e.REGIROCK]:[t.STONE_AXE,t.BODY_PRESS,t.SHORE_UP,t.SALT_CURE],[e.REGICE]:[t.EARTH_POWER,t.TAKE_HEART,t.RECOVER,t.FREEZE_DRY],[e.REGISTEEL]:[t.BODY_PRESS,t.SIZZLY_SLIDE,t.RECOVER,t.GIGATON_HAMMER],[e.LATIAS]:[t.CORE_ENFORCER,t.FUSION_FLARE,t.SPARKLY_SWIRL,t.MYSTICAL_POWER],[e.LATIOS]:[t.CORE_ENFORCER,t.BLUE_FLARE,t.NASTY_PLOT,t.TACHYON_CUTTER],[e.KYOGRE]:[t.RECOVER,t.HURRICANE,t.FREEZY_FROST,t.WILDBOLT_STORM],[e.GROUDON]:[t.STONE_AXE,t.SOLAR_BLADE,t.MORNING_SUN,t.SACRED_FIRE],[e.RAYQUAZA]:[t.V_CREATE,t.DRAGON_DARTS,t.CORE_ENFORCER,t.OBLIVION_WING],[e.JIRACHI]:[t.TACHYON_CUTTER,t.TRIPLE_ARROWS,t.ROCK_SLIDE,t.SHELL_SMASH],[e.DEOXYS]:[t.COLLISION_COURSE,t.FUSION_FLARE,t.PARTING_SHOT,t.LUMINA_CRASH],[e.TURTWIG]:[t.SHELL_SMASH,t.MIGHTY_CLEAVE,t.ICE_SPINNER,t.SAPPY_SEED],[e.CHIMCHAR]:[t.THUNDERBOLT,t.SECRET_SWORD,t.TRIPLE_AXEL,t.SACRED_FIRE],[e.PIPLUP]:[t.KINGS_SHIELD,t.TACHYON_CUTTER,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.STARLY]:[t.SWORDS_DANCE,t.HEAD_CHARGE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.BIDOOF]:[t.EXTREME_SPEED,t.COSMIC_POWER,t.POWER_TRIP,t.AQUA_STEP],[e.KRICKETOT]:[t.BONEMERANG,t.VICTORY_DANCE,t.STONE_AXE,t.POPULATION_BOMB],[e.SHINX]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.ZIPPY_ZAP,t.BOLT_STRIKE],[e.BUDEW]:[t.FIERY_DANCE,t.ACID_SPRAY,t.BOUNCY_BUBBLE,t.QUIVER_DANCE],[e.CRANIDOS]:[t.VOLT_TACKLE,t.ACCELEROCK,t.FLARE_BLITZ,t.SHIFT_GEAR],[e.SHIELDON]:[t.SHORE_UP,t.BODY_PRESS,t.KINGS_SHIELD,t.DIAMOND_STORM],[e.BURMY]:[t.FIERY_DANCE,t.DEFEND_ORDER,t.HEAL_ORDER,t.SAPPY_SEED],[e.COMBEE]:[t.SPORE,t.FLOATY_FALL,t.KINGS_SHIELD,t.VICTORY_DANCE],[e.PACHIRISU]:[t.FREEZY_FROST,t.SIZZLY_SLIDE,t.SLACK_OFF,t.THUNDER_CAGE],[e.BUIZEL]:[t.JET_PUNCH,t.TRIPLE_AXEL,t.SUPERCELL_SLAM,t.SURGING_STRIKES],[e.CHERUBI]:[t.SLEEP_POWDER,t.STRENGTH_SAP,t.FIRE_LASH,t.FLOWER_TRICK],[e.SHELLOS]:[t.BOUNCY_BUBBLE,t.SCORCHING_SANDS,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.DRIFLOON]:[t.PSYCHO_SHIFT,t.MIND_BLOWN,t.CALM_MIND,t.OBLIVION_WING],[e.BUNEARY]:[t.TRIPLE_AXEL,t.EXTREME_SPEED,t.THUNDEROUS_KICK,t.SWORDS_DANCE],[e.GLAMEOW]:[t.PARTING_SHOT,t.HIGH_HORSEPOWER,t.SWORDS_DANCE,t.EXTREME_SPEED],[e.CHINGLING]:[t.BUZZY_BUZZ,t.EERIE_SPELL,t.TORCH_SONG,t.BOOMBURST],[e.STUNKY]:[t.CEASELESS_EDGE,t.FIRE_LASH,t.RECOVER,t.DIRE_CLAW],[e.BRONZOR]:[t.RECOVER,t.TACHYON_CUTTER,t.GLARE,t.LUMINA_CRASH],[e.BONSLY]:[t.ACCELEROCK,t.SWORDS_DANCE,t.STRENGTH_SAP,t.SAPPY_SEED],[e.MIME_JR]:[t.CHILLY_RECEPTION,t.MOONBLAST,t.FROST_BREATH,t.LUMINA_CRASH],[e.HAPPINY]:[t.COTTON_GUARD,t.SEISMIC_TOSS,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.CHATOT]:[t.SPARKLING_ARIA,t.BOOMBURST,t.BATON_PASS,t.TORCH_SONG],[e.SPIRITOMB]:[t.PARTING_SHOT,t.BADDY_BAD,t.STRENGTH_SAP,t.SPECTRAL_THIEF],[e.GIBLE]:[t.METEOR_MASH,t.BITTER_BLADE,t.LANDS_WRATH,t.DRAGON_DANCE],[e.MUNCHLAX]:[t.STUFF_CHEEKS,t.GRAV_APPLE,t.SLACK_OFF,t.EXTREME_SPEED],[e.RIOLU]:[t.THUNDEROUS_KICK,t.TACHYON_CUTTER,t.TRIPLE_AXEL,t.SUNSTEEL_STRIKE],[e.HIPPOPOTAS]:[t.SHORE_UP,t.STONE_AXE,t.BULK_UP,t.SALT_CURE],[e.SKORUPI]:[t.COIL,t.DIRE_CLAW,t.CRABHAMMER,t.WICKED_BLOW],[e.CROAGUNK]:[t.DIRE_CLAW,t.TRIPLE_AXEL,t.THUNDEROUS_KICK,t.VICTORY_DANCE],[e.CARNIVINE]:[t.STRENGTH_SAP,t.FIRE_LASH,t.COIL,t.SAPPY_SEED],[e.FINNEON]:[t.QUIVER_DANCE,t.SPLISHY_SPLASH,t.FREEZE_DRY,t.OBLIVION_WING],[e.MANTYKE]:[t.SPLISHY_SPLASH,t.FREEZY_FROST,t.NASTY_PLOT,t.OBLIVION_WING],[e.SNOVER]:[t.LANDS_WRATH,t.POWDER,t.CALM_MIND,t.MATCHA_GOTCHA],[e.ROTOM]:[t.STRENGTH_SAP,t.FIERY_DANCE,t.SPLISHY_SPLASH,t.ELECTRO_DRIFT],[e.UXIE]:[t.LUMINA_CRASH,t.AURA_SPHERE,t.RECOVER,t.TAIL_GLOW],[e.MESPRIT]:[t.PHOTON_GEYSER,t.AURA_SPHERE,t.RECOVER,t.TAIL_GLOW],[e.AZELF]:[t.PSYSTRIKE,t.AURA_SPHERE,t.ICE_BEAM,t.TAIL_GLOW],[e.DIALGA]:[t.CORE_ENFORCER,t.TAKE_HEART,t.RECOVER,t.MAKE_IT_RAIN],[e.PALKIA]:[t.MALIGNANT_CHAIN,t.TAKE_HEART,t.RECOVER,t.ORIGIN_PULSE],[e.HEATRAN]:[t.MATCHA_GOTCHA,t.RECOVER,t.ERUPTION,t.TACHYON_CUTTER],[e.REGIGIGAS]:[t.SKILL_SWAP,t.RECOVER,t.EXTREME_SPEED,t.GIGATON_HAMMER],[e.GIRATINA]:[t.DRAGON_DANCE,t.SPECTRAL_THIEF,t.RECOVER,t.COLLISION_COURSE],[e.CRESSELIA]:[t.COSMIC_POWER,t.BODY_PRESS,t.SIZZLY_SLIDE,t.LUMINA_CRASH],[e.PHIONE]:[t.BOUNCY_BUBBLE,t.FREEZE_DRY,t.STORED_POWER,t.ORIGIN_PULSE],[e.MANAPHY]:[t.BOUNCY_BUBBLE,t.FROST_BREATH,t.WILDBOLT_STORM,t.ORIGIN_PULSE],[e.DARKRAI]:[t.FIERY_WRATH,t.MOONBLAST,t.FIERY_DANCE,t.MAKE_IT_RAIN],[e.SHAYMIN]:[t.MATCHA_GOTCHA,t.FIERY_DANCE,t.AEROBLAST,t.QUIVER_DANCE],[e.ARCEUS]:[t.NO_RETREAT,t.COLLISION_COURSE,t.ASTRAL_BARRAGE,t.MULTI_ATTACK],[e.VICTINI]:[t.BLUE_FLARE,t.BOLT_STRIKE,t.LUSTER_PURGE,t.VICTORY_DANCE],[e.SNIVY]:[t.FLAMETHROWER,t.CLANGING_SCALES,t.MAKE_IT_RAIN,t.FLEUR_CANNON],[e.TEPIG]:[t.WAVE_CRASH,t.VOLT_TACKLE,t.AXE_KICK,t.VICTORY_DANCE],[e.OSHAWOTT]:[t.FREEZE_DRY,t.SHELL_SIDE_ARM,t.SACRED_SWORD,t.SHELL_SMASH],[e.PATRAT]:[t.FAKE_OUT,t.SWORDS_DANCE,t.DYNAMIC_PUNCH,t.EXTREME_SPEED],[e.LILLIPUP]:[t.CLOSE_COMBAT,t.BODY_SLAM,t.HIGH_HORSEPOWER,t.LAST_RESPECTS],[e.PURRLOIN]:[t.ENCORE,t.OBSTRUCT,t.PARTING_SHOT,t.WICKED_BLOW],[e.PANSAGE]:[t.SWORDS_DANCE,t.FIRE_LASH,t.EARTHQUAKE,t.IVY_CUDGEL],[e.PANSEAR]:[t.NASTY_PLOT,t.HYDRO_STEAM,t.EARTH_POWER,t.ERUPTION],[e.PANPOUR]:[t.NASTY_PLOT,t.ENERGY_BALL,t.EARTH_POWER,t.WATER_SPOUT],[e.MUNNA]:[t.COSMIC_POWER,t.AURA_SPHERE,t.LUNAR_BLESSING,t.MYSTICAL_POWER],[e.PIDOVE]:[t.SLASH,t.TIDY_UP,t.FLOATY_FALL,t.TRIPLE_ARROWS],[e.BLITZLE]:[t.HORN_LEECH,t.SWORDS_DANCE,t.FLARE_BLITZ,t.BOLT_STRIKE],[e.ROGGENROLA]:[t.BODY_PRESS,t.CURSE,t.SHORE_UP,t.DIAMOND_STORM],[e.WOOBAT]:[t.ESPER_WING,t.STORED_POWER,t.MYSTICAL_FIRE,t.OBLIVION_WING],[e.DRILBUR]:[t.METEOR_MASH,t.ICE_SPINNER,t.SHIFT_GEAR,t.THOUSAND_ARROWS],[e.AUDINO]:[t.TAKE_HEART,t.MOONBLAST,t.WISH,t.MATCHA_GOTCHA],[e.TIMBURR]:[t.MACH_PUNCH,t.DRAIN_PUNCH,t.ICE_HAMMER,t.DOUBLE_IRON_BASH],[e.TYMPOLE]:[t.JET_PUNCH,t.HIGH_HORSEPOWER,t.BULK_UP,t.SURGING_STRIKES],[e.THROH]:[t.MACH_PUNCH,t.SLACK_OFF,t.METEOR_MASH,t.RAGE_FIST],[e.SAWK]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.VICTORY_DANCE],[e.SEWADDLE]:[t.STONE_AXE,t.PSYCHO_CUT,t.BITTER_BLADE,t.VICTORY_DANCE],[e.VENIPEDE]:[t.BANEFUL_BUNKER,t.LEECH_LIFE,t.NOXIOUS_TORQUE,t.POWER_TRIP],[e.COTTONEE]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.SLEEP_POWDER,t.SEED_FLARE],[e.PETILIL]:[t.THUNDEROUS_KICK,t.SPARKLING_ARIA,t.FIERY_DANCE,t.FLOWER_TRICK],[e.BASCULIN]:[t.LAST_RESPECTS,t.CLOSE_COMBAT,t.SPLISHY_SPLASH,t.NO_RETREAT],[e.SANDILE]:[t.DIRE_CLAW,t.SUCKER_PUNCH,t.FIRE_LASH,t.HEADLONG_RUSH],[e.DARUMAKA]:[t.DRAIN_PUNCH,t.ZIPPY_ZAP,t.HEADLONG_RUSH,t.PYRO_BALL],[e.MARACTUS]:[t.EARTH_POWER,t.QUIVER_DANCE,t.FIERY_DANCE,t.SEED_FLARE],[e.DWEBBLE]:[t.CRABHAMMER,t.STONE_AXE,t.LEECH_LIFE,t.MIGHTY_CLEAVE],[e.SCRAGGY]:[t.SUCKER_PUNCH,t.BULLET_PUNCH,t.NOXIOUS_TORQUE,t.VICTORY_DANCE],[e.SIGILYPH]:[t.MOONBLAST,t.CALM_MIND,t.ESPER_WING,t.OBLIVION_WING],[e.YAMASK]:[t.STRENGTH_SAP,t.GLARE,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.TIRTOUGA]:[t.ICE_SPINNER,t.AQUA_STEP,t.SHORE_UP,t.MIGHTY_CLEAVE],[e.ARCHEN]:[t.ROOST,t.EARTHQUAKE,t.FLOATY_FALL,t.MIGHTY_CLEAVE],[e.TRUBBISH]:[t.COIL,t.RECOVER,t.DIRE_CLAW,t.GIGATON_HAMMER],[e.ZORUA]:[t.MALIGNANT_CHAIN,t.MOONBLAST,t.SECRET_SWORD,t.FIERY_WRATH],[e.MINCCINO]:[t.ICICLE_SPEAR,t.TIDY_UP,t.KNOCK_OFF,t.POPULATION_BOMB],[e.GOTHITA]:[t.RECOVER,t.MOONBLAST,t.AURA_SPHERE,t.LUMINA_CRASH],[e.SOLOSIS]:[t.MIST_BALL,t.SPEED_SWAP,t.FLAMETHROWER,t.LIGHT_OF_RUIN],[e.DUCKLETT]:[t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.WILDBOLT_STORM,t.QUIVER_DANCE],[e.VANILLITE]:[t.EARTH_POWER,t.AURORA_VEIL,t.CALM_MIND,t.SPARKLY_SWIRL],[e.DEERLING]:[t.TIDY_UP,t.HEADBUTT,t.COMBAT_TORQUE,t.FLOWER_TRICK],[e.EMOLGA]:[t.ICICLE_CRASH,t.ZING_ZAP,t.FLOATY_FALL,t.ELECTRIFY],[e.KARRABLAST]:[t.LEECH_LIFE,t.BITTER_BLADE,t.OBSTRUCT,t.DOUBLE_IRON_BASH],[e.FOONGUS]:[t.POLLEN_PUFF,t.PARTING_SHOT,t.FOUL_PLAY,t.SAPPY_SEED],[e.FRILLISH]:[t.CALM_MIND,t.BUZZY_BUZZ,t.FREEZE_DRY,t.STEAM_ERUPTION],[e.ALOMOMOLA]:[t.FLIP_TURN,t.HEART_SWAP,t.GLITZY_GLOW,t.REVIVAL_BLESSING],[e.JOLTIK]:[t.WILDBOLT_STORM,t.PARABOLIC_CHARGE,t.EARTH_POWER,t.QUIVER_DANCE],[e.FERROSEED]:[t.SYNTHESIS,t.CEASELESS_EDGE,t.SPIKY_SHIELD,t.SAPPY_SEED],[e.KLINK]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.RECOVER,t.AURA_WHEEL],[e.TYNAMO]:[t.SCALD,t.STRENGTH_SAP,t.FIRE_LASH,t.AURA_WHEEL],[e.ELGYEM]:[t.THUNDERCLAP,t.BADDY_BAD,t.AURA_SPHERE,t.PHOTON_GEYSER],[e.LITWICK]:[t.GIGA_DRAIN,t.EARTH_POWER,t.MOONBLAST,t.TORCH_SONG],[e.AXEW]:[t.STONE_AXE,t.DIRE_CLAW,t.BITTER_BLADE,t.GLAIVE_RUSH],[e.CUBCHOO]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.ICE_SHARD,t.COLLISION_COURSE],[e.CRYOGONAL]:[t.FREEZING_GLARE,t.AURORA_VEIL,t.NASTY_PLOT,t.ORIGIN_PULSE],[e.SHELMET]:[t.POWER_GEM,t.NASTY_PLOT,t.EARTH_POWER,t.STEAM_ERUPTION],[e.STUNFISK]:[t.THUNDERCLAP,t.SANDSEAR_STORM,t.STRENGTH_SAP,t.THUNDER_CAGE],[e.MIENFOO]:[t.GUNK_SHOT,t.SUPERCELL_SLAM,t.MOUNTAIN_GALE,t.WICKED_BLOW],[e.DRUDDIGON]:[t.FIRE_LASH,t.MORNING_SUN,t.DRAGON_DARTS,t.CLANGOROUS_SOUL],[e.GOLETT]:[t.SHIFT_GEAR,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.RAGE_FIST],[e.PAWNIARD]:[t.SUCKER_PUNCH,t.CEASELESS_EDGE,t.BITTER_BLADE,t.LAST_RESPECTS],[e.BOUFFALANT]:[t.SLACK_OFF,t.HIGH_JUMP_KICK,t.HEAD_SMASH,t.FLARE_BLITZ],[e.RUFFLET]:[t.FLOATY_FALL,t.AURA_SPHERE,t.NO_RETREAT,t.BOLT_BEAK],[e.VULLABY]:[t.FOUL_PLAY,t.BODY_PRESS,t.ROOST,t.RUINATION],[e.HEATMOR]:[t.EARTH_POWER,t.OVERHEAT,t.THUNDERBOLT,t.V_CREATE],[e.DURANT]:[t.HIGH_HORSEPOWER,t.FIRST_IMPRESSION,t.SWORDS_DANCE,t.BEHEMOTH_BASH],[e.DEINO]:[t.FIERY_WRATH,t.ESPER_WING,t.SLUDGE_BOMB,t.FICKLE_BEAM],[e.LARVESTA]:[t.THUNDERBOLT,t.DAZZLING_GLEAM,t.EARTH_POWER,t.HYDRO_STEAM],[e.COBALION]:[t.BEHEMOTH_BLADE,t.MIGHTY_CLEAVE,t.CEASELESS_EDGE,t.VICTORY_DANCE],[e.TERRAKION]:[t.MIGHTY_CLEAVE,t.HEADLONG_RUSH,t.KNOCK_OFF,t.VICTORY_DANCE],[e.VIRIZION]:[t.SAPPY_SEED,t.PSYBLADE,t.STONE_AXE,t.VICTORY_DANCE],[e.TORNADUS]:[t.SANDSEAR_STORM,t.PARTING_SHOT,t.SPLISHY_SPLASH,t.OBLIVION_WING],[e.THUNDURUS]:[t.SANDSEAR_STORM,t.HURRICANE,t.FROST_BREATH,t.ELECTRO_SHOT],[e.RESHIRAM]:[t.ENERGY_BALL,t.TAKE_HEART,t.FICKLE_BEAM,t.ERUPTION],[e.ZEKROM]:[t.TRIPLE_AXEL,t.THUNDEROUS_KICK,t.DRAGON_HAMMER,t.DRAGON_ENERGY],[e.LANDORUS]:[t.STONE_AXE,t.FLOATY_FALL,t.ROOST,t.BLEAKWIND_STORM],[e.KYUREM]:[t.DRAGON_DARTS,t.GLACIAL_LANCE,t.NO_RETREAT,t.DRAGON_ENERGY],[e.KELDEO]:[t.BOUNCY_BUBBLE,t.THUNDERBOLT,t.ICE_BEAM,t.STEAM_ERUPTION],[e.MELOETTA]:[t.BODY_SLAM,t.PSYCHIC_NOISE,t.TRIPLE_ARROWS,t.TORCH_SONG],[e.GENESECT]:[t.EXTREME_SPEED,t.SHIFT_GEAR,t.BEHEMOTH_BASH,t.TACHYON_CUTTER],[e.CHESPIN]:[t.COMBAT_TORQUE,t.SYNTHESIS,t.CEASELESS_EDGE,t.SAPPY_SEED],[e.FENNEKIN]:[t.TWIN_BEAM,t.FIERY_DANCE,t.THUNDERBOLT,t.SPARKLY_SWIRL],[e.FROAKIE]:[t.MOONBLAST,t.SHELL_SIDE_ARM,t.FIERY_WRATH,t.STEAM_ERUPTION],[e.BUNNELBY]:[t.DRAIN_PUNCH,t.TIDY_UP,t.LANDS_WRATH,t.EXTREME_SPEED],[e.FLETCHLING]:[t.DRILL_RUN,t.BURNING_BULWARK,t.HEAD_SMASH,t.VOLT_TACKLE],[e.SCATTERBUG]:[t.FOCUS_BLAST,t.AFTER_YOU,t.DECORATE,t.BLIZZARD],[e.LITLEO]:[t.EARTH_POWER,t.NASTY_PLOT,t.BURNING_BULWARK,t.BLUE_FLARE],[e.FLABEBE]:[t.GLITZY_GLOW,t.MYSTICAL_FIRE,t.TAKE_HEART,t.SEED_FLARE],[e.SKIDDO]:[t.HIGH_HORSEPOWER,t.GRASSY_GLIDE,t.STONE_AXE,t.SAPPY_SEED],[e.PANCHAM]:[t.DRAIN_PUNCH,t.SUCKER_PUNCH,t.METEOR_MASH,t.WICKED_BLOW],[e.FURFROU]:[t.TIDY_UP,t.SLACK_OFF,t.COMBAT_TORQUE,t.MULTI_ATTACK],[e.ESPURR]:[t.LUSTER_PURGE,t.MOONBLAST,t.AURA_SPHERE,t.DARK_VOID],[e.HONEDGE]:[t.TACHYON_CUTTER,t.SHADOW_BONE,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.SPRITZEE]:[t.SPEED_SWAP,t.REVIVAL_BLESSING,t.ROOST,t.TORCH_SONG],[e.SWIRLIX]:[t.BELLY_DRUM,t.HEADLONG_RUSH,t.MAGICAL_TORQUE,t.REVIVAL_BLESSING],[e.INKAY]:[t.POWER_TRIP,t.SPIN_OUT,t.RECOVER,t.PSYCHO_BOOST],[e.BINACLE]:[t.TRIPLE_AXEL,t.CRABHAMMER,t.DIRE_CLAW,t.MIGHTY_CLEAVE],[e.SKRELP]:[t.STRENGTH_SAP,t.TRICK_ROOM,t.CALM_MIND,t.CORE_ENFORCER],[e.CLAUNCHER]:[t.SHELL_SMASH,t.ARMOR_CANNON,t.ENERGY_BALL,t.ORIGIN_PULSE],[e.HELIOPTILE]:[t.WEATHER_BALL,t.HYDRO_STEAM,t.EARTH_POWER,t.BOOMBURST],[e.TYRUNT]:[t.DRAGON_HAMMER,t.FLARE_BLITZ,t.VOLT_TACKLE,t.SHIFT_GEAR],[e.AMAURA]:[t.RECOVER,t.WRING_OUT,t.POWER_GEM,t.GEOMANCY],[e.HAWLUCHA]:[t.TRIPLE_AXEL,t.HIGH_HORSEPOWER,t.FLOATY_FALL,t.WICKED_BLOW],[e.DEDENNE]:[t.BOOMBURST,t.FAKE_OUT,t.NASTY_PLOT,t.REVIVAL_BLESSING],[e.CARBINK]:[t.BODY_PRESS,t.SHORE_UP,t.SPARKLY_SWIRL,t.DIAMOND_STORM],[e.GOOMY]:[t.DRAGON_HAMMER,t.RECOVER,t.CALM_MIND,t.MAKE_IT_RAIN],[e.KLEFKI]:[t.HEAL_BELL,t.ENCORE,t.INSTRUCT,t.TOPSY_TURVY],[e.PHANTUMP]:[t.RAGE_FIST,t.SLEEP_POWDER,t.BULK_UP,t.SAPPY_SEED],[e.PUMPKABOO]:[t.SPIRIT_SHACKLE,t.FIRE_LASH,t.DIRE_CLAW,t.SAPPY_SEED],[e.BERGMITE]:[t.STONE_AXE,t.METAL_BURST,t.BODY_PRESS,t.GLACIAL_LANCE],[e.NOIBAT]:[t.AEROBLAST,t.OVERDRIVE,t.NASTY_PLOT,t.CLANGING_SCALES],[e.XERNEAS]:[t.EARTH_POWER,t.SPRINGTIDE_STORM,t.STORED_POWER,t.STRENGTH_SAP],[e.YVELTAL]:[t.SLUDGE_WAVE,t.POWER_TRIP,t.FIERY_WRATH,t.CLANGOROUS_SOUL],[e.ZYGARDE]:[t.DRAGON_DARTS,t.V_CREATE,t.CLANGOROUS_SOUL,t.HEAL_ORDER],[e.DIANCIE]:[t.MAGICAL_TORQUE,t.FIERY_DANCE,t.SHORE_UP,t.GEOMANCY],[e.HOOPA]:[t.PHOTON_GEYSER,t.SECRET_SWORD,t.FIERY_WRATH,t.SHELL_SMASH],[e.VOLCANION]:[t.HYDRO_STEAM,t.CALM_MIND,t.SEARING_SHOT,t.THUNDERCLAP],[e.ETERNAL_FLOETTE]:[t.MIND_BLOWN,t.CHLOROBLAST,t.LUSTER_PURGE,t.QUIVER_DANCE],[e.ROWLET]:[t.THOUSAND_ARROWS,t.SHADOW_BONE,t.FIRST_IMPRESSION,t.VICTORY_DANCE],[e.LITTEN]:[t.SUCKER_PUNCH,t.PARTING_SHOT,t.SLACK_OFF,t.SACRED_FIRE],[e.POPPLIO]:[t.PSYCHIC_NOISE,t.MOONLIGHT,t.OVERDRIVE,t.TORCH_SONG],[e.PIKIPEK]:[t.DUAL_WINGBEAT,t.BONE_RUSH,t.BURNING_BULWARK,t.POPULATION_BOMB],[e.YUNGOOS]:[t.EXTREME_SPEED,t.KNOCK_OFF,t.TIDY_UP,t.MULTI_ATTACK],[e.GRUBBIN]:[t.ICE_BEAM,t.EARTH_POWER,t.CALM_MIND,t.THUNDERCLAP],[e.CRABRAWLER]:[t.JET_PUNCH,t.SHORE_UP,t.MACH_PUNCH,t.SURGING_STRIKES],[e.ORICORIO]:[t.QUIVER_DANCE,t.FIERY_DANCE,t.THUNDERCLAP,t.OBLIVION_WING],[e.CUTIEFLY]:[t.STICKY_WEB,t.SLEEP_POWDER,t.HEAT_WAVE,t.SPARKLY_SWIRL],[e.ROCKRUFF]:[t.HIGH_HORSEPOWER,t.TIDY_UP,t.ICE_SPINNER,t.MIGHTY_CLEAVE],[e.WISHIWASHI]:[t.HEAL_ORDER,t.FREEZE_DRY,t.WATER_SHURIKEN,t.TAIL_GLOW],[e.MAREANIE]:[t.CEASELESS_EDGE,t.SIZZLY_SLIDE,t.BODY_PRESS,t.LEECH_SEED],[e.MUDBRAY]:[t.BODY_PRESS,t.YAWN,t.SHORE_UP,t.THOUSAND_WAVES],[e.DEWPIDER]:[t.AQUA_STEP,t.SILK_TRAP,t.SWORDS_DANCE,t.JET_PUNCH],[e.FOMANTIS]:[t.SUPERPOWER,t.HEADLONG_RUSH,t.ICE_HAMMER,t.BITTER_BLADE],[e.MORELULL]:[t.CALM_MIND,t.SAPPY_SEED,t.DRAINING_KISS,t.MATCHA_GOTCHA],[e.SALANDIT]:[t.SCALD,t.MALIGNANT_CHAIN,t.CORE_ENFORCER,t.ERUPTION],[e.STUFFUL]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.TRIPLE_AXEL,t.RAGE_FIST],[e.BOUNSWEET]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.THUNDEROUS_KICK,t.SAPPY_SEED],[e.COMFEY]:[t.REVIVAL_BLESSING,t.TAKE_HEART,t.STRENGTH_SAP,t.MATCHA_GOTCHA],[e.ORANGURU]:[t.JUNGLE_HEALING,t.YAWN,t.FOLLOW_ME,t.LUMINA_CRASH],[e.PASSIMIAN]:[t.PYRO_BALL,t.SUCKER_PUNCH,t.ZING_ZAP,t.VICTORY_DANCE],[e.WIMPOD]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.JET_PUNCH,t.SURGING_STRIKES],[e.SANDYGAST]:[t.BITTER_MALICE,t.SPLISHY_SPLASH,t.TAKE_HEART,t.SALT_CURE],[e.PYUKUMUKU]:[t.COMEUPPANCE,t.BANEFUL_BUNKER,t.TOXIC_SPIKES,t.SALT_CURE],[e.TYPE_NULL]:[t.DIRE_CLAW,t.RECOVER,t.COMBAT_TORQUE,t.NO_RETREAT],[e.MINIOR]:[t.EARTH_POWER,t.FLOATY_FALL,t.TRI_ATTACK,t.DIAMOND_STORM],[e.KOMALA]:[t.SLACK_OFF,t.EXTREME_SPEED,t.KNOCK_OFF,t.COLLISION_COURSE],[e.TURTONATOR]:[t.BURNING_BULWARK,t.MORNING_SUN,t.BODY_PRESS,t.CORE_ENFORCER],[e.TOGEDEMARU]:[t.FAKE_OUT,t.METAL_BURST,t.METEOR_MASH,t.AURA_WHEEL],[e.MIMIKYU]:[t.SPIRIT_BREAK,t.TIDY_UP,t.FIRE_LASH,t.SPECTRAL_THIEF],[e.BRUXISH]:[t.PLAY_ROUGH,t.FIRE_FANG,t.DRAGON_DANCE,t.SURGING_STRIKES],[e.DRAMPA]:[t.SLACK_OFF,t.TRICK_ROOM,t.CORE_ENFORCER,t.BOOMBURST],[e.DHELMISE]:[t.SHADOW_BONE,t.IVY_CUDGEL,t.TRIPLE_DIVE,t.STRENGTH_SAP],[e.JANGMO_O]:[t.BODY_PRESS,t.SHELL_SIDE_ARM,t.SECRET_SWORD,t.GLAIVE_RUSH],[e.TAPU_KOKO]:[t.MAGICAL_TORQUE,t.TRIPLE_AXEL,t.SWORDS_DANCE,t.BOLT_STRIKE],[e.TAPU_LELE]:[t.MOONLIGHT,t.NASTY_PLOT,t.HEAT_WAVE,t.EXPANDING_FORCE],[e.TAPU_BULU]:[t.SAPPY_SEED,t.LANDS_WRATH,t.MAGICAL_TORQUE,t.VICTORY_DANCE],[e.TAPU_FINI]:[t.SPRINGTIDE_STORM,t.EARTH_POWER,t.RECOVER,t.QUIVER_DANCE],[e.COSMOG]:[t.PHOTON_GEYSER,t.PRECIPICE_BLADES,t.SACRED_FIRE,t.ASTRAL_BARRAGE],[e.NIHILEGO]:[t.STRENGTH_SAP,t.MALIGNANT_CHAIN,t.EARTH_POWER,t.QUIVER_DANCE],[e.BUZZWOLE]:[t.FIRST_IMPRESSION,t.COMBAT_TORQUE,t.ROCK_BLAST,t.DOUBLE_IRON_BASH],[e.PHEROMOSA]:[t.SECRET_SWORD,t.MAKE_IT_RAIN,t.ATTACK_ORDER,t.DIAMOND_STORM],[e.XURKITREE]:[t.FLAMETHROWER,t.GIGA_DRAIN,t.TAIL_GLOW,t.THUNDERCLAP],[e.CELESTEELA]:[t.RECOVER,t.BUZZY_BUZZ,t.EARTH_POWER,t.OBLIVION_WING],[e.KARTANA]:[t.MIGHTY_CLEAVE,t.DUAL_CHOP,t.BITTER_BLADE,t.BEHEMOTH_BLADE],[e.GUZZLORD]:[t.SUCKER_PUNCH,t.COMEUPPANCE,t.SLACK_OFF,t.SHED_TAIL],[e.NECROZMA]:[t.DYNAMAX_CANNON,t.SACRED_FIRE,t.ASTRAL_BARRAGE,t.CLANGOROUS_SOUL],[e.MAGEARNA]:[t.STRENGTH_SAP,t.EARTH_POWER,t.MOONBLAST,t.MAKE_IT_RAIN],[e.MARSHADOW]:[t.POWER_UP_PUNCH,t.BONEMERANG,t.METEOR_MASH,t.TRIPLE_AXEL],[e.POIPOLE]:[t.MALIGNANT_CHAIN,t.ICE_BEAM,t.ARMOR_CANNON,t.CLANGING_SCALES],[e.STAKATAKA]:[t.HEAVY_SLAM,t.SHORE_UP,t.CURSE,t.SALT_CURE],[e.BLACEPHALON]:[t.STEEL_BEAM,t.MOONBLAST,t.CHLOROBLAST,t.MOONGEIST_BEAM],[e.ZERAORA]:[t.SWORDS_DANCE,t.U_TURN,t.COLLISION_COURSE,t.TRIPLE_AXEL],[e.MELTAN]:[t.BULLET_PUNCH,t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS],[e.ALOLA_RATTATA]:[t.FALSE_SURRENDER,t.PSYCHIC_FANGS,t.COIL,t.EXTREME_SPEED],[e.ALOLA_SANDSHREW]:[t.SPIKY_SHIELD,t.LIQUIDATION,t.SHIFT_GEAR,t.GLACIAL_LANCE],[e.ALOLA_VULPIX]:[t.MOONBLAST,t.GLARE,t.MYSTICAL_FIRE,t.REVIVAL_BLESSING],[e.ALOLA_DIGLETT]:[t.THOUSAND_WAVES,t.SWORDS_DANCE,t.TRIPLE_DIVE,t.MOUNTAIN_GALE],[e.ALOLA_MEOWTH]:[t.BADDY_BAD,t.BUZZY_BUZZ,t.PARTING_SHOT,t.MAKE_IT_RAIN],[e.ALOLA_GEODUDE]:[t.THOUSAND_WAVES,t.BULK_UP,t.STONE_AXE,t.EXTREME_SPEED],[e.ALOLA_GRIMER]:[t.SUCKER_PUNCH,t.BARB_BARRAGE,t.RECOVER,t.SURGING_STRIKES],[e.GROOKEY]:[t.HIGH_HORSEPOWER,t.CLANGOROUS_SOUL,t.GRASSY_GLIDE,t.SAPPY_SEED],[e.SCORBUNNY]:[t.EXTREME_SPEED,t.HIGH_JUMP_KICK,t.TRIPLE_AXEL,t.BOLT_STRIKE],[e.SOBBLE]:[t.AEROBLAST,t.FROST_BREATH,t.ENERGY_BALL,t.NASTY_PLOT],[e.SKWOVET]:[t.SUCKER_PUNCH,t.SLACK_OFF,t.COIL,t.POPULATION_BOMB],[e.ROOKIDEE]:[t.ROOST,t.BODY_PRESS,t.KINGS_SHIELD,t.BEHEMOTH_BASH],[e.BLIPBUG]:[t.HEAL_ORDER,t.LUSTER_PURGE,t.SLEEP_POWDER,t.TAIL_GLOW],[e.NICKIT]:[t.BADDY_BAD,t.FLAMETHROWER,t.SPARKLY_SWIRL,t.MAKE_IT_RAIN],[e.GOSSIFLEUR]:[t.PARTING_SHOT,t.STRENGTH_SAP,t.SAPPY_SEED,t.SEED_FLARE],[e.WOOLOO]:[t.NUZZLE,t.MILK_DRINK,t.BODY_PRESS,t.MULTI_ATTACK],[e.CHEWTLE]:[t.ICE_FANG,t.PSYCHIC_FANGS,t.SHELL_SMASH,t.MIGHTY_CLEAVE],[e.YAMPER]:[t.ICE_FANG,t.SWORDS_DANCE,t.THUNDER_FANG,t.BOLT_STRIKE],[e.ROLYCOLY]:[t.BITTER_BLADE,t.BODY_PRESS,t.BULK_UP,t.DIAMOND_STORM],[e.APPLIN]:[t.CORE_ENFORCER,t.COMBAT_TORQUE,t.SAPPY_SEED,t.MATCHA_GOTCHA],[e.SILICOBRA]:[t.SHORE_UP,t.SHED_TAIL,t.MOUNTAIN_GALE,t.THOUSAND_ARROWS],[e.CRAMORANT]:[t.APPLE_ACID,t.SURF,t.BOLT_BEAK,t.OBLIVION_WING],[e.ARROKUDA]:[t.SUPERCELL_SLAM,t.TRIPLE_DIVE,t.ICE_SPINNER,t.SWORDS_DANCE],[e.TOXEL]:[t.NASTY_PLOT,t.BUG_BUZZ,t.SPARKLING_ARIA,t.TORCH_SONG],[e.SIZZLIPEDE]:[t.BURNING_BULWARK,t.ZING_ZAP,t.FIRST_IMPRESSION,t.BITTER_BLADE],[e.CLOBBOPUS]:[t.STORM_THROW,t.JET_PUNCH,t.MACH_PUNCH,t.SURGING_STRIKES],[e.SINISTEA]:[t.SPLISHY_SPLASH,t.MATCHA_GOTCHA,t.DRAINING_KISS,t.MOONGEIST_BEAM],[e.HATENNA]:[t.RECOVER,t.MOONBLAST,t.BUZZY_BUZZ,t.TORCH_SONG],[e.IMPIDIMP]:[t.SLACK_OFF,t.PARTING_SHOT,t.OCTOLOCK,t.WICKED_BLOW],[e.MILCERY]:[t.MOONBLAST,t.CHILLY_RECEPTION,t.EARTH_POWER,t.GEOMANCY],[e.FALINKS]:[t.BATON_PASS,t.POWER_TRIP,t.COMBAT_TORQUE,t.HEAL_ORDER],[e.PINCURCHIN]:[t.TRICK_ROOM,t.VOLT_SWITCH,t.STRENGTH_SAP,t.THUNDERCLAP],[e.SNOM]:[t.FROST_BREATH,t.HEAL_ORDER,t.EARTH_POWER,t.SPORE],[e.STONJOURNER]:[t.BODY_PRESS,t.HELPING_HAND,t.ACCELEROCK,t.DIAMOND_STORM],[e.EISCUE]:[t.TRIPLE_AXEL,t.AQUA_STEP,t.AXE_KICK,t.SHELL_SMASH],[e.INDEEDEE]:[t.MATCHA_GOTCHA,t.EXPANDING_FORCE,t.MOONBLAST,t.REVIVAL_BLESSING],[e.MORPEKO]:[t.TRIPLE_AXEL,t.OBSTRUCT,t.SWORDS_DANCE,t.COLLISION_COURSE],[e.CUFANT]:[t.LIQUIDATION,t.CURSE,t.COMBAT_TORQUE,t.GIGATON_HAMMER],[e.DRACOZOLT]:[t.TRIPLE_AXEL,t.GUNK_SHOT,t.FIRE_LASH,t.DRAGON_DANCE],[e.ARCTOZOLT]:[t.MOUNTAIN_GALE,t.AQUA_STEP,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DRACOVISH]:[t.TRIPLE_AXEL,t.DRAGON_HAMMER,t.THUNDER_FANG,t.DRAGON_DANCE],[e.ARCTOVISH]:[t.ICE_FANG,t.THUNDER_FANG,t.HIGH_HORSEPOWER,t.SHIFT_GEAR],[e.DURALUDON]:[t.CORE_ENFORCER,t.BODY_PRESS,t.RECOVER,t.TACHYON_CUTTER],[e.DREEPY]:[t.SHADOW_BONE,t.POWER_UP_PUNCH,t.FIRE_LASH,t.DIRE_CLAW],[e.ZACIAN]:[t.MAGICAL_TORQUE,t.MIGHTY_CLEAVE,t.BITTER_BLADE,t.PRECIPICE_BLADES],[e.ZAMAZENTA]:[t.BULK_UP,t.BODY_PRESS,t.SLACK_OFF,t.DIAMOND_STORM],[e.ETERNATUS]:[t.BODY_PRESS,t.NASTY_PLOT,t.MALIGNANT_CHAIN,t.DRAGON_ENERGY],[e.KUBFU]:[t.METEOR_MASH,t.DRAIN_PUNCH,t.JET_PUNCH,t.DRAGON_DANCE],[e.ZARUDE]:[t.SAPPY_SEED,t.MIGHTY_CLEAVE,t.WICKED_BLOW,t.VICTORY_DANCE],[e.REGIELEKI]:[t.NASTY_PLOT,t.ICE_BEAM,t.EARTH_POWER,t.ELECTRO_DRIFT],[e.REGIDRAGO]:[t.SHELL_SIDE_ARM,t.FLAMETHROWER,t.TAKE_HEART,t.DRAGON_DARTS],[e.GLASTRIER]:[t.SPEED_SWAP,t.SLACK_OFF,t.HIGH_HORSEPOWER,t.GLACIAL_LANCE],[e.SPECTRIER]:[t.EARTH_POWER,t.MOONLIGHT,t.AURA_SPHERE,t.ASTRAL_BARRAGE],[e.CALYREX]:[t.SAPPY_SEED,t.RECOVER,t.SECRET_SWORD,t.PHOTON_GEYSER],[e.ENAMORUS]:[t.AEROBLAST,t.THOUSAND_ARROWS,t.STORED_POWER,t.FLEUR_CANNON],[e.GALAR_MEOWTH]:[t.LIQUIDATION,t.HORN_LEECH,t.BULLET_PUNCH,t.BEHEMOTH_BASH],[e.GALAR_PONYTA]:[t.MAGICAL_TORQUE,t.EXTREME_SPEED,t.FLARE_BLITZ,t.PHOTON_GEYSER],[e.GALAR_SLOWPOKE]:[t.SHED_TAIL,t.BADDY_BAD,t.MOONBLAST,t.PHOTON_GEYSER],[e.GALAR_FARFETCHD]:[t.ROOST,t.SACRED_SWORD,t.KINGS_SHIELD,t.BEHEMOTH_BLADE],[e.GALAR_ARTICUNO]:[t.SECRET_SWORD,t.NIGHT_DAZE,t.ICE_BEAM,t.OBLIVION_WING],[e.GALAR_ZAPDOS]:[t.POISON_JAB,t.FLOATY_FALL,t.ROOST,t.BOLT_BEAK],[e.GALAR_MOLTRES]:[t.ROOST,t.SLUDGE_BOMB,t.FLAMETHROWER,t.OBLIVION_WING],[e.GALAR_CORSOLA]:[t.SHELL_SMASH,t.AURA_SPHERE,t.INFERNAL_PARADE,t.ASTRAL_BARRAGE],[e.GALAR_ZIGZAGOON]:[t.CEASELESS_EDGE,t.FACADE,t.PARTING_SHOT,t.EXTREME_SPEED],[e.GALAR_DARUMAKA]:[t.ICE_SPINNER,t.ZING_ZAP,t.DRAIN_PUNCH,t.PYRO_BALL],[e.GALAR_YAMASK]:[t.STRENGTH_SAP,t.DIRE_CLAW,t.THOUSAND_WAVES,t.SPECTRAL_THIEF],[e.GALAR_STUNFISK]:[t.SPIKY_SHIELD,t.THOUSAND_ARROWS,t.STRENGTH_SAP,t.DOUBLE_IRON_BASH],[e.HISUI_GROWLITHE]:[t.WAVE_CRASH,t.HEAD_SMASH,t.VOLT_TACKLE,t.DRAGON_DANCE],[e.HISUI_VOLTORB]:[t.FROST_BREATH,t.NASTY_PLOT,t.APPLE_ACID,t.ELECTRO_DRIFT],[e.HISUI_QWILFISH]:[t.CEASELESS_EDGE,t.BANEFUL_BUNKER,t.RECOVER,t.FISHIOUS_REND],[e.HISUI_SNEASEL]:[t.DRAIN_PUNCH,t.KNOCK_OFF,t.PSYCHIC_FANGS,t.TRIPLE_AXEL],[e.HISUI_ZORUA]:[t.MOONBLAST,t.SECRET_SWORD,t.PARTING_SHOT,t.BLOOD_MOON],[e.SPRIGATITO]:[t.FIRE_LASH,t.TRIPLE_AXEL,t.SUCKER_PUNCH,t.WICKED_BLOW],[e.FUECOCO]:[t.ALLURING_VOICE,t.SLACK_OFF,t.OVERDRIVE,t.MOONGEIST_BEAM],[e.QUAXLY]:[t.DRAGON_DANCE,t.TRIPLE_AXEL,t.POWER_TRIP,t.THUNDEROUS_KICK],[e.LECHONK]:[t.MILK_DRINK,t.PSYSHIELD_BASH,t.BLAZING_TORQUE,t.FILLET_AWAY],[e.TAROUNTULA]:[t.STONE_AXE,t.LEECH_LIFE,t.THIEF,t.SPORE],[e.NYMBLE]:[t.KNOCK_OFF,t.FELL_STINGER,t.ATTACK_ORDER,t.WICKED_BLOW],[e.PAWMI]:[t.DRAIN_PUNCH,t.METEOR_MASH,t.JET_PUNCH,t.PLASMA_FISTS],[e.TANDEMAUS]:[t.BATON_PASS,t.COVET,t.SIZZLY_SLIDE,t.REVIVAL_BLESSING],[e.FIDOUGH]:[t.SOFT_BOILED,t.HIGH_HORSEPOWER,t.SIZZLY_SLIDE,t.TIDY_UP],[e.SMOLIV]:[t.STRENGTH_SAP,t.EARTH_POWER,t.CALM_MIND,t.BOOMBURST],[e.SQUAWKABILLY]:[t.PARTING_SHOT,t.EARTHQUAKE,t.FLARE_BLITZ,t.EXTREME_SPEED],[e.NACLI]:[t.BODY_PRESS,t.TOXIC,t.CURSE,t.DIAMOND_STORM],[e.CHARCADET]:[t.SACRED_SWORD,t.PHOTON_GEYSER,t.MOONBLAST,t.SPECTRAL_THIEF],[e.TADBULB]:[t.PARABOLIC_CHARGE,t.SCALD,t.EARTH_POWER,t.ELECTRO_SHOT],[e.WATTREL]:[t.NASTY_PLOT,t.SPLISHY_SPLASH,t.SANDSEAR_STORM,t.WILDBOLT_STORM],[e.MASCHIFF]:[t.PARTING_SHOT,t.COMBAT_TORQUE,t.PSYCHIC_FANGS,t.NO_RETREAT],[e.SHROODLE]:[t.GASTRO_ACID,t.PARTING_SHOT,t.TOXIC,t.SKETCH],[e.BRAMBLIN]:[t.TAILWIND,t.STRENGTH_SAP,t.FLOWER_TRICK,t.LAST_RESPECTS],[e.TOEDSCOOL]:[t.STRENGTH_SAP,t.TOPSY_TURVY,t.SAPPY_SEED,t.TAIL_GLOW],[e.KLAWF]:[t.CRABHAMMER,t.SHORE_UP,t.MIGHTY_CLEAVE,t.SHELL_SMASH],[e.CAPSAKID]:[t.STRENGTH_SAP,t.APPLE_ACID,t.FROST_BREATH,t.TORCH_SONG],[e.RELLOR]:[t.HEAL_BLOCK,t.RECOVER,t.MAGIC_POWDER,t.LUMINA_CRASH],[e.FLITTLE]:[t.COSMIC_POWER,t.AURA_SPHERE,t.ROOST,t.FIERY_DANCE],[e.TINKATINK]:[t.MAGICAL_TORQUE,t.PYRO_BALL,t.IVY_CUDGEL,t.SHIFT_GEAR],[e.WIGLETT]:[t.SHELL_SMASH,t.ICICLE_CRASH,t.SEED_BOMB,t.SURGING_STRIKES],[e.BOMBIRDIER]:[t.FLOATY_FALL,t.SWORDS_DANCE,t.SUCKER_PUNCH,t.MIGHTY_CLEAVE],[e.FINIZEN]:[t.TRIPLE_AXEL,t.DRAIN_PUNCH,t.HEADLONG_RUSH,t.SURGING_STRIKES],[e.VAROOM]:[t.COMBAT_TORQUE,t.U_TURN,t.BLAZING_TORQUE,t.NOXIOUS_TORQUE],[e.CYCLIZAR]:[t.PARTING_SHOT,t.FIRE_LASH,t.MAGICAL_TORQUE,t.GLAIVE_RUSH],[e.ORTHWORM]:[t.SIZZLY_SLIDE,t.COIL,t.BODY_PRESS,t.SHORE_UP],[e.GLIMMET]:[t.CALM_MIND,t.GIGA_DRAIN,t.FIERY_DANCE,t.MALIGNANT_CHAIN],[e.GREAVARD]:[t.SHADOW_BONE,t.SIZZLY_SLIDE,t.SHORE_UP,t.COLLISION_COURSE],[e.FLAMIGO]:[t.THUNDEROUS_KICK,t.TRIPLE_AXEL,t.FLOATY_FALL,t.VICTORY_DANCE],[e.CETODDLE]:[t.ZING_ZAP,t.HIGH_HORSEPOWER,t.SLACK_OFF,t.DRAGON_DANCE],[e.VELUZA]:[t.PSYBLADE,t.LEAF_BLADE,t.CEASELESS_EDGE,t.BITTER_BLADE],[e.DONDOZO]:[t.SOFT_BOILED,t.SIZZLY_SLIDE,t.BREAKING_SWIPE,t.SALT_CURE],[e.TATSUGIRI]:[t.SLUDGE_BOMB,t.FILLET_AWAY,t.CORE_ENFORCER,t.STEAM_ERUPTION],[e.GREAT_TUSK]:[t.STONE_AXE,t.MORNING_SUN,t.COLLISION_COURSE,t.SHIFT_GEAR],[e.SCREAM_TAIL]:[t.TORCH_SONG,t.GLITZY_GLOW,t.MOONLIGHT,t.SPARKLY_SWIRL],[e.BRUTE_BONNET]:[t.SAPPY_SEED,t.STRENGTH_SAP,t.EARTHQUAKE,t.WICKED_BLOW],[e.FLUTTER_MANE]:[t.MOONLIGHT,t.NASTY_PLOT,t.EARTH_POWER,t.MOONGEIST_BEAM],[e.SLITHER_WING]:[t.MIGHTY_CLEAVE,t.THUNDEROUS_KICK,t.FIRE_LASH,t.VICTORY_DANCE],[e.SANDY_SHOCKS]:[t.MORNING_SUN,t.ICE_BEAM,t.NASTY_PLOT,t.THUNDERCLAP],[e.IRON_TREADS]:[t.FUSION_BOLT,t.SHIFT_GEAR,t.SHORE_UP,t.SUNSTEEL_STRIKE],[e.IRON_BUNDLE]:[t.EARTH_POWER,t.SPLISHY_SPLASH,t.VOLT_SWITCH,t.NASTY_PLOT],[e.IRON_HANDS]:[t.DRAIN_PUNCH,t.BULK_UP,t.PLASMA_FISTS,t.ICE_HAMMER],[e.IRON_JUGULIS]:[t.FIERY_WRATH,t.ROOST,t.NASTY_PLOT,t.OBLIVION_WING],[e.IRON_MOTH]:[t.EARTH_POWER,t.SEARING_SHOT,t.MALIGNANT_CHAIN,t.QUIVER_DANCE],[e.IRON_THORNS]:[t.DIAMOND_STORM,t.SHORE_UP,t.SHIFT_GEAR,t.PLASMA_FISTS],[e.FRIGIBAX]:[t.BEHEMOTH_BLADE,t.DRAGON_DANCE,t.MOUNTAIN_GALE,t.PRECIPICE_BLADES],[e.GIMMIGHOUL]:[t.HAPPY_HOUR,t.AURA_SPHERE,t.SURF,t.ASTRAL_BARRAGE],[e.WO_CHIEN]:[t.SPORE,t.FIERY_WRATH,t.SAPPY_SEED,t.STRENGTH_SAP],[e.CHIEN_PAO]:[t.KNOCK_OFF,t.PARTING_SHOT,t.TRIPLE_AXEL,t.BITTER_BLADE],[e.TING_LU]:[t.SHORE_UP,t.CEASELESS_EDGE,t.SAPPY_SEED,t.PRECIPICE_BLADES],[e.CHI_YU]:[t.FIERY_WRATH,t.HYDRO_STEAM,t.MORNING_SUN,t.BLUE_FLARE],[e.ROARING_MOON]:[t.FIRE_LASH,t.DRAGON_HAMMER,t.METEOR_MASH,t.DRAGON_ASCENT],[e.IRON_VALIANT]:[t.PLASMA_FISTS,t.NO_RETREAT,t.SECRET_SWORD,t.MAGICAL_TORQUE],[e.KORAIDON]:[t.SUNSTEEL_STRIKE,t.SOLAR_BLADE,t.DRAGON_DARTS,t.BITTER_BLADE],[e.MIRAIDON]:[t.FROST_BREATH,t.WILDBOLT_STORM,t.SPACIAL_REND,t.RISING_VOLTAGE],[e.WALKING_WAKE]:[t.BOUNCY_BUBBLE,t.FUSION_FLARE,t.SLUDGE_WAVE,t.CORE_ENFORCER],[e.IRON_LEAVES]:[t.BITTER_BLADE,t.U_TURN,t.MIGHTY_CLEAVE,t.VICTORY_DANCE],[e.POLTCHAGEIST]:[t.PARABOLIC_CHARGE,t.BOUNCY_BUBBLE,t.LEECH_SEED,t.SPARKLY_SWIRL],[e.OKIDOGI]:[t.COMBAT_TORQUE,t.TIDY_UP,t.DIRE_CLAW,t.WICKED_BLOW],[e.MUNKIDORI]:[t.TWIN_BEAM,t.HEAT_WAVE,t.EARTH_POWER,t.MALIGNANT_CHAIN],[e.FEZANDIPITI]:[t.BARB_BARRAGE,t.BONEMERANG,t.TRIPLE_AXEL,t.VICTORY_DANCE],[e.OGERPON]:[t.SLEEP_POWDER,t.BONEMERANG,t.TRIPLE_AXEL,t.FLOWER_TRICK],[e.GOUGING_FIRE]:[t.EXTREME_SPEED,t.BULK_UP,t.SACRED_FIRE,t.GLAIVE_RUSH],[e.RAGING_BOLT]:[t.NASTY_PLOT,t.FLAMETHROWER,t.MORNING_SUN,t.ELECTRO_DRIFT],[e.IRON_BOULDER]:[t.PSYBLADE,t.KOWTOW_CLEAVE,t.STONE_AXE,t.BITTER_BLADE],[e.IRON_CROWN]:[t.NASTY_PLOT,t.SECRET_SWORD,t.PSYSTRIKE,t.ELECTRO_DRIFT],[e.TERAPAGOS]:[t.MOONBLAST,t.NASTY_PLOT,t.ASTRAL_BARRAGE,t.RECOVER],[e.PECHARUNT]:[t.TAKE_HEART,t.BODY_PRESS,t.SAPPY_SEED,t.ASTRAL_BARRAGE],[e.PALDEA_TAUROS]:[t.NO_RETREAT,t.BLAZING_TORQUE,t.AQUA_STEP,t.THUNDEROUS_KICK],[e.PALDEA_WOOPER]:[t.STONE_AXE,t.RECOVER,t.BANEFUL_BUNKER,t.BARB_BARRAGE],[e.BLOODMOON_URSALUNA]:[t.NASTY_PLOT,t.ROCK_POLISH,t.SANDSEAR_STORM,t.BOOMBURST]},$=-1,ne=0,vr={[e.BULBASAUR]:[[1,t.TACKLE],[1,t.GROWL],[3,t.VINE_WHIP],[6,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[18,t.SEED_BOMB],[21,t.TAKE_DOWN],[24,t.SWEET_SCENT],[27,t.SYNTHESIS],[30,t.WORRY_SEED],[33,t.POWER_WHIP],[36,t.SOLAR_BEAM]],[e.IVYSAUR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.GROWTH],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[35,t.SYNTHESIS],[40,t.WORRY_SEED],[45,t.POWER_WHIP],[50,t.SOLAR_BEAM]],[e.VENUSAUR]:[[ne,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.PETAL_DANCE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[9,t.LEECH_SEED],[12,t.RAZOR_LEAF],[15,t.POISON_POWDER],[15,t.SLEEP_POWDER],[20,t.SEED_BOMB],[25,t.TAKE_DOWN],[30,t.SWEET_SCENT],[37,t.SYNTHESIS],[44,t.WORRY_SEED],[51,t.POWER_WHIP],[58,t.SOLAR_BEAM]],[e.CHARMANDER]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.DRAGON_BREATH],[17,t.FIRE_FANG],[20,t.SLASH],[24,t.FLAMETHROWER],[28,t.SCARY_FACE],[32,t.FIRE_SPIN],[36,t.INFERNO],[40,t.FLARE_BLITZ]],[e.CHARMELEON]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.FIRE_SPIN],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[37,t.SCARY_FACE],[48,t.INFERNO],[54,t.FLARE_BLITZ]],[e.CHARIZARD]:[[ne,t.AIR_SLASH],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.HEAT_WAVE],[1,t.DRAGON_CLAW],[12,t.DRAGON_BREATH],[19,t.FIRE_FANG],[24,t.SLASH],[30,t.FLAMETHROWER],[39,t.SCARY_FACE],[46,t.FIRE_SPIN],[54,t.INFERNO],[62,t.FLARE_BLITZ]],[e.SQUIRTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.WATER_GUN],[6,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[18,t.PROTECT],[21,t.RAIN_DANCE],[24,t.AQUA_TAIL],[27,t.SHELL_SMASH],[30,t.IRON_DEFENSE],[33,t.HYDRO_PUMP],[36,t.WAVE_CRASH]],[e.WARTORTLE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[40,t.IRON_DEFENSE],[45,t.HYDRO_PUMP],[50,t.WAVE_CRASH]],[e.BLASTOISE]:[[ne,t.FLASH_CANNON],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.WITHDRAW],[9,t.RAPID_SPIN],[12,t.BITE],[15,t.WATER_PULSE],[20,t.PROTECT],[25,t.RAIN_DANCE],[30,t.AQUA_TAIL],[35,t.SHELL_SMASH],[42,t.IRON_DEFENSE],[49,t.HYDRO_PUMP],[56,t.WAVE_CRASH]],[e.CATERPIE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.METAPOD]:[[ne,t.HARDEN],[$,t.TACKLE],[$,t.STRING_SHOT],[$,t.BUG_BITE],[1,t.HARDEN]],[e.BUTTERFREE]:[[ne,t.GUST],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[4,t.SUPERSONIC],[8,t.CONFUSION],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[16,t.PSYBEAM],[20,t.WHIRLWIND],[24,t.AIR_SLASH],[28,t.SAFEGUARD],[32,t.BUG_BUZZ],[36,t.TAILWIND],[40,t.RAGE_POWDER],[44,t.QUIVER_DANCE]],[e.WEEDLE]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[9,t.BUG_BITE]],[e.KAKUNA]:[[ne,t.HARDEN],[$,t.POISON_STING],[$,t.STRING_SHOT],[$,t.BUG_BITE],[1,t.HARDEN]],[e.BEEDRILL]:[[ne,t.TWINEEDLE],[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.FURY_ATTACK],[11,t.FURY_CUTTER],[14,t.RAGE],[17,t.PURSUIT],[20,t.FOCUS_ENERGY],[23,t.VENOSHOCK],[26,t.ASSURANCE],[29,t.TOXIC_SPIKES],[32,t.PIN_MISSILE],[35,t.POISON_JAB],[38,t.AGILITY],[41,t.ENDEAVOR],[44,t.FELL_STINGER]],[e.PIDGEY]:[[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[21,t.TWISTER],[25,t.FEATHER_DANCE],[29,t.AGILITY],[33,t.WING_ATTACK],[37,t.ROOST],[41,t.TAILWIND],[45,t.AERIAL_ACE],[49,t.AIR_SLASH],[53,t.HURRICANE]],[e.PIDGEOTTO]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[5,t.SAND_ATTACK],[9,t.GUST],[13,t.QUICK_ATTACK],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[37,t.WING_ATTACK],[42,t.ROOST],[47,t.TAILWIND],[52,t.AERIAL_ACE],[57,t.AIR_SLASH],[62,t.HURRICANE]],[e.PIDGEOT]:[[1,t.GUST],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.QUICK_ATTACK],[1,t.HURRICANE],[5,t.SAND_ATTACK],[9,t.GUST],[17,t.WHIRLWIND],[22,t.TWISTER],[27,t.FEATHER_DANCE],[32,t.AGILITY],[38,t.WING_ATTACK],[44,t.ROOST],[50,t.TAILWIND],[56,t.AERIAL_ACE],[62,t.AIR_SLASH],[68,t.HURRICANE]],[e.RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.RATICATE]:[[ne,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.LASER_FOCUS],[16,t.TAKE_DOWN],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.SPEAROW]:[[1,t.GROWL],[1,t.PECK],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[22,t.TAKE_DOWN],[25,t.AGILITY],[29,t.FOCUS_ENERGY],[32,t.ROOST],[36,t.DRILL_PECK]],[e.FEAROW]:[[1,t.LEER],[1,t.GROWL],[1,t.PECK],[1,t.ASSURANCE],[1,t.PLUCK],[1,t.DRILL_RUN],[1,t.PURSUIT],[4,t.LEER],[8,t.ASSURANCE],[11,t.FURY_ATTACK],[15,t.AERIAL_ACE],[18,t.WING_ATTACK],[23,t.TAKE_DOWN],[27,t.AGILITY],[32,t.FOCUS_ENERGY],[36,t.ROOST],[41,t.DRILL_PECK]],[e.EKANS]:[[1,t.WRAP],[1,t.LEER],[4,t.POISON_STING],[9,t.BITE],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[25,t.SWALLOW],[25,t.STOCKPILE],[25,t.SPIT_UP],[28,t.ACID_SPRAY],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[38,t.BELCH],[41,t.HAZE],[44,t.COIL],[49,t.GUNK_SHOT]],[e.ARBOK]:[[ne,t.CRUNCH],[1,t.WRAP],[1,t.POISON_STING],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.GLARE],[17,t.SCREECH],[20,t.ACID],[27,t.STOCKPILE],[27,t.SPIT_UP],[27,t.SWALLOW],[32,t.ACID_SPRAY],[39,t.SLUDGE_BOMB],[44,t.GASTRO_ACID],[48,t.BELCH],[51,t.HAZE],[56,t.COIL],[63,t.GUNK_SHOT]],[e.PIKACHU]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],[e.RAICHU]:[[ne,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[1,t.THUNDER_PUNCH],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.POISON_STING],[6,t.SAND_ATTACK],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.AGILITY],[30,t.SLASH],[33,t.DIG],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SANDSTORM],[45,t.EARTHQUAKE]],[e.SANDSLASH]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.CRUSH_CLAW],[1,t.AGILITY],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.BULLDOZE],[21,t.SWIFT],[26,t.FURY_SWIPES],[31,t.SAND_TOMB],[36,t.SLASH],[41,t.DIG],[46,t.GYRO_BALL],[51,t.SWORDS_DANCE],[56,t.SANDSTORM],[61,t.EARTHQUAKE]],[e.NIDORAN_F]:[[1,t.POISON_STING],[1,t.GROWL],[5,t.SCRATCH],[10,t.TAIL_WHIP],[15,t.FURY_SWIPES],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.BITE],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.CRUNCH],[55,t.EARTH_POWER]],[e.NIDORINA]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.GROWL],[15,t.FURY_SWIPES],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.BITE],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.CRUNCH],[71,t.EARTH_POWER]],[e.NIDOQUEEN]:[[ne,t.SUPERPOWER],[1,t.SLUDGE_WAVE],[1,t.SCRATCH],[1,t.DOUBLE_KICK],[1,t.TAIL_WHIP],[1,t.POISON_STING],[1,t.BITE],[1,t.GROWL],[1,t.TOXIC],[1,t.FURY_SWIPES],[1,t.CRUNCH],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.EARTH_POWER]],[e.NIDORAN_M]:[[1,t.POISON_STING],[1,t.LEER],[5,t.PECK],[10,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[20,t.TOXIC_SPIKES],[25,t.DOUBLE_KICK],[30,t.HORN_ATTACK],[35,t.HELPING_HAND],[40,t.TOXIC],[45,t.FLATTER],[50,t.POISON_JAB],[55,t.EARTH_POWER]],[e.NIDORINO]:[[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.FOCUS_ENERGY],[15,t.FURY_ATTACK],[22,t.TOXIC_SPIKES],[29,t.DOUBLE_KICK],[36,t.HORN_ATTACK],[43,t.HELPING_HAND],[50,t.TOXIC],[57,t.FLATTER],[64,t.POISON_JAB],[71,t.EARTH_POWER]],[e.NIDOKING]:[[ne,t.MEGAHORN],[1,t.SLUDGE_WAVE],[1,t.DOUBLE_KICK],[1,t.HORN_ATTACK],[1,t.FURY_ATTACK],[1,t.POISON_STING],[1,t.LEER],[1,t.PECK],[1,t.TOXIC],[1,t.FOCUS_ENERGY],[1,t.FLATTER],[1,t.HELPING_HAND],[1,t.TOXIC_SPIKES],[1,t.POISON_JAB],[1,t.EARTH_POWER]],[e.CLEFAIRY]:[[1,t.POUND],[1,t.GROWL],[1,t.SING],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[1,t.SPOTLIGHT],[4,t.STORED_POWER],[8,t.ENCORE],[12,t.AFTER_YOU],[16,t.LIFE_DEW],[20,t.METRONOME],[24,t.MOONLIGHT],[28,t.GRAVITY],[32,t.METEOR_MASH],[36,t.FOLLOW_ME],[40,t.COSMIC_POWER],[44,t.MOONBLAST],[48,t.HEALING_WISH]],[e.CLEFABLE]:[[$,t.POUND],[$,t.GROWL],[$,t.SING],[$,t.DEFENSE_CURL],[$,t.SPLASH],[$,t.SWEET_KISS],[$,t.CHARM],[$,t.ENCORE],[$,t.MOONLIGHT],[$,t.FOLLOW_ME],[$,t.COSMIC_POWER],[$,t.GRAVITY],[$,t.HEALING_WISH],[$,t.COPYCAT],[$,t.AFTER_YOU],[$,t.STORED_POWER],[$,t.DISARMING_VOICE],[1,t.METRONOME],[1,t.METEOR_MASH],[1,t.MOONBLAST],[1,t.LIFE_DEW],[1,t.SPOTLIGHT]],[e.VULPIX]:[[1,t.TAIL_WHIP],[1,t.EMBER],[4,t.DISABLE],[8,t.QUICK_ATTACK],[12,t.SPITE],[16,t.INCINERATE],[20,t.CONFUSE_RAY],[24,t.WILL_O_WISP],[28,t.EXTRASENSORY],[32,t.FLAMETHROWER],[36,t.IMPRISON],[40,t.FIRE_SPIN],[44,t.SAFEGUARD],[48,t.INFERNO],[52,t.FIRE_BLAST]],[e.NINETALES]:[[$,t.DISABLE],[$,t.EMBER],[$,t.FIRE_SPIN],[$,t.CONFUSE_RAY],[$,t.FIRE_BLAST],[$,t.SPITE],[$,t.SAFEGUARD],[$,t.WILL_O_WISP],[$,t.IMPRISON],[$,t.EXTRASENSORY],[$,t.NASTY_PLOT],[$,t.INCINERATE],[$,t.INFERNO],[1,t.FLAMETHROWER],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK]],[e.JIGGLYPUFF]:[[1,t.POUND],[1,t.SING],[1,t.DISABLE],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.ECHOED_VOICE],[8,t.COVET],[12,t.STOCKPILE],[12,t.SPIT_UP],[12,t.SWALLOW],[16,t.ROUND],[20,t.REST],[24,t.BODY_SLAM],[28,t.MIMIC],[32,t.GYRO_BALL],[36,t.HYPER_VOICE],[44,t.DOUBLE_EDGE]],[e.WIGGLYTUFF]:[[1,t.POUND],[1,t.BODY_SLAM],[1,t.DOUBLE_EDGE],[1,t.SING],[1,t.DISABLE],[1,t.MIMIC],[1,t.DEFENSE_CURL],[1,t.REST],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[1,t.HYPER_VOICE],[1,t.COVET],[1,t.GYRO_BALL],[1,t.COPYCAT],[1,t.ROUND],[1,t.ECHOED_VOICE],[1,t.DISARMING_VOICE],[5,t.PLAY_ROUGH]],[e.ZUBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[5,t.ASTONISH],[10,t.MEAN_LOOK],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[25,t.AIR_CUTTER],[30,t.BITE],[35,t.HAZE],[40,t.VENOSHOCK],[45,t.CONFUSE_RAY],[50,t.AIR_SLASH],[55,t.LEECH_LIFE]],[e.GOLBAT]:[[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.ODDISH]:[[1,t.ABSORB],[1,t.GROWTH],[4,t.ACID],[8,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[24,t.TOXIC],[28,t.MOONBLAST],[32,t.GRASSY_TERRAIN],[36,t.MOONLIGHT],[40,t.PETAL_DANCE]],[e.GLOOM]:[[1,t.ACID],[1,t.ABSORB],[1,t.GROWTH],[1,t.SWEET_SCENT],[12,t.MEGA_DRAIN],[14,t.POISON_POWDER],[16,t.STUN_SPORE],[18,t.SLEEP_POWDER],[20,t.GIGA_DRAIN],[26,t.TOXIC],[32,t.MOONBLAST],[38,t.GRASSY_TERRAIN],[44,t.MOONLIGHT],[50,t.PETAL_DANCE]],[e.VILEPLUME]:[[ne,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.AROMATHERAPY],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.PARAS]:[[1,t.SCRATCH],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[27,t.SLASH],[33,t.GROWTH],[38,t.GIGA_DRAIN],[43,t.AROMATHERAPY],[49,t.RAGE_POWDER],[54,t.X_SCISSOR]],[e.PARASECT]:[[1,t.SCRATCH],[1,t.ABSORB],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.CROSS_POISON],[6,t.POISON_POWDER],[6,t.STUN_SPORE],[11,t.ABSORB],[17,t.FURY_CUTTER],[22,t.SPORE],[29,t.SLASH],[37,t.GROWTH],[44,t.GIGA_DRAIN],[51,t.AROMATHERAPY],[59,t.RAGE_POWDER],[66,t.X_SCISSOR]],[e.VENONAT]:[[1,t.TACKLE],[1,t.DISABLE],[5,t.SUPERSONIC],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[35,t.LEECH_LIFE],[37,t.ZEN_HEADBUTT],[41,t.POISON_FANG],[47,t.PSYCHIC]],[e.VENOMOTH]:[[ne,t.AIR_SLASH],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.DISABLE],[1,t.QUIVER_DANCE],[1,t.SILVER_WIND],[11,t.CONFUSION],[13,t.POISON_POWDER],[17,t.PSYBEAM],[23,t.STUN_SPORE],[25,t.BUG_BUZZ],[29,t.SLEEP_POWDER],[37,t.LEECH_LIFE],[41,t.ZEN_HEADBUTT],[47,t.POISON_FANG],[55,t.PSYCHIC]],[e.DIGLETT]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.DUGTRIO]:[[ne,t.SAND_TOMB],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.SLASH],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.PERSIAN]:[[ne,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.PSYDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_SPORT],[3,t.WATER_GUN],[6,t.CONFUSION],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[34,t.AMNESIA],[39,t.WONDER_ROOM]],[e.GOLDUCK]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.CONFUSION],[1,t.AQUA_JET],[1,t.WATER_SPORT],[1,t.ME_FIRST],[9,t.FURY_SWIPES],[12,t.WATER_PULSE],[15,t.DISABLE],[18,t.ZEN_HEADBUTT],[21,t.SCREECH],[24,t.AQUA_TAIL],[27,t.SOAK],[30,t.PSYCH_UP],[36,t.AMNESIA],[40,t.HYDRO_PUMP],[45,t.WONDER_ROOM]],[e.MANKEY]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[29,t.THRASH],[33,t.CLOSE_COMBAT],[36,t.SCREECH],[40,t.STOMPING_TANTRUM],[44,t.OUTRAGE],[48,t.FINAL_GAMBIT]],[e.PRIMEAPE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[15,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[20,t.AGILITY],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.PLAY_ROUGH],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.ARCANINE]:[[ne,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.AGILITY],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.ODOR_SLEUTH],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[1,t.PLAY_ROUGH],[5,t.FLAMETHROWER]],[e.POLIWAG]:[[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[6,t.POUND],[12,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[30,t.BODY_SLAM],[36,t.EARTH_POWER],[42,t.HYDRO_PUMP],[48,t.BELLY_DRUM],[54,t.DOUBLE_EDGE]],[e.POLIWHIRL]:[[1,t.POUND],[1,t.WATER_GUN],[1,t.HYPNOSIS],[1,t.WATER_SPORT],[1,t.MUD_SHOT],[18,t.BUBBLE_BEAM],[24,t.RAIN_DANCE],[32,t.BODY_SLAM],[40,t.EARTH_POWER],[48,t.HYDRO_PUMP],[56,t.BELLY_DRUM],[66,t.DOUBLE_EDGE]],[e.POLIWRATH]:[[ne,t.DYNAMIC_PUNCH],[$,t.POUND],[$,t.DOUBLE_EDGE],[$,t.WATER_GUN],[$,t.HYDRO_PUMP],[$,t.BELLY_DRUM],[$,t.RAIN_DANCE],[$,t.MUD_SHOT],[$,t.EARTH_POWER],[$,t.CIRCLE_THROW],[1,t.BUBBLE_BEAM],[1,t.BODY_SLAM],[1,t.HYPNOSIS],[1,t.WATER_SPORT]],[e.ABRA]:[[1,t.TELEPORT],[1,t.CONFUSION]],[e.KADABRA]:[[ne,t.PSYBEAM],[1,t.CONFUSION],[1,t.DISABLE],[1,t.TELEPORT],[1,t.KINESIS],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.ALAKAZAM]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.TELEPORT],[1,t.KINESIS],[5,t.PSYBEAM],[10,t.REFLECT],[15,t.ALLY_SWITCH],[20,t.PSYCHO_CUT],[25,t.RECOVER],[30,t.PSYSHOCK],[35,t.PSYCHIC],[40,t.ROLE_PLAY],[45,t.FUTURE_SIGHT],[50,t.CALM_MIND]],[e.MACHOP]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.FOCUS_ENERGY],[8,t.REVENGE],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[29,t.STRENGTH],[32,t.DUAL_CHOP],[36,t.BULK_UP],[40,t.SEISMIC_TOSS],[44,t.DYNAMIC_PUNCH],[48,t.CROSS_CHOP],[52,t.DOUBLE_EDGE]],[e.MACHOKE]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.MACHAMP]:[[1,t.LEER],[1,t.LOW_KICK],[1,t.FOCUS_ENERGY],[1,t.REVENGE],[1,t.WIDE_GUARD],[1,t.KARATE_CHOP],[12,t.LOW_SWEEP],[16,t.KNOCK_OFF],[20,t.SCARY_FACE],[24,t.VITAL_THROW],[31,t.STRENGTH],[36,t.DUAL_CHOP],[42,t.BULK_UP],[48,t.SEISMIC_TOSS],[54,t.DYNAMIC_PUNCH],[60,t.CROSS_CHOP],[66,t.DOUBLE_EDGE]],[e.BELLSPROUT]:[[1,t.VINE_WHIP],[7,t.GROWTH],[11,t.WRAP],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[23,t.ACID],[27,t.KNOCK_OFF],[29,t.SWEET_SCENT],[35,t.GASTRO_ACID],[39,t.RAZOR_LEAF],[41,t.POISON_JAB],[47,t.SLAM],[52,t.POWER_WHIP]],[e.WEEPINBELL]:[[1,t.VINE_WHIP],[1,t.WRAP],[1,t.GROWTH],[13,t.SLEEP_POWDER],[15,t.POISON_POWDER],[17,t.STUN_SPORE],[24,t.ACID],[29,t.KNOCK_OFF],[32,t.SWEET_SCENT],[39,t.GASTRO_ACID],[44,t.RAZOR_LEAF],[47,t.POISON_JAB],[54,t.SLAM],[58,t.POWER_WHIP]],[e.VICTREEBEL]:[[ne,t.LEAF_STORM],[$,t.STOCKPILE],[$,t.SWALLOW],[$,t.SPIT_UP],[$,t.WRAP],[$,t.GROWTH],[$,t.ACID],[$,t.KNOCK_OFF],[$,t.GASTRO_ACID],[$,t.POISON_JAB],[$,t.SLAM],[$,t.POWER_WHIP],[1,t.VINE_WHIP],[1,t.SLEEP_POWDER],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.RAZOR_LEAF],[44,t.LEAF_BLADE]],[e.TENTACOOL]:[[1,t.POISON_STING],[1,t.WATER_GUN],[4,t.ACID],[8,t.WRAP],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[32,t.ACID_ARMOR],[36,t.POISON_JAB],[40,t.SURF],[44,t.SLUDGE_WAVE],[48,t.HYDRO_PUMP]],[e.TENTACRUEL]:[[1,t.WRAP],[1,t.POISON_STING],[1,t.ACID],[1,t.WATER_GUN],[1,t.REFLECT_TYPE],[1,t.WRING_OUT],[12,t.SUPERSONIC],[16,t.WATER_PULSE],[20,t.SCREECH],[24,t.BUBBLE_BEAM],[28,t.HEX],[34,t.ACID_ARMOR],[40,t.POISON_JAB],[46,t.SURF],[52,t.SLUDGE_WAVE],[58,t.HYDRO_PUMP]],[e.GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.EARTHQUAKE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.BULLDOZE],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.BULLDOZE],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.EARTHQUAKE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.EMBER],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[41,t.TAKE_DOWN],[45,t.INFERNO],[50,t.FIRE_BLAST],[55,t.FLARE_BLITZ]],[e.RAPIDASH]:[[ne,t.SMART_STRIKE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[1,t.POISON_JAB],[15,t.FLAME_CHARGE],[20,t.AGILITY],[25,t.FLAME_WHEEL],[30,t.STOMP],[35,t.FIRE_SPIN],[43,t.TAKE_DOWN],[49,t.INFERNO],[56,t.FIRE_BLAST],[63,t.FLARE_BLITZ]],[e.SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.SLOWBRO]:[[$,t.FUTURE_SIGHT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[41,t.PSYCH_UP],[46,t.RAIN_DANCE],[51,t.HEAL_PULSE]],[e.MAGNEMITE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[4,t.SUPERSONIC],[8,t.THUNDER_WAVE],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[32,t.FLASH_CANNON],[36,t.DISCHARGE],[40,t.METAL_SOUND],[44,t.LIGHT_SCREEN],[48,t.LOCK_ON],[52,t.ZAP_CANNON]],[e.MAGNETON]:[[ne,t.TRI_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.CUT],[20,t.AERIAL_ACE],[25,t.AIR_CUTTER],[30,t.KNOCK_OFF],[35,t.FALSE_SWIPE],[40,t.SLASH],[45,t.SWORDS_DANCE],[50,t.AIR_SLASH],[55,t.LEAF_BLADE],[60,t.AGILITY],[65,t.BRAVE_BIRD]],[e.DODUO]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[9,t.FURY_ATTACK],[14,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[27,t.UPROAR],[30,t.ACUPRESSURE],[33,t.SWORDS_DANCE],[36,t.DRILL_PECK],[39,t.ENDEAVOR],[43,t.THRASH]],[e.DODRIO]:[[ne,t.TRI_ATTACK],[1,t.TRI_ATTACK],[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[12,t.FURY_ATTACK],[15,t.PLUCK],[19,t.DOUBLE_HIT],[23,t.AGILITY],[26,t.UPROAR],[30,t.ACUPRESSURE],[34,t.SWORDS_DANCE],[38,t.DRILL_PECK],[43,t.ENDEAVOR],[50,t.THRASH]],[e.SEEL]:[[1,t.HEADBUTT],[3,t.GROWL],[7,t.CHARM],[11,t.ICY_WIND],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[37,t.TAKE_DOWN],[41,t.DIVE],[43,t.AQUA_TAIL],[47,t.ICE_BEAM],[51,t.SAFEGUARD],[53,t.SNOWSCAPE]],[e.DEWGONG]:[[ne,t.SHEER_COLD],[1,t.HEADBUTT],[1,t.GROWL],[1,t.ICY_WIND],[1,t.CHARM],[1,t.SIGNAL_BEAM],[13,t.ENCORE],[17,t.ICE_SHARD],[21,t.REST],[23,t.AQUA_RING],[27,t.AURORA_BEAM],[31,t.AQUA_JET],[33,t.BRINE],[39,t.TAKE_DOWN],[45,t.DIVE],[49,t.AQUA_TAIL],[55,t.ICE_BEAM],[61,t.SAFEGUARD],[65,t.SNOWSCAPE]],[e.GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.MUK]:[[1,t.POUND],[1,t.HARDEN],[1,t.POISON_GAS],[1,t.MUD_SLAP],[12,t.DISABLE],[15,t.SLUDGE],[18,t.MUD_SHOT],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.SLUDGE_BOMB],[32,t.SLUDGE_WAVE],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.SHELLDER]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.WITHDRAW],[8,t.ICE_SHARD],[12,t.LEER],[16,t.WHIRLPOOL],[20,t.SUPERSONIC],[24,t.AURORA_BEAM],[28,t.PROTECT],[32,t.RAZOR_SHELL],[36,t.IRON_DEFENSE],[40,t.ICE_BEAM],[44,t.SHELL_SMASH],[48,t.HYDRO_PUMP]],[e.CLOYSTER]:[[ne,t.ICICLE_SPEAR],[1,t.TACKLE],[1,t.LEER],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.ICE_BEAM],[1,t.AURORA_BEAM],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.SPIKES],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[1,t.TOXIC_SPIKES],[1,t.ICE_SHARD],[1,t.SHELL_SMASH],[1,t.ICICLE_CRASH],[5,t.RAZOR_SHELL]],[e.GASTLY]:[[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[4,t.HYPNOSIS],[8,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[28,t.NIGHT_SHADE],[32,t.SUCKER_PUNCH],[36,t.DARK_PULSE],[40,t.SHADOW_BALL],[44,t.DESTINY_BOND],[48,t.DREAM_EATER]],[e.HAUNTER]:[[ne,t.SHADOW_PUNCH],[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.MEAN_LOOK],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.GENGAR]:[[1,t.HYPNOSIS],[1,t.CONFUSE_RAY],[1,t.LICK],[1,t.ACID],[1,t.PERISH_SONG],[1,t.MEAN_LOOK],[1,t.SHADOW_PUNCH],[1,t.REFLECT_TYPE],[12,t.PAYBACK],[16,t.SPITE],[20,t.CURSE],[24,t.HEX],[30,t.NIGHT_SHADE],[36,t.SUCKER_PUNCH],[42,t.DARK_PULSE],[48,t.SHADOW_BALL],[54,t.DESTINY_BOND],[60,t.DREAM_EATER]],[e.ONIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[4,t.SMACK_DOWN],[8,t.ROCK_POLISH],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE]],[e.DROWZEE]:[[1,t.POUND],[1,t.HYPNOSIS],[5,t.DISABLE],[9,t.CONFUSION],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[29,t.ZEN_HEADBUTT],[33,t.SWAGGER],[37,t.PSYCHIC],[41,t.NASTY_PLOT],[45,t.PSYSHOCK],[49,t.FUTURE_SIGHT]],[e.HYPNO]:[[1,t.POUND],[1,t.DISABLE],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.SWITCHEROO],[1,t.NIGHTMARE],[13,t.HEADBUTT],[17,t.POISON_GAS],[21,t.PSYBEAM],[25,t.PSYCH_UP],[32,t.ZEN_HEADBUTT],[37,t.SWAGGER],[42,t.PSYCHIC],[47,t.NASTY_PLOT],[51,t.PSYSHOCK],[56,t.FUTURE_SIGHT]],[e.KRABBY]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.MUD_SPORT],[4,t.HARDEN],[8,t.METAL_CLAW],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[29,t.FLAIL],[32,t.RAZOR_SHELL],[36,t.SLAM],[40,t.SWORDS_DANCE],[44,t.CRABHAMMER],[48,t.GUILLOTINE]],[e.KINGLER]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.HAMMER_ARM],[1,t.WIDE_GUARD],[1,t.MUD_SPORT],[12,t.MUD_SHOT],[16,t.PROTECT],[20,t.BUBBLE_BEAM],[24,t.STOMP],[31,t.FLAIL],[36,t.RAZOR_SHELL],[42,t.SLAM],[48,t.SWORDS_DANCE],[54,t.CRABHAMMER],[60,t.GUILLOTINE]],[e.VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.EERIE_IMPULSE],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[34,t.MAGNET_RISE],[37,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.MIRROR_COAT]],[e.ELECTRODE]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.EERIE_IMPULSE],[1,t.MAGNETIC_FLUX],[9,t.SPARK],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.LIGHT_SCREEN],[36,t.MAGNET_RISE],[41,t.DISCHARGE],[47,t.EXPLOSION],[54,t.GYRO_BALL],[58,t.MIRROR_COAT]],[e.EXEGGCUTE]:[[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.BARRAGE],[5,t.REFLECT],[10,t.LEECH_SEED],[15,t.MEGA_DRAIN],[20,t.CONFUSION],[25,t.SYNTHESIS],[30,t.BULLET_SEED],[35,t.GIGA_DRAIN],[40,t.EXTRASENSORY],[45,t.UPROAR],[50,t.WORRY_SEED],[55,t.SOLAR_BEAM]],[e.EXEGGUTOR]:[[ne,t.STOMP],[$,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.CUBONE]:[[1,t.GROWL],[1,t.MUD_SLAP],[4,t.TAIL_WHIP],[8,t.FALSE_SWIPE],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[29,t.BONE_RUSH],[32,t.FOCUS_ENERGY],[36,t.ENDEAVOR],[40,t.BONEMERANG],[44,t.THRASH],[48,t.DOUBLE_EDGE]],[e.MAROWAK]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.BONE_CLUB],[12,t.HEADBUTT],[16,t.RETALIATE],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.FOCUS_ENERGY],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.DOUBLE_EDGE]],[e.HITMONLEE]:[[ne,t.BRICK_BREAK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.LOW_SWEEP],[1,t.JUMP_KICK],[1,t.ROLLING_KICK],[1,t.MACH_PUNCH],[1,t.RAPID_SPIN],[4,t.DOUBLE_KICK],[8,t.LOW_KICK],[12,t.ENDURE],[16,t.SUCKER_PUNCH],[21,t.WIDE_GUARD],[24,t.BLAZE_KICK],[28,t.FEINT],[32,t.MEGA_KICK],[36,t.CLOSE_COMBAT],[40,t.REVERSAL],[44,t.HIGH_JUMP_KICK],[50,t.AXE_KICK]],[e.HITMONCHAN]:[[ne,t.DRAIN_PUNCH],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.COMET_PUNCH],[1,t.LOW_SWEEP],[1,t.RAPID_SPIN],[4,t.MACH_PUNCH],[8,t.VACUUM_WAVE],[12,t.DETECT],[16,t.BULLET_PUNCH],[21,t.QUICK_GUARD],[24,t.THUNDER_PUNCH],[24,t.ICE_PUNCH],[24,t.FIRE_PUNCH],[28,t.AGILITY],[32,t.MEGA_PUNCH],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.FOCUS_PUNCH]],[e.LICKITUNG]:[[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[6,t.REST],[12,t.SUPERSONIC],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[32,t.ROLLOUT],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.KOFFING]:[[1,t.TACKLE],[1,t.POISON_GAS],[4,t.SMOG],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[36,t.TOXIC],[40,t.BELCH],[44,t.EXPLOSION],[48,t.MEMENTO],[52,t.DESTINY_BOND]],[e.WEEZING]:[[ne,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.HAZE],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND]],[e.RHYHORN]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.SMACK_DOWN],[10,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.STONE_EDGE],[55,t.MEGAHORN],[60,t.HORN_DRILL]],[e.RHYDON]:[[ne,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL]],[e.CHANSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.TANGELA]:[[1,t.BIND],[1,t.ABSORB],[1,t.CONSTRICT],[4,t.STUN_SPORE],[8,t.GROWTH],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.KANGASKHAN]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.COMET_PUNCH],[4,t.GROWL],[8,t.FAKE_OUT],[12,t.BITE],[16,t.STOMP],[20,t.FOCUS_ENERGY],[24,t.HEADBUTT],[28,t.SUCKER_PUNCH],[32,t.DOUBLE_HIT],[36,t.CRUNCH],[40,t.ENDURE],[44,t.REVERSAL],[48,t.OUTRAGE],[52,t.LAST_RESORT]],[e.HORSEA]:[[1,t.LEER],[1,t.WATER_GUN],[5,t.SMOKESCREEN],[10,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[35,t.LASER_FOCUS],[40,t.DRAGON_PULSE],[45,t.HYDRO_PUMP],[50,t.DRAGON_DANCE],[55,t.RAIN_DANCE]],[e.SEADRA]:[[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.LASER_FOCUS],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE]],[e.GOLDEEN]:[[1,t.TAIL_WHIP],[1,t.PECK],[1,t.WATER_SPORT],[5,t.SUPERSONIC],[10,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[35,t.WATERFALL],[40,t.SOAK],[45,t.MEGAHORN],[50,t.HORN_DRILL]],[e.SEAKING]:[[1,t.TAIL_WHIP],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[1,t.PECK],[1,t.WATER_PULSE],[15,t.HORN_ATTACK],[20,t.AGILITY],[25,t.AQUA_RING],[30,t.FLAIL],[37,t.WATERFALL],[44,t.SOAK],[51,t.MEGAHORN],[58,t.HORN_DRILL]],[e.STARYU]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.CONFUSE_RAY],[12,t.RAPID_SPIN],[16,t.MINIMIZE],[20,t.SWIFT],[24,t.PSYBEAM],[28,t.BRINE],[32,t.LIGHT_SCREEN],[36,t.POWER_GEM],[40,t.PSYCHIC],[44,t.SURF],[48,t.RECOVER],[52,t.COSMIC_POWER],[56,t.HYDRO_PUMP]],[e.STARMIE]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.HYDRO_PUMP],[1,t.SURF],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.RECOVER],[1,t.HARDEN],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.LIGHT_SCREEN],[1,t.SWIFT],[1,t.SPOTLIGHT],[1,t.RAPID_SPIN],[1,t.COSMIC_POWER],[1,t.BRINE],[1,t.POWER_GEM]],[e.MR_MIME]:[[1,t.POUND],[1,t.TICKLE],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.COPYCAT],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[1,t.WIDE_GUARD],[1,t.QUICK_GUARD],[1,t.BARRIER],[12,t.CONFUSION],[16,t.ROLE_PLAY],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.MIMIC],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.SCYTHER]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.WING_ATTACK],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.AIR_SLASH],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.JYNX]:[[1,t.POUND],[1,t.LICK],[1,t.POWDER_SNOW],[1,t.SWEET_KISS],[1,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[34,t.PSYCHIC],[40,t.LOVELY_KISS],[46,t.MEAN_LOOK],[52,t.PERISH_SONG],[58,t.BLIZZARD]],[e.ELECTABUZZ]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.PINSIR]:[[1,t.VISE_GRIP],[1,t.HARDEN],[4,t.FOCUS_ENERGY],[8,t.BIND],[12,t.SEISMIC_TOSS],[16,t.BUG_BITE],[20,t.STORM_THROW],[24,t.DOUBLE_HIT],[28,t.VITAL_THROW],[32,t.X_SCISSOR],[36,t.STRENGTH],[40,t.SWORDS_DANCE],[44,t.SUBMISSION],[48,t.GUILLOTINE],[52,t.SUPERPOWER]],[e.TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.PAYBACK],[15,t.ASSURANCE],[20,t.HORN_ATTACK],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.GIGA_IMPACT]],[e.MAGIKARP]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.GYARADOS]:[[ne,t.BITE],[1,t.TACKLE],[1,t.LEER],[1,t.SPLASH],[1,t.FLAIL],[1,t.TWISTER],[4,t.WHIRLPOOL],[8,t.ICE_FANG],[12,t.BRINE],[16,t.SCARY_FACE],[21,t.WATERFALL],[24,t.CRUNCH],[28,t.RAIN_DANCE],[32,t.AQUA_TAIL],[36,t.DRAGON_DANCE],[40,t.HYDRO_PUMP],[44,t.HURRICANE],[48,t.THRASH],[52,t.HYPER_BEAM]],[e.LAPRAS]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.SING],[10,t.MIST],[15,t.LIFE_DEW],[20,t.ICE_SHARD],[25,t.CONFUSE_RAY],[30,t.WATER_PULSE],[35,t.BRINE],[40,t.BODY_SLAM],[45,t.ICE_BEAM],[50,t.RAIN_DANCE],[55,t.HYDRO_PUMP],[60,t.PERISH_SONG],[65,t.SHEER_COLD]],[e.DITTO]:[[1,t.TRANSFORM]],[e.EEVEE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[35,t.BATON_PASS],[40,t.TAKE_DOWN],[45,t.CHARM],[50,t.DOUBLE_EDGE],[55,t.LAST_RESORT],[60,t.VEEVEE_VOLLEY]],[e.VAPOREON]:[[ne,t.BOUNCY_BUBBLE],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.WATER_GUN],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.HAZE],[30,t.WATER_PULSE],[35,t.AURORA_BEAM],[40,t.AQUA_RING],[45,t.MUDDY_WATER],[50,t.ACID_ARMOR],[55,t.HYDRO_PUMP],[60,t.LAST_RESORT]],[e.JOLTEON]:[[ne,t.BUZZY_BUZZ],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.THUNDER_SHOCK],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.THUNDER_WAVE],[30,t.DOUBLE_KICK],[35,t.THUNDER_FANG],[40,t.PIN_MISSILE],[45,t.DISCHARGE],[50,t.AGILITY],[55,t.THUNDER],[60,t.LAST_RESORT]],[e.FLAREON]:[[ne,t.SIZZLY_SLIDE],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.EMBER],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SMOG],[30,t.BITE],[35,t.FIRE_FANG],[40,t.FIRE_SPIN],[45,t.LAVA_PLUME],[50,t.SCARY_FACE],[55,t.FLARE_BLITZ],[60,t.LAST_RESORT]],[e.PORYGON]:[[1,t.TACKLE],[1,t.CONVERSION],[5,t.RECYCLE],[10,t.MAGNET_RISE],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON]],[e.OMANYTE]:[[1,t.BIND],[1,t.WITHDRAW],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.SAND_ATTACK],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.ROCK_BLAST],[50,t.SURF],[55,t.SHELL_SMASH],[60,t.HYDRO_PUMP]],[e.OMASTAR]:[[ne,t.CRUNCH],[1,t.BIND],[1,t.SAND_ATTACK],[1,t.CONSTRICT],[1,t.SPIKE_CANNON],[1,t.WITHDRAW],[1,t.ROLLOUT],[15,t.WATER_GUN],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.ROCK_BLAST],[56,t.SURF],[63,t.SHELL_SMASH],[70,t.HYDRO_PUMP]],[e.KABUTO]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.SCRATCH],[10,t.SAND_ATTACK],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[41,t.PROTECT],[45,t.LEECH_LIFE],[50,t.LIQUIDATION],[55,t.METAL_SOUND],[60,t.STONE_EDGE]],[e.KABUTOPS]:[[ne,t.SLASH],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.ABSORB],[1,t.HARDEN],[1,t.FEINT],[1,t.NIGHT_SLASH],[15,t.AQUA_JET],[20,t.LEER],[25,t.MUD_SHOT],[30,t.ANCIENT_POWER],[35,t.BRINE],[43,t.PROTECT],[49,t.LEECH_LIFE],[56,t.LIQUIDATION],[63,t.METAL_SOUND],[70,t.STONE_EDGE]],[e.AERODACTYL]:[[1,t.BITE],[1,t.ANCIENT_POWER],[5,t.SUPERSONIC],[10,t.WING_ATTACK],[15,t.SCARY_FACE],[20,t.ROCK_SLIDE],[25,t.ROAR],[30,t.CRUNCH],[35,t.IRON_HEAD],[40,t.TAKE_DOWN],[45,t.STONE_EDGE],[50,t.AGILITY],[55,t.HYPER_BEAM],[60,t.GIGA_IMPACT]],[e.SNORLAX]:[[1,t.TACKLE],[1,t.SCREECH],[1,t.ODOR_SLEUTH],[1,t.DEFENSE_CURL],[1,t.METRONOME],[1,t.LICK],[1,t.FLAIL],[1,t.STOCKPILE],[1,t.SWALLOW],[1,t.RECYCLE],[1,t.BLOCK],[1,t.COVET],[1,t.FLING],[1,t.LAST_RESORT],[12,t.YAWN],[16,t.BITE],[20,t.REST],[20,t.SNORE],[20,t.SLEEP_TALK],[24,t.CRUNCH],[28,t.BODY_SLAM],[32,t.HEAVY_SLAM],[36,t.AMNESIA],[40,t.HIGH_HORSEPOWER],[44,t.HAMMER_ARM],[48,t.BELLY_DRUM],[52,t.BELCH],[56,t.GIGA_IMPACT]],[e.ARTICUNO]:[[1,t.GUST],[1,t.MIST],[5,t.POWDER_SNOW],[10,t.REFLECT],[15,t.ICE_SHARD],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.FREEZE_DRY],[40,t.ROOST],[45,t.ICE_BEAM],[50,t.SNOWSCAPE],[55,t.HURRICANE],[60,t.HAZE],[65,t.BLIZZARD],[70,t.SHEER_COLD]],[e.ZAPDOS]:[[1,t.PECK],[1,t.THUNDER_WAVE],[5,t.THUNDER_SHOCK],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.CHARGE],[35,t.DRILL_PECK],[40,t.ROOST],[45,t.DISCHARGE],[50,t.RAIN_DANCE],[55,t.THUNDER],[60,t.DETECT],[65,t.MAGNETIC_FLUX],[70,t.ZAP_CANNON]],[e.MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.EMBER],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.INCINERATE],[35,t.AIR_SLASH],[40,t.ROOST],[45,t.HEAT_WAVE],[50,t.SUNNY_DAY],[55,t.HURRICANE],[60,t.ENDURE],[65,t.OVERHEAT],[70,t.SKY_ATTACK]],[e.DRATINI]:[[1,t.WRAP],[1,t.LEER],[5,t.TWISTER],[10,t.THUNDER_WAVE],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[31,t.AQUA_TAIL],[35,t.DRAGON_RUSH],[40,t.SAFEGUARD],[45,t.RAIN_DANCE],[50,t.DRAGON_DANCE],[55,t.OUTRAGE],[60,t.HYPER_BEAM]],[e.DRAGONAIR]:[[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[60,t.DRAGON_DANCE],[67,t.OUTRAGE],[74,t.HYPER_BEAM]],[e.DRAGONITE]:[[ne,t.HURRICANE],[1,t.FIRE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.WING_ATTACK],[1,t.WRAP],[1,t.LEER],[1,t.THUNDER_WAVE],[1,t.TWISTER],[1,t.EXTREME_SPEED],[1,t.ROOST],[15,t.DRAGON_TAIL],[20,t.AGILITY],[25,t.SLAM],[33,t.AQUA_TAIL],[39,t.DRAGON_RUSH],[41,t.OUTRAGE],[46,t.SAFEGUARD],[53,t.RAIN_DANCE],[62,t.DRAGON_DANCE],[80,t.HYPER_BEAM]],[e.MEWTWO]:[[1,t.DISABLE],[1,t.CONFUSION],[1,t.SWIFT],[1,t.LIFE_DEW],[8,t.ANCIENT_POWER],[16,t.PSYCHO_CUT],[24,t.SAFEGUARD],[32,t.AMNESIA],[40,t.AURA_SPHERE],[48,t.PSYCHIC],[56,t.POWER_SWAP],[56,t.GUARD_SWAP],[64,t.MIST],[72,t.PSYSTRIKE],[80,t.RECOVER],[88,t.FUTURE_SIGHT]],[e.MEW]:[[1,t.POUND],[1,t.REFLECT_TYPE],[10,t.AMNESIA],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.NASTY_PLOT],[60,t.METRONOME],[70,t.IMPRISON],[80,t.TRANSFORM],[90,t.AURA_SPHERE],[100,t.PSYCHIC]],[e.CHIKORITA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.RAZOR_LEAF],[9,t.POISON_POWDER],[12,t.SYNTHESIS],[17,t.REFLECT],[20,t.MAGICAL_LEAF],[23,t.LEECH_SEED],[28,t.SWEET_SCENT],[31,t.LIGHT_SCREEN],[34,t.BODY_SLAM],[39,t.SAFEGUARD],[42,t.GIGA_DRAIN],[45,t.SOLAR_BEAM]],[e.BAYLEEF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[32,t.SWEET_SCENT],[36,t.LIGHT_SCREEN],[40,t.BODY_SLAM],[46,t.SAFEGUARD],[50,t.GIGA_DRAIN],[54,t.SOLAR_BEAM]],[e.MEGANIUM]:[[ne,t.PETAL_DANCE],[1,t.TACKLE],[1,t.GROWL],[1,t.RAZOR_LEAF],[1,t.POISON_POWDER],[1,t.PETAL_BLIZZARD],[12,t.SYNTHESIS],[18,t.REFLECT],[22,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[34,t.SWEET_SCENT],[40,t.LIGHT_SCREEN],[46,t.BODY_SLAM],[54,t.SAFEGUARD],[60,t.GIGA_DRAIN],[65,t.SOLAR_BEAM]],[e.CYNDAQUIL]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[10,t.SMOKESCREEN],[13,t.QUICK_ATTACK],[19,t.FLAME_WHEEL],[22,t.DEFENSE_CURL],[28,t.FLAME_CHARGE],[31,t.SWIFT],[37,t.LAVA_PLUME],[40,t.FLAMETHROWER],[46,t.INFERNO],[49,t.ROLLOUT],[55,t.DOUBLE_EDGE],[58,t.OVERHEAT],[64,t.ERUPTION]],[e.QUILAVA]:[[1,t.TACKLE],[1,t.LEER],[1,t.SMOKESCREEN],[10,t.EMBER],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[42,t.LAVA_PLUME],[46,t.FLAMETHROWER],[53,t.INFERNO],[57,t.ROLLOUT],[64,t.DOUBLE_EDGE],[68,t.OVERHEAT],[75,t.ERUPTION]],[e.TYPHLOSION]:[[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.TOTODILE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.WATER_GUN],[9,t.BITE],[13,t.SCARY_FACE],[19,t.ICE_FANG],[22,t.FLAIL],[27,t.CRUNCH],[30,t.SLASH],[33,t.SCREECH],[37,t.THRASH],[41,t.AQUA_TAIL],[45,t.SUPERPOWER],[50,t.HYDRO_PUMP]],[e.CROCONAW]:[[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[30,t.CRUNCH],[34,t.SLASH],[37,t.SCREECH],[42,t.THRASH],[47,t.AQUA_TAIL],[50,t.SUPERPOWER],[55,t.HYDRO_PUMP]],[e.FERALIGATR]:[[1,t.AGILITY],[1,t.SCRATCH],[1,t.LEER],[1,t.WATER_GUN],[13,t.BITE],[15,t.SCARY_FACE],[21,t.ICE_FANG],[24,t.FLAIL],[32,t.CRUNCH],[37,t.SLASH],[44,t.SCREECH],[51,t.THRASH],[59,t.AQUA_TAIL],[65,t.SUPERPOWER],[70,t.HYDRO_PUMP]],[e.SENTRET]:[[1,t.SCRATCH],[4,t.DEFENSE_CURL],[7,t.QUICK_ATTACK],[13,t.FURY_SWIPES],[16,t.HELPING_HAND],[19,t.FOLLOW_ME],[25,t.SLAM],[28,t.REST],[31,t.SUCKER_PUNCH],[36,t.AMNESIA],[39,t.BATON_PASS],[42,t.DOUBLE_EDGE],[47,t.HYPER_VOICE]],[e.FURRET]:[[ne,t.AGILITY],[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.DEFENSE_CURL],[1,t.COIL],[13,t.FURY_SWIPES],[17,t.HELPING_HAND],[21,t.FOLLOW_ME],[28,t.SLAM],[32,t.REST],[36,t.SUCKER_PUNCH],[42,t.AMNESIA],[46,t.BATON_PASS],[50,t.DOUBLE_EDGE],[56,t.HYPER_VOICE]],[e.HOOTHOOT]:[[1,t.GROWL],[1,t.PECK],[3,t.TACKLE],[6,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[21,t.EXTRASENSORY],[24,t.TAKE_DOWN],[27,t.UPROAR],[30,t.ROOST],[33,t.MOONBLAST],[36,t.HYPNOSIS],[39,t.DREAM_EATER]],[e.NOCTOWL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.ECHOED_VOICE],[9,t.CONFUSION],[12,t.REFLECT],[15,t.DEFOG],[18,t.AIR_SLASH],[23,t.EXTRASENSORY],[28,t.TAKE_DOWN],[33,t.UPROAR],[38,t.ROOST],[43,t.MOONBLAST],[48,t.HYPNOSIS],[53,t.DREAM_EATER]],[e.LEDYBA]:[[1,t.TACKLE],[5,t.SUPERSONIC],[8,t.SWIFT],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[19,t.ROOST],[22,t.STRUGGLE_BUG],[26,t.BATON_PASS],[29,t.AGILITY],[33,t.BUG_BUZZ],[36,t.AIR_SLASH],[40,t.DOUBLE_EDGE]],[e.LEDIAN]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.SWIFT],[5,t.SUPERSONIC],[12,t.LIGHT_SCREEN],[12,t.REFLECT],[12,t.SAFEGUARD],[15,t.MACH_PUNCH],[20,t.ROOST],[24,t.STRUGGLE_BUG],[29,t.BATON_PASS],[33,t.AGILITY],[38,t.BUG_BUZZ],[42,t.AIR_SLASH],[47,t.DOUBLE_EDGE]],[e.SPINARAK]:[[1,t.POISON_STING],[1,t.STRING_SHOT],[1,t.CONSTRICT],[5,t.ABSORB],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[22,t.FURY_SWIPES],[26,t.SUCKER_PUNCH],[29,t.AGILITY],[33,t.PIN_MISSILE],[36,t.PSYCHIC],[40,t.POISON_JAB],[44,t.CROSS_POISON],[47,t.STICKY_WEB],[51,t.TOXIC_THREAD]],[e.ARIADOS]:[[ne,t.SWORDS_DANCE],[1,t.POISON_STING],[1,t.ABSORB],[1,t.STRING_SHOT],[1,t.CONSTRICT],[1,t.FOCUS_ENERGY],[1,t.BUG_BITE],[1,t.FELL_STINGER],[8,t.INFESTATION],[12,t.SCARY_FACE],[15,t.NIGHT_SHADE],[19,t.SHADOW_SNEAK],[23,t.FURY_SWIPES],[28,t.SUCKER_PUNCH],[31,t.AGILITY],[35,t.PIN_MISSILE],[41,t.PSYCHIC],[46,t.POISON_JAB],[50,t.CROSS_POISON],[54,t.STICKY_WEB],[59,t.TOXIC_THREAD]],[e.CROBAT]:[[ne,t.CROSS_POISON],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.TOXIC],[1,t.SCREECH],[1,t.MEAN_LOOK],[1,t.ASTONISH],[1,t.TAILWIND],[15,t.POISON_FANG],[20,t.QUICK_GUARD],[27,t.AIR_CUTTER],[34,t.BITE],[41,t.HAZE],[48,t.VENOSHOCK],[55,t.CONFUSE_RAY],[62,t.AIR_SLASH],[69,t.LEECH_LIFE]],[e.CHINCHOU]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[4,t.ELECTRO_BALL],[8,t.THUNDER_WAVE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[28,t.DISCHARGE],[32,t.AQUA_RING],[36,t.FLAIL],[40,t.TAKE_DOWN],[44,t.HYDRO_PUMP]],[e.LANTURN]:[[ne,t.STOCKPILE],[ne,t.SPIT_UP],[ne,t.SWALLOW],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.SPOTLIGHT],[1,t.THUNDER_WAVE],[1,t.ELECTRO_BALL],[1,t.EERIE_IMPULSE],[12,t.BUBBLE_BEAM],[16,t.CONFUSE_RAY],[20,t.SPARK],[24,t.CHARGE],[30,t.DISCHARGE],[36,t.AQUA_RING],[42,t.FLAIL],[48,t.TAKE_DOWN],[54,t.HYDRO_PUMP]],[e.PICHU]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[4,t.PLAY_NICE],[8,t.SWEET_KISS],[12,t.NUZZLE],[16,t.NASTY_PLOT],[20,t.CHARM]],[e.CLEFFA]:[[1,t.POUND],[1,t.SPLASH],[1,t.COPYCAT],[4,t.SING],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.ENCORE],[20,t.CHARM]],[e.IGGLYBUFF]:[[1,t.POUND],[1,t.SING],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.DISABLE],[20,t.CHARM]],[e.TOGEPI]:[[1,t.POUND],[1,t.GROWL],[4,t.SWEET_KISS],[8,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.TOGETIC]:[[ne,t.FAIRY_WIND],[1,t.POUND],[1,t.GROWL],[1,t.SWEET_KISS],[1,t.LIFE_DEW],[12,t.CHARM],[16,t.ANCIENT_POWER],[20,t.YAWN],[24,t.METRONOME],[28,t.AFTER_YOU],[32,t.DOUBLE_EDGE],[36,t.SAFEGUARD],[40,t.FOLLOW_ME],[44,t.BATON_PASS],[48,t.LAST_RESORT],[52,t.WISH]],[e.NATU]:[[1,t.LEER],[1,t.PECK],[5,t.STORED_POWER],[10,t.TELEPORT],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[26,t.PSYCHO_SHIFT],[30,t.POWER_SWAP],[35,t.PSYCHIC],[35,t.GUARD_SWAP],[40,t.WISH],[45,t.FUTURE_SIGHT]],[e.XATU]:[[ne,t.AIR_SLASH],[1,t.LEER],[1,t.PECK],[1,t.TELEPORT],[1,t.TAILWIND],[1,t.STORED_POWER],[15,t.CONFUSE_RAY],[20,t.NIGHT_SHADE],[28,t.PSYCHO_SHIFT],[34,t.POWER_SWAP],[34,t.GUARD_SWAP],[41,t.PSYCHIC],[48,t.WISH],[55,t.FUTURE_SIGHT]],[e.MAREEP]:[[1,t.TACKLE],[1,t.GROWL],[4,t.THUNDER_WAVE],[8,t.THUNDER_SHOCK],[11,t.COTTON_SPORE],[15,t.CHARGE],[18,t.TAKE_DOWN],[22,t.ELECTRO_BALL],[25,t.CONFUSE_RAY],[29,t.POWER_GEM],[32,t.DISCHARGE],[36,t.COTTON_GUARD],[39,t.DAZZLING_GLEAM],[43,t.LIGHT_SCREEN],[46,t.THUNDER]],[e.FLAAFFY]:[[1,t.TACKLE],[1,t.GROWL],[6,t.THUNDER_SHOCK],[9,t.THUNDER_WAVE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[34,t.POWER_GEM],[38,t.DISCHARGE],[43,t.COTTON_GUARD],[47,t.DAZZLING_GLEAM],[52,t.LIGHT_SCREEN],[56,t.THUNDER]],[e.AMPHAROS]:[[ne,t.THUNDER_PUNCH],[1,t.FIRE_PUNCH],[1,t.TACKLE],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ZAP_CANNON],[1,t.DRAGON_PULSE],[1,t.MAGNETIC_FLUX],[1,t.ION_DELUGE],[11,t.COTTON_SPORE],[16,t.CHARGE],[20,t.TAKE_DOWN],[25,t.ELECTRO_BALL],[29,t.CONFUSE_RAY],[35,t.POWER_GEM],[40,t.DISCHARGE],[46,t.COTTON_GUARD],[51,t.DAZZLING_GLEAM],[57,t.LIGHT_SCREEN],[62,t.THUNDER]],[e.BELLOSSOM]:[[ne,t.PETAL_BLIZZARD],[1,t.ACID],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.MOONLIGHT],[1,t.QUIVER_DANCE],[1,t.GRASSY_TERRAIN],[1,t.MOONBLAST]],[e.MARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[19,t.AQUA_TAIL],[21,t.PLAY_ROUGH],[24,t.AQUA_RING],[27,t.RAIN_DANCE],[30,t.HYDRO_PUMP],[33,t.DOUBLE_EDGE],[36,t.SUPERPOWER]],[e.AZUMARILL]:[[1,t.SPLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE],[21,t.AQUA_TAIL],[25,t.PLAY_ROUGH],[30,t.AQUA_RING],[35,t.RAIN_DANCE],[40,t.HYDRO_PUMP],[45,t.DOUBLE_EDGE],[50,t.SUPERPOWER]],[e.SUDOWOODO]:[[ne,t.SLAM],[1,t.ROCK_THROW],[1,t.TACKLE],[1,t.FLAIL],[1,t.FAKE_TEARS],[1,t.HAMMER_ARM],[1,t.COPYCAT],[1,t.STONE_EDGE],[1,t.WOOD_HAMMER],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE],[48,t.HEAD_SMASH]],[e.POLITOED]:[[ne,t.BOUNCE],[$,t.BODY_SLAM],[$,t.DOUBLE_EDGE],[$,t.WATER_GUN],[$,t.BUBBLE_BEAM],[$,t.HYPNOSIS],[$,t.PERISH_SONG],[$,t.SWAGGER],[$,t.HYPER_VOICE],[$,t.MUD_SHOT],[$,t.EARTH_POWER],[1,t.RAIN_DANCE],[1,t.HYDRO_PUMP],[1,t.BELLY_DRUM],[1,t.POUND],[1,t.WATER_SPORT]],[e.HOPPIP]:[[1,t.TACKLE],[1,t.SPLASH],[4,t.TAIL_WHIP],[6,t.ABSORB],[8,t.FAIRY_WIND],[10,t.POISON_POWDER],[10,t.STUN_SPORE],[10,t.SLEEP_POWDER],[12,t.BULLET_SEED],[15,t.SYNTHESIS],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[24,t.ACROBATICS],[27,t.COTTON_SPORE],[29,t.U_TURN],[32,t.GIGA_DRAIN],[35,t.BOUNCE],[38,t.MEMENTO]],[e.SKIPLOOM]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.ACROBATICS],[31,t.COTTON_SPORE],[34,t.U_TURN],[37,t.GIGA_DRAIN],[41,t.BOUNCE],[44,t.MEMENTO]],[e.JUMPLUFF]:[[1,t.TAIL_WHIP],[1,t.ABSORB],[1,t.SPLASH],[1,t.SYNTHESIS],[8,t.TACKLE],[10,t.FAIRY_WIND],[12,t.POISON_POWDER],[12,t.STUN_SPORE],[12,t.SLEEP_POWDER],[15,t.BULLET_SEED],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[30,t.ACROBATICS],[35,t.COTTON_SPORE],[39,t.U_TURN],[43,t.GIGA_DRAIN],[49,t.BOUNCE],[55,t.MEMENTO]],[e.AIPOM]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[4,t.SAND_ATTACK],[8,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.SUNKERN]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.ABSORB],[10,t.MEGA_DRAIN],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.ENDEAVOR],[28,t.SYNTHESIS],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[36,t.SUNNY_DAY],[39,t.SEED_BOMB]],[e.SUNFLORA]:[[$,t.SEED_BOMB],[1,t.POUND],[1,t.TACKLE],[1,t.GROWTH],[1,t.ENDEAVOR],[1,t.SYNTHESIS],[4,t.INGRAIN],[7,t.ABSORB],[10,t.MEGA_DRAIN],[13,t.LEECH_SEED],[16,t.RAZOR_LEAF],[19,t.WORRY_SEED],[22,t.GIGA_DRAIN],[25,t.BULLET_SEED],[28,t.PETAL_DANCE],[31,t.SOLAR_BEAM],[34,t.DOUBLE_EDGE],[39,t.SUNNY_DAY],[43,t.LEAF_STORM],[50,t.PETAL_BLIZZARD]],[e.YANMA]:[[1,t.TACKLE],[6,t.QUICK_ATTACK],[11,t.DOUBLE_TEAM],[14,t.AIR_CUTTER],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.HYPNOSIS],[43,t.WING_ATTACK],[46,t.SCREECH],[49,t.U_TURN],[54,t.AIR_SLASH],[57,t.BUG_BUZZ]],[e.WOOPER]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.RAIN_DANCE],[8,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[21,t.YAWN],[24,t.AQUA_TAIL],[28,t.MUDDY_WATER],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.QUAGSIRE]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.RAIN_DANCE],[1,t.MUD_SHOT],[12,t.MIST],[12,t.HAZE],[16,t.SLAM],[23,t.YAWN],[28,t.AQUA_TAIL],[34,t.MUDDY_WATER],[40,t.AMNESIA],[46,t.TOXIC],[52,t.EARTHQUAKE]],[e.ESPEON]:[[ne,t.GLITZY_GLOW],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.CONFUSION],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.PSYBEAM],[35,t.MORNING_SUN],[40,t.POWER_SWAP],[45,t.PSYCHIC],[50,t.PSYCH_UP],[55,t.FUTURE_SIGHT],[60,t.LAST_RESORT]],[e.UMBREON]:[[ne,t.BADDY_BAD],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[1,t.PURSUIT],[5,t.SAND_ATTACK],[10,t.SNARL],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.CONFUSE_RAY],[30,t.ASSURANCE],[35,t.MOONLIGHT],[40,t.GUARD_SWAP],[45,t.DARK_PULSE],[50,t.SCREECH],[55,t.MEAN_LOOK],[60,t.LAST_RESORT]],[e.MURKROW]:[[1,t.PECK],[1,t.ASTONISH],[5,t.GUST],[11,t.HAZE],[15,t.WING_ATTACK],[21,t.NIGHT_SHADE],[25,t.ASSURANCE],[31,t.TAUNT],[35,t.MEAN_LOOK],[40,t.FOUL_PLAY],[50,t.SUCKER_PUNCH],[55,t.TORMENT],[60,t.QUASH]],[e.SLOWKING]:[[$,t.FUTURE_SIGHT],[$,t.CHILLY_RECEPTION],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.MISDREAVUS]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.PSYWAVE],[10,t.ASTONISH],[14,t.CONFUSE_RAY],[19,t.MEAN_LOOK],[23,t.HEX],[28,t.PSYBEAM],[32,t.PAIN_SPLIT],[37,t.PAYBACK],[41,t.SHADOW_BALL],[46,t.PERISH_SONG],[50,t.POWER_GEM]],[e.UNOWN]:[[1,t.HIDDEN_POWER]],[e.WOBBUFFET]:[[ne,t.COUNTER],[ne,t.DESTINY_BOND],[ne,t.SAFEGUARD],[ne,t.MIRROR_COAT],[1,t.COUNTER],[1,t.DESTINY_BOND],[1,t.SAFEGUARD],[1,t.MIRROR_COAT],[1,t.AMNESIA],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE]],[e.GIRAFARIG]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.PINECO]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.SELF_DESTRUCT],[9,t.BUG_BITE],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[31,t.PAYBACK],[34,t.EXPLOSION],[39,t.IRON_DEFENSE],[42,t.GYRO_BALL],[45,t.DOUBLE_EDGE]],[e.FORRETRESS]:[[ne,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.SELF_DESTRUCT],[1,t.PROTECT],[1,t.ZAP_CANNON],[1,t.TOXIC_SPIKES],[1,t.MAGNET_RISE],[1,t.BUG_BITE],[1,t.MIRROR_SHOT],[12,t.TAKE_DOWN],[17,t.RAPID_SPIN],[20,t.ROLLOUT],[23,t.CURSE],[28,t.SPIKES],[32,t.PAYBACK],[36,t.EXPLOSION],[42,t.IRON_DEFENSE],[46,t.GYRO_BALL],[50,t.DOUBLE_EDGE]],[e.DUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR]],[e.GLIGAR]:[[1,t.POISON_STING],[4,t.SAND_ATTACK],[7,t.HARDEN],[10,t.KNOCK_OFF],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.POISON_TAIL],[22,t.ACROBATICS],[27,t.SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.STEELIX]:[[1,t.BIND],[1,t.TACKLE],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.MUD_SPORT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[4,t.SMACK_DOWN],[8,t.AUTOTOMIZE],[12,t.DRAGON_BREATH],[16,t.CURSE],[20,t.ROCK_SLIDE],[22,t.GYRO_BALL],[24,t.SCREECH],[28,t.SAND_TOMB],[32,t.STEALTH_ROCK],[36,t.SLAM],[40,t.SANDSTORM],[44,t.DIG],[48,t.IRON_TAIL],[52,t.STONE_EDGE],[56,t.DOUBLE_EDGE],[60,t.MAGNET_RISE]],[e.SNUBBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[25,t.ROAR],[31,t.LAST_RESORT],[37,t.PLAY_ROUGH],[43,t.PAYBACK],[49,t.CRUNCH]],[e.GRANBULL]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.SCARY_FACE],[1,t.OUTRAGE],[1,t.CHARM],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.BITE],[13,t.LICK],[19,t.HEADBUTT],[27,t.ROAR],[35,t.LAST_RESORT],[43,t.PLAY_ROUGH],[51,t.PAYBACK],[59,t.CRUNCH]],[e.QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.WATER_GUN],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.POISON_JAB],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.AQUA_TAIL],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.SCIZOR]:[[ne,t.BULLET_PUNCH],[1,t.WING_ATTACK],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.FALSE_SWIPE],[1,t.FURY_CUTTER],[1,t.AIR_SLASH],[12,t.METAL_CLAW],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.SHUCKLE]:[[1,t.WRAP],[1,t.WITHDRAW],[1,t.BIDE],[1,t.CONSTRICT],[5,t.ROLLOUT],[10,t.STRUGGLE_BUG],[15,t.ROCK_THROW],[20,t.SAFEGUARD],[25,t.REST],[30,t.BUG_BITE],[35,t.GUARD_SPLIT],[35,t.POWER_SPLIT],[40,t.ROCK_SLIDE],[45,t.GASTRO_ACID],[50,t.STICKY_WEB],[55,t.POWER_TRICK],[60,t.STONE_EDGE],[65,t.SHELL_SMASH]],[e.HERACROSS]:[[1,t.TACKLE],[1,t.LEER],[1,t.ARM_THRUST],[5,t.FURY_ATTACK],[10,t.ENDURE],[15,t.AERIAL_ACE],[20,t.HORN_ATTACK],[25,t.COUNTER],[30,t.BRICK_BREAK],[35,t.PIN_MISSILE],[40,t.THROAT_CHOP],[45,t.THRASH],[50,t.SWORDS_DANCE],[55,t.MEGAHORN],[60,t.CLOSE_COMBAT]],[e.SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.BEAT_UP],[48,t.AGILITY],[54,t.SCREECH],[60,t.SLASH]],[e.TEDDIURSA]:[[1,t.SCRATCH],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[33,t.CHARM],[37,t.REST],[37,t.SNORE],[41,t.THRASH]],[e.URSARING]:[[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.SLUGMA]:[[1,t.SMOG],[1,t.YAWN],[5,t.EMBER],[8,t.ROCK_THROW],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[41,t.BODY_SLAM],[43,t.RECOVER],[48,t.FLAMETHROWER],[50,t.EARTH_POWER]],[e.MAGCARGO]:[[ne,t.SHELL_SMASH],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.SMOG],[1,t.YAWN],[1,t.EARTH_POWER],[13,t.HARDEN],[20,t.CLEAR_SMOG],[22,t.ANCIENT_POWER],[27,t.INCINERATE],[29,t.ROCK_SLIDE],[34,t.LAVA_PLUME],[36,t.AMNESIA],[43,t.BODY_SLAM],[47,t.RECOVER],[54,t.FLAMETHROWER]],[e.SWINUB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[5,t.POWDER_SNOW],[10,t.FLAIL],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[35,t.AMNESIA],[40,t.TAKE_DOWN],[45,t.EARTHQUAKE],[50,t.BLIZZARD]],[e.PILOSWINE]:[[ne,t.ICE_FANG],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.AQUA_RING],[15,t.ENDURE],[20,t.ANCIENT_POWER],[25,t.BUBBLE_BEAM],[30,t.FLAIL],[35,t.LIFE_DEW],[40,t.POWER_GEM],[45,t.EARTH_POWER],[50,t.RECOVER],[55,t.MIRROR_COAT]],[e.REMORAID]:[[1,t.WATER_GUN],[1,t.HELPING_HAND],[4,t.WATER_PULSE],[8,t.FOCUS_ENERGY],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[28,t.BULLET_SEED],[32,t.ICE_BEAM],[36,t.HYDRO_PUMP],[40,t.SOAK],[44,t.HYPER_BEAM]],[e.OCTILLERY]:[[ne,t.OCTAZOOKA],[1,t.WRAP],[1,t.CONSTRICT],[1,t.WATER_GUN],[1,t.FOCUS_ENERGY],[1,t.HELPING_HAND],[1,t.ROCK_BLAST],[1,t.WATER_PULSE],[1,t.GUNK_SHOT],[12,t.PSYBEAM],[16,t.AURORA_BEAM],[20,t.BUBBLE_BEAM],[24,t.LOCK_ON],[30,t.BULLET_SEED],[36,t.ICE_BEAM],[42,t.HYDRO_PUMP],[48,t.SOAK],[54,t.HYPER_BEAM]],[e.DELIBIRD]:[[1,t.PRESENT],[1,t.METRONOME],[5,t.FAKE_OUT],[5,t.POWDER_SNOW],[6,t.MIST],[10,t.ICE_SHARD],[15,t.AERIAL_ACE],[20,t.ICY_WIND],[25,t.DRILL_PECK],[30,t.ICE_PUNCH],[35,t.HAZE],[40,t.AIR_SLASH],[45,t.TAILWIND],[50,t.SNOWSCAPE],[55,t.BLIZZARD],[60,t.BRAVE_BIRD]],[e.MANTINE]:[[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.PSYBEAM],[1,t.SIGNAL_BEAM],[1,t.BULLET_SEED],[1,t.ROOST],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SKARMORY]:[[1,t.LEER],[1,t.PECK],[4,t.SAND_ATTACK],[8,t.FURY_ATTACK],[12,t.METAL_CLAW],[16,t.AGILITY],[20,t.WING_ATTACK],[24,t.SLASH],[28,t.STEEL_WING],[32,t.PAYBACK],[36,t.DRILL_PECK],[40,t.METAL_SOUND],[44,t.SPIKES],[48,t.IRON_DEFENSE],[52,t.BRAVE_BIRD]],[e.HOUNDOUR]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.SMOG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[25,t.BEAT_UP],[28,t.FIRE_FANG],[32,t.TORMENT],[37,t.COMEUPPANCE],[40,t.FOUL_PLAY],[44,t.FLAMETHROWER],[49,t.CRUNCH],[52,t.NASTY_PLOT],[56,t.INFERNO]],[e.HOUNDOOM]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOG],[1,t.HOWL],[1,t.NASTY_PLOT],[1,t.THUNDER_FANG],[13,t.ROAR],[16,t.BITE],[20,t.INCINERATE],[26,t.BEAT_UP],[30,t.FIRE_FANG],[35,t.TORMENT],[41,t.COMEUPPANCE],[45,t.FOUL_PLAY],[50,t.FLAMETHROWER],[56,t.CRUNCH],[62,t.INFERNO]],[e.KINGDRA]:[[$,t.LASER_FOCUS],[1,t.LEER],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.TWISTER],[1,t.WHIRLPOOL],[1,t.YAWN],[15,t.FOCUS_ENERGY],[20,t.DRAGON_BREATH],[25,t.BUBBLE_BEAM],[30,t.AGILITY],[37,t.WATER_PULSE],[44,t.DRAGON_PULSE],[51,t.HYDRO_PUMP],[58,t.DRAGON_DANCE],[65,t.RAIN_DANCE],[72,t.WAVE_CRASH]],[e.PHANPY]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[6,t.FLAIL],[10,t.ROLLOUT],[15,t.BULLDOZE],[19,t.ENDURE],[24,t.SLAM],[28,t.TAKE_DOWN],[33,t.CHARM],[37,t.LAST_RESORT],[42,t.DOUBLE_EDGE]],[e.DONPHAN]:[[ne,t.FURY_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ODOR_SLEUTH],[1,t.FLAIL],[1,t.ENDURE],[1,t.TAKE_DOWN],[1,t.CHARM],[1,t.LAST_RESORT],[1,t.DOUBLE_EDGE],[1,t.THUNDER_FANG],[1,t.FIRE_FANG],[1,t.BULLDOZE],[6,t.RAPID_SPIN],[10,t.ROLLOUT],[15,t.ASSURANCE],[19,t.KNOCK_OFF],[24,t.SLAM],[30,t.STOMPING_TANTRUM],[37,t.SCARY_FACE],[43,t.EARTHQUAKE],[50,t.GIGA_IMPACT]],[e.PORYGON2]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.MAGIC_COAT],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.LOCK_ON],[55,t.ZAP_CANNON],[60,t.HYPER_BEAM]],[e.STANTLER]:[[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[25,t.PSYSHIELD_BASH],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE]],[e.SMEARGLE]:[[1,t.SKETCH],[11,t.SKETCH],[21,t.SKETCH],[31,t.SKETCH],[41,t.SKETCH],[51,t.SKETCH],[61,t.SKETCH],[71,t.SKETCH],[81,t.SKETCH],[91,t.SKETCH]],[e.TYROGUE]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[10,t.LOW_SWEEP],[10,t.MACH_PUNCH],[10,t.RAPID_SPIN]],[e.HITMONTOP]:[[ne,t.TRIPLE_KICK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.RAPID_SPIN],[1,t.FAKE_OUT],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.PURSUIT],[1,t.ROLLING_KICK],[1,t.LOW_SWEEP],[1,t.MACH_PUNCH],[4,t.QUICK_ATTACK],[8,t.GYRO_BALL],[12,t.DETECT],[16,t.REVENGE],[21,t.WIDE_GUARD],[21,t.QUICK_GUARD],[24,t.SUCKER_PUNCH],[28,t.AGILITY],[32,t.DIG],[36,t.CLOSE_COMBAT],[40,t.COUNTER],[44,t.ENDEAVOR]],[e.SMOOCHUM]:[[1,t.POUND],[1,t.LICK],[4,t.POWDER_SNOW],[8,t.COPYCAT],[12,t.CONFUSION],[16,t.COVET],[20,t.SING],[24,t.FAKE_TEARS],[28,t.ICE_PUNCH],[32,t.PSYCHIC],[36,t.SWEET_KISS],[40,t.MEAN_LOOK],[44,t.PERISH_SONG],[48,t.BLIZZARD]],[e.ELEKID]:[[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[32,t.DISCHARGE],[36,t.LOW_KICK],[40,t.THUNDERBOLT],[44,t.LIGHT_SCREEN],[48,t.THUNDER]],[e.MAGBY]:[[1,t.LEER],[1,t.SMOG],[4,t.EMBER],[8,t.SMOKESCREEN],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[32,t.LAVA_PLUME],[36,t.LOW_KICK],[40,t.FLAMETHROWER],[44,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.MILTANK]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.DEFENSE_CURL],[15,t.STOMP],[20,t.HEAL_BELL],[25,t.HEADBUTT],[30,t.ZEN_HEADBUTT],[35,t.MILK_DRINK],[40,t.BODY_SLAM],[45,t.PLAY_ROUGH],[50,t.CHARM],[55,t.HIGH_HORSEPOWER]],[e.BLISSEY]:[[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.COVET],[1,t.COPYCAT],[1,t.DISARMING_VOICE],[4,t.TAIL_WHIP],[8,t.ECHOED_VOICE],[12,t.LIFE_DEW],[16,t.SING],[20,t.FLING],[24,t.TAKE_DOWN],[28,t.HEAL_PULSE],[32,t.HELPING_HAND],[36,t.LIGHT_SCREEN],[40,t.DOUBLE_EDGE],[44,t.SOFT_BOILED],[48,t.LAST_RESORT],[52,t.HEALING_WISH]],[e.RAIKOU]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.EXTREME_SPEED],[1,t.CHARGE],[6,t.SPARK],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.THUNDER_FANG],[36,t.HOWL],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.DISCHARGE],[60,t.REFLECT],[66,t.RAIN_DANCE],[72,t.THUNDER],[78,t.ZAP_CANNON]],[e.ENTEI]:[[$,t.SACRED_FIRE],[$,t.EXTREME_SPEED],[1,t.STOMP],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[6,t.FLAME_WHEEL],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.FIRE_FANG],[36,t.SCARY_FACE],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.LAVA_PLUME],[60,t.SWAGGER],[66,t.SUNNY_DAY],[72,t.FIRE_BLAST],[78,t.ERUPTION]],[e.SUICUNE]:[[$,t.EXTREME_SPEED],[$,t.SHEER_COLD],[1,t.GUST],[1,t.LEER],[1,t.MIST],[1,t.WATER_GUN],[6,t.WATER_PULSE],[12,t.BITE],[18,t.CALM_MIND],[24,t.ROAR],[30,t.ICE_FANG],[36,t.TAILWIND],[42,t.CRUNCH],[48,t.EXTRASENSORY],[54,t.SURF],[60,t.MIRROR_COAT],[66,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[78,t.BLIZZARD]],[e.LARVITAR]:[[1,t.TACKLE],[1,t.LEER],[3,t.ROCK_THROW],[6,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[31,t.EARTHQUAKE],[33,t.STONE_EDGE],[36,t.THRASH],[39,t.SANDSTORM],[42,t.HYPER_BEAM]],[e.PUPITAR]:[[ne,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.PAYBACK],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM]],[e.TYRANITAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.PAYBACK],[1,t.DARK_PULSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[9,t.BITE],[12,t.SCARY_FACE],[15,t.ROCK_SLIDE],[18,t.STOMPING_TANTRUM],[21,t.SCREECH],[24,t.SMACK_DOWN],[27,t.CRUNCH],[33,t.EARTHQUAKE],[37,t.STONE_EDGE],[42,t.THRASH],[47,t.SANDSTORM],[52,t.HYPER_BEAM],[59,t.GIGA_IMPACT]],[e.LUGIA]:[[$,t.DRAGON_RUSH],[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.MIST],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.AEROBLAST],[63,t.RAIN_DANCE],[72,t.HYDRO_PUMP],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK]],[e.HO_OH]:[[1,t.GUST],[1,t.WHIRLWIND],[1,t.ANCIENT_POWER],[1,t.WEATHER_BALL],[9,t.LIFE_DEW],[18,t.SAFEGUARD],[27,t.CALM_MIND],[36,t.EXTRASENSORY],[45,t.RECOVER],[54,t.SACRED_FIRE],[63,t.SUNNY_DAY],[72,t.FIRE_BLAST],[81,t.FUTURE_SIGHT],[90,t.SKY_ATTACK],[99,t.OVERHEAT]],[e.CELEBI]:[[1,t.CONFUSION],[1,t.HEAL_BELL],[10,t.MAGICAL_LEAF],[20,t.BATON_PASS],[30,t.ANCIENT_POWER],[40,t.LIFE_DEW],[50,t.LEECH_SEED],[55,t.HEAL_BLOCK],[60,t.RECOVER],[70,t.FUTURE_SIGHT],[80,t.HEALING_WISH],[90,t.LEAF_STORM],[100,t.PERISH_SONG]],[e.TREECKO]:[[1,t.POUND],[1,t.LEER],[3,t.LEAFAGE],[6,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[18,t.ASSURANCE],[21,t.GIGA_DRAIN],[24,t.SLAM],[27,t.DOUBLE_TEAM],[30,t.ENERGY_BALL],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.LEAF_STORM]],[e.GROVYLE]:[[$,t.FALSE_SWIPE],[$,t.FURY_CUTTER],[$,t.X_SCISSOR],[$,t.ENERGY_BALL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[9,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[40,t.LEAF_BLADE],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.LEAF_STORM]],[e.SCEPTILE]:[[ne,t.LEAF_BLADE],[$,t.FALSE_SWIPE],[$,t.FURY_CUTTER],[$,t.X_SCISSOR],[$,t.ENERGY_BALL],[$,t.SHED_TAIL],[1,t.POUND],[1,t.LEER],[1,t.LEAFAGE],[1,t.QUICK_ATTACK],[1,t.DUAL_CHOP],[5,t.MEGA_DRAIN],[12,t.DETECT],[15,t.QUICK_GUARD],[20,t.ASSURANCE],[25,t.GIGA_DRAIN],[30,t.SLAM],[35,t.DOUBLE_TEAM],[42,t.SCREECH],[49,t.ENDEAVOR],[56,t.LEAF_STORM]],[e.TORCHIC]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[18,t.AERIAL_ACE],[21,t.SLASH],[24,t.BOUNCE],[27,t.FOCUS_ENERGY],[30,t.FLAMETHROWER],[33,t.FEATHER_DANCE],[36,t.REVERSAL],[39,t.FLARE_BLITZ]],[e.COMBUSKEN]:[[ne,t.DOUBLE_KICK],[$,t.FLAMETHROWER],[$,t.FEATHER_DANCE],[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[40,t.BLAZE_KICK],[45,t.BULK_UP],[50,t.REVERSAL],[55,t.FLARE_BLITZ]],[e.BLAZIKEN]:[[ne,t.BLAZE_KICK],[$,t.FIRE_PUNCH],[$,t.EMBER],[$,t.FLAMETHROWER],[$,t.FEATHER_DANCE],[1,t.DOUBLE_KICK],[1,t.SCRATCH],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.FLAME_CHARGE],[12,t.DETECT],[15,t.SAND_ATTACK],[20,t.AERIAL_ACE],[25,t.SLASH],[30,t.BOUNCE],[35,t.FOCUS_ENERGY],[42,t.BULK_UP],[49,t.REVERSAL],[56,t.FLARE_BLITZ],[63,t.BRAVE_BIRD]],[e.MUDKIP]:[[1,t.TACKLE],[1,t.GROWL],[3,t.WATER_GUN],[6,t.ROCK_SMASH],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[18,t.WATER_PULSE],[21,t.ROCK_SLIDE],[24,t.TAKE_DOWN],[27,t.AMNESIA],[30,t.SURF],[33,t.SCREECH],[36,t.ENDEAVOR],[39,t.HYDRO_PUMP]],[e.MARSHTOMP]:[[ne,t.MUD_SHOT],[$,t.SURF],[$,t.ROCK_SMASH],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[40,t.MUDDY_WATER],[45,t.SCREECH],[50,t.ENDEAVOR],[55,t.HYDRO_PUMP]],[e.SWAMPERT]:[[$,t.SURF],[$,t.EARTHQUAKE],[$,t.ROCK_SMASH],[$,t.HAMMER_ARM],[1,t.MUD_SHOT],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[9,t.ROCK_THROW],[12,t.PROTECT],[15,t.SUPERSONIC],[20,t.WATER_PULSE],[25,t.ROCK_SLIDE],[30,t.TAKE_DOWN],[35,t.AMNESIA],[42,t.MUDDY_WATER],[49,t.SCREECH],[56,t.ENDEAVOR],[63,t.HYDRO_PUMP]],[e.POOCHYENA]:[[1,t.TACKLE],[4,t.HOWL],[7,t.SAND_ATTACK],[10,t.BITE],[13,t.LEER],[16,t.ROAR],[19,t.SWAGGER],[22,t.ASSURANCE],[25,t.SCARY_FACE],[28,t.TAUNT],[31,t.CRUNCH],[34,t.YAWN],[36,t.TAKE_DOWN],[40,t.SUCKER_PUNCH],[44,t.PLAY_ROUGH]],[e.MIGHTYENA]:[[ne,t.SNARL],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.THIEF],[1,t.CRUNCH],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.LEER],[13,t.HOWL],[16,t.ROAR],[20,t.SWAGGER],[24,t.ASSURANCE],[28,t.SCARY_FACE],[36,t.TAUNT],[44,t.YAWN],[48,t.TAKE_DOWN],[52,t.SUCKER_PUNCH],[56,t.PLAY_ROUGH]],[e.ZIGZAGOON]:[[1,t.TACKLE],[1,t.GROWL],[3,t.SAND_ATTACK],[6,t.TAIL_WHIP],[9,t.COVET],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.FLING],[30,t.FLAIL],[33,t.BELLY_DRUM],[36,t.DOUBLE_EDGE]],[e.LINOONE]:[[ne,t.SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.PIN_MISSILE],[1,t.GROWL],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[9,t.COVET],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.FLING],[38,t.FLAIL],[43,t.BELLY_DRUM],[48,t.DOUBLE_EDGE]],[e.WURMPLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.POISON_STING],[15,t.BUG_BITE]],[e.SILCOON]:[[ne,t.HARDEN],[$,t.TACKLE],[$,t.STRING_SHOT],[$,t.POISON_STING],[$,t.BUG_BITE],[1,t.HARDEN]],[e.BEAUTIFLY]:[[ne,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.ABSORB],[15,t.STUN_SPORE],[17,t.MORNING_SUN],[20,t.AIR_CUTTER],[22,t.MEGA_DRAIN],[25,t.LEECH_LIFE],[27,t.ATTRACT],[30,t.WHIRLWIND],[32,t.GIGA_DRAIN],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.CASCOON]:[[ne,t.HARDEN],[$,t.TACKLE],[$,t.STRING_SHOT],[$,t.POISON_STING],[$,t.BUG_BITE],[1,t.HARDEN]],[e.DUSTOX]:[[ne,t.GUST],[1,t.TACKLE],[1,t.BUG_BITE],[1,t.GUST],[1,t.HARDEN],[1,t.STRING_SHOT],[1,t.POISON_STING],[12,t.CONFUSION],[15,t.POISON_POWDER],[17,t.MOONLIGHT],[20,t.VENOSHOCK],[22,t.PSYBEAM],[25,t.LEECH_LIFE],[27,t.LIGHT_SCREEN],[30,t.WHIRLWIND],[32,t.TOXIC],[35,t.BUG_BUZZ],[37,t.PROTECT],[40,t.QUIVER_DANCE]],[e.LOTAD]:[[1,t.GROWL],[1,t.ASTONISH],[3,t.ABSORB],[6,t.WATER_GUN],[9,t.MIST],[12,t.MEGA_DRAIN],[16,t.FLAIL],[20,t.BUBBLE_BEAM],[24,t.LEECH_SEED],[28,t.GIGA_DRAIN],[33,t.RAIN_DANCE],[38,t.ZEN_HEADBUTT],[43,t.ENERGY_BALL]],[e.LOMBRE]:[[1,t.GROWL],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.FLAIL],[1,t.FAKE_OUT],[1,t.RAIN_DANCE],[1,t.KNOCK_OFF],[1,t.TEETER_DANCE],[1,t.ASTONISH],[9,t.MIST],[12,t.MEGA_DRAIN],[18,t.FURY_SWIPES],[24,t.BUBBLE_BEAM],[30,t.LEECH_SEED],[36,t.GIGA_DRAIN],[50,t.ZEN_HEADBUTT],[57,t.ENERGY_BALL],[64,t.HYDRO_PUMP]],[e.LUDICOLO]:[[$,t.GROWL],[$,t.MIST],[$,t.WATER_GUN],[$,t.HYDRO_PUMP],[$,t.ABSORB],[$,t.MEGA_DRAIN],[$,t.FURY_SWIPES],[$,t.FLAIL],[$,t.KNOCK_OFF],[$,t.TEETER_DANCE],[$,t.ASTONISH],[$,t.ENERGY_BALL],[$,t.ZEN_HEADBUTT],[$,t.LEECH_SEED],[$,t.GIGA_DRAIN],[1,t.FAKE_OUT],[1,t.BUBBLE_BEAM],[1,t.RAIN_DANCE]],[e.SEEDOT]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[3,t.ABSORB],[6,t.ASTONISH],[9,t.GROWTH],[12,t.ROLLOUT],[15,t.MEGA_DRAIN],[18,t.PAYBACK],[21,t.HEADBUTT],[24,t.SUNNY_DAY],[27,t.SYNTHESIS],[30,t.SUCKER_PUNCH],[33,t.EXPLOSION]],[e.NUZLEAF]:[[ne,t.RAZOR_LEAF],[1,t.AIR_CUTTER],[1,t.TORMENT],[1,t.FAKE_OUT],[1,t.SWAGGER],[1,t.EXPLOSION],[1,t.TACKLE],[1,t.HARDEN],[1,t.BIDE],[1,t.ABSORB],[1,t.ASTONISH],[1,t.HEADBUTT],[9,t.GROWTH],[12,t.ROLLOUT],[18,t.MEGA_DRAIN],[24,t.PAYBACK],[30,t.SYNTHESIS],[36,t.SUNNY_DAY],[43,t.EXTRASENSORY],[50,t.SUCKER_PUNCH],[57,t.LEAF_BLADE]],[e.SHIFTRY]:[[ne,t.LEAF_BLADE],[$,t.WHIRLWIND],[$,t.TACKLE],[$,t.BIDE],[$,t.ABSORB],[$,t.MEGA_DRAIN],[$,t.GROWTH],[$,t.RAZOR_LEAF],[$,t.HARDEN],[$,t.HEADBUTT],[$,t.EXPLOSION],[$,t.ROLLOUT],[$,t.SWAGGER],[$,t.SYNTHESIS],[$,t.BEAT_UP],[$,t.FAKE_OUT],[$,t.TORMENT],[$,t.ASTONISH],[$,t.EXTRASENSORY],[$,t.SUCKER_PUNCH],[1,t.AIR_CUTTER],[1,t.HURRICANE],[1,t.PAYBACK],[1,t.SUNNY_DAY]],[e.TAILLOW]:[[1,t.PECK],[1,t.GROWL],[5,t.FOCUS_ENERGY],[9,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[25,t.QUICK_GUARD],[29,t.AGILITY],[33,t.AIR_SLASH],[37,t.ENDEAVOR],[41,t.BRAVE_BIRD],[45,t.REVERSAL]],[e.SWELLOW]:[[1,t.BRAVE_BIRD],[1,t.AIR_SLASH],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.FOCUS_ENERGY],[1,t.QUICK_ATTACK],[13,t.WING_ATTACK],[17,t.DOUBLE_TEAM],[21,t.AERIAL_ACE],[27,t.QUICK_GUARD],[33,t.AGILITY],[45,t.ENDEAVOR],[51,t.BRAVE_BIRD],[57,t.REVERSAL]],[e.WINGULL]:[[1,t.GROWL],[1,t.WATER_GUN],[5,t.QUICK_ATTACK],[10,t.SUPERSONIC],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[26,t.AGILITY],[30,t.AIR_SLASH],[35,t.MIST],[40,t.ROOST],[45,t.HURRICANE]],[e.PELIPPER]:[[1,t.PROTECT],[1,t.SOAK],[1,t.QUICK_ATTACK],[1,t.AGILITY],[1,t.AIR_SLASH],[1,t.GROWL],[1,t.WATER_GUN],[1,t.TAILWIND],[1,t.SUPERSONIC],[1,t.WATER_SPORT],[15,t.WING_ATTACK],[20,t.WATER_PULSE],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[34,t.FLING],[41,t.MIST],[48,t.ROOST],[55,t.HURRICANE],[62,t.HYDRO_PUMP]],[e.RALTS]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[3,t.DOUBLE_TEAM],[6,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[21,t.LIFE_DEW],[24,t.CHARM],[27,t.CALM_MIND],[30,t.PSYCHIC],[33,t.HEAL_PULSE],[36,t.DREAM_EATER],[39,t.FUTURE_SIGHT]],[e.KIRLIA]:[[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.CHARM],[33,t.CALM_MIND],[38,t.PSYCHIC],[43,t.HEAL_PULSE],[48,t.DREAM_EATER],[53,t.FUTURE_SIGHT]],[e.GARDEVOIR]:[[ne,t.DAZZLING_GLEAM],[1,t.MISTY_TERRAIN],[1,t.HEALING_WISH],[1,t.CHARM],[1,t.MYSTICAL_FIRE],[1,t.HEAL_PULSE],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.DOUBLE_TEAM],[1,t.CONFUSION],[9,t.HYPNOSIS],[12,t.DRAINING_KISS],[15,t.TELEPORT],[18,t.PSYBEAM],[23,t.LIFE_DEW],[28,t.WISH],[35,t.CALM_MIND],[42,t.PSYCHIC],[49,t.MOONBLAST],[56,t.DREAM_EATER],[63,t.FUTURE_SIGHT]],[e.SURSKIT]:[[1,t.WATER_GUN],[6,t.QUICK_ATTACK],[9,t.SWEET_SCENT],[14,t.SOAK],[17,t.BUBBLE_BEAM],[22,t.AGILITY],[25,t.MIST],[25,t.HAZE],[35,t.BATON_PASS],[38,t.STICKY_WEB]],[e.MASQUERAIN]:[[$,t.BATON_PASS],[$,t.STICKY_WEB],[1,t.WHIRLWIND],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.SWEET_SCENT],[1,t.SOAK],[1,t.BUBBLE_BEAM],[1,t.AGILITY],[1,t.MIST],[1,t.HAZE],[1,t.OMINOUS_WIND],[17,t.GUST],[22,t.SCARY_FACE],[22,t.AIR_CUTTER],[26,t.STUN_SPORE],[32,t.AIR_SLASH],[38,t.GIGA_DRAIN],[44,t.BUG_BUZZ],[52,t.QUIVER_DANCE]],[e.SHROOMISH]:[[1,t.ABSORB],[1,t.TACKLE],[5,t.STUN_SPORE],[8,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.POISON_POWDER],[26,t.GIGA_DRAIN],[29,t.GROWTH],[33,t.TOXIC],[36,t.SEED_BOMB],[40,t.SPORE]],[e.BRELOOM]:[[ne,t.MACH_PUNCH],[$,t.SPORE],[1,t.POISON_POWDER],[1,t.GIGA_DRAIN],[1,t.GROWTH],[1,t.TOXIC],[1,t.ABSORB],[1,t.TACKLE],[1,t.STUN_SPORE],[1,t.LEECH_SEED],[12,t.MEGA_DRAIN],[15,t.HEADBUTT],[19,t.FEINT],[22,t.COUNTER],[28,t.FORCE_PALM],[33,t.WORRY_SEED],[39,t.BRICK_BREAK],[44,t.SEED_BOMB],[50,t.DYNAMIC_PUNCH],[55,t.FOCUS_PUNCH]],[e.SLAKOTH]:[[1,t.SCRATCH],[1,t.YAWN],[6,t.ENCORE],[9,t.SLACK_OFF],[14,t.HEADBUTT],[17,t.AMNESIA],[22,t.COVET],[25,t.THROAT_CHOP],[30,t.COUNTER],[33,t.FLAIL],[38,t.PLAY_ROUGH]],[e.VIGOROTH]:[[$,t.PLAY_ROUGH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.SLACK_OFF],[1,t.ENCORE],[1,t.HEADBUTT],[1,t.AMNESIA],[1,t.COVET],[1,t.FLAIL],[1,t.UPROAR],[14,t.FURY_SWIPES],[17,t.ENDURE],[23,t.SLASH],[27,t.THROAT_CHOP],[33,t.COUNTER],[37,t.FOCUS_PUNCH],[43,t.REVERSAL]],[e.SLAKING]:[[ne,t.SWAGGER],[$,t.PLAY_ROUGH],[$,t.FOCUS_PUNCH],[1,t.SUCKER_PUNCH],[1,t.SCRATCH],[1,t.YAWN],[1,t.FOCUS_ENERGY],[1,t.ENCORE],[1,t.SLACK_OFF],[1,t.UPROAR],[1,t.FURY_SWIPES],[1,t.ENDURE],[1,t.HEADBUTT],[1,t.SLASH],[1,t.REVERSAL],[17,t.AMNESIA],[23,t.COVET],[27,t.THROAT_CHOP],[33,t.COUNTER],[39,t.FLAIL],[45,t.FLING],[52,t.MEGA_KICK],[63,t.HAMMER_ARM]],[e.NINCADA]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[5,t.HARDEN],[10,t.FALSE_SWIPE],[15,t.MUD_SLAP],[21,t.ABSORB],[25,t.METAL_CLAW],[30,t.FURY_SWIPES],[35,t.MIND_READER],[40,t.DIG]],[e.NINJASK]:[[ne,t.DOUBLE_TEAM],[ne,t.SCREECH],[ne,t.FURY_CUTTER],[1,t.BATON_PASS],[1,t.AERIAL_ACE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.SCRATCH],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.AGILITY],[23,t.ABSORB],[29,t.BUG_BITE],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SLASH],[57,t.SWORDS_DANCE],[64,t.X_SCISSOR]],[e.SHEDINJA]:[[1,t.SHADOW_CLAW],[1,t.GRUDGE],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[1,t.DIG],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.FALSE_SWIPE],[15,t.CONFUSE_RAY],[23,t.ABSORB],[29,t.SHADOW_SNEAK],[36,t.FURY_SWIPES],[43,t.MIND_READER],[50,t.SHADOW_BALL],[57,t.SPITE],[64,t.PHANTOM_FORCE]],[e.WHISMUR]:[[1,t.ASTONISH],[1,t.POUND],[5,t.ECHOED_VOICE],[10,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[21,t.STOMP],[25,t.ROAR],[30,t.SUPERSONIC],[35,t.UPROAR],[40,t.SCREECH],[45,t.HYPER_VOICE]],[e.LOUDRED]:[[ne,t.BITE],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[43,t.UPROAR],[50,t.SCREECH],[57,t.HYPER_VOICE]],[e.EXPLOUD]:[[ne,t.CRUNCH],[1,t.BITE],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.THUNDER_FANG],[1,t.ASTONISH],[1,t.POUND],[1,t.ECHOED_VOICE],[1,t.HOWL],[15,t.REST],[15,t.SLEEP_TALK],[23,t.STOMP],[29,t.ROAR],[36,t.SUPERSONIC],[45,t.UPROAR],[54,t.SCREECH],[63,t.HYPER_VOICE],[72,t.BOOMBURST],[81,t.HYPER_BEAM]],[e.MAKUHITA]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.SAND_ATTACK],[7,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[25,t.BELLY_DRUM],[28,t.DETECT],[31,t.SEISMIC_TOSS],[34,t.FOCUS_PUNCH],[37,t.ENDURE],[40,t.CLOSE_COMBAT],[43,t.REVERSAL],[46,t.HEAVY_SLAM]],[e.HARIYAMA]:[[1,t.BRINE],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.SAND_ATTACK],[1,t.ARM_THRUST],[10,t.FAKE_OUT],[13,t.FORCE_PALM],[16,t.WHIRLWIND],[19,t.KNOCK_OFF],[22,t.BULK_UP],[26,t.BELLY_DRUM],[30,t.DETECT],[34,t.SEISMIC_TOSS],[38,t.FOCUS_PUNCH],[42,t.ENDURE],[46,t.CLOSE_COMBAT],[50,t.REVERSAL],[54,t.HEAVY_SLAM],[60,t.HEADLONG_RUSH]],[e.AZURILL]:[[1,t.SPLASH],[1,t.WATER_GUN],[1,t.TAIL_WHIP],[3,t.HELPING_HAND],[6,t.BUBBLE_BEAM],[9,t.CHARM],[12,t.SLAM],[15,t.BOUNCE]],[e.NOSEPASS]:[[1,t.TACKLE],[4,t.HARDEN],[7,t.BLOCK],[10,t.ROCK_THROW],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.LOCK_ON],[43,t.ZAP_CANNON]],[e.SKITTY]:[[1,t.FAKE_OUT],[1,t.GROWL],[1,t.TAIL_WHIP],[4,t.TACKLE],[7,t.SING],[10,t.ATTRACT],[13,t.DISARMING_VOICE],[16,t.FURY_SWIPES],[19,t.COPYCAT],[22,t.PAYBACK],[25,t.CHARM],[31,t.FACADE],[34,t.COVET],[37,t.HEAL_BELL],[40,t.DOUBLE_EDGE],[43,t.BABY_DOLL_EYES],[46,t.PLAY_ROUGH]],[e.DELCATTY]:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.TACKLE],[1,t.SING],[1,t.ATTRACT],[1,t.DISARMING_VOICE],[1,t.FURY_SWIPES],[1,t.COPYCAT],[1,t.PAYBACK],[1,t.CHARM],[1,t.FACADE],[1,t.COVET],[1,t.HEAL_BELL],[1,t.DOUBLE_EDGE],[1,t.BABY_DOLL_EYES],[1,t.PLAY_ROUGH]],[e.SABLEYE]:[[1,t.LEER],[1,t.SCRATCH],[3,t.ASTONISH],[9,t.SHADOW_SNEAK],[12,t.FAKE_OUT],[15,t.DISABLE],[18,t.DETECT],[21,t.NIGHT_SHADE],[24,t.FURY_SWIPES],[27,t.KNOCK_OFF],[30,t.QUASH],[33,t.SHADOW_CLAW],[36,t.MEAN_LOOK],[39,t.POWER_GEM],[42,t.ZEN_HEADBUTT],[45,t.SHADOW_BALL],[48,t.FOUL_PLAY]],[e.MAWILE]:[[1,t.ASTONISH],[1,t.GROWL],[4,t.FAIRY_WIND],[8,t.BATON_PASS],[12,t.BITE],[16,t.STOCKPILE],[16,t.SPIT_UP],[16,t.SWALLOW],[20,t.SUCKER_PUNCH],[24,t.IRON_DEFENSE],[28,t.CRUNCH],[32,t.SWEET_SCENT],[36,t.IRON_HEAD],[40,t.TAUNT],[44,t.FAKE_TEARS],[48,t.PLAY_ROUGH]],[e.ARON]:[[1,t.TACKLE],[1,t.HARDEN],[4,t.METAL_CLAW],[8,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[33,t.METAL_SOUND],[36,t.TAKE_DOWN],[40,t.AUTOTOMIZE],[44,t.IRON_TAIL],[48,t.IRON_DEFENSE],[52,t.HEAVY_SLAM],[56,t.DOUBLE_EDGE],[60,t.METAL_BURST]],[e.LAIRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[46,t.AUTOTOMIZE],[52,t.IRON_TAIL],[58,t.IRON_DEFENSE],[64,t.HEAVY_SLAM],[70,t.DOUBLE_EDGE],[76,t.METAL_BURST]],[e.AGGRON]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_TOMB],[12,t.ROAR],[16,t.HEADBUTT],[20,t.PROTECT],[24,t.ROCK_SLIDE],[28,t.IRON_HEAD],[35,t.METAL_SOUND],[40,t.TAKE_DOWN],[48,t.AUTOTOMIZE],[56,t.IRON_TAIL],[64,t.IRON_DEFENSE],[72,t.HEAVY_SLAM],[80,t.DOUBLE_EDGE],[88,t.METAL_BURST]],[e.MEDITITE]:[[1,t.CONFUSION],[1,t.WORK_UP],[1,t.BIDE],[9,t.DETECT],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[39,t.REVERSAL],[41,t.RECOVER],[44,t.COUNTER]],[e.MEDICHAM]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.CONFUSION],[1,t.DETECT],[1,t.WORK_UP],[1,t.BIDE],[1,t.REVERSAL],[12,t.ENDURE],[15,t.FEINT],[17,t.FORCE_PALM],[20,t.PSYBEAM],[23,t.CALM_MIND],[25,t.ZEN_HEADBUTT],[28,t.HIGH_JUMP_KICK],[31,t.PSYCH_UP],[33,t.ACUPRESSURE],[36,t.POWER_TRICK],[47,t.RECOVER],[53,t.COUNTER],[53,t.AXE_KICK]],[e.ELECTRIKE]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[4,t.LEER],[8,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[28,t.ROAR],[32,t.DISCHARGE],[36,t.CHARGE],[40,t.WILD_CHARGE],[44,t.THUNDER]],[e.MANECTRIC]:[[1,t.FIRE_FANG],[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.LEER],[1,t.HOWL],[12,t.QUICK_ATTACK],[16,t.SHOCK_WAVE],[20,t.BITE],[24,t.THUNDER_FANG],[30,t.ROAR],[36,t.DISCHARGE],[42,t.CHARGE],[48,t.WILD_CHARGE],[54,t.THUNDER],[60,t.ELECTRIC_TERRAIN]],[e.PLUSLE]:[[$,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.MINUN]:[[$,t.NUZZLE],[1,t.PLAY_NICE],[1,t.GROWL],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[4,t.HELPING_HAND],[7,t.SPARK],[10,t.ENCORE],[13,t.SWITCHEROO],[16,t.SWIFT],[19,t.ELECTRO_BALL],[22,t.COPYCAT],[26,t.CHARGE],[31,t.DISCHARGE],[34,t.BATON_PASS],[37,t.AGILITY],[40,t.LAST_RESORT],[43,t.THUNDER],[46,t.NASTY_PLOT],[49,t.ENTRAINMENT]],[e.VOLBEAT]:[[1,t.FLASH],[1,t.TACKLE],[5,t.DOUBLE_TEAM],[8,t.CONFUSE_RAY],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.TAIL_GLOW],[26,t.PROTECT],[29,t.ZEN_HEADBUTT],[33,t.HELPING_HAND],[36,t.BUG_BUZZ],[40,t.PLAY_ROUGH],[43,t.DOUBLE_EDGE],[47,t.INFESTATION]],[e.ILLUMISE]:[[1,t.TACKLE],[1,t.PLAY_NICE],[5,t.SWEET_SCENT],[9,t.CHARM],[12,t.QUICK_ATTACK],[15,t.STRUGGLE_BUG],[19,t.MOONLIGHT],[22,t.WISH],[26,t.ENCORE],[29,t.FLATTER],[33,t.ZEN_HEADBUTT],[36,t.HELPING_HAND],[40,t.BUG_BUZZ],[43,t.PLAY_ROUGH],[47,t.INFESTATION]],[e.ROSELIA]:[[ne,t.POISON_STING],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED],[5,t.MEGA_DRAIN],[10,t.LEECH_SEED],[15,t.MAGICAL_LEAF],[20,t.TOXIC_SPIKES],[25,t.SWEET_SCENT],[30,t.GIGA_DRAIN],[35,t.SYNTHESIS],[40,t.TOXIC],[45,t.PETAL_BLIZZARD],[50,t.AROMATHERAPY],[55,t.INGRAIN],[60,t.PETAL_DANCE]],[e.GULPIN]:[[1,t.POUND],[5,t.YAWN],[8,t.POISON_GAS],[10,t.SLUDGE],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[28,t.STOCKPILE],[28,t.SPIT_UP],[28,t.SWALLOW],[33,t.SLUDGE_BOMB],[36,t.GASTRO_ACID],[41,t.BELCH],[44,t.PAIN_SPLIT],[49,t.GUNK_SHOT]],[e.SWALOT]:[[ne,t.BODY_SLAM],[1,t.GUNK_SHOT],[1,t.POUND],[1,t.YAWN],[1,t.POISON_GAS],[1,t.WRING_OUT],[1,t.SLUDGE],[1,t.PAIN_SPLIT],[12,t.AMNESIA],[17,t.ACID_SPRAY],[20,t.ENCORE],[25,t.TOXIC],[30,t.STOCKPILE],[30,t.SPIT_UP],[30,t.SWALLOW],[37,t.SLUDGE_BOMB],[42,t.GASTRO_ACID],[49,t.BELCH]],[e.CARVANHA]:[[1,t.AQUA_JET],[1,t.LEER],[4,t.POISON_FANG],[8,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[32,t.CRUNCH],[36,t.AGILITY],[40,t.LIQUIDATION],[44,t.TAKE_DOWN]],[e.SHARPEDO]:[[ne,t.SLASH],[1,t.NIGHT_SLASH],[1,t.AQUA_JET],[1,t.LEER],[1,t.POISON_FANG],[1,t.FOCUS_ENERGY],[12,t.SCARY_FACE],[16,t.BITE],[20,t.ICE_FANG],[24,t.SCREECH],[28,t.SWAGGER],[34,t.CRUNCH],[40,t.AGILITY],[46,t.LIQUIDATION],[52,t.TAKE_DOWN]],[e.WAILMER]:[[1,t.SPLASH],[1,t.TACKLE],[3,t.GROWL],[6,t.ASTONISH],[12,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[42,t.AMNESIA],[45,t.HYDRO_PUMP],[48,t.WATER_SPOUT]],[e.WAILORD]:[[1,t.SOAK],[1,t.NOBLE_ROAR],[1,t.SPLASH],[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.WATER_GUN],[15,t.MIST],[18,t.WATER_PULSE],[21,t.HEAVY_SLAM],[24,t.BRINE],[27,t.WHIRLPOOL],[30,t.DIVE],[33,t.BOUNCE],[36,t.BODY_SLAM],[39,t.REST],[44,t.AMNESIA],[49,t.HYDRO_PUMP],[54,t.WATER_SPOUT]],[e.NUMEL]:[[1,t.GROWL],[1,t.TACKLE],[5,t.EMBER],[8,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[40,t.EARTHQUAKE],[43,t.FLAMETHROWER],[47,t.DOUBLE_EDGE]],[e.CAMERUPT]:[[ne,t.ROCK_SLIDE],[$,t.FLAMETHROWER],[$,t.DOUBLE_EDGE],[1,t.FISSURE],[1,t.ERUPTION],[1,t.GROWL],[1,t.TACKLE],[1,t.EMBER],[1,t.FOCUS_ENERGY],[12,t.BULLDOZE],[15,t.INCINERATE],[19,t.AMNESIA],[22,t.LAVA_PLUME],[26,t.EARTH_POWER],[29,t.CURSE],[31,t.TAKE_DOWN],[39,t.YAWN],[46,t.EARTHQUAKE]],[e.TORKOAL]:[[1,t.SMOG],[1,t.EMBER],[4,t.WITHDRAW],[8,t.RAPID_SPIN],[12,t.SMOKESCREEN],[16,t.CLEAR_SMOG],[20,t.FLAME_WHEEL],[24,t.PROTECT],[28,t.LAVA_PLUME],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.FLAMETHROWER],[44,t.CURSE],[48,t.HEAT_WAVE],[52,t.AMNESIA],[56,t.INFERNO],[60,t.SHELL_SMASH],[64,t.ERUPTION]],[e.SPOINK]:[[1,t.SPLASH],[5,t.CONFUSION],[10,t.GROWL],[14,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[29,t.REST],[29,t.POWER_GEM],[33,t.SNORE],[38,t.PSYSHOCK],[40,t.PAYBACK],[44,t.PSYCHIC],[50,t.BOUNCE]],[e.GRUMPIG]:[[ne,t.TEETER_DANCE],[1,t.BELCH],[1,t.SPLASH],[1,t.CONFUSION],[1,t.GROWL],[1,t.PSYBEAM],[18,t.PSYCH_UP],[22,t.CONFUSE_RAY],[26,t.ZEN_HEADBUTT],[29,t.POWER_GEM],[35,t.REST],[35,t.SNORE],[42,t.PSYSHOCK],[46,t.PAYBACK],[52,t.PSYCHIC],[60,t.BOUNCE]],[e.SPINDA]:[[1,t.TACKLE],[5,t.COPYCAT],[10,t.DIZZY_PUNCH],[14,t.PSYBEAM],[19,t.HYPNOSIS],[23,t.BODY_SLAM],[28,t.SUCKER_PUNCH],[32,t.TEETER_DANCE],[37,t.UPROAR],[41,t.PSYCH_UP],[46,t.DOUBLE_EDGE],[50,t.FLAIL],[55,t.THRASH]],[e.TRAPINCH]:[[1,t.SAND_ATTACK],[1,t.ASTONISH],[1,t.BIDE],[1,t.FEINT_ATTACK],[8,t.BITE],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.BULLDOZE],[24,t.DIG],[28,t.CRUNCH],[32,t.SANDSTORM],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.SUPERPOWER],[48,t.FISSURE]],[e.VIBRAVA]:[[ne,t.DRAGON_BREATH],[$,t.SUPERSONIC],[$,t.FISSURE],[$,t.CRUNCH],[$,t.SUPERPOWER],[$,t.ASTONISH],[$,t.BULLDOZE],[1,t.DIG],[1,t.SAND_ATTACK],[1,t.BITE],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[50,t.UPROAR],[56,t.DRAGON_RUSH],[62,t.BOOMBURST]],[e.FLYGON]:[[ne,t.DRAGON_CLAW],[$,t.BITE],[$,t.FISSURE],[$,t.DIG],[$,t.CRUNCH],[$,t.SUPERPOWER],[$,t.ASTONISH],[$,t.DRAGON_DANCE],[$,t.FEINT],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.SAND_ATTACK],[1,t.SUPERSONIC],[1,t.BIDE],[1,t.FEINT_ATTACK],[12,t.MUD_SLAP],[16,t.SAND_TOMB],[20,t.DRAGON_TAIL],[24,t.SCREECH],[28,t.BUG_BUZZ],[32,t.SANDSTORM],[38,t.EARTH_POWER],[44,t.EARTHQUAKE],[52,t.UPROAR],[60,t.DRAGON_RUSH],[68,t.BOOMBURST]],[e.CACNEA]:[[1,t.POISON_STING],[1,t.LEER],[4,t.ABSORB],[7,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[34,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[42,t.ENERGY_BALL],[46,t.COTTON_SPORE],[50,t.SANDSTORM],[54,t.DESTINY_BOND]],[e.CACTURNE]:[[ne,t.SPIKY_SHIELD],[1,t.DESTINY_BOND],[1,t.POISON_STING],[1,t.LEER],[1,t.ABSORB],[1,t.GROWTH],[10,t.LEECH_SEED],[13,t.SAND_ATTACK],[16,t.BULLET_SEED],[19,t.POWER_TRIP],[22,t.INGRAIN],[26,t.PAYBACK],[30,t.SPIKES],[35,t.SUCKER_PUNCH],[38,t.PIN_MISSILE],[44,t.ENERGY_BALL],[49,t.COTTON_SPORE],[54,t.SANDSTORM]],[e.SWABLU]:[[1,t.PECK],[1,t.GROWL],[4,t.DISARMING_VOICE],[8,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[36,t.TAKE_DOWN],[40,t.MOONBLAST],[44,t.PERISH_SONG]],[e.ALTARIA]:[[ne,t.DRAGON_PULSE],[1,t.PLUCK],[1,t.PECK],[1,t.GROWL],[1,t.DISARMING_VOICE],[1,t.MIST],[12,t.FURY_ATTACK],[16,t.ROUND],[20,t.DRAGON_BREATH],[24,t.SAFEGUARD],[28,t.SING],[32,t.COTTON_GUARD],[38,t.TAKE_DOWN],[44,t.MOONBLAST],[50,t.PERISH_SONG],[56,t.SKY_ATTACK]],[e.ZANGOOSE]:[[$,t.DOUBLE_KICK],[$,t.DISABLE],[$,t.COUNTER],[$,t.FURY_SWIPES],[$,t.CURSE],[$,t.FLAIL],[$,t.BELLY_DRUM],[$,t.FEINT],[$,t.NIGHT_SLASH],[$,t.DOUBLE_HIT],[$,t.QUICK_GUARD],[$,t.FINAL_GAMBIT],[1,t.SCRATCH],[1,t.LEER],[5,t.QUICK_ATTACK],[8,t.FURY_CUTTER],[12,t.METAL_CLAW],[15,t.HONE_CLAWS],[19,t.SLASH],[22,t.POWER_TRIP],[26,t.CRUSH_CLAW],[29,t.FALSE_SWIPE],[33,t.SWITCHEROO],[36,t.DETECT],[40,t.X_SCISSOR],[43,t.TAUNT],[47,t.SWORDS_DANCE],[50,t.CLOSE_COMBAT]],[e.SEVIPER]:[[1,t.WRAP],[1,t.SWAGGER],[4,t.BITE],[6,t.LICK],[9,t.POISON_TAIL],[11,t.FEINT],[14,t.SCREECH],[19,t.GLARE],[21,t.POISON_FANG],[24,t.VENOSHOCK],[29,t.GASTRO_ACID],[31,t.POISON_JAB],[34,t.HAZE],[39,t.CRUNCH],[41,t.BELCH],[44,t.COIL],[46,t.SLUDGE_BOMB]],[e.LUNATONE]:[[1,t.MOONBLAST],[1,t.MOONLIGHT],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.PSYSHOCK],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.FUTURE_SIGHT],[45,t.MAGIC_ROOM],[50,t.EXPLOSION]],[e.SOLROCK]:[[1,t.FLARE_BLITZ],[1,t.MORNING_SUN],[1,t.TACKLE],[1,t.HARDEN],[1,t.CONFUSION],[1,t.ROCK_THROW],[5,t.HYPNOSIS],[10,t.ROCK_POLISH],[15,t.ROCK_SLIDE],[20,t.ZEN_HEADBUTT],[25,t.COSMIC_POWER],[30,t.PSYCHIC],[35,t.STONE_EDGE],[40,t.SOLAR_BEAM],[45,t.WONDER_ROOM],[50,t.EXPLOSION]],[e.BARBOACH]:[[1,t.MUD_SLAP],[1,t.WATER_GUN],[6,t.REST],[6,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[31,t.MUDDY_WATER],[36,t.EARTHQUAKE],[42,t.FUTURE_SIGHT],[48,t.FISSURE]],[e.WHISCASH]:[[ne,t.THRASH],[1,t.BELCH],[1,t.ZEN_HEADBUTT],[1,t.TICKLE],[1,t.MUD_SLAP],[1,t.WATER_GUN],[1,t.REST],[1,t.SNORE],[12,t.WATER_PULSE],[18,t.AMNESIA],[24,t.AQUA_TAIL],[33,t.MUDDY_WATER],[40,t.EARTHQUAKE],[48,t.FUTURE_SIGHT],[56,t.FISSURE]],[e.CORPHISH]:[[1,t.WATER_GUN],[1,t.HARDEN],[4,t.LEER],[8,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[32,t.RAZOR_SHELL],[36,t.SWORDS_DANCE],[40,t.CRUNCH],[44,t.CRABHAMMER],[48,t.ENDEAVOR],[52,t.GUILLOTINE]],[e.CRAWDAUNT]:[[ne,t.SWIFT],[1,t.WATER_GUN],[1,t.HARDEN],[1,t.LEER],[1,t.TAUNT],[12,t.BUBBLE_BEAM],[16,t.KNOCK_OFF],[20,t.DOUBLE_HIT],[24,t.PROTECT],[28,t.NIGHT_SLASH],[34,t.RAZOR_SHELL],[40,t.SWORDS_DANCE],[46,t.CRUNCH],[52,t.CRABHAMMER],[58,t.ENDEAVOR],[64,t.GUILLOTINE]],[e.BALTOY]:[[1,t.HARDEN],[1,t.MUD_SLAP],[3,t.RAPID_SPIN],[6,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[36,t.GUARD_SPLIT],[36,t.POWER_SPLIT],[39,t.SANDSTORM],[42,t.EXPLOSION]],[e.CLAYDOL]:[[ne,t.HYPER_BEAM],[1,t.TELEPORT],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.CONFUSION],[9,t.ROCK_TOMB],[12,t.POWER_TRICK],[15,t.PSYBEAM],[18,t.ANCIENT_POWER],[21,t.IMPRISON],[24,t.COSMIC_POWER],[27,t.EXTRASENSORY],[30,t.EARTH_POWER],[33,t.SELF_DESTRUCT],[38,t.GUARD_SPLIT],[38,t.POWER_SPLIT],[43,t.SANDSTORM],[48,t.EXPLOSION]],[e.LILEEP]:[[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.ACID],[8,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[41,t.STOCKPILE],[41,t.SPIT_UP],[41,t.SWALLOW],[44,t.ENERGY_BALL]],[e.CRADILY]:[[1,t.LEECH_SEED],[1,t.WRAP],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.ACID],[1,t.CONFUSE_RAY],[12,t.INGRAIN],[16,t.ANCIENT_POWER],[20,t.MEGA_DRAIN],[24,t.BRINE],[28,t.AMNESIA],[32,t.GASTRO_ACID],[36,t.GIGA_DRAIN],[43,t.STOCKPILE],[43,t.SPIT_UP],[43,t.SWALLOW],[48,t.ENERGY_BALL]],[e.ANORITH]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[4,t.WATER_GUN],[8,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[41,t.PROTECT],[44,t.X_SCISSOR]],[e.ARMALDO]:[[1,t.FURY_CUTTER],[1,t.HARDEN],[1,t.WATER_GUN],[1,t.SMACK_DOWN],[12,t.METAL_CLAW],[16,t.ANCIENT_POWER],[20,t.BUG_BITE],[24,t.BRINE],[28,t.SLASH],[32,t.CRUSH_CLAW],[36,t.ROCK_BLAST],[43,t.PROTECT],[48,t.X_SCISSOR]],[e.FEEBAS]:[[1,t.SPLASH],[15,t.TACKLE],[25,t.FLAIL]],[e.MILOTIC]:[[ne,t.WATER_PULSE],[1,t.FLAIL],[1,t.SPLASH],[1,t.TACKLE],[1,t.WRAP],[1,t.WATER_GUN],[1,t.WATER_SPORT],[4,t.DISARMING_VOICE],[8,t.TWISTER],[12,t.AQUA_RING],[16,t.ATTRACT],[20,t.LIFE_DEW],[24,t.DRAGON_TAIL],[28,t.RECOVER],[32,t.AQUA_TAIL],[36,t.SAFEGUARD],[40,t.SURF],[44,t.RAIN_DANCE],[48,t.COIL],[52,t.HYDRO_PUMP]],[e.CASTFORM]:[[1,t.TACKLE],[10,t.WATER_GUN],[10,t.EMBER],[10,t.POWDER_SNOW],[15,t.HEADBUTT],[20,t.RAIN_DANCE],[20,t.SUNNY_DAY],[20,t.HAIL],[25,t.WEATHER_BALL],[35,t.HYDRO_PUMP],[35,t.FIRE_BLAST],[35,t.BLIZZARD],[45,t.HURRICANE]],[e.KECLEON]:[[1,t.THIEF],[1,t.TAIL_WHIP],[1,t.ASTONISH],[1,t.LICK],[1,t.SCRATCH],[4,t.BIND],[7,t.SHADOW_SNEAK],[10,t.FEINT],[13,t.FURY_SWIPES],[16,t.DISABLE],[18,t.PSYBEAM],[21,t.ANCIENT_POWER],[25,t.SLASH],[30,t.DETECT],[33,t.SHADOW_CLAW],[38,t.SCREECH],[42,t.SUBSTITUTE],[46,t.SUCKER_PUNCH],[50,t.FOUL_PLAY]],[e.SHUPPET]:[[1,t.ASTONISH],[1,t.PURSUIT],[4,t.SCREECH],[7,t.NIGHT_SHADE],[10,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[38,t.SUCKER_PUNCH],[42,t.TRICK],[48,t.PHANTOM_FORCE]],[e.BANETTE]:[[ne,t.KNOCK_OFF],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SCREECH],[1,t.NIGHT_SHADE],[1,t.SPITE],[16,t.WILL_O_WISP],[19,t.SHADOW_SNEAK],[22,t.HEX],[26,t.CURSE],[30,t.SHADOW_BALL],[34,t.ROLE_PLAY],[40,t.SUCKER_PUNCH],[46,t.TRICK],[53,t.PHANTOM_FORCE]],[e.DUSKULL]:[[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[4,t.DISABLE],[8,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.FUTURE_SIGHT]],[e.DUSCLOPS]:[[ne,t.SHADOW_PUNCH],[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.GRAVITY],[1,t.BIND],[1,t.ASTONISH],[1,t.LEER],[1,t.PURSUIT],[1,t.DISABLE],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT]],[e.TROPIUS]:[[1,t.LEAF_STORM],[1,t.GUST],[1,t.LEER],[1,t.GROWTH],[1,t.RAZOR_LEAF],[6,t.SWEET_SCENT],[10,t.STOMP],[16,t.MAGICAL_LEAF],[21,t.WHIRLWIND],[30,t.WIDE_GUARD],[36,t.AIR_SLASH],[41,t.BODY_SLAM],[46,t.OUTRAGE],[50,t.SYNTHESIS],[56,t.SOLAR_BEAM]],[e.CHIMECHO]:[[1,t.HEALING_WISH],[1,t.LAST_RESORT],[1,t.ENTRAINMENT],[1,t.WRAP],[1,t.PSYWAVE],[1,t.GROWL],[1,t.ASTONISH],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[13,t.YAWN],[16,t.STORED_POWER],[19,t.TAKE_DOWN],[22,t.EXTRASENSORY],[27,t.HEAL_BELL],[32,t.UPROAR],[37,t.SAFEGUARD],[42,t.DOUBLE_EDGE],[47,t.HEAL_PULSE]],[e.ABSOL]:[[1,t.QUICK_ATTACK],[1,t.LEER],[5,t.DOUBLE_TEAM],[10,t.KNOCK_OFF],[15,t.DETECT],[20,t.TAUNT],[25,t.SLASH],[30,t.NIGHT_SLASH],[35,t.FOCUS_ENERGY],[40,t.SUCKER_PUNCH],[45,t.SWORDS_DANCE],[50,t.FUTURE_SIGHT],[55,t.PERISH_SONG]],[e.WYNAUT]:[[1,t.COUNTER],[1,t.MIRROR_COAT],[1,t.SAFEGUARD],[1,t.DESTINY_BOND],[1,t.SPLASH],[1,t.CHARM],[1,t.ENCORE],[1,t.AMNESIA]],[e.SNORUNT]:[[1,t.POWDER_SNOW],[1,t.ASTONISH],[1,t.HEADBUTT],[5,t.LEER],[10,t.DOUBLE_TEAM],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[45,t.SNOWSCAPE],[50,t.WEATHER_BALL],[55,t.CRUNCH],[60,t.BLIZZARD]],[e.GLALIE]:[[ne,t.FREEZE_DRY],[1,t.SHEER_COLD],[1,t.POWDER_SNOW],[1,t.HEADBUTT],[1,t.ASTONISH],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.ICE_BALL],[15,t.ICE_SHARD],[20,t.PROTECT],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.BITE],[40,t.ICE_FANG],[47,t.SNOWSCAPE],[54,t.WEATHER_BALL],[61,t.CRUNCH],[68,t.BLIZZARD]],[e.SPHEAL]:[[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[4,t.GROWL],[8,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[33,t.ENCORE],[36,t.BODY_SLAM],[40,t.SURF],[44,t.BLIZZARD],[48,t.HAIL],[52,t.SHEER_COLD]],[e.SEALEO]:[[ne,t.SWAGGER],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[46,t.SURF],[52,t.BLIZZARD],[58,t.HAIL],[64,t.SHEER_COLD]],[e.WALREIN]:[[1,t.SWAGGER],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.ROLLOUT],[1,t.DEFENSE_CURL],[1,t.GROWL],[1,t.WATER_GUN],[12,t.POWDER_SNOW],[16,t.REST],[20,t.SNORE],[24,t.BRINE],[28,t.AURORA_BEAM],[35,t.ENCORE],[40,t.BODY_SLAM],[48,t.SURF],[56,t.BLIZZARD],[64,t.HAIL],[72,t.SHEER_COLD]],[e.CLAMPERL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.WHIRLPOOL],[1,t.IRON_DEFENSE],[50,t.SHELL_SMASH]],[e.HUNTAIL]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.BITE],[5,t.SCREECH],[9,t.SCARY_FACE],[11,t.RAIN_DANCE],[14,t.WATER_PULSE],[16,t.ICE_FANG],[19,t.BRINE],[23,t.SUCKER_PUNCH],[26,t.DIVE],[29,t.BATON_PASS],[34,t.CRUNCH],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.GOREBYSS]:[[1,t.CLAMP],[1,t.WATER_GUN],[1,t.IRON_DEFENSE],[1,t.SHELL_SMASH],[1,t.WHIRLPOOL],[1,t.CONFUSION],[5,t.RAIN_DANCE],[9,t.AGILITY],[11,t.DRAINING_KISS],[14,t.WATER_PULSE],[16,t.AMNESIA],[19,t.AQUA_RING],[23,t.SAFEGUARD],[26,t.DIVE],[29,t.BATON_PASS],[34,t.PSYCHIC],[39,t.AQUA_TAIL],[45,t.COIL],[50,t.HYDRO_PUMP]],[e.RELICANTH]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.WATER_GUN],[10,t.ANCIENT_POWER],[15,t.YAWN],[20,t.DIVE],[25,t.TAKE_DOWN],[30,t.AQUA_TAIL],[35,t.REST],[40,t.FLAIL],[45,t.HYDRO_PUMP],[50,t.DOUBLE_EDGE],[55,t.HEAD_SMASH]],[e.LUVDISC]:[[1,t.TACKLE],[1,t.CHARM],[4,t.WATER_GUN],[7,t.AGILITY],[13,t.WISH],[17,t.WATER_PULSE],[20,t.ATTRACT],[22,t.DRAINING_KISS],[26,t.FLAIL],[31,t.SWEET_KISS],[34,t.TAKE_DOWN],[37,t.BABY_DOLL_EYES],[40,t.AQUA_RING],[42,t.SOAK],[46,t.HYDRO_PUMP],[49,t.SAFEGUARD]],[e.BAGON]:[[1,t.EMBER],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[31,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[40,t.FOCUS_ENERGY],[45,t.FLAMETHROWER],[50,t.OUTRAGE],[55,t.DOUBLE_EDGE]],[e.SHELGON]:[[ne,t.PROTECT],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[53,t.FLAMETHROWER],[60,t.OUTRAGE],[67,t.DOUBLE_EDGE]],[e.SALAMENCE]:[[ne,t.FLY],[$,t.OUTRAGE],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.DUAL_WINGBEAT],[1,t.ROOST],[1,t.EMBER],[1,t.LEER],[1,t.BITE],[1,t.DRAGON_BREATH],[15,t.HEADBUTT],[20,t.SCARY_FACE],[25,t.CRUNCH],[33,t.DRAGON_CLAW],[39,t.ZEN_HEADBUTT],[46,t.FOCUS_ENERGY],[55,t.FLAMETHROWER],[73,t.DOUBLE_EDGE]],[e.BELDUM]:[[1,t.TACKLE]],[e.METANG]:[[ne,t.CONFUSION],[ne,t.METAL_CLAW],[1,t.TACKLE],[1,t.BULLET_PUNCH],[1,t.HONE_CLAWS],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[18,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[50,t.METEOR_MASH],[58,t.IRON_DEFENSE],[66,t.AGILITY],[74,t.HYPER_BEAM]],[e.METAGROSS]:[[ne,t.HAMMER_ARM],[$,t.EXPLOSION],[$,t.HONE_CLAWS],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.BULLET_PUNCH],[1,t.TACKLE],[6,t.ZEN_HEADBUTT],[12,t.MAGNET_RISE],[16,t.FLASH_CANNON],[26,t.TAKE_DOWN],[34,t.PSYCHIC],[42,t.SCARY_FACE],[52,t.METEOR_MASH],[62,t.IRON_DEFENSE],[72,t.AGILITY],[82,t.HYPER_BEAM]],[e.REGIROCK]:[[1,t.CHARGE_BEAM],[1,t.ROCK_THROW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ROCK_SLIDE],[30,t.CURSE],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGICE]:[[1,t.CHARGE_BEAM],[1,t.ICY_WIND],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.ICE_BEAM],[30,t.CURSE],[36,t.AMNESIA],[42,t.HAMMER_ARM],[48,t.BLIZZARD],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGISTEEL]:[[1,t.CHARGE_BEAM],[1,t.METAL_CLAW],[6,t.BULLDOZE],[12,t.ANCIENT_POWER],[18,t.STOMP],[24,t.IRON_HEAD],[24,t.FLASH_CANNON],[30,t.CURSE],[36,t.AMNESIA],[36,t.IRON_DEFENSE],[42,t.HAMMER_ARM],[48,t.HEAVY_SLAM],[54,t.SUPERPOWER],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.LATIAS]:[[1,t.STORED_POWER],[1,t.CHARM],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.WISH],[35,t.MIST_BALL],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.REFLECT_TYPE],[60,t.PSYCHIC],[65,t.GUARD_SPLIT],[70,t.HEALING_WISH]],[e.LATIOS]:[[1,t.STORED_POWER],[1,t.DRAGON_DANCE],[1,t.HEAL_BLOCK],[1,t.PSYWAVE],[5,t.HELPING_HAND],[10,t.RECOVER],[15,t.CONFUSION],[20,t.TAILWIND],[25,t.DRAGON_BREATH],[30,t.ALLY_SWITCH],[35,t.LUSTER_PURGE],[40,t.ZEN_HEADBUTT],[45,t.DRAGON_PULSE],[50,t.HEAL_PULSE],[55,t.SIMPLE_BEAM],[60,t.PSYCHIC],[65,t.POWER_SPLIT],[70,t.MEMENTO]],[e.KYOGRE]:[[1,t.ORIGIN_PULSE],[1,t.WATER_PULSE],[1,t.ANCIENT_POWER],[1,t.BODY_SLAM],[1,t.SCARY_FACE],[9,t.AQUA_TAIL],[18,t.CALM_MIND],[27,t.MUDDY_WATER],[36,t.ICE_BEAM],[45,t.SHEER_COLD],[54,t.AQUA_RING],[72,t.HYDRO_PUMP],[81,t.DOUBLE_EDGE],[90,t.WATER_SPOUT]],[e.GROUDON]:[[1,t.PRECIPICE_BLADES],[1,t.MUD_SHOT],[1,t.ANCIENT_POWER],[1,t.LAVA_PLUME],[1,t.SCARY_FACE],[9,t.EARTH_POWER],[18,t.BULK_UP],[27,t.EARTHQUAKE],[36,t.HAMMER_ARM],[45,t.FISSURE],[54,t.REST],[72,t.FIRE_BLAST],[81,t.SOLAR_BEAM],[90,t.ERUPTION]],[e.RAYQUAZA]:[[1,t.DRAGON_ASCENT],[1,t.TWISTER],[1,t.ANCIENT_POWER],[1,t.AIR_SLASH],[1,t.SCARY_FACE],[9,t.CRUNCH],[18,t.DRAGON_DANCE],[27,t.EXTREME_SPEED],[36,t.DRAGON_PULSE],[45,t.HYPER_VOICE],[54,t.REST],[63,t.FLY],[72,t.HURRICANE],[81,t.OUTRAGE],[90,t.HYPER_BEAM]],[e.JIRACHI]:[[1,t.CONFUSION],[1,t.WISH],[7,t.SWIFT],[21,t.LIFE_DEW],[28,t.ZEN_HEADBUTT],[35,t.GRAVITY],[42,t.PSYCHIC],[49,t.METEOR_MASH],[56,t.HEALING_WISH],[63,t.REST],[70,t.FUTURE_SIGHT],[77,t.DOUBLE_EDGE],[84,t.COSMIC_POWER],[91,t.LAST_RESORT],[98,t.DOOM_DESIRE]],[e.DEOXYS]:[[1,t.CONFUSION],[1,t.LEER],[1,t.WRAP],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.PSYSHOCK],[31,t.PSYCHIC],[37,t.GRAVITY],[43,t.SKILL_SWAP],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],[e.TURTWIG]:[[1,t.TACKLE],[5,t.WITHDRAW],[5,t.LEAFAGE],[9,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[21,t.BITE],[25,t.MEGA_DRAIN],[29,t.LEECH_SEED],[33,t.SYNTHESIS],[37,t.CRUNCH],[41,t.GIGA_DRAIN],[45,t.LEAF_STORM]],[e.GROTLE]:[[1,t.TACKLE],[1,t.ABSORB],[1,t.WITHDRAW],[1,t.LEAFAGE],[1,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[32,t.LEECH_SEED],[37,t.SYNTHESIS],[42,t.CRUNCH],[47,t.GIGA_DRAIN],[52,t.LEAF_STORM]],[e.TORTERRA]:[[ne,t.EARTHQUAKE],[1,t.TACKLE],[1,t.ABSORB],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.WITHDRAW],[1,t.WOOD_HAMMER],[17,t.CURSE],[22,t.BITE],[27,t.MEGA_DRAIN],[33,t.LEECH_SEED],[39,t.SYNTHESIS],[45,t.CRUNCH],[51,t.GIGA_DRAIN],[57,t.LEAF_STORM],[63,t.HEADLONG_RUSH]],[e.CHIMCHAR]:[[1,t.SCRATCH],[1,t.LEER],[5,t.EMBER],[9,t.TAUNT],[15,t.FURY_SWIPES],[17,t.FLAME_WHEEL],[23,t.NASTY_PLOT],[25,t.TORMENT],[31,t.FACADE],[33,t.FIRE_SPIN],[39,t.ACROBATICS],[41,t.SLACK_OFF],[47,t.FLAMETHROWER]],[e.MONFERNO]:[[ne,t.MACH_PUNCH],[$,t.NASTY_PLOT],[$,t.FACADE],[$,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[9,t.TAUNT],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[36,t.CLOSE_COMBAT],[39,t.FIRE_SPIN],[46,t.ACROBATICS],[49,t.SLACK_OFF],[56,t.FLARE_BLITZ]],[e.INFERNAPE]:[[ne,t.CLOSE_COMBAT],[$,t.TAUNT],[$,t.NASTY_PLOT],[$,t.FACADE],[$,t.SLACK_OFF],[$,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.LEER],[1,t.EMBER],[1,t.MACH_PUNCH],[16,t.FURY_SWIPES],[19,t.FLAME_WHEEL],[26,t.FEINT],[29,t.TORMENT],[42,t.FIRE_SPIN],[47,t.FLARE_BLITZ],[52,t.ACROBATICS],[58,t.CALM_MIND],[65,t.RAGING_FURY]],[e.PIPLUP]:[[1,t.POUND],[4,t.GROWL],[5,t.WATER_GUN],[11,t.CHARM],[15,t.PECK],[18,t.BUBBLE_BEAM],[22,t.SWAGGER],[25,t.FURY_ATTACK],[29,t.BRINE],[32,t.WHIRLPOOL],[36,t.MIST],[39,t.DRILL_PECK],[43,t.HYDRO_PUMP]],[e.PRINPLUP]:[[ne,t.METAL_CLAW],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[37,t.WHIRLPOOL],[42,t.MIST],[46,t.DRILL_PECK],[50,t.HYDRO_PUMP]],[e.EMPOLEON]:[[ne,t.AQUA_JET],[1,t.TACKLE],[1,t.GROWL],[1,t.WATER_GUN],[1,t.CHARM],[1,t.METAL_CLAW],[11,t.SWORDS_DANCE],[15,t.PECK],[19,t.BUBBLE_BEAM],[24,t.SWAGGER],[28,t.FURY_ATTACK],[33,t.BRINE],[39,t.WHIRLPOOL],[46,t.MIST],[52,t.DRILL_PECK],[59,t.HYDRO_PUMP],[66,t.WAVE_CRASH]],[e.STARLY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[17,t.ENDEAVOR],[21,t.WHIRLWIND],[25,t.AERIAL_ACE],[29,t.TAKE_DOWN],[33,t.AGILITY],[37,t.BRAVE_BIRD],[41,t.FINAL_GAMBIT]],[e.STARAVIA]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[9,t.WING_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[38,t.AGILITY],[43,t.BRAVE_BIRD],[48,t.FINAL_GAMBIT]],[e.STARAPTOR]:[[ne,t.CLOSE_COMBAT],[1,t.WING_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[13,t.DOUBLE_TEAM],[18,t.ENDEAVOR],[23,t.WHIRLWIND],[28,t.AERIAL_ACE],[33,t.TAKE_DOWN],[41,t.AGILITY],[49,t.BRAVE_BIRD],[57,t.FINAL_GAMBIT]],[e.BIDOOF]:[[1,t.TACKLE],[1,t.GROWL],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[17,t.HYPER_FANG],[21,t.YAWN],[25,t.CRUNCH],[29,t.TAKE_DOWN],[33,t.SUPER_FANG],[37,t.SWORDS_DANCE],[41,t.AMNESIA],[45,t.SUPERPOWER],[49,t.CURSE]],[e.BIBAREL]:[[ne,t.WATER_GUN],[1,t.TACKLE],[1,t.GROWL],[1,t.AQUA_JET],[1,t.ROTOTILLER],[5,t.DEFENSE_CURL],[9,t.ROLLOUT],[13,t.HEADBUTT],[18,t.HYPER_FANG],[23,t.YAWN],[28,t.CRUNCH],[33,t.TAKE_DOWN],[38,t.SUPER_FANG],[43,t.SWORDS_DANCE],[48,t.AMNESIA],[53,t.SUPERPOWER],[58,t.CURSE]],[e.KRICKETOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[6,t.STRUGGLE_BUG],[16,t.BUG_BITE]],[e.KRICKETUNE]:[[ne,t.FURY_CUTTER],[1,t.TACKLE],[1,t.GROWL],[1,t.BIDE],[1,t.STRUGGLE_BUG],[1,t.BUG_BITE],[14,t.ABSORB],[18,t.SING],[22,t.FOCUS_ENERGY],[26,t.SLASH],[30,t.X_SCISSOR],[34,t.SCREECH],[36,t.FELL_STINGER],[38,t.TAUNT],[42,t.NIGHT_SLASH],[44,t.STICKY_WEB],[46,t.BUG_BUZZ],[50,t.PERISH_SONG]],[e.SHINX]:[[1,t.TACKLE],[1,t.LEER],[4,t.THUNDER_SHOCK],[8,t.CHARGE],[12,t.BITE],[16,t.SPARK],[20,t.ROAR],[24,t.VOLT_SWITCH],[28,t.SCARY_FACE],[32,t.THUNDER_WAVE],[36,t.CRUNCH],[40,t.DISCHARGE],[44,t.SWAGGER],[48,t.WILD_CHARGE]],[e.LUXIO]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[31,t.VOLT_SWITCH],[36,t.SCARY_FACE],[42,t.THUNDER_WAVE],[48,t.CRUNCH],[54,t.DISCHARGE],[60,t.SWAGGER],[68,t.WILD_CHARGE]],[e.LUXRAY]:[[1,t.TACKLE],[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.ELECTRIC_TERRAIN],[12,t.BITE],[18,t.SPARK],[24,t.ROAR],[33,t.VOLT_SWITCH],[40,t.SCARY_FACE],[48,t.THUNDER_WAVE],[56,t.CRUNCH],[64,t.DISCHARGE],[72,t.SWAGGER],[80,t.WILD_CHARGE]],[e.BUDEW]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.WORRY_SEED]],[e.ROSERADE]:[[1,t.POISON_STING],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.PETAL_DANCE],[1,t.TOXIC],[1,t.GIGA_DRAIN],[1,t.SWEET_SCENT],[1,t.SYNTHESIS],[1,t.INGRAIN],[1,t.AROMATHERAPY],[1,t.MAGICAL_LEAF],[1,t.WORRY_SEED],[1,t.TOXIC_SPIKES],[1,t.PETAL_BLIZZARD],[1,t.GRASSY_TERRAIN],[1,t.VENOM_DRENCH]],[e.CRANIDOS]:[[1,t.HEADBUTT],[1,t.LEER],[6,t.FOCUS_ENERGY],[10,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[33,t.ANCIENT_POWER],[37,t.ZEN_HEADBUTT],[42,t.SCREECH],[46,t.HEAD_SMASH]],[e.RAMPARDOS]:[[ne,t.ENDEAVOR],[1,t.HEADBUTT],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.PURSUIT],[15,t.TAKE_DOWN],[19,t.SCARY_FACE],[24,t.ASSURANCE],[28,t.CHIP_AWAY],[36,t.ANCIENT_POWER],[43,t.ZEN_HEADBUTT],[51,t.SCREECH],[58,t.HEAD_SMASH]],[e.SHIELDON]:[[1,t.TACKLE],[1,t.PROTECT],[6,t.TAUNT],[10,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[33,t.ENDURE],[37,t.METAL_BURST],[42,t.IRON_HEAD],[46,t.HEAVY_SLAM]],[e.BASTIODON]:[[ne,t.BLOCK],[$,t.WIDE_GUARD],[1,t.TACKLE],[1,t.PROTECT],[1,t.TAUNT],[1,t.METAL_SOUND],[15,t.TAKE_DOWN],[19,t.IRON_DEFENSE],[24,t.SWAGGER],[28,t.ANCIENT_POWER],[36,t.ENDURE],[43,t.METAL_BURST],[51,t.IRON_HEAD],[58,t.HEAVY_SLAM]],[e.BURMY]:[[1,t.PROTECT],[1,t.STRUGGLE_BUG],[10,t.TACKLE],[15,t.BUG_BITE],[20,t.STRING_SHOT]],[e.WORMADAM]:[[ne,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.RAZOR_LEAF],[29,t.GROWTH],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.LEAF_STORM],[50,t.BUG_BUZZ]],[e.MOTHIM]:[[ne,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.BUG_BITE],[10,t.PROTECT],[15,t.BUG_BITE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.GUST],[29,t.POISON_POWDER],[32,t.PSYBEAM],[35,t.ROOST],[38,t.STRUGGLE_BUG],[41,t.AIR_SLASH],[44,t.PSYCHIC],[47,t.LUNGE],[50,t.BUG_BUZZ]],[e.COMBEE]:[[1,t.GUST],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG]],[e.VESPIQUEN]:[[ne,t.SLASH],[1,t.GUST],[1,t.POISON_STING],[1,t.CONFUSE_RAY],[1,t.SWEET_SCENT],[1,t.BUG_BITE],[1,t.STRUGGLE_BUG],[4,t.FURY_CUTTER],[8,t.AROMATIC_MIST],[12,t.FELL_STINGER],[16,t.FURY_SWIPES],[20,t.SWAGGER],[24,t.ROOST],[28,t.AIR_SLASH],[32,t.POWER_GEM],[36,t.TOXIC],[40,t.ATTACK_ORDER],[40,t.DEFEND_ORDER],[40,t.HEAL_ORDER],[44,t.DESTINY_BOND]],[e.PACHIRISU]:[[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.BIDE],[5,t.QUICK_ATTACK],[9,t.CHARM],[13,t.SPARK],[17,t.ENDURE],[19,t.NUZZLE],[21,t.SWIFT],[25,t.ELECTRO_BALL],[29,t.SWEET_KISS],[33,t.THUNDER_WAVE],[37,t.SUPER_FANG],[41,t.DISCHARGE],[45,t.LAST_RESORT],[49,t.THUNDER]],[e.BUIZEL]:[[1,t.TACKLE],[4,t.GROWL],[7,t.SOAK],[11,t.QUICK_ATTACK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[27,t.DOUBLE_HIT],[31,t.WHIRLPOOL],[35,t.LIQUIDATION],[38,t.AQUA_TAIL],[41,t.AGILITY],[45,t.HYDRO_PUMP],[49,t.WAVE_CRASH]],[e.FLOATZEL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.QUICK_ATTACK],[1,t.CRUNCH],[1,t.ICE_FANG],[1,t.SOAK],[15,t.WATER_GUN],[18,t.BITE],[21,t.SWIFT],[24,t.AQUA_JET],[29,t.DOUBLE_HIT],[35,t.WHIRLPOOL],[41,t.LIQUIDATION],[46,t.AQUA_TAIL],[51,t.AGILITY],[57,t.HYDRO_PUMP],[62,t.WAVE_CRASH]],[e.CHERUBI]:[[1,t.TACKLE],[1,t.MORNING_SUN],[5,t.LEAFAGE],[10,t.GROWTH],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[26,t.LEECH_SEED],[30,t.TAKE_DOWN],[35,t.PETAL_BLIZZARD],[40,t.WORRY_SEED],[45,t.SOLAR_BEAM]],[e.CHERRIM]:[[ne,t.SUNNY_DAY],[1,t.TACKLE],[1,t.GROWTH],[1,t.MORNING_SUN],[1,t.FLOWER_SHIELD],[1,t.LEAFAGE],[15,t.HELPING_HAND],[20,t.MAGICAL_LEAF],[28,t.LEECH_SEED],[34,t.TAKE_DOWN],[41,t.PETAL_BLIZZARD],[48,t.WORRY_SEED],[55,t.SOLAR_BEAM],[62,t.PETAL_DANCE]],[e.SHELLOS]:[[1,t.WATER_GUN],[1,t.MUD_SLAP],[5,t.HARDEN],[10,t.RECOVER],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[31,t.MUDDY_WATER],[35,t.EARTH_POWER],[40,t.RAIN_DANCE],[45,t.MEMENTO]],[e.GASTRODON]:[[1,t.WATER_GUN],[1,t.RECOVER],[1,t.HARDEN],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[15,t.WATER_PULSE],[20,t.ANCIENT_POWER],[25,t.BODY_SLAM],[33,t.MUDDY_WATER],[39,t.EARTH_POWER],[46,t.RAIN_DANCE],[53,t.MEMENTO]],[e.AMBIPOM]:[[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.TAIL_WHIP],[1,t.ASTONISH],[11,t.BATON_PASS],[15,t.TICKLE],[18,t.FURY_SWIPES],[22,t.SWIFT],[25,t.SCREECH],[29,t.AGILITY],[32,t.DOUBLE_HIT],[36,t.FLING],[39,t.NASTY_PLOT],[43,t.LAST_RESORT]],[e.DRIFLOON]:[[1,t.MINIMIZE],[1,t.ASTONISH],[1,t.CONSTRICT],[4,t.GUST],[8,t.FOCUS_ENERGY],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[29,t.SELF_DESTRUCT],[32,t.DESTINY_BOND],[36,t.BATON_PASS],[40,t.TAILWIND],[44,t.EXPLOSION]],[e.DRIFBLIM]:[[ne,t.PHANTOM_FORCE],[1,t.GUST],[1,t.MINIMIZE],[1,t.FOCUS_ENERGY],[1,t.ASTONISH],[1,t.CONSTRICT],[1,t.STRENGTH_SAP],[12,t.PAYBACK],[16,t.HEX],[20,t.SHADOW_BALL],[24,t.STOCKPILE],[24,t.SPIT_UP],[24,t.SWALLOW],[31,t.SELF_DESTRUCT],[36,t.DESTINY_BOND],[42,t.BATON_PASS],[48,t.TAILWIND],[54,t.EXPLOSION]],[e.BUNEARY]:[[1,t.FRUSTRATION],[1,t.POUND],[1,t.SPLASH],[4,t.DEFENSE_CURL],[8,t.BABY_DOLL_EYES],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH]],[e.LOPUNNY]:[[ne,t.RETURN],[1,t.FRUSTRATION],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.SPLASH],[1,t.MIRROR_COAT],[1,t.MAGIC_COAT],[1,t.BABY_DOLL_EYES],[1,t.ROTOTILLER],[12,t.AFTER_YOU],[16,t.QUICK_ATTACK],[20,t.DOUBLE_KICK],[24,t.CHARM],[28,t.BATON_PASS],[32,t.HEADBUTT],[36,t.AGILITY],[40,t.ENTRAINMENT],[44,t.FLATTER],[48,t.BOUNCE],[52,t.HEALING_WISH],[56,t.HIGH_JUMP_KICK]],[e.MISMAGIUS]:[[$,t.CONFUSION],[$,t.CONFUSE_RAY],[$,t.MEAN_LOOK],[$,t.HEX],[$,t.PSYBEAM],[$,t.PAIN_SPLIT],[$,t.PAYBACK],[$,t.SHADOW_BALL],[$,t.PERISH_SONG],[1,t.GROWL],[1,t.SPITE],[1,t.PSYWAVE],[1,t.LUCKY_CHANT],[1,t.ASTONISH],[1,t.MAGICAL_LEAF],[1,t.POWER_GEM],[1,t.PHANTOM_FORCE],[1,t.MYSTICAL_FIRE]],[e.HONCHKROW]:[[1,t.PECK],[1,t.ASTONISH],[1,t.GUST],[1,t.HAZE],[1,t.WING_ATTACK],[1,t.NIGHT_SHADE],[1,t.ASSURANCE],[1,t.TAUNT],[1,t.MEAN_LOOK],[1,t.SUCKER_PUNCH],[1,t.NIGHT_SLASH],[1,t.TORMENT],[1,t.QUASH],[1,t.PURSUIT],[25,t.SWAGGER],[35,t.NASTY_PLOT],[45,t.FOUL_PLAY],[55,t.DARK_PULSE],[65,t.COMEUPPANCE]],[e.GLAMEOW]:[[1,t.FAKE_OUT],[5,t.SCRATCH],[8,t.GROWL],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[41,t.SUCKER_PUNCH],[44,t.ATTRACT],[48,t.HONE_CLAWS],[50,t.PLAY_ROUGH]],[e.PURUGLY]:[[ne,t.SWAGGER],[1,t.SCRATCH],[1,t.PLAY_ROUGH],[1,t.SUCKER_PUNCH],[1,t.GROWL],[1,t.FAKE_OUT],[13,t.HYPNOSIS],[17,t.AERIAL_ACE],[20,t.FURY_SWIPES],[25,t.CHARM],[29,t.TAUNT],[32,t.RETALIATE],[37,t.SLASH],[45,t.BODY_SLAM],[52,t.ATTRACT],[60,t.HONE_CLAWS]],[e.CHINGLING]:[[1,t.WRAP],[1,t.PSYWAVE],[4,t.GROWL],[7,t.ASTONISH],[10,t.CONFUSION],[13,t.YAWN],[16,t.LAST_RESORT],[19,t.ENTRAINMENT],[32,t.UPROAR]],[e.STUNKY]:[[1,t.SCRATCH],[1,t.POISON_GAS],[3,t.FEINT],[6,t.SMOKESCREEN],[9,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[36,t.NIGHT_SLASH],[39,t.BELCH],[42,t.EXPLOSION]],[e.SKUNTANK]:[[ne,t.FLAMETHROWER],[1,t.SCRATCH],[1,t.SMOKESCREEN],[1,t.POISON_GAS],[1,t.FEINT],[1,t.ACID_SPRAY],[12,t.FURY_SWIPES],[15,t.FOCUS_ENERGY],[18,t.BITE],[21,t.VENOSHOCK],[24,t.SCREECH],[27,t.TOXIC],[30,t.SUCKER_PUNCH],[33,t.MEMENTO],[38,t.NIGHT_SLASH],[43,t.BELCH],[48,t.EXPLOSION]],[e.BRONZOR]:[[1,t.TACKLE],[1,t.CONFUSION],[4,t.CONFUSE_RAY],[8,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[36,t.IRON_DEFENSE],[40,t.METAL_SOUND],[44,t.FUTURE_SIGHT],[45,t.HEAL_BLOCK]],[e.BRONZONG]:[[ne,t.BLOCK],[1,t.TACKLE],[1,t.CONFUSION],[1,t.CONFUSE_RAY],[1,t.SUNNY_DAY],[1,t.WEATHER_BALL],[1,t.PAYBACK],[12,t.IMPRISON],[16,t.GYRO_BALL],[20,t.HYPNOSIS],[24,t.SAFEGUARD],[28,t.EXTRASENSORY],[32,t.HEAVY_SLAM],[38,t.IRON_DEFENSE],[44,t.METAL_SOUND],[50,t.FUTURE_SIGHT],[52,t.HEAL_BLOCK],[56,t.RAIN_DANCE]],[e.BONSLY]:[[1,t.FAKE_TEARS],[1,t.COPYCAT],[1,t.TACKLE],[4,t.FLAIL],[8,t.ROCK_THROW],[12,t.BLOCK],[16,t.MIMIC],[20,t.ROCK_TOMB],[24,t.TEARFUL_LOOK],[28,t.SUCKER_PUNCH],[32,t.ROCK_SLIDE],[36,t.LOW_KICK],[40,t.COUNTER],[44,t.DOUBLE_EDGE]],[e.MIME_JR]:[[1,t.POUND],[1,t.COPYCAT],[1,t.BARRIER],[1,t.TICKLE],[4,t.BATON_PASS],[8,t.ENCORE],[12,t.CONFUSION],[16,t.MIMIC],[20,t.PROTECT],[24,t.RECYCLE],[28,t.PSYBEAM],[32,t.ROLE_PLAY],[36,t.LIGHT_SCREEN],[36,t.REFLECT],[36,t.SAFEGUARD],[40,t.SUCKER_PUNCH],[44,t.DAZZLING_GLEAM],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.HAPPINY]:[[1,t.POUND],[1,t.COPYCAT],[4,t.DEFENSE_CURL],[8,t.SWEET_KISS],[12,t.DISARMING_VOICE],[16,t.COVET],[20,t.CHARM]],[e.CHATOT]:[[1,t.PECK],[1,t.TAUNT],[1,t.HYPER_VOICE],[1,t.CHATTER],[1,t.CONFIDE],[5,t.GROWL],[9,t.MIRROR_MOVE],[13,t.SING],[17,t.FURY_ATTACK],[29,t.ROUND],[33,t.MIMIC],[37,t.ECHOED_VOICE],[41,t.ROOST],[45,t.UPROAR],[49,t.SYNCHRONOISE],[50,t.FEATHER_DANCE]],[e.SPIRITOMB]:[[1,t.NIGHT_SHADE],[1,t.CONFUSE_RAY],[1,t.PURSUIT],[5,t.SHADOW_SNEAK],[10,t.SPITE],[15,t.PAYBACK],[20,t.NASTY_PLOT],[25,t.HEX],[30,t.MEMENTO],[35,t.SUCKER_PUNCH],[40,t.CURSE],[45,t.SHADOW_BALL],[50,t.DARK_PULSE],[55,t.HYPNOSIS],[60,t.DREAM_EATER]],[e.GIBLE]:[[1,t.TACKLE],[1,t.SAND_TOMB],[6,t.SAND_ATTACK],[12,t.DRAGON_BREATH],[18,t.BULLDOZE],[25,t.BITE],[30,t.SLASH],[36,t.DRAGON_CLAW],[42,t.DIG],[48,t.SANDSTORM],[54,t.TAKE_DOWN],[60,t.DRAGON_RUSH]],[e.GABITE]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[50,t.DIG],[58,t.SANDSTORM],[66,t.TAKE_DOWN],[74,t.DRAGON_RUSH]],[e.GARCHOMP]:[[ne,t.CRUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.DRAGON_BREATH],[1,t.SAND_TOMB],[1,t.DUAL_CHOP],[18,t.BULLDOZE],[27,t.BITE],[34,t.SLASH],[42,t.DRAGON_CLAW],[52,t.DIG],[62,t.SANDSTORM],[72,t.TAKE_DOWN],[82,t.DRAGON_RUSH]],[e.MUNCHLAX]:[[1,t.TACKLE],[1,t.LICK],[1,t.ODOR_SLEUTH],[4,t.DEFENSE_CURL],[8,t.RECYCLE],[12,t.COVET],[16,t.BITE],[20,t.STOCKPILE],[20,t.SWALLOW],[24,t.SCREECH],[28,t.BODY_SLAM],[32,t.FLING],[36,t.AMNESIA],[40,t.METRONOME],[44,t.FLAIL],[48,t.BELLY_DRUM],[52,t.LAST_RESORT]],[e.RIOLU]:[[1,t.QUICK_ATTACK],[1,t.ENDURE],[4,t.FEINT],[8,t.METAL_CLAW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.ROCK_SMASH],[24,t.VACUUM_WAVE],[28,t.SCREECH],[32,t.QUICK_GUARD],[36,t.FORCE_PALM],[40,t.SWORDS_DANCE],[44,t.HELPING_HAND],[48,t.COPYCAT],[52,t.FINAL_GAMBIT],[56,t.REVERSAL]],[e.LUCARIO]:[[ne,t.AURA_SPHERE],[1,t.QUICK_ATTACK],[1,t.ENDURE],[1,t.SCREECH],[1,t.REVERSAL],[1,t.DETECT],[1,t.METAL_CLAW],[1,t.ROCK_SMASH],[1,t.HELPING_HAND],[1,t.FEINT],[1,t.COPYCAT],[1,t.VACUUM_WAVE],[1,t.FINAL_GAMBIT],[1,t.LIFE_DEW],[12,t.COUNTER],[16,t.WORK_UP],[20,t.FORCE_PALM],[24,t.CALM_MIND],[28,t.METAL_SOUND],[32,t.QUICK_GUARD],[36,t.BONE_RUSH],[40,t.SWORDS_DANCE],[44,t.HEAL_PULSE],[48,t.METEOR_MASH],[52,t.DRAGON_PULSE],[56,t.EXTREME_SPEED],[60,t.CLOSE_COMBAT]],[e.HIPPOPOTAS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.BITE],[8,t.YAWN],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[36,t.REST],[40,t.EARTHQUAKE],[44,t.DOUBLE_EDGE],[48,t.FISSURE],[52,t.SLACK_OFF]],[e.HIPPOWDON]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.YAWN],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[12,t.SAND_TOMB],[16,t.DIG],[20,t.CRUNCH],[24,t.SANDSTORM],[28,t.TAKE_DOWN],[32,t.ROAR],[38,t.REST],[44,t.EARTHQUAKE],[50,t.DOUBLE_EDGE],[56,t.FISSURE],[62,t.SLACK_OFF]],[e.SKORUPI]:[[1,t.POISON_STING],[1,t.LEER],[3,t.HONE_CLAWS],[6,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[42,t.X_SCISSOR],[45,t.ACUPRESSURE],[48,t.CRUNCH]],[e.DRAPION]:[[1,t.POISON_STING],[1,t.LEER],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.HONE_CLAWS],[1,t.FELL_STINGER],[9,t.POISON_FANG],[12,t.BITE],[15,t.TOXIC_SPIKES],[18,t.BUG_BITE],[21,t.VENOSHOCK],[24,t.KNOCK_OFF],[27,t.SCARY_FACE],[30,t.PIN_MISSILE],[33,t.TOXIC],[36,t.NIGHT_SLASH],[39,t.CROSS_POISON],[44,t.X_SCISSOR],[49,t.ACUPRESSURE],[54,t.CRUNCH]],[e.CROAGUNK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[4,t.ASTONISH],[8,t.TAUNT],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[40,t.NASTY_PLOT],[44,t.SLUDGE_BOMB],[48,t.BELCH]],[e.TOXICROAK]:[[1,t.POISON_STING],[1,t.MUD_SLAP],[1,t.TAUNT],[1,t.ASTONISH],[12,t.FLATTER],[16,t.LOW_KICK],[20,t.VENOSHOCK],[24,t.SUCKER_PUNCH],[28,t.SWAGGER],[32,t.POISON_JAB],[36,t.TOXIC],[42,t.NASTY_PLOT],[48,t.SLUDGE_BOMB],[54,t.BELCH]],[e.CARNIVINE]:[[1,t.BIND],[1,t.GROWTH],[1,t.LEAFAGE],[7,t.BITE],[11,t.VINE_WHIP],[17,t.SWEET_SCENT],[21,t.INGRAIN],[27,t.GRASS_KNOT],[31,t.LEAF_TORNADO],[37,t.STOCKPILE],[37,t.SPIT_UP],[37,t.SWALLOW],[41,t.CRUNCH],[47,t.SEED_BOMB],[50,t.POWER_WHIP]],[e.FINNEON]:[[1,t.POUND],[6,t.WATER_GUN],[13,t.RAIN_DANCE],[17,t.GUST],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[33,t.AQUA_RING],[38,t.WHIRLPOOL],[42,t.U_TURN],[45,t.BOUNCE],[49,t.TAILWIND],[54,t.SOAK]],[e.LUMINEON]:[[1,t.POUND],[1,t.GUST],[1,t.WATER_GUN],[1,t.SOAK],[13,t.RAIN_DANCE],[22,t.WATER_PULSE],[26,t.ATTRACT],[29,t.SAFEGUARD],[35,t.AQUA_RING],[42,t.WHIRLPOOL],[48,t.U_TURN],[53,t.BOUNCE],[59,t.TAILWIND]],[e.MANTYKE]:[[1,t.TACKLE],[1,t.WATER_GUN],[4,t.SUPERSONIC],[8,t.WING_ATTACK],[12,t.WATER_PULSE],[16,t.WIDE_GUARD],[20,t.AGILITY],[24,t.BUBBLE_BEAM],[28,t.HEADBUTT],[32,t.AIR_SLASH],[36,t.AQUA_RING],[40,t.BOUNCE],[44,t.TAKE_DOWN],[48,t.HYDRO_PUMP]],[e.SNOVER]:[[1,t.LEER],[1,t.POWDER_SNOW],[5,t.LEAFAGE],[10,t.MIST],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[41,t.WOOD_HAMMER],[45,t.BLIZZARD],[50,t.SHEER_COLD]],[e.ABOMASNOW]:[[ne,t.ICE_PUNCH],[1,t.LEER],[1,t.MIST],[1,t.POWDER_SNOW],[1,t.LEAFAGE],[1,t.AURORA_VEIL],[15,t.ICE_SHARD],[20,t.RAZOR_LEAF],[25,t.ICY_WIND],[30,t.SWAGGER],[35,t.INGRAIN],[43,t.WOOD_HAMMER],[49,t.BLIZZARD],[56,t.SHEER_COLD]],[e.WEAVILE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.SLASH],[1,t.BEAT_UP],[1,t.TAUNT],[1,t.ASSURANCE],[1,t.ICE_SHARD],[1,t.EMBARGO],[18,t.METAL_CLAW],[24,t.ICY_WIND],[30,t.FURY_SWIPES],[36,t.HONE_CLAWS],[42,t.FLING],[48,t.NASTY_PLOT],[54,t.SCREECH],[60,t.NIGHT_SLASH],[66,t.DARK_PULSE]],[e.MAGNEZONE]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.BARRIER],[1,t.TRI_ATTACK],[1,t.MIRROR_COAT],[1,t.MAGNETIC_FLUX],[1,t.ELECTRIC_TERRAIN],[12,t.ELECTRO_BALL],[16,t.GYRO_BALL],[20,t.SPARK],[24,t.SCREECH],[28,t.MAGNET_RISE],[34,t.FLASH_CANNON],[40,t.DISCHARGE],[46,t.METAL_SOUND],[52,t.LIGHT_SCREEN],[58,t.LOCK_ON],[64,t.ZAP_CANNON]],[e.LICKILICKY]:[[1,t.SUPERSONIC],[1,t.DEFENSE_CURL],[1,t.LICK],[1,t.TACKLE],[1,t.ROLLOUT],[1,t.WRING_OUT],[6,t.REST],[18,t.WRAP],[24,t.DISABLE],[30,t.STOMP],[36,t.KNOCK_OFF],[42,t.SCREECH],[48,t.SLAM],[54,t.POWER_WHIP],[60,t.BELLY_DRUM]],[e.RHYPERIOR]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.HAMMER_ARM],[1,t.SMACK_DOWN],[1,t.BULLDOZE],[15,t.HORN_ATTACK],[20,t.SCARY_FACE],[25,t.STOMP],[30,t.ROCK_BLAST],[35,t.DRILL_RUN],[40,t.TAKE_DOWN],[47,t.EARTHQUAKE],[54,t.STONE_EDGE],[61,t.MEGAHORN],[68,t.HORN_DRILL],[75,t.ROCK_WRECKER]],[e.TANGROWTH]:[[1,t.BIND],[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.BLOCK],[1,t.CONSTRICT],[12,t.MEGA_DRAIN],[16,t.VINE_WHIP],[20,t.POISON_POWDER],[24,t.DOUBLE_HIT],[28,t.KNOCK_OFF],[32,t.GIGA_DRAIN],[34,t.ANCIENT_POWER],[36,t.SLEEP_POWDER],[40,t.SLAM],[44,t.TICKLE],[48,t.POWER_WHIP],[52,t.INGRAIN],[56,t.GRASSY_TERRAIN]],[e.ELECTIVIRE]:[[1,t.LEER],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[12,t.SWIFT],[16,t.SHOCK_WAVE],[20,t.THUNDER_WAVE],[24,t.SCREECH],[28,t.THUNDER_PUNCH],[34,t.DISCHARGE],[40,t.LOW_KICK],[46,t.THUNDERBOLT],[52,t.LIGHT_SCREEN],[58,t.THUNDER],[64,t.GIGA_IMPACT]],[e.MAGMORTAR]:[[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.SMOG],[12,t.CLEAR_SMOG],[16,t.FLAME_WHEEL],[20,t.CONFUSE_RAY],[24,t.SCARY_FACE],[28,t.FIRE_PUNCH],[34,t.LAVA_PLUME],[40,t.LOW_KICK],[46,t.FLAMETHROWER],[52,t.SUNNY_DAY],[58,t.FIRE_BLAST],[64,t.HYPER_BEAM]],[e.TOGEKISS]:[[ne,t.AIR_SLASH],[1,t.POUND],[1,t.DOUBLE_EDGE],[1,t.GROWL],[1,t.METRONOME],[1,t.SKY_ATTACK],[1,t.TRI_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.EXTREME_SPEED],[1,t.ANCIENT_POWER],[1,t.FOLLOW_ME],[1,t.WISH],[1,t.YAWN],[1,t.LAST_RESORT],[1,t.AURA_SPHERE],[1,t.AFTER_YOU],[1,t.FAIRY_WIND],[1,t.LIFE_DEW]],[e.YANMEGA]:[[$,t.HYPNOSIS],[1,t.TACKLE],[1,t.DOUBLE_TEAM],[1,t.AIR_CUTTER],[1,t.NIGHT_SLASH],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.BUG_BUZZ],[14,t.QUICK_ATTACK],[17,t.DETECT],[22,t.SUPERSONIC],[27,t.UPROAR],[30,t.BUG_BITE],[33,t.ANCIENT_POWER],[38,t.FEINT],[43,t.SLASH],[46,t.SCREECH],[49,t.U_TURN]],[e.LEAFEON]:[[ne,t.SAPPY_SEED],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.RAZOR_LEAF],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.LEECH_SEED],[30,t.MAGICAL_LEAF],[35,t.SYNTHESIS],[40,t.SUNNY_DAY],[45,t.GIGA_DRAIN],[50,t.SWORDS_DANCE],[55,t.LEAF_BLADE],[60,t.LAST_RESORT]],[e.GLACEON]:[[ne,t.FREEZY_FROST],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.SWIFT],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.ICY_WIND],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.ICE_SHARD],[30,t.BITE],[35,t.ICE_FANG],[40,t.SNOWSCAPE],[45,t.FREEZE_DRY],[50,t.MIRROR_COAT],[55,t.BLIZZARD],[60,t.LAST_RESORT]],[e.GLISCOR]:[[1,t.POISON_STING],[1,t.SAND_ATTACK],[1,t.HARDEN],[1,t.POISON_TAIL],[1,t.SLASH],[1,t.POISON_JAB],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[13,t.QUICK_ATTACK],[16,t.FURY_CUTTER],[19,t.KNOCK_OFF],[22,t.ACROBATICS],[27,t.NIGHT_SLASH],[30,t.U_TURN],[35,t.SCREECH],[40,t.X_SCISSOR],[45,t.CRABHAMMER],[50,t.SWORDS_DANCE]],[e.MAMOSWINE]:[[ne,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.FLAIL],[1,t.POWDER_SNOW],[1,t.MUD_SLAP],[1,t.ODOR_SLEUTH],[1,t.ANCIENT_POWER],[1,t.ICE_FANG],[15,t.ICE_SHARD],[20,t.MIST],[25,t.ENDURE],[30,t.ICY_WIND],[37,t.AMNESIA],[44,t.TAKE_DOWN],[51,t.EARTHQUAKE],[58,t.BLIZZARD],[65,t.THRASH]],[e.PORYGON_Z]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CONVERSION],[1,t.RECYCLE],[1,t.MAGNET_RISE],[1,t.NASTY_PLOT],[1,t.TRICK_ROOM],[15,t.THUNDER_SHOCK],[20,t.PSYBEAM],[25,t.CONVERSION_2],[30,t.AGILITY],[35,t.RECOVER],[40,t.DISCHARGE],[45,t.TRI_ATTACK],[50,t.MAGIC_COAT],[55,t.LOCK_ON],[60,t.ZAP_CANNON],[65,t.HYPER_BEAM]],[e.GALLADE]:[[ne,t.SLASH],[1,t.LEER],[1,t.GROWL],[1,t.PSYBEAM],[1,t.CONFUSION],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DOUBLE_TEAM],[1,t.DREAM_EATER],[1,t.CHARM],[1,t.FURY_CUTTER],[1,t.FUTURE_SIGHT],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.LEAF_BLADE],[1,t.NIGHT_SLASH],[1,t.SACRED_SWORD],[1,t.DISARMING_VOICE],[1,t.DRAINING_KISS],[1,t.LIFE_DEW],[1,t.AQUA_CUTTER],[9,t.HELPING_HAND],[12,t.FEINT],[15,t.TELEPORT],[18,t.AERIAL_ACE],[23,t.FALSE_SWIPE],[28,t.PROTECT],[35,t.SWORDS_DANCE],[42,t.PSYCHO_CUT],[49,t.HEAL_PULSE],[56,t.WIDE_GUARD],[56,t.QUICK_GUARD],[63,t.CLOSE_COMBAT]],[e.PROBOPASS]:[[ne,t.TRI_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.IRON_DEFENSE],[1,t.BLOCK],[1,t.ROCK_THROW],[1,t.GRAVITY],[1,t.MAGNET_RISE],[1,t.WIDE_GUARD],[1,t.MAGNETIC_FLUX],[13,t.THUNDER_WAVE],[16,t.REST],[19,t.SPARK],[22,t.ROCK_SLIDE],[25,t.POWER_GEM],[28,t.ROCK_BLAST],[31,t.DISCHARGE],[34,t.SANDSTORM],[37,t.EARTH_POWER],[40,t.STONE_EDGE],[43,t.ZAP_CANNON],[43,t.LOCK_ON]],[e.DUSKNOIR]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.BIND],[1,t.LEER],[1,t.DISABLE],[1,t.ASTONISH],[1,t.PURSUIT],[1,t.SHADOW_PUNCH],[1,t.GRAVITY],[1,t.SHADOW_SNEAK],[12,t.CONFUSE_RAY],[16,t.NIGHT_SHADE],[20,t.PAYBACK],[24,t.WILL_O_WISP],[28,t.MEAN_LOOK],[32,t.HEX],[36,t.CURSE],[42,t.SHADOW_BALL],[48,t.FUTURE_SIGHT],[54,t.DESTINY_BOND]],[e.FROSLASS]:[[ne,t.HEX],[1,t.HEADBUTT],[1,t.LEER],[1,t.BITE],[1,t.DOUBLE_TEAM],[1,t.POWDER_SNOW],[1,t.PROTECT],[1,t.DESTINY_BOND],[1,t.WEATHER_BALL],[1,t.CRUNCH],[1,t.ASTONISH],[1,t.ICE_FANG],[1,t.OMINOUS_WIND],[15,t.ICE_SHARD],[20,t.DRAINING_KISS],[25,t.ICY_WIND],[30,t.FROST_BREATH],[35,t.CONFUSE_RAY],[40,t.SNOWSCAPE],[47,t.WILL_O_WISP],[54,t.AURORA_VEIL],[61,t.SHADOW_BALL],[68,t.BLIZZARD]],[e.ROTOM]:[[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],[e.UXIE]:[[$,t.TRI_ATTACK],[$,t.SNORE],[$,t.SAFEGUARD],[$,t.IRON_TAIL],[$,t.PSYCHO_CUT],[$,t.WONDER_ROOM],[$,t.MAGIC_ROOM],[$,t.ROUND],[$,t.ALLY_SWITCH],[$,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.ENDURE],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.AMNESIA],[49,t.PSYCHIC],[56,t.YAWN],[63,t.FUTURE_SIGHT],[70,t.FLAIL],[77,t.MEMENTO],[84,t.MYSTICAL_POWER]],[e.MESPRIT]:[[$,t.TRI_ATTACK],[$,t.SNORE],[$,t.SAFEGUARD],[$,t.IRON_TAIL],[$,t.PSYCHO_CUT],[$,t.WONDER_ROOM],[$,t.MAGIC_ROOM],[$,t.ROUND],[$,t.ALLY_SWITCH],[$,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.PROTECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.CHARM],[49,t.PSYCHIC],[56,t.FLATTER],[63,t.FUTURE_SIGHT],[70,t.COPYCAT],[77,t.HEALING_WISH],[84,t.MYSTICAL_POWER]],[e.AZELF]:[[$,t.SELF_DESTRUCT],[$,t.TRI_ATTACK],[$,t.SNORE],[$,t.SAFEGUARD],[$,t.IRON_TAIL],[$,t.PAYBACK],[$,t.ASSURANCE],[$,t.PSYCHO_CUT],[$,t.WONDER_ROOM],[$,t.MAGIC_ROOM],[$,t.ROUND],[$,t.ALLY_SWITCH],[$,t.EXPANDING_FORCE],[1,t.CONFUSION],[1,t.REST],[7,t.SWIFT],[14,t.DETECT],[21,t.PSYBEAM],[28,t.IMPRISON],[35,t.EXTRASENSORY],[42,t.NASTY_PLOT],[49,t.PSYCHIC],[56,t.UPROAR],[63,t.FUTURE_SIGHT],[70,t.LAST_RESORT],[77,t.EXPLOSION],[84,t.MYSTICAL_POWER]],[e.DIALGA]:[[1,t.SCARY_FACE],[1,t.METAL_CLAW],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.FLASH_CANNON],[40,t.DRAGON_CLAW],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.METAL_BURST],[72,t.EARTH_POWER],[80,t.IRON_TAIL],[88,t.ROAR_OF_TIME]],[e.PALKIA]:[[1,t.SCARY_FACE],[1,t.WATER_PULSE],[8,t.DRAGON_BREATH],[16,t.ANCIENT_POWER],[24,t.SLASH],[32,t.AQUA_RING],[48,t.AURA_SPHERE],[56,t.POWER_GEM],[64,t.AQUA_TAIL],[72,t.EARTH_POWER],[80,t.SPACIAL_REND],[88,t.HYDRO_PUMP]],[e.HEATRAN]:[[1,t.LEER],[1,t.FIRE_SPIN],[6,t.METAL_CLAW],[12,t.ANCIENT_POWER],[18,t.FIRE_FANG],[24,t.SCARY_FACE],[30,t.IRON_HEAD],[36,t.CRUNCH],[42,t.LAVA_PLUME],[48,t.METAL_SOUND],[54,t.EARTH_POWER],[60,t.HEAT_WAVE],[66,t.STONE_EDGE],[72,t.MAGMA_STORM]],[e.REGIGIGAS]:[[1,t.POUND],[1,t.CONFUSE_RAY],[1,t.DIZZY_PUNCH],[1,t.FORESIGHT],[6,t.PAYBACK],[12,t.REVENGE],[18,t.STOMP],[24,t.PROTECT],[30,t.KNOCK_OFF],[36,t.MEGA_PUNCH],[42,t.BODY_PRESS],[48,t.WIDE_GUARD],[54,t.ZEN_HEADBUTT],[60,t.HEAVY_SLAM],[66,t.HAMMER_ARM],[72,t.GIGA_IMPACT],[78,t.CRUSH_GRIP]],[e.GIRATINA]:[[1,t.SHADOW_SNEAK],[1,t.DEFOG],[1,t.DRAGON_BREATH],[7,t.OMINOUS_WIND],[14,t.ANCIENT_POWER],[21,t.HEX],[28,t.SLASH],[35,t.SCARY_FACE],[42,t.SHADOW_CLAW],[49,t.PAIN_SPLIT],[56,t.AURA_SPHERE],[63,t.DRAGON_CLAW],[70,t.EARTH_POWER],[77,t.SHADOW_FORCE],[84,t.DESTINY_BOND]],[e.CRESSELIA]:[[1,t.CONFUSION],[1,t.DOUBLE_TEAM],[6,t.MIST],[12,t.AURORA_BEAM],[18,t.PSYBEAM],[24,t.ALLY_SWITCH],[30,t.SLASH],[36,t.PSYCHO_CUT],[42,t.MOONLIGHT],[48,t.SAFEGUARD],[54,t.PSYCHIC],[60,t.MOONBLAST],[66,t.FUTURE_SIGHT],[72,t.LUNAR_DANCE],[72,t.LUNAR_BLESSING]],[e.PHIONE]:[[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[75,t.TAKE_HEART]],[e.MANAPHY]:[[1,t.HEART_SWAP],[1,t.TAIL_GLOW],[1,t.WATER_GUN],[9,t.CHARM],[16,t.SUPERSONIC],[24,t.BUBBLE_BEAM],[31,t.ACID_ARMOR],[39,t.WHIRLPOOL],[46,t.WATER_PULSE],[54,t.AQUA_RING],[61,t.DIVE],[69,t.RAIN_DANCE],[76,t.TAKE_HEART]],[e.DARKRAI]:[[1,t.DISABLE],[1,t.OMINOUS_WIND],[1,t.PURSUIT],[11,t.QUICK_ATTACK],[20,t.HYPNOSIS],[29,t.SUCKER_PUNCH],[38,t.NIGHT_SHADE],[47,t.DOUBLE_TEAM],[57,t.HAZE],[66,t.DARK_VOID],[75,t.NASTY_PLOT],[84,t.DREAM_EATER],[93,t.DARK_PULSE]],[e.SHAYMIN]:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.SYNTHESIS],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AROMATHERAPY],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.HEALING_WISH],[100,t.SEED_FLARE]],[e.ARCEUS]:[[1,t.SEISMIC_TOSS],[1,t.COSMIC_POWER],[1,t.PUNISHMENT],[10,t.GRAVITY],[20,t.EARTH_POWER],[30,t.HYPER_VOICE],[40,t.EXTREME_SPEED],[50,t.HEALING_WISH],[60,t.FUTURE_SIGHT],[70,t.RECOVER],[80,t.HYPER_BEAM],[90,t.PERISH_SONG],[100,t.JUDGMENT]],[e.VICTINI]:[[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[1,t.FLAME_CHARGE],[1,t.V_CREATE],[7,t.WORK_UP],[14,t.INCINERATE],[21,t.STORED_POWER],[28,t.HEADBUTT],[35,t.ENDURE],[42,t.ZEN_HEADBUTT],[49,t.INFERNO],[56,t.REVERSAL],[63,t.SEARING_SHOT],[70,t.DOUBLE_EDGE],[77,t.FLARE_BLITZ],[84,t.OVERHEAT],[91,t.FINAL_GAMBIT]],[e.SNIVY]:[[1,t.TACKLE],[4,t.LEER],[5,t.VINE_WHIP],[10,t.WRAP],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[22,t.MEGA_DRAIN],[25,t.SLAM],[28,t.LEAF_BLADE],[31,t.COIL],[34,t.GIGA_DRAIN],[37,t.GASTRO_ACID],[40,t.LEAF_STORM]],[e.SERVINE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[36,t.COIL],[40,t.GIGA_DRAIN],[44,t.GASTRO_ACID],[48,t.LEAF_STORM]],[e.SERPERIOR]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.WRAP],[1,t.LEER],[13,t.GROWTH],[16,t.MAGICAL_LEAF],[20,t.LEECH_SEED],[24,t.MEGA_DRAIN],[28,t.SLAM],[32,t.LEAF_BLADE],[38,t.COIL],[44,t.GIGA_DRAIN],[50,t.GASTRO_ACID],[56,t.LEAF_STORM]],[e.TEPIG]:[[1,t.TACKLE],[3,t.TAIL_WHIP],[5,t.EMBER],[9,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[19,t.SMOG],[21,t.ROLLOUT],[25,t.TAKE_DOWN],[27,t.HEAT_CRASH],[31,t.ASSURANCE],[33,t.FLAMETHROWER],[37,t.HEAD_SMASH],[39,t.ROAR],[43,t.FLARE_BLITZ]],[e.PIGNITE]:[[ne,t.ARM_THRUST],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ENDURE],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[36,t.ASSURANCE],[39,t.FLAMETHROWER],[44,t.HEAD_SMASH],[47,t.ROAR],[52,t.FLARE_BLITZ]],[e.EMBOAR]:[[$,t.ENDURE],[$,t.HAMMER_ARM],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.ARM_THRUST],[13,t.DEFENSE_CURL],[15,t.FLAME_CHARGE],[20,t.SMOG],[23,t.ROLLOUT],[28,t.TAKE_DOWN],[31,t.HEAT_CRASH],[38,t.ASSURANCE],[43,t.FLAMETHROWER],[50,t.HEAD_SMASH],[55,t.ROAR],[62,t.FLARE_BLITZ]],[e.OSHAWOTT]:[[1,t.TACKLE],[5,t.TAIL_WHIP],[5,t.WATER_GUN],[11,t.SOAK],[13,t.FOCUS_ENERGY],[17,t.RAZOR_SHELL],[19,t.FURY_CUTTER],[23,t.WATER_PULSE],[25,t.AERIAL_ACE],[29,t.AQUA_JET],[31,t.ENCORE],[35,t.AQUA_TAIL],[37,t.RETALIATE],[41,t.SWORDS_DANCE],[43,t.HYDRO_PUMP]],[e.DEWOTT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[26,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[37,t.ENCORE],[42,t.AQUA_TAIL],[45,t.RETALIATE],[50,t.SWORDS_DANCE],[53,t.HYDRO_PUMP]],[e.SAMUROTT]:[[ne,t.SLASH],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.MEGAHORN],[1,t.SOAK],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.PATRAT]:[[1,t.TACKLE],[3,t.LEER],[6,t.BITE],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[21,t.SUPER_FANG],[23,t.AFTER_YOU],[26,t.FOCUS_ENERGY],[28,t.WORK_UP],[31,t.HYPER_FANG],[33,t.NASTY_PLOT],[36,t.MEAN_LOOK],[38,t.BATON_PASS],[41,t.SLAM]],[e.WATCHOG]:[[ne,t.CONFUSE_RAY],[$,t.WORK_UP],[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.LOW_KICK],[1,t.ROTOTILLER],[8,t.BIDE],[11,t.DETECT],[13,t.SAND_ATTACK],[16,t.CRUNCH],[18,t.HYPNOSIS],[22,t.SUPER_FANG],[25,t.AFTER_YOU],[29,t.FOCUS_ENERGY],[32,t.PSYCH_UP],[36,t.HYPER_FANG],[39,t.NASTY_PLOT],[43,t.MEAN_LOOK],[46,t.BATON_PASS],[50,t.SLAM]],[e.LILLIPUP]:[[1,t.TACKLE],[1,t.LEER],[4,t.WORK_UP],[8,t.BITE],[12,t.RETALIATE],[17,t.BABY_DOLL_EYES],[20,t.PLAY_ROUGH],[24,t.CRUNCH],[28,t.TAKE_DOWN],[32,t.HELPING_HAND],[36,t.REVERSAL],[40,t.ROAR],[44,t.LAST_RESORT],[48,t.GIGA_IMPACT]],[e.HERDIER]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[36,t.TAKE_DOWN],[42,t.HELPING_HAND],[48,t.REVERSAL],[54,t.ROAR],[60,t.LAST_RESORT],[66,t.GIGA_IMPACT]],[e.STOUTLAND]:[[1,t.TACKLE],[1,t.LEER],[1,t.BITE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.WORK_UP],[12,t.RETALIATE],[19,t.BABY_DOLL_EYES],[24,t.PLAY_ROUGH],[30,t.CRUNCH],[38,t.TAKE_DOWN],[46,t.HELPING_HAND],[54,t.REVERSAL],[62,t.ROAR],[70,t.LAST_RESORT],[78,t.GIGA_IMPACT]],[e.PURRLOIN]:[[1,t.SCRATCH],[1,t.GROWL],[4,t.SAND_ATTACK],[5,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[21,t.ASSURANCE],[24,t.HONE_CLAWS],[28,t.SUCKER_PUNCH],[32,t.NASTY_PLOT],[36,t.NIGHT_SLASH],[40,t.PLAY_ROUGH]],[e.LIEPARD]:[[1,t.ASSIST],[1,t.SCRATCH],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.FAKE_OUT],[12,t.FURY_SWIPES],[16,t.TORMENT],[23,t.ASSURANCE],[28,t.HONE_CLAWS],[34,t.SUCKER_PUNCH],[40,t.NASTY_PLOT],[46,t.NIGHT_SLASH],[52,t.PLAY_ROUGH]],[e.PANSAGE]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.VINE_WHIP],[13,t.FURY_SWIPES],[16,t.LEECH_SEED],[19,t.BITE],[22,t.SEED_BOMB],[25,t.TORMENT],[28,t.FLING],[31,t.ACROBATICS],[34,t.GRASS_KNOT],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISAGE]:[[$,t.SCRATCH],[$,t.PLAY_NICE],[$,t.VINE_WHIP],[$,t.LEECH_SEED],[$,t.BITE],[$,t.TORMENT],[$,t.FLING],[$,t.ACROBATICS],[$,t.GRASS_KNOT],[$,t.RECYCLE],[$,t.NATURAL_GIFT],[$,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SEED_BOMB]],[e.PANSEAR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.INCINERATE],[13,t.FURY_SWIPES],[16,t.YAWN],[19,t.BITE],[22,t.FLAME_BURST],[25,t.AMNESIA],[28,t.FLING],[31,t.ACROBATICS],[34,t.FIRE_BLAST],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMISEAR]:[[$,t.SCRATCH],[$,t.PLAY_NICE],[$,t.INCINERATE],[$,t.YAWN],[$,t.BITE],[$,t.AMNESIA],[$,t.FLING],[$,t.ACROBATICS],[$,t.FIRE_BLAST],[$,t.RECYCLE],[$,t.NATURAL_GIFT],[$,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.FLAME_BURST]],[e.PANPOUR]:[[1,t.SCRATCH],[1,t.PLAY_NICE],[4,t.LEER],[7,t.LICK],[10,t.WATER_GUN],[13,t.FURY_SWIPES],[16,t.WATER_SPORT],[19,t.BITE],[22,t.SCALD],[25,t.TAUNT],[28,t.FLING],[31,t.ACROBATICS],[34,t.BRINE],[37,t.RECYCLE],[40,t.NATURAL_GIFT],[43,t.CRUNCH]],[e.SIMIPOUR]:[[$,t.SCRATCH],[$,t.PLAY_NICE],[$,t.WATER_GUN],[$,t.WATER_SPORT],[$,t.BITE],[$,t.TAUNT],[$,t.FLING],[$,t.ACROBATICS],[$,t.BRINE],[$,t.RECYCLE],[$,t.NATURAL_GIFT],[$,t.CRUNCH],[1,t.LEER],[1,t.LICK],[1,t.FURY_SWIPES],[1,t.SCALD]],[e.MUNNA]:[[1,t.DEFENSE_CURL],[1,t.STORED_POWER],[1,t.PSYWAVE],[4,t.HYPNOSIS],[8,t.PSYBEAM],[12,t.IMPRISON],[16,t.MOONLIGHT],[20,t.MAGIC_COAT],[24,t.ZEN_HEADBUTT],[28,t.CALM_MIND],[32,t.YAWN],[36,t.PSYCHIC],[40,t.MOONBLAST],[44,t.DREAM_EATER],[48,t.FUTURE_SIGHT],[52,t.WONDER_ROOM]],[e.MUSHARNA]:[[1,t.PSYWAVE],[1,t.PSYBEAM],[1,t.PSYCHIC],[1,t.HYPNOSIS],[1,t.DEFENSE_CURL],[1,t.LUCKY_CHANT],[1,t.DREAM_EATER],[1,t.MOONLIGHT],[1,t.FUTURE_SIGHT],[1,t.MAGIC_COAT],[1,t.YAWN],[1,t.IMPRISON],[1,t.CALM_MIND],[1,t.ZEN_HEADBUTT],[1,t.WONDER_ROOM],[1,t.STORED_POWER],[1,t.MOONBLAST],[1,t.PSYCHIC_TERRAIN]],[e.PIDOVE]:[[1,t.GUST],[1,t.GROWL],[4,t.LEER],[8,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[24,t.FEATHER_DANCE],[28,t.DETECT],[32,t.AIR_SLASH],[36,t.ROOST],[40,t.TAILWIND],[44,t.SKY_ATTACK]],[e.TRANQUILL]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[34,t.DETECT],[38,t.AIR_SLASH],[44,t.ROOST],[50,t.TAILWIND],[56,t.SKY_ATTACK]],[e.UNFEZANT]:[[1,t.GUST],[1,t.LEER],[1,t.GROWL],[1,t.QUICK_ATTACK],[12,t.TAUNT],[16,t.AIR_CUTTER],[20,t.SWAGGER],[26,t.FEATHER_DANCE],[36,t.DETECT],[42,t.AIR_SLASH],[50,t.ROOST],[58,t.TAILWIND],[66,t.SKY_ATTACK]],[e.BLITZLE]:[[1,t.QUICK_ATTACK],[4,t.TAIL_WHIP],[8,t.CHARGE],[11,t.SHOCK_WAVE],[15,t.THUNDER_WAVE],[18,t.FLAME_CHARGE],[22,t.SPARK],[25,t.STOMP],[29,t.DISCHARGE],[33,t.AGILITY],[35,t.WILD_CHARGE],[40,t.THRASH]],[e.ZEBSTRIKA]:[[1,t.TAIL_WHIP],[1,t.THUNDER_WAVE],[1,t.QUICK_ATTACK],[1,t.CHARGE],[1,t.ION_DELUGE],[11,t.SHOCK_WAVE],[18,t.FLAME_CHARGE],[25,t.SPARK],[31,t.STOMP],[36,t.DISCHARGE],[42,t.AGILITY],[47,t.WILD_CHARGE],[53,t.THRASH]],[e.ROGGENROLA]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[4,t.HARDEN],[8,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[28,t.ROCK_SLIDE],[32,t.ROCK_BLAST],[36,t.SANDSTORM],[40,t.STONE_EDGE],[44,t.EXPLOSION]],[e.BOLDORE]:[[ne,t.POWER_GEM],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.GIGALITH]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWER_GEM],[1,t.STEALTH_ROCK],[12,t.MUD_SLAP],[16,t.SMACK_DOWN],[20,t.IRON_DEFENSE],[24,t.HEADBUTT],[30,t.ROCK_SLIDE],[36,t.ROCK_BLAST],[42,t.SANDSTORM],[48,t.STONE_EDGE],[54,t.EXPLOSION]],[e.WOOBAT]:[[1,t.GUST],[1,t.ATTRACT],[5,t.CONFUSION],[10,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.SWOOBAT]:[[1,t.GUST],[1,t.CONFUSION],[1,t.ATTRACT],[1,t.ENDEAVOR],[15,t.AIR_CUTTER],[20,t.IMPRISON],[25,t.ASSURANCE],[30,t.AMNESIA],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.CALM_MIND],[50,t.FUTURE_SIGHT],[55,t.SIMPLE_BEAM]],[e.DRILBUR]:[[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[4,t.SCRATCH],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[32,t.DIG],[36,t.SWORDS_DANCE],[40,t.DRILL_RUN],[44,t.EARTHQUAKE],[48,t.FISSURE]],[e.EXCADRILL]:[[ne,t.HORN_DRILL],[1,t.SCRATCH],[1,t.MUD_SLAP],[1,t.RAPID_SPIN],[1,t.MUD_SPORT],[1,t.ROTOTILLER],[1,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.METAL_CLAW],[20,t.SANDSTORM],[24,t.CRUSH_CLAW],[28,t.ROCK_SLIDE],[34,t.DIG],[40,t.SWORDS_DANCE],[46,t.DRILL_RUN],[52,t.EARTHQUAKE],[58,t.FISSURE]],[e.AUDINO]:[[1,t.POUND],[1,t.PLAY_NICE],[4,t.DISARMING_VOICE],[9,t.BABY_DOLL_EYES],[12,t.HELPING_HAND],[16,t.GROWL],[20,t.ZEN_HEADBUTT],[24,t.LIFE_DEW],[28,t.AFTER_YOU],[32,t.TAKE_DOWN],[36,t.SIMPLE_BEAM],[40,t.HYPER_VOICE],[44,t.HEAL_PULSE],[48,t.DOUBLE_EDGE],[52,t.ENTRAINMENT],[56,t.MISTY_TERRAIN],[60,t.LAST_RESORT]],[e.TIMBURR]:[[1,t.POUND],[1,t.LEER],[4,t.LOW_KICK],[8,t.ROCK_THROW],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[28,t.SCARY_FACE],[32,t.DYNAMIC_PUNCH],[36,t.HAMMER_ARM],[40,t.STONE_EDGE],[44,t.SUPERPOWER],[48,t.FOCUS_PUNCH]],[e.GURDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.CONKELDURR]:[[1,t.POUND],[1,t.LEER],[1,t.LOW_KICK],[1,t.ROCK_THROW],[1,t.BIDE],[12,t.FOCUS_ENERGY],[16,t.BULK_UP],[20,t.ROCK_SLIDE],[24,t.SLAM],[30,t.SCARY_FACE],[36,t.DYNAMIC_PUNCH],[42,t.HAMMER_ARM],[48,t.STONE_EDGE],[54,t.SUPERPOWER],[60,t.FOCUS_PUNCH]],[e.TYMPOLE]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.ECHOED_VOICE],[4,t.ACID],[8,t.SUPERSONIC],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[28,t.UPROAR],[32,t.AQUA_RING],[36,t.HYPER_VOICE],[40,t.MUDDY_WATER],[44,t.RAIN_DANCE],[48,t.HYDRO_PUMP]],[e.PALPITOAD]:[[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[37,t.AQUA_RING],[42,t.HYPER_VOICE],[48,t.MUDDY_WATER],[54,t.RAIN_DANCE],[60,t.HYDRO_PUMP]],[e.SEISMITOAD]:[[ne,t.DRAIN_PUNCH],[1,t.BUBBLE],[1,t.GROWL],[1,t.SUPERSONIC],[1,t.ACID],[1,t.GASTRO_ACID],[1,t.ECHOED_VOICE],[12,t.MUD_SHOT],[16,t.ROUND],[20,t.BUBBLE_BEAM],[24,t.FLAIL],[30,t.UPROAR],[39,t.AQUA_RING],[46,t.HYPER_VOICE],[54,t.MUDDY_WATER],[62,t.RAIN_DANCE],[70,t.HYDRO_PUMP]],[e.THROH]:[[1,t.ROCK_SMASH],[1,t.LEER],[1,t.BIDE],[1,t.MAT_BLOCK],[1,t.BIND],[5,t.FOCUS_ENERGY],[10,t.CIRCLE_THROW],[15,t.WIDE_GUARD],[20,t.REVENGE],[25,t.BULK_UP],[30,t.STORM_THROW],[35,t.VITAL_THROW],[40,t.SEISMIC_TOSS],[45,t.ENDURE],[50,t.REVERSAL],[55,t.SUPERPOWER]],[e.SAWK]:[[1,t.LEER],[1,t.ROCK_SMASH],[1,t.BIDE],[5,t.FOCUS_ENERGY],[10,t.DOUBLE_KICK],[15,t.QUICK_GUARD],[20,t.LOW_SWEEP],[25,t.BULK_UP],[30,t.RETALIATE],[35,t.BRICK_BREAK],[40,t.COUNTER],[45,t.ENDURE],[50,t.REVERSAL],[55,t.CLOSE_COMBAT]],[e.SEWADDLE]:[[1,t.TACKLE],[1,t.STRING_SHOT],[8,t.BUG_BITE],[15,t.RAZOR_LEAF],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.SWADLOON]:[[ne,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.BUG_BITE],[1,t.GRASS_WHISTLE],[22,t.STRUGGLE_BUG],[29,t.ENDURE],[31,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.FLAIL]],[e.LEAVANNY]:[[ne,t.SLASH],[$,t.BUG_BITE],[$,t.STICKY_WEB],[$,t.BUG_BUZZ],[1,t.PROTECT],[1,t.TACKLE],[1,t.RAZOR_LEAF],[1,t.STRING_SHOT],[1,t.GRASS_WHISTLE],[1,t.ENDURE],[1,t.FLAIL],[1,t.FALSE_SWIPE],[22,t.STRUGGLE_BUG],[29,t.FELL_STINGER],[32,t.HELPING_HAND],[36,t.LEAF_BLADE],[39,t.X_SCISSOR],[43,t.ENTRAINMENT],[46,t.SWORDS_DANCE],[50,t.LEAF_STORM]],[e.VENIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[4,t.ROLLOUT],[8,t.PROTECT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[24,t.VENOSHOCK],[28,t.TAKE_DOWN],[32,t.AGILITY],[36,t.TOXIC],[40,t.VENOM_DRENCH],[44,t.DOUBLE_EDGE]],[e.WHIRLIPEDE]:[[ne,t.IRON_DEFENSE],[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[32,t.TAKE_DOWN],[38,t.AGILITY],[44,t.TOXIC],[50,t.VENOM_DRENCH],[56,t.DOUBLE_EDGE]],[e.SCOLIPEDE]:[[1,t.POISON_STING],[1,t.DEFENSE_CURL],[1,t.PROTECT],[1,t.ROLLOUT],[1,t.BATON_PASS],[1,t.IRON_DEFENSE],[12,t.POISON_TAIL],[16,t.SCREECH],[20,t.BUG_BITE],[26,t.VENOSHOCK],[34,t.TAKE_DOWN],[42,t.AGILITY],[50,t.TOXIC],[58,t.VENOM_DRENCH],[66,t.DOUBLE_EDGE],[74,t.MEGAHORN]],[e.COTTONEE]:[[1,t.ABSORB],[1,t.HELPING_HAND],[3,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.MEGA_DRAIN],[15,t.RAZOR_LEAF],[18,t.GROWTH],[21,t.POISON_POWDER],[24,t.GIGA_DRAIN],[27,t.CHARM],[30,t.LEECH_SEED],[33,t.COTTON_SPORE],[36,t.ENERGY_BALL],[39,t.SUNNY_DAY],[42,t.ENDEAVOR],[45,t.COTTON_GUARD],[48,t.SOLAR_BEAM]],[e.WHIMSICOTT]:[[1,t.GUST],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.COTTON_SPORE],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SUNNY_DAY],[1,t.MEMENTO],[1,t.HELPING_HAND],[1,t.ENDEAVOR],[1,t.TAILWIND],[1,t.ENERGY_BALL],[1,t.COTTON_GUARD],[1,t.HURRICANE],[1,t.FAIRY_WIND],[1,t.MOONBLAST]],[e.PETILIL]:[[1,t.ABSORB],[1,t.GROWTH],[3,t.HELPING_HAND],[6,t.STUN_SPORE],[9,t.MEGA_DRAIN],[12,t.CHARM],[15,t.MAGICAL_LEAF],[18,t.SLEEP_POWDER],[21,t.GIGA_DRAIN],[24,t.LEECH_SEED],[27,t.AFTER_YOU],[30,t.ENERGY_BALL],[33,t.SYNTHESIS],[36,t.SUNNY_DAY],[39,t.ENTRAINMENT],[42,t.LEAF_STORM]],[e.LILLIGANT]:[[ne,t.PETAL_DANCE],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.ENERGY_BALL],[1,t.LEAF_STORM],[1,t.QUIVER_DANCE],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[5,t.MAGICAL_LEAF]],[e.BASCULIN]:[[1,t.TAIL_WHIP],[1,t.WATER_GUN],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FINAL_GAMBIT],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SANDILE]:[[1,t.LEER],[1,t.POWER_TRIP],[3,t.SAND_ATTACK],[6,t.HONE_CLAWS],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[30,t.SANDSTORM],[33,t.FOUL_PLAY],[36,t.EARTHQUAKE],[39,t.THRASH]],[e.KROKOROK]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[42,t.EARTHQUAKE],[47,t.THRASH]],[e.KROOKODILE]:[[1,t.SAND_ATTACK],[1,t.LEER],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[9,t.SAND_TOMB],[12,t.SCARY_FACE],[15,t.BITE],[18,t.TORMENT],[21,t.DIG],[24,t.SWAGGER],[27,t.CRUNCH],[32,t.SANDSTORM],[35,t.FOUL_PLAY],[44,t.EARTHQUAKE],[51,t.THRASH],[58,t.OUTRAGE]],[e.DARUMAKA]:[[1,t.TACKLE],[1,t.EMBER],[4,t.TAUNT],[8,t.BITE],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.FLARE_BLITZ],[44,t.THRASH],[48,t.SUPERPOWER]],[e.DARMANITAN]:[[ne,t.HAMMER_ARM],[1,t.TACKLE],[1,t.BITE],[1,t.EMBER],[1,t.TAUNT],[12,t.INCINERATE],[16,t.WORK_UP],[20,t.FIRE_FANG],[24,t.HEADBUTT],[28,t.FIRE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.FLARE_BLITZ],[50,t.THRASH],[56,t.SUPERPOWER]],[e.MARACTUS]:[[1,t.PECK],[1,t.ABSORB],[1,t.INGRAIN],[1,t.AFTER_YOU],[1,t.SPIKY_SHIELD],[4,t.GROWTH],[8,t.MEGA_DRAIN],[12,t.LEECH_SEED],[16,t.SUCKER_PUNCH],[20,t.PIN_MISSILE],[24,t.GIGA_DRAIN],[28,t.SWEET_SCENT],[32,t.SYNTHESIS],[36,t.PETAL_BLIZZARD],[40,t.COTTON_SPORE],[44,t.SUNNY_DAY],[48,t.SOLAR_BEAM],[52,t.ACUPRESSURE],[56,t.PETAL_DANCE],[60,t.COTTON_GUARD]],[e.DWEBBLE]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.WITHDRAW],[8,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[36,t.X_SCISSOR],[40,t.ROCK_POLISH],[44,t.SHELL_SMASH],[48,t.ROCK_WRECKER]],[e.CRUSTLE]:[[1,t.SAND_ATTACK],[1,t.WITHDRAW],[1,t.FURY_CUTTER],[1,t.SMACK_DOWN],[12,t.BUG_BITE],[16,t.FLAIL],[20,t.SLASH],[24,t.ROCK_SLIDE],[28,t.STEALTH_ROCK],[32,t.ROCK_BLAST],[38,t.X_SCISSOR],[44,t.ROCK_POLISH],[50,t.SHELL_SMASH],[56,t.ROCK_WRECKER]],[e.SCRAGGY]:[[1,t.LEER],[1,t.LOW_KICK],[4,t.PAYBACK],[8,t.HEADBUTT],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[40,t.CRUNCH],[44,t.HIGH_JUMP_KICK],[48,t.FOCUS_PUNCH],[52,t.HEAD_SMASH]],[e.SCRAFTY]:[[1,t.HEADBUTT],[1,t.LEER],[1,t.LOW_KICK],[1,t.PAYBACK],[1,t.FEINT_ATTACK],[12,t.SAND_ATTACK],[16,t.FACADE],[20,t.PROTECT],[24,t.BEAT_UP],[28,t.SCARY_FACE],[32,t.BRICK_BREAK],[36,t.SWAGGER],[42,t.CRUNCH],[48,t.HIGH_JUMP_KICK],[54,t.FOCUS_PUNCH],[60,t.HEAD_SMASH]],[e.SIGILYPH]:[[1,t.GUST],[1,t.CONFUSION],[5,t.GRAVITY],[10,t.HYPNOSIS],[15,t.AIR_CUTTER],[20,t.PSYBEAM],[25,t.WHIRLWIND],[30,t.COSMIC_POWER],[35,t.AIR_SLASH],[40,t.PSYCHIC],[45,t.TAILWIND],[50,t.LIGHT_SCREEN],[50,t.REFLECT],[55,t.SKY_ATTACK],[60,t.SKILL_SWAP]],[e.YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.DARK_PULSE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.COFAGRIGUS]:[[ne,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[1,t.HEAL_BLOCK],[12,t.DISABLE],[16,t.WILL_O_WISP],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.GRUDGE],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.DARK_PULSE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.TIRTOUGA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.BIDE],[3,t.PROTECT],[6,t.AQUA_JET],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[39,t.RAIN_DANCE],[42,t.HYDRO_PUMP],[45,t.SHELL_SMASH]],[e.CARRACOSTA]:[[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.PROTECT],[1,t.AQUA_JET],[1,t.BIDE],[9,t.SMACK_DOWN],[12,t.ANCIENT_POWER],[15,t.BITE],[18,t.WIDE_GUARD],[21,t.BRINE],[24,t.ROCK_SLIDE],[27,t.CRUNCH],[30,t.CURSE],[33,t.IRON_DEFENSE],[36,t.AQUA_TAIL],[41,t.RAIN_DANCE],[46,t.HYDRO_PUMP],[51,t.SHELL_SMASH]],[e.ARCHEN]:[[1,t.LEER],[1,t.QUICK_ATTACK],[3,t.ROCK_THROW],[6,t.WING_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[39,t.DRAGON_CLAW],[42,t.THRASH],[45,t.ENDEAVOR]],[e.ARCHEOPS]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.QUICK_ATTACK],[9,t.DRAGON_BREATH],[12,t.ANCIENT_POWER],[15,t.PLUCK],[18,t.QUICK_GUARD],[21,t.U_TURN],[24,t.ROCK_SLIDE],[27,t.SCARY_FACE],[30,t.CRUNCH],[33,t.AGILITY],[36,t.TAILWIND],[41,t.DRAGON_CLAW],[46,t.THRASH],[51,t.ENDEAVOR]],[e.TRUBBISH]:[[1,t.POUND],[1,t.POISON_GAS],[3,t.RECYCLE],[6,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.TAKE_DOWN],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[37,t.PAIN_SPLIT],[39,t.GUNK_SHOT],[42,t.EXPLOSION]],[e.GARBODOR]:[[1,t.POUND],[1,t.TAKE_DOWN],[1,t.POISON_GAS],[1,t.METAL_CLAW],[1,t.RECYCLE],[1,t.ACID_SPRAY],[9,t.AMNESIA],[12,t.CLEAR_SMOG],[15,t.TOXIC_SPIKES],[18,t.SLUDGE],[21,t.STOCKPILE],[21,t.SWALLOW],[24,t.BODY_SLAM],[27,t.SLUDGE_BOMB],[30,t.TOXIC],[33,t.BELCH],[39,t.PAIN_SPLIT],[43,t.GUNK_SHOT],[48,t.EXPLOSION]],[e.ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.FURY_SWIPES],[16,t.SCARY_FACE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[32,t.AGILITY],[36,t.IMPRISON],[40,t.NIGHT_DAZE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.ZOROARK]:[[ne,t.NIGHT_SLASH],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[1,t.SCARY_FACE],[1,t.PURSUIT],[12,t.FURY_SWIPES],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.FAKE_TEARS],[34,t.AGILITY],[40,t.IMPRISON],[46,t.NIGHT_DAZE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.MINCCINO]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[4,t.HELPING_HAND],[8,t.ECHOED_VOICE],[12,t.SING],[16,t.CHARM],[20,t.SWIFT],[24,t.ENCORE],[28,t.AFTER_YOU],[32,t.TAIL_SLAP],[36,t.TICKLE],[40,t.SLAM],[44,t.HYPER_VOICE],[48,t.LAST_RESORT]],[e.CINCCINO]:[[ne,t.TAIL_SLAP],[$,t.SLAM],[$,t.SWIFT],[$,t.ENCORE],[$,t.HELPING_HAND],[$,t.HYPER_VOICE],[$,t.TICKLE],[$,t.ROCK_BLAST],[$,t.LAST_RESORT],[$,t.AFTER_YOU],[$,t.ECHOED_VOICE],[$,t.BABY_DOLL_EYES],[1,t.BULLET_SEED],[1,t.SING],[1,t.CHARM],[1,t.POUND]],[e.GOTHITA]:[[1,t.POUND],[1,t.CONFUSION],[4,t.PLAY_NICE],[8,t.TICKLE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[33,t.PSYCH_UP],[34,t.HEAL_BLOCK],[36,t.PSYCHIC],[40,t.FLATTER],[44,t.FUTURE_SIGHT],[48,t.MAGIC_ROOM]],[e.GOTHORITA]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[46,t.FLATTER],[52,t.FUTURE_SIGHT],[58,t.MAGIC_ROOM]],[e.GOTHITELLE]:[[1,t.POUND],[1,t.CONFUSION],[1,t.TICKLE],[1,t.PLAY_NICE],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.HYPNOSIS],[28,t.FAKE_TEARS],[34,t.HEAL_BLOCK],[35,t.PSYCH_UP],[40,t.PSYCHIC],[48,t.FLATTER],[56,t.FUTURE_SIGHT],[64,t.MAGIC_ROOM]],[e.SOLOSIS]:[[1,t.CONFUSION],[1,t.PROTECT],[1,t.PSYWAVE],[4,t.RECOVER],[8,t.ENDEAVOR],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[33,t.PAIN_SPLIT],[36,t.PSYCHIC],[40,t.SKILL_SWAP],[44,t.FUTURE_SIGHT],[46,t.HEAL_BLOCK],[48,t.WONDER_ROOM]],[e.DUOSION]:[[1,t.CONFUSION],[1,t.RECOVER],[1,t.PSYWAVE],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[46,t.SKILL_SWAP],[50,t.HEAL_BLOCK],[52,t.FUTURE_SIGHT],[58,t.WONDER_ROOM]],[e.REUNICLUS]:[[ne,t.HAMMER_ARM],[1,t.CONFUSION],[1,t.RECOVER],[1,t.PROTECT],[1,t.ENDEAVOR],[1,t.DIZZY_PUNCH],[1,t.PSYWAVE],[1,t.SNATCH],[12,t.PSYBEAM],[16,t.CHARM],[20,t.PSYSHOCK],[24,t.LIGHT_SCREEN],[24,t.REFLECT],[28,t.ALLY_SWITCH],[35,t.PAIN_SPLIT],[40,t.PSYCHIC],[48,t.SKILL_SWAP],[54,t.HEAL_BLOCK],[56,t.FUTURE_SIGHT],[64,t.WONDER_ROOM]],[e.DUCKLETT]:[[1,t.WATER_GUN],[6,t.DEFOG],[9,t.WING_ATTACK],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[37,t.TAILWIND],[41,t.BRAVE_BIRD],[46,t.HURRICANE]],[e.SWANNA]:[[1,t.WING_ATTACK],[1,t.WATER_GUN],[1,t.DEFOG],[13,t.WATER_PULSE],[15,t.AERIAL_ACE],[19,t.BUBBLE_BEAM],[21,t.FEATHER_DANCE],[24,t.AQUA_RING],[27,t.AIR_SLASH],[30,t.ROOST],[34,t.RAIN_DANCE],[40,t.TAILWIND],[47,t.BRAVE_BIRD],[55,t.HURRICANE]],[e.VANILLITE]:[[1,t.HARDEN],[1,t.ASTONISH],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.MIST],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[36,t.MIRROR_COAT],[40,t.ICE_BEAM],[44,t.BLIZZARD],[48,t.SHEER_COLD]],[e.VANILLISH]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[50,t.BLIZZARD],[56,t.SHEER_COLD]],[e.VANILLUXE]:[[1,t.MIST],[1,t.HARDEN],[1,t.TAUNT],[1,t.ASTONISH],[1,t.POWDER_SNOW],[1,t.WEATHER_BALL],[1,t.ICICLE_CRASH],[1,t.FREEZE_DRY],[12,t.ICY_WIND],[16,t.AVALANCHE],[20,t.HAIL],[24,t.ICICLE_SPEAR],[28,t.UPROAR],[32,t.ACID_ARMOR],[38,t.MIRROR_COAT],[44,t.ICE_BEAM],[52,t.BLIZZARD],[60,t.SHEER_COLD]],[e.DEERLING]:[[1,t.TACKLE],[1,t.CAMOUFLAGE],[4,t.GROWL],[7,t.SAND_ATTACK],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[32,t.CHARM],[37,t.DOUBLE_EDGE],[42,t.SOLAR_BEAM]],[e.SAWSBUCK]:[[ne,t.HORN_LEECH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.GROWL],[1,t.CAMOUFLAGE],[1,t.MEGAHORN],[10,t.DOUBLE_KICK],[13,t.LEECH_SEED],[16,t.BULLET_SEED],[20,t.TAKE_DOWN],[24,t.ZEN_HEADBUTT],[28,t.ENERGY_BALL],[36,t.CHARM],[44,t.DOUBLE_EDGE],[52,t.SOLAR_BEAM]],[e.EMOLGA]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.DOUBLE_TEAM],[10,t.QUICK_ATTACK],[15,t.THUNDER_SHOCK],[20,t.CHARGE],[25,t.ACROBATICS],[30,t.SPARK],[35,t.ENCORE],[40,t.VOLT_SWITCH],[45,t.LIGHT_SCREEN],[50,t.DISCHARGE],[55,t.AGILITY]],[e.KARRABLAST]:[[1,t.LEER],[1,t.PECK],[4,t.FURY_CUTTER],[8,t.ENDURE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.FLAIL],[28,t.SCARY_FACE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.TAKE_DOWN],[44,t.BUG_BUZZ],[48,t.DOUBLE_EDGE]],[e.ESCAVALIER]:[[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.PECK],[1,t.FLAIL],[1,t.SCARY_FACE],[1,t.ENDURE],[1,t.FURY_CUTTER],[1,t.QUICK_GUARD],[1,t.FELL_STINGER],[1,t.TWINEEDLE],[12,t.FALSE_SWIPE],[16,t.ACID_SPRAY],[20,t.HEADBUTT],[24,t.REVERSAL],[28,t.IRON_DEFENSE],[32,t.X_SCISSOR],[36,t.SWORDS_DANCE],[40,t.IRON_HEAD],[44,t.BUG_BUZZ],[48,t.GIGA_IMPACT],[52,t.METAL_BURST]],[e.FOONGUS]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.GROWTH],[8,t.STUN_SPORE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[40,t.RAGE_POWDER],[44,t.SOLAR_BEAM],[48,t.SPORE]],[e.AMOONGUSS]:[[1,t.ABSORB],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.ASTONISH],[1,t.BIDE],[12,t.MEGA_DRAIN],[16,t.SYNTHESIS],[20,t.CLEAR_SMOG],[24,t.SWEET_SCENT],[28,t.GIGA_DRAIN],[32,t.INGRAIN],[36,t.TOXIC],[42,t.RAGE_POWDER],[48,t.SOLAR_BEAM],[54,t.SPORE]],[e.FRILLISH]:[[1,t.WATER_GUN],[1,t.ABSORB],[1,t.WATER_SPORT],[4,t.POISON_STING],[8,t.NIGHT_SHADE],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[41,t.HYDRO_PUMP],[44,t.DESTINY_BOND],[48,t.WATER_SPOUT]],[e.JELLICENT]:[[1,t.POISON_STING],[1,t.WATER_GUN],[1,t.WATER_SPORT],[1,t.WRING_OUT],[1,t.ABSORB],[1,t.NIGHT_SHADE],[1,t.ACID_ARMOR],[12,t.WATER_PULSE],[16,t.RAIN_DANCE],[20,t.HEX],[24,t.BRINE],[28,t.RECOVER],[32,t.SHADOW_BALL],[36,t.WHIRLPOOL],[43,t.HYDRO_PUMP],[48,t.DESTINY_BOND],[54,t.WATER_SPOUT]],[e.ALOMOMOLA]:[[1,t.POUND],[1,t.PLAY_NICE],[1,t.WATER_SPORT],[5,t.AQUA_RING],[9,t.AQUA_JET],[13,t.HELPING_HAND],[13,t.WIDE_GUARD],[21,t.PROTECT],[25,t.WATER_PULSE],[29,t.HEALING_WISH],[33,t.SOAK],[37,t.WISH],[41,t.BRINE],[45,t.SAFEGUARD],[49,t.WHIRLPOOL],[55,t.HYDRO_PUMP]],[e.JOLTIK]:[[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.SPIDER_WEB],[4,t.ELECTROWEB],[8,t.BUG_BITE],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[37,t.DISCHARGE],[40,t.SCREECH],[44,t.GASTRO_ACID],[48,t.BUG_BUZZ]],[e.GALVANTULA]:[[ne,t.STICKY_WEB],[1,t.ABSORB],[1,t.FURY_CUTTER],[1,t.BUG_BITE],[1,t.ELECTROWEB],[1,t.SPIDER_WEB],[12,t.STRING_SHOT],[16,t.THUNDER_WAVE],[20,t.ELECTRO_BALL],[24,t.AGILITY],[28,t.SUCKER_PUNCH],[32,t.SLASH],[39,t.DISCHARGE],[44,t.SCREECH],[50,t.GASTRO_ACID],[56,t.BUG_BUZZ]],[e.FERROSEED]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.METAL_CLAW],[10,t.PIN_MISSILE],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[41,t.CURSE],[45,t.GYRO_BALL],[50,t.EXPLOSION]],[e.FERROTHORN]:[[ne,t.POWER_WHIP],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.HARDEN],[1,t.METAL_CLAW],[1,t.ROCK_CLIMB],[15,t.INGRAIN],[20,t.FLASH_CANNON],[25,t.IRON_HEAD],[30,t.SELF_DESTRUCT],[35,t.IRON_DEFENSE],[43,t.CURSE],[49,t.GYRO_BALL],[56,t.EXPLOSION]],[e.KLINK]:[[1,t.VISE_GRIP],[1,t.THUNDER_SHOCK],[4,t.BIND],[8,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[40,t.SHIFT_GEAR],[44,t.ZAP_CANNON],[48,t.HYPER_BEAM]],[e.KLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[54,t.HYPER_BEAM]],[e.KLINKLANG]:[[1,t.VISE_GRIP],[1,t.BIND],[1,t.THUNDER_SHOCK],[1,t.CHARGE],[1,t.MAGNETIC_FLUX],[1,t.GEAR_UP],[12,t.CHARGE_BEAM],[16,t.METAL_SOUND],[20,t.AUTOTOMIZE],[24,t.DISCHARGE],[28,t.SCREECH],[32,t.GEAR_GRIND],[36,t.LOCK_ON],[42,t.SHIFT_GEAR],[48,t.ZAP_CANNON],[56,t.HYPER_BEAM],[64,t.ELECTRIC_TERRAIN]],[e.TYNAMO]:[[1,t.TACKLE],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM]],[e.EELEKTRIK]:[[ne,t.CRUNCH],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[9,t.BIND],[19,t.ACID],[29,t.DISCHARGE],[44,t.THUNDERBOLT],[49,t.ACID_SPRAY],[54,t.COIL],[59,t.WILD_CHARGE],[64,t.GASTRO_ACID],[69,t.ZAP_CANNON],[74,t.THRASH]],[e.EELEKTROSS]:[[$,t.THUNDERBOLT],[$,t.ACID_SPRAY],[1,t.TACKLE],[1,t.HEADBUTT],[1,t.THUNDER_WAVE],[1,t.SPARK],[1,t.CHARGE_BEAM],[1,t.ION_DELUGE],[1,t.BIND],[1,t.THRASH],[1,t.ACID],[1,t.ZAP_CANNON],[1,t.CRUNCH],[1,t.CRUSH_CLAW],[1,t.GASTRO_ACID],[1,t.DISCHARGE],[1,t.COIL],[5,t.WILD_CHARGE]],[e.ELGYEM]:[[1,t.GROWL],[1,t.CONFUSION],[6,t.IMPRISON],[8,t.HEAL_BLOCK],[12,t.TELEPORT],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[43,t.RECOVER],[48,t.CALM_MIND],[54,t.WONDER_ROOM],[60,t.PSYCHIC]],[e.BEHEEYEM]:[[1,t.GROWL],[1,t.CONFUSION],[1,t.SYNCHRONOISE],[1,t.TELEPORT],[1,t.IMPRISON],[1,t.PSYCHIC_TERRAIN],[8,t.HEAL_BLOCK],[18,t.PSYBEAM],[24,t.GUARD_SPLIT],[24,t.POWER_SPLIT],[30,t.HEADBUTT],[36,t.ZEN_HEADBUTT],[45,t.RECOVER],[52,t.CALM_MIND],[60,t.WONDER_ROOM],[68,t.PSYCHIC]],[e.LITWICK]:[[1,t.SMOG],[1,t.ASTONISH],[4,t.EMBER],[8,t.MINIMIZE],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[44,t.IMPRISON],[48,t.PAIN_SPLIT],[52,t.OVERHEAT],[56,t.MEMENTO]],[e.LAMPENT]:[[1,t.EMBER],[1,t.MINIMIZE],[1,t.SMOG],[1,t.ASTONISH],[12,t.CONFUSE_RAY],[16,t.HEX],[20,t.WILL_O_WISP],[24,t.FIRE_SPIN],[28,t.NIGHT_SHADE],[32,t.CURSE],[36,t.SHADOW_BALL],[40,t.INFERNO],[46,t.IMPRISON],[52,t.PAIN_SPLIT],[58,t.OVERHEAT],[64,t.MEMENTO]],[e.CHANDELURE]:[[1,t.EMBER],[1,t.FIRE_SPIN],[1,t.NIGHT_SHADE],[1,t.MINIMIZE],[1,t.CONFUSE_RAY],[1,t.SMOG],[1,t.CURSE],[1,t.PAIN_SPLIT],[1,t.SHADOW_BALL],[1,t.WILL_O_WISP],[1,t.MEMENTO],[1,t.IMPRISON],[1,t.ASTONISH],[1,t.OVERHEAT],[1,t.HEX],[1,t.INFERNO]],[e.AXEW]:[[1,t.SCRATCH],[1,t.LEER],[3,t.BITE],[6,t.FALSE_SWIPE],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.DUAL_CHOP],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[39,t.SWORDS_DANCE],[42,t.OUTRAGE],[45,t.GUILLOTINE],[48,t.GIGA_IMPACT]],[e.FRAXURE]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[51,t.GUILLOTINE],[56,t.GIGA_IMPACT]],[e.HAXORUS]:[[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[1,t.FALSE_SWIPE],[1,t.DUAL_CHOP],[9,t.ASSURANCE],[12,t.TAUNT],[15,t.SLASH],[18,t.DRAGON_CLAW],[21,t.SCARY_FACE],[24,t.CRUNCH],[27,t.DRAGON_DANCE],[30,t.BREAKING_SWIPE],[33,t.FOCUS_ENERGY],[36,t.DRAGON_PULSE],[41,t.SWORDS_DANCE],[46,t.OUTRAGE],[53,t.GUILLOTINE],[60,t.GIGA_IMPACT]],[e.CUBCHOO]:[[1,t.GROWL],[1,t.POWDER_SNOW],[3,t.ENDURE],[6,t.FURY_SWIPES],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.CHARM],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[39,t.BLIZZARD],[42,t.SHEER_COLD]],[e.BEARTIC]:[[ne,t.ICICLE_CRASH],[1,t.GROWL],[1,t.FURY_SWIPES],[1,t.POWDER_SNOW],[1,t.ENDURE],[1,t.CHARM],[1,t.AQUA_JET],[1,t.BIDE],[9,t.ICY_WIND],[12,t.PLAY_NICE],[15,t.BRINE],[18,t.FROST_BREATH],[21,t.SLASH],[24,t.FLAIL],[27,t.SWAGGER],[30,t.SNOWSCAPE],[33,t.THRASH],[36,t.REST],[41,t.BLIZZARD],[46,t.SHEER_COLD],[51,t.SUPERPOWER]],[e.CRYOGONAL]:[[1,t.BIND],[1,t.ICE_SHARD],[4,t.CONFUSE_RAY],[8,t.RAPID_SPIN],[12,t.ICY_WIND],[16,t.MIST],[16,t.HAZE],[20,t.ANCIENT_POWER],[24,t.AURORA_BEAM],[28,t.SLASH],[32,t.NIGHT_SLASH],[36,t.FREEZE_DRY],[40,t.LIGHT_SCREEN],[40,t.REFLECT],[44,t.RECOVER],[48,t.ICE_BEAM],[52,t.ACID_ARMOR],[56,t.SOLAR_BEAM],[60,t.SHEER_COLD]],[e.SHELMET]:[[1,t.ABSORB],[1,t.PROTECT],[4,t.ACID],[8,t.CURSE],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.YAWN],[24,t.ACID_ARMOR],[28,t.GIGA_DRAIN],[32,t.GUARD_SWAP],[36,t.BODY_SLAM],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT]],[e.ACCELGOR]:[[1,t.BODY_SLAM],[1,t.ACID],[1,t.ABSORB],[1,t.PROTECT],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.ACID_ARMOR],[1,t.CURSE],[1,t.YAWN],[1,t.GUARD_SWAP],[1,t.ACID_SPRAY],[1,t.WATER_SHURIKEN],[12,t.MEGA_DRAIN],[16,t.STRUGGLE_BUG],[20,t.SWIFT],[24,t.AGILITY],[28,t.GIGA_DRAIN],[32,t.POWER_SWAP],[36,t.U_TURN],[40,t.RECOVER],[44,t.BUG_BUZZ],[48,t.FINAL_GAMBIT],[52,t.TOXIC]],[e.STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.THUNDER_SHOCK],[1,t.MUD_SLAP],[1,t.MUD_SPORT],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.CHARGE],[25,t.SUCKER_PUNCH],[30,t.ELECTRIC_TERRAIN],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.DISCHARGE],[50,t.FLAIL],[55,t.FISSURE]],[e.MIENFOO]:[[1,t.POUND],[1,t.DETECT],[5,t.FAKE_OUT],[10,t.REVERSAL],[15,t.FURY_SWIPES],[20,t.QUICK_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[51,t.BOUNCE],[55,t.CALM_MIND],[60,t.HIGH_JUMP_KICK]],[e.MIENSHAO]:[[1,t.POUND],[1,t.REVERSAL],[1,t.DETECT],[1,t.FAKE_OUT],[1,t.QUICK_GUARD],[15,t.FURY_SWIPES],[20,t.WIDE_GUARD],[25,t.FORCE_PALM],[30,t.U_TURN],[35,t.DRAIN_PUNCH],[40,t.HONE_CLAWS],[45,t.AURA_SPHERE],[53,t.BOUNCE],[59,t.CALM_MIND],[66,t.HIGH_JUMP_KICK]],[e.DRUDDIGON]:[[1,t.SCRATCH],[1,t.LEER],[5,t.BITE],[10,t.DRAGON_TAIL],[15,t.METAL_CLAW],[20,t.SCARY_FACE],[25,t.SLASH],[30,t.DRAGON_CLAW],[35,t.HONE_CLAWS],[40,t.CRUNCH],[45,t.IRON_HEAD],[50,t.OUTRAGE],[55,t.SUPERPOWER]],[e.GOLETT]:[[1,t.MUD_SLAP],[1,t.ASTONISH],[4,t.DEFENSE_CURL],[8,t.POUND],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[44,t.PHANTOM_FORCE],[48,t.HAMMER_ARM],[52,t.EARTHQUAKE],[56,t.DYNAMIC_PUNCH]],[e.GOLURK]:[[$,t.MUD_SLAP],[$,t.FOCUS_PUNCH],[1,t.POUND],[1,t.DEFENSE_CURL],[1,t.ASTONISH],[1,t.HIGH_HORSEPOWER],[12,t.SHADOW_PUNCH],[16,t.CURSE],[20,t.NIGHT_SHADE],[24,t.STOMPING_TANTRUM],[28,t.IRON_DEFENSE],[32,t.MEGA_PUNCH],[36,t.SHADOW_BALL],[40,t.HEAVY_SLAM],[46,t.PHANTOM_FORCE],[52,t.HAMMER_ARM],[58,t.EARTHQUAKE],[64,t.DYNAMIC_PUNCH]],[e.PAWNIARD]:[[1,t.SCRATCH],[1,t.LEER],[5,t.FURY_CUTTER],[10,t.METAL_CLAW],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[55,t.IRON_HEAD],[60,t.SWORDS_DANCE],[65,t.GUILLOTINE]],[e.BISHARP]:[[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.BOUFFALANT]:[[1,t.TACKLE],[1,t.LEER],[1,t.PURSUIT],[5,t.FOCUS_ENERGY],[10,t.FURY_ATTACK],[15,t.REVENGE],[20,t.SCARY_FACE],[25,t.HORN_ATTACK],[30,t.REVERSAL],[35,t.THROAT_CHOP],[40,t.HEAD_CHARGE],[45,t.SWORDS_DANCE],[50,t.MEGAHORN],[55,t.GIGA_IMPACT]],[e.RUFFLET]:[[1,t.LEER],[1,t.PECK],[6,t.HONE_CLAWS],[12,t.WING_ATTACK],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[55,t.AIR_SLASH],[60,t.DEFOG],[66,t.THRASH],[72,t.BRAVE_BIRD]],[e.BRAVIARY]:[[ne,t.SUPERPOWER],[$,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH]],[e.VULLABY]:[[1,t.GUST],[1,t.LEER],[6,t.FLATTER],[12,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[54,t.NASTY_PLOT],[60,t.DEFOG],[66,t.ATTRACT],[72,t.BRAVE_BIRD]],[e.MANDIBUZZ]:[[ne,t.BONE_RUSH],[1,t.GUST],[1,t.LEER],[1,t.TOXIC],[1,t.SKY_ATTACK],[1,t.FLATTER],[1,t.PLUCK],[18,t.TAILWIND],[24,t.KNOCK_OFF],[30,t.IRON_DEFENSE],[36,t.WHIRLWIND],[42,t.AIR_SLASH],[48,t.DARK_PULSE],[57,t.NASTY_PLOT],[64,t.DEFOG],[72,t.ATTRACT],[80,t.BRAVE_BIRD]],[e.HEATMOR]:[[1,t.TACKLE],[1,t.LICK],[5,t.FURY_SWIPES],[10,t.INCINERATE],[15,t.BUG_BITE],[20,t.STOCKPILE],[20,t.SPIT_UP],[20,t.SWALLOW],[25,t.SLASH],[30,t.BIND],[35,t.FIRE_LASH],[40,t.HONE_CLAWS],[45,t.AMNESIA],[50,t.FIRE_SPIN],[55,t.INFERNO],[60,t.FLARE_BLITZ]],[e.DURANT]:[[1,t.SAND_ATTACK],[1,t.FURY_CUTTER],[4,t.VISE_GRIP],[8,t.METAL_CLAW],[12,t.BEAT_UP],[16,t.BUG_BITE],[20,t.BITE],[24,t.AGILITY],[28,t.DIG],[32,t.X_SCISSOR],[36,t.CRUNCH],[40,t.METAL_SOUND],[44,t.IRON_HEAD],[48,t.ENTRAINMENT],[52,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.DEINO]:[[1,t.TACKLE],[1,t.FOCUS_ENERGY],[4,t.DRAGON_BREATH],[8,t.BITE],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[52,t.DRAGON_RUSH],[56,t.NASTY_PLOT],[60,t.OUTRAGE]],[e.ZWEILOUS]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[66,t.OUTRAGE]],[e.HYDREIGON]:[[1,t.TACKLE],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.DRAGON_BREATH],[1,t.DOUBLE_HIT],[12,t.ROAR],[16,t.ASSURANCE],[20,t.HEADBUTT],[24,t.WORK_UP],[28,t.SLAM],[32,t.CRUNCH],[36,t.SCARY_FACE],[40,t.DRAGON_PULSE],[44,t.BODY_SLAM],[48,t.HYPER_VOICE],[54,t.DRAGON_RUSH],[60,t.NASTY_PLOT],[68,t.OUTRAGE],[76,t.HYPER_BEAM]],[e.LARVESTA]:[[1,t.EMBER],[1,t.STRING_SHOT],[6,t.FLAME_CHARGE],[12,t.STRUGGLE_BUG],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.TAKE_DOWN],[54,t.AMNESIA],[60,t.DOUBLE_EDGE],[66,t.FLARE_BLITZ]],[e.VOLCARONA]:[[ne,t.QUIVER_DANCE],[1,t.GUST],[1,t.WHIRLWIND],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.EMBER],[1,t.STRING_SHOT],[1,t.FIRE_SPIN],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[1,t.STRUGGLE_BUG],[1,t.FIERY_DANCE],[18,t.FLAME_WHEEL],[24,t.BUG_BITE],[30,t.SCREECH],[36,t.LEECH_LIFE],[42,t.BUG_BUZZ],[48,t.HEAT_WAVE],[54,t.AMNESIA],[62,t.HURRICANE],[70,t.FIRE_BLAST],[78,t.RAGE_POWDER]],[e.COBALION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.METAL_CLAW],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.METAL_BURST],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.IRON_HEAD],[70,t.CLOSE_COMBAT]],[e.TERRAKION]:[[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.SMACK_DOWN],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.ROCK_SLIDE],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.STONE_EDGE],[70,t.CLOSE_COMBAT]],[e.VIRIZION]:[[$,t.TAKE_DOWN],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.GIGA_DRAIN],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.LEAF_BLADE],[70,t.CLOSE_COMBAT]],[e.TORNADUS]:[[1,t.GUST],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.AIR_CUTTER],[25,t.AGILITY],[30,t.TAILWIND],[35,t.AIR_SLASH],[40,t.CRUNCH],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.HURRICANE],[70,t.THRASH],[77,t.BLEAKWIND_STORM]],[e.THUNDURUS]:[[1,t.THUNDER_SHOCK],[1,t.ASTONISH],[5,t.LEER],[10,t.SWAGGER],[15,t.BITE],[20,t.SHOCK_WAVE],[25,t.AGILITY],[30,t.CHARGE],[31,t.HEAL_BLOCK],[35,t.VOLT_SWITCH],[40,t.CRUNCH],[45,t.DISCHARGE],[50,t.UPROAR],[55,t.HAMMER_ARM],[60,t.RAIN_DANCE],[65,t.THUNDER],[70,t.THRASH],[75,t.WILDBOLT_STORM]],[e.RESHIRAM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.FIRE_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.EXTRASENSORY],[32,t.DRAGON_PULSE],[40,t.FLAMETHROWER],[48,t.FUSION_FLARE],[56,t.HYPER_VOICE],[64,t.FIRE_BLAST],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BLUE_FLARE]],[e.ZEKROM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.THUNDER_FANG],[1,t.NOBLE_ROAR],[8,t.SLASH],[16,t.CRUNCH],[24,t.ZEN_HEADBUTT],[32,t.DRAGON_CLAW],[40,t.THUNDERBOLT],[48,t.FUSION_BOLT],[56,t.HYPER_VOICE],[64,t.THUNDER],[72,t.IMPRISON],[80,t.OUTRAGE],[88,t.BOLT_STRIKE]],[e.LANDORUS]:[[1,t.SAND_TOMB],[1,t.SMACK_DOWN],[5,t.LEER],[10,t.BLOCK],[15,t.BULLDOZE],[20,t.ROCK_TOMB],[30,t.IMPRISON],[35,t.ROCK_SLIDE],[40,t.EARTH_POWER],[45,t.EXTRASENSORY],[50,t.STONE_EDGE],[55,t.HAMMER_ARM],[60,t.SANDSTORM],[65,t.EARTHQUAKE],[70,t.OUTRAGE],[75,t.FISSURE],[80,t.SANDSEAR_STORM]],[e.KYUREM]:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.SCARY_FACE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.GLACIATE],[88,t.SHEER_COLD]],[e.KELDEO]:[[1,t.LEER],[1,t.HELPING_HAND],[1,t.AQUA_JET],[1,t.WORK_UP],[1,t.SECRET_SWORD],[7,t.BUBBLE_BEAM],[14,t.QUICK_GUARD],[21,t.DOUBLE_KICK],[28,t.RETALIATE],[35,t.AQUA_TAIL],[42,t.TAKE_DOWN],[49,t.SACRED_SWORD],[56,t.SWORDS_DANCE],[63,t.HYDRO_PUMP],[70,t.CLOSE_COMBAT]],[e.MELOETTA]:[[1,t.SING],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.ROUND],[21,t.TEETER_DANCE],[26,t.ACROBATICS],[31,t.PSYBEAM],[36,t.ECHOED_VOICE],[43,t.U_TURN],[50,t.RELIC_SONG],[57,t.PSYCHIC],[64,t.HYPER_VOICE],[71,t.ROLE_PLAY],[78,t.CLOSE_COMBAT],[85,t.PERISH_SONG]],[e.GENESECT]:[[1,t.QUICK_ATTACK],[1,t.FURY_CUTTER],[7,t.SCREECH],[14,t.METAL_CLAW],[21,t.FELL_STINGER],[28,t.FLAME_CHARGE],[35,t.METAL_SOUND],[42,t.X_SCISSOR],[49,t.MAGNET_RISE],[56,t.BUG_BUZZ],[63,t.SIMPLE_BEAM],[70,t.ZAP_CANNON],[77,t.LOCK_ON],[84,t.TECHNO_BLAST],[91,t.SELF_DESTRUCT]],[e.CHESPIN]:[[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[18,t.PIN_MISSILE],[27,t.TAKE_DOWN],[32,t.SEED_BOMB],[35,t.MUD_SHOT],[42,t.BODY_SLAM],[45,t.PAIN_SPLIT],[48,t.WOOD_HAMMER]],[e.QUILLADIN]:[[ne,t.NEEDLE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.VINE_WHIP],[8,t.ROLLOUT],[11,t.BITE],[15,t.LEECH_SEED],[20,t.SEED_BOMB],[24,t.PIN_MISSILE],[29,t.TAKE_DOWN],[34,t.MUD_SHOT],[38,t.BULK_UP],[43,t.BODY_SLAM],[47,t.PAIN_SPLIT],[53,t.WOOD_HAMMER]],[e.CHESNAUGHT]:[[ne,t.SPIKY_SHIELD],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.HAMMER_ARM],[1,t.FEINT],[1,t.NEEDLE_ARM],[11,t.BITE],[15,t.LEECH_SEED],[19,t.PIN_MISSILE],[29,t.TAKE_DOWN],[35,t.SEED_BOMB],[41,t.MUD_SHOT],[48,t.BULK_UP],[54,t.BODY_SLAM],[60,t.PAIN_SPLIT],[66,t.WOOD_HAMMER],[78,t.GIGA_IMPACT]],[e.FENNEKIN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[5,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[17,t.PSYBEAM],[20,t.FIRE_SPIN],[25,t.LIGHT_SCREEN],[31,t.PSYSHOCK],[35,t.FLAMETHROWER],[38,t.WILL_O_WISP],[41,t.PSYCHIC],[43,t.SUNNY_DAY],[48,t.FIRE_BLAST]],[e.BRAIXEN]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[11,t.HOWL],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[36,t.PSYSHOCK],[41,t.FLAMETHROWER],[45,t.WILL_O_WISP],[49,t.PSYCHIC],[52,t.SUNNY_DAY],[56,t.MAGIC_ROOM],[59,t.FIRE_BLAST]],[e.DELPHOX]:[[ne,t.MYSTICAL_FIRE],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.EMBER],[1,t.SHADOW_BALL],[1,t.FUTURE_SIGHT],[1,t.ROLE_PLAY],[1,t.HOWL],[1,t.SWITCHEROO],[14,t.FLAME_CHARGE],[18,t.PSYBEAM],[22,t.FIRE_SPIN],[28,t.LIGHT_SCREEN],[38,t.PSYSHOCK],[45,t.FLAMETHROWER],[51,t.WILL_O_WISP],[57,t.PSYCHIC],[62,t.SUNNY_DAY],[68,t.MAGIC_ROOM],[74,t.FIRE_BLAST]],[e.FROAKIE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[18,t.SMOKESCREEN],[21,t.ROUND],[25,t.FLING],[29,t.SMACK_DOWN],[35,t.SUBSTITUTE],[39,t.BOUNCE],[43,t.DOUBLE_TEAM],[48,t.HYDRO_PUMP]],[e.FROGADIER]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[8,t.QUICK_ATTACK],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.ROUND],[28,t.FLING],[33,t.SMACK_DOWN],[40,t.SUBSTITUTE],[45,t.BOUNCE],[50,t.DOUBLE_TEAM],[56,t.HYDRO_PUMP]],[e.GRENINJA]:[[ne,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]],[e.BUNNELBY]:[[1,t.LEER],[1,t.MUD_SLAP],[3,t.TACKLE],[6,t.LASER_FOCUS],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[21,t.BULLDOZE],[24,t.DIG],[27,t.BOUNCE],[30,t.TAKE_DOWN],[33,t.SWORDS_DANCE],[36,t.EARTHQUAKE],[39,t.SUPER_FANG]],[e.DIGGERSBY]:[[1,t.TACKLE],[1,t.LEER],[1,t.MUD_SLAP],[1,t.LASER_FOCUS],[1,t.ROTOTILLER],[9,t.QUICK_ATTACK],[12,t.MUD_SHOT],[15,t.FLAIL],[18,t.DOUBLE_KICK],[23,t.BULLDOZE],[28,t.DIG],[33,t.BOUNCE],[38,t.TAKE_DOWN],[43,t.SWORDS_DANCE],[48,t.EARTHQUAKE],[53,t.SUPER_FANG],[58,t.HAMMER_ARM]],[e.FLETCHLING]:[[1,t.GROWL],[1,t.PECK],[5,t.QUICK_ATTACK],[10,t.EMBER],[15,t.FLAIL],[20,t.ACROBATICS],[25,t.AGILITY],[30,t.AERIAL_ACE],[35,t.TAILWIND],[40,t.STEEL_WING],[45,t.ROOST],[50,t.FLY]],[e.FLETCHINDER]:[[ne,t.FLAME_CHARGE],[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[36,t.AERIAL_ACE],[43,t.TAILWIND],[50,t.STEEL_WING],[57,t.ROOST],[64,t.FLY]],[e.TALONFLAME]:[[1,t.GROWL],[1,t.EMBER],[1,t.PECK],[1,t.QUICK_ATTACK],[1,t.FEINT],[1,t.FLARE_BLITZ],[1,t.FLAME_CHARGE],[15,t.FLAIL],[22,t.ACROBATICS],[29,t.AGILITY],[38,t.AERIAL_ACE],[47,t.TAILWIND],[56,t.STEEL_WING],[65,t.ROOST],[74,t.FLY],[83,t.BRAVE_BIRD]],[e.SCATTERBUG]:[[1,t.TACKLE],[1,t.STRING_SHOT],[6,t.STUN_SPORE],[15,t.BUG_BITE]],[e.SPEWPA]:[[ne,t.PROTECT],[$,t.TACKLE],[$,t.STRING_SHOT],[$,t.STUN_SPORE],[$,t.BUG_BITE],[1,t.HARDEN]],[e.VIVILLON]:[[ne,t.GUST],[1,t.PROTECT],[1,t.TACKLE],[1,t.STRING_SHOT],[1,t.HARDEN],[1,t.BUG_BITE],[1,t.POISON_POWDER],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.STRUGGLE_BUG],[1,t.POWDER],[12,t.LIGHT_SCREEN],[17,t.PSYBEAM],[21,t.SUPERSONIC],[25,t.DRAINING_KISS],[31,t.SAFEGUARD],[35,t.BUG_BUZZ],[45,t.QUIVER_DANCE],[50,t.HURRICANE]],[e.LITLEO]:[[1,t.TACKLE],[1,t.LEER],[5,t.EMBER],[8,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[36,t.FLAMETHROWER],[39,t.CRUNCH],[43,t.HYPER_VOICE],[46,t.INCINERATE],[50,t.OVERHEAT]],[e.PYROAR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[1,t.HYPER_BEAM],[1,t.WORK_UP],[11,t.HEADBUTT],[15,t.NOBLE_ROAR],[20,t.TAKE_DOWN],[23,t.FIRE_FANG],[28,t.ENDEAVOR],[33,t.ECHOED_VOICE],[38,t.FLAMETHROWER],[42,t.CRUNCH],[48,t.HYPER_VOICE],[51,t.INCINERATE],[57,t.OVERHEAT]],[e.FLABEBE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[6,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[22,t.MAGICAL_LEAF],[24,t.GRASSY_TERRAIN],[28,t.PETAL_BLIZZARD],[33,t.SYNTHESIS],[37,t.MISTY_TERRAIN],[41,t.MOONBLAST],[45,t.PETAL_DANCE],[48,t.SOLAR_BEAM]],[e.FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.SAFEGUARD],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.SYNTHESIS],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.FLORGES]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[1,t.RAZOR_LEAF],[1,t.SOLAR_BEAM],[1,t.PETAL_DANCE],[1,t.SAFEGUARD],[1,t.SYNTHESIS],[1,t.WISH],[1,t.LUCKY_CHANT],[1,t.MAGICAL_LEAF],[1,t.GRASS_KNOT],[1,t.PETAL_BLIZZARD],[1,t.DISARMING_VOICE],[1,t.GRASSY_TERRAIN],[1,t.MISTY_TERRAIN],[5,t.MOONBLAST]],[e.SKIDDO]:[[1,t.TACKLE],[1,t.GROWTH],[7,t.VINE_WHIP],[9,t.TAIL_WHIP],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[38,t.DOUBLE_EDGE],[42,t.HORN_LEECH],[45,t.LEAF_BLADE]],[e.GOGOAT]:[[ne,t.AERIAL_ACE],[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWTH],[1,t.EARTHQUAKE],[12,t.LEECH_SEED],[13,t.RAZOR_LEAF],[16,t.WORRY_SEED],[20,t.SYNTHESIS],[22,t.TAKE_DOWN],[26,t.BULLDOZE],[30,t.SEED_BOMB],[34,t.BULK_UP],[40,t.DOUBLE_EDGE],[47,t.HORN_LEECH],[55,t.LEAF_BLADE],[58,t.MILK_DRINK]],[e.PANCHAM]:[[1,t.TACKLE],[1,t.LEER],[4,t.ARM_THRUST],[8,t.TAUNT],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[33,t.CRUNCH],[36,t.BODY_SLAM],[40,t.PARTING_SHOT],[44,t.ENTRAINMENT]],[e.PANGORO]:[[ne,t.NIGHT_SLASH],[1,t.TACKLE],[1,t.LEER],[1,t.TAUNT],[1,t.ARM_THRUST],[1,t.BULLET_PUNCH],[12,t.CIRCLE_THROW],[16,t.LOW_SWEEP],[20,t.WORK_UP],[24,t.SLASH],[28,t.VITAL_THROW],[35,t.CRUNCH],[40,t.BODY_SLAM],[46,t.PARTING_SHOT],[52,t.ENTRAINMENT],[58,t.HAMMER_ARM]],[e.FURFROU]:[[1,t.TACKLE],[1,t.GROWL],[5,t.SAND_ATTACK],[9,t.BABY_DOLL_EYES],[12,t.HEADBUTT],[15,t.TAIL_WHIP],[22,t.BITE],[27,t.ODOR_SLEUTH],[33,t.RETALIATE],[35,t.TAKE_DOWN],[38,t.CHARM],[42,t.SUCKER_PUNCH],[48,t.COTTON_GUARD]],[e.ESPURR]:[[1,t.SCRATCH],[1,t.LEER],[3,t.FAKE_OUT],[6,t.DISARMING_VOICE],[9,t.CONFUSION],[18,t.COVET],[21,t.PSYBEAM],[30,t.LIGHT_SCREEN],[30,t.REFLECT],[33,t.PSYSHOCK]],[e.MEOWSTIC]:[[1,t.SCRATCH],[1,t.LEER],[1,t.MEAN_LOOK],[1,t.FAKE_OUT],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.HELPING_HAND],[15,t.CHARM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.IMPRISON],[49,t.QUICK_GUARD],[54,t.PSYCHIC],[59,t.MISTY_TERRAIN]],[e.HONEDGE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[4,t.SHADOW_SNEAK],[8,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[36,t.IRON_HEAD],[40,t.POWER_TRICK],[44,t.SWORDS_DANCE],[48,t.SACRED_SWORD]],[e.DOUBLADE]:[[1,t.TACKLE],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[1,t.AUTOTOMIZE],[12,t.AERIAL_ACE],[16,t.METAL_SOUND],[20,t.SLASH],[24,t.NIGHT_SLASH],[28,t.RETALIATE],[32,t.IRON_DEFENSE],[38,t.IRON_HEAD],[44,t.POWER_TRICK],[50,t.SWORDS_DANCE],[56,t.SACRED_SWORD]],[e.AEGISLASH]:[[ne,t.KINGS_SHIELD],[1,t.SWORDS_DANCE],[1,t.PURSUIT],[1,t.TACKLE],[1,t.SLASH],[1,t.FURY_CUTTER],[1,t.METAL_SOUND],[1,t.AERIAL_ACE],[1,t.IRON_DEFENSE],[1,t.POWER_TRICK],[1,t.NIGHT_SLASH],[1,t.SHADOW_SNEAK],[1,t.IRON_HEAD],[1,t.HEAD_SMASH],[1,t.AUTOTOMIZE],[1,t.RETALIATE],[1,t.SACRED_SWORD]],[e.SPRITZEE]:[[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[3,t.SWEET_KISS],[6,t.ECHOED_VOICE],[9,t.DRAINING_KISS],[12,t.AROMATHERAPY],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP]],[e.AROMATISSE]:[[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.ECHOED_VOICE],[1,t.HEAL_PULSE],[1,t.FAIRY_WIND],[1,t.AROMATIC_MIST],[9,t.DISARMING_VOICE],[12,t.AROMATHERAPY],[15,t.DRAINING_KISS],[18,t.ATTRACT],[21,t.FLAIL],[24,t.MISTY_TERRAIN],[27,t.PSYCHIC],[30,t.CHARM],[33,t.CALM_MIND],[36,t.MOONBLAST],[39,t.SKILL_SWAP],[42,t.PSYCH_UP]],[e.SWIRLIX]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[3,t.PLAY_NICE],[6,t.FAIRY_WIND],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR]],[e.SLURPUFF]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[1,t.PLAY_NICE],[9,t.AROMATHERAPY],[12,t.DRAINING_KISS],[15,t.FAKE_TEARS],[18,t.ROUND],[21,t.STRING_SHOT],[24,t.COTTON_SPORE],[27,t.ENERGY_BALL],[30,t.WISH],[33,t.PLAY_ROUGH],[36,t.COTTON_GUARD],[39,t.ENDEAVOR],[42,t.STICKY_WEB]],[e.INKAY]:[[1,t.TACKLE],[1,t.PECK],[1,t.CONSTRICT],[3,t.HYPNOSIS],[6,t.WRAP],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[31,t.SWITCHEROO],[33,t.FOUL_PLAY],[36,t.TOPSY_TURVY],[39,t.SUPERPOWER]],[e.MALAMAR]:[[1,t.TACKLE],[1,t.WRAP],[1,t.PECK],[1,t.CONSTRICT],[1,t.HYPNOSIS],[1,t.REVERSAL],[9,t.PAYBACK],[12,t.PLUCK],[15,t.PSYBEAM],[18,t.SWAGGER],[21,t.SLASH],[24,t.NIGHT_SLASH],[27,t.PSYCHO_CUT],[33,t.SWITCHEROO],[37,t.FOUL_PLAY],[42,t.TOPSY_TURVY],[47,t.SUPERPOWER]],[e.BINACLE]:[[1,t.SCRATCH],[1,t.MUD_SLAP],[4,t.WITHDRAW],[8,t.WATER_GUN],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[40,t.SHELL_SMASH],[44,t.CROSS_CHOP]],[e.BARBARACLE]:[[1,t.SCRATCH],[1,t.WATER_GUN],[1,t.WITHDRAW],[1,t.SKULL_BASH],[1,t.MUD_SLAP],[12,t.FURY_CUTTER],[16,t.FURY_SWIPES],[20,t.ANCIENT_POWER],[24,t.ROCK_POLISH],[28,t.SLASH],[32,t.HONE_CLAWS],[36,t.RAZOR_SHELL],[42,t.SHELL_SMASH],[48,t.CROSS_CHOP],[54,t.STONE_EDGE]],[e.SKRELP]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.ACID],[10,t.WATER_GUN],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[50,t.SLUDGE_BOMB],[55,t.HYDRO_PUMP]],[e.DRAGALGE]:[[1,t.TACKLE],[1,t.ACID],[1,t.WATER_GUN],[1,t.SMOKESCREEN],[1,t.FEINT_ATTACK],[15,t.TAIL_WHIP],[20,t.DOUBLE_TEAM],[25,t.POISON_TAIL],[30,t.WATER_PULSE],[35,t.TOXIC],[40,t.DRAGON_PULSE],[45,t.AQUA_TAIL],[52,t.SLUDGE_BOMB],[59,t.HYDRO_PUMP],[66,t.OUTRAGE]],[e.CLAUNCHER]:[[1,t.WATER_GUN],[1,t.SPLASH],[10,t.FLAIL],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[40,t.AURA_SPHERE],[45,t.BOUNCE],[50,t.MUDDY_WATER],[55,t.CRABHAMMER]],[e.CLAWITZER]:[[1,t.WATER_GUN],[1,t.SPLASH],[1,t.FLAIL],[1,t.DARK_PULSE],[1,t.DRAGON_PULSE],[1,t.HEAL_PULSE],[15,t.AQUA_JET],[20,t.SMACK_DOWN],[25,t.HONE_CLAWS],[30,t.WATER_PULSE],[35,t.SWORDS_DANCE],[42,t.AURA_SPHERE],[49,t.BOUNCE],[56,t.MUDDY_WATER],[63,t.CRABHAMMER]],[e.HELIOPTILE]:[[1,t.TAIL_WHIP],[1,t.MUD_SLAP],[4,t.POUND],[8,t.THUNDER_SHOCK],[12,t.QUICK_ATTACK],[16,t.CHARGE],[20,t.BULLDOZE],[24,t.VOLT_SWITCH],[28,t.PARABOLIC_CHARGE],[32,t.THUNDER_WAVE],[36,t.THUNDERBOLT],[40,t.ELECTRIFY],[44,t.THUNDER]],[e.HELIOLISK]:[[1,t.POUND],[1,t.TAIL_WHIP],[1,t.RAZOR_WIND],[1,t.THUNDER_SHOCK],[1,t.THUNDERBOLT],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.QUICK_ATTACK],[1,t.MUD_SLAP],[1,t.CHARGE],[1,t.DISCHARGE],[1,t.VOLT_SWITCH],[1,t.BULLDOZE],[1,t.PARABOLIC_CHARGE],[1,t.ELECTRIFY],[1,t.EERIE_IMPULSE]],[e.TYRUNT]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.ROAR],[8,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[40,t.THRASH],[44,t.EARTHQUAKE],[48,t.HORN_DRILL]],[e.TYRANTRUM]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.ROAR],[1,t.ANCIENT_POWER],[12,t.CHARM],[16,t.BITE],[20,t.DRAGON_TAIL],[24,t.STOMP],[28,t.ROCK_SLIDE],[32,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.THRASH],[48,t.EARTHQUAKE],[54,t.HORN_DRILL],[60,t.GIGA_IMPACT],[66,t.HEAD_SMASH]],[e.AMAURA]:[[1,t.GROWL],[1,t.POWDER_SNOW],[4,t.ENCORE],[8,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[40,t.ICE_BEAM],[44,t.LIGHT_SCREEN],[48,t.HAIL],[52,t.BLIZZARD],[56,t.HYPER_BEAM]],[e.AURORUS]:[[1,t.GROWL],[1,t.POWDER_SNOW],[1,t.ENCORE],[1,t.ANCIENT_POWER],[12,t.ICY_WIND],[16,t.ROUND],[20,t.MIST],[24,t.AURORA_BEAM],[28,t.THUNDER_WAVE],[32,t.NATURE_POWER],[36,t.FREEZE_DRY],[42,t.ICE_BEAM],[48,t.LIGHT_SCREEN],[54,t.HAIL],[60,t.BLIZZARD],[66,t.HYPER_BEAM]],[e.SYLVEON]:[[ne,t.SPARKLY_SWIRL],[$,t.VEEVEE_VOLLEY],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.GROWL],[1,t.CHARM],[1,t.BATON_PASS],[1,t.HELPING_HAND],[1,t.COVET],[1,t.COPYCAT],[5,t.SAND_ATTACK],[10,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[20,t.BABY_DOLL_EYES],[25,t.SWIFT],[30,t.LIGHT_SCREEN],[35,t.DRAINING_KISS],[40,t.MISTY_TERRAIN],[45,t.SKILL_SWAP],[50,t.PSYCH_UP],[55,t.MOONBLAST],[60,t.LAST_RESORT]],[e.HAWLUCHA]:[[1,t.TACKLE],[1,t.HONE_CLAWS],[4,t.WING_ATTACK],[8,t.DETECT],[12,t.AERIAL_ACE],[16,t.ENCORE],[20,t.FEATHER_DANCE],[24,t.BRICK_BREAK],[28,t.BOUNCE],[32,t.TAUNT],[36,t.ROOST],[40,t.SWORDS_DANCE],[44,t.FLYING_PRESS],[48,t.HIGH_JUMP_KICK],[52,t.ENDEAVOR],[56,t.SKY_ATTACK]],[e.DEDENNE]:[[1,t.TAIL_WHIP],[1,t.NUZZLE],[5,t.TACKLE],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.CHARM],[25,t.PARABOLIC_CHARGE],[30,t.VOLT_SWITCH],[35,t.REST],[35,t.SNORE],[40,t.DISCHARGE],[45,t.PLAY_ROUGH],[50,t.SUPER_FANG],[55,t.ENTRAINMENT],[60,t.THUNDER]],[e.CARBINK]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.GUARD_SPLIT],[10,t.SMACK_DOWN],[15,t.FLAIL],[20,t.ANCIENT_POWER],[25,t.ROCK_POLISH],[30,t.LIGHT_SCREEN],[35,t.ROCK_SLIDE],[40,t.SKILL_SWAP],[45,t.POWER_GEM],[50,t.STEALTH_ROCK],[55,t.MOONBLAST],[60,t.STONE_EDGE]],[e.GOOMY]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.WATER_GUN],[10,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[41,t.CURSE],[45,t.BODY_SLAM],[50,t.MUDDY_WATER]],[e.SLIGGOO]:[[ne,t.ACID_SPRAY],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[56,t.MUDDY_WATER]],[e.GOODRA]:[[ne,t.AQUA_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.POISON_TAIL],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[58,t.MUDDY_WATER],[67,t.POWER_WHIP]],[e.KLEFKI]:[[1,t.ASTONISH],[4,t.TACKLE],[8,t.FAIRY_WIND],[12,t.TORMENT],[16,t.FAIRY_LOCK],[20,t.METAL_SOUND],[24,t.DRAINING_KISS],[28,t.RECYCLE],[32,t.IMPRISON],[36,t.FLASH_CANNON],[40,t.PLAY_ROUGH],[44,t.MAGIC_ROOM],[48,t.FOUL_PLAY],[50,t.HEAL_BLOCK],[52,t.LAST_RESORT]],[e.PHANTUMP]:[[1,t.TACKLE],[1,t.ASTONISH],[4,t.BRANCH_POKE],[8,t.LEECH_SEED],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.TREVENANT]:[[ne,t.SHADOW_CLAW],[1,t.TACKLE],[1,t.LEECH_SEED],[1,t.ASTONISH],[1,t.BRANCH_POKE],[12,t.CONFUSE_RAY],[16,t.WILL_O_WISP],[20,t.HEX],[24,t.GROWTH],[28,t.HORN_LEECH],[32,t.CURSE],[36,t.PHANTOM_FORCE],[40,t.INGRAIN],[44,t.WOOD_HAMMER],[48,t.DESTINY_BOND],[52,t.FORESTS_CURSE]],[e.PUMPKABOO]:[[1,t.ASTONISH],[1,t.TRICK_OR_TREAT],[1,t.LEAFAGE],[4,t.SHADOW_SNEAK],[8,t.CONFUSE_RAY],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT]],[e.GOURGEIST]:[[1,t.CONFUSE_RAY],[1,t.EXPLOSION],[1,t.ASTONISH],[1,t.LEAFAGE],[1,t.SHADOW_SNEAK],[1,t.TRICK_OR_TREAT],[1,t.MOONBLAST],[12,t.RAZOR_LEAF],[16,t.LEECH_SEED],[20,t.BULLET_SEED],[24,t.SCARY_FACE],[28,t.WORRY_SEED],[32,t.SEED_BOMB],[36,t.SHADOW_BALL],[40,t.TRICK],[44,t.PAIN_SPLIT],[48,t.PHANTOM_FORCE]],[e.BERGMITE]:[[1,t.HARDEN],[1,t.RAPID_SPIN],[3,t.TACKLE],[6,t.POWDER_SNOW],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[39,t.BLIZZARD],[42,t.DOUBLE_EDGE]],[e.AVALUGG]:[[ne,t.BODY_SLAM],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.ICICLE_CRASH]],[e.NOIBAT]:[[1,t.TACKLE],[1,t.ABSORB],[4,t.GUST],[8,t.SUPERSONIC],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[49,t.TAILWIND],[52,t.HURRICANE]],[e.NOIVERN]:[[ne,t.DRAGON_PULSE],[1,t.GUST],[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.ABSORB],[1,t.MOONLIGHT],[12,t.DOUBLE_TEAM],[16,t.WING_ATTACK],[20,t.BITE],[24,t.AIR_CUTTER],[28,t.WHIRLWIND],[32,t.SUPER_FANG],[36,t.AIR_SLASH],[40,t.SCREECH],[44,t.ROOST],[51,t.TAILWIND],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.XERNEAS]:[[1,t.TACKLE],[1,t.GRAVITY],[5,t.LIGHT_SCREEN],[10,t.AURORA_BEAM],[15,t.NATURE_POWER],[20,t.NIGHT_SLASH],[25,t.AROMATHERAPY],[30,t.PSYCH_UP],[35,t.HORN_LEECH],[40,t.MISTY_TERRAIN],[45,t.INGRAIN],[50,t.TAKE_DOWN],[55,t.GEOMANCY],[60,t.MOONBLAST],[65,t.HEAL_PULSE],[70,t.MEGAHORN],[75,t.CLOSE_COMBAT],[80,t.OUTRAGE],[85,t.GIGA_IMPACT]],[e.YVELTAL]:[[1,t.GUST],[1,t.DOUBLE_TEAM],[1,t.RAZOR_WIND],[5,t.TAUNT],[10,t.SNARL],[15,t.DISABLE],[20,t.SUCKER_PUNCH],[25,t.TAILWIND],[30,t.ROOST],[35,t.AIR_SLASH],[40,t.DARK_PULSE],[45,t.PSYCHIC],[50,t.OBLIVION_WING],[55,t.PHANTOM_FORCE],[60,t.FOUL_PLAY],[65,t.DRAGON_RUSH],[70,t.HURRICANE],[75,t.FOCUS_BLAST],[80,t.SKY_ATTACK],[85,t.HYPER_BEAM]],[e.ZYGARDE]:[[1,t.BIND],[1,t.BITE],[1,t.DRAGON_BREATH],[1,t.BULLDOZE],[1,t.THOUSAND_ARROWS],[1,t.THOUSAND_WAVES],[1,t.CORE_ENFORCER],[8,t.HAZE],[16,t.DIG],[24,t.SAFEGUARD],[32,t.CRUNCH],[40,t.DRAGON_PULSE],[48,t.LANDS_WRATH],[56,t.GLARE],[64,t.SANDSTORM],[72,t.COIL],[80,t.EARTHQUAKE],[88,t.OUTRAGE]],[e.DIANCIE]:[[1,t.TACKLE],[1,t.HARDEN],[1,t.DIAMOND_STORM],[7,t.GUARD_SPLIT],[14,t.SMACK_DOWN],[21,t.FLAIL],[28,t.ANCIENT_POWER],[35,t.ROCK_POLISH],[42,t.LIGHT_SCREEN],[49,t.ROCK_SLIDE],[56,t.SKILL_SWAP],[63,t.POWER_GEM],[70,t.STEALTH_ROCK],[77,t.MOONBLAST],[84,t.STONE_EDGE]],[e.HOOPA]:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[35,t.PHANTOM_FORCE],[46,t.ZEN_HEADBUTT],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.SHADOW_BALL],[68,t.NASTY_PLOT],[75,t.PSYCHIC],[85,t.HYPERSPACE_HOLE]],[e.VOLCANION]:[[1,t.WATER_GUN],[1,t.FIRE_SPIN],[1,t.STEAM_ERUPTION],[6,t.LEER],[12,t.WEATHER_BALL],[18,t.FLAME_CHARGE],[24,t.WATER_PULSE],[30,t.SCARY_FACE],[36,t.INCINERATE],[42,t.STOMP],[48,t.SCALD],[54,t.TAKE_DOWN],[60,t.MIST],[60,t.HAZE],[66,t.HYDRO_PUMP],[78,t.FLARE_BLITZ],[84,t.OVERHEAT],[90,t.EXPLOSION]],[e.ROWLET]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LEAFAGE],[6,t.ASTONISH],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[18,t.SYNTHESIS],[21,t.PLUCK],[24,t.NASTY_PLOT],[27,t.SUCKER_PUNCH],[30,t.LEAF_BLADE],[33,t.FEATHER_DANCE],[36,t.BRAVE_BIRD]],[e.DARTRIX]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[35,t.SUCKER_PUNCH],[40,t.LEAF_BLADE],[45,t.FEATHER_DANCE],[50,t.BRAVE_BIRD]],[e.DECIDUEYE]:[[ne,t.SPIRIT_SHACKLE],[1,t.TACKLE],[1,t.GROWL],[1,t.SPITE],[1,t.ASTONISH],[1,t.U_TURN],[1,t.LEAF_STORM],[1,t.PHANTOM_FORCE],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.NASTY_PLOT],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.LITTEN]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.EMBER],[6,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[18,t.DOUBLE_KICK],[21,t.FIRE_FANG],[24,t.SCARY_FACE],[27,t.SWAGGER],[30,t.FLAMETHROWER],[33,t.THRASH],[36,t.FLARE_BLITZ]],[e.TORRACAT]:[[1,t.SCRATCH],[1,t.GROWL],[1,t.EMBER],[1,t.LICK],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[35,t.SWAGGER],[40,t.FLAMETHROWER],[45,t.THRASH],[50,t.FLARE_BLITZ]],[e.INCINEROAR]:[[ne,t.DARKEST_LARIAT],[$,t.SCRATCH],[$,t.GROWL],[$,t.THROAT_CHOP],[1,t.EMBER],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.BULK_UP],[9,t.ROAR],[12,t.FURY_SWIPES],[15,t.BITE],[20,t.DOUBLE_KICK],[25,t.FIRE_FANG],[30,t.SCARY_FACE],[32,t.SWAGGER],[44,t.FLAMETHROWER],[51,t.THRASH],[58,t.FLARE_BLITZ]],[e.POPPLIO]:[[1,t.POUND],[1,t.GROWL],[3,t.WATER_GUN],[6,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[18,t.SING],[21,t.BUBBLE_BEAM],[24,t.ENCORE],[27,t.MISTY_TERRAIN],[30,t.HYPER_VOICE],[33,t.MOONBLAST],[36,t.HYDRO_PUMP]],[e.BRIONNE]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[35,t.MISTY_TERRAIN],[40,t.HYPER_VOICE],[45,t.MOONBLAST],[50,t.HYDRO_PUMP]],[e.PRIMARINA]:[[ne,t.SPARKLING_ARIA],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[9,t.AQUA_JET],[12,t.BABY_DOLL_EYES],[15,t.ICY_WIND],[20,t.SING],[25,t.BUBBLE_BEAM],[30,t.ENCORE],[37,t.MISTY_TERRAIN],[44,t.HYPER_VOICE],[51,t.MOONBLAST],[58,t.HYDRO_PUMP]],[e.PIKIPEK]:[[1,t.PECK],[3,t.GROWL],[7,t.ECHOED_VOICE],[9,t.ROCK_SMASH],[13,t.SUPERSONIC],[15,t.PLUCK],[19,t.ROOST],[21,t.FURY_ATTACK],[25,t.SCREECH],[27,t.DRILL_PECK],[31,t.BULLET_SEED],[33,t.FEATHER_DANCE],[37,t.HYPER_VOICE]],[e.TRUMBEAK]:[[$,t.ECHOED_VOICE],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[29,t.SCREECH],[32,t.DRILL_PECK],[37,t.BULLET_SEED],[40,t.FEATHER_DANCE],[45,t.HYPER_VOICE]],[e.TOUCANNON]:[[ne,t.BEAK_BLAST],[1,t.GROWL],[1,t.PECK],[1,t.ROCK_SMASH],[1,t.ROCK_BLAST],[1,t.ECHOED_VOICE],[13,t.SUPERSONIC],[16,t.PLUCK],[21,t.ROOST],[24,t.FURY_ATTACK],[30,t.SCREECH],[34,t.DRILL_PECK],[40,t.BULLET_SEED],[44,t.FEATHER_DANCE],[50,t.HYPER_VOICE]],[e.YUNGOOS]:[[1,t.TACKLE],[3,t.LEER],[7,t.PAYBACK],[10,t.SAND_ATTACK],[13,t.WORK_UP],[19,t.BITE],[22,t.MUD_SLAP],[25,t.SUPER_FANG],[28,t.TAKE_DOWN],[31,t.SCARY_FACE],[34,t.CRUNCH],[37,t.YAWN],[40,t.THRASH],[43,t.REST]],[e.GUMSHOOS]:[[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.PURSUIT],[13,t.WORK_UP],[19,t.BITE],[23,t.MUD_SLAP],[27,t.SUPER_FANG],[31,t.TAKE_DOWN],[35,t.SCARY_FACE],[39,t.CRUNCH],[43,t.YAWN],[47,t.THRASH],[52,t.REST]],[e.GRUBBIN]:[[1,t.VISE_GRIP],[1,t.MUD_SLAP],[5,t.STRING_SHOT],[10,t.BUG_BITE],[15,t.BITE],[21,t.SPARK],[25,t.STICKY_WEB],[30,t.X_SCISSOR],[35,t.CRUNCH],[40,t.DIG]],[e.CHARJABUG]:[[ne,t.CHARGE],[1,t.VISE_GRIP],[1,t.STRING_SHOT],[1,t.MUD_SLAP],[1,t.BUG_BITE],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.X_SCISSOR],[43,t.CRUNCH],[50,t.DIG],[57,t.IRON_DEFENSE],[64,t.DISCHARGE]],[e.VIKAVOLT]:[[ne,t.THUNDERBOLT],[$,t.VISE_GRIP],[$,t.DIG],[$,t.MUD_SLAP],[$,t.IRON_DEFENSE],[$,t.X_SCISSOR],[$,t.BUG_BITE],[1,t.CHARGE],[1,t.CRUNCH],[1,t.DISCHARGE],[1,t.STRING_SHOT],[15,t.BITE],[23,t.SPARK],[29,t.STICKY_WEB],[36,t.BUG_BUZZ],[43,t.GUILLOTINE],[50,t.FLY],[57,t.AGILITY],[64,t.ZAP_CANNON]],[e.CRABRAWLER]:[[1,t.BUBBLE],[1,t.VISE_GRIP],[5,t.ROCK_SMASH],[9,t.LEER],[13,t.BUBBLE_BEAM],[17,t.PROTECT],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.PAYBACK],[33,t.REVERSAL],[37,t.CRABHAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.CRABOMINABLE]:[[ne,t.ICE_PUNCH],[$,t.CRABHAMMER],[1,t.VISE_GRIP],[1,t.LEER],[1,t.PROTECT],[1,t.ROCK_SMASH],[1,t.BUBBLE],[1,t.PURSUIT],[1,t.PAYBACK],[17,t.BUBBLE_BEAM],[22,t.BRICK_BREAK],[25,t.SLAM],[29,t.AVALANCHE],[33,t.REVERSAL],[37,t.ICE_HAMMER],[42,t.IRON_DEFENSE],[45,t.DYNAMIC_PUNCH],[49,t.CLOSE_COMBAT]],[e.ORICORIO]:[[1,t.POUND],[4,t.GROWL],[6,t.PECK],[10,t.HELPING_HAND],[13,t.AIR_CUTTER],[16,t.BATON_PASS],[20,t.FEATHER_DANCE],[23,t.ACROBATICS],[26,t.TEETER_DANCE],[30,t.ROOST],[33,t.FLATTER],[36,t.AIR_SLASH],[40,t.REVELATION_DANCE],[43,t.AGILITY],[47,t.HURRICANE]],[e.CUTIEFLY]:[[1,t.ABSORB],[1,t.FAIRY_WIND],[6,t.STUN_SPORE],[12,t.SWEET_SCENT],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[30,t.COVET],[36,t.SWITCHEROO],[42,t.DAZZLING_GLEAM],[48,t.BUG_BUZZ],[54,t.QUIVER_DANCE]],[e.RIBOMBEE]:[[ne,t.POLLEN_PUFF],[1,t.ABSORB],[1,t.STUN_SPORE],[1,t.SWEET_SCENT],[1,t.FAIRY_WIND],[18,t.DRAINING_KISS],[24,t.STRUGGLE_BUG],[32,t.COVET],[40,t.SWITCHEROO],[48,t.DAZZLING_GLEAM],[56,t.BUG_BUZZ],[64,t.QUIVER_DANCE]],[e.ROCKRUFF]:[[1,t.TACKLE],[1,t.LEER],[4,t.SAND_ATTACK],[8,t.DOUBLE_TEAM],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[28,t.ROAR],[32,t.ROCK_SLIDE],[36,t.CRUNCH],[40,t.SCARY_FACE],[44,t.STEALTH_ROCK],[48,t.STONE_EDGE]],[e.LYCANROC]:[[ne,t.SUCKER_PUNCH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],[e.WISHIWASHI]:[[1,t.GROWL],[1,t.WATER_GUN],[4,t.HELPING_HAND],[8,t.BEAT_UP],[12,t.BRINE],[16,t.TEARFUL_LOOK],[20,t.DIVE],[24,t.SOAK],[28,t.UPROAR],[32,t.AQUA_TAIL],[36,t.AQUA_RING],[40,t.ENDEAVOR],[44,t.HYDRO_PUMP],[48,t.DOUBLE_EDGE]],[e.MAREANIE]:[[1,t.POISON_STING],[1,t.PECK],[5,t.WIDE_GUARD],[10,t.BITE],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[40,t.ACID_SPRAY],[45,t.POISON_JAB],[50,t.TOXIC]],[e.TOXAPEX]:[[ne,t.BANEFUL_BUNKER],[1,t.POISON_STING],[1,t.BITE],[1,t.PECK],[1,t.WIDE_GUARD],[15,t.VENOSHOCK],[20,t.RECOVER],[25,t.PIN_MISSILE],[30,t.TOXIC_SPIKES],[35,t.LIQUIDATION],[42,t.ACID_SPRAY],[49,t.POISON_JAB],[56,t.TOXIC]],[e.MUDBRAY]:[[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[4,t.IRON_DEFENSE],[8,t.DOUBLE_KICK],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[32,t.HEAVY_SLAM],[36,t.EARTHQUAKE],[40,t.MEGA_KICK],[44,t.SUPERPOWER]],[e.MUDSDALE]:[[1,t.DOUBLE_KICK],[1,t.MUD_SLAP],[1,t.ROCK_SMASH],[1,t.IRON_DEFENSE],[12,t.BULLDOZE],[16,t.STOMP],[20,t.STRENGTH],[24,t.COUNTER],[28,t.HIGH_HORSEPOWER],[34,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[46,t.MEGA_KICK],[52,t.SUPERPOWER]],[e.DEWPIDER]:[[1,t.WATER_GUN],[1,t.INFESTATION],[1,t.WATER_SPORT],[4,t.BUG_BITE],[8,t.BITE],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[24,t.CRUNCH],[28,t.SOAK],[32,t.ENTRAINMENT],[36,t.LUNGE],[40,t.LIQUIDATION],[44,t.LEECH_LIFE],[48,t.MIRROR_COAT]],[e.ARAQUANID]:[[1,t.BITE],[1,t.WATER_GUN],[1,t.BUG_BITE],[1,t.WIDE_GUARD],[1,t.INFESTATION],[1,t.WATER_SPORT],[1,t.SPIDER_WEB],[12,t.BUBBLE_BEAM],[16,t.AQUA_RING],[20,t.HEADBUTT],[26,t.CRUNCH],[32,t.SOAK],[38,t.ENTRAINMENT],[44,t.LUNGE],[50,t.LIQUIDATION],[56,t.LEECH_LIFE],[62,t.MIRROR_COAT]],[e.FOMANTIS]:[[1,t.FURY_CUTTER],[1,t.LEAFAGE],[5,t.GROWTH],[10,t.INGRAIN],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[35,t.SYNTHESIS],[40,t.LEAF_BLADE],[45,t.SUNNY_DAY],[50,t.SOLAR_BEAM]],[e.LURANTIS]:[[ne,t.PETAL_BLIZZARD],[1,t.GROWTH],[1,t.SOLAR_BEAM],[1,t.FURY_CUTTER],[1,t.INGRAIN],[1,t.NIGHT_SLASH],[1,t.LEAFAGE],[1,t.DUAL_CHOP],[15,t.RAZOR_LEAF],[20,t.SWEET_SCENT],[25,t.SLASH],[30,t.X_SCISSOR],[37,t.SYNTHESIS],[44,t.LEAF_BLADE],[51,t.SUNNY_DAY],[63,t.SOLAR_BLADE]],[e.MORELULL]:[[1,t.ABSORB],[1,t.ASTONISH],[4,t.CONFUSE_RAY],[8,t.INGRAIN],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[25,t.STRENGTH_SAP],[28,t.GIGA_DRAIN],[32,t.DAZZLING_GLEAM],[36,t.SPORE],[40,t.MOONBLAST],[44,t.DREAM_EATER]],[e.SHIINOTIC]:[[1,t.ABSORB],[1,t.CONFUSE_RAY],[1,t.INGRAIN],[1,t.ASTONISH],[1,t.FLASH],[12,t.MEGA_DRAIN],[16,t.SLEEP_POWDER],[20,t.MOONLIGHT],[27,t.STRENGTH_SAP],[32,t.GIGA_DRAIN],[38,t.DAZZLING_GLEAM],[44,t.SPORE],[50,t.MOONBLAST],[56,t.DREAM_EATER]],[e.SALANDIT]:[[1,t.SCRATCH],[1,t.POISON_GAS],[5,t.SMOG],[10,t.EMBER],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[35,t.VENOSHOCK],[40,t.DRAGON_PULSE],[45,t.FLAMETHROWER],[50,t.TOXIC],[55,t.ENDEAVOR]],[e.SALAZZLE]:[[ne,t.FIRE_LASH],[1,t.POUND],[1,t.SCRATCH],[1,t.DISABLE],[1,t.EMBER],[1,t.SMOG],[1,t.POISON_GAS],[1,t.SWAGGER],[1,t.ENCORE],[1,t.TORMENT],[1,t.KNOCK_OFF],[1,t.ENDEAVOR],[1,t.CAPTIVATE],[15,t.POISON_FANG],[20,t.SWEET_SCENT],[25,t.NASTY_PLOT],[30,t.INCINERATE],[37,t.VENOSHOCK],[44,t.DRAGON_PULSE],[51,t.FLAMETHROWER],[58,t.TOXIC]],[e.STUFFUL]:[[1,t.TACKLE],[1,t.LEER],[4,t.BABY_DOLL_EYES],[8,t.PAYBACK],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[28,t.FLAIL],[32,t.HAMMER_ARM],[36,t.THRASH],[40,t.PAIN_SPLIT],[44,t.DOUBLE_EDGE],[48,t.SUPERPOWER]],[e.BEWEAR]:[[ne,t.BIND],[1,t.TACKLE],[1,t.LEER],[1,t.PAYBACK],[1,t.BABY_DOLL_EYES],[12,t.BRUTAL_SWING],[16,t.ENDURE],[20,t.STRENGTH],[24,t.TAKE_DOWN],[30,t.FLAIL],[36,t.HAMMER_ARM],[42,t.THRASH],[48,t.PAIN_SPLIT],[54,t.DOUBLE_EDGE],[60,t.SUPERPOWER]],[e.BOUNSWEET]:[[1,t.SPLASH],[1,t.LEAFAGE],[4,t.PLAY_NICE],[8,t.RAPID_SPIN],[12,t.RAZOR_LEAF],[16,t.SWEET_SCENT],[20,t.MAGICAL_LEAF],[24,t.FLAIL],[28,t.TEETER_DANCE],[32,t.AROMATIC_MIST]],[e.STEENEE]:[[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.RAPID_SPIN],[1,t.PLAY_NICE],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM]],[e.TSAREENA]:[[ne,t.TROP_KICK],[1,t.LEAFAGE],[1,t.RAZOR_LEAF],[1,t.SPLASH],[1,t.FLAIL],[1,t.SWAGGER],[1,t.RAPID_SPIN],[1,t.POWER_WHIP],[1,t.PLAY_NICE],[1,t.PUNISHMENT],[16,t.SWEET_SCENT],[22,t.MAGICAL_LEAF],[28,t.STOMP],[34,t.TEETER_DANCE],[40,t.AROMATIC_MIST],[46,t.LEAF_STORM],[58,t.HIGH_JUMP_KICK]],[e.COMFEY]:[[1,t.WRAP],[1,t.GROWTH],[3,t.VINE_WHIP],[6,t.HELPING_HAND],[9,t.DRAINING_KISS],[12,t.FLOWER_SHIELD],[15,t.MAGICAL_LEAF],[18,t.SYNTHESIS],[21,t.LEECH_SEED],[24,t.GRASS_KNOT],[27,t.SWEET_KISS],[30,t.FLORAL_HEALING],[33,t.PETAL_BLIZZARD],[36,t.AROMATHERAPY],[39,t.PLAY_ROUGH],[42,t.SWEET_SCENT],[45,t.PETAL_DANCE],[48,t.GRASSY_TERRAIN]],[e.ORANGURU]:[[1,t.CONFUSION],[1,t.TAUNT],[5,t.AFTER_YOU],[10,t.CALM_MIND],[15,t.STORED_POWER],[20,t.PSYCH_UP],[25,t.QUASH],[30,t.NASTY_PLOT],[35,t.ZEN_HEADBUTT],[40,t.TRICK_ROOM],[45,t.PSYCHIC],[50,t.INSTRUCT],[55,t.FOUL_PLAY],[60,t.FUTURE_SIGHT]],[e.PASSIMIAN]:[[1,t.TACKLE],[1,t.LEER],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.BEAT_UP],[20,t.SCARY_FACE],[25,t.TAKE_DOWN],[30,t.FLING],[35,t.BULK_UP],[40,t.THRASH],[45,t.DOUBLE_EDGE],[50,t.CLOSE_COMBAT],[55,t.REVERSAL],[60,t.GIGA_IMPACT]],[e.WIMPOD]:[[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.STRUGGLE_BUG]],[e.GOLISOPOD]:[[ne,t.FIRST_IMPRESSION],[1,t.SAND_ATTACK],[1,t.DEFENSE_CURL],[1,t.SPITE],[1,t.STRUGGLE_BUG],[4,t.ROCK_SMASH],[8,t.FURY_CUTTER],[12,t.MUD_SHOT],[16,t.BUG_BITE],[20,t.IRON_DEFENSE],[24,t.SUCKER_PUNCH],[28,t.SLASH],[32,t.RAZOR_SHELL],[36,t.PIN_MISSILE],[40,t.SWORDS_DANCE],[44,t.LIQUIDATION]],[e.SANDYGAST]:[[1,t.ABSORB],[1,t.HARDEN],[5,t.ASTONISH],[10,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[45,t.SHADOW_BALL],[50,t.EARTH_POWER],[55,t.SHORE_UP],[60,t.SANDSTORM]],[e.PALOSSAND]:[[1,t.ABSORB],[1,t.HARDEN],[1,t.ASTONISH],[1,t.SAND_TOMB],[15,t.MEGA_DRAIN],[20,t.SAND_ATTACK],[25,t.BULLDOZE],[30,t.HYPNOSIS],[35,t.GIGA_DRAIN],[40,t.IRON_DEFENSE],[47,t.SHADOW_BALL],[54,t.EARTH_POWER],[61,t.SHORE_UP],[68,t.SANDSTORM]],[e.PYUKUMUKU]:[[1,t.COUNTER],[1,t.HARDEN],[1,t.BATON_PASS],[1,t.BIDE],[1,t.MUD_SPORT],[1,t.WATER_SPORT],[5,t.HELPING_HAND],[10,t.TAUNT],[15,t.SAFEGUARD],[20,t.MIRROR_COAT],[25,t.PURIFY],[30,t.CURSE],[35,t.GASTRO_ACID],[40,t.PAIN_SPLIT],[45,t.RECOVER],[50,t.SOAK],[55,t.TOXIC],[60,t.MEMENTO]],[e.TYPE_NULL]:[[1,t.TACKLE],[1,t.IMPRISON],[5,t.AERIAL_ACE],[10,t.SCARY_FACE],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.IRON_HEAD],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.HEAL_BLOCK]],[e.SILVALLY]:[[ne,t.MULTI_ATTACK],[1,t.TACKLE],[1,t.BITE],[1,t.EXPLOSION],[1,t.SCARY_FACE],[1,t.IMPRISON],[1,t.POISON_FANG],[1,t.AERIAL_ACE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[1,t.IRON_HEAD],[1,t.HEAL_BLOCK],[15,t.DOUBLE_HIT],[20,t.METAL_SOUND],[25,t.CRUSH_CLAW],[30,t.AIR_SLASH],[35,t.TRI_ATTACK],[40,t.X_SCISSOR],[45,t.CRUNCH],[50,t.TAKE_DOWN],[55,t.DOUBLE_EDGE],[60,t.PARTING_SHOT]],[e.MINIOR]:[[1,t.TACKLE],[3,t.DEFENSE_CURL],[8,t.ROLLOUT],[10,t.CONFUSE_RAY],[15,t.SWIFT],[17,t.ANCIENT_POWER],[22,t.SELF_DESTRUCT],[24,t.STEALTH_ROCK],[29,t.TAKE_DOWN],[31,t.AUTOTOMIZE],[36,t.COSMIC_POWER],[38,t.POWER_GEM],[43,t.DOUBLE_EDGE],[45,t.SHELL_SMASH],[50,t.EXPLOSION]],[e.KOMALA]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[6,t.STOCKPILE],[6,t.SPIT_UP],[6,t.SWALLOW],[11,t.RAPID_SPIN],[16,t.YAWN],[21,t.SLAM],[26,t.FLAIL],[31,t.SUCKER_PUNCH],[36,t.PSYCH_UP],[41,t.WOOD_HAMMER],[46,t.THRASH]],[e.TURTONATOR]:[[1,t.TACKLE],[1,t.SMOG],[4,t.EMBER],[8,t.PROTECT],[12,t.ENDURE],[16,t.FLAIL],[20,t.INCINERATE],[24,t.IRON_DEFENSE],[28,t.DRAGON_PULSE],[32,t.BODY_SLAM],[36,t.FLAMETHROWER],[40,t.SHELL_TRAP],[44,t.SHELL_SMASH],[48,t.OVERHEAT],[52,t.EXPLOSION]],[e.TOGEDEMARU]:[[1,t.TACKLE],[1,t.NUZZLE],[5,t.DEFENSE_CURL],[10,t.CHARGE],[15,t.THUNDER_SHOCK],[20,t.FELL_STINGER],[25,t.SPARK],[30,t.PIN_MISSILE],[35,t.MAGNET_RISE],[40,t.ZING_ZAP],[45,t.DISCHARGE],[50,t.ELECTRIC_TERRAIN],[55,t.WILD_CHARGE],[60,t.SPIKY_SHIELD]],[e.MIMIKYU]:[[1,t.SCRATCH],[1,t.SPLASH],[1,t.ASTONISH],[1,t.COPYCAT],[1,t.WOOD_HAMMER],[6,t.SHADOW_SNEAK],[12,t.DOUBLE_TEAM],[18,t.BABY_DOLL_EYES],[24,t.MIMIC],[30,t.HONE_CLAWS],[36,t.SLASH],[42,t.SHADOW_CLAW],[48,t.CHARM],[54,t.PLAY_ROUGH],[60,t.PAIN_SPLIT]],[e.BRUXISH]:[[1,t.WATER_GUN],[4,t.ASTONISH],[9,t.CONFUSION],[12,t.BITE],[17,t.AQUA_JET],[20,t.DISABLE],[25,t.PSYSHOCK],[28,t.CRUNCH],[33,t.AQUA_TAIL],[36,t.SCREECH],[41,t.PSYCHIC_FANGS],[44,t.WAVE_CRASH]],[e.DRAMPA]:[[1,t.ECHOED_VOICE],[1,t.PLAY_NICE],[5,t.TWISTER],[10,t.PROTECT],[15,t.GLARE],[20,t.SAFEGUARD],[25,t.DRAGON_BREATH],[30,t.EXTRASENSORY],[35,t.DRAGON_PULSE],[40,t.LIGHT_SCREEN],[45,t.FLY],[50,t.HYPER_VOICE],[55,t.OUTRAGE]],[e.DHELMISE]:[[1,t.ABSORB],[1,t.RAPID_SPIN],[4,t.ASTONISH],[8,t.WRAP],[12,t.MEGA_DRAIN],[16,t.GROWTH],[20,t.GYRO_BALL],[24,t.SWITCHEROO],[28,t.GIGA_DRAIN],[32,t.WHIRLPOOL],[36,t.HEAVY_SLAM],[40,t.SLAM],[44,t.SHADOW_BALL],[48,t.METAL_SOUND],[52,t.ANCHOR_SHOT],[56,t.ENERGY_BALL],[60,t.PHANTOM_FORCE],[64,t.POWER_WHIP]],[e.JANGMO_O]:[[1,t.TACKLE],[1,t.LEER],[4,t.PROTECT],[8,t.DRAGON_TAIL],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[36,t.NOBLE_ROAR],[40,t.DRAGON_DANCE],[44,t.OUTRAGE]],[e.HAKAMO_O]:[[ne,t.SKY_UPPERCUT],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[50,t.OUTRAGE],[56,t.CLOSE_COMBAT]],[e.KOMMO_O]:[[ne,t.CLANGING_SCALES],[$,t.BELLY_DRUM],[1,t.TACKLE],[1,t.LEER],[1,t.PROTECT],[1,t.DRAGON_TAIL],[1,t.BIDE],[1,t.SKY_UPPERCUT],[12,t.SCARY_FACE],[16,t.HEADBUTT],[20,t.WORK_UP],[24,t.SCREECH],[28,t.IRON_DEFENSE],[32,t.DRAGON_CLAW],[38,t.NOBLE_ROAR],[44,t.DRAGON_DANCE],[52,t.OUTRAGE],[60,t.CLOSE_COMBAT],[68,t.CLANGOROUS_SOUL],[76,t.BOOMBURST]],[e.TAPU_KOKO]:[[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[5,t.WITHDRAW],[10,t.FAIRY_WIND],[15,t.FALSE_SWIPE],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.CHARGE],[35,t.AGILITY],[40,t.SCREECH],[45,t.DISCHARGE],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WILD_CHARGE],[65,t.BRAVE_BIRD],[70,t.POWER_SWAP],[75,t.ELECTRIC_TERRAIN]],[e.TAPU_LELE]:[[1,t.CONFUSION],[1,t.ASTONISH],[5,t.WITHDRAW],[10,t.AROMATHERAPY],[15,t.DRAINING_KISS],[20,t.PSYBEAM],[25,t.FLATTER],[30,t.AROMATIC_MIST],[35,t.SWEET_SCENT],[40,t.EXTRASENSORY],[45,t.PSYSHOCK],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.TICKLE],[70,t.SKILL_SWAP],[75,t.PSYCHIC_TERRAIN]],[e.TAPU_BULU]:[[1,t.ROCK_SMASH],[1,t.LEAFAGE],[5,t.WITHDRAW],[10,t.DISABLE],[15,t.LEECH_SEED],[20,t.MEGA_DRAIN],[25,t.WHIRLWIND],[30,t.HORN_ATTACK],[35,t.SCARY_FACE],[40,t.HORN_LEECH],[45,t.ZEN_HEADBUTT],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.WOOD_HAMMER],[65,t.MEGAHORN],[70,t.SKULL_BASH],[75,t.GRASSY_TERRAIN]],[e.TAPU_FINI]:[[1,t.WATER_GUN],[1,t.DISARMING_VOICE],[5,t.WITHDRAW],[10,t.MIST],[10,t.HAZE],[15,t.AQUA_RING],[20,t.WATER_PULSE],[25,t.BRINE],[30,t.DEFOG],[35,t.HEAL_PULSE],[40,t.SURF],[45,t.MUDDY_WATER],[50,t.MEAN_LOOK],[55,t.NATURES_MADNESS],[60,t.MOONBLAST],[65,t.HYDRO_PUMP],[70,t.SOAK],[75,t.MISTY_TERRAIN]],[e.COSMOG]:[[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.COSMOEM]:[[ne,t.COSMIC_POWER],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER]],[e.SOLGALEO]:[[ne,t.SUNSTEEL_STRIKE],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.METAL_CLAW],[1,t.COSMIC_POWER],[1,t.NOBLE_ROAR],[1,t.WAKE_UP_SLAP],[7,t.IRON_HEAD],[14,t.METAL_SOUND],[21,t.ZEN_HEADBUTT],[28,t.FLASH_CANNON],[35,t.MORNING_SUN],[42,t.CRUNCH],[49,t.METAL_BURST],[56,t.WILD_CHARGE],[63,t.SOLAR_BEAM],[70,t.FLARE_BLITZ],[77,t.WIDE_GUARD],[84,t.GIGA_IMPACT]],[e.LUNALA]:[[ne,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.HYPNOSIS],[1,t.TELEPORT],[1,t.SPLASH],[1,t.STORED_POWER],[1,t.COSMIC_POWER],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.AIR_SLASH],[28,t.SHADOW_BALL],[35,t.MOONLIGHT],[42,t.NIGHT_DAZE],[49,t.MAGIC_COAT],[56,t.MOONBLAST],[63,t.PHANTOM_FORCE],[70,t.DREAM_EATER],[77,t.WIDE_GUARD],[84,t.HYPER_BEAM]],[e.NIHILEGO]:[[1,t.POUND],[1,t.WRAP],[1,t.CONSTRICT],[5,t.ACID],[10,t.TICKLE],[15,t.ACID_SPRAY],[20,t.CLEAR_SMOG],[25,t.GUARD_SPLIT],[25,t.POWER_SPLIT],[30,t.VENOSHOCK],[35,t.HEADBUTT],[40,t.TOXIC_SPIKES],[45,t.VENOM_DRENCH],[50,t.POWER_GEM],[55,t.STEALTH_ROCK],[60,t.MIRROR_COAT],[65,t.WONDER_ROOM],[70,t.HEAD_SMASH]],[e.BUZZWOLE]:[[1,t.HARDEN],[1,t.POWER_UP_PUNCH],[5,t.TAUNT],[10,t.FELL_STINGER],[15,t.VITAL_THROW],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.MEGA_PUNCH],[40,t.LUNGE],[45,t.FOCUS_ENERGY],[50,t.DYNAMIC_PUNCH],[55,t.COUNTER],[60,t.HAMMER_ARM],[65,t.SUPERPOWER],[70,t.FOCUS_PUNCH]],[e.PHEROMOSA]:[[1,t.RAPID_SPIN],[1,t.FEINT],[5,t.LEER],[10,t.QUICK_GUARD],[15,t.BUG_BITE],[20,t.LOW_KICK],[25,t.DOUBLE_KICK],[30,t.TRIPLE_KICK],[35,t.STOMP],[40,t.AGILITY],[45,t.LUNGE],[50,t.BOUNCE],[55,t.SPEED_SWAP],[60,t.BUG_BUZZ],[65,t.QUIVER_DANCE],[70,t.HIGH_JUMP_KICK]],[e.XURKITREE]:[[1,t.WRAP],[1,t.THUNDER_SHOCK],[5,t.CHARGE],[10,t.THUNDER_WAVE],[15,t.INGRAIN],[20,t.SPARK],[25,t.SHOCK_WAVE],[30,t.HYPNOSIS],[35,t.EERIE_IMPULSE],[40,t.THUNDER_PUNCH],[45,t.DISCHARGE],[50,t.MAGNET_RISE],[55,t.THUNDERBOLT],[60,t.ELECTRIC_TERRAIN],[65,t.POWER_WHIP],[70,t.ZAP_CANNON]],[e.CELESTEELA]:[[1,t.TACKLE],[1,t.ABSORB],[5,t.HARDEN],[10,t.WIDE_GUARD],[15,t.MEGA_DRAIN],[20,t.SMACK_DOWN],[25,t.INGRAIN],[30,t.AUTOTOMIZE],[35,t.GIGA_DRAIN],[40,t.FLASH_CANNON],[45,t.METAL_SOUND],[50,t.IRON_DEFENSE],[55,t.LEECH_SEED],[60,t.HEAVY_SLAM],[65,t.DOUBLE_EDGE],[70,t.SKULL_BASH]],[e.KARTANA]:[[1,t.FURY_CUTTER],[1,t.VACUUM_WAVE],[5,t.RAZOR_LEAF],[10,t.FALSE_SWIPE],[15,t.CUT],[20,t.AIR_CUTTER],[25,t.AERIAL_ACE],[30,t.DETECT],[35,t.NIGHT_SLASH],[40,t.SYNTHESIS],[45,t.LASER_FOCUS],[50,t.DEFOG],[55,t.LEAF_BLADE],[60,t.SACRED_SWORD],[65,t.SWORDS_DANCE],[70,t.GUILLOTINE]],[e.GUZZLORD]:[[1,t.BITE],[1,t.DRAGON_TAIL],[5,t.STOCKPILE],[5,t.SWALLOW],[10,t.KNOCK_OFF],[15,t.STOMP],[20,t.STOMPING_TANTRUM],[25,t.WIDE_GUARD],[30,t.CRUNCH],[35,t.BODY_SLAM],[40,t.GASTRO_ACID],[45,t.HAMMER_ARM],[50,t.HEAVY_SLAM],[55,t.DRAGON_RUSH],[60,t.BELCH],[65,t.THRASH],[70,t.GIGA_IMPACT]],[e.NECROZMA]:[[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[1,t.MIRROR_SHOT],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],[e.MAGEARNA]:[[1,t.HELPING_HAND],[1,t.GYRO_BALL],[1,t.DISARMING_VOICE],[1,t.CRAFTY_SHIELD],[1,t.GEAR_UP],[6,t.DEFENSE_CURL],[12,t.ROLLOUT],[18,t.IRON_DEFENSE],[24,t.MAGNETIC_FLUX],[30,t.PSYBEAM],[36,t.AURORA_BEAM],[42,t.LOCK_ON],[48,t.SHIFT_GEAR],[54,t.TRICK],[60,t.IRON_HEAD],[66,t.AURA_SPHERE],[72,t.FLASH_CANNON],[78,t.PAIN_SPLIT],[84,t.ZAP_CANNON],[90,t.FLEUR_CANNON]],[e.MARSHADOW]:[[1,t.FIRE_PUNCH],[1,t.ICE_PUNCH],[1,t.THUNDER_PUNCH],[1,t.COUNTER],[1,t.FEINT],[1,t.COPYCAT],[1,t.SHADOW_SNEAK],[1,t.PURSUIT],[9,t.ROLE_PLAY],[18,t.SHADOW_PUNCH],[27,t.FORCE_PALM],[36,t.ASSURANCE],[45,t.SUCKER_PUNCH],[54,t.DRAIN_PUNCH],[63,t.PSYCH_UP],[72,t.SPECTRAL_THIEF],[81,t.LASER_FOCUS],[90,t.ENDEAVOR],[99,t.CLOSE_COMBAT]],[e.POIPOLE]:[[$,t.DRAGON_PULSE],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC]],[e.NAGANADEL]:[[ne,t.AIR_CUTTER],[1,t.GROWL],[1,t.ACID],[1,t.PECK],[1,t.HELPING_HAND],[1,t.AIR_SLASH],[1,t.DRAGON_PULSE],[7,t.FURY_ATTACK],[14,t.FELL_STINGER],[21,t.CHARM],[28,t.VENOSHOCK],[35,t.VENOM_DRENCH],[42,t.NASTY_PLOT],[49,t.POISON_JAB],[56,t.GASTRO_ACID],[63,t.TOXIC],[70,t.DRAGON_RUSH]],[e.STAKATAKA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[10,t.PROTECT],[15,t.STOMP],[20,t.BLOCK],[25,t.ROCK_SLIDE],[30,t.WIDE_GUARD],[35,t.AUTOTOMIZE],[40,t.ROCK_BLAST],[45,t.MAGNET_RISE],[50,t.IRON_DEFENSE],[55,t.IRON_HEAD],[60,t.TAKE_DOWN],[65,t.STEALTH_ROCK],[70,t.DOUBLE_EDGE]],[e.BLACEPHALON]:[[1,t.FIRE_SPIN],[1,t.ASTONISH],[5,t.LIGHT_SCREEN],[10,t.EMBER],[15,t.NIGHT_SHADE],[20,t.CONFUSE_RAY],[25,t.MAGIC_COAT],[30,t.INCINERATE],[35,t.HYPNOSIS],[40,t.MYSTICAL_FIRE],[45,t.SHADOW_BALL],[50,t.CALM_MIND],[55,t.WILL_O_WISP],[60,t.TRICK],[65,t.FIRE_BLAST],[70,t.MIND_BLOWN]],[e.ZERAORA]:[[1,t.SCRATCH],[1,t.QUICK_ATTACK],[1,t.SPARK],[1,t.FAKE_OUT],[1,t.SNARL],[1,t.POWER_UP_PUNCH],[8,t.FURY_SWIPES],[16,t.QUICK_GUARD],[24,t.SLASH],[32,t.VOLT_SWITCH],[40,t.CHARGE],[48,t.THUNDER_PUNCH],[56,t.HONE_CLAWS],[64,t.DISCHARGE],[72,t.WILD_CHARGE],[80,t.AGILITY],[88,t.PLASMA_FISTS],[96,t.CLOSE_COMBAT]],[e.MELTAN]:[[1,t.THUNDER_SHOCK],[1,t.HARDEN],[8,t.TAIL_WHIP],[16,t.HEADBUTT],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON]],[e.MELMETAL]:[[ne,t.THUNDER_PUNCH],[1,t.HEADBUTT],[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[1,t.HARDEN],[24,t.THUNDER_WAVE],[32,t.ACID_ARMOR],[40,t.FLASH_CANNON],[48,t.MEGA_PUNCH],[56,t.PROTECT],[64,t.DISCHARGE],[72,t.DYNAMIC_PUNCH],[80,t.SUPERPOWER],[88,t.DOUBLE_IRON_BASH],[96,t.HYPER_BEAM]],[e.GROOKEY]:[[1,t.SCRATCH],[1,t.GROWL],[5,t.BRANCH_POKE],[8,t.TAUNT],[12,t.RAZOR_LEAF],[17,t.SCREECH],[20,t.KNOCK_OFF],[24,t.SLAM],[28,t.UPROAR],[32,t.WOOD_HAMMER],[36,t.ENDEAVOR]],[e.THWACKEY]:[[ne,t.DOUBLE_HIT],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[36,t.UPROAR],[42,t.WOOD_HAMMER],[48,t.ENDEAVOR]],[e.RILLABOOM]:[[ne,t.DRUM_BEATING],[1,t.SCRATCH],[1,t.GROWL],[1,t.TAUNT],[1,t.DOUBLE_HIT],[1,t.NOBLE_ROAR],[1,t.GRASSY_TERRAIN],[1,t.BRANCH_POKE],[12,t.RAZOR_LEAF],[19,t.SCREECH],[24,t.KNOCK_OFF],[30,t.SLAM],[38,t.UPROAR],[46,t.WOOD_HAMMER],[54,t.ENDEAVOR],[62,t.BOOMBURST]],[e.SCORBUNNY]:[[1,t.TACKLE],[1,t.GROWL],[5,t.EMBER],[8,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[17,t.FLAME_CHARGE],[20,t.AGILITY],[24,t.HEADBUTT],[28,t.COUNTER],[32,t.BOUNCE],[36,t.DOUBLE_EDGE]],[e.RABOOT]:[[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[36,t.COUNTER],[42,t.BOUNCE],[48,t.DOUBLE_EDGE]],[e.CINDERACE]:[[ne,t.PYRO_BALL],[1,t.TACKLE],[1,t.GROWL],[1,t.EMBER],[1,t.QUICK_ATTACK],[1,t.FEINT],[12,t.DOUBLE_KICK],[19,t.FLAME_CHARGE],[24,t.AGILITY],[30,t.HEADBUTT],[38,t.COUNTER],[46,t.BOUNCE],[54,t.DOUBLE_EDGE],[62,t.COURT_CHANGE]],[e.SOBBLE]:[[1,t.POUND],[1,t.GROWL],[5,t.WATER_GUN],[8,t.BIND],[12,t.WATER_PULSE],[17,t.TEARFUL_LOOK],[20,t.SUCKER_PUNCH],[24,t.U_TURN],[28,t.LIQUIDATION],[32,t.SOAK],[36,t.RAIN_DANCE]],[e.DRIZZILE]:[[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[36,t.LIQUIDATION],[42,t.SOAK],[48,t.RAIN_DANCE]],[e.INTELEON]:[[ne,t.SNIPE_SHOT],[1,t.POUND],[1,t.BIND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.ACROBATICS],[12,t.WATER_PULSE],[19,t.TEARFUL_LOOK],[24,t.SUCKER_PUNCH],[30,t.U_TURN],[38,t.LIQUIDATION],[46,t.SOAK],[54,t.RAIN_DANCE],[62,t.HYDRO_PUMP]],[e.SKWOVET]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.BITE],[10,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[25,t.REST],[30,t.COUNTER],[35,t.BULLET_SEED],[40,t.SUPER_FANG],[45,t.BELCH]],[e.GREEDENT]:[[ne,t.COVET],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.STUFF_CHEEKS],[15,t.STOCKPILE],[15,t.SPIT_UP],[15,t.SWALLOW],[20,t.BODY_SLAM],[27,t.REST],[34,t.COUNTER],[41,t.BULLET_SEED],[48,t.SUPER_FANG],[55,t.BELCH]],[e.ROOKIDEE]:[[1,t.LEER],[1,t.PECK],[4,t.POWER_TRIP],[8,t.HONE_CLAWS],[12,t.FURY_ATTACK],[16,t.PLUCK],[20,t.TAUNT],[24,t.SCARY_FACE],[28,t.DRILL_PECK],[32,t.SWAGGER],[36,t.BRAVE_BIRD]],[e.CORVISQUIRE]:[[1,t.LEER],[1,t.PECK],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[40,t.SWAGGER],[46,t.BRAVE_BIRD]],[e.CORVIKNIGHT]:[[ne,t.STEEL_WING],[1,t.LEER],[1,t.PECK],[1,t.SCREECH],[1,t.METAL_SOUND],[1,t.IRON_DEFENSE],[1,t.HONE_CLAWS],[1,t.POWER_TRIP],[12,t.FURY_ATTACK],[16,t.PLUCK],[22,t.TAUNT],[28,t.SCARY_FACE],[34,t.DRILL_PECK],[42,t.SWAGGER],[50,t.BRAVE_BIRD]],[e.BLIPBUG]:[[1,t.STRUGGLE_BUG]],[e.DOTTLER]:[[ne,t.CONFUSION],[ne,t.LIGHT_SCREEN],[ne,t.REFLECT],[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG]],[e.ORBEETLE]:[[1,t.CONFUSION],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.STRUGGLE_BUG],[4,t.CONFUSE_RAY],[8,t.MAGIC_COAT],[12,t.AGILITY],[16,t.PSYBEAM],[20,t.HYPNOSIS],[24,t.ALLY_SWITCH],[28,t.BUG_BUZZ],[32,t.MIRROR_COAT],[36,t.PSYCHIC],[40,t.AFTER_YOU],[44,t.CALM_MIND],[48,t.PSYCHIC_TERRAIN]],[e.NICKIT]:[[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[4,t.BEAT_UP],[8,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[20,t.NASTY_PLOT],[24,t.SUCKER_PUNCH],[28,t.NIGHT_SLASH],[32,t.TAIL_SLAP],[36,t.FOUL_PLAY]],[e.THIEVUL]:[[ne,t.THIEF],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.BEAT_UP],[1,t.HONE_CLAWS],[12,t.SNARL],[16,t.ASSURANCE],[22,t.NASTY_PLOT],[28,t.SUCKER_PUNCH],[34,t.NIGHT_SLASH],[40,t.TAIL_SLAP],[46,t.FOUL_PLAY],[52,t.PARTING_SHOT]],[e.GOSSIFLEUR]:[[1,t.SING],[1,t.LEAFAGE],[4,t.RAPID_SPIN],[8,t.SWEET_SCENT],[12,t.RAZOR_LEAF],[16,t.ROUND],[21,t.LEAF_TORNADO],[24,t.SYNTHESIS],[28,t.HYPER_VOICE],[32,t.AROMATHERAPY],[36,t.LEAF_STORM]],[e.ELDEGOSS]:[[ne,t.COTTON_SPORE],[1,t.SING],[1,t.RAPID_SPIN],[1,t.SWEET_SCENT],[1,t.LEAFAGE],[12,t.RAZOR_LEAF],[16,t.ROUND],[23,t.LEAF_TORNADO],[28,t.SYNTHESIS],[34,t.HYPER_VOICE],[40,t.AROMATHERAPY],[46,t.LEAF_STORM],[52,t.COTTON_GUARD]],[e.WOOLOO]:[[1,t.TACKLE],[1,t.GROWL],[4,t.DEFENSE_CURL],[8,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[25,t.TAKE_DOWN],[28,t.GUARD_SWAP],[32,t.REVERSAL],[36,t.COTTON_GUARD],[40,t.DOUBLE_EDGE]],[e.DUBWOOL]:[[1,t.TACKLE],[1,t.GROWL],[1,t.DEFENSE_CURL],[1,t.COPYCAT],[12,t.GUARD_SPLIT],[16,t.DOUBLE_KICK],[21,t.HEADBUTT],[27,t.TAKE_DOWN],[32,t.GUARD_SWAP],[38,t.REVERSAL],[44,t.COTTON_GUARD],[50,t.DOUBLE_EDGE],[56,t.LAST_RESORT]],[e.CHEWTLE]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.BITE],[14,t.PROTECT],[21,t.HEADBUTT],[28,t.COUNTER],[35,t.JAW_LOCK],[42,t.LIQUIDATION],[49,t.BODY_SLAM]],[e.DREDNAW]:[[ne,t.ROCK_TOMB],[1,t.TACKLE],[1,t.BITE],[1,t.WATER_GUN],[1,t.PROTECT],[1,t.CRUNCH],[1,t.ROCK_POLISH],[1,t.RAZOR_SHELL],[21,t.HEADBUTT],[30,t.COUNTER],[39,t.JAW_LOCK],[48,t.LIQUIDATION],[57,t.BODY_SLAM],[66,t.HEAD_SMASH]],[e.YAMPER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.NUZZLE],[10,t.BITE],[15,t.ROAR],[20,t.SPARK],[26,t.CHARM],[30,t.CRUNCH],[35,t.CHARGE],[40,t.WILD_CHARGE],[45,t.PLAY_ROUGH]],[e.BOLTUND]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.BITE],[1,t.ELECTRIFY],[1,t.NUZZLE],[15,t.ROAR],[20,t.SPARK],[28,t.CHARM],[34,t.CRUNCH],[41,t.CHARGE],[48,t.WILD_CHARGE],[55,t.PLAY_ROUGH],[62,t.ELECTRIC_TERRAIN]],[e.ROLYCOLY]:[[1,t.TACKLE],[1,t.SMOKESCREEN],[5,t.RAPID_SPIN],[10,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[25,t.INCINERATE],[30,t.STEALTH_ROCK],[35,t.HEAT_CRASH],[40,t.ROCK_BLAST]],[e.CARKOL]:[[ne,t.FLAME_CHARGE],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[35,t.STEALTH_ROCK],[41,t.HEAT_CRASH],[48,t.ROCK_BLAST],[55,t.STONE_EDGE]],[e.COALOSSAL]:[[ne,t.TAR_SHOT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.RAPID_SPIN],[1,t.SMACK_DOWN],[1,t.FLAME_CHARGE],[15,t.ROCK_POLISH],[20,t.ANCIENT_POWER],[27,t.INCINERATE],[37,t.STEALTH_ROCK],[45,t.HEAT_CRASH],[54,t.ROCK_BLAST],[63,t.STONE_EDGE]],[e.APPLIN]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.LEAFAGE]],[e.FLAPPLE]:[[ne,t.WING_ATTACK],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.TWISTER],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.ACID_SPRAY],[8,t.ACROBATICS],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.DRAGON_BREATH],[24,t.DRAGON_DANCE],[28,t.DRAGON_PULSE],[32,t.GRAV_APPLE],[36,t.IRON_DEFENSE],[40,t.FLY],[44,t.DRAGON_RUSH]],[e.APPLETUN]:[[ne,t.HEADBUTT],[1,t.LEAFAGE],[1,t.GROWTH],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.CURSE],[8,t.STOMP],[12,t.LEECH_SEED],[16,t.PROTECT],[20,t.BULLET_SEED],[24,t.RECOVER],[28,t.APPLE_ACID],[32,t.BODY_SLAM],[36,t.IRON_DEFENSE],[40,t.DRAGON_PULSE],[44,t.ENERGY_BALL]],[e.SILICOBRA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[5,t.MINIMIZE],[10,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[40,t.SLAM],[45,t.COIL],[50,t.SAND_TOMB]],[e.SANDACONDA]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.MUD_SLAP],[1,t.MINIMIZE],[1,t.BRUTAL_SWING],[15,t.BULLDOZE],[20,t.HEADBUTT],[25,t.GLARE],[30,t.DIG],[35,t.SANDSTORM],[42,t.SLAM],[49,t.COIL],[51,t.SAND_TOMB]],[e.CRAMORANT]:[[$,t.BELCH],[1,t.PECK],[1,t.STOCKPILE],[1,t.SPIT_UP],[1,t.SWALLOW],[7,t.WATER_GUN],[14,t.FURY_ATTACK],[21,t.PLUCK],[28,t.DIVE],[35,t.DRILL_PECK],[42,t.AMNESIA],[49,t.THRASH],[56,t.HYDRO_PUMP]],[e.ARROKUDA]:[[1,t.PECK],[1,t.AQUA_JET],[6,t.FURY_ATTACK],[12,t.BITE],[18,t.AGILITY],[24,t.DIVE],[30,t.FOCUS_ENERGY],[36,t.CRUNCH],[42,t.LIQUIDATION],[48,t.DOUBLE_EDGE]],[e.BARRASKEWDA]:[[1,t.FURY_ATTACK],[1,t.BITE],[1,t.PECK],[1,t.AQUA_JET],[1,t.THROAT_CHOP],[18,t.AGILITY],[24,t.DIVE],[32,t.FOCUS_ENERGY],[40,t.CRUNCH],[48,t.LIQUIDATION],[56,t.DOUBLE_EDGE]],[e.TOXEL]:[[1,t.GROWL],[1,t.ACID],[1,t.FLAIL],[1,t.BELCH],[1,t.NUZZLE],[1,t.TEARFUL_LOOK]],[e.TOXTRICITY]:[[ne,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.SHIFT_GEAR]],[e.SIZZLIPEDE]:[[1,t.EMBER],[1,t.SMOKESCREEN],[5,t.WRAP],[10,t.BITE],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[30,t.SLAM],[35,t.FIRE_SPIN],[40,t.CRUNCH],[45,t.FIRE_LASH],[50,t.LUNGE],[55,t.BURN_UP]],[e.CENTISKORCH]:[[1,t.WRAP],[1,t.BITE],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.INFERNO],[15,t.FLAME_WHEEL],[20,t.BUG_BITE],[25,t.COIL],[32,t.SLAM],[39,t.FIRE_SPIN],[46,t.CRUNCH],[53,t.FIRE_LASH],[60,t.LUNGE],[67,t.BURN_UP]],[e.CLOBBOPUS]:[[1,t.LEER],[1,t.ROCK_SMASH],[5,t.FEINT],[10,t.BIND],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER]],[e.GRAPPLOCT]:[[ne,t.OCTOLOCK],[1,t.BIND],[1,t.LEER],[1,t.OCTAZOOKA],[1,t.ROCK_SMASH],[1,t.FEINT],[15,t.DETECT],[20,t.BRICK_BREAK],[25,t.BULK_UP],[30,t.SUBMISSION],[35,t.TAUNT],[40,t.REVERSAL],[45,t.SUPERPOWER],[50,t.TOPSY_TURVY]],[e.SINISTEA]:[[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.ABSORB],[6,t.AROMATIC_MIST],[12,t.MEGA_DRAIN],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH]],[e.POLTEAGEIST]:[[ne,t.TEATIME],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.WITHDRAW],[1,t.ASTONISH],[1,t.AROMATIC_MIST],[1,t.STRENGTH_SAP],[18,t.PROTECT],[24,t.SUCKER_PUNCH],[30,t.SWEET_SCENT],[36,t.GIGA_DRAIN],[42,t.NASTY_PLOT],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.SHELL_SMASH],[66,t.CURSE]],[e.HATENNA]:[[1,t.CONFUSION],[1,t.PLAY_NICE],[5,t.LIFE_DEW],[10,t.DISARMING_VOICE],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[35,t.CALM_MIND],[40,t.PSYCHIC],[45,t.HEALING_WISH]],[e.HATTREM]:[[ne,t.BRUTAL_SWING],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[44,t.PSYCHIC],[51,t.HEALING_WISH]],[e.HATTERENE]:[[ne,t.PSYCHO_CUT],[1,t.CONFUSION],[1,t.DISARMING_VOICE],[1,t.PLAY_NICE],[1,t.BRUTAL_SWING],[1,t.LIFE_DEW],[15,t.AROMATIC_MIST],[20,t.PSYBEAM],[25,t.HEAL_PULSE],[30,t.DAZZLING_GLEAM],[37,t.CALM_MIND],[46,t.PSYCHIC],[55,t.HEALING_WISH],[64,t.MAGIC_POWDER]],[e.IMPIDIMP]:[[1,t.FAKE_OUT],[1,t.CONFIDE],[4,t.BITE],[8,t.FLATTER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[33,t.DARK_PULSE],[36,t.NASTY_PLOT],[40,t.PLAY_ROUGH],[44,t.FOUL_PLAY]],[e.MORGREM]:[[ne,t.FALSE_SURRENDER],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.CONFIDE],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[46,t.PLAY_ROUGH],[52,t.FOUL_PLAY]],[e.GRIMMSNARL]:[[ne,t.SPIRIT_BREAK],[1,t.BITE],[1,t.FAKE_OUT],[1,t.FLATTER],[1,t.BULK_UP],[1,t.CONFIDE],[1,t.FALSE_SURRENDER],[12,t.FAKE_TEARS],[16,t.ASSURANCE],[20,t.SWAGGER],[24,t.SUCKER_PUNCH],[28,t.TORMENT],[35,t.DARK_PULSE],[40,t.NASTY_PLOT],[48,t.PLAY_ROUGH],[56,t.FOUL_PLAY],[64,t.HAMMER_ARM]],[e.OBSTAGOON]:[[ne,t.OBSTRUCT],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.SUBMISSION],[1,t.LICK],[1,t.CROSS_CHOP],[1,t.NIGHT_SLASH],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[35,t.SCARY_FACE],[42,t.COUNTER],[49,t.TAUNT],[56,t.DOUBLE_EDGE]],[e.PERRSERKER]:[[ne,t.IRON_HEAD],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.IRON_DEFENSE],[1,t.METAL_BURST],[1,t.HONE_CLAWS],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.SLASH],[48,t.METAL_SOUND],[54,t.THRASH]],[e.CURSOLA]:[[1,t.TACKLE],[1,t.DISABLE],[1,t.HARDEN],[1,t.PERISH_SONG],[1,t.ASTONISH],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.SIRFETCHD]:[[ne,t.IRON_DEFENSE],[1,t.SAND_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.FURY_CUTTER],[1,t.FIRST_IMPRESSION],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD],[70,t.METEOR_ASSAULT]],[e.MR_RIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.SLACK_OFF],[1,t.FAKE_TEARS],[1,t.BLOCK],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.AFTER_YOU],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.RUNERIGUS]:[[ne,t.SHADOW_CLAW],[1,t.NIGHT_SHADE],[1,t.HAZE],[1,t.PROTECT],[1,t.SCARY_FACE],[1,t.ASTONISH],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[38,t.CURSE],[44,t.SHADOW_BALL],[50,t.EARTHQUAKE],[56,t.GUARD_SPLIT],[56,t.POWER_SPLIT],[62,t.DESTINY_BOND]],[e.MILCERY]:[[1,t.TACKLE],[1,t.AROMATIC_MIST],[5,t.SWEET_KISS],[10,t.SWEET_SCENT],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.ALCREMIE]:[[ne,t.DECORATE],[1,t.TACKLE],[1,t.SWEET_KISS],[1,t.SWEET_SCENT],[1,t.AROMATIC_MIST],[15,t.DRAINING_KISS],[20,t.AROMATHERAPY],[25,t.ATTRACT],[30,t.ACID_ARMOR],[35,t.DAZZLING_GLEAM],[40,t.RECOVER],[45,t.MISTY_TERRAIN],[50,t.ENTRAINMENT]],[e.FALINKS]:[[1,t.TACKLE],[1,t.PROTECT],[5,t.ROCK_SMASH],[10,t.FOCUS_ENERGY],[15,t.HEADBUTT],[20,t.BULK_UP],[25,t.ENDURE],[30,t.REVERSAL],[35,t.FIRST_IMPRESSION],[40,t.NO_RETREAT],[45,t.IRON_DEFENSE],[50,t.CLOSE_COMBAT],[55,t.MEGAHORN],[60,t.COUNTER]],[e.PINCURCHIN]:[[1,t.PECK],[1,t.THUNDER_SHOCK],[5,t.WATER_GUN],[10,t.CHARGE],[15,t.FURY_ATTACK],[20,t.SPARK],[25,t.BUBBLE_BEAM],[30,t.RECOVER],[35,t.CURSE],[40,t.ELECTRIC_TERRAIN],[45,t.POISON_JAB],[50,t.ZING_ZAP],[55,t.ACUPRESSURE],[60,t.DISCHARGE]],[e.SNOM]:[[1,t.POWDER_SNOW],[1,t.STRUGGLE_BUG]],[e.FROSMOTH]:[[ne,t.ICY_WIND],[1,t.POWDER_SNOW],[1,t.ATTRACT],[1,t.HELPING_HAND],[1,t.STRUGGLE_BUG],[4,t.STUN_SPORE],[8,t.INFESTATION],[12,t.MIST],[16,t.DEFOG],[21,t.FEATHER_DANCE],[24,t.AURORA_BEAM],[28,t.SNOWSCAPE],[32,t.BUG_BUZZ],[36,t.AURORA_VEIL],[40,t.BLIZZARD],[44,t.TAILWIND],[48,t.WIDE_GUARD],[52,t.QUIVER_DANCE]],[e.STONJOURNER]:[[1,t.ROCK_THROW],[1,t.BLOCK],[6,t.ROCK_POLISH],[12,t.ROCK_TOMB],[18,t.GRAVITY],[24,t.STOMP],[30,t.STEALTH_ROCK],[36,t.ROCK_SLIDE],[42,t.BODY_SLAM],[48,t.WIDE_GUARD],[54,t.HEAVY_SLAM],[60,t.STONE_EDGE],[66,t.MEGA_KICK]],[e.EISCUE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.MIST],[12,t.WEATHER_BALL],[18,t.ICY_WIND],[24,t.HEADBUTT],[30,t.AMNESIA],[36,t.FREEZE_DRY],[42,t.SNOWSCAPE],[48,t.AURORA_VEIL],[54,t.SURF],[60,t.BLIZZARD]],[e.INDEEDEE]:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.ENCORE],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.AFTER_YOU],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.POWER_SPLIT],[50,t.PSYCHIC_TERRAIN],[55,t.LAST_RESORT]],[e.MORPEKO]:[[1,t.TAIL_WHIP],[1,t.THUNDER_SHOCK],[5,t.LEER],[10,t.POWER_TRIP],[15,t.QUICK_ATTACK],[20,t.FLATTER],[25,t.BITE],[30,t.SPARK],[35,t.TORMENT],[40,t.AGILITY],[45,t.BULLET_SEED],[50,t.CRUNCH],[55,t.AURA_WHEEL],[60,t.THRASH]],[e.CUFANT]:[[1,t.TACKLE],[1,t.GROWL],[5,t.ROLLOUT],[10,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[35,t.STRENGTH],[40,t.IRON_HEAD],[45,t.PLAY_ROUGH],[50,t.HIGH_HORSEPOWER],[55,t.SUPERPOWER]],[e.COPPERAJAH]:[[ne,t.HEAVY_SLAM],[1,t.TACKLE],[1,t.GROWL],[1,t.ROLLOUT],[1,t.ROCK_SMASH],[15,t.BULLDOZE],[20,t.STOMP],[25,t.IRON_DEFENSE],[30,t.DIG],[37,t.STRENGTH],[44,t.IRON_HEAD],[51,t.PLAY_ROUGH],[58,t.HIGH_HORSEPOWER],[65,t.SUPERPOWER]],[e.DRACOZOLT]:[[1,t.TACKLE],[1,t.THUNDER_SHOCK],[7,t.CHARGE],[14,t.AERIAL_ACE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.DRAGON_TAIL],[42,t.STOMP],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOZOLT]:[[1,t.THUNDER_SHOCK],[1,t.POWDER_SNOW],[7,t.CHARGE],[14,t.ECHOED_VOICE],[21,t.ANCIENT_POWER],[28,t.PLUCK],[35,t.AVALANCHE],[42,t.FREEZE_DRY],[49,t.SLAM],[56,t.DISCHARGE],[63,t.BOLT_BEAK],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DRACOVISH]:[[1,t.TACKLE],[1,t.WATER_GUN],[7,t.PROTECT],[14,t.BRUTAL_SWING],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.DRAGON_BREATH],[42,t.STOMP],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.DRAGON_PULSE],[77,t.DRAGON_RUSH]],[e.ARCTOVISH]:[[1,t.WATER_GUN],[1,t.POWDER_SNOW],[7,t.PROTECT],[14,t.ICY_WIND],[21,t.ANCIENT_POWER],[28,t.BITE],[35,t.AURORA_VEIL],[42,t.FREEZE_DRY],[49,t.SUPER_FANG],[56,t.CRUNCH],[63,t.FISHIOUS_REND],[70,t.ICICLE_CRASH],[77,t.BLIZZARD]],[e.DURALUDON]:[[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.LASER_FOCUS],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.DREEPY]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION]],[e.DRAKLOAK]:[[ne,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[61,t.DRAGON_RUSH],[66,t.DOUBLE_EDGE],[72,t.LAST_RESORT]],[e.DRAGAPULT]:[[ne,t.DRAGON_DARTS],[$,t.DRAGON_PULSE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.DRAGON_BREATH],[1,t.ASTONISH],[1,t.INFESTATION],[6,t.LOCK_ON],[12,t.ASSURANCE],[18,t.HEX],[24,t.AGILITY],[30,t.DOUBLE_HIT],[36,t.U_TURN],[42,t.DRAGON_DANCE],[48,t.PHANTOM_FORCE],[54,t.TAKE_DOWN],[63,t.DRAGON_RUSH],[70,t.DOUBLE_EDGE],[78,t.LAST_RESORT]],[e.ZACIAN]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ZAMAZENTA]:[[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]],[e.ETERNATUS]:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.OUTRAGE]],[e.KUBFU]:[[1,t.LEER],[1,t.ROCK_SMASH],[4,t.ENDURE],[8,t.FOCUS_ENERGY],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.URSHIFU]:[[ne,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],[e.ZARUDE]:[[1,t.SCRATCH],[1,t.BIND],[6,t.LEER],[12,t.VINE_WHIP],[18,t.GROWTH],[24,t.FURY_SWIPES],[30,t.SCARY_FACE],[36,t.GRASS_KNOT],[42,t.BITE],[48,t.U_TURN],[54,t.SWAGGER],[60,t.ENERGY_BALL],[66,t.SYNTHESIS],[72,t.HAMMER_ARM],[78,t.THRASH],[84,t.POWER_WHIP],[90,t.JUNGLE_HEALING]],[e.REGIELEKI]:[[1,t.THUNDER_SHOCK],[1,t.RAPID_SPIN],[6,t.ELECTROWEB],[12,t.ANCIENT_POWER],[18,t.SHOCK_WAVE],[24,t.THUNDER_WAVE],[30,t.EXTREME_SPEED],[36,t.THUNDER_CAGE],[42,t.THUNDERBOLT],[48,t.MAGNET_RISE],[54,t.THRASH],[60,t.LOCK_ON],[66,t.ZAP_CANNON],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.REGIDRAGO]:[[1,t.TWISTER],[6,t.BITE],[12,t.ANCIENT_POWER],[18,t.DRAGON_BREATH],[30,t.CRUNCH],[36,t.DRAGON_CLAW],[42,t.HAMMER_ARM],[48,t.DRAGON_DANCE],[54,t.THRASH],[60,t.FOCUS_ENERGY],[66,t.DRAGON_ENERGY],[72,t.HYPER_BEAM],[78,t.EXPLOSION]],[e.GLASTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.AVALANCHE],[18,t.STOMP],[24,t.TORMENT],[30,t.MIST],[36,t.ICICLE_CRASH],[42,t.TAKE_DOWN],[48,t.IRON_DEFENSE],[54,t.THRASH],[60,t.TAUNT],[66,t.DOUBLE_EDGE],[72,t.SWORDS_DANCE]],[e.SPECTRIER]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[6,t.DOUBLE_KICK],[12,t.HEX],[18,t.STOMP],[24,t.CONFUSE_RAY],[30,t.HAZE],[36,t.SHADOW_BALL],[42,t.TAKE_DOWN],[48,t.AGILITY],[54,t.THRASH],[60,t.DISABLE],[66,t.DOUBLE_EDGE],[72,t.NASTY_PLOT]],[e.CALYREX]:[[1,t.POUND],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],[e.WYRDEER]:[[ne,t.PSYSHIELD_BASH],[1,t.TACKLE],[1,t.ME_FIRST],[3,t.LEER],[7,t.ASTONISH],[10,t.HYPNOSIS],[13,t.STOMP],[16,t.SAND_ATTACK],[21,t.TAKE_DOWN],[23,t.CONFUSE_RAY],[27,t.CALM_MIND],[32,t.ROLE_PLAY],[37,t.ZEN_HEADBUTT],[49,t.IMPRISON],[55,t.DOUBLE_EDGE],[62,t.MEGAHORN]],[e.KLEAVOR]:[[ne,t.STONE_AXE],[1,t.WING_ATTACK],[1,t.AIR_SLASH],[1,t.LEER],[1,t.QUICK_ATTACK],[4,t.FURY_CUTTER],[8,t.FALSE_SWIPE],[12,t.SMACK_DOWN],[16,t.DOUBLE_TEAM],[20,t.DOUBLE_HIT],[24,t.SLASH],[28,t.FOCUS_ENERGY],[30,t.STEEL_WING],[32,t.AGILITY],[36,t.ROCK_SLIDE],[40,t.X_SCISSOR],[44,t.SWORDS_DANCE]],[e.URSALUNA]:[[ne,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[1,t.COVET],[1,t.FLING],[1,t.BABY_DOLL_EYES],[1,t.FAKE_TEARS],[1,t.CHARM],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.SWEET_SCENT],[22,t.SLASH],[25,t.PLAY_NICE],[29,t.PLAY_ROUGH],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.HIGH_HORSEPOWER],[56,t.THRASH],[64,t.HAMMER_ARM]],[e.BASCULEGION]:[[$,t.FINAL_GAMBIT],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SHADOW_BALL],[1,t.PHANTOM_FORCE],[4,t.TACKLE],[8,t.FLAIL],[12,t.AQUA_JET],[16,t.BITE],[20,t.SCARY_FACE],[24,t.HEADBUTT],[28,t.SOAK],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.UPROAR],[44,t.WAVE_CRASH],[48,t.THRASH],[52,t.DOUBLE_EDGE],[56,t.HEAD_SMASH]],[e.SNEASLER]:[[ne,t.DIRE_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[1,t.FLING],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.OVERQWIL]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.ENAMORUS]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.TORMENT],[10,t.FLATTER],[15,t.TWISTER],[20,t.DRAINING_KISS],[25,t.IRON_DEFENSE],[30,t.IMPRISON],[35,t.MYSTICAL_FIRE],[40,t.DAZZLING_GLEAM],[45,t.EXTRASENSORY],[50,t.UPROAR],[55,t.SUPERPOWER],[60,t.HEALING_WISH],[65,t.MOONBLAST],[70,t.OUTRAGE],[75,t.SPRINGTIDE_STORM]],[e.SPRIGATITO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[17,t.SEED_BOMB],[21,t.U_TURN],[25,t.WORRY_SEED],[28,t.SLASH],[32,t.ENERGY_BALL],[36,t.PLAY_ROUGH]],[e.FLORAGATO]:[[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[28,t.WORRY_SEED],[33,t.SLASH],[38,t.ENERGY_BALL],[42,t.PLAY_ROUGH],[46,t.LEAF_STORM]],[e.MEOWSCARADA]:[[ne,t.FLOWER_TRICK],[$,t.DOUBLE_TEAM],[$,t.TRICK],[1,t.SCRATCH],[1,t.TAIL_WHIP],[1,t.LEAFAGE],[7,t.BITE],[10,t.HONE_CLAWS],[13,t.MAGICAL_LEAF],[15,t.QUICK_ATTACK],[20,t.SEED_BOMB],[24,t.U_TURN],[29,t.WORRY_SEED],[33,t.SLASH],[38,t.NIGHT_SLASH],[42,t.ENERGY_BALL],[47,t.PLAY_ROUGH],[52,t.KNOCK_OFF],[58,t.GRASSY_TERRAIN],[64,t.LEAF_STORM]],[e.FUECOCO]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.ROUND],[12,t.BITE],[15,t.INCINERATE],[17,t.YAWN],[21,t.SNARL],[25,t.ROAR],[28,t.FLAMETHROWER],[32,t.HYPER_VOICE],[36,t.FIRE_BLAST]],[e.CROCALOR]:[[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.BITE],[15,t.YAWN],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.HYPER_VOICE],[42,t.WILL_O_WISP],[47,t.FIRE_BLAST]],[e.SKELEDIRGE]:[[ne,t.TORCH_SONG],[$,t.SING],[$,t.YAWN],[1,t.TACKLE],[1,t.LEER],[1,t.EMBER],[7,t.LICK],[10,t.ROUND],[12,t.SCARY_FACE],[15,t.BITE],[17,t.INCINERATE],[24,t.SNARL],[28,t.ROAR],[32,t.FLAMETHROWER],[38,t.SHADOW_BALL],[42,t.HYPER_VOICE],[47,t.WILL_O_WISP],[47,t.HEX],[58,t.FIRE_BLAST],[64,t.OVERHEAT]],[e.QUAXLY]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.AQUA_CUTTER],[24,t.AIR_SLASH],[28,t.FOCUS_ENERGY],[31,t.ACROBATICS],[35,t.LIQUIDATION]],[e.QUAXWELL]:[[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[19,t.LOW_SWEEP],[23,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.ACROBATICS],[43,t.LIQUIDATION],[48,t.FEATHER_DANCE]],[e.QUAQUAVAL]:[[ne,t.AQUA_STEP],[$,t.COUNTER],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.DOUBLE_HIT],[7,t.WORK_UP],[10,t.WING_ATTACK],[13,t.AQUA_JET],[17,t.WATER_PULSE],[17,t.LOW_SWEEP],[21,t.AQUA_CUTTER],[27,t.AIR_SLASH],[32,t.FOCUS_ENERGY],[38,t.MEGA_KICK],[43,t.ACROBATICS],[47,t.LIQUIDATION],[52,t.FEATHER_DANCE],[58,t.CLOSE_COMBAT],[64,t.WAVE_CRASH]],[e.LECHONK]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[21,t.HEADBUTT],[24,t.YAWN],[27,t.TAKE_DOWN],[30,t.WORK_UP],[32,t.UPROAR],[35,t.DOUBLE_EDGE]],[e.OINKOLOGNE]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.DISARMING_VOICE],[8,t.ECHOED_VOICE],[12,t.MUD_SHOT],[15,t.COVET],[17,t.DIG],[23,t.HEADBUTT],[26,t.TAKE_DOWN],[27,t.YAWN],[34,t.WORK_UP],[38,t.UPROAR],[42,t.DOUBLE_EDGE],[48,t.EARTH_POWER],[54,t.BELCH]],[e.TAROUNTULA]:[[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[18,t.BLOCK],[22,t.COUNTER],[25,t.HEADBUTT],[29,t.STICKY_WEB],[33,t.GASTRO_ACID],[36,t.CIRCLE_THROW],[40,t.THROAT_CHOP],[44,t.SKITTER_SMACK]],[e.SPIDOPS]:[[ne,t.SILK_TRAP],[1,t.TACKLE],[1,t.STRING_SHOT],[5,t.STRUGGLE_BUG],[8,t.ASSURANCE],[11,t.FEINT],[14,t.BUG_BITE],[19,t.BLOCK],[24,t.COUNTER],[28,t.HEADBUTT],[33,t.STICKY_WEB],[37,t.GASTRO_ACID],[41,t.CIRCLE_THROW],[45,t.THROAT_CHOP],[49,t.SKITTER_SMACK]],[e.NYMBLE]:[[1,t.TACKLE],[1,t.LEER],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[26,t.FEINT],[30,t.AGILITY],[38,t.SUCKER_PUNCH],[41,t.FIRST_IMPRESSION]],[e.LOKIX]:[[ne,t.LUNGE],[1,t.TACKLE],[1,t.LEER],[1,t.LOW_KICK],[1,t.DETECT],[4,t.STRUGGLE_BUG],[6,t.ASTONISH],[9,t.ASSURANCE],[11,t.DOUBLE_KICK],[14,t.SCREECH],[18,t.ENDURE],[22,t.BUG_BITE],[28,t.FEINT],[32,t.AGILITY],[36,t.THROAT_CHOP],[40,t.SUCKER_PUNCH],[44,t.FIRST_IMPRESSION],[48,t.BOUNCE],[53,t.AXE_KICK]],[e.PAWMI]:[[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[31,t.ENTRAINMENT],[35,t.SLAM],[38,t.DISCHARGE],[40,t.AGILITY],[44,t.WILD_CHARGE]],[e.PAWMO]:[[ne,t.ARM_THRUST],[1,t.SCRATCH],[1,t.GROWL],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[27,t.THUNDER_WAVE],[32,t.SLAM],[38,t.ENTRAINMENT],[42,t.DISCHARGE],[46,t.AGILITY],[52,t.WILD_CHARGE]],[e.PAWMOT]:[[ne,t.REVIVAL_BLESSING],[1,t.SCRATCH],[1,t.GROWL],[1,t.WILD_CHARGE],[3,t.THUNDER_SHOCK],[6,t.QUICK_ATTACK],[8,t.CHARGE],[12,t.NUZZLE],[15,t.DIG],[19,t.BITE],[23,t.SPARK],[25,t.ARM_THRUST],[29,t.THUNDER_WAVE],[33,t.SLAM],[39,t.ENTRAINMENT],[44,t.CLOSE_COMBAT],[49,t.DISCHARGE],[54,t.AGILITY],[60,t.DOUBLE_SHOCK]],[e.TANDEMAUS]:[[1,t.POUND],[1,t.BABY_DOLL_EYES],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[26,t.PLAY_ROUGH],[30,t.HYPER_VOICE],[33,t.CHARM],[37,t.BEAT_UP],[41,t.COPYCAT],[46,t.POPULATION_BOMB]],[e.MAUSHOLD]:[[1,t.POUND],[1,t.FOLLOW_ME],[1,t.BABY_DOLL_EYES],[1,t.TIDY_UP],[5,t.ECHOED_VOICE],[8,t.HELPING_HAND],[11,t.SUPER_FANG],[14,t.DOUBLE_HIT],[18,t.BULLET_SEED],[22,t.ENCORE],[29,t.PLAY_ROUGH],[33,t.HYPER_VOICE],[37,t.CHARM],[41,t.BEAT_UP],[46,t.COPYCAT],[53,t.POPULATION_BOMB]],[e.FIDOUGH]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[26,t.BATON_PASS],[30,t.ROAR],[33,t.DOUBLE_EDGE],[36,t.CHARM],[40,t.CRUNCH],[45,t.LAST_RESORT]],[e.DACHSBUN]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[8,t.COVET],[11,t.BITE],[15,t.BABY_DOLL_EYES],[18,t.PLAY_ROUGH],[22,t.WORK_UP],[29,t.BATON_PASS],[33,t.ROAR],[38,t.DOUBLE_EDGE],[42,t.CHARM],[47,t.CRUNCH],[53,t.LAST_RESORT]],[e.SMOLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[27,t.SEED_BOMB],[30,t.ENERGY_BALL],[34,t.LEECH_SEED],[38,t.TERRAIN_PULSE]],[e.DOLLIV]:[[1,t.TACKLE],[1,t.SWEET_SCENT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[37,t.LEECH_SEED],[42,t.TERRAIN_PULSE]],[e.ARBOLIVA]:[[1,t.TACKLE],[1,t.SAFEGUARD],[1,t.SWEET_SCENT],[1,t.MIRROR_COAT],[5,t.ABSORB],[7,t.GROWTH],[10,t.RAZOR_LEAF],[13,t.HELPING_HAND],[16,t.FLAIL],[20,t.MEGA_DRAIN],[23,t.GRASSY_TERRAIN],[29,t.SEED_BOMB],[34,t.ENERGY_BALL],[39,t.LEECH_SEED],[46,t.TERRAIN_PULSE],[52,t.PETAL_BLIZZARD],[58,t.PETAL_DANCE]],[e.SQUAWKABILLY]:[[1,t.GROWL],[1,t.PECK],[1,t.MIMIC],[6,t.QUICK_ATTACK],[10,t.TORMENT],[13,t.AERIAL_ACE],[17,t.FURY_ATTACK],[20,t.TAUNT],[24,t.UPROAR],[27,t.COPYCAT],[30,t.FLY],[34,t.FACADE],[38,t.SWAGGER],[42,t.BRAVE_BIRD],[47,t.ROOST],[52,t.REVERSAL]],[e.NACLI]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[25,t.RECOVER],[30,t.ROCK_SLIDE],[33,t.STEALTH_ROCK],[35,t.HEAVY_SLAM],[40,t.EARTHQUAKE],[45,t.STONE_EDGE]],[e.NACLSTACK]:[[ne,t.SALT_CURE],[1,t.TACKLE],[1,t.HARDEN],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.SMACK_DOWN],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[20,t.IRON_DEFENSE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[38,t.STEALTH_ROCK],[41,t.HEAVY_SLAM],[45,t.EARTHQUAKE],[51,t.STONE_EDGE]],[e.GARGANACL]:[[ne,t.HAMMER_ARM],[$,t.IRON_DEFENSE],[1,t.TACKLE],[1,t.HARDEN],[1,t.BLOCK],[1,t.ROCK_BLAST],[1,t.SMACK_DOWN],[1,t.WIDE_GUARD],[5,t.ROCK_THROW],[7,t.MUD_SHOT],[10,t.ROCK_TOMB],[13,t.ROCK_POLISH],[16,t.HEADBUTT],[24,t.SALT_CURE],[30,t.RECOVER],[34,t.ROCK_SLIDE],[40,t.STEALTH_ROCK],[44,t.HEAVY_SLAM],[49,t.EARTHQUAKE],[54,t.STONE_EDGE],[60,t.EXPLOSION]],[e.CHARCADET]:[[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME]],[e.ARMAROUGE]:[[ne,t.PSYSHOCK],[1,t.LEER],[1,t.EMBER],[1,t.ASTONISH],[1,t.WIDE_GUARD],[1,t.MYSTICAL_FIRE],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.CALM_MIND],[42,t.ALLY_SWITCH],[48,t.FLAMETHROWER],[56,t.EXPANDING_FORCE],[62,t.ARMOR_CANNON]],[e.CERULEDGE]:[[ne,t.SHADOW_CLAW],[$,t.NIGHT_SLASH],[$,t.SHADOW_SNEAK],[$,t.QUICK_GUARD],[$,t.SOLAR_BLADE],[1,t.EMBER],[1,t.LEER],[1,t.ASTONISH],[8,t.CLEAR_SMOG],[12,t.FIRE_SPIN],[16,t.WILL_O_WISP],[20,t.NIGHT_SHADE],[24,t.FLAME_CHARGE],[28,t.INCINERATE],[32,t.LAVA_PLUME],[37,t.SWORDS_DANCE],[42,t.ALLY_SWITCH],[48,t.BITTER_BLADE],[56,t.PSYCHO_CUT],[62,t.FLARE_BLITZ]],[e.TADBULB]:[[1,t.TACKLE],[1,t.MUD_SLAP],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.BELLIBOLT]:[[1,t.TACKLE],[1,t.MUD_SLAP],[1,t.SLACK_OFF],[7,t.THUNDER_SHOCK],[11,t.WATER_GUN],[17,t.CHARGE],[21,t.SPARK],[24,t.MUD_SHOT],[25,t.FLAIL],[32,t.DISCHARGE],[36,t.WEATHER_BALL],[40,t.ELECTRIC_TERRAIN],[45,t.SUCKER_PUNCH],[50,t.ZAP_CANNON]],[e.WATTREL]:[[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[23,t.ROOST],[27,t.DUAL_WINGBEAT],[32,t.AGILITY],[37,t.VOLT_SWITCH],[43,t.DISCHARGE]],[e.KILOWATTREL]:[[ne,t.ELECTRO_BALL],[1,t.GROWL],[1,t.PECK],[4,t.THUNDER_SHOCK],[7,t.QUICK_ATTACK],[11,t.PLUCK],[15,t.SPARK],[19,t.UPROAR],[24,t.ROOST],[30,t.DUAL_WINGBEAT],[36,t.AGILITY],[43,t.VOLT_SWITCH],[48,t.DISCHARGE],[55,t.HURRICANE]],[e.MASCHIFF]:[[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[31,t.CRUNCH],[35,t.SWAGGER],[39,t.REVERSAL],[43,t.JAW_LOCK],[49,t.DOUBLE_EDGE]],[e.MABOSSTIFF]:[[ne,t.COMEUPPANCE],[1,t.TACKLE],[1,t.LEER],[1,t.SCARY_FACE],[4,t.LICK],[7,t.SNARL],[10,t.HONE_CLAWS],[14,t.BITE],[18,t.ROAR],[22,t.HEADBUTT],[26,t.PAYBACK],[34,t.CRUNCH],[39,t.SWAGGER],[43,t.REVERSAL],[48,t.JAW_LOCK],[55,t.DOUBLE_EDGE],[60,t.OUTRAGE]],[e.SHROODLE]:[[1,t.SCRATCH],[1,t.LEER],[5,t.ACID_SPRAY],[8,t.BITE],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[29,t.POISON_JAB],[33,t.TAUNT],[36,t.SUBSTITUTE],[40,t.KNOCK_OFF],[45,t.GUNK_SHOT]],[e.GRAFAIAI]:[[ne,t.DOODLE],[1,t.SCRATCH],[1,t.LEER],[1,t.BITE],[5,t.ACID_SPRAY],[8,t.FURY_SWIPES],[11,t.SWITCHEROO],[14,t.POISON_FANG],[18,t.FLATTER],[21,t.SLASH],[25,t.U_TURN],[33,t.POISON_JAB],[37,t.TAUNT],[40,t.SUBSTITUTE],[45,t.KNOCK_OFF],[51,t.GUNK_SHOT]],[e.BRAMBLIN]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.BRAMBLEGHAST]:[[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ASTONISH],[5,t.ABSORB],[9,t.RAPID_SPIN],[13,t.BULLET_SEED],[17,t.INFESTATION],[21,t.HEX],[25,t.MEGA_DRAIN],[29,t.DISABLE],[35,t.PHANTOM_FORCE],[40,t.GIGA_DRAIN],[45,t.CURSE],[50,t.PAIN_SPLIT],[55,t.POWER_WHIP]],[e.TOEDSCOOL]:[[1,t.WRAP],[1,t.MUD_SLAP],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[32,t.SEED_BOMB],[36,t.SPORE],[40,t.GROWTH],[44,t.GIGA_DRAIN],[48,t.EARTH_POWER],[52,t.POWER_WHIP]],[e.TOEDSCRUEL]:[[1,t.WRAP],[1,t.MUD_SLAP],[1,t.REFLECT_TYPE],[4,t.ABSORB],[8,t.POISON_POWDER],[8,t.STUN_SPORE],[12,t.SUPERSONIC],[15,t.TACKLE],[16,t.MEGA_DRAIN],[20,t.SCREECH],[24,t.MUD_SHOT],[28,t.HEX],[34,t.SEED_BOMB],[40,t.SPORE],[44,t.GROWTH],[48,t.GIGA_DRAIN],[54,t.EARTH_POWER],[58,t.POWER_WHIP]],[e.KLAWF]:[[1,t.ROCK_THROW],[6,t.HARDEN],[9,t.ROCK_SMASH],[13,t.ROCK_TOMB],[17,t.METAL_CLAW],[21,t.PROTECT],[24,t.ROCK_BLAST],[29,t.X_SCISSOR],[33,t.SWORDS_DANCE],[37,t.FLAIL],[42,t.ROCK_SLIDE],[47,t.HIGH_HORSEPOWER],[51,t.IRON_DEFENSE],[56,t.GUILLOTINE]],[e.CAPSAKID]:[[1,t.LEER],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM]],[e.SCOVILLAIN]:[[ne,t.FLAMETHROWER],[ne,t.SPICY_EXTRACT],[1,t.LEER],[1,t.FIRE_FANG],[1,t.LEAFAGE],[4,t.BITE],[10,t.GROWTH],[13,t.RAZOR_LEAF],[17,t.SUNNY_DAY],[21,t.BULLET_SEED],[24,t.HEADBUTT],[28,t.ZEN_HEADBUTT],[33,t.WORRY_SEED],[38,t.CRUNCH],[44,t.SEED_BOMB],[48,t.SOLAR_BEAM],[48,t.OVERHEAT]],[e.RELLOR]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.MUD_SHOT],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.DIG],[35,t.LUNGE]],[e.RABSCA]:[[ne,t.REVIVAL_BLESSING],[$,t.SAFEGUARD],[$,t.PSYCH_UP],[1,t.TACKLE],[1,t.CONFUSION],[1,t.DEFENSE_CURL],[1,t.MUD_SHOT],[1,t.DIG],[4,t.SAND_ATTACK],[7,t.STRUGGLE_BUG],[11,t.ROLLOUT],[15,t.PSYBEAM],[20,t.BUG_BITE],[24,t.TAKE_DOWN],[29,t.EXTRASENSORY],[35,t.LUNGE],[40,t.POWER_SWAP],[40,t.GUARD_SWAP],[40,t.SPEED_SWAP],[45,t.BUG_BUZZ],[50,t.PSYCHIC]],[e.FLITTLE]:[[1,t.GROWL],[1,t.PECK],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR]],[e.ESPATHRA]:[[ne,t.LUMINA_CRASH],[1,t.GROWL],[1,t.PECK],[1,t.DRILL_PECK],[1,t.FEATHER_DANCE],[5,t.CONFUSION],[8,t.BABY_DOLL_EYES],[11,t.DISARMING_VOICE],[15,t.QUICK_ATTACK],[19,t.PSYBEAM],[24,t.PLUCK],[29,t.AGILITY],[34,t.UPROAR],[43,t.DAZZLING_GLEAM],[49,t.PSYCHIC],[54,t.LAST_RESORT]],[e.TINKATINK]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATUFF]:[[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.TINKATON]:[[ne,t.GIGATON_HAMMER],[1,t.ASTONISH],[1,t.FAIRY_WIND],[5,t.BABY_DOLL_EYES],[8,t.METAL_CLAW],[11,t.COVET],[14,t.ROCK_SMASH],[17,t.DRAINING_KISS],[21,t.SWEET_KISS],[24,t.BRUTAL_SWING],[27,t.SLAM],[31,t.FLASH_CANNON],[35,t.PLAY_ROUGH],[39,t.FAKE_OUT],[43,t.FLATTER],[47,t.SKITTER_SMACK],[52,t.KNOCK_OFF]],[e.WIGLETT]:[[1,t.SAND_ATTACK],[1,t.WATER_GUN],[4,t.MUD_SLAP],[8,t.WRAP],[12,t.AQUA_JET],[20,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[28,t.DIG],[32,t.SUCKER_PUNCH],[36,t.THROAT_CHOP],[40,t.LIQUIDATION]],[e.WUGTRIO]:[[1,t.SAND_ATTACK],[1,t.WRAP],[1,t.WATER_GUN],[1,t.MUD_SLAP],[12,t.AQUA_JET],[16,t.SLAM],[20,t.WATER_PULSE],[24,t.HEADBUTT],[30,t.TRIPLE_DIVE],[36,t.DIG],[42,t.SUCKER_PUNCH],[48,t.THROAT_CHOP],[54,t.LIQUIDATION]],[e.BOMBIRDIER]:[[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.MEMENTO],[1,t.HONE_CLAWS],[7,t.THIEF],[11,t.ROCK_THROW],[16,t.WHIRLWIND],[20,t.PLUCK],[24,t.TORMENT],[29,t.ROCK_TOMB],[36,t.PAYBACK],[42,t.DUAL_WINGBEAT],[47,t.ROCK_SLIDE],[53,t.KNOCK_OFF],[60,t.PARTING_SHOT]],[e.FINIZEN]:[[1,t.SUPERSONIC],[1,t.WATER_GUN],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP]],[e.PALAFIN]:[[ne,t.FLIP_TURN],[1,t.SUPERSONIC],[1,t.WATER_GUN],[1,t.JET_PUNCH],[7,t.ASTONISH],[10,t.FOCUS_ENERGY],[13,t.AQUA_JET],[17,t.DOUBLE_HIT],[21,t.DIVE],[25,t.CHARM],[29,t.ACROBATICS],[34,t.ENCORE],[39,t.AQUA_TAIL],[44,t.MIST],[50,t.HYDRO_PUMP],[55,t.FOCUS_PUNCH],[61,t.WAVE_CRASH]],[e.VAROOM]:[[1,t.LICK],[1,t.POISON_GAS],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[41,t.UPROAR],[46,t.SPIN_OUT],[50,t.GUNK_SHOT]],[e.REVAVROOM]:[[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],[e.CYCLIZAR]:[[1,t.TACKLE],[1,t.GROWL],[7,t.RAPID_SPIN],[11,t.TAUNT],[14,t.BREAKING_SWIPE],[18,t.QUICK_ATTACK],[23,t.BITE],[27,t.U_TURN],[31,t.SHED_TAIL],[36,t.DRAGON_CLAW],[40,t.SHIFT_GEAR],[45,t.DRAGON_PULSE],[51,t.DOUBLE_EDGE],[57,t.DRAGON_RUSH]],[e.ORTHWORM]:[[1,t.TACKLE],[1,t.WRAP],[1,t.HARDEN],[7,t.MUD_SLAP],[12,t.SMACK_DOWN],[16,t.BULLDOZE],[21,t.IRON_HEAD],[26,t.TAKE_DOWN],[30,t.DIG],[34,t.SANDSTORM],[38,t.IRON_DEFENSE],[43,t.IRON_TAIL],[47,t.EARTHQUAKE],[52,t.SHED_TAIL]],[e.GLIMMET]:[[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.SMACK_DOWN],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[37,t.POWER_GEM],[41,t.ACID_ARMOR],[46,t.SLUDGE_WAVE]],[e.GLIMMORA]:[[ne,t.MORTAL_SPIN],[1,t.ROCK_THROW],[1,t.HARDEN],[1,t.TOXIC_SPIKES],[1,t.SMACK_DOWN],[1,t.SPIKY_SHIELD],[7,t.ACID_SPRAY],[11,t.ANCIENT_POWER],[15,t.ROCK_POLISH],[18,t.STEALTH_ROCK],[22,t.VENOSHOCK],[26,t.SANDSTORM],[29,t.SELF_DESTRUCT],[33,t.ROCK_SLIDE],[39,t.POWER_GEM],[44,t.ACID_ARMOR],[50,t.SLUDGE_WAVE]],[e.GREAVARD]:[[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[32,t.PLAY_ROUGH],[37,t.HELPING_HAND],[41,t.PHANTOM_FORCE],[46,t.CHARM],[52,t.DOUBLE_EDGE]],[e.HOUNDSTONE]:[[ne,t.LAST_RESPECTS],[1,t.TACKLE],[1,t.GROWL],[3,t.LICK],[6,t.TAIL_WHIP],[6,t.BITE],[9,t.ROAR],[12,t.HEADBUTT],[16,t.DIG],[24,t.REST],[28,t.CRUNCH],[36,t.PLAY_ROUGH],[41,t.HELPING_HAND],[46,t.PHANTOM_FORCE],[51,t.CHARM],[58,t.DOUBLE_EDGE]],[e.FLAMIGO]:[[1,t.PECK],[1,t.COPYCAT],[5,t.DOUBLE_KICK],[9,t.DETECT],[12,t.WING_ATTACK],[15,t.FOCUS_ENERGY],[18,t.LOW_KICK],[21,t.FEINT],[27,t.PAYBACK],[31,t.ROOST],[35,t.AIR_SLASH],[39,t.MEGA_KICK],[44,t.WIDE_GUARD],[48,t.THROAT_CHOP],[54,t.BRAVE_BIRD]],[e.CETODDLE]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.CETITAN]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[6,t.GROWL],[9,t.ECHOED_VOICE],[12,t.ICE_SHARD],[15,t.REST],[19,t.TAKE_DOWN],[25,t.FLAIL],[27,t.AVALANCHE],[31,t.BOUNCE],[36,t.BODY_SLAM],[40,t.AMNESIA],[44,t.ICE_SPINNER],[49,t.DOUBLE_EDGE],[53,t.BLIZZARD]],[e.VELUZA]:[[1,t.TACKLE],[1,t.AQUA_JET],[7,t.PLUCK],[11,t.WATER_PULSE],[15,t.FOCUS_ENERGY],[20,t.SLASH],[25,t.AQUA_CUTTER],[30,t.FILLET_AWAY],[35,t.NIGHT_SLASH],[40,t.PSYCHO_CUT],[45,t.LIQUIDATION],[50,t.CRUNCH],[55,t.FINAL_GAMBIT]],[e.DONDOZO]:[[1,t.TACKLE],[1,t.SUPERSONIC],[1,t.WATER_GUN],[5,t.TICKLE],[10,t.FLAIL],[15,t.REST],[15,t.SLEEP_TALK],[20,t.DIVE],[25,t.NOBLE_ROAR],[30,t.SOAK],[35,t.BODY_SLAM],[40,t.AQUA_TAIL],[45,t.RAIN_DANCE],[50,t.ORDER_UP],[55,t.HEAVY_SLAM],[60,t.DOUBLE_EDGE],[65,t.WAVE_CRASH]],[e.TATSUGIRI]:[[1,t.WATER_GUN],[1,t.SPLASH],[6,t.HARDEN],[12,t.HELPING_HAND],[17,t.WATER_PULSE],[23,t.SOAK],[28,t.TAUNT],[34,t.MEMENTO],[39,t.MUDDY_WATER],[43,t.NASTY_PLOT],[47,t.MIRROR_COAT],[52,t.DRAGON_PULSE]],[e.ANNIHILAPE]:[[ne,t.SHADOW_PUNCH],[1,t.SCRATCH],[1,t.LEER],[1,t.COUNTER],[1,t.FOCUS_ENERGY],[1,t.COVET],[1,t.FLING],[5,t.FURY_SWIPES],[8,t.LOW_KICK],[12,t.SEISMIC_TOSS],[17,t.SWAGGER],[22,t.CROSS_CHOP],[26,t.ASSURANCE],[30,t.THRASH],[35,t.RAGE_FIST],[39,t.CLOSE_COMBAT],[44,t.SCREECH],[48,t.STOMPING_TANTRUM],[53,t.OUTRAGE],[57,t.FINAL_GAMBIT]],[e.CLODSIRE]:[[ne,t.AMNESIA],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.POISON_STING],[4,t.TOXIC_SPIKES],[8,t.MUD_SHOT],[12,t.POISON_TAIL],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[30,t.SLUDGE_WAVE],[36,t.MEGAHORN],[40,t.TOXIC],[48,t.EARTHQUAKE]],[e.FARIGIRAF]:[[1,t.TACKLE],[1,t.GROWL],[1,t.ASTONISH],[1,t.POWER_SWAP],[1,t.GUARD_SWAP],[5,t.CONFUSION],[10,t.ASSURANCE],[14,t.STOMP],[19,t.PSYBEAM],[23,t.AGILITY],[28,t.DOUBLE_HIT],[32,t.TWIN_BEAM],[37,t.CRUNCH],[41,t.BATON_PASS],[46,t.NASTY_PLOT],[50,t.PSYCHIC]],[e.DUDUNSPARCE]:[[1,t.DEFENSE_CURL],[1,t.FLAIL],[1,t.TACKLE],[4,t.MUD_SLAP],[8,t.ROLLOUT],[12,t.GLARE],[16,t.SCREECH],[20,t.ANCIENT_POWER],[24,t.DRILL_RUN],[28,t.YAWN],[32,t.HYPER_DRILL],[36,t.ROOST],[40,t.DRAGON_RUSH],[44,t.COIL],[48,t.DOUBLE_EDGE],[52,t.ENDEAVOR],[56,t.HURRICANE],[62,t.BOOMBURST]],[e.KINGAMBIT]:[[ne,t.KOWTOW_CLEAVE],[1,t.SCRATCH],[1,t.LEER],[1,t.FURY_CUTTER],[1,t.METAL_CLAW],[1,t.METAL_BURST],[15,t.TORMENT],[20,t.SCARY_FACE],[25,t.ASSURANCE],[30,t.METAL_SOUND],[35,t.SLASH],[40,t.NIGHT_SLASH],[45,t.IRON_DEFENSE],[50,t.RETALIATE],[57,t.IRON_HEAD],[64,t.SWORDS_DANCE],[71,t.GUILLOTINE]],[e.GREAT_TUSK]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.SUNNY_DAY],[7,t.BULLDOZE],[14,t.TAUNT],[21,t.RAPID_SPIN],[28,t.BRICK_BREAK],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.GIGA_IMPACT],[63,t.CLOSE_COMBAT],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.HEAD_SMASH],[91,t.HEADLONG_RUSH]],[e.SCREAM_TAIL]:[[$,t.SUNNY_DAY],[1,t.POUND],[1,t.SING],[1,t.DISABLE],[7,t.HOWL],[14,t.NOBLE_ROAR],[21,t.BITE],[28,t.BODY_SLAM],[35,t.REST],[42,t.PLAY_ROUGH],[49,t.HYPER_VOICE],[56,t.PSYCHIC_FANGS],[63,t.CRUNCH],[70,t.WISH],[77,t.GYRO_BALL],[84,t.PERISH_SONG],[91,t.BOOMBURST]],[e.BRUTE_BONNET]:[[$,t.SUNNY_DAY],[1,t.ABSORB],[1,t.GROWTH],[1,t.ASTONISH],[7,t.STUN_SPORE],[14,t.MEGA_DRAIN],[21,t.SYNTHESIS],[28,t.CLEAR_SMOG],[35,t.PAYBACK],[42,t.THRASH],[49,t.GIGA_DRAIN],[56,t.SUCKER_PUNCH],[63,t.SPORE],[70,t.INGRAIN],[77,t.RAGE_POWDER],[91,t.SOLAR_BEAM]],[e.FLUTTER_MANE]:[[$,t.SUNNY_DAY],[1,t.CONFUSE_RAY],[1,t.SPITE],[1,t.ASTONISH],[1,t.PSYBEAM],[14,t.MEAN_LOOK],[21,t.MEMENTO],[28,t.WISH],[35,t.DAZZLING_GLEAM],[42,t.SHADOW_BALL],[49,t.MYSTICAL_FIRE],[56,t.POWER_GEM],[63,t.PSYSHOCK],[70,t.PHANTOM_FORCE],[77,t.PAIN_SPLIT],[84,t.MOONBLAST],[91,t.PERISH_SONG]],[e.SLITHER_WING]:[[$,t.SUNNY_DAY],[1,t.GUST],[1,t.EMBER],[1,t.BUG_BITE],[7,t.POISON_POWDER],[7,t.STUN_SPORE],[14,t.FLAME_CHARGE],[21,t.STOMP],[28,t.LOW_SWEEP],[35,t.MORNING_SUN],[42,t.LUNGE],[49,t.SUPERPOWER],[56,t.BULK_UP],[63,t.DUAL_WINGBEAT],[70,t.FIRST_IMPRESSION],[77,t.WHIRLWIND],[84,t.LEECH_LIFE],[91,t.THRASH]],[e.SANDY_SHOCKS]:[[$,t.SUNNY_DAY],[1,t.SUPERSONIC],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.ELECTRIC_TERRAIN],[7,t.SPARK],[14,t.BULLDOZE],[21,t.CHARGE_BEAM],[28,t.TRI_ATTACK],[35,t.SCREECH],[42,t.HEAVY_SLAM],[49,t.METAL_SOUND],[56,t.DISCHARGE],[63,t.EARTH_POWER],[70,t.MIRROR_COAT],[77,t.GRAVITY],[84,t.ZAP_CANNON],[91,t.MAGNETIC_FLUX]],[e.IRON_TREADS]:[[1,t.HORN_ATTACK],[1,t.DEFENSE_CURL],[1,t.ROLLOUT],[1,t.ELECTRIC_TERRAIN],[7,t.BULLDOZE],[21,t.RAPID_SPIN],[28,t.IRON_HEAD],[35,t.STOMPING_TANTRUM],[42,t.KNOCK_OFF],[49,t.EARTHQUAKE],[56,t.HEAVY_SLAM],[63,t.WILD_CHARGE],[70,t.ENDEAVOR],[77,t.MEGAHORN],[84,t.GIGA_IMPACT],[91,t.STEEL_ROLLER]],[e.IRON_BUNDLE]:[[$,t.ELECTRIC_TERRAIN],[1,t.PRESENT],[1,t.WATER_GUN],[7,t.POWDER_SNOW],[14,t.WHIRLPOOL],[21,t.TAKE_DOWN],[28,t.DRILL_PECK],[35,t.HELPING_HAND],[42,t.FREEZE_DRY],[49,t.FLIP_TURN],[56,t.ICE_BEAM],[63,t.AGILITY],[70,t.SNOWSCAPE],[77,t.HYDRO_PUMP],[84,t.AURORA_VEIL],[91,t.BLIZZARD]],[e.IRON_HANDS]:[[$,t.ELECTRIC_TERRAIN],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.FOCUS_ENERGY],[1,t.ARM_THRUST],[7,t.FAKE_OUT],[14,t.WHIRLWIND],[21,t.THUNDER_PUNCH],[28,t.SLAM],[35,t.FORCE_PALM],[42,t.SEISMIC_TOSS],[49,t.CHARGE],[56,t.WILD_CHARGE],[63,t.CLOSE_COMBAT],[70,t.DETECT],[77,t.HEAVY_SLAM],[84,t.BELLY_DRUM],[91,t.FOCUS_PUNCH]],[e.IRON_JUGULIS]:[[$,t.ELECTRIC_TERRAIN],[1,t.FOCUS_ENERGY],[1,t.TRI_ATTACK],[1,t.AIR_CUTTER],[1,t.WORK_UP],[1,t.ELECTRIC_TERRAIN],[7,t.ROAR],[14,t.ASSURANCE],[21,t.DRAGON_BREATH],[28,t.SNARL],[35,t.CRUNCH],[42,t.HYPER_VOICE],[56,t.AIR_SLASH],[63,t.KNOCK_OFF],[70,t.DARK_PULSE],[77,t.OUTRAGE],[84,t.DRAGON_PULSE],[91,t.HYPER_BEAM]],[e.IRON_MOTH]:[[$,t.ELECTRIC_TERRAIN],[1,t.GUST],[1,t.WHIRLWIND],[1,t.EMBER],[1,t.ACID_SPRAY],[7,t.STRUGGLE_BUG],[14,t.FIRE_SPIN],[21,t.TAKE_DOWN],[28,t.LUNGE],[35,t.SCREECH],[42,t.DISCHARGE],[49,t.SLUDGE_WAVE],[56,t.FIERY_DANCE],[63,t.METAL_SOUND],[70,t.MORNING_SUN],[77,t.HURRICANE],[84,t.BUG_BUZZ],[91,t.OVERHEAT]],[e.IRON_THORNS]:[[$,t.ELECTRIC_TERRAIN],[1,t.ROCK_THROW],[1,t.IRON_DEFENSE],[1,t.THUNDER_FANG],[1,t.ICE_FANG],[1,t.FIRE_FANG],[7,t.SCREECH],[21,t.ROCK_TOMB],[28,t.BITE],[35,t.CHARGE],[42,t.ROCK_SLIDE],[49,t.SANDSTORM],[56,t.WILD_CHARGE],[63,t.PIN_MISSILE],[70,t.EARTHQUAKE],[77,t.STEALTH_ROCK],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.FRIGIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[36,t.TAKE_DOWN],[40,t.ICE_BEAM],[44,t.CRUNCH],[48,t.ICICLE_CRASH]],[e.ARCTIBAX]:[[1,t.TACKLE],[1,t.LEER],[1,t.DRAGON_TAIL],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[32,t.DRAGON_CLAW],[40,t.TAKE_DOWN],[45,t.ICE_BEAM],[50,t.CRUNCH],[55,t.ICICLE_CRASH]],[e.BAXCALIBUR]:[[ne,t.GLAIVE_RUSH],[1,t.TACKLE],[1,t.LEER],[1,t.ICE_SHARD],[1,t.DRAGON_TAIL],[1,t.BREAKING_SWIPE],[1,t.SNOWSCAPE],[6,t.ICY_WIND],[12,t.DRAGON_BREATH],[18,t.FOCUS_ENERGY],[24,t.BITE],[29,t.ICE_FANG],[35,t.DRAGON_CLAW],[42,t.TAKE_DOWN],[48,t.ICE_BEAM],[55,t.CRUNCH],[62,t.ICICLE_CRASH]],[e.GIMMIGHOUL]:[[1,t.TACKLE],[1,t.ASTONISH]],[e.GHOLDENGO]:[[1,t.TACKLE],[1,t.ASTONISH],[7,t.NIGHT_SHADE],[14,t.CONFUSE_RAY],[21,t.SUBSTITUTE],[28,t.METAL_SOUND],[35,t.SHADOW_BALL],[42,t.RECOVER],[49,t.POWER_GEM],[56,t.MAKE_IT_RAIN],[63,t.NASTY_PLOT],[70,t.MEMENTO]],[e.WO_CHIEN]:[[1,t.ABSORB],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.TICKLE],[10,t.PAYBACK],[15,t.POISON_POWDER],[15,t.STUN_SPORE],[20,t.MEGA_DRAIN],[25,t.LEECH_SEED],[30,t.GROWTH],[35,t.INGRAIN],[40,t.DARK_PULSE],[45,t.GIGA_DRAIN],[50,t.RUINATION],[55,t.FOUL_PLAY],[60,t.POWER_WHIP],[65,t.GRASSY_TERRAIN],[70,t.KNOCK_OFF],[75,t.LEAF_STORM]],[e.CHIEN_PAO]:[[1,t.SPITE],[1,t.POWDER_SNOW],[1,t.MEAN_LOOK],[5,t.ICY_WIND],[10,t.PAYBACK],[15,t.MIST],[15,t.HAZE],[20,t.ICE_SHARD],[25,t.SWORDS_DANCE],[30,t.SNOWSCAPE],[35,t.NIGHT_SLASH],[40,t.DARK_PULSE],[45,t.ICICLE_CRASH],[50,t.RUINATION],[55,t.SUCKER_PUNCH],[60,t.SACRED_SWORD],[65,t.RECOVER],[70,t.THROAT_CHOP],[75,t.SHEER_COLD]],[e.TING_LU]:[[1,t.SPITE],[1,t.MEAN_LOOK],[1,t.SAND_TOMB],[5,t.SPIKES],[10,t.PAYBACK],[15,t.STOMP],[20,t.BULLDOZE],[25,t.WHIRLWIND],[30,t.TAUNT],[35,t.THRASH],[40,t.DARK_PULSE],[45,t.STOMPING_TANTRUM],[50,t.RUINATION],[55,t.THROAT_CHOP],[60,t.ROCK_SLIDE],[65,t.MEMENTO],[70,t.EARTHQUAKE],[75,t.FISSURE]],[e.CHI_YU]:[[1,t.EMBER],[1,t.SPITE],[1,t.MEAN_LOOK],[5,t.FLAME_WHEEL],[10,t.PAYBACK],[15,t.WILL_O_WISP],[20,t.FLAME_CHARGE],[25,t.INCINERATE],[30,t.CONFUSE_RAY],[35,t.NASTY_PLOT],[40,t.DARK_PULSE],[45,t.LAVA_PLUME],[50,t.RUINATION],[55,t.BOUNCE],[60,t.SWAGGER],[65,t.INFERNO],[70,t.MEMENTO],[75,t.OVERHEAT]],[e.ROARING_MOON]:[[$,t.SUNNY_DAY],[$,t.JAW_LOCK],[$,t.BREAKING_SWIPE],[$,t.SCALE_SHOT],[1,t.LEER],[1,t.BITE],[1,t.FOCUS_ENERGY],[1,t.DRAGON_BREATH],[7,t.INCINERATE],[14,t.HEADBUTT],[21,t.SCARY_FACE],[28,t.DRAGON_CLAW],[35,t.ZEN_HEADBUTT],[42,t.FLAMETHROWER],[49,t.NIGHT_SLASH],[56,t.DRAGON_DANCE],[63,t.DRAGON_RUSH],[70,t.FLY],[77,t.THROAT_CHOP],[84,t.ROOST],[91,t.DOUBLE_EDGE]],[e.IRON_VALIANT]:[[$,t.ELECTRIC_TERRAIN],[1,t.DISABLE],[1,t.DOUBLE_TEAM],[1,t.FURY_CUTTER],[1,t.SHADOW_SNEAK],[7,t.HYPNOSIS],[14,t.FEINT],[21,t.FUTURE_SIGHT],[28,t.DAZZLING_GLEAM],[35,t.PSYCHO_CUT],[42,t.NIGHT_SLASH],[49,t.LEAF_BLADE],[56,t.MOONBLAST],[63,t.CLOSE_COMBAT],[70,t.KNOCK_OFF],[77,t.DESTINY_BOND],[84,t.WIDE_GUARD],[84,t.QUICK_GUARD],[91,t.SPIRIT_BREAK]],[e.KORAIDON]:[[1,t.SUNNY_DAY],[1,t.BREAKING_SWIPE],[7,t.ROCK_SMASH],[14,t.ANCIENT_POWER],[21,t.DRAIN_PUNCH],[28,t.BRICK_BREAK],[35,t.AGILITY],[42,t.DRAGON_CLAW],[49,t.FLAMETHROWER],[56,t.COLLISION_COURSE],[63,t.SCREECH],[70,t.COUNTER],[77,t.OUTRAGE],[84,t.CLOSE_COMBAT],[91,t.FLARE_BLITZ],[98,t.GIGA_IMPACT]],[e.MIRAIDON]:[[1,t.THUNDER_SHOCK],[1,t.DRAGON_BREATH],[1,t.ELECTRIC_TERRAIN],[7,t.SHOCK_WAVE],[14,t.CHARGE],[21,t.PARABOLIC_CHARGE],[28,t.DISCHARGE],[35,t.AGILITY],[42,t.DRAGON_PULSE],[56,t.ELECTRO_DRIFT],[63,t.METAL_SOUND],[70,t.MIRROR_COAT],[77,t.OUTRAGE],[84,t.THUNDER],[91,t.OVERHEAT],[98,t.HYPER_BEAM]],[e.WALKING_WAKE]:[[$,t.SUNNY_DAY],[$,t.HONE_CLAWS],[1,t.LEER],[1,t.ROAR],[1,t.TWISTER],[1,t.AQUA_JET],[7,t.BITE],[14,t.WATER_PULSE],[21,t.NOBLE_ROAR],[28,t.DRAGON_BREATH],[35,t.BREAKING_SWIPE],[42,t.DRAGON_RUSH],[56,t.HYDRO_STEAM],[63,t.DRAGON_PULSE],[70,t.OUTRAGE],[77,t.FLAMETHROWER],[84,t.HYDRO_PUMP]],[e.IRON_LEAVES]:[[$,t.ELECTRIC_TERRAIN],[$,t.QUASH],[1,t.LEER],[1,t.QUICK_ATTACK],[1,t.HELPING_HAND],[1,t.WORK_UP],[7,t.MAGICAL_LEAF],[14,t.RETALIATE],[21,t.QUICK_GUARD],[28,t.NIGHT_SLASH],[35,t.SWORDS_DANCE],[42,t.SACRED_SWORD],[49,t.LEAF_BLADE],[56,t.PSYBLADE],[63,t.CLOSE_COMBAT],[70,t.IMPRISON],[77,t.MEGAHORN],[84,t.ALLY_SWITCH],[91,t.SOLAR_BLADE]],[e.DIPPLIN]:[[ne,t.DOUBLE_HIT],[$,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE]],[e.POLTCHAGEIST]:[[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[5,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.GIGA_DRAIN],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.SINISTCHA]:[[ne,t.MATCHA_GOTCHA],[$,t.GIGA_DRAIN],[1,t.STUN_SPORE],[1,t.WITHDRAW],[1,t.ASTONISH],[6,t.ABSORB],[12,t.LIFE_DEW],[18,t.FOUL_PLAY],[24,t.MEGA_DRAIN],[30,t.HEX],[36,t.RAGE_POWDER],[42,t.STRENGTH_SAP],[48,t.SHADOW_BALL],[54,t.MEMENTO],[60,t.LEAF_STORM]],[e.OKIDOGI]:[[1,t.BITE],[1,t.LOW_KICK],[1,t.BULK_UP],[8,t.HOWL],[16,t.POISON_FANG],[24,t.FORCE_PALM],[32,t.COUNTER],[40,t.POISON_JAB],[48,t.BRUTAL_SWING],[56,t.CRUNCH],[64,t.SUPERPOWER],[72,t.GIGA_IMPACT]],[e.MUNKIDORI]:[[1,t.SCRATCH],[1,t.CONFUSION],[1,t.FAKE_OUT],[1,t.FLATTER],[8,t.HELPING_HAND],[16,t.PSYBEAM],[24,t.CLEAR_SMOG],[32,t.POISON_JAB],[40,t.PSYCHIC],[48,t.SLUDGE_WAVE],[56,t.NASTY_PLOT],[64,t.FUTURE_SIGHT],[72,t.PARTING_SHOT]],[e.FEZANDIPITI]:[[1,t.DOUBLE_KICK],[1,t.PECK],[1,t.POISON_GAS],[1,t.DISARMING_VOICE],[8,t.QUICK_ATTACK],[16,t.ATTRACT],[24,t.WING_ATTACK],[32,t.CROSS_POISON],[40,t.TAIL_SLAP],[48,t.BEAT_UP],[56,t.SWAGGER],[56,t.FLATTER],[64,t.ROOST],[72,t.MOONBLAST]],[e.OGERPON]:[[$,t.DOUBLE_KICK],[$,t.COUNTER],[$,t.RETALIATE],[$,t.HORN_LEECH],[1,t.VINE_WHIP],[1,t.LEECH_SEED],[1,t.QUICK_ATTACK],[1,t.FOLLOW_ME],[6,t.FOCUS_ENERGY],[12,t.GROWTH],[18,t.SLAM],[24,t.LOW_SWEEP],[30,t.IVY_CUDGEL],[36,t.THROAT_CHOP],[42,t.SYNTHESIS],[48,t.SPIKY_SHIELD],[54,t.POWER_WHIP],[60,t.SUPERPOWER],[66,t.WOOD_HAMMER]],[e.ARCHALUDON]:[[ne,t.ELECTRO_SHOT],[$,t.LASER_FOCUS],[1,t.LEER],[1,t.METAL_CLAW],[6,t.ROCK_SMASH],[12,t.HONE_CLAWS],[18,t.METAL_SOUND],[24,t.BREAKING_SWIPE],[30,t.DRAGON_TAIL],[36,t.IRON_DEFENSE],[42,t.FOCUS_ENERGY],[48,t.DRAGON_CLAW],[54,t.FLASH_CANNON],[60,t.METAL_BURST],[66,t.HYPER_BEAM]],[e.HYDRAPPLE]:[[ne,t.FICKLE_BEAM],[$,t.YAWN],[$,t.DOUBLE_HIT],[$,t.INFESTATION],[$,t.DRAGON_CHEER],[1,t.LEAFAGE],[1,t.WITHDRAW],[1,t.SWEET_SCENT],[1,t.RECYCLE],[1,t.ASTONISH],[4,t.DRAGON_TAIL],[8,t.GROWTH],[12,t.DRAGON_BREATH],[16,t.PROTECT],[20,t.BULLET_SEED],[28,t.SYRUP_BOMB],[32,t.DRAGON_PULSE],[36,t.RECOVER],[40,t.ENERGY_BALL],[44,t.SUBSTITUTE],[54,t.POWER_WHIP]],[e.GOUGING_FIRE]:[[$,t.DOUBLE_KICK],[$,t.ANCIENT_POWER],[$,t.NOBLE_ROAR],[1,t.STOMP],[1,t.LEER],[1,t.INCINERATE],[1,t.SUNNY_DAY],[7,t.FIRE_FANG],[14,t.HOWL],[21,t.BITE],[28,t.DRAGON_CLAW],[35,t.CRUSH_CLAW],[42,t.MORNING_SUN],[49,t.BURNING_BULWARK],[56,t.DRAGON_RUSH],[63,t.FIRE_BLAST],[70,t.LAVA_PLUME],[77,t.OUTRAGE],[84,t.FLARE_BLITZ],[91,t.RAGING_FURY]],[e.RAGING_BOLT]:[[$,t.ANCIENT_POWER],[1,t.TWISTER],[1,t.SUNNY_DAY],[1,t.SHOCK_WAVE],[1,t.STOMP],[7,t.CHARGE],[14,t.DRAGON_BREATH],[21,t.ELECTRIC_TERRAIN],[28,t.DISCHARGE],[35,t.DRAGON_TAIL],[42,t.CALM_MIND],[49,t.THUNDERCLAP],[56,t.DRAGON_HAMMER],[63,t.RISING_VOLTAGE],[70,t.DRAGON_PULSE],[77,t.ZAP_CANNON],[84,t.BODY_PRESS],[91,t.THUNDER]],[e.IRON_BOULDER]:[[1,t.HORN_ATTACK],[1,t.LEER],[1,t.ROCK_THROW],[1,t.ELECTRIC_TERRAIN],[7,t.QUICK_ATTACK],[14,t.SLASH],[21,t.AGILITY],[28,t.PSYCHO_CUT],[35,t.COUNTER],[42,t.ROCK_TOMB],[49,t.SACRED_SWORD],[56,t.MIGHTY_CLEAVE],[63,t.SWORDS_DANCE],[70,t.MEGAHORN],[77,t.QUICK_GUARD],[84,t.STONE_EDGE],[91,t.GIGA_IMPACT]],[e.IRON_CROWN]:[[1,t.LEER],[1,t.ELECTRIC_TERRAIN],[1,t.CONFUSION],[1,t.METAL_CLAW],[7,t.SMART_STRIKE],[14,t.SLASH],[21,t.IRON_DEFENSE],[28,t.PSYSHOCK],[35,t.PSYCHO_CUT],[42,t.FLASH_CANNON],[49,t.SACRED_SWORD],[56,t.TACHYON_CUTTER],[63,t.FUTURE_SIGHT],[70,t.VOLT_SWITCH],[77,t.QUICK_GUARD],[84,t.METAL_BURST],[91,t.HYPER_BEAM]],[e.TERAPAGOS]:[[1,t.WITHDRAW],[1,t.TRI_ATTACK],[1,t.RAPID_SPIN],[10,t.ANCIENT_POWER],[20,t.HEADBUTT],[30,t.PROTECT],[40,t.EARTH_POWER],[50,t.HEAVY_SLAM],[60,t.TERA_STARSTORM],[70,t.DOUBLE_EDGE],[80,t.ROCK_POLISH],[90,t.GYRO_BALL]],[e.PECHARUNT]:[[$,t.DEFENSE_CURL],[$,t.ROLLOUT],[$,t.MEAN_LOOK],[1,t.SMOG],[1,t.POISON_GAS],[1,t.MEMENTO],[1,t.ASTONISH],[8,t.WITHDRAW],[16,t.DESTINY_BOND],[24,t.FAKE_TEARS],[32,t.PARTING_SHOT],[40,t.SHADOW_BALL],[48,t.MALIGNANT_CHAIN],[56,t.TOXIC],[64,t.NASTY_PLOT],[72,t.RECOVER]],[e.ALOLA_RATTATA]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[4,t.QUICK_ATTACK],[7,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[22,t.CRUNCH],[25,t.SUCKER_PUNCH],[28,t.SUPER_FANG],[31,t.DOUBLE_EDGE],[34,t.ENDEAVOR]],[e.ALOLA_RATICATE]:[[ne,t.SCARY_FACE],[1,t.SWORDS_DANCE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.QUICK_ATTACK],[1,t.FOCUS_ENERGY],[10,t.BITE],[13,t.PURSUIT],[16,t.HYPER_FANG],[19,t.ASSURANCE],[24,t.CRUNCH],[29,t.SUCKER_PUNCH],[34,t.SUPER_FANG],[39,t.DOUBLE_EDGE],[44,t.ENDEAVOR]],[e.ALOLA_RAICHU]:[[ne,t.PSYCHIC],[ne,t.ZIPPY_ZAP],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.THUNDER_WAVE],[1,t.THUNDER],[1,t.AGILITY],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.LIGHT_SCREEN],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.SPARK],[1,t.IRON_TAIL],[1,t.FEINT],[1,t.NASTY_PLOT],[1,t.DISCHARGE],[1,t.ELECTRO_BALL],[1,t.PLAY_NICE],[1,t.NUZZLE],[5,t.THUNDERBOLT],[50,t.PIKA_PAPOW]],[e.ALOLA_SANDSHREW]:[[1,t.SCRATCH],[1,t.DEFENSE_CURL],[3,t.MIST],[6,t.POWDER_SNOW],[9,t.ROLLOUT],[12,t.FURY_CUTTER],[15,t.RAPID_SPIN],[18,t.METAL_CLAW],[21,t.SWIFT],[24,t.FURY_SWIPES],[27,t.IRON_DEFENSE],[30,t.SLASH],[33,t.IRON_HEAD],[36,t.GYRO_BALL],[39,t.SWORDS_DANCE],[42,t.SNOWSCAPE],[45,t.BLIZZARD]],[e.ALOLA_SANDSLASH]:[[ne,t.ICICLE_SPEAR],[$,t.SCRATCH],[$,t.MIST],[$,t.BLIZZARD],[$,t.DEFENSE_CURL],[$,t.SWIFT],[$,t.FURY_SWIPES],[$,t.POWDER_SNOW],[$,t.ROLLOUT],[$,t.FURY_CUTTER],[$,t.RAPID_SPIN],[$,t.IRON_DEFENSE],[$,t.GYRO_BALL],[$,t.METAL_BURST],[$,t.IRON_HEAD],[$,t.SNOWSCAPE],[1,t.ICICLE_CRASH],[1,t.METAL_CLAW],[1,t.SLASH],[1,t.SWORDS_DANCE],[1,t.ICE_BALL]],[e.ALOLA_VULPIX]:[[1,t.TAIL_WHIP],[1,t.POWDER_SNOW],[4,t.DISABLE],[8,t.ICE_SHARD],[12,t.SPITE],[16,t.ICY_WIND],[20,t.CONFUSE_RAY],[24,t.AURORA_BEAM],[28,t.EXTRASENSORY],[32,t.ICE_BEAM],[36,t.IMPRISON],[40,t.MIST],[44,t.AURORA_VEIL],[48,t.FREEZE_DRY],[52,t.BLIZZARD]],[e.ALOLA_NINETALES]:[[ne,t.DAZZLING_GLEAM],[$,t.DISABLE],[$,t.MIST],[$,t.ICE_BEAM],[$,t.AURORA_BEAM],[$,t.CONFUSE_RAY],[$,t.SPITE],[$,t.POWDER_SNOW],[$,t.EXTRASENSORY],[$,t.NASTY_PLOT],[$,t.ICE_SHARD],[$,t.FREEZE_DRY],[$,t.AURORA_VEIL],[1,t.ICY_WIND],[1,t.IMPRISON],[1,t.BLIZZARD],[1,t.TAIL_WHIP]],[e.ALOLA_DIGLETT]:[[1,t.SAND_ATTACK],[1,t.METAL_CLAW],[4,t.GROWL],[8,t.ASTONISH],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[28,t.SANDSTORM],[32,t.DIG],[36,t.EARTH_POWER],[40,t.EARTHQUAKE],[44,t.FISSURE]],[e.ALOLA_DUGTRIO]:[[ne,t.SAND_TOMB],[1,t.SAND_ATTACK],[1,t.GROWL],[1,t.TRI_ATTACK],[1,t.METAL_CLAW],[1,t.ASTONISH],[1,t.NIGHT_SLASH],[1,t.ROTOTILLER],[12,t.MUD_SLAP],[16,t.BULLDOZE],[20,t.SUCKER_PUNCH],[24,t.IRON_HEAD],[30,t.SANDSTORM],[36,t.DIG],[42,t.EARTH_POWER],[48,t.EARTHQUAKE],[54,t.FISSURE]],[e.ALOLA_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.FEINT],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.NIGHT_SLASH],[40,t.NASTY_PLOT],[44,t.PLAY_ROUGH]],[e.ALOLA_PERSIAN]:[[ne,t.POWER_GEM],[1,t.SCRATCH],[1,t.GROWL],[1,t.FAKE_OUT],[1,t.FEINT],[1,t.SWITCHEROO],[1,t.QUASH],[12,t.PAY_DAY],[16,t.BITE],[20,t.TAUNT],[24,t.ASSURANCE],[31,t.FURY_SWIPES],[36,t.SCREECH],[42,t.NIGHT_SLASH],[48,t.NASTY_PLOT],[54,t.PLAY_ROUGH]],[e.ALOLA_GEODUDE]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[4,t.CHARGE],[6,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[28,t.STEALTH_ROCK],[30,t.ROCK_BLAST],[34,t.DISCHARGE],[36,t.EXPLOSION],[40,t.DOUBLE_EDGE],[42,t.STONE_EDGE]],[e.ALOLA_GRAVELER]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[10,t.ROLLOUT],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GOLEM]:[[1,t.TACKLE],[1,t.DEFENSE_CURL],[1,t.CHARGE],[1,t.ROCK_POLISH],[1,t.ROLLOUT],[1,t.HEAVY_SLAM],[12,t.SPARK],[16,t.ROCK_THROW],[18,t.SMACK_DOWN],[22,t.THUNDER_PUNCH],[24,t.SELF_DESTRUCT],[30,t.STEALTH_ROCK],[34,t.ROCK_BLAST],[40,t.DISCHARGE],[44,t.EXPLOSION],[50,t.DOUBLE_EDGE],[54,t.STONE_EDGE]],[e.ALOLA_GRIMER]:[[1,t.POUND],[1,t.POISON_GAS],[4,t.HARDEN],[7,t.BITE],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[43,t.ACID_ARMOR],[46,t.BELCH],[48,t.MEMENTO]],[e.ALOLA_MUK]:[[1,t.POUND],[1,t.BITE],[1,t.HARDEN],[1,t.POISON_GAS],[12,t.DISABLE],[15,t.ACID_SPRAY],[18,t.POISON_FANG],[21,t.MINIMIZE],[26,t.TOXIC],[29,t.KNOCK_OFF],[32,t.CRUNCH],[37,t.SCREECH],[40,t.GUNK_SHOT],[46,t.ACID_ARMOR],[52,t.BELCH],[57,t.MEMENTO]],[e.ALOLA_EXEGGUTOR]:[[ne,t.DRAGON_HAMMER],[$,t.GROWTH],[1,t.BARRAGE],[1,t.SEED_BOMB],[1,t.PSYSHOCK],[1,t.WOOD_HAMMER],[1,t.LEAF_STORM],[1,t.MEGA_DRAIN],[1,t.CONFUSION],[1,t.SYNTHESIS],[1,t.BULLET_SEED],[1,t.GIGA_DRAIN],[1,t.EXTRASENSORY],[1,t.UPROAR],[1,t.WORRY_SEED],[1,t.SOLAR_BEAM],[1,t.ABSORB],[1,t.HYPNOSIS],[1,t.REFLECT],[1,t.LEECH_SEED]],[e.ALOLA_MAROWAK]:[[ne,t.SHADOW_BONE],[1,t.BONE_CLUB],[1,t.HEADBUTT],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.FIRE_SPIN],[1,t.FOCUS_ENERGY],[1,t.MUD_SLAP],[1,t.FALSE_SWIPE],[1,t.RETALIATE],[12,t.FLAME_WHEEL],[16,t.HEX],[20,t.FLING],[24,t.STOMPING_TANTRUM],[31,t.BONE_RUSH],[36,t.WILL_O_WISP],[42,t.ENDEAVOR],[48,t.BONEMERANG],[54,t.THRASH],[60,t.FLARE_BLITZ]],[e.ETERNAL_FLOETTE]:[[1,t.VINE_WHIP],[1,t.TACKLE],[1,t.FAIRY_WIND],[10,t.LUCKY_CHANT],[15,t.RAZOR_LEAF],[20,t.WISH],[25,t.MAGICAL_LEAF],[27,t.GRASSY_TERRAIN],[33,t.PETAL_BLIZZARD],[38,t.AROMATHERAPY],[43,t.MISTY_TERRAIN],[46,t.MOONBLAST],[50,t.LIGHT_OF_RUIN],[51,t.PETAL_DANCE],[58,t.SOLAR_BEAM]],[e.GALAR_MEOWTH]:[[1,t.GROWL],[1,t.FAKE_OUT],[4,t.HONE_CLAWS],[8,t.SCRATCH],[12,t.PAY_DAY],[16,t.METAL_CLAW],[20,t.TAUNT],[24,t.SWAGGER],[29,t.FURY_SWIPES],[32,t.SCREECH],[36,t.SLASH],[40,t.METAL_SOUND],[44,t.THRASH]],[e.GALAR_PONYTA]:[[1,t.TACKLE],[1,t.GROWL],[5,t.TAIL_WHIP],[10,t.CONFUSION],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[41,t.TAKE_DOWN],[45,t.DAZZLING_GLEAM],[50,t.PSYCHIC],[55,t.HEALING_WISH]],[e.GALAR_RAPIDASH]:[[ne,t.PSYCHO_CUT],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.CONFUSION],[1,t.QUICK_ATTACK],[1,t.MEGAHORN],[15,t.FAIRY_WIND],[20,t.AGILITY],[25,t.PSYBEAM],[30,t.STOMP],[35,t.HEAL_PULSE],[43,t.TAKE_DOWN],[49,t.DAZZLING_GLEAM],[56,t.PSYCHIC],[63,t.HEALING_WISH]],[e.GALAR_SLOWPOKE]:[[1,t.TACKLE],[1,t.CURSE],[3,t.GROWL],[6,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_SLOWBRO]:[[ne,t.SHELL_SIDE_ARM],[1,t.TACKLE],[1,t.GROWL],[1,t.ACID],[1,t.WITHDRAW],[1,t.CURSE],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_FARFETCHD]:[[1,t.SAND_ATTACK],[1,t.PECK],[5,t.LEER],[10,t.FURY_CUTTER],[15,t.ROCK_SMASH],[20,t.BRUTAL_SWING],[25,t.DETECT],[30,t.KNOCK_OFF],[35,t.DEFOG],[40,t.BRICK_BREAK],[45,t.SWORDS_DANCE],[50,t.SLAM],[55,t.LEAF_BLADE],[60,t.FINAL_GAMBIT],[65,t.BRAVE_BIRD]],[e.GALAR_WEEZING]:[[ne,t.DOUBLE_HIT],[1,t.TACKLE],[1,t.SMOKESCREEN],[1,t.HAZE],[1,t.SMOG],[1,t.POISON_GAS],[1,t.HEAT_WAVE],[1,t.DEFOG],[1,t.AROMATIC_MIST],[1,t.STRANGE_STEAM],[12,t.CLEAR_SMOG],[16,t.ASSURANCE],[20,t.SLUDGE],[24,t.FAIRY_WIND],[28,t.SELF_DESTRUCT],[32,t.SLUDGE_BOMB],[38,t.TOXIC],[44,t.BELCH],[50,t.EXPLOSION],[56,t.MEMENTO],[62,t.DESTINY_BOND],[68,t.MISTY_TERRAIN]],[e.GALAR_MR_MIME]:[[1,t.POUND],[1,t.BARRIER],[1,t.TICKLE],[1,t.MIMIC],[1,t.LIGHT_SCREEN],[1,t.REFLECT],[1,t.PROTECT],[1,t.SAFEGUARD],[1,t.BATON_PASS],[1,t.ENCORE],[1,t.RAPID_SPIN],[1,t.ROLE_PLAY],[1,t.RECYCLE],[1,t.COPYCAT],[1,t.ICE_SHARD],[1,t.MISTY_TERRAIN],[1,t.DAZZLING_GLEAM],[12,t.CONFUSION],[16,t.ALLY_SWITCH],[20,t.ICY_WIND],[24,t.DOUBLE_KICK],[28,t.PSYBEAM],[32,t.HYPNOSIS],[36,t.MIRROR_COAT],[40,t.SUCKER_PUNCH],[44,t.FREEZE_DRY],[48,t.PSYCHIC],[52,t.TEETER_DANCE]],[e.GALAR_ARTICUNO]:[[1,t.GUST],[5,t.CONFUSION],[10,t.REFLECT],[15,t.HYPNOSIS],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.TAILWIND],[35,t.PSYCHO_CUT],[40,t.RECOVER],[45,t.FREEZING_GLARE],[50,t.DREAM_EATER],[55,t.HURRICANE],[60,t.DOUBLE_TEAM],[65,t.FUTURE_SIGHT],[70,t.TRICK_ROOM]],[e.GALAR_ZAPDOS]:[[1,t.PECK],[1,t.FOCUS_ENERGY],[5,t.ROCK_SMASH],[10,t.LIGHT_SCREEN],[15,t.PLUCK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.BRICK_BREAK],[35,t.DRILL_PECK],[40,t.QUICK_GUARD],[45,t.THUNDEROUS_KICK],[50,t.BULK_UP],[55,t.COUNTER],[60,t.DETECT],[65,t.CLOSE_COMBAT],[70,t.REVERSAL]],[e.GALAR_MOLTRES]:[[1,t.GUST],[1,t.LEER],[5,t.PAYBACK],[10,t.SAFEGUARD],[15,t.WING_ATTACK],[20,t.AGILITY],[25,t.ANCIENT_POWER],[30,t.SUCKER_PUNCH],[35,t.AIR_SLASH],[40,t.AFTER_YOU],[45,t.FIERY_WRATH],[50,t.NASTY_PLOT],[55,t.HURRICANE],[60,t.ENDURE],[65,t.MEMENTO],[70,t.SKY_ATTACK]],[e.GALAR_SLOWKING]:[[ne,t.EERIE_SPELL],[$,t.FUTURE_SIGHT],[$,t.CHILLY_RECEPTION],[$,t.TOXIC],[1,t.POWER_GEM],[1,t.NASTY_PLOT],[1,t.SWAGGER],[1,t.TACKLE],[1,t.CURSE],[1,t.GROWL],[1,t.ACID],[9,t.YAWN],[12,t.CONFUSION],[15,t.DISABLE],[18,t.WATER_PULSE],[21,t.HEADBUTT],[24,t.ZEN_HEADBUTT],[27,t.AMNESIA],[30,t.SURF],[33,t.SLACK_OFF],[36,t.PSYCHIC],[39,t.PSYCH_UP],[42,t.RAIN_DANCE],[45,t.HEAL_PULSE]],[e.GALAR_CORSOLA]:[[1,t.TACKLE],[1,t.HARDEN],[5,t.ASTONISH],[10,t.DISABLE],[15,t.SPITE],[20,t.ANCIENT_POWER],[25,t.HEX],[30,t.CURSE],[35,t.STRENGTH_SAP],[40,t.POWER_GEM],[45,t.NIGHT_SHADE],[50,t.GRUDGE],[55,t.MIRROR_COAT]],[e.GALAR_ZIGZAGOON]:[[1,t.TACKLE],[1,t.LEER],[3,t.SAND_ATTACK],[6,t.LICK],[9,t.SNARL],[12,t.HEADBUTT],[15,t.BABY_DOLL_EYES],[18,t.PIN_MISSILE],[21,t.REST],[24,t.TAKE_DOWN],[27,t.SCARY_FACE],[30,t.COUNTER],[33,t.TAUNT],[36,t.DOUBLE_EDGE]],[e.GALAR_LINOONE]:[[ne,t.NIGHT_SLASH],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.PIN_MISSILE],[1,t.LEER],[1,t.LICK],[1,t.SWITCHEROO],[1,t.BABY_DOLL_EYES],[9,t.SNARL],[12,t.HEADBUTT],[15,t.HONE_CLAWS],[18,t.FURY_SWIPES],[23,t.REST],[28,t.TAKE_DOWN],[33,t.SCARY_FACE],[38,t.COUNTER],[43,t.TAUNT],[48,t.DOUBLE_EDGE]],[e.GALAR_DARUMAKA]:[[1,t.TACKLE],[1,t.POWDER_SNOW],[4,t.TAUNT],[8,t.BITE],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[36,t.BELLY_DRUM],[40,t.BLIZZARD],[44,t.THRASH],[48,t.SUPERPOWER]],[e.GALAR_DARMANITAN]:[[ne,t.ICICLE_CRASH],[1,t.TACKLE],[1,t.BITE],[1,t.POWDER_SNOW],[1,t.TAUNT],[12,t.AVALANCHE],[16,t.WORK_UP],[20,t.ICE_FANG],[24,t.HEADBUTT],[28,t.ICE_PUNCH],[32,t.UPROAR],[38,t.BELLY_DRUM],[44,t.BLIZZARD],[50,t.THRASH],[56,t.SUPERPOWER]],[e.GALAR_YAMASK]:[[1,t.PROTECT],[1,t.ASTONISH],[4,t.HAZE],[8,t.NIGHT_SHADE],[12,t.DISABLE],[16,t.BRUTAL_SWING],[20,t.CRAFTY_SHIELD],[24,t.HEX],[28,t.MEAN_LOOK],[32,t.SLAM],[36,t.CURSE],[40,t.SHADOW_BALL],[44,t.EARTHQUAKE],[48,t.GUARD_SPLIT],[48,t.POWER_SPLIT],[52,t.DESTINY_BOND]],[e.GALAR_STUNFISK]:[[1,t.TACKLE],[1,t.WATER_GUN],[1,t.MUD_SLAP],[1,t.METAL_CLAW],[5,t.ENDURE],[10,t.MUD_SHOT],[15,t.REVENGE],[20,t.METAL_SOUND],[25,t.SUCKER_PUNCH],[30,t.IRON_DEFENSE],[35,t.BOUNCE],[40,t.MUDDY_WATER],[45,t.SNAP_TRAP],[50,t.FLAIL],[55,t.FISSURE]],[e.HISUI_GROWLITHE]:[[1,t.LEER],[1,t.EMBER],[4,t.HOWL],[8,t.BITE],[12,t.FLAME_WHEEL],[16,t.HELPING_HAND],[24,t.FIRE_FANG],[28,t.RETALIATE],[32,t.CRUNCH],[36,t.TAKE_DOWN],[40,t.FLAMETHROWER],[44,t.ROAR],[48,t.ROCK_SLIDE],[52,t.REVERSAL],[56,t.FLARE_BLITZ]],[e.HISUI_ARCANINE]:[[ne,t.EXTREME_SPEED],[1,t.TAKE_DOWN],[1,t.LEER],[1,t.BITE],[1,t.ROAR],[1,t.EMBER],[1,t.ROCK_THROW],[1,t.AGILITY],[1,t.ROCK_SLIDE],[1,t.FLAME_WHEEL],[1,t.REVERSAL],[1,t.CRUNCH],[1,t.HELPING_HAND],[1,t.HOWL],[1,t.FLARE_BLITZ],[1,t.FIRE_FANG],[1,t.RETALIATE],[5,t.FLAMETHROWER],[64,t.RAGING_FURY]],[e.HISUI_VOLTORB]:[[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_ELECTRODE]:[[ne,t.CHLOROBLAST],[1,t.TACKLE],[1,t.CHARGE],[4,t.THUNDER_SHOCK],[6,t.STUN_SPORE],[9,t.BULLET_SEED],[11,t.ROLLOUT],[13,t.SCREECH],[16,t.CHARGE_BEAM],[20,t.SWIFT],[22,t.ELECTRO_BALL],[26,t.SELF_DESTRUCT],[29,t.ENERGY_BALL],[34,t.SEED_BOMB],[34,t.DISCHARGE],[41,t.EXPLOSION],[46,t.GYRO_BALL],[50,t.GRASSY_TERRAIN]],[e.HISUI_TYPHLOSION]:[[ne,t.INFERNAL_PARADE],[1,t.TACKLE],[1,t.DOUBLE_EDGE],[1,t.LEER],[1,t.EMBER],[1,t.SMOKESCREEN],[1,t.ERUPTION],[1,t.GYRO_BALL],[13,t.QUICK_ATTACK],[20,t.FLAME_WHEEL],[24,t.DEFENSE_CURL],[31,t.SWIFT],[35,t.FLAME_CHARGE],[43,t.LAVA_PLUME],[48,t.FLAMETHROWER],[56,t.INFERNO],[61,t.ROLLOUT],[74,t.OVERHEAT]],[e.HISUI_QWILFISH]:[[1,t.TACKLE],[1,t.POISON_STING],[4,t.HARDEN],[8,t.BITE],[12,t.FELL_STINGER],[16,t.MINIMIZE],[20,t.SPIKES],[24,t.BRINE],[28,t.BARB_BARRAGE],[32,t.PIN_MISSILE],[36,t.TOXIC_SPIKES],[40,t.STOCKPILE],[40,t.SPIT_UP],[44,t.TOXIC],[48,t.CRUNCH],[52,t.ACUPRESSURE],[56,t.DESTINY_BOND]],[e.HISUI_SNEASEL]:[[1,t.SCRATCH],[1,t.LEER],[1,t.ROCK_SMASH],[6,t.TAUNT],[12,t.QUICK_ATTACK],[18,t.METAL_CLAW],[24,t.POISON_JAB],[30,t.BRICK_BREAK],[36,t.HONE_CLAWS],[42,t.SLASH],[48,t.AGILITY],[54,t.SCREECH],[60,t.CLOSE_COMBAT]],[e.HISUI_SAMUROTT]:[[ne,t.CEASELESS_EDGE],[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.WATER_GUN],[1,t.SOAK],[1,t.SLASH],[1,t.MEGAHORN],[1,t.SUCKER_PUNCH],[13,t.FOCUS_ENERGY],[18,t.RAZOR_SHELL],[21,t.FURY_CUTTER],[25,t.WATER_PULSE],[29,t.AERIAL_ACE],[34,t.AQUA_JET],[39,t.ENCORE],[46,t.AQUA_TAIL],[51,t.RETALIATE],[58,t.SWORDS_DANCE],[63,t.HYDRO_PUMP]],[e.HISUI_LILLIGANT]:[[ne,t.VICTORY_DANCE],[1,t.MEGA_KICK],[1,t.ABSORB],[1,t.MEGA_DRAIN],[1,t.LEECH_SEED],[1,t.GROWTH],[1,t.STUN_SPORE],[1,t.SLEEP_POWDER],[1,t.GIGA_DRAIN],[1,t.CHARM],[1,t.SYNTHESIS],[1,t.SUNNY_DAY],[1,t.HELPING_HAND],[1,t.TEETER_DANCE],[1,t.MAGICAL_LEAF],[1,t.LEAF_BLADE],[1,t.ENERGY_BALL],[1,t.DEFOG],[1,t.LEAF_STORM],[1,t.ENTRAINMENT],[1,t.AFTER_YOU],[1,t.PETAL_BLIZZARD],[1,t.SOLAR_BLADE],[5,t.AXE_KICK]],[e.HISUI_ZORUA]:[[1,t.SCRATCH],[1,t.LEER],[4,t.TORMENT],[8,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[32,t.AGILITY],[36,t.SHADOW_BALL],[40,t.BITTER_MALICE],[44,t.NASTY_PLOT],[48,t.FOUL_PLAY]],[e.HISUI_ZOROARK]:[[ne,t.SHADOW_CLAW],[1,t.SCRATCH],[1,t.LEER],[1,t.TORMENT],[1,t.U_TURN],[1,t.HONE_CLAWS],[12,t.SHADOW_SNEAK],[16,t.CURSE],[20,t.TAUNT],[24,t.KNOCK_OFF],[28,t.SPITE],[34,t.AGILITY],[40,t.SHADOW_BALL],[46,t.BITTER_MALICE],[52,t.NASTY_PLOT],[58,t.FOUL_PLAY]],[e.HISUI_BRAVIARY]:[[ne,t.ESPER_WING],[$,t.BRAVE_BIRD],[1,t.WING_ATTACK],[1,t.LEER],[1,t.PECK],[1,t.SKY_ATTACK],[1,t.SUPERPOWER],[1,t.HONE_CLAWS],[18,t.TAILWIND],[24,t.SCARY_FACE],[30,t.AERIAL_ACE],[36,t.SLASH],[42,t.WHIRLWIND],[48,t.CRUSH_CLAW],[57,t.AIR_SLASH],[64,t.DEFOG],[72,t.THRASH],[80,t.HURRICANE]],[e.HISUI_SLIGGOO]:[[ne,t.SHELTER],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.BODY_SLAM],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.IRON_HEAD],[56,t.MUDDY_WATER]],[e.HISUI_GOODRA]:[[ne,t.IRON_TAIL],[1,t.TACKLE],[1,t.WATER_GUN],[1,t.ABSORB],[1,t.ACID_ARMOR],[1,t.DRAGON_BREATH],[1,t.FEINT],[1,t.ACID_SPRAY],[1,t.TEARFUL_LOOK],[1,t.SHELTER],[15,t.PROTECT],[20,t.FLAIL],[25,t.WATER_PULSE],[30,t.RAIN_DANCE],[35,t.DRAGON_PULSE],[43,t.CURSE],[49,t.BODY_SLAM],[49,t.IRON_HEAD],[58,t.MUDDY_WATER],[67,t.HEAVY_SLAM]],[e.HISUI_AVALUGG]:[[ne,t.ROCK_SLIDE],[1,t.TACKLE],[1,t.HARDEN],[1,t.POWDER_SNOW],[1,t.RAPID_SPIN],[1,t.WIDE_GUARD],[9,t.CURSE],[12,t.ICY_WIND],[15,t.PROTECT],[18,t.AVALANCHE],[21,t.BITE],[24,t.ICE_FANG],[27,t.IRON_DEFENSE],[30,t.RECOVER],[33,t.CRUNCH],[36,t.TAKE_DOWN],[41,t.BLIZZARD],[46,t.DOUBLE_EDGE],[51,t.STONE_EDGE],[61,t.MOUNTAIN_GALE]],[e.HISUI_DECIDUEYE]:[[ne,t.TRIPLE_ARROWS],[$,t.NASTY_PLOT],[1,t.TACKLE],[1,t.GROWL],[1,t.U_TURN],[1,t.ASTONISH],[1,t.LEAF_STORM],[1,t.LEAFAGE],[9,t.PECK],[12,t.SHADOW_SNEAK],[15,t.RAZOR_LEAF],[20,t.SYNTHESIS],[25,t.PLUCK],[30,t.BULK_UP],[37,t.SUCKER_PUNCH],[44,t.LEAF_BLADE],[51,t.FEATHER_DANCE],[58,t.BRAVE_BIRD]],[e.PALDEA_TAUROS]:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.ASSURANCE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.DOUBLE_EDGE],[60,t.CLOSE_COMBAT]],[e.PALDEA_WOOPER]:[[1,t.TAIL_WHIP],[1,t.MUD_SHOT],[4,t.TACKLE],[8,t.POISON_TAIL],[12,t.TOXIC_SPIKES],[16,t.SLAM],[21,t.YAWN],[24,t.POISON_JAB],[28,t.SLUDGE_WAVE],[32,t.AMNESIA],[36,t.TOXIC],[40,t.EARTHQUAKE]],[e.BLOODMOON_URSALUNA]:[[$,t.MOONLIGHT],[1,t.HEADLONG_RUSH],[1,t.SCRATCH],[1,t.LEER],[1,t.LICK],[8,t.FURY_SWIPES],[13,t.PAYBACK],[17,t.HARDEN],[22,t.SLASH],[25,t.PLAY_NICE],[35,t.SCARY_FACE],[41,t.REST],[41,t.SNORE],[48,t.EARTH_POWER],[56,t.MOONBLAST],[64,t.HAMMER_ARM],[70,t.BLOOD_MOON]]},iR={[e.PIKACHU]:{1:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]],2:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],3:[[1,t.METEOR_MASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],4:[[1,t.ICICLE_CRASH],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],5:[[1,t.DRAINING_KISS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],6:[[1,t.ELECTRIC_TERRAIN],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],7:[[1,t.FLYING_PRESS],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.SPARK],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[44,t.THUNDER],[48,t.PIKA_PAPOW]],8:[[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.THUNDER_SHOCK],[1,t.QUICK_ATTACK],[1,t.SWEET_KISS],[1,t.CHARM],[1,t.NASTY_PLOT],[1,t.PLAY_NICE],[1,t.NUZZLE],[4,t.THUNDER_WAVE],[8,t.DOUBLE_TEAM],[12,t.ELECTRO_BALL],[16,t.FEINT],[20,t.ZIPPY_ZAP],[24,t.AGILITY],[28,t.IRON_TAIL],[32,t.DISCHARGE],[34,t.FLOATY_FALL],[36,t.THUNDERBOLT],[40,t.LIGHT_SCREEN],[42,t.SPLISHY_SPLASH],[44,t.THUNDER],[48,t.PIKA_PAPOW]]},[e.EEVEE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[1,t.GROWL],[1,t.HELPING_HAND],[1,t.COVET],[5,t.SAND_ATTACK],[10,t.QUICK_ATTACK],[15,t.BABY_DOLL_EYES],[18,t.BOUNCY_BUBBLE],[18,t.SIZZLY_SLIDE],[18,t.BUZZY_BUZZ],[20,t.SWIFT],[25,t.BITE],[30,t.COPYCAT],[33,t.BADDY_BAD],[33,t.GLITZY_GLOW],[35,t.BATON_PASS],[40,t.VEEVEE_VOLLEY],[43,t.FREEZY_FROST],[43,t.SAPPY_SEED],[45,t.CHARM],[50,t.DOUBLE_EDGE],[53,t.SPARKLY_SWIRL],[55,t.LAST_RESORT]]},[e.DEOXYS]:{1:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.TAUNT],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SUPERPOWER],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.COSMIC_POWER],[61,t.ZAP_CANNON],[67,t.PSYCHO_BOOST],[73,t.HYPER_BEAM]],2:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.TELEPORT],[19,t.KNOCK_OFF],[25,t.SPIKES],[31,t.PSYCHIC],[37,t.SNATCH],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AMNESIA],[55,t.IRON_DEFENSE],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.COUNTER],[73,t.MIRROR_COAT]],3:[[1,t.CONFUSION],[1,t.WRAP],[1,t.LEER],[7,t.NIGHT_SHADE],[13,t.DOUBLE_TEAM],[19,t.KNOCK_OFF],[25,t.PURSUIT],[31,t.PSYCHIC],[37,t.SWIFT],[43,t.PSYCHO_SHIFT],[49,t.ZEN_HEADBUTT],[55,t.AGILITY],[61,t.RECOVER],[67,t.PSYCHO_BOOST],[73,t.EXTREME_SPEED]]},[e.WORMADAM]:{1:[[ne,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.ROCK_BLAST],[29,t.HARDEN],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.FISSURE],[50,t.BUG_BUZZ]],2:[[ne,t.QUIVER_DANCE],[1,t.STRUGGLE_BUG],[1,t.METAL_BURST],[1,t.TACKLE],[1,t.PROTECT],[1,t.SUCKER_PUNCH],[1,t.BUG_BITE],[1,t.PROTECT],[10,t.TACKLE],[20,t.STRING_SHOT],[23,t.CONFUSION],[26,t.METAL_BURST],[29,t.METAL_SOUND],[32,t.PSYBEAM],[35,t.INFESTATION],[38,t.FLAIL],[41,t.ATTRACT],[44,t.PSYCHIC],[47,t.IRON_HEAD],[50,t.BUG_BUZZ]]},[e.ROTOM]:{1:[[1,t.OVERHEAT],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],2:[[1,t.HYDRO_PUMP],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],3:[[1,t.BLIZZARD],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],4:[[1,t.AIR_SLASH],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]],5:[[1,t.LEAF_STORM],[1,t.DOUBLE_TEAM],[1,t.ASTONISH],[5,t.THUNDER_SHOCK],[10,t.CONFUSE_RAY],[15,t.CHARGE],[20,t.ELECTRO_BALL],[25,t.THUNDER_WAVE],[30,t.SHOCK_WAVE],[35,t.HEX],[40,t.SUBSTITUTE],[45,t.TRICK],[50,t.DISCHARGE],[55,t.UPROAR]]},[e.SHAYMIN]:{1:[[1,t.LEAFAGE],[1,t.GROWTH],[10,t.MAGICAL_LEAF],[19,t.LEECH_SEED],[28,t.QUICK_ATTACK],[37,t.SWEET_SCENT],[46,t.NATURAL_GIFT],[55,t.WORRY_SEED],[64,t.AIR_SLASH],[73,t.ENERGY_BALL],[82,t.SWEET_KISS],[91,t.LEAF_STORM],[100,t.SEED_FLARE]]},[e.KYUREM]:{1:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_BOLT],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.FREEZE_SHOCK],[88,t.SHEER_COLD]],2:[[1,t.DRAGON_BREATH],[1,t.ANCIENT_POWER],[1,t.NOBLE_ROAR],[1,t.FREEZE_DRY],[8,t.SLASH],[16,t.ENDEAVOR],[24,t.DRAGON_PULSE],[32,t.ICE_BEAM],[40,t.HYPER_VOICE],[48,t.FUSION_FLARE],[56,t.BLIZZARD],[64,t.IMPRISON],[72,t.OUTRAGE],[80,t.ICE_BURN],[88,t.SHEER_COLD]]},[e.MEOWSTIC]:{1:[[1,t.SCRATCH],[1,t.LEER],[1,t.FAKE_OUT],[1,t.MAGICAL_LEAF],[1,t.DISARMING_VOICE],[9,t.CONFUSION],[12,t.STORED_POWER],[15,t.CHARGE_BEAM],[18,t.COVET],[21,t.PSYBEAM],[24,t.SUCKER_PUNCH],[29,t.ROLE_PLAY],[34,t.LIGHT_SCREEN],[34,t.REFLECT],[39,t.PSYSHOCK],[44,t.EXTRASENSORY],[49,t.SHADOW_BALL],[54,t.PSYCHIC],[59,t.FUTURE_SIGHT]]},[e.HOOPA]:{1:[[1,t.CONFUSION],[1,t.DESTINY_BOND],[1,t.ALLY_SWITCH],[6,t.ASTONISH],[10,t.TRICK],[15,t.LIGHT_SCREEN],[19,t.PSYBEAM],[25,t.SKILL_SWAP],[29,t.GUARD_SPLIT],[29,t.POWER_SPLIT],[46,t.KNOCK_OFF],[50,t.TRICK_ROOM],[50,t.WONDER_ROOM],[55,t.DARK_PULSE],[75,t.PSYCHIC],[85,t.HYPERSPACE_FURY]]},[e.GRENINJA]:{1:[[ne,t.WATER_SHURIKEN],[1,t.POUND],[1,t.GROWL],[1,t.WATER_GUN],[1,t.QUICK_ATTACK],[1,t.ROUND],[1,t.FLING],[1,t.SMACK_DOWN],[1,t.BOUNCE],[1,t.HAZE],[1,t.MAT_BLOCK],[1,t.ROLE_PLAY],[1,t.NIGHT_SLASH],[10,t.LICK],[14,t.WATER_PULSE],[19,t.SMOKESCREEN],[23,t.SHADOW_SNEAK],[28,t.SPIKES],[33,t.AERIAL_ACE],[42,t.SUBSTITUTE],[49,t.EXTRASENSORY],[56,t.DOUBLE_TEAM],[68,t.HYDRO_PUMP]]},[e.LYCANROC]:{1:[[ne,t.COUNTER],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]],2:[[ne,t.CRUSH_CLAW],[1,t.SAND_ATTACK],[1,t.TACKLE],[1,t.LEER],[1,t.COUNTER],[1,t.QUICK_ATTACK],[1,t.DOUBLE_TEAM],[1,t.REVERSAL],[1,t.ENDURE],[1,t.TAUNT],[1,t.SUCKER_PUNCH],[1,t.QUICK_GUARD],[1,t.ACCELEROCK],[12,t.ROCK_THROW],[16,t.HOWL],[20,t.BITE],[24,t.ROCK_TOMB],[30,t.ROAR],[36,t.ROCK_SLIDE],[42,t.CRUNCH],[48,t.SCARY_FACE],[54,t.STEALTH_ROCK],[60,t.STONE_EDGE]]},[e.NECROZMA]:{1:[[ne,t.SUNSTEEL_STRIKE],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],2:[[ne,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]],3:[[ne,t.SUNSTEEL_STRIKE],[ne,t.MOONGEIST_BEAM],[1,t.CONFUSION],[1,t.METAL_CLAW],[1,t.MORNING_SUN],[1,t.MOONLIGHT],[1,t.GRAVITY],[1,t.CHARGE_BEAM],[8,t.STEALTH_ROCK],[16,t.SLASH],[24,t.NIGHT_SLASH],[32,t.PSYCHO_CUT],[40,t.STORED_POWER],[48,t.ROCK_BLAST],[56,t.IRON_DEFENSE],[64,t.POWER_GEM],[72,t.PHOTON_GEYSER],[80,t.AUTOTOMIZE],[88,t.PRISMATIC_LASER]]},[e.TOXTRICITY]:{1:[[ne,t.SPARK],[1,t.LEER],[1,t.GROWL],[1,t.ACID],[1,t.THUNDER_SHOCK],[1,t.FLAIL],[1,t.ACID_SPRAY],[1,t.BELCH],[1,t.NOBLE_ROAR],[1,t.NUZZLE],[1,t.TEARFUL_LOOK],[4,t.CHARGE],[8,t.SHOCK_WAVE],[12,t.SCARY_FACE],[16,t.TAUNT],[24,t.SCREECH],[28,t.SWAGGER],[32,t.TOXIC],[36,t.DISCHARGE],[40,t.POISON_JAB],[44,t.OVERDRIVE],[48,t.BOOMBURST],[52,t.MAGNETIC_FLUX]]},[e.INDEEDEE]:{1:[[1,t.STORED_POWER],[1,t.PLAY_NICE],[5,t.BATON_PASS],[10,t.DISARMING_VOICE],[15,t.PSYBEAM],[20,t.HELPING_HAND],[25,t.FOLLOW_ME],[30,t.HEALING_WISH],[35,t.PSYCHIC],[40,t.CALM_MIND],[45,t.GUARD_SPLIT],[50,t.PSYCHIC_TERRAIN]]},[e.ZACIAN]:{1:[[ne,t.BEHEMOTH_BLADE],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.QUICK_GUARD],[1,t.SACRED_SWORD],[11,t.SLASH],[22,t.SWORDS_DANCE],[33,t.IRON_HEAD],[44,t.NOBLE_ROAR],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ZAMAZENTA]:{1:[[ne,t.BEHEMOTH_BASH],[1,t.BITE],[1,t.QUICK_ATTACK],[1,t.METAL_CLAW],[1,t.HOWL],[1,t.WIDE_GUARD],[11,t.SLASH],[22,t.IRON_DEFENSE],[33,t.IRON_HEAD],[44,t.METAL_BURST],[55,t.CRUNCH],[66,t.MOONBLAST],[77,t.CLOSE_COMBAT],[88,t.GIGA_IMPACT]]},[e.ETERNATUS]:{1:[[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.POISON_TAIL],[1,t.DRAGON_TAIL],[8,t.TOXIC],[16,t.VENOSHOCK],[24,t.DRAGON_DANCE],[32,t.CROSS_POISON],[40,t.DRAGON_PULSE],[48,t.FLAMETHROWER],[56,t.DYNAMAX_CANNON],[64,t.COSMIC_POWER],[72,t.RECOVER],[80,t.HYPER_BEAM],[88,t.ETERNABEAM]]},[e.URSHIFU]:{1:[[ne,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],2:[[ne,t.WICKED_BLOW],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.SUCKER_PUNCH],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]],3:[[ne,t.SURGING_STRIKES],[1,t.LEER],[1,t.FOCUS_ENERGY],[1,t.ENDURE],[1,t.ROCK_SMASH],[1,t.AQUA_JET],[12,t.AERIAL_ACE],[16,t.SCARY_FACE],[20,t.HEADBUTT],[24,t.BRICK_BREAK],[28,t.DETECT],[32,t.BULK_UP],[36,t.IRON_HEAD],[40,t.DYNAMIC_PUNCH],[44,t.COUNTER],[48,t.CLOSE_COMBAT],[52,t.FOCUS_PUNCH]]},[e.CALYREX]:{1:[[1,t.POUND],[1,t.SWORDS_DANCE],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.MIST],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.TORMENT],[1,t.TAUNT],[1,t.IRON_DEFENSE],[1,t.AVALANCHE],[1,t.ICICLE_CRASH],[1,t.GLACIAL_LANCE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.AROMATHERAPY],[40,t.GRASSY_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]],2:[[1,t.POUND],[1,t.STOMP],[1,t.DOUBLE_KICK],[1,t.TACKLE],[1,t.TAKE_DOWN],[1,t.THRASH],[1,t.DOUBLE_EDGE],[1,t.TAIL_WHIP],[1,t.DISABLE],[1,t.MEGA_DRAIN],[1,t.GROWTH],[1,t.CONFUSION],[1,t.AGILITY],[1,t.CONFUSE_RAY],[1,t.HAZE],[1,t.SHADOW_BALL],[1,t.NASTY_PLOT],[1,t.HEX],[1,t.ASTRAL_BARRAGE],[8,t.LIFE_DEW],[16,t.GIGA_DRAIN],[24,t.PSYSHOCK],[32,t.HELPING_HAND],[40,t.GRASSY_TERRAIN],[40,t.PSYCHIC_TERRAIN],[48,t.ENERGY_BALL],[56,t.PSYCHIC],[64,t.LEECH_SEED],[72,t.HEAL_PULSE],[80,t.SOLAR_BEAM],[88,t.FUTURE_SIGHT]]},[e.OINKOLOGNE]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[3,t.DISARMING_VOICE],[6,t.ECHOED_VOICE],[9,t.MUD_SHOT],[12,t.COVET],[15,t.DIG],[17,t.HEADBUTT],[23,t.YAWN],[28,t.TAKE_DOWN],[30,t.WORK_UP],[34,t.UPROAR],[39,t.DOUBLE_EDGE],[45,t.EARTH_POWER],[51,t.BELCH]]},[e.REVAVROOM]:{1:[[ne,t.WICKED_TORQUE],[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],2:[[ne,t.BLAZING_TORQUE],[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],3:[[ne,t.NOXIOUS_TORQUE],[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],4:[[ne,t.MAGICAL_TORQUE],[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]],5:[[ne,t.COMBAT_TORQUE],[ne,t.SHIFT_GEAR],[1,t.LICK],[1,t.POISON_GAS],[1,t.MAGNET_RISE],[4,t.SMOG],[7,t.TAUNT],[10,t.ASSURANCE],[13,t.SLUDGE],[17,t.GYRO_BALL],[21,t.HEADBUTT],[25,t.SCREECH],[28,t.IRON_HEAD],[32,t.SWAGGER],[36,t.POISON_JAB],[46,t.UPROAR],[52,t.SPIN_OUT],[58,t.GUNK_SHOT]]},[e.PALDEA_TAUROS]:{1:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.FLAME_CHARGE],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.FLARE_BLITZ],[60,t.CLOSE_COMBAT]],2:[[1,t.TACKLE],[1,t.TAIL_WHIP],[5,t.WORK_UP],[10,t.DOUBLE_KICK],[15,t.AQUA_JET],[20,t.HEADBUTT],[25,t.SCARY_FACE],[30,t.ZEN_HEADBUTT],[35,t.RAGING_BULL],[40,t.REST],[45,t.SWAGGER],[50,t.THRASH],[55,t.WAVE_CRASH],[60,t.CLOSE_COMBAT]]}},Tn=24,jI=[[0,-1],[.825,-.5],[.825,.5],[-.825,-.5],[-.825,.5],[0,1]],H9=-3,qb=1,e6=[0,qb,-1,qb,-1,H9],f9=[0,5,0,5,0,0],qI=[0,1,2,5,4,3],Ml=new Array(12).fill(null).map(()=>0),Lm=class Lm extends Phaser.GameObjects.Container{constructor(A,s,R){super(a,A,s),this.showDiff=!!R,this.setup()}setup(){this.setName("stats");const A=new Array(6).fill(null).flatMap((I,r)=>[Tn*jI[qI[r]][0],Tn*jI[qI[r]][1]]),s=a.add.polygon(48,44,A,14213360,.625);s.setOrigin(0,0);const R=a.add.polygon(s.x,s.y,A).setStrokeStyle(1,4735056);R.setOrigin(0,0);const n=[[0,-1,0,1],[-.825,-.5,.825,.5],[.825,-.5,-.825,.5]].map(I=>{const r=new Phaser.GameObjects.Line(a,s.x,s.y,Tn*I[0],Tn*I[1],Tn*I[2],Tn*I[3],16777215).setLineWidth(.5);return r.setOrigin(0,0),r});this.ivChart=a.add.polygon(s.x,s.y,Ml,10016928,.75),this.ivChart.setOrigin(0,0),this.add(s),n.map(I=>this.add(I)),this.add(this.ivChart),this.add(R),this.ivStatValueTexts=[];for(const I of Hn){const r=Se(s.x+Tn*jI[I][0]*1.325+(this.showDiff?0:e6[I]),s.y+Tn*jI[I][1]*1.325-4+(this.showDiff?0:f9[I]),u.t(mE(I)),k.TOOLTIP_CONTENT);r.setOrigin(.5),this.ivStatValueTexts[I]=pE(r.x-(this.showDiff?0:e6[I]),r.y+8,"0",k.TOOLTIP_CONTENT),this.ivStatValueTexts[I].setOrigin(.5),this.add(r),this.add(this.ivStatValueTexts[I])}}updateIvs(A,s){if(A){const R=new Array(6).fill(null).flatMap((l,C)=>[A[qI[C]]/31*Tn*jI[qI[C]][0],A[qI[C]]/31*Tn*jI[qI[C]][1]]),n=this.statsIvsCache||Ml,I=eA(k.SUMMARY_GOLD,!1,a.uiTheme);this.statsIvsCache=R.slice(0),this.ivStatValueTexts.map((l,C)=>{let U="";A[C]===31?U+=`[color=${I}][shadow]${A[C].toString()}[/shadow][/color]`:U=A[C].toString(),this.showDiff&&s&&(s[C]<A[C]?U+=` ([color=${eA(k.SUMMARY_BLUE,!1,a.uiTheme)}][shadow=${eA(k.SUMMARY_BLUE,!0,a.uiTheme)}]+${A[C]-s[C]}[/shadow][/color])`:U+=" (-)"),l.setText(`[shadow]${U}[/shadow]`)});const r=A.every(l=>l===31)?Number.parseInt(I.substr(1),16):10016928,L=this.ivChart.fillColor,N=L!==r?[Phaser.Display.Color.IntegerToColor(L),Phaser.Display.Color.IntegerToColor(r)]:null;a.tweens.addCounter({from:0,to:1,duration:1e3,ease:"Cubic.easeOut",onUpdate:o(l=>{const C=l.getValue(),U=R.map((D,M)=>D*C+n[M]*(1-C));N&&this.ivChart.setFillStyle(Phaser.Display.Color.ValueToColor(Phaser.Display.Color.Interpolate.ColorWithColor(N[0],N[1],1,C)).color,.75),this.ivChart.setTo(U)},"onUpdate")})}else this.statsIvsCache=Ml,this.ivChart.setTo(Ml)}};o(Lm,"StatsContainer");let LS=Lm;var VE=(E=>(E[E.GACHA_MOVE=0]="GACHA_MOVE",E[E.GACHA_LEGENDARY=1]="GACHA_LEGENDARY",E[E.GACHA_SHINY=2]="GACHA_SHINY",E[E.SAME_SPECIES_EGG=3]="SAME_SPECIES_EGG",E[E.EVENT=4]="EVENT",E))(VE||{});const t6=64,sc=256,B9=52,g9=8,m9=1,A6=1,p9=412,K9=59,F9=9,Y9=10,W9=25,y9=50,w9=100,v9=50,V9=128,x9=64,b9=12,k9=8,E6=8,Z9=192,X9=6,Q9=3,$9=3,ck=4,hk=1,qL={[e.BULBASAUR]:F.COMMON,[e.CHARMANDER]:F.COMMON,[e.SQUIRTLE]:F.COMMON,[e.CATERPIE]:F.COMMON,[e.WEEDLE]:F.COMMON,[e.PIDGEY]:F.COMMON,[e.RATTATA]:F.COMMON,[e.SPEAROW]:F.COMMON,[e.EKANS]:F.COMMON,[e.SANDSHREW]:F.COMMON,[e.NIDORAN_F]:F.COMMON,[e.NIDORAN_M]:F.COMMON,[e.VULPIX]:F.COMMON,[e.ZUBAT]:F.COMMON,[e.ODDISH]:F.COMMON,[e.PARAS]:F.COMMON,[e.VENONAT]:F.COMMON,[e.DIGLETT]:F.COMMON,[e.MEOWTH]:F.COMMON,[e.PSYDUCK]:F.COMMON,[e.MANKEY]:F.RARE,[e.GROWLITHE]:F.RARE,[e.POLIWAG]:F.COMMON,[e.ABRA]:F.RARE,[e.MACHOP]:F.COMMON,[e.BELLSPROUT]:F.COMMON,[e.TENTACOOL]:F.COMMON,[e.GEODUDE]:F.COMMON,[e.PONYTA]:F.COMMON,[e.SLOWPOKE]:F.COMMON,[e.MAGNEMITE]:F.RARE,[e.FARFETCHD]:F.RARE,[e.DODUO]:F.COMMON,[e.SEEL]:F.COMMON,[e.GRIMER]:F.COMMON,[e.SHELLDER]:F.RARE,[e.GASTLY]:F.RARE,[e.ONIX]:F.COMMON,[e.DROWZEE]:F.COMMON,[e.KRABBY]:F.COMMON,[e.VOLTORB]:F.COMMON,[e.EXEGGCUTE]:F.COMMON,[e.CUBONE]:F.COMMON,[e.LICKITUNG]:F.RARE,[e.KOFFING]:F.COMMON,[e.RHYHORN]:F.RARE,[e.TANGELA]:F.COMMON,[e.KANGASKHAN]:F.RARE,[e.HORSEA]:F.COMMON,[e.GOLDEEN]:F.COMMON,[e.STARYU]:F.COMMON,[e.SCYTHER]:F.RARE,[e.PINSIR]:F.RARE,[e.TAUROS]:F.RARE,[e.MAGIKARP]:F.COMMON,[e.LAPRAS]:F.RARE,[e.DITTO]:F.COMMON,[e.EEVEE]:F.COMMON,[e.PORYGON]:F.RARE,[e.OMANYTE]:F.RARE,[e.KABUTO]:F.RARE,[e.AERODACTYL]:F.RARE,[e.ARTICUNO]:F.EPIC,[e.ZAPDOS]:F.EPIC,[e.MOLTRES]:F.EPIC,[e.DRATINI]:F.RARE,[e.MEWTWO]:F.LEGENDARY,[e.MEW]:F.EPIC,[e.CHIKORITA]:F.COMMON,[e.CYNDAQUIL]:F.COMMON,[e.TOTODILE]:F.COMMON,[e.SENTRET]:F.COMMON,[e.HOOTHOOT]:F.COMMON,[e.LEDYBA]:F.COMMON,[e.SPINARAK]:F.COMMON,[e.CHINCHOU]:F.COMMON,[e.PICHU]:F.RARE,[e.CLEFFA]:F.COMMON,[e.IGGLYBUFF]:F.COMMON,[e.TOGEPI]:F.COMMON,[e.NATU]:F.COMMON,[e.MAREEP]:F.COMMON,[e.HOPPIP]:F.COMMON,[e.AIPOM]:F.COMMON,[e.SUNKERN]:F.COMMON,[e.YANMA]:F.COMMON,[e.WOOPER]:F.COMMON,[e.MURKROW]:F.COMMON,[e.MISDREAVUS]:F.COMMON,[e.UNOWN]:F.COMMON,[e.GIRAFARIG]:F.COMMON,[e.PINECO]:F.COMMON,[e.DUNSPARCE]:F.COMMON,[e.GLIGAR]:F.COMMON,[e.SNUBBULL]:F.COMMON,[e.QWILFISH]:F.COMMON,[e.SHUCKLE]:F.COMMON,[e.HERACROSS]:F.RARE,[e.SNEASEL]:F.RARE,[e.TEDDIURSA]:F.RARE,[e.SLUGMA]:F.COMMON,[e.SWINUB]:F.COMMON,[e.CORSOLA]:F.COMMON,[e.REMORAID]:F.COMMON,[e.DELIBIRD]:F.COMMON,[e.SKARMORY]:F.RARE,[e.HOUNDOUR]:F.COMMON,[e.PHANPY]:F.COMMON,[e.STANTLER]:F.COMMON,[e.SMEARGLE]:F.COMMON,[e.TYROGUE]:F.COMMON,[e.SMOOCHUM]:F.COMMON,[e.ELEKID]:F.COMMON,[e.MAGBY]:F.COMMON,[e.MILTANK]:F.RARE,[e.RAIKOU]:F.EPIC,[e.ENTEI]:F.EPIC,[e.SUICUNE]:F.EPIC,[e.LARVITAR]:F.RARE,[e.LUGIA]:F.LEGENDARY,[e.HO_OH]:F.LEGENDARY,[e.CELEBI]:F.EPIC,[e.TREECKO]:F.COMMON,[e.TORCHIC]:F.COMMON,[e.MUDKIP]:F.COMMON,[e.POOCHYENA]:F.COMMON,[e.ZIGZAGOON]:F.COMMON,[e.WURMPLE]:F.COMMON,[e.LOTAD]:F.COMMON,[e.SEEDOT]:F.COMMON,[e.TAILLOW]:F.COMMON,[e.WINGULL]:F.COMMON,[e.RALTS]:F.RARE,[e.SURSKIT]:F.COMMON,[e.SHROOMISH]:F.COMMON,[e.SLAKOTH]:F.RARE,[e.NINCADA]:F.RARE,[e.WHISMUR]:F.COMMON,[e.MAKUHITA]:F.COMMON,[e.AZURILL]:F.COMMON,[e.NOSEPASS]:F.COMMON,[e.SKITTY]:F.COMMON,[e.SABLEYE]:F.COMMON,[e.MAWILE]:F.COMMON,[e.ARON]:F.COMMON,[e.MEDITITE]:F.COMMON,[e.ELECTRIKE]:F.COMMON,[e.PLUSLE]:F.COMMON,[e.MINUN]:F.COMMON,[e.VOLBEAT]:F.COMMON,[e.ILLUMISE]:F.COMMON,[e.GULPIN]:F.COMMON,[e.CARVANHA]:F.COMMON,[e.WAILMER]:F.COMMON,[e.NUMEL]:F.COMMON,[e.TORKOAL]:F.COMMON,[e.SPOINK]:F.COMMON,[e.SPINDA]:F.COMMON,[e.TRAPINCH]:F.COMMON,[e.CACNEA]:F.COMMON,[e.SWABLU]:F.COMMON,[e.ZANGOOSE]:F.RARE,[e.SEVIPER]:F.RARE,[e.LUNATONE]:F.COMMON,[e.SOLROCK]:F.COMMON,[e.BARBOACH]:F.COMMON,[e.CORPHISH]:F.COMMON,[e.BALTOY]:F.COMMON,[e.LILEEP]:F.RARE,[e.ANORITH]:F.RARE,[e.FEEBAS]:F.RARE,[e.CASTFORM]:F.COMMON,[e.KECLEON]:F.COMMON,[e.SHUPPET]:F.COMMON,[e.DUSKULL]:F.COMMON,[e.TROPIUS]:F.COMMON,[e.ABSOL]:F.RARE,[e.WYNAUT]:F.COMMON,[e.SNORUNT]:F.COMMON,[e.SPHEAL]:F.COMMON,[e.CLAMPERL]:F.COMMON,[e.RELICANTH]:F.RARE,[e.LUVDISC]:F.COMMON,[e.BAGON]:F.RARE,[e.BELDUM]:F.RARE,[e.REGIROCK]:F.EPIC,[e.REGICE]:F.EPIC,[e.REGISTEEL]:F.EPIC,[e.LATIAS]:F.EPIC,[e.LATIOS]:F.EPIC,[e.KYOGRE]:F.LEGENDARY,[e.GROUDON]:F.LEGENDARY,[e.RAYQUAZA]:F.LEGENDARY,[e.JIRACHI]:F.EPIC,[e.DEOXYS]:F.EPIC,[e.TURTWIG]:F.COMMON,[e.CHIMCHAR]:F.COMMON,[e.PIPLUP]:F.COMMON,[e.STARLY]:F.COMMON,[e.BIDOOF]:F.COMMON,[e.KRICKETOT]:F.COMMON,[e.SHINX]:F.COMMON,[e.BUDEW]:F.COMMON,[e.CRANIDOS]:F.RARE,[e.SHIELDON]:F.RARE,[e.BURMY]:F.COMMON,[e.COMBEE]:F.COMMON,[e.PACHIRISU]:F.COMMON,[e.BUIZEL]:F.COMMON,[e.CHERUBI]:F.COMMON,[e.SHELLOS]:F.COMMON,[e.DRIFLOON]:F.COMMON,[e.BUNEARY]:F.COMMON,[e.GLAMEOW]:F.COMMON,[e.CHINGLING]:F.COMMON,[e.STUNKY]:F.COMMON,[e.BRONZOR]:F.COMMON,[e.BONSLY]:F.COMMON,[e.MIME_JR]:F.COMMON,[e.HAPPINY]:F.RARE,[e.CHATOT]:F.COMMON,[e.SPIRITOMB]:F.RARE,[e.GIBLE]:F.RARE,[e.MUNCHLAX]:F.RARE,[e.RIOLU]:F.RARE,[e.HIPPOPOTAS]:F.COMMON,[e.SKORUPI]:F.COMMON,[e.CROAGUNK]:F.COMMON,[e.CARNIVINE]:F.COMMON,[e.FINNEON]:F.COMMON,[e.MANTYKE]:F.COMMON,[e.SNOVER]:F.COMMON,[e.ROTOM]:F.RARE,[e.UXIE]:F.EPIC,[e.MESPRIT]:F.EPIC,[e.AZELF]:F.EPIC,[e.DIALGA]:F.LEGENDARY,[e.PALKIA]:F.LEGENDARY,[e.HEATRAN]:F.EPIC,[e.REGIGIGAS]:F.LEGENDARY,[e.GIRATINA]:F.LEGENDARY,[e.CRESSELIA]:F.EPIC,[e.PHIONE]:F.EPIC,[e.MANAPHY]:F.EPIC,[e.DARKRAI]:F.EPIC,[e.SHAYMIN]:F.EPIC,[e.ARCEUS]:F.LEGENDARY,[e.VICTINI]:F.EPIC,[e.SNIVY]:F.COMMON,[e.TEPIG]:F.COMMON,[e.OSHAWOTT]:F.COMMON,[e.PATRAT]:F.COMMON,[e.LILLIPUP]:F.COMMON,[e.PURRLOIN]:F.COMMON,[e.PANSAGE]:F.COMMON,[e.PANSEAR]:F.COMMON,[e.PANPOUR]:F.COMMON,[e.MUNNA]:F.COMMON,[e.PIDOVE]:F.COMMON,[e.BLITZLE]:F.COMMON,[e.ROGGENROLA]:F.COMMON,[e.WOOBAT]:F.COMMON,[e.DRILBUR]:F.RARE,[e.AUDINO]:F.RARE,[e.TIMBURR]:F.RARE,[e.TYMPOLE]:F.COMMON,[e.THROH]:F.RARE,[e.SAWK]:F.RARE,[e.SEWADDLE]:F.COMMON,[e.VENIPEDE]:F.COMMON,[e.COTTONEE]:F.COMMON,[e.PETILIL]:F.COMMON,[e.BASCULIN]:F.RARE,[e.SANDILE]:F.RARE,[e.DARUMAKA]:F.RARE,[e.MARACTUS]:F.COMMON,[e.DWEBBLE]:F.COMMON,[e.SCRAGGY]:F.COMMON,[e.SIGILYPH]:F.RARE,[e.YAMASK]:F.COMMON,[e.TIRTOUGA]:F.RARE,[e.ARCHEN]:F.RARE,[e.TRUBBISH]:F.COMMON,[e.ZORUA]:F.COMMON,[e.MINCCINO]:F.COMMON,[e.GOTHITA]:F.COMMON,[e.SOLOSIS]:F.COMMON,[e.DUCKLETT]:F.COMMON,[e.VANILLITE]:F.COMMON,[e.DEERLING]:F.COMMON,[e.EMOLGA]:F.COMMON,[e.KARRABLAST]:F.COMMON,[e.FOONGUS]:F.COMMON,[e.FRILLISH]:F.COMMON,[e.ALOMOMOLA]:F.RARE,[e.JOLTIK]:F.COMMON,[e.FERROSEED]:F.COMMON,[e.KLINK]:F.COMMON,[e.TYNAMO]:F.COMMON,[e.ELGYEM]:F.COMMON,[e.LITWICK]:F.COMMON,[e.AXEW]:F.RARE,[e.CUBCHOO]:F.COMMON,[e.CRYOGONAL]:F.RARE,[e.SHELMET]:F.COMMON,[e.STUNFISK]:F.COMMON,[e.MIENFOO]:F.COMMON,[e.DRUDDIGON]:F.RARE,[e.GOLETT]:F.COMMON,[e.PAWNIARD]:F.RARE,[e.BOUFFALANT]:F.RARE,[e.RUFFLET]:F.COMMON,[e.VULLABY]:F.COMMON,[e.HEATMOR]:F.RARE,[e.DURANT]:F.RARE,[e.DEINO]:F.RARE,[e.LARVESTA]:F.RARE,[e.COBALION]:F.EPIC,[e.TERRAKION]:F.EPIC,[e.VIRIZION]:F.EPIC,[e.TORNADUS]:F.EPIC,[e.THUNDURUS]:F.EPIC,[e.RESHIRAM]:F.LEGENDARY,[e.ZEKROM]:F.LEGENDARY,[e.LANDORUS]:F.EPIC,[e.KYUREM]:F.LEGENDARY,[e.KELDEO]:F.EPIC,[e.MELOETTA]:F.EPIC,[e.GENESECT]:F.EPIC,[e.CHESPIN]:F.COMMON,[e.FENNEKIN]:F.COMMON,[e.FROAKIE]:F.COMMON,[e.BUNNELBY]:F.COMMON,[e.FLETCHLING]:F.COMMON,[e.SCATTERBUG]:F.COMMON,[e.LITLEO]:F.COMMON,[e.FLABEBE]:F.COMMON,[e.SKIDDO]:F.COMMON,[e.PANCHAM]:F.COMMON,[e.FURFROU]:F.COMMON,[e.ESPURR]:F.COMMON,[e.HONEDGE]:F.RARE,[e.SPRITZEE]:F.COMMON,[e.SWIRLIX]:F.COMMON,[e.INKAY]:F.COMMON,[e.BINACLE]:F.COMMON,[e.SKRELP]:F.COMMON,[e.CLAUNCHER]:F.COMMON,[e.HELIOPTILE]:F.COMMON,[e.TYRUNT]:F.RARE,[e.AMAURA]:F.RARE,[e.HAWLUCHA]:F.RARE,[e.DEDENNE]:F.COMMON,[e.CARBINK]:F.COMMON,[e.GOOMY]:F.RARE,[e.KLEFKI]:F.COMMON,[e.PHANTUMP]:F.COMMON,[e.PUMPKABOO]:F.COMMON,[e.BERGMITE]:F.COMMON,[e.NOIBAT]:F.RARE,[e.XERNEAS]:F.LEGENDARY,[e.YVELTAL]:F.LEGENDARY,[e.ZYGARDE]:F.LEGENDARY,[e.DIANCIE]:F.EPIC,[e.HOOPA]:F.EPIC,[e.VOLCANION]:F.EPIC,[e.ETERNAL_FLOETTE]:F.EPIC,[e.ROWLET]:F.COMMON,[e.LITTEN]:F.COMMON,[e.POPPLIO]:F.COMMON,[e.PIKIPEK]:F.COMMON,[e.YUNGOOS]:F.COMMON,[e.GRUBBIN]:F.COMMON,[e.CRABRAWLER]:F.COMMON,[e.ORICORIO]:F.COMMON,[e.CUTIEFLY]:F.COMMON,[e.ROCKRUFF]:F.COMMON,[e.WISHIWASHI]:F.COMMON,[e.MAREANIE]:F.COMMON,[e.MUDBRAY]:F.COMMON,[e.DEWPIDER]:F.COMMON,[e.FOMANTIS]:F.COMMON,[e.MORELULL]:F.COMMON,[e.SALANDIT]:F.COMMON,[e.STUFFUL]:F.COMMON,[e.BOUNSWEET]:F.COMMON,[e.COMFEY]:F.RARE,[e.ORANGURU]:F.RARE,[e.PASSIMIAN]:F.RARE,[e.WIMPOD]:F.COMMON,[e.SANDYGAST]:F.COMMON,[e.PYUKUMUKU]:F.COMMON,[e.TYPE_NULL]:F.EPIC,[e.MINIOR]:F.RARE,[e.KOMALA]:F.COMMON,[e.TURTONATOR]:F.RARE,[e.TOGEDEMARU]:F.COMMON,[e.MIMIKYU]:F.RARE,[e.BRUXISH]:F.RARE,[e.DRAMPA]:F.RARE,[e.DHELMISE]:F.RARE,[e.JANGMO_O]:F.RARE,[e.TAPU_KOKO]:F.EPIC,[e.TAPU_LELE]:F.EPIC,[e.TAPU_BULU]:F.EPIC,[e.TAPU_FINI]:F.EPIC,[e.COSMOG]:F.LEGENDARY,[e.NIHILEGO]:F.EPIC,[e.BUZZWOLE]:F.EPIC,[e.PHEROMOSA]:F.EPIC,[e.XURKITREE]:F.EPIC,[e.CELESTEELA]:F.EPIC,[e.KARTANA]:F.EPIC,[e.GUZZLORD]:F.EPIC,[e.NECROZMA]:F.LEGENDARY,[e.MAGEARNA]:F.EPIC,[e.MARSHADOW]:F.EPIC,[e.POIPOLE]:F.EPIC,[e.STAKATAKA]:F.EPIC,[e.BLACEPHALON]:F.EPIC,[e.ZERAORA]:F.EPIC,[e.MELTAN]:F.EPIC,[e.ALOLA_RATTATA]:F.COMMON,[e.ALOLA_SANDSHREW]:F.RARE,[e.ALOLA_VULPIX]:F.RARE,[e.ALOLA_DIGLETT]:F.RARE,[e.ALOLA_MEOWTH]:F.RARE,[e.ALOLA_GEODUDE]:F.RARE,[e.ALOLA_GRIMER]:F.RARE,[e.GROOKEY]:F.COMMON,[e.SCORBUNNY]:F.COMMON,[e.SOBBLE]:F.COMMON,[e.SKWOVET]:F.COMMON,[e.ROOKIDEE]:F.COMMON,[e.BLIPBUG]:F.COMMON,[e.NICKIT]:F.COMMON,[e.GOSSIFLEUR]:F.COMMON,[e.WOOLOO]:F.COMMON,[e.CHEWTLE]:F.COMMON,[e.YAMPER]:F.COMMON,[e.ROLYCOLY]:F.COMMON,[e.APPLIN]:F.COMMON,[e.SILICOBRA]:F.COMMON,[e.CRAMORANT]:F.COMMON,[e.ARROKUDA]:F.COMMON,[e.TOXEL]:F.COMMON,[e.SIZZLIPEDE]:F.COMMON,[e.CLOBBOPUS]:F.COMMON,[e.SINISTEA]:F.COMMON,[e.HATENNA]:F.COMMON,[e.IMPIDIMP]:F.COMMON,[e.MILCERY]:F.COMMON,[e.FALINKS]:F.RARE,[e.PINCURCHIN]:F.COMMON,[e.SNOM]:F.COMMON,[e.STONJOURNER]:F.COMMON,[e.EISCUE]:F.COMMON,[e.INDEEDEE]:F.RARE,[e.MORPEKO]:F.COMMON,[e.CUFANT]:F.COMMON,[e.DRACOZOLT]:F.RARE,[e.ARCTOZOLT]:F.RARE,[e.DRACOVISH]:F.RARE,[e.ARCTOVISH]:F.RARE,[e.DURALUDON]:F.RARE,[e.DREEPY]:F.RARE,[e.ZACIAN]:F.LEGENDARY,[e.ZAMAZENTA]:F.LEGENDARY,[e.ETERNATUS]:F.LEGENDARY,[e.KUBFU]:F.EPIC,[e.ZARUDE]:F.EPIC,[e.REGIELEKI]:F.EPIC,[e.REGIDRAGO]:F.EPIC,[e.GLASTRIER]:F.EPIC,[e.SPECTRIER]:F.EPIC,[e.CALYREX]:F.LEGENDARY,[e.ENAMORUS]:F.EPIC,[e.GALAR_MEOWTH]:F.RARE,[e.GALAR_PONYTA]:F.RARE,[e.GALAR_SLOWPOKE]:F.RARE,[e.GALAR_FARFETCHD]:F.RARE,[e.GALAR_ARTICUNO]:F.EPIC,[e.GALAR_ZAPDOS]:F.EPIC,[e.GALAR_MOLTRES]:F.EPIC,[e.GALAR_CORSOLA]:F.RARE,[e.GALAR_ZIGZAGOON]:F.RARE,[e.GALAR_DARUMAKA]:F.RARE,[e.GALAR_YAMASK]:F.RARE,[e.GALAR_STUNFISK]:F.RARE,[e.HISUI_GROWLITHE]:F.RARE,[e.HISUI_VOLTORB]:F.RARE,[e.HISUI_QWILFISH]:F.RARE,[e.HISUI_SNEASEL]:F.RARE,[e.HISUI_ZORUA]:F.RARE,[e.SPRIGATITO]:F.COMMON,[e.FUECOCO]:F.COMMON,[e.QUAXLY]:F.COMMON,[e.LECHONK]:F.COMMON,[e.TAROUNTULA]:F.COMMON,[e.NYMBLE]:F.COMMON,[e.PAWMI]:F.COMMON,[e.TANDEMAUS]:F.RARE,[e.FIDOUGH]:F.COMMON,[e.SMOLIV]:F.COMMON,[e.SQUAWKABILLY]:F.COMMON,[e.NACLI]:F.RARE,[e.CHARCADET]:F.RARE,[e.TADBULB]:F.COMMON,[e.WATTREL]:F.COMMON,[e.MASCHIFF]:F.COMMON,[e.SHROODLE]:F.COMMON,[e.BRAMBLIN]:F.COMMON,[e.TOEDSCOOL]:F.COMMON,[e.KLAWF]:F.COMMON,[e.CAPSAKID]:F.COMMON,[e.RELLOR]:F.COMMON,[e.FLITTLE]:F.COMMON,[e.TINKATINK]:F.RARE,[e.WIGLETT]:F.COMMON,[e.BOMBIRDIER]:F.COMMON,[e.FINIZEN]:F.RARE,[e.VAROOM]:F.RARE,[e.CYCLIZAR]:F.RARE,[e.ORTHWORM]:F.RARE,[e.GLIMMET]:F.RARE,[e.GREAVARD]:F.COMMON,[e.FLAMIGO]:F.RARE,[e.CETODDLE]:F.COMMON,[e.VELUZA]:F.RARE,[e.DONDOZO]:F.RARE,[e.TATSUGIRI]:F.RARE,[e.GREAT_TUSK]:F.EPIC,[e.SCREAM_TAIL]:F.EPIC,[e.BRUTE_BONNET]:F.EPIC,[e.FLUTTER_MANE]:F.EPIC,[e.SLITHER_WING]:F.EPIC,[e.SANDY_SHOCKS]:F.EPIC,[e.IRON_TREADS]:F.EPIC,[e.IRON_BUNDLE]:F.EPIC,[e.IRON_HANDS]:F.EPIC,[e.IRON_JUGULIS]:F.EPIC,[e.IRON_MOTH]:F.EPIC,[e.IRON_THORNS]:F.EPIC,[e.FRIGIBAX]:F.RARE,[e.GIMMIGHOUL]:F.RARE,[e.WO_CHIEN]:F.EPIC,[e.CHIEN_PAO]:F.EPIC,[e.TING_LU]:F.EPIC,[e.CHI_YU]:F.EPIC,[e.ROARING_MOON]:F.EPIC,[e.IRON_VALIANT]:F.EPIC,[e.KORAIDON]:F.LEGENDARY,[e.MIRAIDON]:F.LEGENDARY,[e.WALKING_WAKE]:F.EPIC,[e.IRON_LEAVES]:F.EPIC,[e.POLTCHAGEIST]:F.RARE,[e.OKIDOGI]:F.EPIC,[e.MUNKIDORI]:F.EPIC,[e.FEZANDIPITI]:F.EPIC,[e.OGERPON]:F.EPIC,[e.GOUGING_FIRE]:F.EPIC,[e.RAGING_BOLT]:F.EPIC,[e.IRON_BOULDER]:F.EPIC,[e.IRON_CROWN]:F.EPIC,[e.TERAPAGOS]:F.LEGENDARY,[e.PECHARUNT]:F.EPIC,[e.PALDEA_TAUROS]:F.RARE,[e.PALDEA_WOOPER]:F.RARE,[e.BLOODMOON_URSALUNA]:F.EPIC},eI=1073741824,om=class om{get id(){return this._id}get tier(){return this._tier}get sourceType(){return this._sourceType}get hatchWaves(){return this._hatchWaves}set hatchWaves(A){this._hatchWaves=A}get timestamp(){return this._timestamp}get species(){return this._species}get isShiny(){return this._isShiny}get variantTier(){return this._variantTier}get eggMoveIndex(){return this._eggMoveIndex}get overrideHiddenAbility(){return this._overrideHiddenAbility}constructor(A){const s=o(n=>{this._sourceType=n==null?void 0:n.sourceType,this._tier=(n==null?void 0:n.tier)??xe.EGG_TIER_OVERRIDE??this.rollEggTier(),n!=null&&n.pulled&&this.checkForPityTierOverrides(),this._id=(n==null?void 0:n.id)??YA(eI,eI*this._tier),this._sourceType=(n==null?void 0:n.sourceType)??void 0,this._hatchWaves=(n==null?void 0:n.hatchWaves)??this.getEggTierDefaultHatchWaves(),this._timestamp=(n==null?void 0:n.timestamp)??new Date().getTime(),this._isShiny=(n==null?void 0:n.isShiny)??(xe.EGG_SHINY_OVERRIDE||this.rollShiny()),this._variantTier=(n==null?void 0:n.variantTier)??xe.EGG_VARIANT_OVERRIDE??this.rollVariant(),this._species=(n==null?void 0:n.species)??this.rollSpecies(),this._overrideHiddenAbility=(n==null?void 0:n.overrideHiddenAbility)??!1,n!=null&&n.species&&(this._tier=this.getEggTier(),this._hatchWaves=n.hatchWaves??this.getEggTierDefaultHatchWaves()),this._species&&!$e(this._species).hasVariants()&&(this._variantTier=$O.STANDARD),this._eggMoveIndex=(n==null?void 0:n.eggMoveIndex)??this.rollEggMoveIndex(),n!=null&&n.pulled&&(this.increasePullStatistic(),this.addEggToGameData())},"generateEggProperties"),R=v0(24);a.executeWithSeedOffset(()=>{s(A)},0,R),this._eggDescriptor=A==null?void 0:A.eggDescriptor}isManaphyEgg(){return this._species===e.PHIONE||this._species===e.MANAPHY||this._tier===F.COMMON&&!(this._id%204)&&!this._species}getKey(){return this.isManaphyEgg()?"manaphy":this._tier.toString()}generatePlayerPokemon(){let A;const s=o(()=>{this._species||(this._isShiny=this.rollShiny(),this._species=this.rollSpecies());let R=$e(this._species);this._species===e.PHIONE&&this._sourceType===VE.SAME_SPECIES_EGG&&(R=$e(He(E6)?e.PHIONE:e.MANAPHY));let n;const I=this._sourceType===VE.SAME_SPECIES_EGG&&!He(k9),r=this._sourceType!==VE.SAME_SPECIES_EGG&&!He(Z9);R.abilityHidden&&(this._overrideHiddenAbility||I||r)&&(n=2),A=a.addPlayerPokemon(R,1,n,void 0,void 0,!1),A.shiny=this._isShiny,A.variant=this._variantTier;const L=Uf(He(4294967295));for(let N=0;N<A.ivs.length;N++)A.ivs[N]=Math.max(A.ivs[N],L[N])},"generatePlayerPokemonHelper");return A=A,a.executeWithSeedOffset(()=>{s()},this._id,eI.toString()),A}addEggToGameData(){a.gameData.eggs.push(this)}getEggDescriptor(){if(this.isManaphyEgg())return"Manaphy";switch(this.tier){case F.RARE:return u.t("egg:greatTier");case F.EPIC:return u.t("egg:ultraTier");case F.LEGENDARY:return u.t("egg:masterTier");default:return u.t("egg:defaultTier")}}getEggHatchWavesMessage(){return this.hatchWaves<=5?u.t("egg:hatchWavesMessageSoon"):this.hatchWaves<=15?u.t("egg:hatchWavesMessageClose"):this.hatchWaves<=50?u.t("egg:hatchWavesMessageNotClose"):u.t("egg:hatchWavesMessageLongTime")}getEggTypeDescriptor(){switch(this.sourceType){case VE.SAME_SPECIES_EGG:return this._eggDescriptor??u.t("egg:sameSpeciesEgg",{species:$e(this._species).getName()});case VE.GACHA_LEGENDARY:return this._eggDescriptor??`${u.t("egg:gachaTypeLegendary")} (${$e(Qh(this.timestamp)).getName()})`;case VE.GACHA_SHINY:return this._eggDescriptor??u.t("egg:gachaTypeShiny");case VE.GACHA_MOVE:return this._eggDescriptor??u.t("egg:gachaTypeMove");case VE.EVENT:return this._eggDescriptor??u.t("egg:eventType");default:return console.warn("getEggTypeDescriptor case not defined. Returning default empty string"),""}}rollEggMoveIndex(){let A=X9;switch(this._sourceType){case VE.SAME_SPECIES_EGG:A=Q9;break;case VE.GACHA_MOVE:A=$9;break}const s=this.isManaphyEgg()?2:Math.pow(2,3-this.tier);return He(A*s)?He(3):3}getEggTierDefaultHatchWaves(A){if(this._species===e.PHIONE||this._species===e.MANAPHY)return v9;switch(A??this._tier){case F.COMMON:return Y9;case F.RARE:return W9;case F.EPIC:return y9}return w9}rollEggTier(){const A=this._sourceType===VE.GACHA_LEGENDARY?A6:0,s=YA(256);return s>=B9+A?F.COMMON:s>=g9+A?F.RARE:s>=m9+A?F.EPIC:F.LEGENDARY}rollSpecies(){if(!a)return null;if(this.isManaphyEgg())return He(E6)!==1?e.PHIONE:e.MANAPHY;if(this.tier===F.LEGENDARY&&this._sourceType===VE.GACHA_LEGENDARY&&!He(2))return Qh(this.timestamp);let A,s;switch(this.tier){case F.RARE:A=4,s=5;break;case F.EPIC:A=6,s=7;break;case F.LEGENDARY:A=8,s=9;break;default:A=1,s=3;break}const R=[e.PHIONE,e.MANAPHY,e.ETERNATUS];let n=Object.keys(qL).filter(l=>qL[l]===this.tier).map(l=>Number.parseInt(l)).filter(l=>!IA.hasOwnProperty(l)&&$e(l).isObtainable()&&R.indexOf(l)===-1);if(a.gameData.unlockPity[this.tier]>=9){const l=n.filter(C=>!a.gameData.dexData[C].caughtAttr&&!a.gameData.eggs.some(U=>U.species===C));l.length&&(n=l)}this.variantTier&&(this.variantTier===$O.RARE||this.variantTier===$O.EPIC)&&(n=n.filter(l=>$e(l).hasVariants()));let I=0;const r=[];for(const l of n){const C=Phaser.Math.Clamp(tA[l],A,s),U=Math.floor(((s-C)/(s-A+1)*1.5+1)*100);r.push(I+U),I+=U}let L;const N=He(I);for(let l=0;l<r.length;l++)if(N<r[l]){L=n[l];break}return L=L,a.gameData.dexData[L].caughtAttr||a.gameData.eggs.some(l=>l.species===L)?a.gameData.unlockPity[this.tier]=Math.min(a.gameData.unlockPity[this.tier]+1,10):a.gameData.unlockPity[this.tier]=0,L}rollShiny(){let A=V9;switch(this._sourceType){case VE.GACHA_SHINY:A=x9;break;case VE.SAME_SPECIES_EGG:A=b9;break}return!He(A)}rollVariant(){if(!this.isShiny)return $O.STANDARD;const A=He(10);return A>=ck?$O.STANDARD:A>=hk?$O.RARE:$O.EPIC}checkForPityTierOverrides(){const A=this._sourceType===VE.GACHA_LEGENDARY?A6:0;a.gameData.eggPity[F.RARE]+=1,a.gameData.eggPity[F.EPIC]+=1,a.gameData.eggPity[F.LEGENDARY]+=1+A,a.gameData.eggPity[F.LEGENDARY]>=p9&&this._tier===F.COMMON?this._tier=F.LEGENDARY:a.gameData.eggPity[F.EPIC]>=K9&&this._tier===F.COMMON?this._tier=F.EPIC:a.gameData.eggPity[F.RARE]>=F9&&this._tier===F.COMMON&&(this._tier=F.RARE),a.gameData.eggPity[this._tier]=0}increasePullStatistic(){if(a.gameData.gameStats.eggsPulled++,this.isManaphyEgg()){a.gameData.gameStats.manaphyEggsPulled++,this._hatchWaves=this.getEggTierDefaultHatchWaves(F.EPIC);return}switch(this.tier){case F.RARE:a.gameData.gameStats.rareEggsPulled++;break;case F.EPIC:a.gameData.gameStats.epicEggsPulled++;break;case F.LEGENDARY:a.gameData.gameStats.legendaryEggsPulled++;break}}getEggTier(){return qL[this.species]}};o(om,"Egg");let sa=om;function J9(){return Object.entries(qL).filter(E=>E[1]===F.LEGENDARY).map(E=>Number.parseInt(E[0])).filter(E=>$e(E).isObtainable()&&E!==e.ETERNATUS)}o(J9,"getValidLegendaryGachaSpecies");function Qh(E){const A=J9();let s;const n=new Date(E).getTime(),I=Math.floor(Math.floor(n/864e5)/A.length),r=Math.floor(n/864e5)%A.length;return a.executeWithSeedOffset(()=>{s=Phaser.Math.RND.shuffle(A)[r]},I,eI.toString()),s=s,s}o(Qh,"getLegendaryGachaSpeciesForTimestamp");function Wi(E){return qL[E.getRootSpeciesId()]}o(Wi,"getEggTierForSpecies");var ot=(E=>(E.Button_Up="BUTTON_UP",E.Alt_Button_Up="ALT_BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Alt_Button_Down="ALT_BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Alt_Button_Left="ALT_BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Alt_Button_Right="ALT_BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Alt_Button_Action="ALT_BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Alt_Button_Cancel="ALT_BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Alt_Button_Menu="ALT_BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Alt_Button_Stats="ALT_BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Alt_Button_Cycle_Form="ALT_BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Alt_Button_Cycle_Shiny="ALT_BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Alt_Button_Cycle_Gender="ALT_BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Alt_Button_Cycle_Ability="ALT_BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Alt_Button_Cycle_Nature="ALT_BUTTON_CYCLE_NATURE",E.Button_Cycle_Tera="BUTTON_CYCLE_TERA",E.Alt_Button_Cycle_Tera="ALT_BUTTON_CYCLE_TERA",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Alt_Button_Speed_Up="ALT_BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Alt_Button_Slow_Down="ALT_BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E.Alt_Button_Submit="ALT_BUTTON_SUBMIT",E))(ot||{});const gA=u.t("settings:pressToBind"),z9={BUTTON_UP:[`KEY ${X.UP.toString()}`,gA],BUTTON_DOWN:[`KEY ${X.DOWN.toString()}`,gA],ALT_BUTTON_UP:[`KEY ${X.UP.toString()}`,gA],BUTTON_LEFT:[`KEY ${X.LEFT.toString()}`,gA],BUTTON_RIGHT:[`KEY ${X.RIGHT.toString()}`,gA],BUTTON_ACTION:[`KEY ${X.ACTION.toString()}`,gA],BUTTON_MENU:[`KEY ${X.MENU.toString()}`,gA],BUTTON_SUBMIT:[`KEY ${X.SUBMIT.toString()}`,gA],ALT_BUTTON_DOWN:[`KEY ${X.DOWN.toString()}`,gA],ALT_BUTTON_LEFT:[`KEY ${X.LEFT.toString()}`,gA],ALT_BUTTON_RIGHT:[`KEY ${X.RIGHT.toString()}`,gA],ALT_BUTTON_ACTION:[`KEY ${X.ACTION.toString()}`,gA],BUTTON_CANCEL:[`KEY ${X.CANCEL.toString()}`,gA],ALT_BUTTON_CANCEL:[`KEY ${X.CANCEL.toString()}`,gA],ALT_BUTTON_MENU:[`KEY ${X.MENU.toString()}`,gA],BUTTON_STATS:[`KEY ${X.STATS.toString()}`,gA],ALT_BUTTON_STATS:[`KEY ${X.STATS.toString()}`,gA],BUTTON_CYCLE_FORM:[`KEY ${X.CYCLE_FORM.toString()}`,gA],ALT_BUTTON_CYCLE_FORM:[`KEY ${X.CYCLE_FORM.toString()}`,gA],BUTTON_CYCLE_SHINY:[`KEY ${X.CYCLE_SHINY.toString()}`,gA],ALT_BUTTON_CYCLE_SHINY:[`KEY ${X.CYCLE_SHINY.toString()}`,gA],BUTTON_CYCLE_GENDER:[`KEY ${X.CYCLE_GENDER.toString()}`,gA],ALT_BUTTON_CYCLE_GENDER:[`KEY ${X.CYCLE_GENDER.toString()}`,gA],BUTTON_CYCLE_ABILITY:[`KEY ${X.CYCLE_ABILITY.toString()}`,gA],ALT_BUTTON_CYCLE_ABILITY:[`KEY ${X.CYCLE_ABILITY.toString()}`,gA],BUTTON_CYCLE_NATURE:[`KEY ${X.CYCLE_NATURE.toString()}`,gA],ALT_BUTTON_CYCLE_NATURE:[`KEY ${X.CYCLE_NATURE.toString()}`,gA],BUTTON_CYCLE_TERA:[`KEY ${X.CYCLE_TERA.toString()}`,gA],ALT_BUTTON_CYCLE_TERA:[`KEY ${X.CYCLE_TERA.toString()}`,gA],BUTTON_SPEED_UP:[`KEY ${X.SPEED_UP.toString()}`,gA],ALT_BUTTON_SPEED_UP:[`KEY ${X.SPEED_UP.toString()}`,gA],BUTTON_SLOW_DOWN:[`KEY ${X.SLOW_DOWN.toString()}`,gA],ALT_BUTTON_SLOW_DOWN:[`KEY ${X.SLOW_DOWN.toString()}`,gA],ALT_BUTTON_SUBMIT:[`KEY ${X.SUBMIT.toString()}`,gA]},j9={BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_MENU:0,BUTTON_SUBMIT:0,ALT_BUTTON_UP:0,ALT_BUTTON_DOWN:0,ALT_BUTTON_LEFT:0,ALT_BUTTON_RIGHT:0,ALT_BUTTON_ACTION:0,BUTTON_CANCEL:0,ALT_BUTTON_CANCEL:0,ALT_BUTTON_MENU:0,BUTTON_STATS:0,ALT_BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,ALT_BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,ALT_BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,ALT_BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,ALT_BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,ALT_BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_TERA:0,ALT_BUTTON_CYCLE_TERA:0,BUTTON_SPEED_UP:0,ALT_BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,ALT_BUTTON_SLOW_DOWN:0,ALT_BUTTON_SUBMIT:0},q9=["BUTTON_SUBMIT","BUTTON_MENU","BUTTON_ACTION","BUTTON_CANCEL","BUTTON_UP","BUTTON_DOWN","BUTTON_LEFT","BUTTON_RIGHT"];function _k(E,A){switch(E){case"BUTTON_UP":case"BUTTON_DOWN":case"BUTTON_LEFT":case"BUTTON_RIGHT":case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_TERA":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"ALT_BUTTON_UP":case"ALT_BUTTON_DOWN":case"ALT_BUTTON_LEFT":case"ALT_BUTTON_RIGHT":case"ALT_BUTTON_ACTION":case"ALT_BUTTON_CANCEL":case"ALT_BUTTON_MENU":case"ALT_BUTTON_STATS":case"ALT_BUTTON_CYCLE_SHINY":case"ALT_BUTTON_CYCLE_FORM":case"ALT_BUTTON_CYCLE_GENDER":case"ALT_BUTTON_CYCLE_ABILITY":case"ALT_BUTTON_CYCLE_NATURE":case"ALT_BUTTON_CYCLE_TERA":case"ALT_BUTTON_SPEED_UP":case"ALT_BUTTON_SLOW_DOWN":case"ALT_BUTTON_SUBMIT":if(A&&a.ui){const s=o((R=!1)=>(a.ui.revertMode(),a.ui.getHandler().updateBindings(),R),"cancelHandler");a.ui.setOverlayMode(te.KEYBOARD_BINDING,{target:E,cancelHandler:s})}break}return!0}o(_k,"setSettingKeyboard");var Hs=(E=>(E[E.UNLOCKED=1]="UNLOCKED",E[E.ENABLED=2]="ENABLED",E))(Hs||{}),oA=(E=>(E[E.GAMEPAD=0]="GAMEPAD",E[E.KEYBOARD=1]="KEYBOARD",E))(oA||{});const Tm=class Tm extends Phaser.GameObjects.Container{constructor(A,s,R,n,I){super(a,A,s),this.maxRows=I,this.totalRows=I,this.currentRow=0;const r=2;R=Math.max(R,4),this.bg=a.add.nineslice(0,0,"scroll_bar",void 0,R,n,r,r,r,r),this.bg.setOrigin(0,0),this.add(this.bg),this.handleBody=a.add.rectangle(1,1,R-2,4,11184810),this.handleBody.setOrigin(0,0),this.add(this.handleBody),this.handleBottom=a.add.nineslice(1,1,"scroll_bar_handle",void 0,R-2,2,2,0,0,0),this.handleBottom.setOrigin(0,0),this.add(this.handleBottom)}setScrollCursor(A){this.currentRow=A,this.updateHandlePosition()}setTotalRows(A){this.totalRows=A,this.handleBody.height=(this.bg.displayHeight-1-this.handleBottom.displayHeight)*this.maxRows/this.totalRows,this.updateHandlePosition(),this.setVisible(this.totalRows>this.maxRows)}updateHandlePosition(){this.handleBody.y=1+(this.bg.displayHeight-1-this.handleBottom.displayHeight)/this.totalRows*this.currentRow,this.handleBottom.y=this.handleBody.y+this.handleBody.displayHeight}};o(Tm,"ScrollBar");let mn=Tm;var nt=(E=>(E[E.ON=0]="ON",E[E.OFF=1]="OFF",E[E.EXCLUDE=2]="EXCLUDE",E[E.UNLOCKABLE=3]="UNLOCKABLE",E[E.ONE=4]="ONE",E[E.TWO=5]="TWO",E))(nt||{}),cR=(E=>(E[E.SINGLE=0]="SINGLE",E[E.MULTI=1]="MULTI",E[E.HYBRID=2]="HYBRID",E[E.RADIAL=3]="RADIAL",E))(cR||{}),RE=(E=>(E[E.NUMBER=0]="NUMBER",E[E.COST=1]="COST",E[E.CANDY=2]="CANDY",E[E.IV=3]="IV",E[E.NAME=4]="NAME",E[E.CAUGHT=5]="CAUGHT",E[E.HATCHED=6]="HATCHED",E))(RE||{});const Sm=class Sm{constructor(A,s,R=1){this.text=A||"",this.sprite=s,this.state=R}};o(Sm,"DropDownLabel");let It=Sm;const Nm=class Nm extends Phaser.GameObjects.Container{constructor(A,s){super(a),this.state=0,this.dir=-1,this.onColor=3390463,this.offColor=2565927,this.excludeColor=16733525,this.unlockableColor=16776960,this.oneColor=3390463,this.twoColor=3390463,this.val=A,Array.isArray(s)?this.labels=s:this.labels=s?[s]:[new It("")],this.currentLabelIndex=0;const R=this.labels[this.currentLabelIndex];this.state=R.state,this.text=Se(0,0,R.text||"",k.TOOLTIP_CONTENT),this.text.setOrigin(0,.5),this.add(this.text);for(let n=0;n<this.labels.length;n++){const I=this.labels[n].sprite;I&&(this.add(I),I.setOrigin(0,.5),n!==this.currentLabelIndex&&I.setVisible(!1))}}setupToggleIcon(A,s){A===0?(this.toggle=a.add.sprite(0,0,"cursor"),this.toggle.setScale(.5),this.toggle.setOrigin(0,.5),this.toggle.setRotation(Math.PI/180*-90)):(this.toggle=a.add.sprite(0,0,"candy"),this.toggle.setScale(.3),this.toggle.setOrigin(0,.5)),this.add(this.toggle),this.toggle.setVisible(s),this.updateToggleIconColor()}updateToggleIconColor(){switch(this.state){case 0:this.toggle.setTint(this.onColor);break;case 1:this.toggle.setTint(this.offColor);break;case 2:this.toggle.setTint(this.excludeColor);break;case 3:this.toggle.setTint(this.unlockableColor);break;case 4:this.toggle.setTint(this.oneColor);break;case 5:this.toggle.setTint(this.twoColor);break}}toggleOptionState(){if(this.labels.length>1)return this.setCurrentLabel((this.currentLabelIndex+1)%this.labels.length);const A=this.state===0?1:0;return this.setOptionState(A)}setOptionState(A){const s=this.labels.findIndex(R=>R.state===A);return s!==-1&&s!==this.currentLabelIndex?this.setCurrentLabel(s):(this.state=A,this.updateToggleIconColor(),A)}setCurrentLabel(A){const s=this.labels[this.currentLabelIndex],R=this.labels[A];return R?(this.currentLabelIndex=A,this.state=R.state,this.updateToggleIconColor(),s.sprite&&(this.text.x-=s.sprite.displayWidth+2,s.sprite.setVisible(!1)),R.sprite&&(this.text.x+=R.sprite.displayWidth+2,R.sprite.setVisible(!0)),this.text.setText(R.text),this.state):this.state}setDirection(A){this.dir=A,this.toggle.flipX=this.dir===1}toggleDirection(){this.setDirection(this.dir*-1)}setLabelPosition(A,s){let R=A;for(let n=0;n<this.labels.length;n++){const I=this.labels[n];I.sprite&&(I.sprite.x=A,I.sprite.y=s,n===this.currentLabelIndex&&(R+=I.sprite.displayWidth+2))}this.text&&(this.text.x=R,this.text.y=s)}setTogglePosition(A,s){this.toggle&&(this.toggle.x=A,this.toggle.y=s)}getCurrentLabelX(){var A;return this.labels[this.currentLabelIndex].sprite?(A=this.labels[this.currentLabelIndex].sprite)==null?void 0:A.x:this.text.x}getWidth(){let A=0;const s=this.text.text;for(const R of this.labels){this.text.setText(R.text);const n=R.sprite?R.sprite.displayWidth+2:0;A=Math.max(A,this.text.displayWidth+n)}return this.text.setText(s),A}};o(Nm,"DropDownOption");let vt=Nm;const lm=class lm extends Phaser.GameObjects.Container{constructor(A,s,R,n,I=1,r=2){super(a,A-7-5,s),this.dropDownType=1,this.cursor=0,this.lastCursor=-1,this.defaultCursor=0,this.lastDir=-1,this.totalOptions=0,this.maxOptions=0,this.shownOptions=0,this.tooManyOptions=!1,this.firstShown=0,this.optionHeight=0,this.optionSpacing=0,this.optionPaddingX=4,this.optionPaddingY=6,this.optionWidth=100,this.cursorOffset=0,this.optionWidth=100,this.optionHeight=7,this.optionSpacing=r,this.optionPaddingX=4,this.optionPaddingY=6,this.cursorOffset=7,this.options=R,this.dropDownType=I,this.onChange=n,this.cursorObj=a.add.image(this.optionPaddingX+3,0,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setOrigin(0,.5),this.cursorObj.setVisible(!1),(this.dropDownType===1||this.dropDownType===2)&&this.options.unshift(new vt("ALL",new It(u.t("filterBar:all"),void 0,this.checkForAllOn()?0:1))),this.maxOptions=19,this.totalOptions=this.options.length,this.tooManyOptions=this.totalOptions>this.maxOptions,this.shownOptions=this.tooManyOptions?this.maxOptions:this.totalOptions,this.defaultSettings=this.getSettings(),R.forEach((l,C)=>{const U=I!==0||l.state===0;l.setupToggleIcon(I,U),l.width=this.optionWidth,l.y=C*this.optionHeight+C*r+this.optionPaddingY;const D=7+this.optionPaddingX+3,M=this.optionHeight/2;l.setLabelPosition(D+8,M),I===0?l.setTogglePosition(D+3,M+1):l.setTogglePosition(D,M),C>=this.shownOptions&&(l.visible=!1),this.firstShown=0}),this.window=Gt(0,0,this.optionWidth,R[this.shownOptions-1].y+this.optionHeight+this.optionPaddingY,!1,!1,void 0,void 0,dR.XTHIN),this.add(this.window),this.add(R),this.add(this.cursorObj),this.setVisible(!1),this.tooManyOptions&&(this.dropDownScrollBar=new mn(this.window.width-3,5,5,this.window.height-10,1),this.add(this.dropDownScrollBar),this.dropDownScrollBar.setTotalRows(this.totalOptions),this.dropDownScrollBar.setScrollCursor(0))}getWidth(){return this.window?this.window.width:this.width}toggleVisibility(){this.setVisible(!this.visible)}setVisible(A){return super.setVisible(A),A&&this.autoSize(),this}resetCursor(){return this.dropDownType===2&&this.checkForAllOff()?this.setCursor(this.lastCursor):this.setCursor(this.defaultCursor)}setCursor(A){return this.tooManyOptions&&this.setLabels(A),this.cursor=A,A<0?(A=0,this.cursorObj.setVisible(!1),!1):A>=this.options.length?(A=this.options.length-1,this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),!1):(this.cursorObj.y=this.options[A].y+3.5,this.cursorObj.setVisible(!0),this.dropDownType===2&&(this.lastCursor=A,this.onChange()),!0)}setLabels(A){A===0&&this.lastCursor===this.totalOptions-1?this.firstShown=0:A===this.totalOptions-1&&this.lastCursor===0?this.firstShown=this.totalOptions-this.shownOptions:A-this.firstShown>=this.shownOptions&&A>this.lastCursor?this.firstShown+=1:A<this.firstShown&&A<this.lastCursor&&(this.firstShown-=1),this.options.forEach((s,R)=>{s.y=(R-this.firstShown)*(this.optionHeight+this.optionSpacing)+this.optionPaddingY;const n=this.cursorOffset+this.optionPaddingX+3,I=this.optionHeight/2;s.setLabelPosition(n+8,I),this.dropDownType===0?s.setTogglePosition(n+3,I+1):s.setTogglePosition(n,I),R<this.firstShown||R>=this.firstShown+this.shownOptions?s.visible=!1:s.visible=!0}),this.dropDownScrollBar.setScrollCursor(A)}toggleOptionState(A=this.cursor){const s=this.options[A];if(this.dropDownType===1||this.dropDownType===2){const R=s.toggleOptionState();A===0?this.setAllOptions(R):R===0&&this.checkForAllOn()?this.options[0].setOptionState(0):this.options[0].setOptionState(1)}else this.dropDownType===0?s.state===1?(this.options.forEach(R=>{R.setOptionState(1),R.setDirection(-1),R.toggle.setVisible(!1)}),s.setOptionState(0),s.setDirection(this.lastDir),s.toggle.setVisible(!0)):(s.toggleDirection(),this.lastDir=this.options[this.cursor].dir):this.dropDownType===3&&s.toggleOptionState();this.onChange()}checkForAllOn(){return this.options.every((A,s)=>s===0||A.state===0)}checkForAllOff(){return this.options.every((A,s)=>s===0||A.state===1)}getVals(){if(this.dropDownType===1)return this.options.filter((A,s)=>s>0&&A.state===0).map(A=>A.val);if(this.dropDownType===2){const A=this.options.filter((s,R)=>R>0&&s.state===0).map(s=>s.val);return A.length>0?A:this.cursor===0?this.options.filter((s,R)=>R>0).map(s=>s.val):[this.options[this.cursor].val]}return this.dropDownType===3?this.options.map(A=>({val:A.val,state:A.state})):this.options.filter(A=>A.state===0).map(A=>({val:A.val,dir:A.dir}))}getSettings(){const A=[];for(let s=0;s<this.options.length;s++)A.push({val:this.options[s].val,state:this.options[s].state,cursor:this.cursor===s,dir:this.options[s].dir});return A}hasDefaultValues(){const A=this.getSettings(),s=o(R=>A.length===this.defaultSettings.length&&A.every((n,I)=>R.every(r=>n[r]===this.defaultSettings[I][r])),"compareValues");switch(this.dropDownType){case 1:case 3:return s(["val","state"]);case 2:return s(["val","state","cursor"]);case 0:return s(["val","state","dir"]);default:return!1}}resetToDefault(){if(this.defaultSettings.length>0){this.setCursor(this.defaultCursor),this.lastDir=-1;for(let A=0;A<this.options.length;A++)this.dropDownType===0?this.defaultSettings[A].state===1?(this.options[A].setOptionState(1),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!1)):(this.options[A].setOptionState(0),this.options[A].setDirection(-1),this.options[A].toggle.setVisible(!0)):this.defaultSettings[A]&&this.options[A].setOptionState(this.defaultSettings[A].state);this.onChange()}}setAllOptions(A){if(this.dropDownType!==0)for(const s of this.options)s.setOptionState(A)}selectAllOptions(){this.setAllOptions(0)}unselectAllOptions(){this.setAllOptions(1)}autoSize(){let A=0,s=0;for(let R=0;R<this.options.length;R++){const n=this.options[R].getWidth();n>A&&(A=n,s=this.options[R].getCurrentLabelX()??0)}this.window.width=A+s-this.window.x+9,this.tooManyOptions&&(this.window.width+=6,this.dropDownScrollBar.x=this.window.width-9),this.x+this.window.width>this.parentContainer.width&&(this.x=this.parentContainer.width-this.window.width)}};o(lm,"DropDown");let hR=lm;const Cm=class Cm extends Phaser.GameObjects.Container{constructor(A){super(a,0,0),this.shinyIcons=[],this.cost=0,this.species=A;const s=a.gameData.getSpeciesDefaultDexAttr(A,!1,!0),R=a.gameData.getSpeciesDexAttrProps(A,s),n=a.add.image(2,5,"passive_bg");n.setOrigin(0,0),n.setScale(.75),n.setVisible(!1),this.add(n),this.starterPassiveBgs=n,this.icon=a.add.sprite(-2,2,A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.icon.setScale(.5),this.icon.setOrigin(0,0),this.icon.setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(R.female,R.formIndex,R.shiny,R.variant),this.icon.setTint(0),this.add(this.icon);for(let U=0;U<3;U++){const D=a.add.image(U*-3+12,2,"shiny_star_small");D.setScale(.5),D.setOrigin(0,0),D.setVisible(!1),this.shinyIcons.push(D)}this.add(this.shinyIcons);const I=Se(1,2,"0",k.WINDOW,{fontSize:"32px"});I.setShadowOffset(2,2),I.setOrigin(0,0),I.setVisible(!1),this.add(I),this.label=I;const r=a.add.image(12,7,"ha_capsule");r.setOrigin(0,0),r.setScale(.5),r.setVisible(!1),this.add(r),this.hiddenAbilityIcon=r;const L=a.add.image(0,7,"favorite");L.setOrigin(0,0),L.setScale(.5),L.setVisible(!1),this.add(L),this.favoriteIcon=L;const N=a.add.image(0,12,"champion_ribbon");N.setOrigin(0,0),N.setScale(.5),N.setVisible(!1),this.add(N),this.classicWinIcon=N;const l=a.add.image(12,12,"candy");l.setOrigin(0,0),l.setScale(.25),l.setVisible(!1),this.add(l),this.candyUpgradeIcon=l;const C=a.add.image(12,12,"candy_overlay");C.setOrigin(0,0),C.setScale(.25),C.setVisible(!1),this.add(C),this.candyUpgradeOverlayIcon=C}checkIconId(A,s,R,n){this.icon.frame.name!==this.species.getIconId(A,s,R,n)&&(`${this.species.name}`,this.icon.setTexture(this.species.getIconAtlasKey(s,!1,n)),this.icon.setFrame(this.species.getIconId(A,s,!1,n)))}};o(Cm,"StarterContainer");let $h=Cm;var rA=(E=>(E[E.GEN=0]="GEN",E[E.TYPES=1]="TYPES",E[E.BIOME=2]="BIOME",E[E.CAUGHT=3]="CAUGHT",E[E.UNLOCKS=4]="UNLOCKS",E[E.MISC=5]="MISC",E[E.SORT=6]="SORT",E))(rA||{});const um=class um extends Phaser.GameObjects.Container{constructor(A,s,R,n,I=6,r=6,L=8){super(a,A,s),this.labels=[],this.dropDowns=[],this.columns=[],this.numFilters=0,this.openDropDown=!1,this.lastCursor=-1,this.width=R,this.height=n,this.leftPaddingX=I,this.rightPaddingX=r,this.cursorOffset=L,this.window=Gt(0,0,R,n,!1,!1,void 0,void 0,dR.THIN),this.add(this.window),this.cursorObj=a.add.image(1,1,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setVisible(!1),this.cursorObj.setOrigin(0,0),this.add(this.cursorObj)}addFilter(A,s,R){if(this.columns.includes(A))return!1;this.columns.push(A);const n=Se(0,3,s,k.TOOLTIP_CONTENT);return this.labels.push(n),this.add(n),this.dropDowns.push(R),this.add(R),this.calcFilterPositions(),this.numFilters++,!0}getFilter(A){return this.dropDowns[this.columns.indexOf(A)]}getColumn(A){return this.columns[A]}updateFilterLabels(){for(let A=0;A<this.numFilters;A++)this.dropDowns[A].hasDefaultValues()?this.labels[A].setColor(eA(k.TOOLTIP_CONTENT,!1,a.uiTheme)):this.labels[A].setColor(eA(k.STATS_LABEL,!1,a.uiTheme))}calcFilterPositions(){let A=this.leftPaddingX+this.rightPaddingX+this.cursorOffset;this.labels.forEach(R=>{A+=R.displayWidth+this.cursorOffset});const s=(this.width-A)/(this.labels.length-1);for(let R=0;R<this.labels.length;R++){if(R===0)this.labels[R].x=this.leftPaddingX+this.cursorOffset;else{const n=this.labels[R-1].x+this.labels[R-1].displayWidth;this.labels[R].x=n+s+this.cursorOffset}this.dropDowns[R].x=this.labels[R].x-this.cursorOffset-this.leftPaddingX,this.dropDowns[R].y=this.height}}offsetHybridFilters(){for(let A=0;A<this.dropDowns.length;A++)this.dropDowns[A].dropDownType===cR.HYBRID&&(this.dropDowns[A].autoSize(),this.dropDowns[A].x=-this.dropDowns[A].getWidth(),this.dropDowns[A].y=0)}setCursor(A){this.lastCursor>-1&&this.dropDowns[this.lastCursor].visible&&(this.dropDowns[this.lastCursor].setVisible(!1),this.dropDowns[A].setVisible(!0),this.dropDowns[A].resetCursor()),this.cursorObj.setPosition(this.labels[A].x-this.cursorOffset+2,6),this.lastCursor=A}toggleDropDown(A){this.dropDowns[A].toggleVisibility(),this.openDropDown=this.dropDowns[A].visible,this.dropDowns[A].resetCursor()}hideDropDowns(){this.dropDowns.forEach(A=>{A.setVisible(!1)}),this.openDropDown=!1}incDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===this.dropDowns[this.lastCursor].options.length-1?this.dropDowns[this.lastCursor].setCursor(0):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor+1)}decDropDownCursor(){return this.dropDowns[this.lastCursor].cursor===0?this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].options.length-1):this.dropDowns[this.lastCursor].setCursor(this.dropDowns[this.lastCursor].cursor-1)}toggleOptionState(){this.dropDowns[this.lastCursor].toggleOptionState()}getVals(A){return this.getFilter(A).getVals()}resetSelection(A){this.dropDowns[A].resetToDefault(),this.updateFilterLabels()}setValsToDefault(){for(const A of this.dropDowns)A.resetToDefault()}getNearestFilter(A){const s=A.x+A.icon.displayWidth/2;let R=0,n=1e3;for(let I=0;I<this.labels.length;I++){const r=Math.abs(s-(this.labels[I].x+this.labels[I].displayWidth/3));r<n&&(R=I,n=r)}return R}};o(um,"FilterBar");let Uu=um;const Um=class Um extends nE{start(){super.start(),a.playBgm("menu"),a.ui.setMode(te.CHALLENGE_SELECT)}};o(Um,"SelectChallengePhase");let Du=Um;function VA(E,A){if(Pe(E))return null;const s=a.uiTheme??HO.DEFAULT;let R=eX(E);return A&&R&&(R=nZ(R,A,s)),R}o(VA,"getEncounterText");function eX(E){var s,R;const A=(R=(s=a.currentBattle)==null?void 0:s.mysteryEncounter)==null?void 0:R.dialogueTokens;return u.exists(E,A)?u.t(E,A):E??null}o(eX,"getTextWithDialogueTokens");function SE(E){const A=VA(E);a.queueMessage(A??"",null,!0)}o(SE,"queueEncounterMessage");function EA(E,A=null,s=0,R=!0,n=null){return new Promise(I=>{const r=VA(E);a.ui.showText(r??"",A,()=>I(),s,R,n)})}o(EA,"showEncounterText");function _n(E,A,s=null,R=0){return new Promise(n=>{const I=VA(E),r=VA(A);a.ui.showDialogue(I??"",r??"",s,()=>n(),R)})}o(_n,"showEncounterDialogue");function Q0(E,A,s){switch(s){case we.POKEBALL:s6(E,A,48);break;case we.GREAT_BALL:s6(E,A,96);break;case we.ULTRA_BALL:R6(E,A,8);break;case we.ROGUE_BALL:R6(E,A,10);break;case we.MASTER_BALL:tX(E,A);break}}o(Q0,"addPokeballOpenParticles");function s6(E,A,s){const R=a.anims.generateFrameNames("pb_particles",{start:0,end:3,suffix:".png"});a.anims.exists("pb_open_particle")||a.anims.create({key:"pb_open_particle",frames:R,frameRate:16,repeat:-1});const n=o(r=>{const L=a.add.sprite(E,A,"pb_open_particle");a.field.add(L);const N=r*45,[l,C]=[s*Math.cos(N*Math.PI/180),s*Math.sin(N*Math.PI/180)];a.tweens.add({targets:L,x:E+l,y:A+C,duration:575}),L.play({key:"pb_open_particle",startFrame:(r+3)%4,frameRate:Math.floor(16*a.gameSpeed)}),a.tweens.add({targets:L,delay:500,duration:75,alpha:0,ease:"Sine.easeIn",onComplete:o(()=>L.destroy(),"onComplete")})},"addParticle");let I=0;a.time.addEvent({delay:20,repeat:16,callback:o(()=>n(++I),"callback")})}o(s6,"doDefaultPbOpenParticles");function R6(E,A,s){const R=[];for(let n=0;n<10;n++)R.push(Pk(n*25,E,A,1,1,5,s));a.tweens.add({targets:R,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:o(()=>{for(const n of R)n.destroy()},"onComplete")})}o(R6,"doUbOpenParticles");function tX(E,A){const s=[];for(let R=0;R<2;R++){for(let n=0;n<8;n++)s.push(Pk(n*32,E,A,R?1:2,R?2:1,8,4));a.tweens.add({targets:s,delay:750,duration:250,alpha:0,ease:"Sine.easeIn",onComplete:o(()=>{for(const n of s)n.destroy()},"onComplete")})}}o(tX,"doMbOpenParticles");function Pk(E,A,s,R,n,I,r){let L=0;const N=a.add.image(A,s,"pb_particles",`${r}.png`);a.field.add(N);const l=o(()=>{if(!N.scene)return C.remove();N.x=A+Pn(E,L*R),N.y=s+tI(E,L*n),E=E+I,L++},"updateParticle"),C=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{l()},"onRepeat")});return N}o(Pk,"doFanOutParticle");function Gk(E){const A=o(()=>{const s=a.add.sprite(E.x,E.y,"pb_particles","4.png");s.setOrigin(E.originX,E.originY),s.setAlpha(.5),a.field.add(s),a.tweens.add({targets:s,y:E.y-10,ease:"Sine.easeOut",duration:250,onComplete:o(()=>{a.tweens.add({targets:s,y:E.y,alpha:0,ease:"Sine.easeIn",duration:250})},"onComplete")});const R=p7(25);a.tweens.add({targets:s,x:E.x+R,duration:500}),a.tweens.add({targets:s,alpha:0,delay:425,duration:75,onComplete:o(()=>s.destroy(),"onComplete")})},"addParticle");new Array(3).fill(null).map(()=>A())}o(Gk,"addPokeballCaptureStars");function Pn(E,A){return A*Math.sin(E*(Math.PI/128))}o(Pn,"sin");function tI(E,A){return A*Math.cos(E*(Math.PI/128))}o(tI,"cos");function $0(E,A){const s=A?`_${A+1}`:"",R=`shiny${s}`,n=`sparkle${s}`;if(!a.anims.exists(n)){const I=a.anims.generateFrameNames(R,{suffix:".png",end:34});a.anims.create({key:`sparkle${s}`,frames:I,frameRate:32,showOnStart:!0,hideOnComplete:!0})}E.play(n),a.playSound("se/sparkle")}o($0,"doShinySparkleAnim");var gf=(E=>(E[E.SWITCH=0]="SWITCH",E[E.SET=1]="SET",E))(gf||{});const Dm=class Dm extends On{constructor(A,s){super(),this.partyMemberIndex=A,this.fieldIndex=A<a.currentBattle.getBattlerCount()?A:-1,this.player=s}getParty(){return this.player?a.getPlayerParty():a.getEnemyParty()}getPokemon(){return this.getParty()[this.partyMemberIndex]}};o(Dm,"PartyMemberPokemonPhase");let Mu=Dm;const Mm=class Mm extends ns{start(){var R;super.start();const A=this.getPokemon();((R=A.status)==null?void 0:R.effect)===re.TOXIC&&(A.status.toxicTurnCount=0),a.arena.applyTags(lO,!1,A),a.currentBattle.isBattleMysteryEncounter()&&A.findTags(n=>n instanceof GD).length>0&&A.lapseTag(w.MYSTERY_ENCOUNTER_POST_SUMMON),oj(ME,A);const s=A.isPlayer()?a.getPlayerField():a.getEnemyField();for(const n of s)_t(AL,n,null,!1);this.end()}};o(Mm,"PostSummonPhase");let SI=Mm;const cm=class cm extends ns{constructor(A){super(A)}start(){super.start(),this.getPokemon().sparkle(),a.time.delayedCall(1e3,()=>this.end())}};o(cm,"ShinySparklePhase");let oS=cm;const hm=class hm extends Mu{constructor(A,s=!0,R=!1){super(A,s),this.loaded=R}start(){super.start(),this.preSummon()}preSummon(){var s,R;const A=this.getPokemon();if(!A.isAllowedInBattle()||this.player&&!this.getParty().some(n=>n.id===A.id)){console.warn("The Pokemon about to be sent out is fainted or illegal under a challenge. Attempting to resolve..."),A.isOnField()&&A.leaveField();const n=this.getParty(),I=n.findIndex((r,L)=>L>this.partyMemberIndex&&r.isAllowedInBattle());if(I===-1){console.error(`Party Details:
`,n),console.error("All available Pokemon were fainted or illegal!"),a.clearPhaseQueue(),a.unshiftPhase(new gO),this.end();return}[n[this.partyMemberIndex],n[I]]=[n[I],n[this.partyMemberIndex]],console.warn("Swapped %s %O with %s %O",ee(A),A,ee(n[0]),n[0])}if(this.player)a.ui.showText(u.t("battle:playerGo",{pokemonName:ee(this.getPokemon())})),this.player&&a.pbTray.hide(),a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back_pb`),a.time.delayedCall(562,()=>{a.trainer.setFrame("2"),a.time.delayedCall(64,()=>{a.trainer.setFrame("3")})}),a.tweens.add({targets:a.trainer,x:-36,duration:1e3,onComplete:o(()=>a.trainer.setVisible(!1),"onComplete")}),a.time.delayedCall(750,()=>this.summon());else if(a.currentBattle.battleType===Ht.TRAINER||((s=a.currentBattle.mysteryEncounter)==null?void 0:s.encounterMode)===PE.TRAINER_BATTLE){const n=(R=a.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?oe.TRAINER_PARTNER:oe.TRAINER),I=this.getPokemon().getNameToRender(),r=u.t("battle:trainerSendOut",{trainerName:n,pokemonName:I});a.pbTrayEnemy.hide(),a.ui.showText(r,null,()=>this.summon())}else a.currentBattle.isBattleMysteryEncounter()&&(a.pbTrayEnemy.hide(),this.summonWild())}summon(){const A=this.getPokemon(),s=a.addFieldSprite(this.player?36:248,this.player?80:44,"pb",fO(A.pokeball));if(s.setVisible(!1),s.setOrigin(.5,.625),a.field.add(s),this.fieldIndex===1)A.setFieldPosition($s.RIGHT,0);else{const n=this.getParty().filter(I=>I.isAllowedInBattle()).length;A.setFieldPosition(!a.currentBattle.double||n===1?$s.CENTER:$s.LEFT)}const R=A.getFieldPositionOffset();s.setVisible(!0),a.tweens.add({targets:s,duration:650,x:(this.player?100:236)+R[0]}),a.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:(this.player?70:34)+R[1],onComplete:o(()=>{a.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:(this.player?132:86)+R[1],onComplete:o(()=>{if(a.playSound("se/pb_rel"),s.destroy(),a.add.existing(A),a.field.add(A),!this.player){const n=a.getPlayerPokemon();n!=null&&n.isOnField()&&a.field.moveBelow(A,n),a.currentBattle.seenEnemyPartyMemberIds.add(A.id)}Q0(A.x,A.y-16,A.pokeball),a.updateModifiers(this.player),a.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.5),A.tint(Rn(A.pokeball)),A.untint(250,"Sine.easeIn"),a.updateFieldScale(),a.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:o(()=>{var n;A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),(n=A.summonData)!=null&&n.speciesForm&&A.loadAssets(!1),a.time.delayedCall(1e3,()=>this.end())},"onComplete")})},"onComplete")})},"onComplete")})}summonWild(){const A=this.getPokemon();if(this.fieldIndex===1)A.setFieldPosition($s.RIGHT,0);else{const s=this.getParty().filter(R=>!R.isFainted()).length;A.setFieldPosition(!a.currentBattle.double||s===1?$s.CENTER:$s.LEFT)}if(a.add.existing(A),a.field.add(A),!this.player){const s=a.getPlayerPokemon();s!=null&&s.isOnField()&&a.field.moveBelow(A,s),a.currentBattle.seenEnemyPartyMemberIds.add(A.id)}a.updateModifiers(this.player),a.updateFieldScale(),A.showInfo(),A.playAnim(),A.setVisible(!0),A.getSprite().setVisible(!0),A.setScale(.75),A.tint(Rn(A.pokeball)),A.untint(250,"Sine.easeIn"),a.updateFieldScale(),A.x+=16,A.y-=20,A.alpha=0,a.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,duration:1e3,ease:"Sine.easeIn",scale:A.getSpriteScale(),onComplete:o(()=>{A.cry(A.getHpRatio()>.25?void 0:{rate:.85}),A.getSprite().clearTint(),A.resetSummonData(),a.updateFieldScale(),a.time.delayedCall(1e3,()=>this.end())},"onComplete")})}onEnd(){const A=this.getPokemon();A.isShiny()&&a.unshiftPhase(new oS(A.getBattlerIndex())),A.resetTurnData(),(!this.loaded||[Ht.TRAINER,Ht.MYSTERY_ENCOUNTER].includes(a.currentBattle.battleType)||a.currentBattle.waveIndex%10===1)&&(a.triggerPokemonFormChange(A,Bs,!0),this.queuePostSummon())}queuePostSummon(){a.pushPhase(new SI(this.getPokemon().getBattlerIndex()))}end(){this.onEnd(),super.end()}};o(hm,"SummonPhase");let ts=hm;const _m=class _m extends ts{preSummon(){a.ui.showText(u.t("battle:sendOutPokemon",{pokemonName:ee(this.getPokemon())})),a.time.delayedCall(250,()=>this.summon())}};o(_m,"SummonMissingPhase");let Jh=_m;var uA=(E=>(E[E.INITIAL_SWITCH=0]="INITIAL_SWITCH",E[E.SWITCH=1]="SWITCH",E[E.BATON_PASS=2]="BATON_PASS",E[E.SHED_TAIL=3]="SHED_TAIL",E[E.FORCE_SWITCH=4]="FORCE_SWITCH",E))(uA||{});const Pm=class Pm extends ts{constructor(A,s,R,n,I){super(s,I!==void 0?I:!0),this.switchType=A,this.slotIndex=R,this.doReturn=n}start(){super.start()}preSummon(){var s,R;if(this.player||(this.slotIndex===-1&&(this.slotIndex=(s=a.currentBattle.trainer)==null?void 0:s.getNextSummonIndex(this.fieldIndex?oe.TRAINER_PARTNER:oe.TRAINER)),this.slotIndex>-1&&(this.showEnemyTrainer(this.fieldIndex%2?oe.TRAINER_PARTNER:oe.TRAINER),a.pbTrayEnemy.showPbTray(a.getEnemyParty()))),!this.doReturn||this.slotIndex!==-1&&!(this.player?a.getPlayerParty():a.getEnemyParty())[this.slotIndex]){if(this.player)return this.switchAndSummon();a.time.delayedCall(750,()=>this.switchAndSummon());return}const A=this.getPokemon();if((this.player?a.getEnemyField():a.getPlayerField()).forEach(n=>n.removeTagsBySourceId(A.id)),this.switchType===uA.SWITCH||this.switchType===uA.INITIAL_SWITCH){const n=A.getTag(xE);n&&a.tweens.add({targets:n.sprite,duration:250,scale:n.sprite.scale*.5,ease:"Sine.easeIn",onComplete:o(()=>n.sprite.destroy(),"onComplete")})}a.ui.showText(this.player?u.t("battle:playerComeBack",{pokemonName:ee(A)}):u.t("battle:trainerComeBack",{trainerName:(R=a.currentBattle.trainer)==null?void 0:R.getName(this.fieldIndex%2?oe.TRAINER_PARTNER:oe.TRAINER),pokemonName:A.getNameToRender()})),a.playSound("se/pb_rel"),A.hideInfo(),A.tint(Rn(A.pokeball),1,250,"Sine.easeIn"),a.tweens.add({targets:A,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:o(()=>{a.time.delayedCall(750,()=>this.switchAndSummon()),A.leaveField(this.switchType===uA.SWITCH,!1)},"onComplete")})}switchAndSummon(){const A=this.player?this.getParty():a.getEnemyParty(),s=A[this.slotIndex];if(this.lastPokemon=this.getPokemon(),Tj(EL,this.lastPokemon),this.switchType===uA.BATON_PASS&&s&&((this.player?a.getEnemyField():a.getPlayerField()).forEach(R=>R.transferTagsBySourceId(this.lastPokemon.id,s.id)),!a.findModifier(R=>R instanceof ba&&R.pokemonId===s.id))){const R=a.findModifier(n=>n instanceof ba&&n.pokemonId===this.lastPokemon.id);R&&!a.findModifier(n=>n instanceof ba&&n.pokemonId===s.id)&&a.tryTransferHeldItemModifier(R,s,!1,void 0,void 0,void 0,!1)}if(s){A[this.slotIndex]=this.lastPokemon,A[this.fieldIndex]=s;const R=o(()=>{var n;a.ui.showText(this.player?u.t("battle:playerGo",{pokemonName:ee(s)}):u.t("battle:trainerGo",{trainerName:(n=a.currentBattle.trainer)==null?void 0:n.getName(this.fieldIndex%2?oe.TRAINER_PARTNER:oe.TRAINER),pokemonName:this.getPokemon().getNameToRender()})),this.switchType===uA.BATON_PASS||this.switchType===uA.SHED_TAIL?this.lastPokemon.getTag(xE)&&(s.x+=this.lastPokemon.getSubstituteOffset()[0],s.y+=this.lastPokemon.getSubstituteOffset()[1],s.setAlpha(.5)):s.resetSummonData(),this.summon()},"showTextAndSummon");this.player?R():a.time.delayedCall(1500,()=>{this.hideEnemyTrainer(),a.pbTrayEnemy.hide(),R()})}else this.end()}onEnd(){var L,N;super.onEnd();const A=this.getPokemon(),s=a.currentBattle.lastMove,R=s?Ve[s]:void 0,n=(L=a.currentBattle.turnCommands[this.fieldIndex])==null?void 0:L.command,I=(R==null?void 0:R.hasAttr(nR))&&!this.lastPokemon.isFainted(),r=this.lastPokemon.hasAbilityWithAttr(HI)&&!this.lastPokemon.isFainted();if((n===OA.POKEMON||I||r)&&(A.battleSummonData.turnCount--,A.battleSummonData.waveTurnCount--),this.switchType===uA.BATON_PASS&&A)A.transferSummon(this.lastPokemon);else if(this.switchType===uA.SHED_TAIL&&A){const l=this.lastPokemon.getTag(xE);l&&A.summonData.tags.push(l)}this.switchType!==uA.INITIAL_SWITCH&&(A.resetTurnData(),A.turnData.switchedInThisTurn=!0),(N=this.lastPokemon)==null||N.resetSummonData(),a.triggerPokemonFormChange(A,Bs,!0),a.arena.triggerWeatherBasedFormChanges()}queuePostSummon(){a.unshiftPhase(new SI(this.getPokemon().getBattlerIndex()))}};o(Pm,"SwitchSummonPhase");let HR=Pm;const Gm=class Gm extends HE{constructor(A,s,R,n){super(),this.switchType=A,this.fieldIndex=s,this.isModal=R,this.doReturn=n}start(){if(super.start(),this.isModal&&!a.getPlayerParty().filter(s=>s.isAllowedInBattle()&&!s.isActive(!0)).length)return super.end();if(this.isModal&&!this.doReturn&&!a.getPlayerParty()[this.fieldIndex].isFainted())return super.end();if(this.isModal&&a.getPlayerField().filter(s=>s.isAllowedInBattle()&&s.isActive(!0)).length>=a.currentBattle.getBattlerCount())return super.end();const A=a.currentBattle.getBattlerCount()===1||a.getPokemonAllowedInBattle().length>1?this.fieldIndex:0;a.ui.setMode(te.PARTY,this.isModal?gs.FAINT_SWITCH:gs.POST_BATTLE_SWITCH,A,(s,R)=>{if(s>=a.currentBattle.getBattlerCount()&&s<6){a.tryRemovePhase(I=>I instanceof SI&&I.player&&I.fieldIndex===this.fieldIndex);const n=R===iS.PASS_BATON?uA.BATON_PASS:this.switchType;a.unshiftPhase(new HR(n,A,s,this.doReturn))}a.ui.setMode(te.MESSAGE).then(()=>super.end())},kE.FilterNonFainted)}};o(Gm,"SwitchPhase");let Xa=Gm;const dm=class dm extends HE{constructor(A,s){super(),this.fieldIndex=A,this.useName=s}start(){super.start();const A=a.getPlayerField()[this.fieldIndex];if(a.battleStyle===gf.SET)return super.end();if(a.field.getAll().indexOf(A)===-1)return a.unshiftPhase(new Jh(this.fieldIndex)),super.end();if(!a.getPlayerParty().slice(1).filter(s=>s.isActive()).length)return super.end();if(A.getTag(w.FRENZY)||A.isTrapped()||a.getPlayerField().some(s=>s.getTag(w.COMMANDED)))return super.end();a.ui.showText(u.t("battle:switchQuestion",{pokemonName:this.useName?ee(A):u.t("battle:pokemon")}),null,()=>{a.ui.setMode(te.CONFIRM,()=>{a.ui.setMode(te.MESSAGE),a.unshiftPhase(new Xa(uA.INITIAL_SWITCH,this.fieldIndex,!1,!0)),this.end()},()=>{a.ui.setMode(te.MESSAGE),this.end()})})}};o(dm,"CheckSwitchPhase");let pn=dm;const Hm=class Hm extends nE{start(){super.start(),a.ui.getMessageHandler().bg.setVisible(!1),a.ui.getMessageHandler().nameBoxContainer.setVisible(!1),this.endCard=a.add.image(0,0,`end_${a.gameData.gender===Jt.FEMALE?"f":"m"}`),this.endCard.setOrigin(0),this.endCard.setScale(.5),a.field.add(this.endCard),this.text=Se(a.game.canvas.width/12,a.game.canvas.height/6-16,u.t("battle:congratulations"),k.SUMMARY,{fontSize:"128px"}),this.text.setOrigin(.5),a.field.add(this.text),a.ui.clearText(),a.ui.fadeIn(1e3).then(()=>{a.ui.showText("",null,()=>{a.ui.getMessageHandler().bg.setVisible(!0),this.end()},null,!0)})}};o(Hm,"EndCardPhase");let cu=Hm;const fm=class fm extends HE{constructor(A){super(),this.modifierType=Z0(A)}start(){super.start(),this.doReward().then(()=>this.end())}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();a.addModifier(s),a.playSound("item_fanfare"),a.ui.showText(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>A(),null,!0)})}};o(fm,"ModifierRewardPhase");let FE=fm;const Bm=class Bm extends FE{doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();a.addModifier(s),a.playSound("level_up_fanfare"),a.ui.setMode(te.MESSAGE),a.ui.fadeIn(250).then(()=>{a.ui.showText(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name}),null,()=>{a.time.delayedCall(1500,()=>a.arenaBg.setVisible(!0)),A()},null,!0,1500)})})}};o(Bm,"GameOverModifierRewardPhase");let zh=Bm;var mf=(E=>(E[E.RUN_HISTORY=0]="RUN_HISTORY",E[E.SESSION_PREVIEW=1]="SESSION_PREVIEW",E))(mf||{});const gm=class gm extends Js{constructor(){super(te.RUN_INFO)}async setup(){this.runContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.modifiersModule=KC,this.runContainer.setVisible(!1),a.loadImage("encounter_exclaim","mystery-encounters")}show(A){super.show(A);const s=a.add.rectangle(0,0,a.game.canvas.width,a.game.canvas.height,26720);s.setOrigin(0,0),this.runContainer.add(s);const R=A[0];this.runDisplayMode=A[1],this.runDisplayMode===0?(this.runInfo=a.gameData.parseSessionData(JSON.stringify(R.entry)),this.isVictory=R.isVictory??!1):this.runDisplayMode===1&&(this.runInfo=A[0]),this.pageMode=0,this.addHeader(),this.statsBgWidth=(a.game.canvas.width/6-2)/3,this.runResultContainer=a.add.container(0,24);const n=Gt(0,0,this.statsBgWidth-11,65);n.setOrigin(0,0),n.setName("Run_Result_Window"),this.runResultContainer.add(n),this.runDisplayMode===0?this.parseRunResult():this.runDisplayMode===1&&this.parseRunStatus(),this.runInfoContainer=a.add.container(0,89);const I=Gt(0,0,this.statsBgWidth-11,90),r=I.getBottomRight();return this.runInfoContainer.add(I),this.parseRunInfo(r.x,r.y),this.partyContainer=a.add.container(this.statsBgWidth-10,23),this.parsePartyInfo(),this.showParty(!0),this.runContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.getUi().bringToTop(this.runContainer),this.runContainer.setVisible(!0),this.isVictory&&(this.createHallofFame(),this.getUi().bringToTop(this.hallofFameContainer)),this.setCursor(0),this.getUi().add(this.runContainer),this.getUi().hideTooltip(),!0}addHeader(){var R;const A=Gt(0,0,a.game.canvas.width/6-2,24);if(A.setOrigin(0,0),this.runContainer.add(A),this.runInfo.modifiers.length!==0){const n=A.getTopRight(),I=a.add.container(0,0),r=Se(8,0,u.t("runHistory:viewHeldItems"),k.WINDOW,{fontSize:"34px"}),L=this.getUi().getGamepadType();let N;L==="touch"?N=new Phaser.GameObjects.Sprite(a,0,2,"keyboard","E.png"):N=new Phaser.GameObjects.Sprite(a,0,2,L,(R=a.inputController)==null?void 0:R.getIconForLatestInputRecorded(ot.Button_Cycle_Ability)),I.add([r,N]),I.setPosition(n.x-r.displayWidth-N.displayWidth-8,10),this.runContainer.add(I)}const s=Se(0,0,u.t("runHistory:runInfo"),k.SETTINGS_LABEL);s.setOrigin(0,0),s.setPositionRelative(A,8,4),this.runContainer.add(s)}async parseRunResult(){var r,L;const A=a.gameData.gender??Jt.UNSET,s=Jt[A],R=this.isVictory?k.PERFECT_IV:k.SUMMARY_RED,n=this.isVictory?u.t("runHistory:victory"):u.t("runHistory:defeated",{context:s}),I=Se(6,5,`${n} - ${u.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,R,{fontSize:"65px",lineSpacing:.1});if(this.isVictory){const N=a.add.container(0,0),l=Se(8,0,u.t("runHistory:viewHallOfFame"),k.WINDOW,{fontSize:"65px"}),C=Se(8,12,u.t("runHistory:viewEndingSplash"),k.WINDOW,{fontSize:"65px"}),U=this.getUi().getGamepadType();let D,M;U==="touch"?(D=new Phaser.GameObjects.Sprite(a,0,4,"keyboard","R.png"),M=new Phaser.GameObjects.Sprite(a,0,16,"keyboard","F.png")):(D=new Phaser.GameObjects.Sprite(a,0,4,U,(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(ot.Button_Cycle_Shiny)),M=new Phaser.GameObjects.Sprite(a,0,16,U,(L=a.inputController)==null?void 0:L.getIconForLatestInputRecorded(ot.Button_Cycle_Form))),N.add([l,D]),N.add([C,M]),N.setPosition(12,25),this.runResultContainer.add(N)}if(this.runResultContainer.add(I),!this.isVictory){const N=a.add.container(0,0);if(this.runInfo.battleType===Ht.WILD||this.runInfo.battleType===Ht.MYSTERY_ENCOUNTER&&!this.runInfo.trainer)switch(this.runInfo.enemyParty.length){case 1:this.parseWildSingleDefeat(N);break;case 2:this.parseWildDoubleDefeat(N);break}else(this.runInfo.battleType===Ht.TRAINER||this.runInfo.battleType===Ht.MYSTERY_ENCOUNTER&&this.runInfo.trainer)&&this.parseTrainerDefeat(N);this.runResultContainer.add(N)}this.runContainer.add(this.runResultContainer)}parseRunStatus(){const A=a.add.container(0,0);if(this.runResultContainer.add(A),this.runInfo.battleType===Ht.WILD)this.runInfo.enemyParty.length===1?this.parseWildSingleDefeat(A):this.runInfo.enemyParty.length===2&&this.parseWildDoubleDefeat(A);else if(this.runInfo.battleType===Ht.TRAINER){this.showTrainerSprites(A);const L=3;this.runInfo.enemyParty.forEach((h,_)=>{const d=a.add.sprite(0,0,"pb");d.setFrame(fO(h.pokeball)),d.setScale(.5),d.setPosition(58+_%L*8,_<=2?18:25),A.add(d)});const N=this.runInfo.trainer.toTrainer(),l=375;let C="";this.runInfo.trainer.trainerType>=l?C=N.variant===LA.FEMALE?u.t("trainerNames:rival_female"):u.t("trainerNames:rival"):C=N.getName(0,!0);const U=u.t(N.variant!==LA.DOUBLE?"battle:trainerAppeared":"battle:trainerAppearedDouble",{trainerName:C}).replace(/\n/g," "),D=a.add.container(0,0),M=Se(0,0,U,k.WINDOW,{fontSize:"35px",wordWrap:{width:200}});D.add(M),D.setPosition(55,32),this.runResultContainer.add(D)}else if(this.runInfo.battleType===Ht.MYSTERY_ENCOUNTER){const L=a.add.sprite(0,0,"encounter_exclaim");L.setPosition(34,26),L.setScale(.65);const N=a.add.sprite(56,-106,"pkmn__sub");N.setScale(.65),N.setPosition(34,46);const l=u.t(a.getMysteryEncounter(this.runInfo.mysteryEncounterType,!0).localizationKey+":title"),C=a.add.container(0,0),U=Se(0,0,l,k.WINDOW,{fontSize:"45px",wordWrap:{width:160}});C.add(U),C.setPosition(47,37),this.runResultContainer.add([L,N,C])}const s=this.runResultContainer.getByName("Run_Result_Window"),R=s.getTopCenter().x,n=s.getBottomCenter().y,I=Se(R,5,`${u.t("saveSlotSelectUiHandler:wave")} ${this.runInfo.waveIndex}`,k.WINDOW,{fontSize:"60px",lineSpacing:.1});I.setOrigin(.5,0);const r=Se(R,n-5,`${GL(this.runInfo.arena.biome)}`,k.WINDOW,{fontSize:"60px"});r.setOrigin(.5,1),this.runResultContainer.add([I,r]),this.runContainer.add(this.runResultContainer)}parseWildSingleDefeat(A){const s=a.add.container(0,0),R=this.runInfo.enemyParty[0],n=R.boss;R.boss=!1,R.player=!0;const I=R.toPokemon(),r=a.addPokemonIcon(I,0,0,0,0),L=n?k.PARTY_RED:k.PARTY,N=Se(36,26,`${u.t("saveSlotSelectUiHandler:lv")}${Dr(I.level,1e3)}`,L,{fontSize:"44px",color:"#f8f8f8"});N.setShadow(0,0,void 0),N.setStroke("#424242",14),N.setOrigin(1,0),s.add(r),s.add(N),A.add(s),A.setPosition(27,12),I.destroy()}parseWildDoubleDefeat(A){this.runInfo.enemyParty.forEach((s,R)=>{const n=a.add.container(0,0),I=s.boss;s.boss=!1,s.player=!0;const r=s.toPokemon(),L=a.addPokemonIcon(r,0,0,0,0),N=Se(36,26,`${u.t("saveSlotSelectUiHandler:lv")}${Dr(r.level,1e3)}`,I?k.PARTY_RED:k.PARTY,{fontSize:"44px",color:"#f8f8f8"});N.setShadow(0,0,void 0),N.setStroke("#424242",14),N.setOrigin(1,0),n.add(L),n.add(N),n.setPosition(R*35,0),A.add(n),r.destroy()}),A.setPosition(8,14)}showTrainerSprites(A){const s=this.runInfo.trainer.toTrainer();s.config.loadAssets(this.runInfo.trainer.variant).then(()=>{const R=s.config.getSpriteKey(this.runInfo.trainer.variant===LA.FEMALE,!1),n=a.add.sprite(0,5,R);if(this.runInfo.trainer.variant===LA.DOUBLE&&!s.config.doubleOnly){const I=a.add.container(5,8);n.setPosition(-3,-3);const r=s.config.getSpriteKey(!0,!0),L=a.add.sprite(5,-3,r);this.runDisplayMode===0?(L.setScale(.2),n.setScale(.2),I.add(n),I.add(L),I.setPosition(12,38)):(n.setScale(.55),n.setPosition(-9,-3),L.setScale(.55),I.add([n,L]),I.setPosition(28,34)),A.add(I)}else{const I=this.runDisplayMode===0?.35:.55,r=this.runDisplayMode===0?[12,28]:[30,32];n.setScale(I,I),n.setPosition(r[0],r[1]),A.add(n)}})}parseTrainerDefeat(A){this.showTrainerSprites(A);const s=a.add.container(0,0);this.runInfo.enemyParty.forEach((R,n)=>{const I=Math.floor(n/3),r=a.add.container(0,0);r.setScale(.6);const L=R.boss;R.boss=!1,R.player=!0;const N=R.toPokemon(),l=a.addPokemonIcon(N,0,0,0,0);l.setPosition(39*(n%3)+5,35*I);const C=Se(43*(n%3),27*(I+1),`${u.t("saveSlotSelectUiHandler:lv")}${Dr(N.level,1e3)}`,L?k.PARTY_RED:k.PARTY,{fontSize:"54px"});C.setShadow(0,0,void 0),C.setStroke("#424242",14),C.setOrigin(0,0),r.add(l),r.add(C),s.add(r),N.destroy()}),s.setPosition(25,15),A.add(s)}async parseRunInfo(A,s){const R=pE(7,0,"",k.WINDOW,{fontSize:"50px",lineSpacing:3});switch(R.setPosition(7,5),R.appendText(u.t("runHistory:mode")+": ",!1),this.runInfo.gameMode){case hA.DAILY:R.appendText(`${u.t("gameMode:dailyRun")}`,!1);break;case hA.SPLICED_ENDLESS:R.appendText(`${u.t("gameMode:endlessSpliced")}`,!1);break;case hA.CHALLENGE:R.appendText(`${u.t("gameMode:challenge")}`,!1),R.appendText(`${u.t("runHistory:challengeRules")}: `),R.setWrapMode(1),R.setWrapWidth(500);const M=this.challengeParser();if(M)for(let h=0;h<M.length;h++)h>0&&R.appendText(" + ",!1),R.appendText(M[h],!1);break;case hA.ENDLESS:R.appendText(`${u.t("gameMode:endless")}`,!1);break;case hA.CLASSIC:R.appendText(`${u.t("gameMode:classic")}`,!1);break}(this.runInfo.gameMode===hA.ENDLESS||this.runInfo.gameMode===hA.SPLICED_ENDLESS)&&this.runInfo.waveIndex===a.gameData.gameStats.highestEndlessWave&&(R.appendText(` [${u.t("runHistory:personalBest")}]`),R.setTint(16772956,4718441,7039999,16738665));const n=a.add.container(0,0),I=u.resolvedLanguage==="ja"?12:3,r=pE(7,0,"",k.WINDOW,{fontSize:"50px",lineSpacing:I}),L=Df(this.runInfo.playTime);r.appendText(`${u.t("runHistory:runLength")}: ${L}`,!1);const N=Ol(a.moneyFormat,this.runInfo.money),l=eA(k.MONEY_WINDOW,!1,a.uiTheme);r.appendText(`[color=${l}]${u.t("battleScene:moneyOwned",{formattedMoney:N})}[/color]`),r.setPosition(7,70),n.add(r);const C=pE(0,0,"",k.WINDOW,{fontSize:"55px"}),U=Phaser.Math.Clamp(this.runInfo.party.map(M=>M.toPokemon().getLuck()).reduce((M,h)=>M+=h,0),0,14);let D=u.t("runHistory:luck")+": "+Dk(U);if(U<14?D="[color=#"+Mk(U).toString(16)+"]"+D+"[/color]":C.setTint(16772956,4718441,7039999,16738665),C.appendText("[align=right]"+D+"[/align]",!1),C.setPosition(A-C.displayWidth-5,s-13),n.add(C),this.runInfo.modifiers.length){let M=0;const h=a.add.container(8,this.runInfo.gameMode===hA.CHALLENGE?20:15);h.setScale(.45);for(const _ of this.runInfo.modifiers){const d=_.toModifier(this.modifiersModule[_.className]);if(d instanceof Ft)continue;const f=d==null?void 0:d.getIcon(!1);if(f){const H=Math.floor(M/7);f.setPosition(24*(M%7),20+35*H),h.add(f)}if(++M===20){const H=Se(45,90,"+",k.WINDOW);H.setPositionRelative(h,70,45),this.runInfoContainer.add(H);break}}this.runInfoContainer.add(h)}this.runInfoContainer.add(R),this.runInfoContainer.add(n),this.runContainer.add(this.runInfoContainer)}challengeParser(){const A=[];for(let s=0;s<this.runInfo.challenges.length;s++)if(this.runInfo.challenges[s].value!==0)switch(this.runInfo.challenges[s].id){case ut.SINGLE_GENERATION:A.push(u.t(`runHistory:challengeMonoGen${this.runInfo.challenges[s].value}`));break;case ut.SINGLE_TYPE:const R=i[this.runInfo.challenges[s].value-1],n=`[color=${df[R]}]`,I=`[shadow=${Hf[R]}]`,r=n+I+u.t(`pokemonInfo:Type.${R}`)+"[/color][/shadow]";A.push(r);break;case ut.INVERSE_BATTLE:A.push(u.t("challenges:inverseBattle.shortName"));break;default:const L=ut[this.runInfo.challenges[s].id].split("_").map((N,l)=>l?`${N[0]}${N.slice(1).toLowerCase()}`:N.toLowerCase()).join("");A.push(u.t(`challenges:${L}.name`));break}return A}parsePartyInfo(){const A=this.runInfo.party,s=u.resolvedLanguage??"en",R=(a.game.canvas.height/6-23)/6;A.forEach((n,I)=>{var cA;const r=new K7(a,0,14,this.statsBgWidth*2+10,R-2,3),L=n.toPokemon(),N=a.add.container(this.statsBgWidth+5,(R-.5)*I),l=L.getTypes(),C=BR(l[0]),U=new Phaser.Display.Color(C[0],C[1],C[2]),D=U.clone().darken(45);r.setFillStyle(D.color);const M=a.add.container(0,0),h=a.addPokemonIcon(L,0,0,0,0);h.setScale(.75),h.setPosition(-99,1);const _=l[1]?BR(l[1]):void 0,d=_?new Phaser.Display.Color(_[0],_[1],_[2]):void 0;d?r.setStrokeStyle(1,d.color,.95):r.setStrokeStyle(1,U.color,.95),this.getUi().bringToTop(h);const f=a.add.container(-85,3.5),H="34px",B=L.getNature(),K=zR(B),Y=L.getNameToRender(),v=["ko","zh_CN","zh_TW"];let Z=u.t("starterSelectUiHandler:passive")??"-",z=u.t("starterSelectUiHandler:ability")??"-";v.includes(s)||(Z=Z.charAt(0),z=z.charAt(0));const q=L.passive?Z+": "+L.getPassiveAbility().name:"",J=z+": "+L.getAbility().name,Ae=u.resolvedLanguage==="ja"?12:3,Q=pE(0,0,Y,k.SUMMARY,{fontSize:H,lineSpacing:Ae});Q.appendText(`${u.t("saveSlotSelectUiHandler:lv")}${xc(L.level,1)} - ${K}`),Q.appendText(J),Q.appendText(q),f.add(Q);const Re=a.add.container(-35,6),W=[];L.stats.forEach(x=>W.push(xc(x,1)));for(let x=0;x<W.length;x++){const be=al(B,x);W[x]=be<1?W[x]+"[color=#40c8f8]↓[/color]":W[x],W[x]=be>1?W[x]+"[color=#f89890]↑[/color]":W[x]}const ie=u.t("pokemonInfo:Stat.HPshortened")+": "+W[0],Be=u.t("pokemonInfo:Stat.ATKshortened")+": "+W[1],he=u.t("pokemonInfo:Stat.DEFshortened")+": "+W[2],ve=u.t("pokemonInfo:Stat.SPATKshortened")+": "+W[3],_e=u.t("pokemonInfo:Stat.SPDEFshortened")+": "+W[4],Ee=(s==="es-ES"||s==="pt_BR"?u.t("runHistory:SPDshortened"):u.t("pokemonInfo:Stat.SPDshortened"))+": "+W[5],se=pE(-5,0,ie,k.SUMMARY,{fontSize:H,lineSpacing:Ae});se.appendText(Be),se.appendText(he),Re.add(se);const Ne=pE(25,0,ve,k.SUMMARY,{fontSize:H,lineSpacing:Ae});Ne.appendText(_e),Ne.appendText(Ee),Re.add(Ne);const Ue=a.add.container(0,0);if(L.fusionSpecies){const x=a.add.image(0,0,"icon_spliced");x.setScale(.35),x.setOrigin(0,0),L.isShiny()?x.setPositionRelative(f,35,0):x.setPositionRelative(f,28,0),Ue.add(x),this.getUi().bringToTop(x)}if(L.isShiny()){const x=L.isFusion()&&L.shiny&&L.fusionShiny,be=a.add.image(0,0,`shiny_star_small${x?"_1":""}`);if(be.setOrigin(0,0),be.setScale(.65),be.setPositionRelative(f,28,0),be.setTint(lE(x?L.variant:L.getVariant())),Ue.add(be),this.getUi().bringToTop(be),x){const Ye=a.add.image(0,0,"shiny_star_small_2");Ye.setOrigin(0,0),Ye.setScale(.5),Ye.setPosition(be.x+1,be.y+1),Ye.setTint(lE(L.fusionVariant)),Ue.add(Ye),this.getUi().bringToTop(Ye)}}const me=L.getMoveset(),st=a.add.container(70,-29),Ct=[],tt=[],ft=[[-6.5,35.5],[37,35.5],[-6.5,43.5],[37,43.5]];for(let x=0;x<(me==null?void 0:me.length);x++){const be=a.add.container(ft[x][0],ft[x][1]);be.setScale(.5);const Ye=a.add.nineslice(0,0,"type_bgs","unknown",85,15,2,2,2,2);Ye.setOrigin(1,0);const le=Se(-Ye.width/2,2,"-",k.PARTY);le.setOrigin(.5,0),le.setName("text-move-label"),Ct.push(Ye),tt.push(le),be.add(Ye),be.add(le),st.add(be);const Te=(cA=me[x])==null?void 0:cA.getMove();Ct[x].setFrame(i[Te?Te.type:i.UNKNOWN].toString().toLowerCase()),tt[x].setText(Te?Te.name:"-")}const Xt=this.runInfo.gameMode===hA.SPLICED_ENDLESS||this.runInfo.gameMode===hA.ENDLESS?.25:.5,pt=a.add.container(-82,2),fA=[];if(this.runInfo.modifiers.length){for(const x of this.runInfo.modifiers){const be=x.toModifier(this.modifiersModule[x.className]);be instanceof Ft&&be.pokemonId===L.id&&(be.stackCount=x.stackCount,fA.push(be))}if(fA.length>0){fA.sort(cN);let x=0;for(const[be,Ye]of fA.entries()){if(be>36){const Te=Se(182,4,"+",k.WINDOW);pt.add(Te);break}const le=Ye==null?void 0:Ye.getIcon(!0);(Ye==null?void 0:Ye.stackCount)<(Ye==null?void 0:Ye.getMaxHeldItemCount(L))&&le.list[1]instanceof Phaser.GameObjects.BitmapText&&le.list[1].clearTint(),le.setScale(Xt),le.setPosition(be%19*10,x*10),pt.add(le),be!==0&&be%18===0&&x++}}}pt.setName("heldItems"),pt.setVisible(!1),N.add(r),M.add(h),N.add(M),Ue.setName("PkmnMarks"),N.add(Ue),st.setName("PkmnMoves"),N.add(st),f.setName("PkmnInfoText"),N.add(f),Re.setName("PkmnStatsText"),N.add(Re),N.add(pt),N.setName("PkmnInfo"),this.partyContainer.add(N),L.destroy()}),this.runContainer.add(this.partyContainer)}showParty(A){this.partyContainer.getAll("name","PkmnInfo").forEach(R=>{R.getByName("PkmnMoves").setVisible(A),R.getByName("PkmnInfoText").setVisible(A),R.getByName("PkmnStatsText").setVisible(A),R.getByName("PkmnMarks").setVisible(A),R.getByName("heldItems").setVisible(!A),this.partyVisibility=A})}createVictorySplash(){this.endCardContainer=a.add.container(0,0);const s=(a.gameData.gender??Jt.UNSET)===Jt.FEMALE,R=a.add.image(0,0,`end_${s?"f":"m"}`);R.setOrigin(0),R.setScale(.5);const n=Se(a.game.canvas.width/12,a.game.canvas.height/6-16,u.t("battle:congratulations"),k.SUMMARY,{fontSize:"128px"});n.setOrigin(.5),this.endCardContainer.add(R),this.endCardContainer.add(n)}createHallofFame(){const A=a.gameData.gender??Jt.UNSET,s=A===Jt.FEMALE,R=Jt[A].toLowerCase();this.hallofFameContainer=a.add.container(0,0);const n=a.add.image(0,0,`end_${s?"f":"m"}`);n.setOrigin(0),n.setPosition(-1,-1),n.setScale(.5);const I=n.getBottomCenter(),r=s?"red":"blue",L=a.add.image(0,0,"hall_of_fame_"+r);L.setPosition(159,89),L.setSize(a.game.canvas.width,a.game.canvas.height+10),L.setAlpha(.8),this.hallofFameContainer.add(n),this.hallofFameContainer.add(L);const N=Se(0,0,u.t("runHistory:hallofFameText",{context:R}),k.WINDOW);N.setPosition(I.x-N.displayWidth/2,164),this.hallofFameContainer.add(N),this.runInfo.party.forEach((l,C)=>{const U=l.toPokemon(),D=C%2,M=U.id,h=U.shiny,_=U.formIndex,d=U.variant,f=U.getSpeciesForm(),H=a.add.sprite(60+40*C,40+D*80,"pkmn__sub");H.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.hallofFameContainer.add(H);const B=new Map;B.set(M,!1);const K=U.gender===1;if(f.loadAssets(K,_,h,d,!0).then(()=>{B.set(M,!0),H.play(f.getSpriteKey(K,_,h,d)),H.setPipelineData("shiny",h),H.setPipelineData("variant",d),H.setPipelineData("spriteKey",f.getSpriteKey(K,_,h,d)),H.setVisible(!0)}),U.isFusion()){const Y=a.add.sprite(80+40*C,50+D*80,U.getFusionIconAtlasKey());Y.setName("sprite-fusion-icon"),Y.setOrigin(.5,0),Y.setFrame(U.getFusionIconId(!0)),this.hallofFameContainer.add(Y)}U.destroy()}),this.hallofFameContainer.setVisible(!1),this.runContainer.add(this.hallofFameContainer)}processInput(A){const s=this.getUi();let R=!1;const n=!1;switch(A){case X.CANCEL:case X.LEFT:R=!0,this.pageMode===0?(this.runInfoContainer.removeAll(!0),this.runResultContainer.removeAll(!0),this.partyContainer.removeAll(!0),this.runContainer.removeAll(!0),this.isVictory&&this.hallofFameContainer.removeAll(!0),super.clear(),this.runContainer.setVisible(!1),s.revertMode()):this.pageMode===1?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):this.pageMode===2&&(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0);break;case X.DOWN:case X.UP:break;case X.CYCLE_FORM:case X.CYCLE_SHINY:case X.CYCLE_ABILITY:this.buttonCycleOption(A);break}return R&&s.playSelect(),R||n}buttonCycleOption(A){switch(A){case X.CYCLE_FORM:this.isVictory&&this.pageMode!==1&&(!this.endCardContainer||!this.endCardContainer.visible?(this.createVictorySplash(),this.endCardContainer.setVisible(!0),this.runContainer.add(this.endCardContainer),this.pageMode=2):(this.endCardContainer.setVisible(!1),this.runContainer.remove(this.endCardContainer),this.pageMode=0));break;case X.CYCLE_SHINY:this.isVictory&&this.pageMode!==2&&(this.hallofFameContainer.visible?(this.hallofFameContainer.setVisible(!1),this.pageMode=0):(this.hallofFameContainer.setVisible(!0),this.pageMode=1));break;case X.CYCLE_ABILITY:this.runInfo.modifiers.length!==0&&this.pageMode===0&&(this.partyVisibility?this.showParty(!1):this.showParty(!0));break}}};o(gm,"RunInfoUiHandler");let hu=gm;const pL=5,Ca=3;var _u=(E=>(E[E.LOAD=0]="LOAD",E[E.SAVE=1]="SAVE",E))(_u||{});const mm=class mm extends hs{constructor(){super(te.SAVE_SLOT),this.scrollCursor=0}setup(){const A=this.getUi();this.saveSlotSelectContainer=a.add.container(0,0),this.saveSlotSelectContainer.setVisible(!1),A.add(this.saveSlotSelectContainer);const s=a.add.rectangle(0,0,a.game.canvas.width/6,-a.game.canvas.height/6,26720);s.setOrigin(0,0),this.saveSlotSelectContainer.add(s),this.sessionSlotsContainerInitialY=-a.game.canvas.height/6+8,this.sessionSlotsContainer=a.add.container(8,this.sessionSlotsContainerInitialY),this.saveSlotSelectContainer.add(this.sessionSlotsContainer),this.saveSlotSelectMessageBoxContainer=a.add.container(0,0),this.saveSlotSelectMessageBoxContainer.setVisible(!1),this.saveSlotSelectContainer.add(this.saveSlotSelectMessageBoxContainer),this.saveSlotSelectMessageBox=Gt(1,-1,318,28),this.saveSlotSelectMessageBox.setOrigin(0,1),this.saveSlotSelectMessageBoxContainer.add(this.saveSlotSelectMessageBox),this.message=Se(8,8,"",k.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.saveSlotSelectMessageBoxContainer.add(this.message),this.sessionSlots=[]}show(A){return A.length<2||!(A[1]instanceof Function)?!1:(super.show(A),this.uiMode=A[0],this.saveSlotSelectCallback=A[1],this.saveSlotSelectContainer.setVisible(!0),this.populateSessionSlots(),this.setScrollCursor(0),this.setCursor(0),!0)}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===X.ACTION||A===X.CANCEL){const I=this.saveSlotSelectCallback;if(A===X.ACTION){const r=this.cursor+this.scrollCursor;if(this.uiMode===0&&!this.sessionSlots[r].hasData)n=!0;else{switch(this.uiMode){case 0:this.saveSlotSelectCallback=null,I==null||I(r);break;case 1:{const L=o(()=>{const N=this.saveSlotSelectCallback;this.saveSlotSelectCallback=null,s.revertMode(),s.showText("",0),s.setMode(te.MESSAGE),N==null||N(r)},"saveAndCallback");if(this.sessionSlots[r].hasData)s.showText(u.t("saveSlotSelectUiHandler:overwriteData"),null,()=>{s.setOverlayMode(te.CONFIRM,()=>{a.gameData.deleteSession(r).then(N=>{N===!1?a.reset(!0):L()})},()=>{s.revertMode(),s.showText("",0)},!1,0,19,2e3)});else if(this.sessionSlots[r].hasData===!1)L();else return!1;break}}R=!0}}else this.saveSlotSelectCallback=null,I==null||I(-1),R=!0}else{const I=this.cursor+this.scrollCursor;switch(A){case X.UP:this.cursor?R=this.cursor===0?this.setCursor(this.cursor):this.setCursor(this.cursor-1,I):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1,I):this.cursor===0&&this.scrollCursor===0&&(this.setScrollCursor(pL-Ca),this.revertSessionSlot(pL-Ca),this.setCursor(Ca-1),R=!0);break;case X.DOWN:this.cursor<Ca-1?R=this.setCursor(this.cursor+1,I):this.scrollCursor<pL-Ca?R=this.setScrollCursor(this.scrollCursor+1,I):this.cursor===Ca-1&&this.scrollCursor===pL-Ca&&(this.setScrollCursor(0),this.revertSessionSlot(Ca-1),this.setCursor(0),R=!0);break;case X.RIGHT:this.sessionSlots[I].hasData&&this.sessionSlots[I].saveData&&(a.ui.setOverlayMode(te.RUN_INFO,this.sessionSlots[I].saveData,mf.SESSION_PREVIEW),R=!0)}}return R?s.playSelect():n&&s.playError(),R||n}populateSessionSlots(){for(let A=0;A<pL;A++){const s=new qh(A);a.add.existing(s),this.sessionSlotsContainer.add(s),this.sessionSlots.push(s),s.load().then(R=>{R&&this.cursor+this.scrollCursor===A&&this.setCursor(A)})}}showText(A,s,R,n,I,r){super.showText(A,s,R,n,I,r),(A==null?void 0:A.indexOf(`
`))===-1?(this.saveSlotSelectMessageBox.setSize(318,28),this.message.setY(-22)):(this.saveSlotSelectMessageBox.setSize(318,42),this.message.setY(-37)),this.saveSlotSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}setCursor(A,s){const R=super.setCursor(A);if(!this.cursorObj){this.cursorObj=a.add.container(0,0);const r=a.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,44,6,6,6,6),L=a.add.image(0,0,"cursor");L.setPosition(160,0),L.setName("rightArrow"),this.cursorObj.add([r,L]),this.sessionSlotsContainer.add(this.cursorObj)}const n=A+this.scrollCursor,I=n*56;if(this.sessionSlots[n]&&this.cursorObj){const r=this.sessionSlots[n].hasData;r?(this.cursorObj.setPosition(145,26+I),this.sessionSlots[n].setPosition(-6,I)):(this.cursorObj.setPosition(151,26+I),this.sessionSlots[n].setPosition(0,I)),this.setArrowVisibility(r)}return Pe(s)||this.revertSessionSlot(s),R}revertSessionSlot(A){const s=this.sessionSlots[A];s&&s.setPosition(0,A*56)}setArrowVisibility(A){var s;this.cursorObj&&((s=this.cursorObj)==null?void 0:s.getByName("rightArrow")).setVisible(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;return R&&(this.scrollCursor=A,this.setCursor(this.cursor,s),a.tweens.add({targets:this.sessionSlotsContainer,y:this.sessionSlotsContainerInitialY-56*A,duration:Ot(325),ease:"Sine.easeInOut"})),R}clear(){super.clear(),this.saveSlotSelectContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.saveSlotSelectCallback=null,this.clearSessionSlots()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearSessionSlots(){this.sessionSlots.splice(0,this.sessionSlots.length),this.sessionSlotsContainer.removeAll(!0)}};o(mm,"SaveSlotSelectUiHandler");let jh=mm;const pm=class pm extends Phaser.GameObjects.Container{constructor(A){super(a,0,A*56),this.slotId=A,this.setup()}setup(){const A=Gt(0,0,304,52);this.add(A),this.loadingLabel=Se(152,26,u.t("saveSlotSelectUiHandler:loading"),k.WINDOW),this.loadingLabel.setOrigin(.5,.5),this.add(this.loadingLabel)}async setupWithData(A){this.remove(this.loadingLabel,!0);const s=Se(8,5,`${bR.getModeName(A.gameMode)||u.t("gameMode:unkown")} - ${u.t("saveSlotSelectUiHandler:wave")} ${A.waveIndex}`,k.WINDOW);this.add(s);const R=Se(8,19,new Date(A.timestamp).toLocaleString(),k.WINDOW);this.add(R);const n=Se(8,33,Df(A.playTime),k.WINDOW);this.add(n);const I=a.add.container(144,4);A.party.forEach((N,l)=>{const C=a.add.container(26*l,0);C.setScale(.75);const U=N.toPokemon(),D=a.addPokemonIcon(U,0,0,0,0),M=Se(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Dr(U.level,1e3)}`,k.PARTY,{fontSize:"54px",color:"#f8f8f8"});M.setShadow(0,0,void 0),M.setStroke("#424242",14),M.setOrigin(1,0),C.add(D),C.add(M),I.add(C),U.destroy()}),this.add(I);const r=a.add.container(148,30);r.setScale(.5);let L=0;for(const N of A.modifiers){const l=N.toModifier(KC[N.className]);if(l instanceof Ft)continue;const C=l==null?void 0:l.getIcon(!1);if(C&&(C.setPosition(24*L,0),r.add(C)),++L===12)break}this.add(r)}load(){return new Promise(A=>{a.gameData.getSession(this.slotId).then(async s=>{if(this.active){if(!s){this.hasData=!1,this.loadingLabel.setText(u.t("saveSlotSelectUiHandler:empty")),A(!1);return}this.hasData=!0,this.saveData=s,await this.setupWithData(s),A(!0)}})})}};o(pm,"SessionSlot");let qh=pm;const oO={fadeIn:Y7,fadeOut:F7},Km=class Km extends nE{start(){super.start(),a.playBgm("menu"),a.ui.setMode(te.STARTER_SELECT,A=>{a.ui.clearText(),a.ui.setMode(te.SAVE_SLOT,_u.SAVE,s=>{if(s===-1)return a.clearPhaseQueue(),a.pushPhase(new NI),this.end();a.sessionSlotId=s,this.initBattle(A)})})}initBattle(A){const s=a.getPlayerParty(),R=[];A.forEach((n,I)=>{!I&&xe.STARTER_SPECIES_OVERRIDE&&(n.species=$e(xe.STARTER_SPECIES_OVERRIDE));const r=a.gameData.getSpeciesDexAttrProps(n.species,n.dexAttr);let L=Math.min(r.formIndex,Math.max(n.species.forms.length-1,0));n.species.speciesId in xe.STARTER_FORM_OVERRIDES&&!Pe(xe.STARTER_FORM_OVERRIDES[n.species.speciesId])&&n.species.forms[xe.STARTER_FORM_OVERRIDES[n.species.speciesId]]&&(L=xe.STARTER_FORM_OVERRIDES[n.species.speciesId]);let N=n.species.malePercent!==null?r.female?At.FEMALE:At.MALE:At.GENDERLESS;xe.GENDER_OVERRIDE!==null&&(N=xe.GENDER_OVERRIDE);const l=a.gameData.dexData[n.species.speciesId].ivs.slice(0),C=a.addPlayerPokemon(n.species,a.gameMode.getStartingLevel(),n.abilityIndex,L,N,r.shiny,r.variant,l,n.nature);n.moveset&&C.tryPopulateMoveset(n.moveset),n.passive&&(C.passive=!0),C.luck=a.gameData.getDexAttrLuck(a.gameData.dexData[n.species.speciesId].caughtAttr),n.pokerus&&(C.pokerus=!0),n.nickname&&(C.nickname=n.nickname),Pe(n.teraType)?C.teraType=C.species.type1:C.teraType=n.teraType,(a.gameMode.isSplicedOnly||xe.STARTER_FUSION_OVERRIDE)&&C.generateFusionSpecies(!0),C.setVisible(!1),PR(rO.STARTER_MODIFY,C),s.push(C),R.push(C.loadAssets())}),Zf(),Xf(s[0]),Promise.all(R).then(()=>{oO.fadeOut(a,a.sound.get("menu"),500,!0),a.time.delayedCall(500,()=>a.playBgm()),a.gameMode.isClassic?a.gameData.gameStats.classicSessionsPlayed++:a.gameData.gameStats.endlessSessionsPlayed++,a.newBattle(),a.arena.init(),a.sessionPlayTime=0,a.lastSavePlayTime=0,a.getPlayerParty().forEach(n=>{a.triggerPokemonFormChange(n,rI)}),this.end()})}};o(Km,"SelectStarterPhase");let Pu=Km;const Ko=class Ko extends nE{constructor(){super(...arguments),this.loaded=!1}start(){super.start(),a.ui.clearText(),a.ui.fadeIn(250),a.playBgm("title",!0),a.gameData.getSession((Ut==null?void 0:Ut.lastSessionSlot)??-1).then(A=>{if(A){this.lastSessionData=A;const R=`${Sl(A.arena.biome)}_bg`;a.arenaBg.setTexture(R)}this.showOptions()}).catch(A=>{console.error(A),this.showOptions()})}showOptions(){const A=[];Ut&&Ut.lastSessionSlot>-1&&A.push({label:u.t("continue",{ns:"menu"}),handler:o(()=>(this.loadSaveSlot(this.lastSessionData||!Ut?-1:Ut.lastSessionSlot),!0),"handler")}),A.push({label:u.t("menu:newGame"),handler:o(()=>{const R=o(r=>{this.gameMode=r,a.ui.setMode(te.MESSAGE),a.ui.clearText(),this.end()},"setModeAndEnd"),{gameData:n}=a,I=[];return I.push({label:bR.getModeName(hA.CLASSIC),handler:o(()=>(R(hA.CLASSIC),!0),"handler")}),I.push({label:u.t("menu:dailyRun"),handler:o(()=>(this.initDailyRun(),!0),"handler")}),n.isUnlocked(Qs.ENDLESS_MODE)&&(I.push({label:bR.getModeName(hA.CHALLENGE),handler:o(()=>(R(hA.CHALLENGE),!0),"handler")}),I.push({label:bR.getModeName(hA.ENDLESS),handler:o(()=>(R(hA.ENDLESS),!0),"handler")}),n.isUnlocked(Qs.SPLICED_ENDLESS_MODE)&&I.push({label:bR.getModeName(hA.SPLICED_ENDLESS),handler:o(()=>(R(hA.SPLICED_ENDLESS),!0),"handler")})),I.push({label:u.t("menu:cancel"),handler:o(()=>(a.clearPhaseQueue(),a.pushPhase(new Ko),super.end(),!0),"handler")}),a.ui.showText(u.t("menu:selectGameMode"),null,()=>a.ui.setOverlayMode(te.OPTION_SELECT,{options:I})),!0},"handler")},{label:u.t("menu:loadGame"),handler:o(()=>(a.ui.setOverlayMode(te.SAVE_SLOT,_u.LOAD,R=>{if(R===-1)return this.showOptions();this.loadSaveSlot(R)}),!0),"handler")},{label:u.t("menu:runHistory"),handler:o(()=>(a.ui.setOverlayMode(te.RUN_HISTORY),!0),"handler"),keepOpen:!0},{label:u.t("menu:settings"),handler:o(()=>(a.ui.setOverlayMode(te.SETTINGS),!0),"handler"),keepOpen:!0});const s={options:A,noCancel:!0,yOffset:47};a.ui.setMode(te.TITLE,s)}loadSaveSlot(A){a.sessionSlotId=A>-1||!Ut?A:Ut.lastSessionSlot,a.ui.setMode(te.MESSAGE),a.ui.resetModeChain(),a.gameData.loadSession(A,A===-1?this.lastSessionData:void 0).then(s=>{s?(this.loaded=!0,a.ui.showText(u.t("menu:sessionSuccess"),null,()=>this.end())):this.end()}).catch(s=>{console.error(s),a.ui.showText(u.t("menu:failedToLoadSession"),null)})}initDailyRun(){a.ui.clearText(),a.ui.setMode(te.SAVE_SLOT,_u.SAVE,A=>{if(a.clearPhaseQueue(),A===-1)return a.pushPhase(new Ko),super.end();a.sessionSlotId=A;const s=o(R=>{a.gameMode=QC(hA.DAILY),a.eventManager.startEventChallenges(),a.setSeed(R),a.resetSeed(0),a.money=a.gameMode.getStartingMoney();const n=wZ(R),I=a.gameMode.getStartingLevel(),r=a.getPlayerParty(),L=[];for(const l of n){const C=a.gameData.getSpeciesDexAttrProps(l.species,l.dexAttr),U=Math.min(C.formIndex,Math.max(l.species.forms.length-1,0)),D=l.species.malePercent!==null?C.female?At.FEMALE:At.MALE:At.GENDERLESS,M=a.addPlayerPokemon(l.species,I,l.abilityIndex,U,D,C.shiny,C.variant,void 0,l.nature);M.setVisible(!1),r.push(M),L.push(M.loadAssets())}Ti(r,yE.DAILY_STARTER);const N=Array(3).fill(null).map(()=>j.EXP_SHARE().withIdFromFunc(j.EXP_SHARE).newModifier()).concat(Array(3).fill(null).map(()=>j.GOLDEN_EXP_CHARM().withIdFromFunc(j.GOLDEN_EXP_CHARM).newModifier())).concat([j.MAP().withIdFromFunc(j.MAP).newModifier()]).concat(D9(r)).filter(l=>l!==null);for(const l of N)a.addModifier(l,!0,!1,!1,!0);a.updateModifiers(!0,!0),Promise.all(L).then(()=>{a.time.delayedCall(500,()=>a.playBgm()),a.gameData.gameStats.dailyRunSessionsPlayed++,a.newArena(a.gameMode.getStartingBiome()),a.newBattle(),a.arena.init(),a.sessionPlayTime=0,a.lastSavePlayTime=0,this.end()})},"generateDaily");if(!ji||ek)yZ().then(R=>{if(R)s(R);else throw new Error("Daily run seed is null!")}).catch(R=>{console.error(`Failed to load daily run:
`,R)});else{let R=btoa(new Date().toISOString().substring(0,10));Pe(xe.DAILY_RUN_SEED_OVERRIDE)||(R=xe.DAILY_RUN_SEED_OVERRIDE),s(R)}})}end(){if(!this.loaded&&!a.gameMode.isDaily?(a.arena.preloadBgm(),a.gameMode=QC(this.gameMode),this.gameMode===hA.CHALLENGE?a.pushPhase(new Du):a.pushPhase(new Pu),a.newArena(a.gameMode.getStartingBiome())):a.playBgm(),a.pushPhase(new $r(this.loaded)),this.loaded){const A=a.getPokemonAllowedInBattle().length;if(a.pushPhase(new ts(0,!0,!0)),a.currentBattle.double&&A>1&&a.pushPhase(new ts(1,!0,!0)),a.currentBattle.battleType!==Ht.TRAINER&&(a.currentBattle.waveIndex>1||!a.gameMode.isDaily)){const s=a.currentBattle.double?2:1;A>s&&(a.pushPhase(new pn(0,a.currentBattle.double)),a.currentBattle.double&&a.pushPhase(new pn(1,a.currentBattle.double)))}}for(const A of Object.keys(a.gameData.achvUnlocks))Us.hasOwnProperty(A)&&A!=="CLASSIC_VICTORY"&&a.validateVoucher(Us[A]);super.end()}};o(Ko,"TitlePhase");let NI=Ko;const Fm=class Fm extends nE{constructor(A){super(),this.endCardPhase=A}start(){super.start();const A=o(()=>{a.gameData.saveAll(!0,!0,!0).then(s=>{if(!s)return a.reset(!0);a.gameData.tryClearSession(a.sessionSlotId).then(R=>{if(!R[0])return a.reset(!0);a.reset(),a.unshiftPhase(new NI),this.end()})})},"saveAndReset");this.endCardPhase?a.ui.fadeOut(500).then(()=>{var s,R;a.ui.getMessageHandler().bg.setVisible(!0),(s=this.endCardPhase)==null||s.endCard.destroy(),(R=this.endCardPhase)==null||R.text.destroy(),A()}):A()}};o(Fm,"PostGameOverPhase");let e_=Fm;const Ym=class Ym extends FE{constructor(A,s){super(A),this.species=s}doReward(){return new Promise(A=>{const s=this.modifierType.newModifier();a.addModifier(s),a.playSound("level_up_fanfare"),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:beatModeFirstTime",{speciesName:this.species.name,gameMode:a.gameMode.getName(),newModifier:s==null?void 0:s.type.name}),null,()=>{A()},null,!0,1500)})}};o(Ym,"RibbonModifierRewardPhase");let t_=Ym;const Wm=class Wm extends nE{constructor(A){super(),this.unlockable=A}start(){a.time.delayedCall(2e3,()=>{a.gameData.unlocks[this.unlockable]=!0,a.playSound("level_up_fanfare"),a.ui.setMode(te.MESSAGE),a.ui.showText(u.t("battle:unlockedSomething",{unlockedThing:bZ(this.unlockable)}),null,()=>{a.time.delayedCall(1500,()=>a.arenaBg.setVisible(!0)),this.end()},null,!0,1500)})}};o(Wm,"UnlockPhase");let ir=Wm;const ym=class ym{constructor(A,s){const R=A instanceof $A?A:null;this.player=s,this.typeId=R?R.type.id:A.typeId,R?"getPregenArgs"in A.type&&(this.typePregenArgs=A.type.getPregenArgs()):A.typePregenArgs&&(this.typePregenArgs=A.typePregenArgs),this.args=R?R.getArgs():A.args||[],this.stackCount=A.stackCount,this.className=R?R.constructor.name:A.className}toModifier(A){const s=l9(this.typeId);if(!s)return null;try{let R=s();R.id=this.typeId,R instanceof YE&&(R=R.generateType(this.player?a.getPlayerParty():a.getEnemyField(),this.typePregenArgs));const n=Reflect.construct(A,[R].concat(this.args).concat(this.stackCount));return n.stackCount>n.getMaxStackCount()&&(n.stackCount=n.getMaxStackCount()),n}catch(R){return console.error(R),null}}};o(ym,"ModifierData");let AI=ym;const wm=class wm{constructor(A){Pe(A)||Object.assign(this,A),this.spriteScale=this.spriteScale??-1,this.ability=this.ability??-1,this.passive=this.passive??-1,this.nature=this.nature??-1,this.types=this.types??[],this.hitsRecCount=this.hitsRecCount??0}resetHitReceivedCount(){this.hitsRecCount=0}};o(wm,"CustomPokemonData");let Ms=wm;const vm=class vm{constructor(A,s=!1){var n,I,r;const R=A instanceof kR?A:null;this.id=A.id,this.player=R?R.isPlayer():A.player,this.species=R?R.species.speciesId:A.species,this.nickname=R?R.nickname:A.nickname,this.formIndex=Math.max(Math.min(A.formIndex,$e(this.species).forms.length-1),0),this.abilityIndex=A.abilityIndex,this.passive=A.passive,this.shiny=A.shiny,this.variant=A.variant,this.pokeball=A.pokeball,this.level=A.level,this.exp=A.exp,s||(this.levelExp=A.levelExp),this.gender=A.gender,s||(this.hp=A.hp),this.stats=A.stats,this.ivs=A.ivs,this.nature=A.nature!==void 0?A.nature:0,this.friendship=A.friendship!==void 0?A.friendship:$e(this.species).baseFriendship,this.metLevel=A.metLevel||5,this.metBiome=A.metBiome!==void 0?A.metBiome:-1,this.metSpecies=A.metSpecies,this.metWave=A.metWave??(this.metBiome===-1?-1:0),this.luck=A.luck!==void 0?A.luck:A.shiny?A.variant+1:0,s||(this.pauseEvolutions=!!A.pauseEvolutions,this.evoCounter=A.evoCounter??0),this.pokerus=!!A.pokerus,this.teraType=A.teraType,this.isTerastallized=A.isTerastallized||!1,this.stellarTypesBoosted=A.stellarTypesBoosted||[],this.fusionSpecies=R?(n=R.fusionSpecies)==null?void 0:n.speciesId:A.fusionSpecies,this.fusionFormIndex=A.fusionFormIndex,this.fusionAbilityIndex=A.fusionAbilityIndex,this.fusionShiny=A.fusionShiny,this.fusionVariant=A.fusionVariant,this.fusionGender=A.fusionGender,this.fusionLuck=A.fusionLuck!==void 0?A.fusionLuck:A.fusionShiny?A.fusionVariant+1:0,this.fusionCustomPokemonData=new Ms(A.fusionCustomPokemonData),this.fusionTeraType=A.fusionTeraType??0,this.usedTMs=A.usedTMs??[],this.customPokemonData=new Ms(A.customPokemonData),this.natureOverride=A.natureOverride,this.mysteryEncounterPokemonData=A.mysteryEncounterPokemonData?new Ms(A.mysteryEncounterPokemonData):null,this.fusionMysteryEncounterPokemonData=A.fusionMysteryEncounterPokemonData?new Ms(A.fusionMysteryEncounterPokemonData):null,s||(this.boss=A instanceof Fs&&!!A.bossSegments||!this.player&&!!A.boss,this.bossSegments=A.bossSegments),R?(this.moveset=R.moveset,s||(this.status=R.status,this.player&&R.summonData&&(this.summonData=R.summonData,this.summonDataSpeciesFormIndex=this.getSummonDataSpeciesFormIndex()))):(this.moveset=(A.moveset||[new Lt(t.TACKLE),new Lt(t.GROWL)]).filter(L=>L).map(L=>new Lt(L.moveId,L.ppUsed,L.ppUp,L.virtual,L.maxPpOverride)),s||(this.status=A.status?new iI(A.status.effect,A.status.toxicTurnCount,A.status.sleepTurnsRemaining):null),this.summonData=new MN,!s&&A.summonData&&(this.summonData.stats=A.summonData.stats,this.summonData.statStages=A.summonData.statStages,this.summonData.moveQueue=A.summonData.moveQueue,this.summonData.abilitySuppressed=A.summonData.abilitySuppressed,this.summonData.abilitiesApplied=A.summonData.abilitiesApplied,this.summonData.ability=A.summonData.ability,this.summonData.moveset=(I=A.summonData.moveset)==null?void 0:I.map(L=>Lt.loadMove(L)),this.summonData.types=A.summonData.types,this.summonData.speciesForm=A.summonData.speciesForm,this.summonDataSpeciesFormIndex=A.summonDataSpeciesFormIndex,A.summonData.tags?this.summonData.tags=(r=A.summonData.tags)==null?void 0:r.map(L=>cj(L)):this.summonData.tags=[]))}toPokemon(A,s=0,R=!1){const n=$e(this.species),I=this.player?a.addPlayerPokemon(n,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this,r=>{this.nickname&&(r.nickname=this.nickname)}):a.addEnemyPokemon(n,this.level,A===Ht.TRAINER?!R||!(s%2)?oe.TRAINER:oe.TRAINER_PARTNER:oe.NONE,this.boss,!1,this);return this.summonData&&(this.summonData.speciesForm&&(this.summonData.speciesForm=ms(this.summonData.speciesForm.speciesId,this.summonDataSpeciesFormIndex)),I.primeSummonData(this.summonData)),I}getSummonDataSpeciesFormIndex(){return this.summonData.speciesForm?this.summonData.speciesForm.formIndex:0}};o(vm,"PokemonData");let Ks=vm;const Vm=class Vm{constructor(A){this.id=A.id,this.value=A.value,this.severity=A.severity}toChallenge(){return Uh(this)}};o(Vm,"ChallengeData");let TS=Vm;const xm=class xm{constructor(A){const s=A instanceof ps?A:null;this.trainerType=s?s.config.trainerType:A.trainerType,this.variant=A.hasOwnProperty("variant")?A.variant:A.female?LA.FEMALE:LA.DEFAULT,this.partyTemplateIndex=A.partyMemberTemplateIndex,this.nameKey=A.nameKey,this.partnerNameKey=A.partnerNameKey}toTrainer(){return new ps(this.trainerType,this.variant,this.partyTemplateIndex,this.nameKey,this.partnerNameKey)}};o(xm,"TrainerData");let SS=xm;var Nt=(E=>(E[E.NONE=0]="NONE",E[E.MISTY=1]="MISTY",E[E.ELECTRIC=2]="ELECTRIC",E[E.GRASSY=3]="GRASSY",E[E.PSYCHIC=4]="PSYCHIC",E))(Nt||{});const bm=class bm{constructor(A,s){this.terrainType=A,this.turnsLeft=s||0}lapse(){return this.turnsLeft?!!--this.turnsLeft:!0}getAttackTypeMultiplier(A){switch(this.terrainType){case 2:if(A===i.ELECTRIC)return 1.3;break;case 3:if(A===i.GRASS)return 1.3;break;case 4:if(A===i.PSYCHIC)return 1.3;break}return 1}isMoveTerrainCancelled(A,s,R){switch(this.terrainType){case 4:if(!R.hasAttr(OO))return R.getPriority(A)>0&&A.getOpponents().some(n=>s.includes(n.getBattlerIndex())&&n.isGrounded())}return!1}};o(bm,"Terrain");let Gu=bm;function AX(E){switch(E){case 1:return u.t("terrain:misty");case 2:return u.t("terrain:electric");case 3:return u.t("terrain:grassy");case 4:return u.t("terrain:psychic")}return""}o(AX,"getTerrainName");function EX(E){switch(E){case 1:return[232,136,200];case 2:return[248,248,120];case 3:return[120,200,80];case 4:return[160,64,160]}return[0,0,0]}o(EX,"getTerrainColor");const km=class km{constructor(A,s){this.weatherType=A,this.turnsLeft=this.isImmutable()?0:s||0}lapse(){return this.isImmutable()?!0:this.turnsLeft?!!--this.turnsLeft:!0}isImmutable(){switch(this.weatherType){case Oe.HEAVY_RAIN:case Oe.HARSH_SUN:case Oe.STRONG_WINDS:return!0}return!1}isDamaging(){switch(this.weatherType){case Oe.SANDSTORM:case Oe.HAIL:return!0}return!1}isTypeDamageImmune(A){switch(this.weatherType){case Oe.SANDSTORM:return A===i.GROUND||A===i.ROCK||A===i.STEEL;case Oe.HAIL:return A===i.ICE}return!1}getAttackTypeMultiplier(A){switch(this.weatherType){case Oe.SUNNY:case Oe.HARSH_SUN:if(A===i.FIRE)return 1.5;if(A===i.WATER)return .5;break;case Oe.RAIN:case Oe.HEAVY_RAIN:if(A===i.FIRE)return .5;if(A===i.WATER)return 1.5;break}return 1}isMoveWeatherCancelled(A,s){const R=A.getMoveType(s);switch(this.weatherType){case Oe.HARSH_SUN:return s instanceof m&&R===i.WATER;case Oe.HEAVY_RAIN:return s instanceof m&&R===i.FIRE}return!1}isEffectSuppressed(){const A=a.getField(!0);for(const s of A){let R=s.getAbility().getAttrs(PI)[0];if(R||(R=s.hasPassive()?s.getPassiveAbility().getAttrs(PI)[0]:null),R&&(!this.isImmutable()||R.affectsImmutable))return!0}return!1}};o(km,"Weather");let NS=km;function O6(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyStartMessage");case Oe.RAIN:return u.t("weather:rainStartMessage");case Oe.SANDSTORM:return u.t("weather:sandstormStartMessage");case Oe.HAIL:return u.t("weather:hailStartMessage");case Oe.SNOW:return u.t("weather:snowStartMessage");case Oe.FOG:return u.t("weather:fogStartMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainStartMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunStartMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsStartMessage")}return null}o(O6,"getWeatherStartMessage");function sX(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyLapseMessage");case Oe.RAIN:return u.t("weather:rainLapseMessage");case Oe.SANDSTORM:return u.t("weather:sandstormLapseMessage");case Oe.HAIL:return u.t("weather:hailLapseMessage");case Oe.SNOW:return u.t("weather:snowLapseMessage");case Oe.FOG:return u.t("weather:fogLapseMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainLapseMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunLapseMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsLapseMessage")}return null}o(sX,"getWeatherLapseMessage");function RX(E,A){switch(E){case Oe.SANDSTORM:return u.t("weather:sandstormDamageMessage",{pokemonNameWithAffix:ee(A)});case Oe.HAIL:return u.t("weather:hailDamageMessage",{pokemonNameWithAffix:ee(A)})}return null}o(RX,"getWeatherDamageMessage");function OX(E){switch(E){case Oe.SUNNY:return u.t("weather:sunnyClearMessage");case Oe.RAIN:return u.t("weather:rainClearMessage");case Oe.SANDSTORM:return u.t("weather:sandstormClearMessage");case Oe.HAIL:return u.t("weather:hailClearMessage");case Oe.SNOW:return u.t("weather:snowClearMessage");case Oe.FOG:return u.t("weather:fogClearMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainClearMessage");case Oe.HARSH_SUN:return u.t("weather:harshSunClearMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsClearMessage")}return null}o(OX,"getWeatherClearMessage");function nX(E){switch(E){case Oe.HARSH_SUN:return u.t("weather:harshSunContinueMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainContinueMessage");case Oe.STRONG_WINDS:return u.t("weather:strongWindsContinueMessage")}return null}o(nX,"getLegendaryWeatherContinuesMessage");function aX(E){switch(E){case Oe.HARSH_SUN:return u.t("weather:harshSunEffectMessage");case Oe.HEAVY_RAIN:return u.t("weather:heavyRainEffectMessage")}return u.t("weather:defaultEffectMessage")}o(aX,"getWeatherBlockMessage");function iX(E){switch(E){case Nt.MISTY:return u.t("terrain:mistyStartMessage");case Nt.ELECTRIC:return u.t("terrain:electricStartMessage");case Nt.GRASSY:return u.t("terrain:grassyStartMessage");case Nt.PSYCHIC:return u.t("terrain:psychicStartMessage");default:return console.warn("getTerrainStartMessage not defined. Using default null"),null}}o(iX,"getTerrainStartMessage");function IX(E){switch(E){case Nt.MISTY:return u.t("terrain:mistyClearMessage");case Nt.ELECTRIC:return u.t("terrain:electricClearMessage");case Nt.GRASSY:return u.t("terrain:grassyClearMessage");case Nt.PSYCHIC:return u.t("terrain:psychicClearMessage");default:return console.warn("getTerrainClearMessage not defined. Using default null"),null}}o(IX,"getTerrainClearMessage");function rX(E,A){return A===Nt.MISTY?u.t("terrain:mistyBlockMessage",{pokemonNameWithAffix:ee(E)}):u.t("terrain:defaultBlockMessage",{pokemonNameWithAffix:ee(E),terrainName:AX(A)})}o(rX,"getTerrainBlockMessage");function dk(E){var R;let A=[];const s=E.getTimeOfDay()<2;switch(E.biomeType){case T.GRASS:A=[{weatherType:Oe.NONE,weight:7}],s&&A.push({weatherType:Oe.SUNNY,weight:3});break;case T.TALL_GRASS:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:5}],s&&A.push({weatherType:Oe.SUNNY,weight:8});break;case T.FOREST:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:5}];break;case T.SEA:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.RAIN,weight:12}];break;case T.SWAMP:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.RAIN,weight:4},{weatherType:Oe.FOG,weight:1}];break;case T.BEACH:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:3}],s&&A.push({weatherType:Oe.SUNNY,weight:5});break;case T.LAKE:A=[{weatherType:Oe.NONE,weight:10},{weatherType:Oe.RAIN,weight:5},{weatherType:Oe.FOG,weight:1}];break;case T.SEABED:A=[{weatherType:Oe.RAIN,weight:1}];break;case T.BADLANDS:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.SANDSTORM,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:5});break;case T.DESERT:A=[{weatherType:Oe.SANDSTORM,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:2});break;case T.ICE_CAVE:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.SNOW,weight:4},{weatherType:Oe.HAIL,weight:1}];break;case T.MEADOW:A=[{weatherType:Oe.NONE,weight:2}],s&&A.push({weatherType:Oe.SUNNY,weight:2});case T.VOLCANO:A=[{weatherType:s?Oe.SUNNY:Oe.NONE,weight:1}];break;case T.GRAVEYARD:A=[{weatherType:Oe.NONE,weight:3},{weatherType:Oe.FOG,weight:1}];break;case T.JUNGLE:A=[{weatherType:Oe.NONE,weight:8},{weatherType:Oe.RAIN,weight:2}];break;case T.SNOWY_FOREST:A=[{weatherType:Oe.SNOW,weight:7},{weatherType:Oe.HAIL,weight:1}];break;case T.ISLAND:A=[{weatherType:Oe.NONE,weight:5},{weatherType:Oe.RAIN,weight:1}],s&&A.push({weatherType:Oe.SUNNY,weight:2});break}if(E.biomeType===T.TOWN&&EE.isEventActive()&&((R=EE.getWeather())==null||R.map(n=>A.push(n))),A.length>1){let n=0;for(const L of A)n+=L.weight;const I=He(n);let r=0;for(const L of A)if(r+=L.weight,I<r)return L.weatherType}return A.length?A[0].weatherType:Oe.NONE}o(dk,"getRandomWeatherType");const Zm=class Zm{constructor(A){const s=A instanceof n0?A:null;this.biome=s?s.biomeType:A.biome,this.weather=s?s.weather:A.weather?new NS(A.weather.weatherType,A.weather.turnsLeft):null,this.terrain=s?s.terrain:A.terrain?new Gu(A.terrain.terrainType,A.terrain.turnsLeft):null,this.playerTerasUsed=(s?s.playerTerasUsed:A.playerTerasUsed)??0,this.tags=[],A.tags&&(this.tags=A.tags.map(R=>sj(R)))}};o(Zm,"ArenaData");let lS=Zm;const Xm=class Xm extends HE{constructor(A=!1){super(),this.firstRibbons=[],this.isVictory=A}start(){var A;if(super.start(),a.hideAbilityBar(),a.gameMode.isClassic&&a.currentBattle.waveIndex>200&&(this.isVictory=!0),!this.isVictory&&((A=a.currentBattle.mysteryEncounter)!=null&&A.onGameOver)&&!a.currentBattle.mysteryEncounter.onGameOver())return this.end();if(this.isVictory&&a.gameMode.isEndless){const s=a.gameData.gender??Jt.UNSET,R=Jt[s].toLowerCase();a.ui.showDialogue(u.t("miscDialogue:ending_endless",{context:R}),u.t("miscDialogue:ending_name"),0,()=>this.handleGameOver())}else this.isVictory||!a.enableRetries?this.handleGameOver():a.ui.showText(u.t("battle:retryBattle"),null,()=>{a.ui.setMode(te.CONFIRM,()=>{a.ui.fadeOut(1250).then(()=>{a.reset(),a.clearPhaseQueue(),a.gameData.loadSession(a.sessionSlotId).then(()=>{a.pushPhase(new $r(!0));const s=a.getPokemonAllowedInBattle().length;a.pushPhase(new ts(0)),a.currentBattle.double&&s>1&&a.pushPhase(new ts(1)),a.currentBattle.waveIndex>1&&a.currentBattle.battleType!==Ht.TRAINER&&(a.pushPhase(new pn(0,a.currentBattle.double)),a.currentBattle.double&&s>1&&a.pushPhase(new pn(1,a.currentBattle.double))),a.ui.fadeIn(1250),this.end()})})},()=>this.handleGameOver(),!1,0,0,1e3)})}handleGameOver(){const A=o(s=>{a.disableMenu=!0,a.time.delayedCall(1e3,()=>{let R=!1;if(this.isVictory&&s)if(a.gameMode.isClassic){R=a.validateAchv(ht.CLASSIC_VICTORY),a.validateAchv(ht.UNEVOLVED_CLASSIC_VICTORY),a.gameData.gameStats.sessionsWon++;for(const r of a.getPlayerParty())this.awardRibbon(r),r.species.getRootSpeciesId()!==r.species.getRootSpeciesId(!0)&&this.awardRibbon(r,!0)}else a.gameMode.isDaily&&s&&a.gameData.gameStats.dailyRunSessionsWon++;const n=this.isVictory?1e4:5e3;a.fadeOutBgm(n,!0);const I=a.getField().filter(r=>r==null?void 0:r.isActive(!0));I.map(r=>r.hideInfo()),a.ui.fadeOut(n).then(()=>{I.map(L=>L.setVisible(!1)),a.setFieldScale(1,!0),a.clearPhaseQueue(),a.ui.clearText(),this.isVictory&&a.gameMode.isChallenge&&a.gameMode.challenges.forEach(L=>a.validateAchvs(pA,L));const r=o(L=>{if(this.isVictory&&s){this.handleUnlocks();for(const N of this.firstRibbons)a.unshiftPhase(new t_(j.VOUCHER_PLUS,N));R||a.unshiftPhase(new zh(j.VOUCHER_PREMIUM))}this.getRunHistoryEntry().then(N=>{a.gameData.saveRunHistory(N,this.isVictory),a.pushPhase(new e_(L)),this.end()})},"clear");if(this.isVictory&&a.gameMode.isClassic){const L="miscDialogue:ending";if(!a.ui.shouldSkipDialogue(L))a.ui.fadeIn(500).then(()=>{const N=a.gameData.gender??Jt.UNSET,l=Jt[N].toLowerCase(),C=u.t(L,{context:l});a.charSprite.showCharacter(`rival_${a.gameData.gender===Jt.FEMALE?"m":"f"}`,k0(C)).then(()=>{a.ui.showDialogue(L,a.gameData.gender===Jt.FEMALE?tE[c.RIVAL].name:tE[c.RIVAL].nameFemale,null,()=>{a.ui.fadeOut(500).then(()=>{a.charSprite.hide().then(()=>{const U=new cu;a.unshiftPhase(U),r(U)})})})})});else{const N=new cu;a.unshiftPhase(N),r(N)}}else r()})})},"doGameOver");!ji||ek?_O.savedata.session.newclear({slot:a.sessionSlotId,isVictory:this.isVictory,clientSessionId:d9}).then(s=>A(!!s)):this.isVictory?a.gameData.offlineNewClear().then(s=>{A(s)}):A(!1)}handleUnlocks(){this.isVictory&&a.gameMode.isClassic&&(a.gameData.unlocks[Qs.ENDLESS_MODE]||a.unshiftPhase(new ir(Qs.ENDLESS_MODE)),a.getPlayerParty().filter(A=>A.fusionSpecies).length&&!a.gameData.unlocks[Qs.SPLICED_ENDLESS_MODE]&&a.unshiftPhase(new ir(Qs.SPLICED_ENDLESS_MODE)),a.gameData.unlocks[Qs.MINI_BLACK_HOLE]||a.unshiftPhase(new ir(Qs.MINI_BLACK_HOLE)),!a.gameData.unlocks[Qs.EVIOLITE]&&a.getPlayerParty().some(A=>A.getSpeciesForm(!0).speciesId in jt)&&a.unshiftPhase(new ir(Qs.EVIOLITE)))}awardRibbon(A,s=!1){const R=$e(A.species.speciesId);a.gameData.incrementRibbonCount(R,s)===1&&this.firstRibbons.push($e(A.species.getRootSpeciesId(s)))}async getRunHistoryEntry(){var s;const A=await a.gameData.getSession(a.sessionSlotId);return{seed:a.seed,playTime:a.sessionPlayTime,gameMode:a.gameMode.modeId,party:a.getPlayerParty().map(R=>new Ks(R)),enemyParty:a.getEnemyParty().map(R=>new Ks(R)),modifiers:A?A.modifiers:a.findModifiers(()=>!0).map(R=>new AI(R,!0)),enemyModifiers:A?A.enemyModifiers:a.findModifiers(()=>!0,!1).map(R=>new AI(R,!1)),arena:new lS(a.arena),pokeballCounts:a.pokeballCounts,money:Math.floor(a.money),score:a.score,waveIndex:a.currentBattle.waveIndex,battleType:a.currentBattle.battleType,trainer:a.currentBattle.trainer?new SS(a.currentBattle.trainer):null,gameVersion:a.game.config.gameVersion,timestamp:new Date().getTime(),challenges:a.gameMode.challenges.map(R=>new TS(R)),mysteryEncounterType:((s=a.currentBattle.mysteryEncounter)==null?void 0:s.encounterType)??-1,mysteryEncounterSaveData:a.mysteryEncounterSaveData,playerFaints:a.arena.playerFaints}}};o(Xm,"GameOverPhase");let gO=Xm;const Fo=class Fo extends HE{constructor(A){super(),this.isVictory=A}start(){for(super.start(),a.phaseQueue=a.phaseQueue.filter(s=>s instanceof Fo?(this.isVictory||(this.isVictory=s.isVictory),!1):!0);a.tryRemoveUnshiftedPhase(s=>s instanceof Fo?(this.isVictory||(this.isVictory=s.isVictory),!0):!1););a.gameData.gameStats.battles++,a.gameMode.isEndless&&a.currentBattle.waveIndex+1>a.gameData.gameStats.highestEndlessWave&&(a.gameData.gameStats.highestEndlessWave=a.currentBattle.waveIndex+1),this.isVictory&&(a.currentBattle.addBattleScore(),a.currentBattle.trainer&&a.gameData.gameStats.trainersDefeated++),a.gameMode.isEndless&&a.currentBattle.waveIndex>=5850&&(a.clearPhaseQueue(),a.unshiftPhase(new gO(!0)));for(const s of a.getField())s!=null&&s.battleSummonData&&(s.battleSummonData.waveTurnCount=1);for(const s of a.getPokemonAllowedInBattle())Dj(sN,s,!1,this.isVictory);a.currentBattle.moneyScattered&&a.currentBattle.pickUpScatteredMoney(),a.clearEnemyHeldItemModifiers();const A=a.findModifiers(s=>s instanceof Ri||s instanceof dN);for(const s of A){const R=[];s instanceof dN&&R.push(a.getPokemonById(s.pokemonId)),s.lapse(...R)||a.removeModifier(s)}a.updateModifiers(),this.end()}};o(Fo,"BattleEndPhase");let Qa=Fo;const Yo=class Yo extends HE{start(){for(super.start(),a.phaseQueue=a.phaseQueue.filter(A=>!(A instanceof Yo));a.tryRemoveUnshiftedPhase(A=>A instanceof Yo););a.newBattle(),this.end()}};o(Yo,"NewBattlePhase");let lI=Yo;const Qm=class Qm extends nE{start(){super.start();const A=a.currentBattle.waveIndex,s=A%1e3?A%250?V.COMMON:V.GREAT:V.ULTRA;Ti(a.getEnemyParty(),yE.ENEMY_BUFF);const R=Math.ceil(A/250);for(let n=0;n<R;n++)a.addEnemyModifier(u9(s,a.findModifiers(I=>I instanceof Yn,!1)),!0,!0);a.updateModifiers(!1,!0),this.end()}};o(Qm,"AddEnemyBuffModifierPhase");let A_=Qm;var Hk=(E=>(E.EGG_COUNT_CHANGED="onEggCountChanged",E))(Hk||{});const $m=class $m extends Event{constructor(A){super("onEggCountChanged"),this.eggCount=A}};o($m,"EggCountChangedEvent");let E_=$m;const Jm=class Jm extends Phaser.GameObjects.Container{constructor(A){super(a,0,0),this.WINDOW_DEFAULT_WIDTH=37,this.WINDOW_MEDIUM_WIDTH=42,this.WINDOW_HEIGHT=26,this.onEggCountChangedEvent=R=>this.onEggCountChanged(R),this.eggCount=A,a.ui.getHandler().eventTarget.addEventListener(Hk.EGG_COUNT_CHANGED,this.onEggCountChangedEvent),this.setup()}setup(){const A=this.eggCount>9?this.WINDOW_MEDIUM_WIDTH:this.WINDOW_DEFAULT_WIDTH;this.eggCountWindow=Gt(5,5,A,this.WINDOW_HEIGHT),this.setVisible(this.eggCount>1),this.add(this.eggCountWindow);const s=a.add.sprite(19,18,"egg","egg_0");s.setScale(.32),this.eggCountText=Se(28,13,`${this.eggCount}`,k.MESSAGE,{fontSize:"66px"}),this.eggCountText.setName("text-egg-count"),this.add(s),this.add(this.eggCountText)}setWindowToDefaultSize(){this.eggCountWindow.setSize(this.WINDOW_DEFAULT_WIDTH,this.WINDOW_HEIGHT)}onEggCountChanged(A){var n;const s=A;if(!s||!((n=this.eggCountText)!=null&&n.data))return;const R=s.eggCount;R<10&&this.setWindowToDefaultSize(),R>0?this.eggCountText.setText(R.toString()):this.eggCountText.setVisible(!1)}};o(Jm,"EggCounterContainer");let s_=Jm;const cl={pt:{infoContainerTextSize:"60px",infoContainerLabelXPos:-15,infoContainerTextXPos:-12}},zm=class zm extends Phaser.GameObjects.Container{constructor(A=372,s=66){super(a,A,s),this.infoWindowWidth=104,this.numCharsBeforeCutoff=16,this.initialX=A}setup(){this.setName("pkmn-info");const A=u.resolvedLanguage,s=Object.keys(cl).find(l=>A==null?void 0:A.includes(l)),R=cl[s];this.infoBg=Gt(0,0,this.infoWindowWidth,132),this.infoBg.setOrigin(.5,.5),this.infoBg.setName("window-info-bg"),this.pokemonMovesContainer=a.add.container(6,14),this.pokemonMovesContainer.setName("pkmn-moves"),this.movesContainerInitialX=this.pokemonMovesContainer.x,this.pokemonMovesContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[];const n=Gt(0,0,58,52);n.setOrigin(1,0),n.setName("window-moves-bg"),this.pokemonMovesContainer.add(n);const I=Se(-n.width/2,6,u.t("pokemonInfoContainer:moveset"),k.WINDOW,{fontSize:"64px"});I.setOrigin(.5,0),I.setName("text-moves"),this.pokemonMovesContainer.add(I);for(let l=0;l<4;l++){const C=a.add.container(-6,18+7*l);C.setScale(.5),C.setName("move");const U=a.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);U.setOrigin(1,0),U.setName("nineslice-move-bg");const D=Se(-U.width/2,0,"-",k.PARTY);D.setOrigin(.5,0),D.setName("text-move-label"),this.pokemonMoveBgs.push(U),this.pokemonMoveLabels.push(D),C.add(U),C.add(D),this.pokemonMovesContainers.push(C),this.pokemonMovesContainer.add(C)}this.add(this.pokemonMovesContainer),this.statsContainer=new LS(-48,-64,!0),this.add(this.infoBg),this.add(this.statsContainer);const r=(R==null?void 0:R.infoContainerLabelXPos)||-18,L=(R==null?void 0:R.infoContainerTextXPos)||-14,N=(R==null?void 0:R.infoContainerTextSize)||"64px";this.pokemonFormLabelText=Se(r,19,u.t("pokemonInfoContainer:form"),k.WINDOW,{fontSize:N}),this.pokemonFormLabelText.setOrigin(1,0),this.pokemonFormLabelText.setVisible(!1),this.add(this.pokemonFormLabelText),this.pokemonFormText=Se(L,19,"",k.WINDOW,{fontSize:N}),this.pokemonFormText.setOrigin(0,0),this.pokemonFormText.setVisible(!1),this.add(this.pokemonFormText),this.pokemonGenderText=Se(-42,-61,"",k.WINDOW,{fontSize:N}),this.pokemonGenderText.setOrigin(0,0),this.pokemonGenderText.setVisible(!1),this.pokemonGenderText.setName("text-pkmn-gender"),this.add(this.pokemonGenderText),this.pokemonGenderNewText=Se(-36,-61,"",k.WINDOW,{fontSize:"64px"}),this.pokemonGenderNewText.setOrigin(0,0),this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderNewText.setName("text-pkmn-new-gender"),this.add(this.pokemonGenderNewText),this.pokemonAbilityLabelText=Se(r,29,u.t("pokemonInfoContainer:ability"),k.WINDOW,{fontSize:N}),this.pokemonAbilityLabelText.setOrigin(1,0),this.pokemonAbilityLabelText.setName("text-pkmn-ability-label"),this.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=Se(L,29,"",k.WINDOW,{fontSize:N}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setName("text-pkmn-ability"),this.add(this.pokemonAbilityText),this.pokemonNatureLabelText=Se(r,39,u.t("pokemonInfoContainer:nature"),k.WINDOW,{fontSize:N}),this.pokemonNatureLabelText.setOrigin(1,0),this.pokemonNatureLabelText.setName("text-pkmn-nature-label"),this.add(this.pokemonNatureLabelText),this.pokemonNatureText=pE(L,39,"",k.WINDOW,{fontSize:N,lineSpacing:3,maxLines:2}),this.pokemonNatureText.setOrigin(0,0),this.pokemonNatureText.setName("text-pkmn-nature"),this.add(this.pokemonNatureText),this.pokemonShinyIcon=a.add.image(-43.5,48.5,"shiny_star"),this.pokemonShinyIcon.setOrigin(0,0),this.pokemonShinyIcon.setScale(.75),this.pokemonShinyIcon.setInteractive(new Phaser.Geom.Rectangle(0,0,12,15),Phaser.Geom.Rectangle.Contains),this.pokemonShinyIcon.setName("img-pkmn-shiny-icon"),this.add(this.pokemonShinyIcon),this.pokemonShinyNewIcon=Se(this.pokemonShinyIcon.x+12,this.pokemonShinyIcon.y,"",k.WINDOW,{fontSize:N}),this.pokemonShinyNewIcon.setOrigin(0,0),this.pokemonShinyNewIcon.setName("text-pkmn-shiny-new-icon"),this.add(this.pokemonShinyNewIcon),this.pokemonShinyNewIcon.setVisible(!1),this.pokemonFusionShinyIcon=a.add.image(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y,"shiny_star_2"),this.pokemonFusionShinyIcon.setOrigin(0,0),this.pokemonFusionShinyIcon.setScale(.75),this.pokemonFusionShinyIcon.setName("img-pkmn-fusion-shiny-icon"),this.add(this.pokemonFusionShinyIcon),this.setVisible(!1)}show(A,s=!1,R=1,n,I,r=!1){return new Promise(L=>{n||(n=a.gameData.dexData[A.species.speciesId]),I||(I=a.gameData.starterData[A.species.getRootSpeciesId()]);const N=BigInt(n.caughtAttr);if(A.gender>At.GENDERLESS){this.pokemonGenderText.setText(kI(A.gender)),this.pokemonGenderText.setColor(sn(A.gender)),this.pokemonGenderText.setShadowColor(sn(A.gender,!0)),this.pokemonGenderText.setVisible(!0);const B=BigInt(1<<A.gender)*de.MALE;this.pokemonGenderNewText.setText("(+)"),this.pokemonGenderNewText.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonGenderNewText.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme)),this.pokemonGenderNewText.setVisible((B&N)===BigInt(0))}else this.pokemonGenderNewText.setVisible(!1),this.pokemonGenderText.setVisible(!1);const l=A.species.getFormNameToDisplay(A.formIndex);l?(this.pokemonFormLabelText.setVisible(!0),this.pokemonFormText.setVisible(!0),(BigInt(1<<A.formIndex)*de.DEFAULT_FORM&N)===BigInt(0)?(this.pokemonFormLabelText.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonFormLabelText.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme))):(this.pokemonFormLabelText.setColor(eA(k.WINDOW,!1,a.uiTheme)),this.pokemonFormLabelText.setShadowColor(eA(k.WINDOW,!0,a.uiTheme))),this.pokemonFormText.setText(l.length>this.numCharsBeforeCutoff?`${l.substring(0,this.numCharsBeforeCutoff-3)}...`:l),l.length>this.numCharsBeforeCutoff?(this.pokemonFormText.setInteractive(new Phaser.Geom.Rectangle(0,0,this.pokemonFormText.width,this.pokemonFormText.height),Phaser.Geom.Rectangle.Contains),this.pokemonFormText.on("pointerover",()=>a.ui.showTooltip("",l,!0)),this.pokemonFormText.on("pointerout",()=>a.ui.hideTooltip())):this.pokemonFormText.disableInteractive()):(this.pokemonFormLabelText.setVisible(!1),this.pokemonFormText.setVisible(!1),this.pokemonFormText.disableInteractive());const C=A.abilityIndex===2?k.MONEY:k.WINDOW;this.pokemonAbilityText.setText(A.getAbility(!0).name),this.pokemonAbilityText.setColor(eA(C,!1,a.uiTheme)),this.pokemonAbilityText.setShadowColor(eA(C,!0,a.uiTheme)),A.checkIfPlayerHasAbilityOfStarter(I.abilityAttr)?(this.pokemonAbilityLabelText.setColor(eA(k.WINDOW,!1,a.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(eA(k.WINDOW,!0,a.uiTheme))):(this.pokemonAbilityLabelText.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonAbilityLabelText.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme))),this.pokemonNatureText.setText(zR(A.getNature(),!0,!1,!1,a.uiTheme));const D=n.natureAttr,M=1<<A.nature+1;D&M?(this.pokemonNatureLabelText.setColor(eA(k.WINDOW,!1,a.uiTheme)),this.pokemonNatureLabelText.setShadowColor(eA(k.WINDOW,!0,a.uiTheme))):(this.pokemonNatureLabelText.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonNatureLabelText.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme)));const h=A.isFusion(),_=h&&A.shiny&&A.fusionShiny,d=_?A.variant:A.getVariant();if(this.pokemonShinyIcon.setTexture(`shiny_star${_?"_1":""}`),this.pokemonShinyIcon.setVisible(A.isShiny()),this.pokemonShinyIcon.setTint(lE(d)),this.pokemonShinyIcon.visible){const B=_||d?`${d===2?u.t("common:epicShiny"):d===1?u.t("common:rareShiny"):u.t("common:commonShiny")}${_?`/${A.fusionVariant===2?u.t("common:epicShiny"):A.fusionVariant===1?u.t("common:rareShiny"):u.t("common:commonShiny")}`:""}`:"";this.pokemonShinyIcon.on("pointerover",()=>a.ui.showTooltip("",`${u.t("common:shinyOnHover")}${B?` (${B})`:""}`,!0)),this.pokemonShinyIcon.on("pointerout",()=>a.ui.hideTooltip());const K=BigInt(1<<(A.shiny?1:0)),Y=BigInt(1<<A.variant+4);this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme));const v=(K&N)===BigInt(0)||(Y&N)===BigInt(0);this.pokemonShinyNewIcon.setVisible(!!v)}else(N&de.NON_SHINY)===BigInt(0)&&(N&de.SHINY)===de.SHINY?(this.pokemonShinyNewIcon.setVisible(!0),this.pokemonShinyNewIcon.setText("(+)"),this.pokemonShinyNewIcon.setColor(eA(k.SUMMARY_BLUE,!1,a.uiTheme)),this.pokemonShinyNewIcon.setShadowColor(eA(k.SUMMARY_BLUE,!0,a.uiTheme))):this.pokemonShinyNewIcon.setVisible(!1);this.pokemonFusionShinyIcon.setPosition(this.pokemonShinyIcon.x,this.pokemonShinyIcon.y),this.pokemonFusionShinyIcon.setVisible(_),h&&this.pokemonFusionShinyIcon.setTint(lE(A.fusionVariant));const f=A.species.getRootSpeciesId(),H=r?n.caughtAttr?n.ivs:null:a.gameData.dexData[f].caughtAttr?a.gameData.dexData[f].ivs:null;this.statsContainer.updateIvs(A.ivs,H),r||(a.tweens.add({targets:this,duration:Ot(Math.floor(750/R)),ease:"Cubic.easeInOut",x:this.initialX-this.infoWindowWidth,onComplete:o(()=>{L()},"onComplete")}),s&&a.tweens.add({delay:Ot(Math.floor(325/R)),targets:this.pokemonMovesContainer,duration:Ot(Math.floor(325/R)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX-57,onComplete:o(()=>L(),"onComplete")}));for(let B=0;B<4;B++){const K=B<A.moveset.length&&A.moveset[B]?A.moveset[B].getMove():null;this.pokemonMoveBgs[B].setFrame(i[K?K.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[B].setText(K?K.name:"-"),this.pokemonMovesContainers[B].setVisible(!!K)}this.setVisible(!0),this.shown=!0,a.hideEnemyModifierBar()})}changeToEggSummaryLayout(){const A=u.resolvedLanguage,s=Object.keys(cl).find(L=>A==null?void 0:A.includes(L)),R=cl[s],n=43,I=((R==null?void 0:R.infoContainerLabelXPos)||-18)+n,r=((R==null?void 0:R.infoContainerTextXPos)||-14)+n;this.x=this.initialX-this.infoWindowWidth,this.pokemonGenderText.setPosition(89,-2),this.pokemonGenderNewText.setPosition(79,-2),this.pokemonShinyIcon.setPosition(82,87),this.pokemonShinyNewIcon.setPosition(72,87),this.pokemonFormLabelText.setPosition(I,152),this.pokemonFormText.setPosition(r,152),this.pokemonAbilityLabelText.setPosition(I,110),this.pokemonAbilityText.setPosition(r,110),this.pokemonNatureLabelText.setPosition(I,125),this.pokemonNatureText.setPosition(r,125),this.statsContainer.setScale(.7),this.statsContainer.setPosition(30,-3),this.infoBg.setVisible(!1),this.pokemonMovesContainer.setVisible(!1)}makeRoomForConfirmUi(A=1,s=!1){const R=s?this.initialX-this.infoWindowWidth-67:this.initialX-this.infoWindowWidth-Cu.windowWidth;return new Promise(n=>{a.tweens.add({targets:this,duration:Ot(Math.floor(150/A)),ease:"Cubic.easeInOut",x:R,onComplete:o(()=>{n()},"onComplete")})})}hide(A=1){return new Promise(s=>{if(!this.shown)return a.showEnemyModifierBar(),s();a.tweens.add({targets:this.pokemonMovesContainer,duration:Ot(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.movesContainerInitialX}),a.tweens.add({targets:this,duration:Ot(Math.floor(750/A)),ease:"Cubic.easeInOut",x:this.initialX,onComplete:o(()=>{this.setVisible(!1),this.pokemonShinyIcon.off("pointerover"),this.pokemonShinyIcon.off("pointerout"),a.ui.hideTooltip(),a.showEnemyModifierBar(),s()},"onComplete")}),this.shown=!1})}};o(zm,"PokemonInfoContainer");let CS=zm;const D0=class D0 extends nE{constructor(A,s,R){super(),this.eggLapsePhase=A,this.egg=s,this.eggsToHatchCount=R}start(){super.start(),a.ui.setModeForceTransition(te.EGG_HATCH_SCENE).then(()=>{if(!this.egg)return this.end();const A=a.gameData.eggs.findIndex(n=>n.id===this.egg.id);if(A===-1)return this.end();a.gameData.eggs.splice(A,1),a.fadeOutBgm(void 0,!1),this.eggHatchHandler=a.ui.getHandler(),this.eggHatchContainer=this.eggHatchHandler.eggHatchContainer,this.eggHatchBg=a.add.image(0,0,"default_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.eggContainer=a.add.container(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2),this.eggSprite=a.add.sprite(0,0,"egg",`egg_${this.egg.getKey()}`),this.eggCrackSprite=a.add.sprite(0,0,"egg_crack","0"),this.eggCrackSprite.setVisible(!1),this.eggLightraysOverlay=a.add.sprite(-this.eggHatchBg.displayWidth/2+4,-this.eggHatchBg.displayHeight/2,"egg_lightrays","3"),this.eggLightraysOverlay.setOrigin(0,0),this.eggLightraysOverlay.setVisible(!1),this.eggContainer.add(this.eggSprite),this.eggContainer.add(this.eggCrackSprite),this.eggContainer.add(this.eggLightraysOverlay),this.eggHatchContainer.add(this.eggContainer),this.eggCounterContainer=new s_(this.eggsToHatchCount),this.eggHatchContainer.add(this.eggCounterContainer);const s=o(()=>{const n=a.add.sprite(this.eggHatchBg.displayWidth/2,this.eggHatchBg.displayHeight/2,"pkmn__sub");return n.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),n},"getPokemonSprite");this.eggHatchContainer.add(this.pokemonSprite=s()),this.pokemonShinySparkle=a.add.sprite(this.pokemonSprite.x,this.pokemonSprite.y,"shiny"),this.pokemonShinySparkle.setVisible(!1),this.eggHatchContainer.add(this.pokemonShinySparkle),this.eggHatchOverlay=a.add.rectangle(0,-a.game.canvas.height/6,a.game.canvas.width/6,a.game.canvas.height/6,16777215),this.eggHatchOverlay.setOrigin(0,0),this.eggHatchOverlay.setAlpha(0),a.fieldUI.add(this.eggHatchOverlay),this.infoContainer=new CS,this.infoContainer.setup(),this.eggHatchContainer.add(this.infoContainer);const R=this.generatePokemon();R.fusionSpecies&&R.clearFusionSpecies(),this.pokemonSprite.setVisible(!1),this.pokemon=R,R.loadAssets().then(()=>{this.canSkip=!0,a.time.delayedCall(1e3,()=>{this.hatched||(this.evolutionBgm=a.playSoundWithoutBgm("evolution"))}),a.time.delayedCall(2e3,()=>{this.hatched||(this.eggCrackSprite.setVisible(!0),this.doSpray(1,this.eggSprite.displayHeight/-2),this.doEggShake(2).then(()=>{this.hatched||a.time.delayedCall(1e3,()=>{this.hatched||(this.doSpray(2,this.eggSprite.displayHeight/-4),this.eggCrackSprite.setFrame("1"),a.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("2")),this.doEggShake(4).then(()=>{this.hatched||a.time.delayedCall(1e3,()=>{this.hatched||(a.playSound("se/egg_crack"),this.doSpray(4),this.eggCrackSprite.setFrame("3"),a.time.delayedCall(125,()=>this.eggCrackSprite.setFrame("4")),this.doEggShake(8,2).then(()=>{this.hatched||this.doHatch()}))})}))})}))})})})}end(){a.findPhase(A=>A instanceof D0)?this.eggHatchHandler.clear():a.time.delayedCall(250,()=>a.setModifiersVisible(!0)),super.end()}doEggShake(A,s,R){return new Promise(n=>{s===void 0&&(s=0),R===void 0&&(R=0),a.playSound("se/pb_move"),a.tweens.add({targets:this.eggContainer,x:`-=${A/(R?1:2)}`,ease:"Sine.easeInOut",duration:125,onComplete:o(()=>{a.tweens.add({targets:this.eggContainer,x:`+=${A}`,ease:"Sine.easeInOut",duration:250,onComplete:o(()=>{if(R++,R<s)return this.doEggShake(A,s,R).then(()=>n());a.tweens.add({targets:this.eggContainer,x:`-=${A/2}`,ease:"Sine.easeInOut",duration:125,onComplete:o(()=>n(),"onComplete")})},"onComplete")})},"onComplete")})})}trySkip(){var A;return!this.canSkip||this.skipped||((A=this.eggCounterContainer.eggCountText)==null?void 0:A.data)===void 0?!1:(this.skipped=!0,this.hatched?this.doReveal():this.doHatch(),!0)}doHatch(){this.canSkip=!1,this.hatched=!0,this.evolutionBgm&&oO.fadeOut(a,this.evolutionBgm,Ot(100));for(let A=0;A<5;A++)a.time.delayedCall(Ot(375*A),()=>a.playSound("se/egg_hatch",{volume:1-A*.2}));this.eggLightraysOverlay.setVisible(!0),this.eggLightraysOverlay.play("egg_lightrays"),a.tweens.add({duration:Ot(125),targets:this.eggHatchOverlay,alpha:1,ease:"Cubic.easeIn",onComplete:o(()=>{this.skipped=!1,this.canSkip=!0},"onComplete")}),a.time.delayedCall(Ot(1500),()=>{this.canSkip=!1,this.skipped||this.doReveal()})}doReveal(){const A=this.pokemon.isShiny();this.pokemon.species.subLegendary&&a.validateAchv(ht.HATCH_SUB_LEGENDARY),this.pokemon.species.legendary&&a.validateAchv(ht.HATCH_LEGENDARY),this.pokemon.species.mythical&&a.validateAchv(ht.HATCH_MYTHICAL),A&&a.validateAchv(ht.HATCH_SHINY),this.eggContainer.setVisible(!1);const s=this.pokemon.getSpriteKey(!0);try{this.pokemonSprite.play(s)}catch(R){console.error(`Failed to play animation for ${s}`,R)}this.pokemonSprite.setPipelineData("ignoreTimeTint",!0),this.pokemonSprite.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),this.pokemonSprite.setPipelineData("shiny",this.pokemon.shiny),this.pokemonSprite.setPipelineData("variant",this.pokemon.variant),this.pokemonSprite.setVisible(!0),a.time.delayedCall(Ot(250),()=>{this.eggsToHatchCount--,this.eggHatchHandler.eventTarget.dispatchEvent(new E_(this.eggsToHatchCount)),this.pokemon.cry(),A&&a.time.delayedCall(Ot(500),()=>{$0(this.pokemonShinySparkle,this.pokemon.variant)}),a.time.delayedCall(Ot(this.skipped?A?750:250:A?1750:1250),()=>{this.infoContainer.show(this.pokemon,!1,this.skipped?2:1),a.playSoundWithoutBgm("evolution_fanfare"),a.ui.showText(u.t("egg:hatchFromTheEgg",{pokemonName:this.pokemon.species.getExpandedSpeciesName()}),null,()=>{a.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),a.gameData.setPokemonCaught(this.pokemon,!0,!0).then(()=>{a.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex).then(R=>{this.eggHatchData.setEggMoveUnlocked(R),a.ui.showText("",0),this.end()})})},null,!0,3e3)})}),a.tweens.add({duration:Ot(this.skipped?500:3e3),targets:this.eggHatchOverlay,alpha:0,ease:"Cubic.easeOut"})}sin(A,s){return s*Math.sin(A*(Math.PI/128))}doSpray(A,s){a.tweens.addCounter({repeat:A,duration:UE(1),onRepeat:o(()=>{this.doSprayParticle(YA(8),s||0)},"onRepeat")})}doSprayParticle(A,s){const R=this.eggHatchBg.displayWidth/2,n=this.eggHatchBg.displayHeight/2+s,I=this.egg.isManaphyEgg()?"1":this.egg.tier.toString(),r=a.add.image(R,n,"egg_shard",`${I}_${Math.floor(A/2)}`);this.eggHatchContainer.add(r);let L=0,N=0;const l=3-YA(8),C=24+YA(32),U=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{D()},"onRepeat")}),D=o(()=>{const M=this.skipped?6:1;N+=M,A<160?(r.setPosition(R+l*L/3,n+N),r.y+=-this.sin(A,C),L>108&&r.setScale(1-(L-108)/20),A+=2*M,L+=M):(r.destroy(),U.remove())},"updateParticle");D()}generatePokemon(){return this.eggHatchData=this.eggLapsePhase.generatePokemon(this.egg),this.eggMoveIndex=this.eggHatchData.eggMoveIndex,this.eggHatchData.pokemon}};o(D0,"EggHatchPhase");let du=D0;const jm=class jm extends nE{constructor(A){super(),this.eggHatchData=A}start(){super.start();const A=o(s=>{s>=this.eggHatchData.length?a.ui.setModeForceTransition(te.EGG_HATCH_SUMMARY,this.eggHatchData).then(()=>{a.fadeOutBgm(void 0,!1)}):(this.eggHatchData[s].setDex(),this.eggHatchData[s].updatePokemon().then(()=>{s<this.eggHatchData.length&&A(s+1)}))},"updateNextPokemon");A(0)}end(){a.time.delayedCall(250,()=>a.setModifiersVisible(!0)),a.ui.setModeForceTransition(te.MESSAGE).then(()=>{super.end()})}};o(jm,"EggSummaryPhase");let Hu=jm;const qm=class qm{constructor(A,s){this.pokemon=A,this.eggMoveIndex=s}setEggMoveUnlocked(A){this.eggMoveUnlocked=A}setDex(){const A=a.gameData.dexData[this.pokemon.species.speciesId],s=a.gameData.starterData[this.pokemon.species.getRootSpeciesId()];this.dexEntryBeforeUpdate={seenAttr:A.seenAttr,caughtAttr:A.caughtAttr,natureAttr:A.natureAttr,seenCount:A.seenCount,caughtCount:A.caughtCount,hatchedCount:A.hatchedCount,ivs:[...A.ivs]},this.starterDataEntryBeforeUpdate={moveset:s.moveset,eggMoves:s.eggMoves,candyCount:s.candyCount,friendship:s.friendship,abilityAttr:s.abilityAttr,passiveAttr:s.passiveAttr,valueReduction:s.valueReduction,classicWinCount:s.classicWinCount}}getDex(){return this.dexEntryBeforeUpdate}getStarterEntry(){return this.starterDataEntryBeforeUpdate}updatePokemon(A=!1){return new Promise(s=>{a.gameData.setPokemonCaught(this.pokemon,!0,!0,A).then(()=>{a.gameData.updateSpeciesDexIvs(this.pokemon.species.speciesId,this.pokemon.ivs),a.gameData.setEggMoveUnlocked(this.pokemon.species,this.eggMoveIndex,A).then(R=>{this.setEggMoveUnlocked(R),s()})})})}};o(qm,"EggHatchData");let R_=qm;const ep=class ep extends nE{constructor(){super(...arguments),this.eggHatchData=[],this.minEggsToSkip=2}start(){super.start();const A=a.gameData.eggs.filter(R=>xe.EGG_IMMEDIATE_HATCH_OVERRIDE?!0:--R.hatchWaves<1),s=A.length;this.eggHatchData=[],s>0?s>=this.minEggsToSkip&&a.eggSkipPreference===1?a.ui.showText(u.t("battle:eggHatching"),0,()=>{a.ui.showText(u.t("battle:eggSkipPrompt",{eggsToHatch:s}),0),a.ui.setModeWithoutClear(te.CONFIRM,()=>{this.hatchEggsSkipped(A),this.showSummary()},()=>{this.hatchEggsRegular(A),this.end()},null,null,null,1e3,!0)},100,!0):s>=this.minEggsToSkip&&a.eggSkipPreference===2?(a.queueMessage(u.t("battle:eggHatching")),this.hatchEggsSkipped(A),this.showSummary()):(a.queueMessage(u.t("battle:eggHatching")),this.hatchEggsRegular(A),this.end()):this.end()}hatchEggsRegular(A){let s=A.length;for(const R of A)a.unshiftPhase(new du(this,R,s)),s--}hatchEggsSkipped(A){for(const s of A)this.hatchEggSilently(s)}showSummary(){a.unshiftPhase(new Hu(this.eggHatchData)),this.end()}hatchEggSilently(A){const s=a.gameData.eggs.findIndex(I=>I.id===A.id);if(s===-1)return this.end();a.gameData.eggs.splice(s,1);const n=this.generatePokemon(A).pokemon;n.fusionSpecies&&n.clearFusionSpecies(),n.species.subLegendary&&a.validateAchv(ht.HATCH_SUB_LEGENDARY),n.species.legendary&&a.validateAchv(ht.HATCH_LEGENDARY),n.species.mythical&&a.validateAchv(ht.HATCH_MYTHICAL),n.isShiny()&&a.validateAchv(ht.HATCH_SHINY)}generatePokemon(A){let s,R;return a.executeWithSeedOffset(()=>{s=A.generatePlayerPokemon(),R=new R_(s,A.eggMoveIndex),R.setDex(),this.eggHatchData.push(R)},A.id,eI.toString()),R}};o(ep,"EggLapsePhase");let Vr=ep;const tp=class tp extends HE{constructor(A){super(),this.moneyMultiplier=A}start(){const A=new je(a.getWaveMoneyAmount(this.moneyMultiplier));a.applyModifiers(CO,!0,A),a.arena.getTag(Fe.HAPPY_HOUR)&&(A.value*=2),a.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),n=u.t("battle:moneyWon",{moneyAmount:R});a.ui.showText(n,null,()=>this.end(),null,!0)}};o(tp,"MoneyRewardPhase");let O_=tp;const Ap=class Ap extends HE{start(){var R,n,I,r,L,N,l;a.disableMenu=!0,a.playBgm((R=a.currentBattle.trainer)==null?void 0:R.config.victoryBgm),a.unshiftPhase(new O_((n=a.currentBattle.trainer)==null?void 0:n.config.moneyMultiplier));const A=(I=a.currentBattle.trainer)==null?void 0:I.config.modifierRewardFuncs;for(const C of A)a.unshiftPhase(new FE(C));if(EE.isEventActive())for(const C of(r=a.currentBattle.trainer)==null?void 0:r.config.eventRewardFuncs)a.unshiftPhase(new FE(C));const s=(L=a.currentBattle.trainer)==null?void 0:L.config.trainerType;Us.hasOwnProperty(c[s])&&!a.validateVoucher(Us[c[s]])&&(N=a.currentBattle.trainer)!=null&&N.config.isBoss&&(EE.getUpgradeUnlockedVouchers()?a.unshiftPhase(new FE([j.VOUCHER_PLUS,j.VOUCHER_PLUS,j.VOUCHER_PLUS,j.VOUCHER_PREMIUM][Us[c[s]].voucherType])):a.unshiftPhase(new FE([j.VOUCHER,j.VOUCHER,j.VOUCHER_PLUS,j.VOUCHER_PREMIUM][Us[c[s]].voucherType]))),a.arena.biomeType===T.SPACE&&(s===c.BREEDER||s===c.EXPERT_POKEMON_BREEDER)&&a.validateAchv(ht.BREEDERS_IN_SPACE),a.ui.showText(u.t("battle:trainerDefeated",{trainerName:(l=a.currentBattle.trainer)==null?void 0:l.getName(oe.NONE,!0)}),null,()=>{var h,_;const C=(h=a.currentBattle.trainer)==null?void 0:h.getVictoryMessages();let U;a.executeWithSeedOffset(()=>U=eE(C),a.currentBattle.waveIndex),U=U;const D=o(()=>{const d=M;M=o(()=>{var f;return a.ui.showDialogue(U,(f=a.currentBattle.trainer)==null?void 0:f.getName(oe.TRAINER,!0),null,d)},"showMessageOrEnd"),M()},"showMessage");let M=o(()=>this.end(),"showMessageOrEnd");if(C!=null&&C.length)if((_=a.currentBattle.trainer)!=null&&_.config.hasCharSprite&&!a.ui.shouldSkipDialogue(U)){const d=M;M=o(()=>a.charSprite.hide().then(()=>a.hideFieldOverlay(250).then(()=>d())),"showMessageOrEnd"),a.showFieldOverlay(500).then(()=>{var f;return a.charSprite.showCharacter((f=a.currentBattle.trainer)==null?void 0:f.getKey(),k0(C[0])).then(()=>D())})}else D();else M()},null,!0),this.showEnemyTrainer()}};o(Ap,"TrainerVictoryPhase");let fu=Ap;const Ep=class Ep extends ns{constructor(A,s=!1){super(A),this.isExpOnly=s}start(){var R;super.start();const A=a.currentBattle.isBattleMysteryEncounter();(!A||!((R=a.currentBattle.mysteryEncounter)!=null&&R.preventGameStatsUpdates))&&a.gameData.gameStats.pokemonDefeated++;const s=this.getPokemon().getExpValue();if(a.applyPartyExp(s,!0),A)return $k(!1,this.isExpOnly),this.end();if(!a.getEnemyParty().find(n=>a.currentBattle.battleType===Ht.WILD?n.isOnField():!(n!=null&&n.isFainted(!0))))if(a.pushPhase(new Qa(!0)),a.currentBattle.battleType===Ht.TRAINER&&a.pushPhase(new fu),a.gameMode.isEndless||!a.gameMode.isWaveFinal(a.currentBattle.waveIndex)){if(a.pushPhase(new Vr),a.gameMode.isClassic&&a.currentBattle.waveIndex===aE.EVIL_BOSS_2&&a.pushPhase(new FE(j.LOCK_CAPSULE)),a.currentBattle.waveIndex%10)a.pushPhase(new BO(void 0,void 0,this.getFixedBattleCustomModifiers()));else if(a.gameMode.isDaily)a.pushPhase(new FE(j.EXP_CHARM)),a.currentBattle.waveIndex>10&&!a.gameMode.isWaveFinal(a.currentBattle.waveIndex)&&a.pushPhase(new FE(j.GOLDEN_POKEBALL));else{const n=a.gameMode.isEndless?10:a.offsetGym?0:20;a.gameMode.isEndless&&a.currentBattle.waveIndex===10&&a.pushPhase(new FE(j.EXP_SHARE)),a.currentBattle.waveIndex<=750&&(a.currentBattle.waveIndex<=500||a.currentBattle.waveIndex%30===n)&&a.pushPhase(new FE(a.currentBattle.waveIndex%30!==n||a.currentBattle.waveIndex>250?j.EXP_CHARM:j.SUPER_EXP_CHARM)),a.currentBattle.waveIndex<=150&&!(a.currentBattle.waveIndex%50)&&a.pushPhase(new FE(j.GOLDEN_POKEBALL)),a.gameMode.isEndless&&!(a.currentBattle.waveIndex%50)&&(a.pushPhase(new FE(a.currentBattle.waveIndex%250?j.VOUCHER_PLUS:j.VOUCHER_PREMIUM)),a.pushPhase(new A_))}a.pushPhase(new lI)}else a.currentBattle.battleType=Ht.CLEAR,a.score+=a.gameMode.getClearScoreBonus(),a.updateScoreText(),a.pushPhase(new gO(!0));this.end()}getFixedBattleCustomModifiers(){const A=a.gameMode,s=a.currentBattle.waveIndex;if(A.isFixedBattle(s))return A.getFixedBattle(s).customModifierRewardSettings}};o(Ep,"VictoryPhase");let uS=Ep;const il=1;function Gn(E,A,s,R,n){const I=$e(E).getSpriteKey(A??!1,s??0,R??!1,n??0),r=$e(E).getSpriteAtlasPath(A??!1,s??0,R??!1,n??0);return{spriteKey:I,fileRoot:r}}o(Gn,"getSpriteKeysFromSpecies");function J0(E){const A=E.getSpeciesForm().getSpriteKey(E.getGender()===At.FEMALE,E.formIndex,E.shiny,E.variant),s=E.getSpeciesForm().getSpriteAtlasPath(E.getGender()===At.FEMALE,E.formIndex,E.shiny,E.variant);return{spriteKey:A,fileRoot:s}}o(J0,"getSpriteKeysFromPokemon");function LX(E=!1,A=!1,s=!1){const R=a.getPlayerParty();let n,I=null;const r=R.filter(N=>(!E||N.isAllowedInChallenge())&&(A||!N.isFainted())),L=R.filter(N=>N.isAllowedInChallenge());if(s&&r.length===1){const N=R.filter(l=>(!E||l.isAllowedInChallenge())&&l.isFainted());N.length>0&&(n=He(N.length),I=N[n])}return!I&&r.length>0&&(n=He(r.length),I=r[n]),!I&&E&&L.length>0&&(n=He(L.length),I=L[n]),I||(n=He(R.length),I=R[n]),I}o(LX,"getRandomPlayerPokemon");function pf(E=!1,A=!1){const s=a.getPlayerParty();let R=null;for(const n of s)E&&!n.isAllowedInChallenge()||!A&&n.isFainted()||(R=R?(R==null?void 0:R.level)<(n==null?void 0:n.level)?n:R:n);return R}o(pf,"getHighestLevelPlayerPokemon");function oX(E,A=!1,s=!1){const R=a.getPlayerParty();let n=null;for(const I of R)A&&!I.isAllowedInChallenge()||!s&&I.isFainted()||(n=n?n.getStat(E)<(I==null?void 0:I.getStat(E))?I:n:I);return n}o(oX,"getHighestStatPlayerPokemon");function TX(E=!1,A=!1){const s=a.getPlayerParty();let R=null;for(const n of s)E&&!n.isAllowedInChallenge()||!A&&n.isFainted()||(R=R?(R==null?void 0:R.stats.reduce((I,r)=>I+r))<(n==null?void 0:n.stats.reduce((I,r)=>I+r))?n:R:n);return R}o(TX,"getHighestStatTotalPlayerPokemon");function Kf(E,A,s,R=!0,n=!0,I=!0){let r=Array.isArray(E)?E[0]:E,L=Array.isArray(E)?E[1]:E,N=Object.keys(tA).map(C=>[Number.parseInt(C),tA[C]]).filter(C=>{const U=$e(C[0]);return U&&(!A||!A.includes(C[0]))&&(R||!U.subLegendary)&&(n||!U.legendary)&&(I||!U.mythical)}).map(C=>[$e(C[0]),C[1]]);s&&s.length>0&&(N=N.filter(C=>s.includes(C[0].type1)||!Pe(C[0].type2)&&s.includes(C[0].type2)));let l=N.filter(C=>C[1]>=r&&C[1]<=L);for(;l.length===0&&!(r===0&&L===10);)r>0?r--:L++,l=N.filter(C=>C[1]>=r&&C[1]<=L);if(l.length>0){const C=He(l.length);return Phaser.Math.RND.shuffle(l)[C][0].speciesId}return e.BULBASAUR}o(Kf,"getRandomSpeciesByStarterCost");function fk(E){E.hp=0,E.trySetStatus(re.FAINT),E.updateInfo(),SE(u.t("battle:fainted",{pokemonNameWithAffix:ee(E)}))}o(fk,"koPlayerPokemon");function SX(E,A){const s=Math.round(E.hp+A),R=Math.max(Math.min(s,E.getMaxHp()),0);R===0?fk(E):E.hp=R}o(SX,"applyHpChangeToPokemon");function Ff(E,A){A<=0&&console.warn("Healing pokemon with `applyDamageToPokemon` is not recommended! Please use `applyHealToPokemon` instead."),E.isAllowedInBattle()&&E.hp-A<=0&&(A=E.hp-1),SX(E,-A)}o(Ff,"applyDamageToPokemon");async function n6(E,A){var n;const s=(n=j.MYSTERY_ENCOUNTER_SHUCKLE_JUICE().generateType(a.getPlayerParty(),[A]))==null?void 0:n.withIdFromFunc(j.MYSTERY_ENCOUNTER_SHUCKLE_JUICE),R=s==null?void 0:s.newModifier(E);R&&(a.addModifier(R,!1,!1,!1,!0),E.calculateStats())}o(n6,"modifyPlayerPokemonBST");async function XR(E,A,s){const R=A.newModifier(E),n=a.findModifier(I=>I instanceof Ft&&I.type.id===A.id&&I.pokemonId===E.id&&I.matchType(R));n&&n.getStackCount()>=n.getMaxStackCount()||a.addModifier(R,!1,!1,!1,!0)}o(XR,"applyModifierTypeToPlayerPokemon");function NX(E,A,s){const R=E.y;if(!s){const L=3*E.getMaxHp(),N=2*E.hp,l=E.species.catchRate,C=XC(A),U=E.status?ak(E.status.effect):1,D=Math.round((L-N)*l*C/L*U);s=Math.round(65536/Math.sqrt(Math.sqrt(255/D)))}const n=E.getFieldPositionOffset(),I=fO(A),r=a.addFieldSprite(91,105,"pb",I);return r.setOrigin(.5,.625),a.field.add(r),a.time.delayedCall(300,()=>{a.field.moveBelow(r,E)}),new Promise(L=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back_pb`),a.time.delayedCall(512,()=>{a.playSound("se/pb_throw"),a.trainer.setFrame("2"),a.time.delayedCall(256,()=>{a.trainer.setFrame("3"),a.time.delayedCall(768,()=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back`)})}),a.tweens.add({targets:r,x:{value:236+n[0],ease:"Linear"},y:{value:16+n[1],ease:"Cubic.easeOut"},duration:500,onComplete:o(()=>{r.setTexture("pb",`${I}_opening`),a.time.delayedCall(17,()=>r.setTexture("pb",`${I}_open`)),a.playSound("se/pb_rel"),E.tint(Rn(A)),Q0(r.x,r.y,A),a.tweens.add({targets:E,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:o(()=>{r.setTexture("pb",`${I}_opening`),E.setVisible(!1),a.playSound("se/pb_catch"),a.time.delayedCall(17,()=>r.setTexture("pb",`${I}`));const N=o(()=>{let l=0;const C=r.x,U=a.tweens.addCounter({from:0,to:1,repeat:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:o(D=>{if(l&&l<4){const M=D.getValue(),h=l%2===1?1:-1;r.setX(C+M*4*h),r.setAngle(M*27.5*h)}},"onUpdate"),onRepeat:o(()=>{if(!E.species.isObtainable())U.stop(),a6(E,R,r,A).then(()=>L(!1));else if(l++<3)He(65536)<s?a.playSound("se/pb_move"):(U.stop(),a6(E,R,r,A).then(()=>L(!1)));else{a.playSound("se/pb_lock"),Gk(r);const D=a.add.sprite(r.x,r.y,"pb","pb");D.setOrigin(r.originX,r.originY),D.setTintFill(0),D.setAlpha(0),a.field.add(D),a.tweens.add({targets:D,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:o(()=>{a.tweens.add({targets:D,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:o(()=>D.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:o(()=>{xr(E,r,A).then(()=>L(!0))},"onComplete")})},"doShake");a.time.delayedCall(250,()=>Tk(r,16,72,350,N))},"onComplete")})},"onComplete")})})})}o(NX,"trainerThrowPokeball");function a6(E,A,s,R){return new Promise(n=>{var r;a.playSound("se/pb_rel"),E.setY(A),((r=E.status)==null?void 0:r.effect)!==re.SLEEP&&E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.tint(Rn(R)),E.setVisible(!0),E.untint(250,"Sine.easeOut");const I=fO(R);s.setTexture("pb",`${I}_opening`),a.time.delayedCall(17,()=>s.setTexture("pb",`${I}_open`)),a.tweens.add({targets:E,duration:250,ease:"Sine.easeOut",scale:1}),a.currentBattle.lastUsedPokeball=R,Bk(s),a.ui.showText(u.t("battle:pokemonBrokeFree",{pokemonName:E.getNameToRender()}),null,()=>n(),null,!0)})}o(a6,"failCatch");async function xr(E,A,s,R=!0,n=!1){const I=E.fusionSpecies?E.getFusionSpeciesForm():E.getSpeciesForm();return I.abilityHidden&&(E.fusionSpecies?E.fusionAbilityIndex:E.abilityIndex)===I.getAbilityCount()-1&&a.validateAchv(ht.HIDDEN_ABILITY),E.species.subLegendary&&a.validateAchv(ht.CATCH_SUB_LEGENDARY),E.species.legendary&&a.validateAchv(ht.CATCH_LEGENDARY),E.species.mythical&&a.validateAchv(ht.CATCH_MYTHICAL),a.pokemonInfoContainer.show(E,!0),a.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),new Promise(r=>{const L=o(()=>{const N=o(()=>{a.getEnemyParty().some(U=>U.id===E.id)||a.getEnemyParty().push(E),a.unshiftPhase(new uS(E.id,!0)),a.pokemonInfoContainer.hide(),A&&Bk(A),r()},"end"),l=o(()=>{E&&E.leaveField(!1,!0,!0)},"removePokemon"),C=o(U=>{const D=E.addToParty(s,U),M=a.findModifiers(h=>h instanceof Ft,!1);a.getPlayerParty().filter(h=>h.isShiny()).length===6&&a.validateAchv(ht.SHINY_PARTY),Promise.all(M.map(h=>a.addModifier(h,!0))).then(()=>{a.updateModifiers(!0),l(),D?D.loadAssets().then(N):N()})},"addToParty");Promise.all([E.hideInfo(),a.gameData.setPokemonCaught(E)]).then(()=>{if(a.getPlayerParty().length===6){const U=o(()=>{a.ui.showText(u.t("battle:partyFull",{pokemonName:E.getNameToRender()}),null,()=>{a.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),a.ui.setMode(te.CONFIRM,()=>{const D=a.addPlayerPokemon(E.species,E.level,E.abilityIndex,E.formIndex,E.gender,E.shiny,E.variant,E.ivs,E.nature,E);a.ui.setMode(te.SUMMARY,D,0,X0.DEFAULT,()=>{a.ui.setMode(te.MESSAGE).then(()=>{U()})},!1)},()=>{const D={shiny:E.shiny,variant:E.variant,form:E.formIndex,female:E.gender===At.FEMALE};a.ui.setOverlayMode(te.POKEDEX_PAGE,E.species,E.formIndex,D,null,()=>{a.ui.setMode(te.MESSAGE).then(()=>{U()})})},()=>{a.ui.setMode(te.PARTY,gs.RELEASE,0,(D,M)=>{a.ui.setMode(te.MESSAGE).then(()=>{D<6?C(D):U()})})},()=>{a.ui.setMode(te.MESSAGE).then(()=>{l(),N()})},"fullParty")})},"promptRelease");U()}else C()})},"doPokemonCatchMenu");R?a.ui.showText(u.t(n?"battle:pokemonObtained":"battle:pokemonCaught",{pokemonName:E.getNameToRender()}),null,L,0,!0):L()})}o(xr,"catchPokemon");function Bk(E){E&&a.tweens.add({targets:E,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:o(()=>{E.destroy()},"onComplete")})}o(Bk,"removePb");async function lX(E){await new Promise(A=>{a.playSound("se/flee"),a.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:o(()=>{E.setVisible(!1),E.leaveField(!0,!0,!0),EA(u.t("battle:pokemonFled",{pokemonName:E.getNameToRender()}),null,600,!1).then(()=>{A()})},"onComplete")})})}o(lX,"doPokemonFlee");function CX(E){return new Promise(A=>{a.tweens.add({targets:E,x:"+=16",y:"-=16",alpha:0,duration:1e3,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:o(()=>{E.setVisible(!1),E.leaveField(!0,!0,!0),EA(u.t("battle:playerFled",{pokemonName:E.getNameToRender()}),null,600,!1).then(()=>{A()})},"onComplete")})})}o(CX,"doPlayerFlee");const i6=[[e.SCYTHER,40],[e.SCIZOR,40],[e.KLEAVOR,40],[e.PINSIR,40],[e.HERACROSS,40],[e.YANMA,40],[e.YANMEGA,40],[e.SHUCKLE,40],[e.ANORITH,40],[e.ARMALDO,40],[e.ESCAVALIER,40],[e.ACCELGOR,40],[e.JOLTIK,40],[e.GALVANTULA,40],[e.DURANT,40],[e.LARVESTA,40],[e.VOLCARONA,40],[e.DEWPIDER,40],[e.ARAQUANID,40],[e.WIMPOD,40],[e.GOLISOPOD,40],[e.SIZZLIPEDE,40],[e.CENTISKORCH,40],[e.NYMBLE,40],[e.LOKIX,40],[e.BUZZWOLE,1],[e.PHEROMOSA,1]];function uX(E){const A=i6.reduce((n,I)=>n+I[1],0),s=He(A);let R=0;for(const n of i6)if(R+=n[1],s<R){const I=$e(n[0]);return $e(I.getSpeciesForLevel(E,!0))}return $e(e.SCYTHER)}o(uX,"getGoldenBugNetSpecies");function Il(E=0){const A=a.currentBattle;return A.getLevelForWave()+Math.max(Math.round(A.waveIndex/10*E),0)}o(Il,"getEncounterPokemonLevelForWave");async function I6(E){const A=E.fusionSpecies?E.getFusionSpeciesForm():E.getSpeciesForm();return A.abilityHidden&&(E.fusionSpecies?E.fusionAbilityIndex:E.abilityIndex)===A.getAbilityCount()-1&&a.validateAchv(ht.HIDDEN_ABILITY),E.species.subLegendary&&a.validateAchv(ht.CATCH_SUB_LEGENDARY),E.species.legendary&&a.validateAchv(ht.CATCH_LEGENDARY),E.species.mythical&&a.validateAchv(ht.CATCH_MYTHICAL),a.gameData.updateSpeciesDexIvs(E.species.getRootSpeciesId(!0),E.ivs),a.gameData.setPokemonCaught(E,!0,!1,!1)}o(I6,"addPokemonDataToDexAndValidateAchievements");function EI(E,A){return E.isAllowedInChallenge()?E.isAllowedInBattle()?null:VA(A)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:E.getNameToRender()})??null}o(EI,"isPokemonValidForEncounterOptionSelection");function gk(E,A){E.isFusion()?(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new Ms),E.fusionCustomPokemonData.ability=A):(E.customPokemonData||(E.customPokemonData=new Ms),E.customPokemonData.ability=A)}o(gk,"applyAbilityOverrideToPokemon");const sp=class sp extends Phaser.GameObjects.Container{constructor(A){var C;if(super(a,-72,76),this.encounter=A,this.enterFromRight=A.enterIntroVisualsFromRight??!1,this.spriteConfigs=A.spriteConfigs.map(U=>{const D={...U};if(!Pe(D.species)){const M=Gn(D.species,void 0,void 0,D.isShiny,D.variant);D.spriteKey=M.spriteKey,D.fileRoot=M.fileRoot,D.isPokemon=!0}return D}),!this.spriteConfigs)return;const s=o((U,D,M)=>{const h=a.addFieldSprite(0,0,U);return h.setOrigin(.5,1),h.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!!D,yShadowOffset:M??0}),h},"getSprite"),R=o((U,D,M)=>{const h=a.add.sprite(-19,2,"items",U);return h.setOrigin(.5,1),h.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!!D,yShadowOffset:M??0}),h},"getItemSprite"),n=-40,I=40,r=4;let L=0;const N=Math.round((I-n)/Math.max(this.spriteConfigs.filter(U=>!U.x&&!U.y).length,1));this.shinySparkleSprites=[];const l=a.add.container(0,0);(C=this.spriteConfigs)==null||C.forEach(U=>{const{spriteKey:D,isItem:M,hasShadow:h,scale:_,x:d,y:f,yShadow:H,alpha:B,isPokemon:K,isShiny:Y,variant:v}=U;let Z,z,q;M?(Z=R(D,h,H),z=R(D)):(Z=s(D,h,H),z=s(D),K&&Y&&(Z.setPipelineData("spriteKey",D),z.setPipelineData("spriteKey",D),Z.setPipelineData("shiny",!0),Z.setPipelineData("variant",v),z.setPipelineData("shiny",!0),z.setPipelineData("variant",v),q=a.add.sprite(Z.x,Z.y,"shiny"),q.setOrigin(.5,1),q.setVisible(!1),this.shinySparkleSprites.push({sprite:q,variant:v??0}),l.add(q))),Z.setVisible(!U.hidden),z.setVisible(!1),_&&(Z.setScale(_),z.setScale(_)),d||f?(d&&(Z.setPosition(r+d,Z.y),z.setPosition(r+d,z.y)),f&&(Z.setPosition(Z.x,Z.y+f),z.setPosition(z.x,z.y+f))):this.spriteConfigs.length===1?(Z.x=r,z.x=r):(Z.x=n+(L+.5)*N+r,z.x=n+(L+.5)*N+r,L++),Pe(q)||q.setPosition(Z.x,Z.y),Pe(B)||(Z.setAlpha(B),z.setAlpha(B)),this.add(Z),this.add(z)}),this.add(l)}loadAssets(){return new Promise(A=>{this.spriteConfigs||A();const s=[];this.spriteConfigs.forEach(R=>{R.isPokemon?(a.loadPokemonAtlas(R.spriteKey,R.fileRoot),R.isShiny&&s.push(a.loadPokemonVariantAssets(R.spriteKey,R.fileRoot,R.variant))):R.isItem?a.loadAtlas("items",""):a.loadAtlas(R.spriteKey,R.fileRoot)}),a.load.once(Phaser.Loader.Events.COMPLETE,()=>{this.spriteConfigs.every(R=>{if(R.isItem)return!0;const n=console.warn;console.warn=()=>{};const I=a.anims.generateFrameNames(R.spriteKey,{zeroPad:4,suffix:".png",start:1,end:128});return console.warn=n,a.anims.exists(R.spriteKey)||a.anims.create({key:R.spriteKey,frames:I,frameRate:10,repeat:-1}),!0}),Promise.all(s).then(()=>A())}),a.load.isLoading()||a.load.start()})}initSprite(){this.spriteConfigs&&(this.getSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.getTintSprites().map((A,s)=>{if(!this.spriteConfigs[s].isItem&&(A.setTexture(this.spriteConfigs[s].spriteKey).setFrame(0),A.texture.frameTotal>1)){const R=A.texture.frames["0001.png"];A.setFrame(R??0)}}),this.spriteConfigs.every((A,s)=>{if(!A.tint)return!0;const R=this.getAt(s*2+1);return this.tint(R,0,A.tint),!0}))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playShinySparkles(){for(const A of this.shinySparkleSprites)a.time.delayedCall(500,()=>{$0(A.sprite,A.variant)})}playAnim(){if(!this.spriteConfigs)return;const A=this.getSprites(),s=this.getTintSprites();this.spriteConfigs.forEach((R,n)=>{if(!R.disableAnimation){const I={key:R.spriteKey,repeat:R!=null&&R.repeat?-1:0,startFrame:(R==null?void 0:R.startFrame)??0};this.tryPlaySprite(A[n],s[n],I)}})}getSpriteAtIndex(A){if(!this.spriteConfigs)return[];const s=[];return s.push(this.getAt(A*2)),s.push(this.getAt(A*2+1)),s}getSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2))}),A}getTintSprites(){if(!this.spriteConfigs)return[];const A=[];return this.spriteConfigs.forEach((s,R)=>{A.push(this.getAt(R*2+1))}),A}tint(A,s,R,n,I){A.setTintFill(s),A.setVisible(!0),n?(A.setAlpha(0),a.tweens.add({targets:A,alpha:R||1,duration:n,ease:I||"Linear"})):A.setAlpha(R)}tintAll(A,s,R,n){this.getTintSprites().map(r=>{this.tint(r,A,s,R,n)})}untint(A,s,R){s?a.tweens.add({targets:A,alpha:0,duration:s,ease:R||"Linear",onComplete:o(()=>{A.setVisible(!1),A.setAlpha(1)},"onComplete")}):(A.setVisible(!1),A.setAlpha(1))}untintAll(A,s){this.getTintSprites().map(n=>{this.untint(n,A,s)})}setVisible(A){for(const s of this.getSprites())s.setVisible(A);return super.setVisible(A)}};o(sp,"MysteryEncounterIntroVisuals");let US=sp;const Rp=class Rp{};o(Rp,"EncounterSceneRequirement");let CI=Rp;const Op=class Op{};o(Op,"EncounterPokemonRequirement");let nn=Op;const Wo=class Wo extends nn{static Some(...A){return new Wo(!1,...A)}static Every(...A){return new Wo(!0,...A)}constructor(A,...s){super(),this.isAnd=A,this.invertQuery=!1,this.minNumberOfPokemon=1,this.requirements=s}meetsRequirement(){return this.isAnd?this.requirements.every(A=>A.meetsRequirement()):this.requirements.some(A=>A.meetsRequirement())}queryParty(A){if(this.isAnd)return this.requirements.reduce((R,n)=>n.queryParty(R),A);const s=this.requirements.find(R=>R.queryParty(A).length>0);return s?s.queryParty(A):[]}getDialogueToken(A){if(this.isAnd)throw new Error("Not implemented (Sorry)");for(const s of this.requirements)if(s.meetsRequirement())return s.getDialogueToken(A);return this.requirements[0].getDialogueToken(A)}};o(Wo,"CombinationPokemonRequirement");let uI=Wo;const np=class np extends CI{constructor(A){super(),this.waveRange=A}meetsRequirement(){if(!Pe(this.waveRange)&&this.waveRange[0]<=this.waveRange[1]){const A=a.currentBattle.waveIndex;if(A>=0&&this.waveRange[0]>=0&&this.waveRange[0]>A||this.waveRange[1]>=0&&this.waveRange[1]<A)return!1}return!0}getDialogueToken(A){return["waveIndex",a.currentBattle.waveIndex.toString()]}};o(np,"WaveRangeRequirement");let n_=np;const ap=class ap extends CI{constructor(A,s){super(),this.waveModuli=A,this.modulusValue=s}meetsRequirement(){return this.waveModuli.includes(a.currentBattle.waveIndex%this.modulusValue)}getDialogueToken(A){return["waveIndex",a.currentBattle.waveIndex.toString()]}};o(ap,"WaveModulusRequirement");let a_=ap;const ip=class ip extends CI{constructor(A,s){super(),this.partySizeRange=A,this.excludeDisallowedPokemon=s}meetsRequirement(){if(!Pe(this.partySizeRange)&&this.partySizeRange[0]<=this.partySizeRange[1]){const A=this.excludeDisallowedPokemon?a.getPokemonAllowedInBattle().length:a.getPlayerParty().length;if(A>=0&&this.partySizeRange[0]>=0&&this.partySizeRange[0]>A||this.partySizeRange[1]>=0&&this.partySizeRange[1]<A)return!1}return!0}getDialogueToken(A){return["partySize",a.getPlayerParty().length.toString()]}};o(ip,"PartySizeRequirement");let i_=ip;const Ip=class Ip extends CI{constructor(A,s=1){super(),this.minNumberOfItems=s,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A]}meetsRequirement(){var R;const A=a.getPlayerParty();if(Pe(A)||((R=this.requiredHeldItemModifiers)==null?void 0:R.length)<0)return!1;let s=0;for(const n of this.requiredHeldItemModifiers){const I=a.findModifiers(r=>r.constructor.name===n);if((I==null?void 0:I.length)>0)for(const r of I)s+=r.stackCount}return s>=this.minNumberOfItems}getDialogueToken(A){return["requiredItem",this.requiredHeldItemModifiers[0]]}};o(Ip,"PersistentModifierRequirement");let Bu=Ip;const rp=class rp extends CI{constructor(A,s){super(),this.requiredMoney=A??0,this.scalingMultiplier=s??0}meetsRequirement(){const A=a.money;return Pe(A)?!1:(this.scalingMultiplier>0&&(this.requiredMoney=a.getWaveMoneyAmount(this.scalingMultiplier)),!(this.requiredMoney>0&&this.requiredMoney>A))}getDialogueToken(A){return["money",this.scalingMultiplier>0?a.getWaveMoneyAmount(this.scalingMultiplier).toString():this.requiredMoney.toString()]}};o(rp,"MoneyRequirement");let an=rp;const Lp=class Lp extends nn{constructor(A,s=!0,R=1,n=!1){super(),this.excludeFainted=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredType=Array.isArray(A)?A:[A]}meetsRequirement(){let A=a.getPlayerParty();return Pe(A)?!1:(this.excludeFainted&&(A=A.filter(s=>!s.isFainted())),this.queryParty(A).length>=this.minNumberOfPokemon)}queryParty(A){return this.invertQuery?A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length===0):A.filter(s=>this.requiredType.filter(R=>s.getTypes().includes(R)).length>0)}getDialogueToken(A){const s=this.requiredType.filter(R=>A==null?void 0:A.getTypes().includes(R));return s.length>0?["type",i[s[0]]]:["type",""]}};o(Lp,"TypeRequirement");let br=Lp;const op=class op extends nn{constructor(A,s,R=1,n=!1){super(),this.requiredMoves=[],this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredMoves=Array.isArray(A)?A:[A]}meetsRequirement(){var s;const A=a.getPlayerParty();return Pe(A)||((s=this.requiredMoves)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&!s.moveset.some(R=>R.moveId&&this.requiredMoves.includes(R.moveId))):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&s.moveset.some(R=>R.moveId&&this.requiredMoves.includes(R.moveId)))}getDialogueToken(A){const s=A==null?void 0:A.moveset.filter(R=>R.moveId&&this.requiredMoves.includes(R.moveId));return s&&s.length>0&&s[0]?["move",s[0].getName()]:["move",""]}};o(op,"MoveRequirement");let $a=op;const Tp=class Tp extends nn{constructor(A,s,R=1,n=!1){super(),this.excludeDisallowedPokemon=s,this.minNumberOfPokemon=R,this.invertQuery=n,this.requiredAbilities=Array.isArray(A)?A:[A]}meetsRequirement(){var s;const A=a.getPlayerParty();return Pe(A)||((s=this.requiredAbilities)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.filter(R=>s.hasAbility(R,!1)).length===0):A.filter(s=>(!this.excludeDisallowedPokemon||s.isAllowedInBattle())&&this.requiredAbilities.some(R=>s.hasAbility(R,!1)))}getDialogueToken(A){const s=this.requiredAbilities.find(R=>A==null?void 0:A.hasAbility(R,!1));return Pe(s)?["ability",""]:["ability",nA[s].name]}};o(Tp,"AbilityRequirement");let gu=Tp;const Sp=class Sp extends nn{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredStatusEffect=Array.isArray(A)?A:[A]}meetsRequirement(){var R;const A=a.getPlayerParty();return Pe(A)||((R=this.requiredStatusEffect)==null?void 0:R.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredStatusEffect.some(R=>{var n;return R===re.NONE?Pe(s.status)||Pe(s.status.effect)||s.status.effect===R:((n=s.status)==null?void 0:n.effect)===R})):A.filter(s=>this.requiredStatusEffect.some(R=>{var n;return R===re.NONE?Pe(s.status)||Pe(s.status.effect)||s.status.effect===R:((n=s.status)==null?void 0:n.effect)===R}))}getDialogueToken(A){const s=this.requiredStatusEffect.filter(R=>{var n;return R===re.NONE?Pe(A==null?void 0:A.status)||Pe(A.status.effect)||A.status.effect===R:((n=A.status)==null?void 0:n.effect)===R});return s.length>0?["status",re[s[0]]]:["status",""]}};o(Sp,"StatusEffectRequirement");let I_=Sp;const Np=class Np extends nn{constructor(A,s=1,R=!1,n=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemModifiers=Array.isArray(A)?A:[A],this.requireTransferable=n}meetsRequirement(){const A=a.getPlayerParty();return Pe(A)?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemModifiers.some(n=>R.constructor.name===n)&&(!this.requireTransferable||R.isTransferable)).length>0):A.filter(s=>this.requiredHeldItemModifiers.some(R=>s.getHeldItems().some(n=>n.constructor.name===R&&(!this.requireTransferable||n.isTransferable))))}getDialogueToken(A){const s=A==null?void 0:A.getHeldItems().filter(R=>this.requiredHeldItemModifiers.some(n=>R.constructor.name===n)&&(!this.requireTransferable||R.isTransferable));return s&&s.length>0?["heldItem",s[0].type.name]:["heldItem",""]}};o(Np,"HeldItemRequirement");let Wa=Np;const lp=class lp extends nn{constructor(A,s=1,R=!1,n=!0){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHeldItemTypes=Array.isArray(A)?A:[A],this.requireTransferable=n}meetsRequirement(){const A=a.getPlayerParty();return Pe(A)?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>s.getHeldItems().filter(R=>!this.requiredHeldItemTypes.some(n=>R instanceof Bn&&R.type.moveType===n&&(!this.requireTransferable||R.isTransferable))).length>0):A.filter(s=>this.requiredHeldItemTypes.some(R=>s.getHeldItems().some(n=>n instanceof Bn&&n.type.moveType===R&&(!this.requireTransferable||n.isTransferable))))}getDialogueToken(A){const s=A==null?void 0:A.getHeldItems().filter(R=>this.requiredHeldItemTypes.some(n=>R instanceof Bn&&R.type.moveType===n)&&(!this.requireTransferable||R.isTransferable));return s&&s.length>0?["heldItem",s[0].type.name]:["heldItem",""]}};o(lp,"AttackTypeBoosterHeldItemTypeRequirement");let mu=lp;const Cp=class Cp extends nn{constructor(A,s=1,R=!1){super(),this.minNumberOfPokemon=s,this.invertQuery=R,this.requiredHealthRange=A}meetsRequirement(){if(!Pe(this.requiredHealthRange)&&this.requiredHealthRange[0]<=this.requiredHealthRange[1]){const A=a.getPlayerParty();if(this.queryParty(A).length<this.minNumberOfPokemon)return!1}return!0}queryParty(A){return this.invertQuery?A.filter(s=>s.getHpRatio()<this.requiredHealthRange[0]||s.getHpRatio()>this.requiredHealthRange[1]):A.filter(s=>s.getHpRatio()>=this.requiredHealthRange[0]&&s.getHpRatio()<=this.requiredHealthRange[1])}getDialogueToken(A){const s=A==null?void 0:A.getHpRatio();return Pe(s)?["healthRatio",""]:["healthRatio",Math.floor(s*100).toString()+"%"]}};o(Cp,"HealthRatioRequirement");let r_=Cp;const up=class up extends nn{constructor(A,s={}){super(),this.requiredMoves=Array.isArray(A)?A:[A],this.excludeLevelMoves=s.excludeLevelMoves??!1,this.excludeTmMoves=s.excludeTmMoves??!1,this.excludeEggMoves=s.excludeEggMoves??!1,this.includeFainted=s.includeFainted??!1,this.minNumberOfPokemon=s.minNumberOfPokemon??1,this.invertQuery=s.invertQuery??!1}meetsRequirement(){var s;const A=a.getPlayerParty().filter(R=>this.includeFainted?R.isAllowedInChallenge():R.isAllowedInBattle());return Pe(A)||((s=this.requiredMoves)==null?void 0:s.length)<0?!1:this.queryParty(A).length>=this.minNumberOfPokemon}queryParty(A){return this.invertQuery?A.filter(s=>!this.requiredMoves.some(R=>this.getAllPokemonMoves(s).includes(R))):A.filter(s=>this.requiredMoves.every(R=>this.getAllPokemonMoves(s).includes(R)))}getDialogueToken(A){return["requiredMoves",this.requiredMoves.map(s=>new Lt(s).getName()).join(", ")]}getPokemonLevelMoves(A){return A.getLevelMoves().map(([s,R])=>R)}getAllPokemonMoves(A){const s=[];return this.excludeLevelMoves||s.push(...this.getPokemonLevelMoves(A)??[]),this.excludeTmMoves||s.push(...A.compatibleTms??[]),this.excludeEggMoves||s.push(...A.getEggMoves()??[]),s}};o(up,"CanLearnMoveRequirement");let L_=up;var Kt=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.DISABLED_OR_DEFAULT=1]="DISABLED_OR_DEFAULT",E[E.DEFAULT_OR_SPECIAL=2]="DEFAULT_OR_SPECIAL",E[E.DISABLED_OR_SPECIAL=3]="DISABLED_OR_SPECIAL",E))(Kt||{});const Up=class Up{constructor(A){Pe(A)||Object.assign(this,A),this.hasDexProgress=this.hasDexProgress??!1,this.requirements=this.requirements??[],this.primaryPokemonRequirements=this.primaryPokemonRequirements??[],this.secondaryPokemonRequirements=this.secondaryPokemonRequirements??[]}hasRequirements(){return this.requirements.length>0||this.primaryPokemonRequirements.length>0||this.secondaryPokemonRequirements.length>0}meetsRequirements(){return!this.requirements.some(A=>!A.meetsRequirement())&&this.meetsSupportingRequirementAndSupportingPokemonSelected()&&this.meetsPrimaryRequirementAndPrimaryPokemonSelected()}pokemonMeetsPrimaryRequirements(A){return!this.primaryPokemonRequirements.some(s=>!s.queryParty(a.getPlayerParty()).map(R=>R.id).includes(A.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0)return!0;let A=a.getPlayerParty();for(const s of this.primaryPokemonRequirements)if(s.meetsRequirement()){const R=s.queryParty(a.getPlayerParty());A=A.filter(n=>R.includes(n))}else return this.primaryPokemon=void 0,!1;if(A.length===0)return!1;if(this.excludePrimaryFromSecondaryRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const s=[],R=[];for(const n of A)this.secondaryPokemon.includes(n)?R.push(n):s.push(n);return s.length>0?(this.primaryPokemon=s[He(s.length)],!0):R.length>1||this.secondaryPokemon.length-R.length>=1?(this.primaryPokemon=R[He(R.length)],this.secondaryPokemon=this.secondaryPokemon.filter(n=>n!==this.primaryPokemon),!0):!1}return this.primaryPokemon=A[0],!0}meetsSupportingRequirementAndSupportingPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let A=a.getPlayerParty();for(const s of this.secondaryPokemonRequirements)if(s.meetsRequirement()){const R=s.queryParty(a.getPlayerParty());A=A.filter(n=>R.includes(n))}else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=A,!0}};o(Up,"MysteryEncounterOption");let o_=Up;const M0=class M0{constructor(){this.optionMode=Kt.DEFAULT,this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSecondaryRequirements=!1,this.isDisabledOnRequirementsNotMet=!0,this.hasDexProgress=!1}static newOptionWithMode(A){return Object.assign(new M0,{optionMode:A})}withHasDexProgress(A){return Object.assign(this,{hasDexProgress:A})}withSceneRequirement(A){return this.requirements.push(A),Object.assign(this,{requirements:this.requirements})}withSceneMoneyRequirement(A,s){return this.withSceneRequirement(new an(A,s))}withPreOptionPhase(A){return Object.assign(this,{onPreOptionPhase:A})}withOptionPhase(A){return Object.assign(this,{onOptionPhase:A})}withPostOptionPhase(A){return Object.assign(this,{onPostOptionPhase:A})}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPokemonTypeRequirement(A,s,R,n){return this.withPrimaryPokemonRequirement(new br(A,s,R,n))}withPokemonCanLearnMoveRequirement(A,s){return this.withPrimaryPokemonRequirement(new L_(A,s))}withSecondaryPokemonRequirement(A,s=!0){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSecondaryRequirements=s,Object.assign(this,{secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withDialogue(A){return this.dialogue=A,this}build(){return new o_(this)}};o(M0,"MysteryEncounterOptionBuilder");let Zt=M0;const UX=2,DX=1,Dp=class Dp{constructor(A){this.startOfBattleEffects=[],Pe(A)||Object.assign(this,A),this.encounterTier=this.encounterTier??zt.COMMON,this.localizationKey=this.localizationKey??"",this.dialogue=this.dialogue??{},this.spriteConfigs=this.spriteConfigs?[...this.spriteConfigs]:[],this.maxAllowedEncounters=this.maxAllowedEncounters??this.encounterTier===zt.ROGUE?DX:UX,this.encounterMode=PE.DEFAULT,this.requirements=this.requirements?this.requirements:[],this.hideBattleIntroMessage=this.hideBattleIntroMessage??!1,this.autoHideIntroVisuals=this.autoHideIntroVisuals??!0,this.enterIntroVisualsFromRight=this.enterIntroVisualsFromRight??!1,this.continuousEncounter=this.continuousEncounter??!1,this.startOfBattleEffectsComplete=!1,this.lockEncounterRewardTiers=!0,this.dialogueTokens={},this.enemyPartyConfigs=[],this.startOfBattleEffects=[],this.introVisuals=void 0,this.misc=null,this.expMultiplier=1,this.loadAssets=[]}meetsRequirements(){const A=!this.requirements.some(n=>!n.meetsRequirement()),s=this.meetsSecondaryRequirementAndSecondaryPokemonSelected(),R=this.meetsPrimaryRequirementAndPrimaryPokemonSelected();return A&&s&&R}pokemonMeetsPrimaryRequirements(A){return!this.primaryPokemonRequirements.some(s=>!s.queryParty(a.getPlayerParty()).map(R=>R.id).includes(A.id))}meetsPrimaryRequirementAndPrimaryPokemonSelected(){if(!this.primaryPokemonRequirements||this.primaryPokemonRequirements.length===0){const s=a.getPlayerParty().filter(R=>R.isActive(!0));return s.length>0?this.primaryPokemon=s[0]:this.primaryPokemon=a.getPlayerParty().filter(R=>R.isAllowedInBattle())[0],!0}let A=a.getPlayerParty();for(const s of this.primaryPokemonRequirements)if(s.meetsRequirement())A=A.filter(R=>s.queryParty(a.getPlayerParty()).includes(R));else return this.primaryPokemon=void 0,!1;if(A.length===0)return!1;if(this.excludePrimaryFromSupportRequirements&&this.secondaryPokemon&&this.secondaryPokemon.length>0){const s=[],R=[];for(const n of A)this.secondaryPokemon.includes(n)?R.push(n):s.push(n);return s.length>0?(this.primaryPokemon=s[He(s.length,0)],!0):R.length>1||this.secondaryPokemon.length-R.length>=1?(this.primaryPokemon=R[He(R.length,0)],this.secondaryPokemon=this.secondaryPokemon.filter(n=>n!==this.primaryPokemon),!0):!1}return this.primaryPokemon=A[He(A.length,0)],!0}meetsSecondaryRequirementAndSecondaryPokemonSelected(){if(!this.secondaryPokemonRequirements||this.secondaryPokemonRequirements.length===0)return this.secondaryPokemon=[],!0;let A=a.getPlayerParty();for(const s of this.secondaryPokemonRequirements)if(s.meetsRequirement())A=A.filter(R=>s.queryParty(a.getPlayerParty()).includes(R));else return this.secondaryPokemon=[],!1;return this.secondaryPokemon=A,!0}initIntroVisuals(){this.introVisuals=new US(this)}populateDialogueTokensFromRequirements(){var A,s,R;if(this.meetsRequirements(),((A=this.requirements)==null?void 0:A.length)>0)for(const n of this.requirements){const I=n.getDialogueToken();(I==null?void 0:I.length)===2&&this.setDialogueToken(...I)}if(this.primaryPokemon&&this.primaryPokemon.length>0){this.setDialogueToken("primaryName",this.primaryPokemon.getNameToRender());for(const n of this.primaryPokemonRequirements)if(!n.invertQuery){const I=n.getDialogueToken(this.primaryPokemon);(I==null?void 0:I.length)===2&&this.setDialogueToken("primary"+JI(I[0]),I[1])}}if(((s=this.secondaryPokemonRequirements)==null?void 0:s.length)>0&&this.secondaryPokemon&&this.secondaryPokemon.length>0){this.setDialogueToken("secondaryName",this.secondaryPokemon[0].getNameToRender());for(const n of this.secondaryPokemonRequirements)if(!n.invertQuery){const I=n.getDialogueToken(this.secondaryPokemon[0]);(I==null?void 0:I.length)===2&&this.setDialogueToken("primary"+JI(I[0]),I[1]),this.setDialogueToken("secondary"+JI(I[0]),I[1])}}for(let n=0;n<this.options.length;n++){const I=this.options[n];I.meetsRequirements();const r=n+1;if(I.requirements.length>0)for(const L of I.requirements){const N=L.getDialogueToken();(N==null?void 0:N.length)===2&&this.setDialogueToken("option"+r+JI(N[0]),N[1])}if(I.primaryPokemonRequirements.length>0&&I.primaryPokemon){this.setDialogueToken("option"+r+"PrimaryName",I.primaryPokemon.getNameToRender());for(const L of I.primaryPokemonRequirements)if(!L.invertQuery){const N=L.getDialogueToken(I.primaryPokemon);(N==null?void 0:N.length)===2&&this.setDialogueToken("option"+r+"Primary"+JI(N[0]),N[1])}}if(((R=I.secondaryPokemonRequirements)==null?void 0:R.length)>0&&I.secondaryPokemon&&I.secondaryPokemon.length>0){this.setDialogueToken("option"+r+"SecondaryName",I.secondaryPokemon[0].getNameToRender());for(const L of I.secondaryPokemonRequirements)if(!L.invertQuery){const N=L.getDialogueToken(I.secondaryPokemon[0]);(N==null?void 0:N.length)===2&&this.setDialogueToken("option"+r+"Secondary"+JI(N[0]),N[1])}}}}setDialogueToken(A,s){this.dialogueTokens[A]=s}getSeedOffset(){return this.seedOffset}updateSeedOffset(){const A=this.seedOffset??a.currentBattle.waveIndex*1e3;this.seedOffset=A+512}};o(Dp,"MysteryEncounter");let DS=Dp;const c0=class c0{constructor(){this.enemyPartyConfigs=[],this.localizationKey="",this.dialogue={},this.requirements=[],this.primaryPokemonRequirements=[],this.secondaryPokemonRequirements=[],this.excludePrimaryFromSupportRequirements=!0,this.dialogueTokens={},this.hideBattleIntroMessage=!1,this.autoHideIntroVisuals=!0,this.enterIntroVisualsFromRight=!1,this.continuousEncounter=!1,this.catchAllowed=!1,this.fleeAllowed=!0,this.lockEncounterRewardTiers=!1,this.startOfBattleEffectsComplete=!1,this.hasBattleAnimationsWithoutTargets=!1,this.skipEnemyBattleTurns=!1,this.skipToFightInput=!1,this.preventGameStatsUpdates=!1,this.maxAllowedEncounters=3,this.expMultiplier=1}static withEncounterType(A){return Object.assign(new c0,{encounterType:A})}withOption(A){return this.options?(this.options.push(A),this):Object.assign(this,{options:[A]})}withSimpleOption(A,s){return this.withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue(A).withOptionPhase(s).build())}withSimpleDexProgressOption(A,s){return this.withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue(A).withOptionPhase(s).build())}withIntroSpriteConfigs(A){return Object.assign(this,{spriteConfigs:A})}withIntroDialogue(A=[]){return this.dialogue={...this.dialogue,intro:A},this}withIntro({spriteConfigs:A,dialogue:s}){return this.withIntroSpriteConfigs(A).withIntroDialogue(s)}setLocalizationKey(A){return this.localizationKey=A,this}withEncounterTier(A){return Object.assign(this,{encounterTier:A})}withAnimations(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{encounterAnimations:s})}withDisallowedGameModes(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedGameModes:s})}withDisallowedChallenges(...A){const s=Array.isArray(A)?A:[A];return Object.assign(this,{disallowedChallenges:s})}withContinuousEncounter(A){return Object.assign(this,{continuousEncounter:A})}withBattleAnimationsWithoutTargets(A){return Object.assign(this,{hasBattleAnimationsWithoutTargets:A})}withSkipEnemyBattleTurns(A){return Object.assign(this,{skipEnemyBattleTurns:A})}withSkipToFightInput(A){return Object.assign(this,{skipToFightInput:A})}withPreventGameStatsUpdates(A){return Object.assign(this,{preventGameStatsUpdates:A})}withMaxAllowedEncounters(A){return Object.assign(this,{maxAllowedEncounters:A})}withSceneRequirement(A){return this.requirements.push(A),this}withSceneWaveRangeRequirement(A,s){return this.withSceneRequirement(new n_([A,s??A]))}withScenePartySizeRequirement(A,s,R=!1){return this.withSceneRequirement(new i_([A,s??A],R))}withPrimaryPokemonRequirement(A){return this.primaryPokemonRequirements.push(A),Object.assign(this,{primaryPokemonRequirements:this.primaryPokemonRequirements})}withPrimaryPokemonStatusEffectRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new I_(A,s,R))}withPrimaryPokemonHealthRatioRequirement(A,s=1,R=!1){return this.withPrimaryPokemonRequirement(new r_(A,s,R))}withSecondaryPokemonRequirement(A,s=!1){return this.secondaryPokemonRequirements.push(A),this.excludePrimaryFromSupportRequirements=s,Object.assign(this,{excludePrimaryFromSecondaryRequirements:this.excludePrimaryFromSupportRequirements,secondaryPokemonRequirements:this.secondaryPokemonRequirements})}withRewards(A){return Object.assign(this,{doEncounterRewards:A})}withExp(A){return Object.assign(this,{doEncounterExp:A})}withOnInit(A){return Object.assign(this,{onInit:A})}withOnVisualsStart(A){return Object.assign(this,{onVisualsStart:A})}withCatchAllowed(A){return Object.assign(this,{catchAllowed:A})}withFleeAllowed(A){return Object.assign(this,{fleeAllowed:A})}withHideWildIntroMessage(A){return Object.assign(this,{hideBattleIntroMessage:A})}withAutoHideIntroVisuals(A){return Object.assign(this,{autoHideIntroVisuals:A})}withEnterIntroVisualsFromRight(A){return Object.assign(this,{enterIntroVisualsFromRight:A})}withTitle(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,title:A}},this}withDescription(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,description:A}},this}withQuery(A){const s=this.dialogue.encounterOptionsDialogue??{};return this.dialogue={...this.dialogue,encounterOptionsDialogue:{...s,query:A}},this}withOutroDialogue(A=[]){return this.dialogue={...this.dialogue,outro:A},this}build(){return new DS(this)}};o(c0,"MysteryEncounterBuilder");let xA=c0;const ys="mysteryEncounters/darkDeal",MX=[e.NECROZMA,e.COSMOG,e.COSMOEM,e.SOLGALEO,e.LUNALA,e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.KORAIDON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.MIRAIDON,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.MEW,e.CELEBI,e.DEOXYS,e.JIRACHI,e.DARKRAI,e.PHIONE,e.MANAPHY,e.ARCEUS,e.SHAYMIN,e.VICTINI,e.MELOETTA,e.KELDEO,e.GENESECT,e.DIANCIE,e.HOOPA,e.VOLCANION,e.MAGEARNA,e.MARSHADOW,e.ZERAORA,e.ZARUDE,e.MELTAN,e.MELMETAL,e.PECHARUNT],cX=xA.withEncounterType(Et.DARK_DEAL).withEncounterTier(zt.ROGUE).withIntroSpriteConfigs([{spriteKey:"dark_deal_scientist",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"dark_deal_porygon",fileRoot:"mystery-encounters",hasShadow:!0,repeat:!0}]).withIntroDialogue([{text:`${ys}:intro`},{speaker:`${ys}:speaker`,text:`${ys}:intro_dialogue`}]).withSceneWaveRangeRequirement(30,JA[1]).withScenePartySizeRequirement(2,6,!0).withCatchAllowed(!0).setLocalizationKey(`${ys}`).withTitle(`${ys}:title`).withDescription(`${ys}:description`).withQuery(`${ys}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${ys}:option.1.label`,buttonTooltip:`${ys}:option.1.tooltip`,selected:[{speaker:`${ys}:speaker`,text:`${ys}:option.1.selected_dialogue`},{text:`${ys}:option.1.selected_message`}]}).withPreOptionPhase(async()=>{const E=LX(!0,!1,!0),A=E.getHeldItems().filter(R=>!(R instanceof GR));a.removePokemonFromPlayerParty(E);const s=a.currentBattle.mysteryEncounter;s.setDialogueToken("pokeName",E.getNameToRender()),s.misc={removedTypes:E.getTypes(),modifiers:A}}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;a.unshiftPhase(new FE(j.ROGUE_BALL));let A=E.misc.removedTypes;const s=a.gameMode.challenges.filter(l=>l.value&&l.id===ut.SINGLE_TYPE);a.gameMode.isChallenge&&s.length>0&&(A=s.map(l=>l.value-1));const R=E.misc.modifiers,n=He(100),I=n>=65?6:n>=15?7:n>=5?8:[9,10],r=$e(Kf(I,MX,A)),L={species:r,isBoss:!0,modifierConfigs:R.map(l=>({modifier:l,stackCount:l.getStackCount()}))};!Pe(r.forms)&&r.forms.length>0&&(L.formIndex=0),await OE({pokemonConfigs:[L]})}).build()).withSimpleOption({buttonLabel:`${ys}:option.2.label`,buttonTooltip:`${ys}:option.2.tooltip`,selected:[{speaker:`${ys}:speaker`,text:`${ys}:option.2.selected`}]},async()=>(wt(!0),!0)).withOutroDialogue([{text:`${ys}:outro`}]).build(),zs="mysteryEncounters/departmentStoreSale",hX=xA.withEncounterType(Et.DEPARTMENT_STORE_SALE).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(JA[0],100).withIntroSpriteConfigs([{spriteKey:"department_store_sale_lady",fileRoot:"mystery-encounters",hasShadow:!0,x:-20},{spriteKey:"",fileRoot:"",species:e.FURFROU,hasShadow:!0,repeat:!0,x:30}]).withIntroDialogue([{text:`${zs}:intro`},{text:`${zs}:intro_dialogue`,speaker:`${zs}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${zs}`).withTitle(`${zs}:title`).withDescription(`${zs}:description`).withQuery(`${zs}:query`).withSimpleOption({buttonLabel:`${zs}:option.1.label`,buttonTooltip:`${zs}:option.1.tooltip`},async()=>{const E=[];let A=0;for(;A<5;){const s=He(5);s<2?E.push(j.TM_COMMON):s<4?E.push(j.TM_GREAT):E.push(j.TM_ULTRA),A++}bt({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),wt()}).withSimpleOption({buttonLabel:`${zs}:option.2.label`,buttonTooltip:`${zs}:option.2.tooltip`},async()=>{const E=[];let A=0;for(;A<3;)He(3)===0?E.push(j.PP_UP):E.push(j.BASE_STAT_BOOSTER),A++;bt({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),wt()}).withSimpleOption({buttonLabel:`${zs}:option.3.label`,buttonTooltip:`${zs}:option.3.tooltip`},async()=>{const E=[];let A=0;for(;A<5;)He(5)===0?E.push(j.DIRE_HIT):E.push(j.TEMP_STAT_STAGE_BOOSTER),A++;bt({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),wt()}).withSimpleOption({buttonLabel:`${zs}:option.4.label`,buttonTooltip:`${zs}:option.4.tooltip`},async()=>{const E=[];let A=0;for(;A<4;){const s=He(65);s<10?E.push(j.POKEBALL):s<40?E.push(j.GREAT_BALL):s<60?E.push(j.ULTRA_BALL):E.push(j.ROGUE_BALL),A++}bt({guaranteedModifierTypeFuncs:E,fillRemaining:!1}),wt()}).withOutroDialogue([{text:`${zs}:outro`}]).build(),NE="mysteryEncounters/fieldTrip",_X=xA.withEncounterType(Et.FIELD_TRIP).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(JA[0],100).withIntroSpriteConfigs([{spriteKey:"preschooler_m",fileRoot:"trainer",hasShadow:!0},{spriteKey:"field_trip_teacher",fileRoot:"mystery-encounters",hasShadow:!0},{spriteKey:"preschooler_f",fileRoot:"trainer",hasShadow:!0}]).withIntroDialogue([{text:`${NE}:intro`},{text:`${NE}:intro_dialogue`,speaker:`${NE}:speaker`}]).withAutoHideIntroVisuals(!1).setLocalizationKey(`${NE}`).withTitle(`${NE}:title`).withDescription(`${NE}:description`).withQuery(`${NE}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${NE}:option.1.label`,buttonTooltip:`${NE}:option.1.tooltip`,secondOptionPrompt:`${NE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>s.moveset.map(R=>({label:R.getName(),handler:o(()=>(E.setDialogueToken("moveCategory",u.t(`${NE}:physical`)),Rc(s,R,g.PHYSICAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[oE(j.TEMP_STAT_STAGE_BOOSTER,[p.ATK]),oE(j.TEMP_STAT_STAGE_BOOSTER,[p.DEF]),oE(j.TEMP_STAT_STAGE_BOOSTER,[p.SPD]),oE(j.DIRE_HIT),oE(j.RARER_CANDY)];bt({guaranteedModifierTypeOptions:A,fillRemaining:!1})}wt(!E.misc.correctMove)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${NE}:option.2.label`,buttonTooltip:`${NE}:option.2.tooltip`,secondOptionPrompt:`${NE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>s.moveset.map(R=>({label:R.getName(),handler:o(()=>(E.setDialogueToken("moveCategory",u.t(`${NE}:special`)),Rc(s,R,g.SPECIAL),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[oE(j.TEMP_STAT_STAGE_BOOSTER,[p.SPATK]),oE(j.TEMP_STAT_STAGE_BOOSTER,[p.SPDEF]),oE(j.TEMP_STAT_STAGE_BOOSTER,[p.SPD]),oE(j.DIRE_HIT),oE(j.RARER_CANDY)];bt({guaranteedModifierTypeOptions:A,fillRemaining:!1})}wt(!E.misc.correctMove)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${NE}:option.3.label`,buttonTooltip:`${NE}:option.3.tooltip`,secondOptionPrompt:`${NE}:second_option_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>s.moveset.map(R=>({label:R.getName(),handler:o(()=>(E.setDialogueToken("moveCategory",u.t(`${NE}:status`)),Rc(s,R,g.STATUS),!0),"handler")})),"onPokemonSelected"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;if(E.misc.correctMove){const A=[oE(j.TEMP_STAT_STAGE_BOOSTER,[p.ACC]),oE(j.TEMP_STAT_STAGE_BOOSTER,[p.SPD]),oE(j.GREAT_BALL),oE(j.IV_SCANNER),oE(j.RARER_CANDY)];bt({guaranteedModifierTypeOptions:A,fillRemaining:!1})}wt(!E.misc.correctMove)}).build()).build();function Rc(E,A,s){const R=a.currentBattle.mysteryEncounter,n=A.getMove().category===s;R.setDialogueToken("pokeName",E.getNameToRender()),R.setDialogueToken("move",A.getName()),n?(R.selectedOption.dialogue.selected=[{text:`${NE}:option.selected`},{text:`${NE}:correct`,speaker:`${NE}:speaker`},{text:`${NE}:correct_exp`}],fR([E.id],100)):(R.selectedOption.dialogue.selected=[{text:`${NE}:option.selected`},{text:`${NE}:incorrect`,speaker:`${NE}:speaker`},{text:`${NE}:incorrect_exp`}],fR(a.getPlayerParty().map(I=>I.id),50)),R.misc={correctMove:n}}o(Rc,"pokemonAndMoveChosen");const mk=[t.PLUCK,t.COVET,t.KNOCK_OFF,t.THIEF,t.TRICK,t.SWITCHEROO],pk=[t.CHARM,t.FLATTER,t.DRAGON_CHEER,t.ALLURING_VOICE,t.ATTRACT,t.SWEET_SCENT,t.CAPTIVATE,t.AROMATIC_MIST],r6=[t.AQUA_STEP,t.CLANGOROUS_SOUL,t.DRAGON_DANCE,t.FEATHER_DANCE,t.FIERY_DANCE,t.LUNAR_DANCE,t.PETAL_DANCE,t.REVELATION_DANCE,t.QUIVER_DANCE,t.SWORDS_DANCE,t.TEETER_DANCE,t.VICTORY_DANCE];t.FAKE_OUT,t.FOLLOW_ME,t.TAUNT,t.ROAR,t.TELEPORT,t.CHARM,t.FAKE_TEARS,t.TICKLE,t.CAPTIVATE,t.RAGE_POWDER,t.SUBSTITUTE,t.SHED_TAIL;t.PROTECT,t.WIDE_GUARD,t.MAX_GUARD,t.SAFEGUARD,t.REFLECT,t.BARRIER,t.QUICK_GUARD,t.FLOWER_SHIELD,t.KINGS_SHIELD,t.CRAFTY_SHIELD,t.SPIKY_SHIELD,t.OBSTRUCT,t.DETECT;const PX=[t.BIND,t.CLAMP,t.INFESTATION,t.SAND_TOMB,t.SNAP_TRAP,t.THUNDER_CAGE,t.WRAP,t.SPIRIT_SHACKLE,t.MEAN_LOOK,t.JAW_LOCK,t.BLOCK,t.SPIDER_WEB,t.ANCHOR_SHOT,t.OCTOLOCK,t.PURSUIT,t.CONSTRICT,t.BEAT_UP,t.COIL,t.WRING_OUT,t.STRING_SHOT],GX=[O.INTIMIDATE,O.ARENA_TRAP,O.SHADOW_TAG,O.SUCTION_CUPS,O.STICKY_HOLD],dX=[O.FLAME_BODY,O.FLASH_FIRE,O.WELL_BAKED_BODY,O.HEATPROOF,O.THERMAL_EXCHANGE,O.THICK_FAT,O.WATER_BUBBLE,O.MAGMA_ARMOR,O.WATER_VEIL,O.STEAM_ENGINE,O.PRIMORDIAL_SEA],ma=class ma extends ns{constructor(A,s,R,n,I=!0,r=!1,L=!0,N=null,l=!1,C=!1){super(A),this.selfTarget=s,this.stats=R,this.stages=n,this.showMessage=I,this.ignoreAbilities=r,this.canBeCopied=L,this.onChange=N,this.comingFromMirrorArmorUser=l,this.comingFromStickyWeb=C}start(){var N;if(this.stats.length>1){for(let l=0;l<this.stats.length;l++){const C=[this.stats[l]];a.unshiftPhase(new ma(this.battlerIndex,this.selfTarget,C,this.stages,this.showMessage,this.ignoreAbilities,this.canBeCopied,this.onChange,this.comingFromMirrorArmorUser))}return this.end()}const A=this.getPokemon();let s;if(A.isPlayer())if(!this.comingFromStickyWeb)s=a.getEnemyField()[a.currentBattle.lastEnemyInvolved];else{const l=a.arena.findTagsOnSide(C=>C.tagType===Fe.STICKY_WEB,Dt.PLAYER)[0].sourceId;a.getEnemyField().forEach(C=>{C.id===l&&(s=C)})}else if(!this.comingFromStickyWeb)s=a.getPlayerField()[a.currentBattle.lastPlayerInvolved];else{const l=a.arena.findTagsOnSide(C=>C.tagType===Fe.STICKY_WEB,Dt.ENEMY)[0].sourceId;a.getPlayerField().forEach(C=>{C.id===l&&(s=C)})}if(!A.isActive(!0))return this.end();const R=new je(this.stages);this.ignoreAbilities||_t(tN,A,null,!1,R);let n=!1;const I=this.stats.filter(l=>{const C=new Pt(!1);if(!this.selfTarget&&R.value<0&&a.arena.applyTagsForSide(OU,A.isPlayer()?Dt.PLAYER:Dt.ENEMY,!1,null,C),!C.value&&!this.selfTarget&&R.value<0){Yl(aO,A,l,C,n),Yl(RL,A,l,C,n,A);const U=A.getAlly();Pe(U)||Yl(RL,U,l,C,n,A),s!==void 0&&!A.findTag(D=>D instanceof ND)&&!this.comingFromMirrorArmorUser&&Yl(mU,A,l,C,n,s,this.stages)}return C.value&&(n=!0),!C.value}),r=I.map(l=>(R.value>=1?Math.min(A.getStatStage(l)+R.value,6):Math.max(A.getStatStage(l)+R.value,-6))-A.getStatStage(l));(N=this.onChange)==null||N.call(this,this.getPokemon(),I,r);const L=o(()=>{if(this.showMessage){const C=this.getStatStageChangeMessages(I,R.value,r);for(const U of C)a.queueMessage(U)}for(const C of I)R.value>0&&A.getStatStage(C)<6?(A.turnData||A.resetTurnData(),A.turnData.statStagesIncreased=!0):R.value<0&&A.getStatStage(C)>-6&&(A.turnData||A.resetTurnData(),A.turnData.statStagesDecreased=!0),A.setStatStage(C,A.getStatStage(C)+R.value);if(R.value>0&&this.canBeCopied)for(const C of A.getOpponents())_t(JU,C,null,!1,this.stats,R.value);if(Sj(lU,A,I,this.stages,this.selfTarget),!(a.findPhase(C=>C instanceof ma&&C.battlerIndex===this.battlerIndex)instanceof ma)){const C=a.applyModifier(FN,this.player,A);C&&(A.loseHeldItem(C),a.updateModifiers(this.player))}A.updateInfo(),Za(LO.Stat_Change).then(()=>super.end())},"end");if(r.filter(l=>l).length&&a.moveAnimations){A.enableMask();const l=A.maskSprite,C=(this.player?106:236)*A.getSpriteScale()*a.field.scale,U=((this.player?148:84)+(R.value>=1?160:0))*A.getSpriteScale()*a.field.scale,D=156*a.field.scale*A.getSpriteScale(),M=316*a.field.scale*A.getSpriteScale(),h=R.value>=1?p[p.ATK].toLowerCase():p[p.SPD].toLowerCase(),_=a.add.tileSprite(C,U,D,M,"battle_stats",h);_.setPipeline(a.fieldSpritePipeline),_.setAlpha(0),_.setScale(6),_.setOrigin(.5,1),a.playSound(`se/stat_${R.value>=1?"up":"down"}`),_.setMask(new Phaser.Display.Masks.BitmapMask(a,l??void 0)),a.tweens.add({targets:_,duration:250,alpha:.8375,onComplete:o(()=>{a.tweens.add({targets:_,delay:1e3,duration:250,alpha:0})},"onComplete")}),a.tweens.add({targets:_,duration:1500,y:`${R.value>=1?"-":"+"}=${160*6}`}),a.time.delayedCall(1750,()=>{A.disableMask(),L()})}else L()}aggregateStatStageChanges(){const A=[p.ACC,p.EVA],s=A.some(n=>this.stats.includes(n));let R;if(this.stats.length===1)for(;(R=a.findPhase(n=>n instanceof ma&&n.battlerIndex===this.battlerIndex&&n.stats.length===1&&n.stats[0]===this.stats[0]&&n.selfTarget===this.selfTarget&&n.showMessage===this.showMessage&&n.ignoreAbilities===this.ignoreAbilities))&&(this.stages+=R.stages,!!a.tryRemovePhase(n=>n===R)););for(;(R=a.findPhase(n=>n instanceof ma&&n.battlerIndex===this.battlerIndex&&n.selfTarget===this.selfTarget&&A.some(I=>n.stats.includes(I))===s&&n.stages===this.stages&&n.showMessage===this.showMessage&&n.ignoreAbilities===this.ignoreAbilities))&&(this.stats.push(...R.stats),!!a.tryRemovePhase(n=>n===R)););}getStatStageChangeMessages(A,s,R){const n=[],I={};for(let r=0;r<R.length;r++){const L=R[r];I[L]||(I[L]=[]),I[L].push(r)}return Object.keys(I).forEach(r=>{const L=A.filter((l,C)=>I[r].includes(C));let N="";L.length>1?(N=L.length>=5?u.t("battle:stats"):`${L.slice(0,-1).map(l=>u.t(mE(l))).join(", ")}${L.length>2?",":""} ${u.t("battle:statsAnd")} ${u.t(mE(L[L.length-1]))}`,n.push(u.t(xb(Math.abs(Number.parseInt(r)),s>=1),{pokemonNameWithAffix:ee(this.getPokemon()),stats:N,count:L.length}))):(N=u.t(mE(L[0])),n.push(u.t(xb(Math.abs(Number.parseInt(r)),s>=1),{pokemonNameWithAffix:ee(this.getPokemon()),stats:N,count:L.length})))}),n}};o(ma,"StatStageChangePhase");let AA=ma;const js="mysteryEncounters/fightOrFlight",HX=xA.withEncounterType(Et.FIGHT_OR_FLIGHT).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${js}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=Il(il),s=Wf(A,!0);E.setDialogueToken("enemyPokemon",s.getNameToRender());const R={pokemonConfigs:[{level:A,species:s.species,dataSource:new Ks(s),isBoss:!0,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(N=>{SE(`${js}:option.1.stat_boost`),a.unshiftPhase(new AA(N.getBattlerIndex(),!0,[He(4,1)],2))},"mysteryEncounterBattleEffects")}]};E.enemyPartyConfigs=[R];const n=a.currentBattle.waveIndex>160?V.MASTER:a.currentBattle.waveIndex>120?V.ROGUE:a.currentBattle.waveIndex>40?V.ULTRA:V.GREAT;Ti(a.getPlayerParty(),yE.PLAYER,0);let I=null;for(;!I||I.type.id.includes("TM_")||I.type.id==="CANDY_JAR";)I=Bf(1,a.getPlayerParty(),[],{guaranteedModifierTiers:[n],allowLuckUpgrades:!1})[0];E.setDialogueToken("itemName",I.type.name),E.misc=I;const{spriteKey:r,fileRoot:L}=J0(s);return E.spriteConfigs=[{spriteKey:I.type.iconImage,fileRoot:"items",hasShadow:!1,x:35,y:-5,scale:.75,isItem:!0,disableAnimation:!0},{spriteKey:r,fileRoot:L,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}],!0}).setLocalizationKey(`${js}`).withTitle(`${js}:title`).withDescription(`${js}:description`).withQuery(`${js}:query`).withSimpleOption({buttonLabel:`${js}:option.1.label`,buttonTooltip:`${js}:option.1.tooltip`,selected:[{text:`${js}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter.misc;bt({guaranteedModifierTypeOptions:[E],fillRemaining:!1}),await OE(a.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new $a(mk,!0)).withDialogue({buttonLabel:`${js}:option.2.label`,buttonTooltip:`${js}:option.2.tooltip`,disabledButtonTooltip:`${js}:option.2.disabled_tooltip`,selected:[{text:`${js}:option.2.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=a.currentBattle.mysteryEncounter.misc;bt({guaranteedModifierTypeOptions:[A],fillRemaining:!1});const s=E.options[1].primaryPokemon;fR(s.id,E.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),wt()}).build()).withSimpleOption({buttonLabel:`${js}:option.3.label`,buttonTooltip:`${js}:option.3.tooltip`,selected:[{text:`${js}:option.3.selected`}]},async()=>(wt(!0),!0)).build(),L6=t.SURF,o6=t.FLY,T6=25,rs="mysteryEncounters/lostAtSea",fX=xA.withEncounterType(Et.LOST_AT_SEA).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withIntroSpriteConfigs([{spriteKey:"lost_at_sea_buoy",fileRoot:"mystery-encounters",hasShadow:!1,x:20,y:3}]).withIntroDialogue([{text:`${rs}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;return E.setDialogueToken("damagePercentage",String(T6)),E.setDialogueToken("option1RequiredMove",new Lt(L6).getName()),E.setDialogueToken("option2RequiredMove",new Lt(o6).getName()),!0}).setLocalizationKey(`${rs}`).withTitle(`${rs}:title`).withDescription(`${rs}:description`).withQuery(`${rs}:query`).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(L6).withDialogue({buttonLabel:`${rs}:option.1.label`,disabledButtonLabel:`${rs}:option.1.label_disabled`,buttonTooltip:`${rs}:option.1.tooltip`,disabledButtonTooltip:`${rs}:option.1.tooltip_disabled`,selected:[{text:`${rs}:option.1.selected`}]}).withOptionPhase(async()=>S6()).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPokemonCanLearnMoveRequirement(o6).withDialogue({buttonLabel:`${rs}:option.2.label`,disabledButtonLabel:`${rs}:option.2.label_disabled`,buttonTooltip:`${rs}:option.2.tooltip`,disabledButtonTooltip:`${rs}:option.2.tooltip_disabled`,selected:[{text:`${rs}:option.2.selected`}]}).withOptionPhase(async()=>S6()).build()).withSimpleOption({buttonLabel:`${rs}:option.3.label`,buttonTooltip:`${rs}:option.3.tooltip`,selected:[{text:`${rs}:option.3.selected`}]},async()=>{const E=a.getPlayerParty().filter(A=>A.isAllowedInBattle());for(const A of E){const s=T6/100,R=Math.floor(A.getMaxHp()*s);Ff(A,R)}return wt(),!0}).withOutroDialogue([{text:`${rs}:outro`}]).build();function S6(){var s,R;const E=$e(e.LAPRAS),{mysteryEncounter:A}=a.currentBattle;return(R=(s=A==null?void 0:A.selectedOption)==null?void 0:s.primaryPokemon)!=null&&R.id?fR(A.selectedOption.primaryPokemon.id,E.baseExp,!0):console.warn("Lost at sea: No guide pokemon found but pokemon guides player. huh!?"),wt(),!0}o(S6,"handlePokemonGuidingYouPhase");const NR="mysteryEncounters/mysteriousChallengers",BX=xA.withEncounterType(Et.MYSTERIOUS_CHALLENGERS).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${NR}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=a.arena.randomTrainerType(a.currentBattle.waveIndex),s=tE[A].clone();let R=!1;s.hasGenders&&(R=!!He(2));const n=s.getSpriteKey(R,s.doubleOnly);E.enemyPartyConfigs.push({trainerConfig:s,female:R});let I=0,r=a.arena.randomTrainerType(a.currentBattle.waveIndex);for(;I<5&&r===A;)r=a.arena.randomTrainerType(a.currentBattle.waveIndex),I++;const L=new QA(new Rt(1,Ze.STRONGER,!1,!0),new Rt(Math.min(Math.ceil(a.currentBattle.waveIndex/20),5),Ze.AVERAGE,!1,!0)),N=tE[r].clone();N.setPartyTemplates(L),R=!1,N.hasGenders&&(R=!!He(2));const l=N.getSpriteKey(R,N.doubleOnly);E.enemyPartyConfigs.push({trainerConfig:N,levelAdditiveModifier:1,female:R});const C=a.arena.randomTrainerType(a.currentBattle.waveIndex,!0),U=Xe.ELITE_FOUR,D=tE[C].clone();D.title=tE[C].title,D.setPartyTemplates(U),D.partyTemplateFunc=null,R=!1,D.hasGenders&&(R=!!He(2));const M=D.getSpriteKey(R,D.doubleOnly);return E.enemyPartyConfigs.push({trainerConfig:D,levelAdditiveModifier:1.5,female:R}),E.spriteConfigs=[{spriteKey:n,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:l,fileRoot:"trainer",hasShadow:!0,tint:1},{spriteKey:M,fileRoot:"trainer",hasShadow:!0,tint:1}],!0}).setLocalizationKey(`${NR}`).withTitle(`${NR}:title`).withDescription(`${NR}:description`).withQuery(`${NR}:query`).withSimpleOption({buttonLabel:`${NR}:option.1.label`,buttonTooltip:`${NR}:option.1.tooltip`,selected:[{text:`${NR}:option.selected`}]},async()=>{const A=a.currentBattle.mysteryEncounter.enemyPartyConfigs[0];bt({guaranteedModifierTypeFuncs:[j.TM_COMMON,j.TM_GREAT,j.MEMORY_MUSHROOM],fillRemaining:!0});let s;a.executeWithSeedOffset(()=>{s=OE(A)},a.currentBattle.waveIndex*10),await s}).withSimpleOption({buttonLabel:`${NR}:option.2.label`,buttonTooltip:`${NR}:option.2.tooltip`,selected:[{text:`${NR}:option.selected`}]},async()=>{const A=a.currentBattle.mysteryEncounter.enemyPartyConfigs[1];bt({guaranteedModifierTiers:[V.ULTRA,V.ULTRA,V.GREAT,V.GREAT],fillRemaining:!0});let s;a.executeWithSeedOffset(()=>{s=OE(A)},a.currentBattle.waveIndex*100),await s}).withSimpleOption({buttonLabel:`${NR}:option.3.label`,buttonTooltip:`${NR}:option.3.tooltip`,selected:[{text:`${NR}:option.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[2];E.expMultiplier=.9,bt({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.GREAT],fillRemaining:!0});let s;a.executeWithSeedOffset(()=>{s=OE(A)},a.currentBattle.waveIndex*1e3),await s}).withOutroDialogue([{text:`${NR}:outro`}]).build(),qs="mysteryEncounters/mysteriousChest",KL=100,N6=35,FL=20,hl=30,Oc=10,l6=5,gX=xA.withEncounterType(Et.MYSTERIOUS_CHEST).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withScenePartySizeRequirement(2,6,!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withIntroSpriteConfigs([{spriteKey:"mysterious_chest_blue",fileRoot:"mystery-encounters",hasShadow:!0,y:8,yShadow:6,alpha:1,disableAnimation:!0},{spriteKey:"mysterious_chest_red",fileRoot:"mystery-encounters",hasShadow:!1,y:8,yShadow:6,alpha:0,disableAnimation:!0}]).withIntroDialogue([{text:`${qs}:intro`}]).setLocalizationKey(`${qs}`).withTitle(`${qs}:title`).withDescription(`${qs}:description`).withQuery(`${qs}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A={levelAdditiveModifier:.5,disableSwitch:!0,pokemonConfigs:[{species:$e(e.GIMMIGHOUL),formIndex:0,isBoss:!0,moveSet:[t.NASTY_PLOT,t.SHADOW_BALL,t.POWER_GEM,t.THIEF]}]};return E.enemyPartyConfigs=[A],E.setDialogueToken("gimmighoulName",$e(e.GIMMIGHOUL).getName()),E.setDialogueToken("trapPercent",N6.toString()),E.setDialogueToken("commonPercent",FL.toString()),E.setDialogueToken("ultraPercent",hl.toString()),E.setDialogueToken("roguePercent",Oc.toString()),E.setDialogueToken("masterPercent",l6.toString()),!0}).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${qs}:option.1.label`,buttonTooltip:`${qs}:option.1.tooltip`,selected:[{text:`${qs}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.introVisuals,s=He(KL);if(E.misc={roll:s},s<N6){const R=A.getSpriteAtIndex(0);A.getSpriteAtIndex(1)[0].setAlpha(1),R[0].setAlpha(.001)}A.spriteConfigs[0].disableAnimation=!1,A.spriteConfigs[1].disableAnimation=!1,A.playAnim()}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.roll;if(A>=KL-FL)bt({guaranteedModifierTiers:[V.COMMON,V.COMMON,V.GREAT,V.GREAT]}),SE(`${qs}:option.1.normal`),wt();else if(A>=KL-FL-hl)bt({guaranteedModifierTiers:[V.ULTRA,V.ULTRA,V.ULTRA]}),SE(`${qs}:option.1.good`),wt();else if(A>=KL-FL-hl-Oc)bt({guaranteedModifierTiers:[V.ROGUE,V.ROGUE]}),SE(`${qs}:option.1.great`),wt();else if(A>=KL-FL-hl-Oc-l6)bt({guaranteedModifierTiers:[V.MASTER]}),SE(`${qs}:option.1.amazing`),wt();else{const s=pf(!0,!1);fk(s),E.setDialogueToken("pokeName",s.getNameToRender()),await EA(`${qs}:option.1.bad`),a.getPokemonAllowedInBattle().length===0?(a.clearPhaseQueue(),a.unshiftPhase(new gO)):(await AE(!0,!0,500),bt({fillRemaining:!0}),await OE(E.enemyPartyConfigs[0]))}}).build()).withSimpleOption({buttonLabel:`${qs}:option.2.label`,buttonTooltip:`${qs}:option.2.tooltip`,selected:[{text:`${qs}:option.2.selected`}]},async()=>(wt(!0),!0)).build(),QE="mysteryEncounters/shadyVitaminDealer",C6=1.5,mX=5,pX=xA.withEncounterType(Et.SHADY_VITAMIN_DEALER).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new an(0,C6)).withPrimaryPokemonHealthRatioRequirement([.51,1]).withIntroSpriteConfigs([{spriteKey:e.KROOKODILE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:12,y:-5,yShadow:-5},{spriteKey:"shady_vitamin_dealer",fileRoot:"mystery-encounters",hasShadow:!0,x:-12,y:3,yShadow:3}]).withIntroDialogue([{text:`${QE}:intro`},{text:`${QE}:intro_dialogue`,speaker:`${QE}:speaker`}]).setLocalizationKey(`${QE}`).withTitle(`${QE}:title`).withDescription(`${QE}:description`).withQuery(`${QE}:query`).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,C6).withDialogue({buttonLabel:`${QE}:option.1.label`,buttonTooltip:`${QE}:option.1.tooltip`,selected:[{text:`${QE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{SO(-E.options[0].requirements[0].requiredMoney);const n=[mt(j.BASE_STAT_BOOSTER),mt(j.BASE_STAT_BOOSTER)];E.setDialogueToken("boost1",n[0].name),E.setDialogueToken("boost2",n[1].name),E.misc={chosenPokemon:R,modifiers:n}},"onPokemonSelected"),void 0,o(R=>R.isAllowedInChallenge()?E.pokemonMeetsPrimaryRequirements(R)?null:VA(`${QE}:invalid_selection`)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:R.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon,s=E.misc.modifiers;for(const R of s)await XR(A,R);wt(!0)}).withPostOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon;Ff(A,Math.floor(A.getMaxHp()/2));const s=A.nature;let R=He(25);for(;R===s;)R=He(25);A.setCustomNature(R),E.setDialogueToken("newNature",zR(R)),SE(`${QE}:cheap_side_effects`),fR([A.id],100),await A.updateInfo()}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,mX).withDialogue({buttonLabel:`${QE}:option.2.label`,buttonTooltip:`${QE}:option.2.tooltip`,selected:[{text:`${QE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{SO(-E.options[1].requirements[0].requiredMoney);const n=[mt(j.BASE_STAT_BOOSTER),mt(j.BASE_STAT_BOOSTER)];E.setDialogueToken("boost1",n[0].name),E.setDialogueToken("boost2",n[1].name),E.misc={chosenPokemon:R,modifiers:n}},"onPokemonSelected"),void 0,o(R=>EI(R,`${QE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenPokemon,s=E.misc.modifiers;for(const R of s)await XR(A,R);wt(!0)}).withPostOptionPhase(async()=>{const A=a.currentBattle.mysteryEncounter.misc.chosenPokemon;SE(`${QE}:no_bad_effects`),fR([A.id],100),await A.updateInfo()}).build()).withSimpleOption({buttonLabel:`${QE}:option.3.label`,buttonTooltip:`${QE}:option.3.tooltip`,selected:[{text:`${QE}:option.3.selected`,speaker:`${QE}:speaker`}]},async()=>(wt(!0),!0)).build(),Mp=class Mp extends HE{constructor(A){super(),this.resumeBgm=A}start(){super.start();const A=a.isBgmPlaying();A&&a.fadeOutBgm(1e3,!1),a.ui.fadeOut(1e3).then(()=>{for(const R of a.getPlayerParty()){R.hp=R.getMaxHp(),R.resetStatus();for(const n of R.moveset)n.ppUsed=0;R.updateInfo(!0)}const s=a.playSoundWithoutBgm("heal");a.time.delayedCall(Ot(s.totalDuration*1e3),()=>{s.destroy(),this.resumeBgm&&A&&a.playBgm(),a.ui.fadeIn(500).then(()=>this.end())})}),a.arena.playerTerasUsed=0}};o(Mp,"PartyHealPhase");let kr=Mp;const eR="mysteryEncounters/slumberingSnorlax",KX=xA.withEncounterType(Et.SLUMBERING_SNORLAX).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.SNORLAX.toString(),fileRoot:"pokemon",hasShadow:!0,tint:.25,scale:1.25,repeat:!0,y:5}]).withIntroDialogue([{text:`${eR}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,R={levelAdditiveModifier:.5,pokemonConfigs:[{species:$e(e.SNORLAX),isBoss:!0,shiny:!1,status:[re.SLEEP,5],moveSet:[t.REST,t.SLEEP_TALK,t.CRUNCH,t.GIGA_IMPACT],modifierConfigs:[{modifier:mt(j.BERRY,[gt.SITRUS]),stackCount:2},{modifier:mt(j.BERRY,[gt.ENIGMA]),stackCount:2}],customPokemonData:new Ms({spriteScale:1.25}),aiType:M7.SMART}]};return E.enemyPartyConfigs=[R],Ll([t.SNORE]),E.setDialogueToken("snorlaxName",$e(e.SNORLAX).getName()),!0}).setLocalizationKey(`${eR}`).withTitle(`${eR}:title`).withDescription(`${eR}:description`).withQuery(`${eR}:query`).withSimpleOption({buttonLabel:`${eR}:option.1.label`,buttonTooltip:`${eR}:option.1.tooltip`,selected:[{text:`${eR}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter;bt({guaranteedModifierTypeFuncs:[j.LEFTOVERS],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.SNORE),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.SNORE),ignorePp:!0}),await OE(E.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${eR}:option.2.label`,buttonTooltip:`${eR}:option.2.tooltip`,selected:[{text:`${eR}:option.2.selected`}]},async()=>{a.unshiftPhase(new kr(!0)),SE(`${eR}:option.2.rest_result`),wt()}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new $a(mk,!0)).withDialogue({buttonLabel:`${eR}:option.3.label`,buttonTooltip:`${eR}:option.3.tooltip`,disabledButtonTooltip:`${eR}:option.3.disabled_tooltip`,selected:[{text:`${eR}:option.3.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;bt({guaranteedModifierTypeFuncs:[j.LEFTOVERS],fillRemaining:!1}),fR(E.primaryPokemon.id,$e(e.SNORLAX).baseExp),wt()}).build()).build(),cE="mysteryEncounters/trainingSession",FX=xA.withEncounterType(Et.TRAINING_SESSION).withEncounterTier(zt.ULTRA).withSceneWaveRangeRequirement(...JA).withScenePartySizeRequirement(2,6,!0).withFleeAllowed(!1).withHideWildIntroMessage(!0).withPreventGameStatsUpdates(!0).withIntroSpriteConfigs([{spriteKey:"training_session_gear",fileRoot:"mystery-encounters",hasShadow:!0,y:6,x:5,yShadow:-2}]).withIntroDialogue([{text:`${cE}:intro`}]).setLocalizationKey(`${cE}`).withTitle(`${cE}:title`).withDescription(`${cE}:description`).withQuery(`${cE}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${cE}:option.1.label`,buttonTooltip:`${cE}:option.1.tooltip`,selected:[{text:`${cE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{E.misc={playerPokemon:R}},"onPokemonSelected"),void 0,o(R=>EI(R,`${cE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(a.currentBattle.waveIndex/50),5),R=new eo,n=nc(A,s,R);a.removePokemonFromPlayerParty(A,!1),bt({fillRemaining:!0},void 0,o(()=>{E.setDialogueToken("stat1","-"),E.setDialogueToken("stat2","-");let r=[];A.ivs.forEach((N,l)=>{N<31&&r.push({iv:N,index:l})});let L=0;for(;r.length>0&&L<2;){r=GO(r);const N=r.pop();let l=N.iv;L===0?E.setDialogueToken("stat1",u.t(mE(N.index))??""):E.setDialogueToken("stat2",u.t(mE(N.index))??""),N.iv<=21&&N.iv-1%5===0&&(l+=1),l+=N.iv<=10?10:N.iv<=20?5:3,l=Math.min(l,31),A.ivs[N.index]=l,L++}L>0&&(A.calculateStats(),a.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),a.gameData.setPokemonCaught(A,!1)),a.getPlayerParty().push(A);for(const N of R.value)N.pokemonId=A.id,a.addModifier(N,!0,!1,!1,!0);a.updateModifiers(!0),SE(`${cE}:option.1.finished`)},"onBeforeRewardsPhase")),await OE(n)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${cE}:option.2.label`,buttonTooltip:`${cE}:option.2.tooltip`,secondOptionPrompt:`${cE}:option.2.select_prompt`,selected:[{text:`${cE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=new Array(25).fill(null).map((n,I)=>I);return Os(o(n=>A.map(I=>({label:zR(I,!0,!0,!0,a.uiTheme),handler:o(()=>(E.setDialogueToken("nature",zR(I)),E.misc={playerPokemon:n,chosenNature:I},!0),"handler")})),"onPokemonSelected"),void 0,o(n=>EI(n,`${cE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(a.currentBattle.waveIndex/40),6),R=new eo,n=nc(A,s,R);a.removePokemonFromPlayerParty(A,!1),bt({fillRemaining:!0},void 0,o(()=>{SE(`${cE}:option.2.finished`),A.setCustomNature(E.misc.chosenNature),a.gameData.unlockSpeciesNature(A.species,E.misc.chosenNature),a.getPlayerParty().push(A);for(const r of R.value)r.pokemonId=A.id,a.addModifier(r,!0,!1,!1,!0);a.updateModifiers(!0)},"onBeforeRewardsPhase")),await OE(n)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${cE}:option.3.label`,buttonTooltip:`${cE}:option.3.tooltip`,secondOptionPrompt:`${cE}:option.3.select_prompt`,selected:[{text:`${cE}:option.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{const n=R.getFusionSpeciesForm()?R.getFusionSpeciesForm():R.getSpeciesForm(),I=n.getAbilityCount(),r=new Array(I).fill(null).map((N,l)=>nA[n.getAbility(l)]),L=[];return r.forEach((N,l)=>{if(!L.some(C=>C.label===N.name)){const C={label:N.name,handler:o(()=>(E.setDialogueToken("ability",N.name),E.misc={playerPokemon:R,abilityIndex:l},!0),"handler"),onHover:o(()=>{EA(N.description,0,0,!1)},"onHover")};L.push(C)}}),L},"onPokemonSelected"),void 0,o(R=>EI(R,`${cE}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.playerPokemon,s=Math.min(2+Math.floor(a.currentBattle.waveIndex/30),6),R=new eo,n=nc(A,s,R);n.pokemonConfigs[0].tags=[w.MYSTERY_ENCOUNTER_POST_SUMMON],a.removePokemonFromPlayerParty(A,!1),bt({fillRemaining:!0},void 0,o(()=>{var L,N;SE(`${cE}:option.3.finished`);const r=E.misc.abilityIndex;if(A.getFusionSpeciesForm()){A.fusionAbilityIndex=r;const l=(L=A.fusionSpecies)==null?void 0:L.getRootSpeciesId();!Pe(l)&&tA.hasOwnProperty(l)&&a.gameData.dexData[l].caughtAttr&&(a.gameData.starterData[l].abilityAttr|=A.fusionAbilityIndex!==1||(N=A.fusionSpecies)!=null&&N.ability2?1<<A.fusionAbilityIndex:hE.ABILITY_HIDDEN)}else A.abilityIndex=r;A.calculateStats(),a.gameData.setPokemonCaught(A,!1),a.getPlayerParty().push(A);for(const l of R.value)l.pokemonId=A.id,a.addModifier(l,!0,!1,!1,!0);a.updateModifiers(!0)},"onBeforeRewardsPhase")),await OE(n)}).build()).withSimpleOption({buttonLabel:`${cE}:option.4.label`,buttonTooltip:`${cE}:option.4.tooltip`,selected:[{text:`${cE}:option.4.selected`}]},async()=>(wt(!0),!0)).build();function nc(E,A,s){E.resetSummonData(),s.value=E.getHeldItems();const R=s.value.map(I=>({modifier:I.clone(),isTransferable:!1,stackCount:I.stackCount})),n=new Ks(E);return{pokemonConfigs:[{species:E.species,isBoss:!0,bossSegments:A,formIndex:E.formIndex,level:E.level,dataSource:n,modifierConfigs:R}]}}o(nc,"getEnemyConfig");const cp=class cp{constructor(){this.value=[]}};o(cp,"ModifiersHolder");let eo=cp;const hp=class hp extends ns{constructor(A){super(A)}start(){super.start();const A=this.getPokemon();let s=[],R=[],n=[];const I=a.getEnemyField(),r=a.uiTheme;for(let L=0;L<I.length;L++){s=I[L].ivs;const N=a.gameData.dexData[I[L].species.getRootSpeciesId()].ivs;R=I[L].getBattleInfo().getStatsValueContainer().list,n=R.filter(l=>l.name.indexOf("icon_stat_label")>=0);for(let l=0;l<n.length;l++){const C=p[n[l].frame.name];if(s[C]>N[C]&&Hn.indexOf(Number(C))>=0){const U=s[C]===31?eA(k.PERFECT_IV,!1,r):eA(k.SUMMARY_GREEN,!1,r),D=Phaser.Display.Color.HexStringToColor(U).color;n[l].setTint(D)}n[l].setVisible(!0)}}a.hideIvs?this.end():a.ui.showText(u.t("battle:ivScannerUseQuestion",{pokemonName:ee(A)}),null,()=>{a.ui.setMode(te.CONFIRM,()=>{a.ui.setMode(te.MESSAGE),a.ui.clearText(),a.ui.getMessageHandler().promptIvs(A.id,A.ivs).then(()=>this.end())},()=>{a.ui.setMode(te.MESSAGE),a.ui.clearText(),this.end()})})}};o(hp,"ScanIvsPhase");let MS=hp;const Kk=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN];e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON;const LE="mysteryEncounters/safariZone",Pr=[512,184,768],u6=2,U6=3,YX=xA.withEncounterType(Et.SAFARI_ZONE).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new an(0,u6)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"safari_zone",fileRoot:"mystery-encounters",hasShadow:!1,x:4,y:6}]).withIntroDialogue([{text:`${LE}:intro`}]).setLocalizationKey(`${LE}`).withTitle(`${LE}:title`).withDescription(`${LE}:description`).withQuery(`${LE}:query`).withOnInit(()=>{var E;return(E=a.currentBattle.mysteryEncounter)==null||E.setDialogueToken("numEncounters",U6.toString()),!0}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneRequirement(new an(0,u6)).withDialogue({buttonLabel:`${LE}:option.1.label`,buttonTooltip:`${LE}:option.1.tooltip`,selected:[{text:`${LE}:option.1.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return E.continuousEncounter=!0,E.misc={safariPokemonRemaining:U6},SO(-E.options[0].requirements[0].requiredMoney),a.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),a.loadSe("PRSFX- Sludge Bomb2","battle_anims","PRSFX- Sludge Bomb2.wav"),a.loadSe("PRSFX- Taunt2","battle_anims","PRSFX- Taunt2.wav"),a.loadAtlas("safari_zone_bait","mystery-encounters"),a.loadAtlas("safari_zone_mud","mystery-encounters"),a.currentBattle.enemyParty=[],await AE(),await pu(),GS({overrideOptions:cS,hideDescription:!0}),!0}).build()).withSimpleOption({buttonLabel:`${LE}:option.2.label`,buttonTooltip:`${LE}:option.2.tooltip`,selected:[{text:`${LE}:option.2.selected`}]},async()=>(wt(!0),!0)).build(),cS=[Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${LE}:safari.1.label`,buttonTooltip:`${LE}:safari.1.tooltip`,selected:[{text:`${LE}:safari.1.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.pokemon;return await WX(A)?E.misc.safariPokemonRemaining>0?(await pu(),GS({overrideOptions:cS,startingCursorIndex:0,hideDescription:!0})):(E.continuousEncounter=!1,wt(!0)):await ac(0),!0}).build(),Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${LE}:safari.2.label`,buttonTooltip:`${LE}:safari.2.tooltip`,selected:[{text:`${LE}:safari.2.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter.misc.pokemon;return await yX(E),M6(2),D6(1,8)?await EA(VA(`${LE}:safari.eating`)??"",null,1e3,!1):await EA(VA(`${LE}:safari.busy_eating`)??"",null,1e3,!1),await ac(1),!0}).build(),Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${LE}:safari.3.label`,buttonTooltip:`${LE}:safari.3.tooltip`,selected:[{text:`${LE}:safari.3.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter.misc.pokemon;return await wX(E),D6(-2),M6(-1,8)?await EA(VA(`${LE}:safari.angry`)??"",null,1e3,!1):await EA(VA(`${LE}:safari.beside_itself_angry`)??"",null,1e3,!1),await ac(2),!0}).build(),Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${LE}:safari.4.label`,buttonTooltip:`${LE}:safari.4.tooltip`}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.pokemon;return await CX(A),E.misc.safariPokemonRemaining>0?(await pu(),GS({overrideOptions:cS,startingCursorIndex:3,hideDescription:!0})):(E.continuousEncounter=!1,wt(!0)),!0}).build()];async function pu(){const E=a.currentBattle.mysteryEncounter;E.setDialogueToken("remainingCount",E.misc.safariPokemonRemaining),a.queueMessage(VA(`${LE}:safari.remaining_count`)??"",null,!0);let A,s;a.executeWithSeedOffset(()=>{A=VX();const n=a.currentBattle.getLevelForWave();if(A=$e(A.getWildSpeciesForLevel(n,!0,!1,a.gameMode)),s=a.addEnemyPokemon(A,n,oe.NONE,!1),s.shiny||s.trySetShinySeed(),s.species.abilityHidden){const I=s.species.ability2?2:1;if(s.abilityIndex<I){const r=new je(256);a.applyModifiers(gn,!0,r),!He(r.value)&&(s.abilityIndex=I)}}s.calculateStats(),a.currentBattle.enemyParty.unshift(s)},a.currentBattle.waveIndex*1e3*E.misc.safariPokemonRemaining),a.gameData.setPokemonSeen(s,!0),await s.loadAssets(),E.misc.catchStage=0,E.misc.fleeStage=0,E.misc.pokemon=s,E.misc.safariPokemonRemaining-=1,a.unshiftPhase(new ts(0,!1)),E.setDialogueToken("pokemonName",ee(s)),a.findModifier(n=>n instanceof bI)&&a.pushPhase(new MS(s.getBattlerIndex()))}o(pu,"summonSafariPokemon");function WX(E){const A=E.species.catchRate,s=a.currentBattle.mysteryEncounter.misc.catchStage,R=(2+Math.min(Math.max(s,0),6))/(2-Math.max(Math.min(s,0),-6)),I=Math.round(A*1.5*R),r=Math.round(1048560/Math.sqrt(Math.sqrt(16711680/I)));return NX(E,we.POKEBALL,r)}o(WX,"throwPokeball");async function yX(E){const A=E.y,s=E.getFieldPositionOffset(),R=a.addFieldSprite(91,105,"safari_zone_bait","0001.png");return R.setOrigin(.5,.625),a.field.add(R),new Promise(n=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back_pb`),a.time.delayedCall(Pr[0],()=>{a.playSound("se/pb_throw"),a.trainer.setFrame("2"),a.time.delayedCall(Pr[1],()=>{a.trainer.setFrame("3"),a.time.delayedCall(Pr[2],()=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back`)})}),a.tweens.add({targets:R,x:{value:210+s[0],ease:"Linear"},y:{value:55+s[1],ease:"Cubic.easeOut"},duration:500,onComplete:o(()=>{let I=1;a.time.delayedCall(768,()=>{a.tweens.add({targets:E,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:A-5,loop:6,onStart:o(()=>{a.playSound("battle_anims/PRSFX- Bug Bite"),R.setFrame("0002.png")},"onStart"),onLoop:o(()=>{I%2===0&&a.playSound("battle_anims/PRSFX- Bug Bite"),I===4&&R.setFrame("0003.png"),I++},"onLoop"),onComplete:o(()=>{a.time.delayedCall(256,()=>{R.destroy(),n(!0)})},"onComplete")})})},"onComplete")})})})}o(yX,"throwBait");async function wX(E){const A=E.y,s=E.getFieldPositionOffset(),R=a.addFieldSprite(91,115,"safari_zone_mud","0001.png");return R.setOrigin(.5,.625),a.field.add(R),new Promise(n=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back_pb`),a.time.delayedCall(Pr[0],()=>{a.playSound("se/pb_throw"),a.trainer.setFrame("2"),a.time.delayedCall(Pr[1],()=>{a.trainer.setFrame("3"),a.time.delayedCall(Pr[2],()=>{a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back`)})}),a.tweens.add({targets:R,x:{value:230+s[0],ease:"Linear"},y:{value:55+s[1],ease:"Cubic.easeOut"},duration:500,onComplete:o(()=>{a.playSound("battle_anims/PRSFX- Sludge Bomb2"),R.setFrame("0002.png"),a.time.delayedCall(200,()=>{R.setFrame("0003.png"),a.time.delayedCall(400,()=>{R.setFrame("0004.png")})}),a.tweens.add({targets:R,alpha:0,ease:"Cubic.easeIn",duration:1e3,onComplete:o(()=>{R.destroy(),a.tweens.add({targets:E,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:A-20,loop:1,onStart:o(()=>{a.playSound("battle_anims/PRSFX- Taunt2")},"onStart"),onLoop:o(()=>{a.playSound("battle_anims/PRSFX- Taunt2")},"onLoop"),onComplete:o(()=>{n(!0)},"onComplete")})},"onComplete")})},"onComplete")})})})}o(wX,"throwMud");function vX(E,A){const s=E.species.catchRate,R=(2+Math.min(Math.max(A,0),6))/(2-Math.max(Math.min(A,0),-6)),n=(255*255-s*s)/255/2*R;return He(256)<n}o(vX,"isPokemonFlee");function D6(E,A){if(A&&He(10)>=A)return!1;const s=a.currentBattle.mysteryEncounter.misc.fleeStage??0;return a.currentBattle.mysteryEncounter.misc.fleeStage=Math.min(Math.max(s+E,-6),6),!0}o(D6,"tryChangeFleeStage");function M6(E,A){if(A&&He(10)>=A)return!1;const s=a.currentBattle.mysteryEncounter.misc.catchStage??0;return a.currentBattle.mysteryEncounter.misc.catchStage=Math.min(Math.max(s+E,-6),6),!0}o(M6,"tryChangeCatchStage");async function ac(E){const A=a.getEnemyParty();if(A.length>1){for(let I=1;I<A.length;I++)A[I].destroy();a.currentBattle.enemyParty=A.slice(0,1)}const s=a.currentBattle.mysteryEncounter,R=s.misc.pokemon;vX(R,s.misc.fleeStage)?(await lX(R),s.misc.safariPokemonRemaining>0?(await pu(),GS({overrideOptions:cS,startingCursorIndex:E,hideDescription:!0})):(s.continuousEncounter=!1,wt(!0))):(a.queueMessage(VA(`${LE}:safari.watching`)??"",0,null,1e3),GS({overrideOptions:cS,startingCursorIndex:E,hideDescription:!0}))}o(ac,"doEndTurn");function VX(){return $e(Kf([0,5],Kk,void 0,!1,!1,!1))}o(VX,"getSafariSpeciesSpawn");var TO=(E=>(E[E.MAGMA_BG=0]="MAGMA_BG",E[E.MAGMA_SPOUT=1]="MAGMA_SPOUT",E[E.SMOKESCREEN=2]="SMOKESCREEN",E[E.DANCE=3]="DANCE",E))(TO||{});const xs="mysteryEncounters/fieryFallout",xX=20,bX=xA.withEncounterType(Et.FIERY_FALLOUT).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(40,JA[1]).withCatchAllowed(!0).withIntroSpriteConfigs([]).withAnimations(TO.MAGMA_BG,TO.MAGMA_SPOUT).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroDialogue([{text:`${xs}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=$e(e.VOLCARONA),s={pokemonConfigs:[{species:A,isBoss:!1,gender:At.MALE,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(n=>{a.unshiftPhase(new AA(n.getBattlerIndex(),!0,[p.SPDEF,p.SPD],1))},"mysteryEncounterBattleEffects")},{species:A,isBoss:!1,gender:At.FEMALE,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(n=>{a.unshiftPhase(new AA(n.getBattlerIndex(),!0,[p.SPDEF,p.SPD],1))},"mysteryEncounterBattleEffects")}],doubleBattle:!0,disableSwitch:!0};E.enemyPartyConfigs=[s],E.spriteConfigs=[{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:-20,startFrame:20},{spriteKey:"",fileRoot:"",species:e.VOLCARONA,repeat:!0,hidden:!0,hasShadow:!0,x:20}],Ll([t.FIRE_SPIN,t.QUIVER_DANCE]);const R=a.getEnemyPokemon();return a.arena.trySetWeather(Oe.SUNNY,R),E.setDialogueToken("volcaronaName",$e(e.VOLCARONA).getName()),!0}).withOnVisualsStart(()=>{new Oa(TO.MAGMA_BG,a.getPlayerPokemon(),a.getPlayerPokemon()).playWithoutTargets(200,70,2,3);const A=new Oa(TO.MAGMA_SPOUT,a.getPlayerPokemon(),a.getPlayerPokemon());return A.playWithoutTargets(80,100,2),a.time.delayedCall(600,()=>{A.playWithoutTargets(-20,100,2)}),a.time.delayedCall(1200,()=>{A.playWithoutTargets(140,150,2)}),!0}).setLocalizationKey(`${xs}`).withTitle(`${xs}:title`).withDescription(`${xs}:description`).withQuery(`${xs}:query`).withSimpleOption({buttonLabel:`${xs}:option.1.label`,buttonTooltip:`${xs}:option.1.tooltip`,selected:[{text:`${xs}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter;bt({fillRemaining:!0},void 0,()=>c6()),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.FIRE_SPIN),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY_2,targets:[Wt.PLAYER_2],move:new Lt(t.FIRE_SPIN),ignorePp:!0}),await OE(a.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withSimpleOption({buttonLabel:`${xs}:option.2.label`,buttonTooltip:`${xs}:option.2.tooltip`,selected:[{text:`${xs}:option.2.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter,A=a.getPlayerParty().filter(R=>R.isAllowedInBattle()&&!R.getTypes().includes(i.FIRE));for(const R of A){const n=xX/100,I=Math.floor(R.getMaxHp()*n);Ff(R,I)}const s=A.filter(R=>Pe(R.status)||Pe(R.status.effect)||R.status.effect===re.NONE);if((s==null?void 0:s.length)>0){const R=He(s.length),n=s[R];n.trySetStatus(re.BURN)&&(E.setDialogueToken("burnedPokemon",n.getNameToRender()),E.setDialogueToken("abilityName",new ae(O.HEATPROOF,3).name),SE(`${xs}:option.2.target_burned`),gk(n,O.HEATPROOF))}wt(!0)}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(uI.Some(new br(i.FIRE,!0,1),new gu(dX,!0))).withDialogue({buttonLabel:`${xs}:option.3.label`,buttonTooltip:`${xs}:option.3.tooltip`,disabledButtonTooltip:`${xs}:option.3.disabled_tooltip`,selected:[{text:`${xs}:option.3.selected`}]}).withPreOptionPhase(async()=>{AE(!1,!1,2e3)}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;await AE(),bt({fillRemaining:!0},void 0,()=>{c6()});const A=E.options[2].primaryPokemon;fR([A.id],$e(e.VOLCARONA).baseExp*2),wt()}).build()).build();function c6(){var A;const E=(A=a.getPlayerParty())==null?void 0:A[0];if(E){let s=mt(j.ATTACK_TYPE_BOOSTER);s||(s=mt(j.ATTACK_TYPE_BOOSTER,[i.FIRE])),XR(E,s);const R=a.currentBattle.mysteryEncounter;R.setDialogueToken("itemName",s.name),R.setDialogueToken("leadPokemon",E.getNameToRender()),SE(`${xs}:found_item`)}}o(c6,"giveLeadPokemonAttackTypeBoostItem");const FR="mysteryEncounters/theStrongStuff",kX=15,h6=10,ZX=xA.withEncounterType(Et.THE_STRONG_STUFF).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withScenePartySizeRequirement(3,6).withMaxAllowedEncounters(1).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"berry_juice",fileRoot:"items",hasShadow:!0,isItem:!0,scale:1.25,x:-15,y:3,disableAnimation:!0},{spriteKey:e.SHUCKLE.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,scale:1.25,x:20,y:10,yShadow:7}]).withIntroDialogue([{text:`${FR}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A={levelAdditiveModifier:1,disableSwitch:!0,pokemonConfigs:[{species:$e(e.SHUCKLE),isBoss:!0,bossSegments:5,shiny:!1,customPokemonData:new Ms({spriteScale:1.25}),nature:rt.HARDY,moveSet:[t.INFESTATION,t.SALT_CURE,t.GASTRO_ACID,t.HEAL_ORDER],modifierConfigs:[{modifier:mt(j.BERRY,[gt.SITRUS])},{modifier:mt(j.BERRY,[gt.ENIGMA])},{modifier:mt(j.BERRY,[gt.APICOT])},{modifier:mt(j.BERRY,[gt.GANLON])},{modifier:mt(j.BERRY,[gt.LUM]),stackCount:2}],tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(s=>{SE(`${FR}:option.2.stat_boost`),a.unshiftPhase(new AA(s.getBattlerIndex(),!0,[p.DEF,p.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[A],Ll([t.GASTRO_ACID,t.STEALTH_ROCK]),E.setDialogueToken("shuckleName",$e(e.SHUCKLE).getName()),!0}).setLocalizationKey(`${FR}`).withTitle(`${FR}:title`).withDescription(`${FR}:description`).withQuery(`${FR}:query`).withSimpleOption({buttonLabel:`${FR}:option.1.label`,buttonTooltip:`${FR}:option.1.tooltip`,selected:[{text:`${FR}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter;return a.time.delayedCall(750,()=>{AE(!0,!0,50)}),a.getPlayerParty().slice(0).sort((s,R)=>{const n=s.getSpeciesForm().getBaseStatTotal();return R.getSpeciesForm().getBaseStatTotal()-n}).forEach((s,R)=>{R<2?(n6(s,-15),E.setDialogueToken("highBstPokemon"+(R+1),s.getNameToRender())):n6(s,h6)}),E.setDialogueToken("reductionValue",kX.toString()),E.setDialogueToken("increaseValue",h6.toString()),await EA(`${FR}:option.1.selected_2`,null,void 0,!0),E.dialogue.outro=[{text:`${FR}:outro`}],bt({fillRemaining:!0}),wt(!0),!0}).withSimpleOption({buttonLabel:`${FR}:option.2.label`,buttonTooltip:`${FR}:option.2.tooltip`,selected:[{text:`${FR}:option.2.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter;bt({guaranteedModifierTypeFuncs:[j.SOUL_DEW],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.GASTRO_ACID),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.STEALTH_ROCK),ignorePp:!0}),E.dialogue.outro=[],await AE(!0,!0,500),await OE(E.enemyPartyConfigs[0])}).build(),ws="mysteryEncounters/thePokemonSalesman",_l=4,XX=100,QX=xA.withEncounterType(Et.THE_POKEMON_SALESMAN).withEncounterTier(zt.ULTRA).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new an(0,_l)).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"pokemon_salesman",fileRoot:"mystery-encounters",hasShadow:!0}]).withIntroDialogue([{text:`${ws}:intro`},{text:`${ws}:intro_dialogue`,speaker:`${ws}:speaker`}]).setLocalizationKey(`${ws}`).withTitle(`${ws}:title`).withDescription(`${ws}:description`).withQuery(`${ws}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;let A=_6(),s=0;for(;(Pe(A.abilityHidden)||A.abilityHidden===O.NONE)&&s<5;)A=_6(),s++;let R;He(XX)===0||Pe(A.abilityHidden)||A.abilityHidden===O.NONE?(A=$e(e.MAGIKARP),R=new WE(A,5,2,A.formIndex,void 0,!0)):R=new WE(A,5,2,A.formIndex),R.generateAndPopulateMoveset();const{spriteKey:n,fileRoot:I}=J0(R);E.spriteConfigs.push({spriteKey:n,fileRoot:I,hasShadow:!0,repeat:!0,isPokemon:!0,isShiny:R.shiny,variant:R.variant});const r=tA[A.speciesId];let L=_l*(Math.max(r,2.5)/5);R.shiny&&(L=_l,R.abilityIndex=0,E.dialogue.encounterOptionsDialogue.description=`${ws}:description_shiny`,E.options[0].dialogue.buttonTooltip=`${ws}:option.1.tooltip_shiny`);const N=a.getWaveMoneyAmount(L);return E.setDialogueToken("purchasePokemon",R.getNameToRender()),E.setDialogueToken("price",N.toString()),E.misc={price:N,pokemon:R},R.calculateStats(),!0}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withHasDexProgress(!0).withSceneMoneyRequirement(0,_l).withDialogue({buttonLabel:`${ws}:option.1.label`,buttonTooltip:`${ws}:option.1.tooltip`,selected:[{text:`${ws}:option.1.selected_message`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.price,s=E.misc.pokemon;SO(-A,!0,!1),await _n(`${ws}:option.1.selected_dialogue`,`${ws}:speaker`),await AE();const R=new Ks(s);R.player=!1,await xr(R.toPokemon(),null,we.POKEBALL,!0,!0),wt(!0)}).build()).withSimpleOption({buttonLabel:`${ws}:option.2.label`,buttonTooltip:`${ws}:option.2.tooltip`,selected:[{text:`${ws}:option.2.selected`}]},async()=>(wt(!0),!0)).build();function _6(){return $e(Kf([0,5],Kk,void 0,!1,!1,!1))}o(_6,"getSalesmanSpeciesOffer");const qE="mysteryEncounters/anOfferYouCantRefuse",$X=10,JX=30,zX=xA.withEncounterType(Et.AN_OFFER_YOU_CANT_REFUSE).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withScenePartySizeRequirement(2,6,!0).withIntroSpriteConfigs([{spriteKey:e.LIEPARD.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:0,y:-4,yShadow:-4},{spriteKey:"rich_kid_m",fileRoot:"trainer",hasShadow:!0,x:2,y:5,yShadow:5}]).withIntroDialogue([{text:`${qE}:intro`},{text:`${qE}:intro_dialogue`,speaker:`${qE}:speaker`}]).setLocalizationKey(`${qE}`).withTitle(`${qE}:title`).withDescription(`${qE}:description`).withQuery(`${qE}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=TX(!0,!0),s=A.getSpeciesForm().getRootSpeciesId(),R=tA[s]??1,n=Math.max(JX/10*R,$X),I=a.getWaveMoneyAmount(n);if(E.setDialogueToken("strongestPokemon",A.getNameToRender()),E.setDialogueToken("price",I.toString()),E.misc={pokemon:A,price:I},E.options[1].primaryPokemonRequirements[0].meetsRequirement()){const N=E.dialogueTokens.option2PrimaryAbility,l=E.dialogueTokens.option2PrimaryMove;N?E.setDialogueToken("moveOrAbility",N):l&&E.setDialogueToken("moveOrAbility",l)}const L=mt(j.SHINY_CHARM);return E.setDialogueToken("itemName",(L==null?void 0:L.name)??u.t("modifierType:ModifierType.SHINY_CHARM.name")),E.setDialogueToken("liepardName",$e(e.LIEPARD).getName()),!0}).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${qE}:option.1.label`,buttonTooltip:`${qE}:option.1.tooltip`,selected:[{text:`${qE}:option.1.selected`,speaker:`${qE}:speaker`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return SO(E.misc.price),a.removePokemonFromPlayerParty(E.misc.pokemon),!0}).withOptionPhase(async()=>{a.unshiftPhase(new FE(j.SHINY_CHARM)),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(uI.Some(new $a(PX,!0),new gu(GX,!0))).withDialogue({buttonLabel:`${qE}:option.2.label`,buttonTooltip:`${qE}:option.2.tooltip`,disabledButtonTooltip:`${qE}:option.2.tooltip_disabled`,selected:[{speaker:`${qE}:speaker`,text:`${qE}:option.2.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;SO(E.misc.price),fR(E.options[1].primaryPokemon.id,$e(e.LIEPARD).baseExp,!0),wt(!0)}).build()).withSimpleOption({buttonLabel:`${qE}:option.3.label`,buttonTooltip:`${qE}:option.3.tooltip`,selected:[{speaker:`${qE}:speaker`,text:`${qE}:option.3.selected`}]},async()=>(wt(!0),!0)).build(),Ls="mysteryEncounters/delibirdy",ic=["BerryModifier","PokemonInstantReviveModifier"],Ic=["BerryModifier","PokemonInstantReviveModifier","TerastallizeModifier","PokemonBaseStatModifier","PokemonBaseStatTotalModifier"],P6=2,ua=o(()=>{const E=EE.getDelibirdyBuff();if(E.length>0){const A=E.filter(s=>{const R=mt(j[s]),n=a.findModifier(I=>I.type.id===(R==null?void 0:R.id));return!(n&&n.getStackCount()>=n.getMaxStackCount())});A.length>0?a.unshiftPhase(new FE(j[eE(A)])):a.unshiftPhase(new FE(j.VOUCHER))}},"doEventReward"),jX=xA.withEncounterType(Et.DELIBIRDY).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new an(0,P6)).withPrimaryPokemonRequirement(uI.Some(new Wa(ic),new Wa(Ic,1,!0))).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:38,scale:.94},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,scale:1.06},{spriteKey:"",fileRoot:"",species:e.DELIBIRD,hasShadow:!0,repeat:!0,startFrame:65,x:1,y:5,yShadow:5}]).withIntroDialogue([{text:`${Ls}:intro`}]).setLocalizationKey(`${Ls}`).withTitle(`${Ls}:title`).withDescription(`${Ls}:description`).withQuery(`${Ls}:query`).withOutroDialogue([{text:`${Ls}:outro`}]).withOnInit(()=>(a.currentBattle.mysteryEncounter.setDialogueToken("delibirdName",$e(e.DELIBIRD).getName()),a.loadBgm("mystery_encounter_delibirdy","mystery_encounter_delibirdy.mp3"),!0)).withOnVisualsStart(()=>(a.fadeAndSwitchBgm("mystery_encounter_delibirdy"),!0)).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,P6).withDialogue({buttonLabel:`${Ls}:option.1.label`,buttonTooltip:`${Ls}:option.1.tooltip`,selected:[{text:`${Ls}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return SO(-E.options[0].requirements[0].requiredMoney,!0,!1),!0}).withOptionPhase(async()=>{const E=a.findModifier(A=>A instanceof CO);if(E&&E.getStackCount()>=E.getMaxStackCount()){const A=mt(j.SHELL_BELL);await XR(a.getPlayerPokemon(),A),a.playSound("item_fanfare"),await EA(u.t("battle:rewardGain",{modifierName:A.name}),null,void 0,!0),ua()}else a.unshiftPhase(new FE(j.AMULET_COIN)),ua();wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new Wa(ic)).withDialogue({buttonLabel:`${Ls}:option.2.label`,buttonTooltip:`${Ls}:option.2.tooltip`,secondOptionPrompt:`${Ls}:option.2.select_prompt`,selected:[{text:`${Ls}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>R.getHeldItems().filter(I=>ic.some(r=>I.constructor.name===r)&&I.isTransferable).map(I=>({label:I.type.name,handler:o(()=>(E.setDialogueToken("chosenItem",I.type.name),E.misc={chosenPokemon:R,chosenModifier:I},!0),"handler")})),"onPokemonSelected"),void 0,o(R=>E.options[1].pokemonMeetsPrimaryRequirements(R)?null:VA(`${Ls}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=E.misc.chosenPokemon;if(A instanceof GE){const R=a.findModifier(n=>n instanceof ni);if(R&&R.getStackCount()>=R.getMaxStackCount()){const n=mt(j.SHELL_BELL);await XR(a.getPlayerPokemon(),n),a.playSound("item_fanfare"),await EA(u.t("battle:rewardGain",{modifierName:n.name}),null,void 0,!0),ua()}else a.unshiftPhase(new FE(j.CANDY_JAR)),ua()}else{const R=a.findModifier(n=>n instanceof yI);if(R&&R.getStackCount()>=R.getMaxStackCount()){const n=mt(j.SHELL_BELL);await XR(a.getPlayerPokemon(),n),a.playSound("item_fanfare"),await EA(u.t("battle:rewardGain",{modifierName:n.name}),null,void 0,!0),ua()}else a.unshiftPhase(new FE(j.BERRY_POUCH)),ua()}s.loseHeldItem(A,!1),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new Wa(Ic,1,!0)).withDialogue({buttonLabel:`${Ls}:option.3.label`,buttonTooltip:`${Ls}:option.3.tooltip`,secondOptionPrompt:`${Ls}:option.3.select_prompt`,selected:[{text:`${Ls}:option.3.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>R.getHeldItems().filter(I=>!Ic.some(r=>I.constructor.name===r)&&I.isTransferable).map(I=>({label:I.type.name,handler:o(()=>(E.setDialogueToken("chosenItem",I.type.name),E.misc={chosenPokemon:R,chosenModifier:I},!0),"handler")})),"onPokemonSelected"),void 0,o(R=>E.options[2].pokemonMeetsPrimaryRequirements(R)?null:VA(`${Ls}:invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=E.misc.chosenPokemon,R=a.findModifier(n=>n instanceof wI);if(R&&R.getStackCount()>=R.getMaxStackCount()){const n=mt(j.SHELL_BELL);await XR(a.getPlayerParty()[0],n),a.playSound("item_fanfare"),await EA(u.t("battle:rewardGain",{modifierName:n.name}),null,void 0,!0),ua()}else a.unshiftPhase(new FE(j.HEALING_CHARM)),ua();s.loseHeldItem(A,!1),wt(!0)}).build()).build(),tR="mysteryEncounters/absoluteAvarice",qX=xA.withEncounterType(Et.ABSOLUTE_AVARICE).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new Bu("BerryModifier",4)).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!0,alpha:.001,repeat:!0,x:-5},{spriteKey:"",fileRoot:"",species:e.GREEDENT,hasShadow:!1,repeat:!0,x:-5},{spriteKey:"lum_berry",fileRoot:"items",isItem:!0,x:7,y:-14,hidden:!0,disableAnimation:!0},{spriteKey:"salac_berry",fileRoot:"items",isItem:!0,x:2,y:4,hidden:!0,disableAnimation:!0},{spriteKey:"lansat_berry",fileRoot:"items",isItem:!0,x:32,y:5,hidden:!0,disableAnimation:!0},{spriteKey:"liechi_berry",fileRoot:"items",isItem:!0,x:6,y:-5,hidden:!0,disableAnimation:!0},{spriteKey:"sitrus_berry",fileRoot:"items",isItem:!0,x:7,y:8,hidden:!0,disableAnimation:!0},{spriteKey:"enigma_berry",fileRoot:"items",isItem:!0,x:26,y:-4,hidden:!0,disableAnimation:!0},{spriteKey:"leppa_berry",fileRoot:"items",isItem:!0,x:16,y:-27,hidden:!0,disableAnimation:!0},{spriteKey:"petaya_berry",fileRoot:"items",isItem:!0,x:30,y:-17,hidden:!0,disableAnimation:!0},{spriteKey:"ganlon_berry",fileRoot:"items",isItem:!0,x:16,y:-11,hidden:!0,disableAnimation:!0},{spriteKey:"apicot_berry",fileRoot:"items",isItem:!0,x:14,y:-2,hidden:!0,disableAnimation:!0},{spriteKey:"starf_berry",fileRoot:"items",isItem:!0,x:18,y:9,hidden:!0,disableAnimation:!0}]).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${tR}:intro`}]).setLocalizationKey(`${tR}`).withTitle(`${tR}:title`).withDescription(`${tR}:description`).withQuery(`${tR}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;a.loadSe("PRSFX- Bug Bite","battle_anims","PRSFX- Bug Bite.wav"),a.loadSe("Follow Me","battle_anims","Follow Me.mp3");const A=a.findModifiers(r=>r instanceof GE),s=new Map;a.getPlayerParty().forEach(r=>{const L=A.filter(N=>N.pokemonId===r.id);(L==null?void 0:L.length)>0&&s.set(r.id,L)}),E.misc={berryItemsMap:s};const R=[];A.forEach(r=>{for(let L=0;L<r.stackCount;L++){const N=mt(j.BERRY,[r.berryType]);R.push({modifier:N})}});const n=a.currentBattle.waveIndex<50?[p.SPDEF]:[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],I={levelAdditiveModifier:1,pokemonConfigs:[{species:$e(e.GREEDENT),isBoss:!0,bossSegments:3,shiny:!1,moveSet:[t.THRASH,t.BODY_PRESS,t.STUFF_CHEEKS,t.CRUNCH],modifierConfigs:R,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(r=>{SE(`${tR}:option.1.boss_enraged`),a.unshiftPhase(new AA(r.getBattlerIndex(),!0,n,1))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[I],E.setDialogueToken("greedentName",$e(e.GREEDENT).getName()),!0}).withOnVisualsStart(()=>(eQ(),G6(),a.findModifiers(A=>A instanceof GE).forEach(A=>{a.removeModifier(A)}),a.updateModifiers(!0),!0)).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${tR}:option.1.label`,buttonTooltip:`${tR}:option.1.tooltip`,selected:[{text:`${tR}:option.1.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=mt(j.REVIVER_SEED);E.setDialogueToken("foodReward",(A==null?void 0:A.name)??u.t("modifierType:ModifierType.REVIVER_SEED.name")),bt({fillRemaining:!0},void 0,o(()=>{a.getPlayerParty().forEach(n=>{const I=n.getHeldItems();if(A&&!I.some(r=>r instanceof cL)){const r=A.newModifier(n);a.addModifier(r,!1,!1,!1,!0)}}),SE(`${tR}:option.1.food_stash`)},"givePartyPokemonReviverSeeds")),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.ENEMY],move:new Lt(t.STUFF_CHEEKS),ignorePp:!0}),await AE(!0,!0,500),await OE(E.enemyPartyConfigs[0])}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${tR}:option.2.label`,buttonTooltip:`${tR}:option.2.tooltip`,selected:[{text:`${tR}:option.2.selected`}]}).withOptionPhase(async()=>{const A=a.currentBattle.mysteryEncounter.misc.berryItemsMap;a.getPlayerParty().forEach(R=>{const n=A.get(R.id),I=[];n==null||n.forEach(L=>I.push(...new Array(L.stackCount).fill(L.berryType)));const r=Math.floor((I.length??0)*2/5);if(r>0)for(let L=0;L<r;L++){Phaser.Math.RND.shuffle(I);const N=I.pop(),l=mt(j.BERRY,[N]);XR(R,l)}}),await a.updateModifiers(!0),await AE(!0,!0,500),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${tR}:option.3.label`,buttonTooltip:`${tR}:option.3.tooltip`,selected:[{text:`${tR}:option.3.selected`}]}).withPreOptionPhase(async()=>(tQ(),G6(!0),!0)).withOptionPhase(async()=>{const E=pf(!1,!0).level-2,A=new Fs($e(e.GREEDENT),E,oe.NONE,!1,!0);A.moveset=[new Lt(t.THRASH),new Lt(t.BODY_PRESS),new Lt(t.STUFF_CHEEKS),new Lt(t.SLACK_OFF)],A.passive=!0,await AE(!0,!0,500),await xr(A,null,we.POKEBALL,!1),wt(!0)}).build()).build();function eQ(){var R;const s=(R=a.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(1);a.playSound("battle_anims/Follow Me"),a.tweens.chain({targets:s,tweens:[{duration:500,ease:"Cubic.easeOut",y:"+=75",x:"-=65",scale:1.1},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:50,ease:"Cubic.easeOut",yoyo:!0,x:(YA(2)>0?"-=":"+=")+5,y:(YA(2)>0?"-=":"+=")+5},{duration:500,ease:"Cubic.easeOut",y:"-=75",x:"+=65",scale:1},{duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1}]})}o(eQ,"doGreedentSpriteSteal");function tQ(){var s;const E=(s=a.currentBattle.mysteryEncounter.introVisuals)==null?void 0:s.getSpriteAtIndex(1);let A=1;a.tweens.add({targets:E,duration:150,ease:"Cubic.easeOut",yoyo:!0,y:"-=8",loop:5,onStart:o(()=>{a.playSound("battle_anims/PRSFX- Bug Bite")},"onStart"),onLoop:o(()=>{A%2===0&&a.playSound("battle_anims/PRSFX- Bug Bite"),A++},"onLoop")})}o(tQ,"doGreedentEatBerries");function G6(E=!1){let s=["starf","sitrus","lansat","salac","apicot","enigma","liechi","ganlon","lum","petaya","leppa"];E&&(s=s.reverse());const R=a.currentBattle.mysteryEncounter;s.forEach((n,I)=>{var C;const r=R.spriteConfigs.findIndex(U=>{var D;return(D=U.spriteKey)==null?void 0:D.includes(n)});let L,N;const l=(C=R.introVisuals)==null?void 0:C.getSpriteAtIndex(r);l&&(L=l[0],N=l[1]),a.time.delayedCall(150*I+400,()=>{L&&L.setVisible(!E),N&&N.setVisible(!E),n==="petaya"&&L&&N&&!E&&a.time.delayedCall(200,()=>{AQ([L,N],30,500)})})})}o(G6,"doBerrySpritePile");function AQ(E,A,s){let R=1,n=A;const I=o(()=>{a.tweens.add({targets:E,y:"+="+n,x:{value:"+="+R*R*10,ease:"Linear"},duration:R*s,ease:"Cubic.easeIn",onComplete:o(()=>{R=R>.01?R*.5:0,R&&(n=n*R,a.tweens.add({targets:E,y:"-="+n,x:{value:"+="+R*R*10,ease:"Linear"},duration:R*s,ease:"Cubic.easeOut",onComplete:o(()=>I(),"onComplete")}))},"onComplete")})},"doBounce");I()}o(AQ,"doBerryBounce");const AR="mysteryEncounters/aTrainersTest",EQ=xA.withEncounterType(Et.A_TRAINERS_TEST).withEncounterTier(zt.ROGUE).withSceneWaveRangeRequirement(100,JA[1]).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${AR}:intro`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;let A,s,R;switch(He(5)){case 1:A=c.CHERYL,s=Gn(e.BLISSEY),R="cheryl";break;case 2:A=c.MARLEY,s=Gn(e.ARCANINE),R="marley";break;case 3:A=c.MIRA,s=Gn(e.ALAKAZAM,!1,1),R="mira";break;case 4:A=c.RILEY,s=Gn(e.LUCARIO,!1,1),R="riley";break;default:A=c.BUCK,s=Gn(e.CLAYDOL),R="buck";break}E.dialogue.intro=[{speaker:`trainerNames:${R}`,text:`${AR}:${R}.intro_dialogue`}],E.options[0].dialogue.selected=[{speaker:`trainerNames:${R}`,text:`${AR}:${R}.accept`}],E.options[1].dialogue.selected=[{speaker:`trainerNames:${R}`,text:`${AR}:${R}.decline`}],E.setDialogueToken("statTrainerName",u.t(`trainerNames:${R}`));const n=`${u.t(`${AR}:title`)}:
${u.t(`trainerNames:${R}`)}`;E.misc={trainerType:A,trainerNameKey:R,trainerEggDescription:n};const I=tE[A].clone(),r=I.getSpriteKey();return E.enemyPartyConfigs.push({levelAdditiveModifier:1,trainerConfig:I}),E.spriteConfigs=[{spriteKey:s.spriteKey,fileRoot:s.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:22,y:-2,yShadow:-2},{spriteKey:r,fileRoot:"trainer",hasShadow:!0,disableAnimation:!0,x:-24,y:4,yShadow:4}],!0}).setLocalizationKey(`${AR}`).withTitle(`${AR}:title`).withDescription(`${AR}:description`).withQuery(`${AR}:query`).withIntroDialogue().withSimpleOption({buttonLabel:`${AR}:option.1.label`,buttonTooltip:`${AR}:option.1.tooltip`},async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0];await AE();const s={pulled:!1,sourceType:VE.EVENT,eggDescriptor:E.misc.trainerEggDescription,tier:F.EPIC};E.setDialogueToken("eggType",u.t(`${AR}:eggTypes.epic`)),bt({guaranteedModifierTypeFuncs:[j.SACRED_ASH],guaranteedModifierTiers:[V.ROGUE,V.ULTRA],fillRemaining:!0},[s]),await OE(A)}).withSimpleOption({buttonLabel:`${AR}:option.2.label`,buttonTooltip:`${AR}:option.2.tooltip`},async()=>{const E=a.currentBattle.mysteryEncounter;a.unshiftPhase(new kr(!0));const A={pulled:!1,sourceType:VE.EVENT,eggDescriptor:E.misc.trainerEggDescription,tier:F.RARE};E.setDialogueToken("eggType",u.t(`${AR}:eggTypes.rare`)),bt({fillRemaining:!1,rerollMultiplier:-1},[A]),wt()}).withOutroDialogue([{text:`${AR}:outro`}]).build(),uO="mysteryEncounters/trashToTreasure",d6=700,H6=2.5,sQ=xA.withEncounterType(Et.TRASH_TO_TREASURE).withEncounterTier(zt.ULTRA).withSceneWaveRangeRequirement(60,JA[1]).withMaxAllowedEncounters(1).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:e.GARBODOR.toString()+"-gigantamax",fileRoot:"pokemon",hasShadow:!1,disableAnimation:!0,scale:1.5,y:8,tint:.4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${uO}:intro`}]).setLocalizationKey(`${uO}`).withTitle(`${uO}:title`).withDescription(`${uO}:description`).withQuery(`${uO}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,R={levelAdditiveModifier:.5,pokemonConfigs:[{species:$e(e.GARBODOR),isBoss:!0,shiny:!1,formIndex:1,bossSegmentModifier:1,moveSet:[t.GUNK_SHOT,t.STOMPING_TANTRUM,t.HAMMER_ARM,t.PAYBACK],modifierConfigs:[{modifier:mt(j.BERRY)},{modifier:mt(j.BERRY)},{modifier:mt(j.BERRY)},{modifier:mt(j.BERRY)},{modifier:mt(j.BASE_STAT_BOOSTER)},{modifier:mt(j.BASE_STAT_BOOSTER)},{modifier:mt(j.TOXIC_ORB),stackCount:He(2,0)},{modifier:mt(j.SOOTHE_BELL),stackCount:He(2,1)},{modifier:mt(j.LUCKY_EGG),stackCount:He(3,1)},{modifier:mt(j.GOLDEN_EGG),stackCount:He(2,0)}]}],disableSwitch:!0};return E.enemyPartyConfigs=[R],Ll([t.TOXIC,t.STOCKPILE]),a.loadSe("PRSFX- Dig2","battle_anims","PRSFX- Dig2.wav"),a.loadSe("PRSFX- Venom Drench","battle_anims","PRSFX- Venom Drench.wav"),E.setDialogueToken("costMultiplier",H6.toString()),!0}).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${uO}:option.1.label`,buttonTooltip:`${uO}:option.1.tooltip`,selected:[{text:`${uO}:option.1.selected`}]}).withPreOptionPhase(async()=>{OQ()}).withOptionPhase(async()=>{await AE(),await RQ();const E=mt(j.MYSTERY_ENCOUNTER_BLACK_SLUDGE,[H6]),A=E==null?void 0:E.newModifier();A&&(await a.addModifier(A,!1,!1,!1,!0),a.playSound("battle_anims/PRSFX- Venom Drench",{volume:2}),await EA(u.t("battle:rewardGain",{modifierName:A.type.name}),null,void 0,!0)),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${uO}:option.2.label`,buttonTooltip:`${uO}:option.2.tooltip`,selected:[{text:`${uO}:option.2.selected`}]}).withOptionPhase(async()=>{a.setFieldScale(.75),await EA(`${uO}:option.2.selected_2`),await AE();const E=a.currentBattle.mysteryEncounter;bt({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.GREAT],fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.TOXIC),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY,targets:[Wt.ENEMY],move:new Lt(t.STOCKPILE),ignorePp:!0}),await OE(E.enemyPartyConfigs[0])}).build()).build();async function RQ(){const E=mt(j.SHELL_BELL),A=mt(j.LEFTOVERS),s=a.getPlayerParty();for(const R of s){const I=a.findModifiers(r=>r instanceof Ft&&r.pokemonId===R.id,!0).find(r=>r instanceof YI);if(!I||I.getStackCount()<I.getMaxStackCount()){await XR(R,A);break}}for(const R of s){const I=a.findModifiers(r=>r instanceof Ft&&r.pokemonId===R.id,!0).find(r=>r instanceof YI);if(!I||I.getStackCount()<I.getMaxStackCount()){await XR(R,A);break}}a.playSound("item_fanfare"),await EA(u.t("battle:rewardGainCount",{modifierName:A.name,count:2}),null,void 0,!0);for(const R of s){const I=a.findModifiers(r=>r instanceof Ft&&r.pokemonId===R.id,!0).find(r=>r instanceof WI);if(!I||I.getStackCount()<I.getMaxStackCount()){await XR(R,E);break}}a.playSound("item_fanfare"),await EA(u.t("battle:rewardGainCount",{modifierName:E.name,count:1}),null,void 0,!0)}o(RQ,"tryApplyDigRewardItems");function OQ(){a.playSound("battle_anims/PRSFX- Dig2"),a.time.delayedCall(d6,()=>{a.playSound("battle_anims/PRSFX- Dig2"),a.playSound("battle_anims/PRSFX- Venom Drench",{volume:2})}),a.time.delayedCall(d6*2,()=>{a.playSound("battle_anims/PRSFX- Dig2")})}o(OQ,"doGarbageDig");const os="mysteryEncounters/berriesAbound",nQ=xA.withEncounterType(Et.BERRIES_ABOUND).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${os}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=Il(il),s=Wf(A,!0);E.setDialogueToken("enemyPokemon",ee(s));const R={pokemonConfigs:[{level:A,species:s.species,dataSource:new Ks(s),isBoss:!0}]};E.enemyPartyConfigs=[R];const n=a.currentBattle.waveIndex>160?7:a.currentBattle.waveIndex>120?5:a.currentBattle.waveIndex>40?4:2;Ti(a.getPlayerParty(),yE.PLAYER,0),E.misc={numBerries:n};const{spriteKey:I,fileRoot:r}=J0(s);E.spriteConfigs=[{spriteKey:"berries_abound_bush",fileRoot:"mystery-encounters",x:25,y:-6,yShadow:-7,disableAnimation:!0,hasShadow:!0},{spriteKey:I,fileRoot:r,hasShadow:!0,tint:.25,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}];const L=oX(Hn[p.SPD],!0,!1);return E.misc.fastestPokemon=L,E.misc.enemySpeed=s.getStat(p.SPD),E.setDialogueToken("fastestPokemon",L.getNameToRender()),!0}).setLocalizationKey(`${os}`).withTitle(`${os}:title`).withDescription(`${os}:description`).withQuery(`${os}:query`).withSimpleOption({buttonLabel:`${os}:option.1.label`,buttonTooltip:`${os}:option.1.tooltip`,selected:[{text:`${os}:option.1.selected`}]},async()=>{const A=a.currentBattle.mysteryEncounter.misc.numBerries,s=o(()=>{const n=u.t(`${os}:berries`);a.playSound("item_fanfare"),SE(u.t("battle:rewardGainCount",{modifierName:n,count:A}));for(let I=0;I<A;I++)rc()},"doBerryRewards"),R=[];for(let n=0;n<5;n++){const I=oE(j.BERRY);I&&R.push(I)}bt({guaranteedModifierTypeOptions:R,fillRemaining:!1},void 0,s),await OE(a.currentBattle.mysteryEncounter.enemyPartyConfigs[0])}).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${os}:option.2.label`,buttonTooltip:`${os}:option.2.tooltip`}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.fastestPokemon,s=E.misc.enemySpeed,R=A.getStat(p.SPD)/(s*1.1),n=E.misc.numBerries,I=[];for(let N=0;N<5;N++){const l=oE(j.BERRY);l&&I.push(l)}if(R<1){const N=o(()=>{const U=u.t(`${os}:berries`);a.playSound("item_fanfare"),SE(u.t("battle:rewardGainCount",{modifierName:U,count:n}));for(let D=0;D<n;D++)rc()},"doBerryRewards"),l=a.currentBattle.waveIndex<50?[p.DEF,p.SPDEF,p.SPD]:[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],C=a.currentBattle.mysteryEncounter.enemyPartyConfigs[0];C.pokemonConfigs[0].tags=[w.MYSTERY_ENCOUNTER_POST_SUMMON],C.pokemonConfigs[0].mysteryEncounterBattleEffects=U=>{SE(`${os}:option.2.boss_enraged`),a.unshiftPhase(new AA(U.getBattlerIndex(),!0,l,1))},bt({guaranteedModifierTypeOptions:I,fillRemaining:!1},void 0,N),await EA(`${os}:option.2.selected_bad`),await OE(C);return}const r=Math.max(Math.min(Math.round((R-1)/.08),n),2);E.setDialogueToken("numBerries",String(r));const L=o(()=>{const N=u.t(`${os}:berries`);a.playSound("item_fanfare"),SE(u.t("battle:rewardGainCount",{modifierName:N,count:r}));for(let l=0;l<r;l++)rc(A)},"doFasterBerryRewards");fR(A.id,E.enemyPartyConfigs[0].pokemonConfigs[0].species.baseExp),bt({guaranteedModifierTypeOptions:I,fillRemaining:!1},void 0,L),await EA(`${os}:option.2.selected`),wt()}).build()).withSimpleOption({buttonLabel:`${os}:option.3.label`,buttonTooltip:`${os}:option.3.tooltip`,selected:[{text:`${os}:option.3.selected`}]},async()=>(wt(!0),!0)).build();function rc(E){const A=He(Object.keys(gt).filter(n=>!Number.isNaN(Number(n))).length),s=mt(j.BERRY,[A]),R=a.getPlayerParty();if(E){const n=a.findModifier(I=>I instanceof GE&&I.pokemonId===E.id&&I.berryType===A,!0);if(!n||n.getStackCount()<n.getMaxStackCount()){XR(E,s);return}}for(const n of R){const I=a.findModifier(r=>r instanceof GE&&r.pokemonId===n.id&&r.berryType===A,!0);if(!I||I.getStackCount()<I.getMaxStackCount()){XR(n,s);return}}}o(rc,"tryGiveBerry");const XA="mysteryEncounters/clowningAround",f6=[O.STURDY,O.PICKUP,O.INTIMIDATE,O.GUTS,O.DROUGHT,O.DRIZZLE,O.SNOW_WARNING,O.SAND_STREAM,O.ELECTRIC_SURGE,O.PSYCHIC_SURGE,O.GRASSY_SURGE,O.MISTY_SURGE,O.MAGICIAN,O.SHEER_FORCE,O.PRANKSTER],aQ=xA.withEncounterType(Et.CLOWNING_AROUND).withEncounterTier(zt.ULTRA).withDisallowedChallenges(ut.SINGLE_TYPE).withSceneWaveRangeRequirement(80,JA[1]).withAnimations(TO.SMOKESCREEN).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:e.MR_MIME.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:-25,tint:.3,y:-3,yShadow:-3},{spriteKey:e.BLACEPHALON.toString(),fileRoot:"pokemon/exp",hasShadow:!0,repeat:!0,x:25,tint:.3,y:-3,yShadow:-3},{spriteKey:"harlequin",fileRoot:"trainer",hasShadow:!0,x:0,y:2,yShadow:2}]).withIntroDialogue([{text:`${XA}:intro`},{text:`${XA}:intro_dialogue`,speaker:`${XA}:speaker`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=c.HARLEQUIN,s=tE[A].clone(),R=new QA(new Rt(1,Ze.STRONG),new Rt(1,Ze.STRONGER));s.setPartyTemplates(R),s.setDoubleOnly(),s.partyTemplateFunc=null;const n=f6[He(f6.length)];E.setDialogueToken("ability",new ae(n,3).name),E.misc={ability:n};const I=He(18);let r=He(17);return r>=I&&r++,E.enemyPartyConfigs.push({trainerConfig:s,pokemonConfigs:[{species:$e(e.MR_MIME),isBoss:!0,moveSet:[t.TEETER_DANCE,t.ALLY_SWITCH,t.DAZZLING_GLEAM,t.PSYCHIC]},{species:$e(e.BLACEPHALON),customPokemonData:new Ms({ability:n,types:[I,r]}),isBoss:!0,moveSet:[t.TRICK,t.HYPNOSIS,t.SHADOW_BALL,t.MIND_BLOWN]}],doubleBattle:!0}),Ll([t.ROLE_PLAY,t.TAUNT]),E.setDialogueToken("blacephalonName",$e(e.BLACEPHALON).getName()),!0}).setLocalizationKey(`${XA}`).withTitle(`${XA}:title`).withDescription(`${XA}:description`).withQuery(`${XA}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${XA}:option.1.label`,buttonTooltip:`${XA}:option.1.tooltip`,selected:[{text:`${XA}:option.1.selected`,speaker:`${XA}:speaker`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0];bt({fillRemaining:!0}),E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.ENEMY_2],move:new Lt(t.ROLE_PLAY),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY_2,targets:[Wt.PLAYER],move:new Lt(t.TAUNT),ignorePp:!0},{sourceBattlerIndex:Wt.ENEMY_2,targets:[Wt.PLAYER_2],move:new Lt(t.TAUNT),ignorePp:!0}),await AE(),await OE(A)}).withPostOptionPhase(async()=>(await iQ()&&await EA(`${XA}:option.1.ability_gained`),a.tweens.add({targets:a.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:250}),new Oa(TO.SMOKESCREEN,a.getPlayerPokemon(),a.getPlayerPokemon()).playWithoutTargets(230,40,2),!0)).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${XA}:option.2.label`,buttonTooltip:`${XA}:option.2.tooltip`,selected:[{text:`${XA}:option.2.selected`,speaker:`${XA}:speaker`},{text:`${XA}:option.2.selected_2`},{text:`${XA}:option.2.selected_3`,speaker:`${XA}:speaker`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=a.getPlayerParty();let s=A[0],R=s.getHeldItems().filter(N=>N.isTransferable&&!(N instanceof GE)).reduce((N,l)=>N+l.stackCount,0);for(const N of A){const l=N.getHeldItems().filter(C=>C.isTransferable&&!(C instanceof GE)).reduce((C,U)=>C+U.stackCount,0);l>R&&(s=N,R=l)}E.setDialogueToken("switchPokemon",s.getNameToRender());const n=s.getHeldItems();let I=0;for(const N of n.filter(l=>l instanceof GE))I+=N.stackCount,a.removeModifier(N);Lc(s,I,"Berries");let r=0,L=0;for(const N of n.filter(l=>l.isTransferable&&!(l instanceof GE))){const l=N.type.withTierFromPool(yE.PLAYER,A),C=l.tier??V.ULTRA;l.id==="GOLDEN_EGG"||C===V.ROGUE?(L+=N.stackCount,a.removeModifier(N)):(l.id==="LUCKY_EGG"||l.id==="SOOTHE_BELL"||C===V.ULTRA)&&(r+=N.stackCount,a.removeModifier(N))}Lc(s,r,V.ULTRA),Lc(s,L,V.ROGUE)}).withOptionPhase(async()=>{wt(!0)}).withPostOptionPhase(async()=>{new Oa(TO.SMOKESCREEN,a.getPlayerPokemon(),a.getPlayerPokemon()).playWithoutTargets(230,40,2),await AE(!0,!0,200)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${XA}:option.3.label`,buttonTooltip:`${XA}:option.3.tooltip`,selected:[{text:`${XA}:option.3.selected`,speaker:`${XA}:speaker`},{text:`${XA}:option.3.selected_2`},{text:`${XA}:option.3.selected_3`,speaker:`${XA}:speaker`}]}).withPreOptionPhase(async()=>{for(const E of a.getPlayerParty()){const A=E.getTypes(!1,!1,!0);let s=E.moveset.filter(I=>I&&!A.includes(I.getMove().type)&&I.getMove().category!==g.STATUS).map(I=>I.getMove().type);(s==null?void 0:s.length)>0&&(s=[...new Set(s)].sort(),s=GO(s));const R=[i.UNKNOWN];let n=null;for(;n===null||n===R[0]||A.includes(n);)s.length>0?n=s.pop()??null:n=He(18);R.push(n),E.customPokemonData||(E.customPokemonData=new Ms),E.customPokemonData.types=R,E.isFusion()&&(E.fusionCustomPokemonData||(E.fusionCustomPokemonData=new Ms),E.fusionCustomPokemonData.types=R)}}).withOptionPhase(async()=>{wt(!0)}).withPostOptionPhase(async()=>{new Oa(TO.SMOKESCREEN,a.getPlayerPokemon(),a.getPlayerPokemon()).playWithoutTargets(230,40,2),await AE(!0,!0,200)}).build()).withOutroDialogue([{text:`${XA}:outro`}]).build();async function iQ(){return new Promise(async E=>{await _n(`${XA}:option.1.apply_ability_dialogue`,`${XA}:speaker`),await EA(`${XA}:option.1.apply_ability_message`),a.ui.setMode(te.MESSAGE).then(()=>{Fk(E)})})}o(iQ,"handleSwapAbility");function Fk(E){EA(`${XA}:option.1.ability_prompt`,null,500,!1);const s={options:[{label:u.t("menu:yes"),handler:o(()=>(IQ(E),!0),"handler")},{label:u.t("menu:no"),handler:o(()=>(E(!1),!0),"handler")}],maxOptions:7,yOffset:0};a.ui.setModeWithoutClear(te.OPTION_SELECT,s,null,!0)}o(Fk,"displayYesNoOptions");function IQ(E){Os(o(R=>{const n=a.currentBattle.mysteryEncounter;gk(R,n.misc.ability),n.setDialogueToken("chosenPokemon",R.getNameToRender()),a.ui.setMode(te.MESSAGE).then(()=>E(!0))},"onPokemonSelected"),o(()=>{a.ui.setMode(te.MESSAGE).then(()=>{Fk(E)})},"onPokemonNotSelected"))}o(IQ,"onYesAbilitySwap");function Lc(E,A,s){const R=[[j.REVIVER_SEED,1],[j.GOLDEN_PUNCH,5],[j.ATTACK_TYPE_BOOSTER,99],[j.QUICK_CLAW,3],[j.WIDE_LENS,3]],n=[[j.LEFTOVERS,4],[j.SHELL_BELL,4],[j.SOUL_DEW,10],[j.SCOPE_LENS,1],[j.BATON,1],[j.FOCUS_BAND,5],[j.KINGS_ROCK,3],[j.GRIP_CLAW,5]],I=[[gt.APICOT,3],[gt.ENIGMA,2],[gt.GANLON,3],[gt.LANSAT,3],[gt.LEPPA,2],[gt.LIECHI,3],[gt.LUM,2],[gt.PETAYA,3],[gt.SALAC,2],[gt.SITRUS,2],[gt.STARF,3]];let r;s==="Berries"?r=I:r=s===V.ULTRA?R:n;for(let L=0;L<A;L++){if(r.length===0)return;const N=He(r.length),l=r[N];let C;s==="Berries"?C=mt(j.BERRY,[l[0]]):C=mt(l[0]),XR(E,C),l[1]--,l[1]<=0&&r.splice(N,1)}}o(Lc,"generateItemsOfTier");const mA="mysteryEncounters/partTimer",rQ=xA.withEncounterType(Et.PART_TIMER).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withIntroSpriteConfigs([{spriteKey:"part_timer_crate",fileRoot:"mystery-encounters",hasShadow:!1,y:6,x:15},{spriteKey:"worker_f",fileRoot:"trainer",hasShadow:!0,x:-18,y:4}]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${mA}:intro`},{speaker:`${mA}:speaker`,text:`${mA}:intro_dialogue`}]).withOnInit(()=>(a.loadSe("PRSFX- Horn Drill1","battle_anims","PRSFX- Horn Drill1.wav"),a.loadSe("PRSFX- Horn Drill3","battle_anims","PRSFX- Horn Drill3.wav"),a.loadSe("PRSFX- Guillotine2","battle_anims","PRSFX- Guillotine2.wav"),a.loadSe("PRSFX- Heavy Slam2","battle_anims","PRSFX- Heavy Slam2.wav"),a.loadSe("PRSFX- Agility","battle_anims","PRSFX- Agility.wav"),a.loadSe("PRSFX- Extremespeed1","battle_anims","PRSFX- Extremespeed1.wav"),a.loadSe("PRSFX- Accelerock1","battle_anims","PRSFX- Accelerock1.wav"),a.loadSe("PRSFX- Captivate","battle_anims","PRSFX- Captivate.wav"),a.loadSe("PRSFX- Attract2","battle_anims","PRSFX- Attract2.wav"),a.loadSe("PRSFX- Aurora Veil2","battle_anims","PRSFX- Aurora Veil2.wav"),!0)).setLocalizationKey(`${mA}`).withTitle(`${mA}:title`).withDescription(`${mA}:description`).withQuery(`${mA}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${mA}:option.1.label`,buttonTooltip:`${mA}:option.1.tooltip`,selected:[{text:`${mA}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{E.setDialogueToken("selectedPokemon",R.getNameToRender());const n=Math.floor((2*90+16)*R.level*.01)+5,I=(R.getStat(p.SPD)-n)/n,r=Math.min(Math.max(2.5*(1+I),1),4);E.misc={moneyMultiplier:r};for(const L of R.moveset)if(L){const N=L.getMovePp()-2;L.ppUsed=L.ppUsed<N?N:L.ppUsed}fR(R.id,100),AE(!0,!1),oQ()},"onPokemonSelected"),void 0,o(R=>EI(R,`${mA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await AE(!1,!1);const E=a.currentBattle.mysteryEncounter.misc.moneyMultiplier;E>2.5?await _n(`${mA}:job_complete_good`,`${mA}:speaker`):await _n(`${mA}:job_complete_bad`,`${mA}:speaker`);const A=a.getWaveMoneyAmount(E);SO(A,!0,!1),await EA(u.t("mysteryEncounterMessages:receive_money",{amount:A})),await EA(`${mA}:pokemon_tired`),bt({fillRemaining:!0}),wt()}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${mA}:option.2.label`,buttonTooltip:`${mA}:option.2.tooltip`,selected:[{text:`${mA}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{E.setDialogueToken("selectedPokemon",R.getNameToRender());const n=Math.floor((2*75+16)*R.level*.01)+R.level+10,I=Math.floor((2*75+16)*R.level*.01)+5,r=n+1.5*(I*2),N=(R.getStat(p.HP)+1.5*(R.getStat(p.ATK)+R.getStat(p.DEF))-r)/r,l=Math.min(Math.max(2.5*(1+N),1),4);E.misc={moneyMultiplier:l};for(const C of R.moveset)if(C){const U=C.getMovePp()-2;C.ppUsed=C.ppUsed<U?U:C.ppUsed}fR(R.id,100),AE(!0,!1),LQ()},"onPokemonSelected"),void 0,o(R=>EI(R,`${mA}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{await AE(!1,!1);const E=a.currentBattle.mysteryEncounter.misc.moneyMultiplier;E>2.5?await _n(`${mA}:job_complete_good`,`${mA}:speaker`):await _n(`${mA}:job_complete_bad`,`${mA}:speaker`);const A=a.getWaveMoneyAmount(E);SO(A,!0,!1),await EA(u.t("mysteryEncounterMessages:receive_money",{amount:A})),await EA(`${mA}:pokemon_tired`),bt({fillRemaining:!0}),wt()}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new $a(pk,!0)).withDialogue({buttonLabel:`${mA}:option.3.label`,buttonTooltip:`${mA}:option.3.tooltip`,disabledButtonTooltip:`${mA}:option.3.disabled_tooltip`,selected:[{text:`${mA}:option.3.selected`}]}).withPreOptionPhase(async()=>{var s;const E=a.currentBattle.mysteryEncounter,A=(s=E.selectedOption)==null?void 0:s.primaryPokemon;E.setDialogueToken("selectedPokemon",A.getNameToRender());for(const R of A.moveset)if(R){const n=R.getMovePp()-2;R.ppUsed=R.ppUsed<n?n:R.ppUsed}return fR(A.id,100),AE(!0,!1),TQ(),!0}).withOptionPhase(async()=>{await AE(!1,!1),await _n(`${mA}:job_complete_good`,`${mA}:speaker`);const E=a.getWaveMoneyAmount(2.5);SO(E,!0,!1),await EA(u.t("mysteryEncounterMessages:receive_money",{amount:E})),await EA(`${mA}:pokemon_tired`),bt({fillRemaining:!0}),wt()}).build()).withOutroDialogue([{speaker:`${mA}:speaker`,text:`${mA}:outro`}]).build();function LQ(){a.playSound("battle_anims/PRSFX- Horn Drill1"),a.playSound("battle_anims/PRSFX- Horn Drill1"),a.time.delayedCall(1e3,()=>{a.playSound("battle_anims/PRSFX- Guillotine2")}),a.time.delayedCall(2e3,()=>{a.playSound("battle_anims/PRSFX- Heavy Slam2")}),a.time.delayedCall(2500,()=>{a.playSound("battle_anims/PRSFX- Guillotine2")})}o(LQ,"doStrongWorkSfx");function oQ(){a.playSound("battle_anims/PRSFX- Accelerock1"),a.time.delayedCall(1500,()=>{a.playSound("battle_anims/PRSFX- Extremespeed1")}),a.time.delayedCall(2e3,()=>{a.playSound("battle_anims/PRSFX- Extremespeed1")}),a.time.delayedCall(2250,()=>{a.playSound("battle_anims/PRSFX- Agility")})}o(oQ,"doDeliverySfx");function TQ(){a.playSound("battle_anims/PRSFX- Captivate"),a.time.delayedCall(1500,()=>{a.playSound("battle_anims/PRSFX- Attract2")}),a.time.delayedCall(2e3,()=>{a.playSound("battle_anims/PRSFX- Aurora Veil2")}),a.time.delayedCall(3e3,()=>{a.playSound("battle_anims/PRSFX- Attract2")})}o(TQ,"doSalesSfx");const _p=class _p extends hs{constructor(){super(te.EVOLUTION_SCENE)}setup(){this.canCancel=!1,this.cancelled=!1;const A=this.getUi();this.evolutionContainer=a.add.container(0,-a.game.canvas.height/6),A.add(this.evolutionContainer);const s=a.add.sprite(0,0,"bg",a.windowType);s.setOrigin(0,1),s.setVisible(!1),A.add(s),this.messageBg=s,this.messageContainer=a.add.container(12,-39),this.messageContainer.setVisible(!1),A.add(this.messageContainer);const R=Se(0,0,"",k.MESSAGE,{maxLines:2,wordWrap:{width:1780}});this.messageContainer.add(R),this.message=R,this.initPromptSprite(this.messageContainer)}show(A){return super.show(A),a.ui.bringToTop(this.evolutionContainer),a.ui.bringToTop(this.messageBg),a.ui.bringToTop(this.messageContainer),this.messageBg.setVisible(!0),this.messageContainer.setVisible(!0),!0}processInput(A){if(this.canCancel&&!this.cancelled&&A===X.CANCEL)return this.cancelled=!0,!0;const s=this.getUi();if(this.awaitingActionInput&&(A===X.CANCEL||A===X.ACTION)&&this.onActionInput){s.playSelect();const R=this.onActionInput;return this.onActionInput=null,R(),!0}return!1}setCursor(A){return!1}clear(){this.clearText(),this.canCancel=!1,this.cancelled=!1,this.evolutionContainer.removeAll(!0),this.messageContainer.setVisible(!1),this.messageBg.setVisible(!1)}};o(_p,"EvolutionSceneHandler");let Ku=_p;const Pp=class Pp extends Mu{constructor(A){super(A,!0)}getPlayerPokemon(){return super.getPokemon()}};o(Pp,"PlayerPartyMemberPokemonPhase");let Zr=Pp;var Yf=(E=>(E[E.LEARN_MOVE=0]="LEARN_MOVE",E[E.MEMORY=1]="MEMORY",E[E.TM=2]="TM",E))(Yf||{});const Gp=class Gp extends Zr{constructor(A,s,R=0,n=-1){super(A),this.moveId=s,this.learnMoveType=R,this.cost=n}start(){super.start();const A=this.getPokemon(),s=Ve[this.moveId],R=A.getMoveset();if(R.some(I=>I.moveId===s.id)&&this.moveId!==t.SKETCH)return this.end();this.messageMode=a.ui.getHandler()instanceof Ku?te.EVOLUTION_SCENE:te.MESSAGE,a.ui.setMode(this.messageMode),R.length<4?this.learnMove(R.length,s,A):this.replaceMoveCheck(s,A)}async replaceMoveCheck(A,s){const R=u.t("battle:learnMovePrompt",{pokemonName:ee(s),moveName:A.name}),n=u.t("battle:learnMoveLimitReached",{pokemonName:ee(s)}),I=u.t("battle:learnMoveReplaceQuestion",{moveName:A.name}),r=[R,n].join("$");await a.ui.showTextPromise(r),await a.ui.showTextPromise(I,void 0,!1),await a.ui.setModeWithoutClear(te.CONFIRM,()=>this.forgetMoveProcess(A,s),()=>{a.ui.setMode(this.messageMode),this.rejectMoveAndEnd(A,s)})}async forgetMoveProcess(A,s){a.ui.setMode(this.messageMode),await a.ui.showTextPromise(u.t("battle:learnMoveForgetQuestion"),void 0,!0),await a.ui.setModeWithoutClear(te.SUMMARY,s,X0.LEARN_MOVE,A,R=>{if(R===4){a.ui.setMode(this.messageMode).then(()=>this.rejectMoveAndEnd(A,s));return}const n=u.t("battle:learnMoveForgetSuccess",{pokemonName:ee(s),moveName:s.moveset[R].getName()}),I=[u.t("battle:countdownPoof"),n,u.t("battle:learnMoveAnd")].join("$");a.ui.setMode(this.messageMode).then(()=>this.learnMove(R,A,s,I))})}async rejectMoveAndEnd(A,s){await a.ui.showTextPromise(u.t("battle:learnMoveStopTeaching",{moveName:A.name}),void 0,!1),a.ui.setModeWithoutClear(te.CONFIRM,()=>{a.ui.setMode(this.messageMode),a.ui.showTextPromise(u.t("battle:learnMoveNotLearned",{pokemonName:ee(s),moveName:A.name}),void 0,!0).then(()=>this.end())},()=>{a.ui.setMode(this.messageMode),this.replaceMoveCheck(A,s)})}async learnMove(A,s,R,n){this.learnMoveType===2?(R.usedTMs||(R.usedTMs=[]),R.usedTMs.push(this.moveId),a.tryRemovePhase(r=>r instanceof BO)):this.learnMoveType===1&&(this.cost!==-1?(xe.WAIVE_ROLL_FEE_OVERRIDE||(a.money-=this.cost,a.updateMoneyText(),a.animateMoneyChanged(!1)),a.playSound("se/buy")):a.tryRemovePhase(r=>r instanceof BO)),R.setMove(A,this.moveId),ol(this.moveId).then(()=>{Tl([this.moveId],!0)}),a.ui.setMode(this.messageMode);const I=u.t("battle:learnMove",{pokemonName:ee(R),moveName:s.name});n&&await a.ui.showTextPromise(n),a.playSound("level_up_fanfare"),a.ui.showText(I,null,()=>{a.triggerPokemonFormChange(R,rI,!0),this.end()},this.messageMode===te.EVOLUTION_SCENE?1e3:void 0,!0)}};o(Gp,"LearnMovePhase");let ra=Gp;const _s="mysteryEncounters/dancingLessons",SQ=[T.VOLCANO,T.BEACH,T.ISLAND,T.WASTELAND,T.MOUNTAIN,T.BADLANDS,T.DESERT],NQ=[T.CONSTRUCTION_SITE,T.POWER_PLANT,T.FACTORY,T.LABORATORY,T.SLUM,T.METROPOLIS,T.DOJO],lQ=[T.JUNGLE,T.FAIRY_CAVE,T.MEADOW,T.PLAINS,T.GRASS,T.TALL_GRASS,T.FOREST],CQ=[T.RUINS,T.SWAMP,T.CAVE,T.ABYSS,T.GRAVEYARD,T.LAKE,T.TEMPLE],uQ=xA.withEncounterType(Et.DANCING_LESSONS).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withIntroSpriteConfigs([]).withAnimations(TO.DANCE).withHideWildIntroMessage(!0).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withOnVisualsStart(()=>{const E=a.getEnemyPokemon();return new Oa(TO.DANCE,E,a.getPlayerPokemon()).play(!1,()=>{E.shiny&&E.sparkle()}),!0}).withIntroDialogue([{text:`${_s}:intro`}]).setLocalizationKey(`${_s}`).withTitle(`${_s}:title`).withDescription(`${_s}:description`).withQuery(`${_s}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=$e(e.ORICORIO),s=Il(il),R=new Fs(A,s,oe.NONE,!1);R.moveset.some(N=>N&&N.getMove().id===t.REVELATION_DANCE)||(R.moveset.length<4?R.moveset.push(new Lt(t.REVELATION_DANCE)):R.moveset[0]=new Lt(t.REVELATION_DANCE));const n=a.arena.biomeType;SQ.includes(n)?R.formIndex=0:NQ.includes(n)?R.formIndex=1:lQ.includes(n)?R.formIndex=2:CQ.includes(n)?R.formIndex=3:R.formIndex=0;const I=new Ks(R),r=a.addEnemyPokemon(A,s,oe.NONE,!1,!1,I);for(const N of a.getEnemyParty())N.leaveField(!0,!0,!0);a.currentBattle.enemyParty=[r],a.field.add(r),r.x-=300,E.loadAssets.push(r.loadAssets());const L={pokemonConfigs:[{species:A,dataSource:I,isBoss:!0,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(N=>{SE(`${_s}:option.1.boss_enraged`),a.unshiftPhase(new AA(N.getBattlerIndex(),!0,[p.ATK,p.DEF,p.SPATK,p.SPDEF],1))},"mysteryEncounterBattleEffects")}]};return E.enemyPartyConfigs=[L],E.misc={oricorioData:I},E.setDialogueToken("oricorioName",$e(e.ORICORIO).getName()),!0}).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${_s}:option.1.label`,buttonTooltip:`${_s}:option.1.tooltip`,selected:[{text:`${_s}:option.1.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[Wt.PLAYER],move:new Lt(t.REVELATION_DANCE),ignorePp:!0}),await oc(),bt({guaranteedModifierTypeFuncs:[j.BATON],fillRemaining:!0}),await OE(E.enemyPartyConfigs[0])}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${_s}:option.2.label`,buttonTooltip:`${_s}:option.2.tooltip`,selected:[{text:`${_s}:option.2.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>{E.setDialogueToken("selectedPokemon",s.getNameToRender()),a.unshiftPhase(new ra(a.getPlayerParty().indexOf(s),t.REVELATION_DANCE)),new Oa(TO.DANCE,a.getEnemyPokemon(),a.getPlayerPokemon()).play()},"onPokemonSelected"))}).withOptionPhase(async()=>{await oc(),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new $a(r6,!0)).withDialogue({buttonLabel:`${_s}:option.3.label`,buttonTooltip:`${_s}:option.3.tooltip`,disabledButtonTooltip:`${_s}:option.3.disabled_tooltip`,secondOptionPrompt:`${_s}:option.3.select_prompt`,selected:[{text:`${_s}:option.3.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>R.moveset.filter(n=>n&&r6.includes(n.getMove().id)).map(n=>({label:n.getName(),handler:o(()=>(E.setDialogueToken("selectedPokemon",R.getNameToRender()),E.setDialogueToken("selectedMove",n.getName()),E.misc.selectedMove=n,!0),"handler")})),"onPokemonSelected"),void 0,o(R=>R.isAllowedInBattle()?E.options[2].pokemonMeetsPrimaryRequirements(R)?null:VA(`${_s}:invalid_selection`)??null:u.t("partyUiHandler:cantBeUsed",{pokemonName:R.getNameToRender()})??null,"selectableFilter"))}).withOptionPhase(async()=>{var R;const E=a.currentBattle.mysteryEncounter,A=E.misc.oricorioData.toPokemon();A.passive=!0;const s=(R=E.misc.selectedMove)==null?void 0:R.getMove().id;A.moveset.some(n=>n.getMove().id===s)||(A.moveset.length<4?A.moveset.push(new Lt(s)):A.moveset[3]=new Lt(s)),await oc(),await xr(A,null,we.POKEBALL,!1),wt(!0)}).build()).build();function oc(){return new Promise(E=>{const A=a.getEnemyParty()[0];a.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{a.field.remove(A,!0),E()},"onComplete")})})}o(oc,"hideOricorioPokemon");var Yk=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))(Yk||{});function T_(E,A,s){return new Promise(R=>{const n=a.fieldUI.getByName("Dream Background"),I=a.add.image(0,0,"default_bg");I.setOrigin(0,0),I.setVisible(!1),n.add(I);let r,L,N,l;const C=s===0?0:s===2?100:-100,U=s!==0?-15:0,D=o(()=>{const M=a.addPokemonSprite(E,I.displayWidth/2+C,I.displayHeight/2+U,"pkmn__sub");return M.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),M},"getPokemonSprite");n.add(r=D()),n.add(L=D()),n.add(N=D()),n.add(l=D()),r.setAlpha(0),L.setAlpha(0),L.setTintFill(16777215),N.setVisible(!1),l.setVisible(!1),l.setTintFill(16777215),[r,L,N,l].map(M=>{const h=E.getSpriteKey(!0);try{M.play(h)}catch(_){console.error(`Failed to play animation for ${h}`,_)}M.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:BR(E.getTeraType()),isTerastallized:E.isTerastallized}),M.setPipelineData("ignoreTimeTint",!0),M.setPipelineData("spriteKey",E.getSpriteKey()),M.setPipelineData("shiny",E.shiny),M.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(_=>{var d;(d=E.summonData)!=null&&d.speciesForm&&(_+="Base"),M.pipelineData[_]=E.getSprite().pipelineData[_]})}),[N,l].map(M=>{const h=A.getSpriteKey(!0);try{M.play(h)}catch(_){console.error(`Failed to play animation for ${h}`,_)}M.setPipelineData("ignoreTimeTint",!0),M.setPipelineData("spriteKey",A.getSpriteKey()),M.setPipelineData("shiny",A.shiny),M.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(_=>{var d;(d=A.summonData)!=null&&d.speciesForm&&(_+="Base"),M.pipelineData[_]=A.getSprite().pipelineData[_]})}),a.tweens.add({targets:r,alpha:1,ease:"Cubic.easeInOut",duration:2e3,onComplete:o(()=>{UQ(I,n,C,U),a.tweens.addCounter({from:0,to:1,duration:1e3,onUpdate:o(M=>{L.setAlpha(M.getValue())},"onUpdate"),onComplete:o(()=>{r.setVisible(!1),a.time.delayedCall(700,()=>{DQ(I,n,C,U),a.time.delayedCall(1e3,()=>{l.setScale(.25),l.setVisible(!0),Wk(1.5,6,L,l).then(()=>{N.setVisible(!0),MQ(I,n,C,U),a.time.delayedCall(900,()=>{a.tweens.add({targets:l,alpha:0,duration:1500,delay:150,easing:"Sine.easeIn",onComplete:o(()=>{a.time.delayedCall(3e3,()=>{R(),a.tweens.add({targets:N,alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:o(()=>{E.destroy(),A.setVisible(!1),A.setAlpha(1)},"onComplete")})})},"onComplete")})})})})})},"onComplete")})},"onComplete")})})}o(T_,"doPokemonTransformationSequence");function UQ(E,A,s,R){let n=0;a.tweens.addCounter({repeat:64,duration:UE(1),onRepeat:o(()=>{if(n<64){if(!(n&7))for(let I=0;I<4;I++)cQ((n&120)*2+I*64,E,A,s,R);n++}},"onRepeat")})}o(UQ,"doSpiralUpward");function DQ(E,A,s,R){let n=0;a.tweens.addCounter({repeat:96,duration:UE(1),onRepeat:o(()=>{if(n<96){if(n<6)for(let I=0;I<9;I++)hQ(I*16,E,A,s,R);n++}},"onRepeat")})}o(DQ,"doArcDownward");function Wk(E,A,s,R){return new Promise(n=>{const I=E===A;a.tweens.add({targets:s,scale:.25,ease:"Cubic.easeInOut",duration:500/E,yoyo:!I}),a.tweens.add({targets:R,scale:1,ease:"Cubic.easeInOut",duration:500/E,yoyo:!I,onComplete:o(()=>{E<A?Wk(E+.5,A,s,R).then(r=>n(r)):(s.setVisible(!1),n(!0))},"onComplete")})})}o(Wk,"doCycle");function MQ(E,A,s,R){let n=0;a.tweens.addCounter({repeat:48,duration:UE(1),onRepeat:o(()=>{if(n){if(n===32)for(let I=0;I<16;I++)B6(I*16,8,E,A,s,R)}else for(let I=0;I<16;I++)B6(I*16,4,E,A,s,R);n++},"onRepeat")})}o(MQ,"doCircleInward");function cQ(E,A,s,R,n){const I=A.displayWidth/2+R,r=a.add.image(I,0,"evo_sparkle");s.add(r);let L=0,N=48;const l=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{C()},"onRepeat")}),C=o(()=>{!L||r.y>8?(r.setPosition(I,88-L*L/80+n),r.y+=Pn(E,N)/4,r.x+=tI(E,N),r.setScale(1-L/80),E+=4,L&1&&N--,L++):(r.destroy(),l.remove())},"updateParticle");C()}o(cQ,"doSpiralUpwardParticle");function hQ(E,A,s,R,n){const I=A.displayWidth/2+R,r=a.add.image(I,0,"evo_sparkle");r.setScale(.5),s.add(r);let L=0,N=8;const l=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{C()},"onRepeat")}),C=o(()=>{!L||r.y<88?(r.setPosition(I,8+L*L/5+n),r.y+=Pn(E,N)/4,r.x+=tI(E,N),N=8+Pn(L*4,40),L++):(r.destroy(),l.remove())},"updateParticle");C()}o(hQ,"doArcDownParticle");function B6(E,A,s,R,n,I){const r=s.displayWidth/2+n,L=s.displayHeight/2+I,N=a.add.image(r,L,"evo_sparkle");R.add(N);let l=120;const C=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{U()},"onRepeat")}),U=o(()=>{l>8?(N.setPosition(r,L),N.y+=Pn(E,l),N.x+=tI(E,l),l-=A,E+=4):(N.destroy(),C.remove())},"updateParticle");U()}o(B6,"doCircleInwardParticle");const Ts="mysteryEncounters/weirdDream",_Q=[e.ETERNATUS,e.NIHILEGO,e.BUZZWOLE,e.PHEROMOSA,e.XURKITREE,e.CELESTEELA,e.KARTANA,e.GUZZLORD,e.POIPOLE,e.NAGANADEL,e.STAKATAKA,e.BLACEPHALON,e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN,e.COSMOG,e.MELTAN,e.KUBFU,e.COSMOEM,e.POIPOLE,e.TERAPAGOS,e.TYPE_NULL,e.CALYREX,e.NAGANADEL,e.URSHIFU,e.OGERPON,e.OKIDOGI,e.MUNKIDORI,e.FEZANDIPITI],Fu=600,rl=570,yk=20,PQ=10,GQ=[90,110],dQ=[40,50],HQ=xA.withEncounterType(Et.WEIRD_DREAM).withEncounterTier(zt.ROGUE).withDisallowedChallenges(ut.SINGLE_TYPE,ut.SINGLE_GENERATION).withSceneWaveRangeRequirement(30,140).withIntroSpriteConfigs([{spriteKey:"weird_dream_woman",fileRoot:"mystery-encounters",hasShadow:!0,y:11,yShadow:6,x:4}]).withIntroDialogue([{text:`${Ts}:intro`},{speaker:`${Ts}:speaker`,text:`${Ts}:intro_dialogue`}]).setLocalizationKey(`${Ts}`).withTitle(`${Ts}:title`).withDescription(`${Ts}:description`).withQuery(`${Ts}:query`).withOnInit(()=>{a.loadBgm("mystery_encounter_weird_dream","mystery_encounter_weird_dream.mp3");const E=fQ(),A=E.map(s=>s.newPokemon.loadAssets());return a.currentBattle.mysteryEncounter.misc={teamTransformations:E,loadAssets:A},!0}).withOnVisualsStart(()=>(a.fadeAndSwitchBgm("mystery_encounter_weird_dream"),!0)).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${Ts}:option.1.label`,buttonTooltip:`${Ts}:option.1.tooltip`,selected:[{text:`${Ts}:option.1.selected`}]}).withPreOptionPhase(async()=>{a.time.delayedCall(1e3,()=>{mQ()});for(const E of a.currentBattle.mysteryEncounter.misc.teamTransformations)a.removePokemonFromPlayerParty(E.previousPokemon,!1),a.getPlayerParty().push(E.newPokemon)}).withOptionPhase(async()=>{const E=EA(`${Ts}:option.1.cutscene`);await Promise.all(a.currentBattle.mysteryEncounter.misc.loadAssets);const A=a.currentBattle.mysteryEncounter.misc.teamTransformations;if(A.length<=3)for(const s of A){const R=s.previousPokemon,n=s.newPokemon;await T_(R,n,Yk.CENTER)}else await KQ(A);await E,pQ(),await EA(`${Ts}:option.1.dream_complete`),await BQ(A),bt({guaranteedModifierTypeFuncs:[j.MEMORY_MUSHROOM,j.ROGUE_BALL,j.MINT,j.MINT,j.MINT],fillRemaining:!1}),wt(!0)}).build()).withSimpleOption({buttonLabel:`${Ts}:option.2.label`,buttonTooltip:`${Ts}:option.2.tooltip`,selected:[{text:`${Ts}:option.2.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter.misc.teamTransformations,A=[];for(const r of E){const L=r.newPokemon,N=r.previousPokemon;await wk(N,L,L.species.getRootSpeciesId(),!0);const l=new Ks(L);l.player=!1;const C=[];for(const D of r.heldItems)C.push({modifier:D.clone(),stackCount:D.getStackCount(),isTransferable:!1});if(vk(L)){const D=Vk(L);C.push({modifier:mt(j.MYSTERY_ENCOUNTER_OLD_GATEAU,[yk,D]),stackCount:1,isTransferable:!1})}const U={species:r.newSpecies,isBoss:L.getSpeciesForm().getBaseStatTotal()>rl,level:N.level,dataSource:l,modifierConfigs:C};A.push(U)}const s=a.gameData.gender??Jt.UNSET,R=tE[s===Jt.FEMALE?c.FUTURE_SELF_F:c.FUTURE_SELF_M].clone();R.setPartyTemplates(new Rt(E.length,Ze.STRONG));const n={trainerConfig:R,pokemonConfigs:A,female:s===Jt.FEMALE},I=o(()=>{const r=a.getPlayerParty().filter(L=>!L.passive);if((r==null?void 0:r.length)>0){const L=r[He(r.length)];L.passive=!0,L.updateInfo(!0)}},"onBeforeRewards");bt({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.GREAT,V.GREAT],fillRemaining:!1},void 0,I),await EA(`${Ts}:option.2.selected_2`,null,void 0,!0),await OE(n)}).withSimpleOption({buttonLabel:`${Ts}:option.3.label`,buttonTooltip:`${Ts}:option.3.tooltip`,selected:[{text:`${Ts}:option.3.selected`}]},async()=>{for(const E of a.getPlayerParty())E.level=Math.max(Math.ceil((100-PQ)/100*E.level),1),E.exp=IO(E.level,E.species.growthRate),E.levelExp=0,E.calculateStats(),E.getBattleInfo().setLevel(E.level),await E.updateInfo();return wt(!0),!0}).build();function fQ(){const E=a.getPlayerParty(),A=E.map(L=>L.species),s=E.map(L=>({previousPokemon:L}));let R=!1,n=!1;const I=E.length,r=GO(E.slice(0));for(let L=0;L<I;L++){const N=r[L],l=s.findIndex(h=>h.previousPokemon.id===N.id);s[l].heldItems=N.getHeldItems().filter(h=>!(h instanceof GR));const C=N.getSpeciesForm().getBaseStatTotal();let U;L<2?U=GQ:U=dQ;const D=gQ(C,U,R,n,A),M=D.getBaseStatTotal();M>Fu&&(R=!0),M<=Fu&&M>=rl&&(n=!0),s[l].newSpecies=D,""+JSON.stringify(D),A.push(D)}for(const L of s){const N=He(L.newSpecies.getAbilityCount());L.newPokemon=a.addPlayerPokemon(L.newSpecies,L.previousPokemon.level,N,void 0)}return s}o(fQ,"getTeamTransformations");async function BQ(E){var R;let A=!1;for(const n of E){const I=n.previousPokemon,r=n.newPokemon,L=r.species.getRootSpeciesId();await wk(I,r,L)&&(A=!0);for(const N of n.heldItems)N.pokemonId=r.id,a.addModifier(N,!1,!1,!1,!0);if(vk(r)){const N=Vk(r),l=(R=j.MYSTERY_ENCOUNTER_OLD_GATEAU().generateType(a.getPlayerParty(),[yk,N]))==null?void 0:R.withIdFromFunc(j.MYSTERY_ENCOUNTER_OLD_GATEAU),C=l==null?void 0:l.newModifier(r);C&&a.addModifier(C,!1,!1,!1,!0)}r.calculateStats(),await r.updateInfo()}const s=a.getPlayerParty().filter(n=>!n.passive);if((s==null?void 0:s.length)>0){const n=s[He(s.length)];n.passive=!0,await n.updateInfo(!0)}A&&a.playSound("level_up_fanfare")}o(BQ,"doNewTeamPostProcess");async function wk(E,A,s,R=!1){let n=!1;if(A.species.abilityHidden){const l=A.species.ability2?2:1;if(A.abilityIndex<l){const C=new je(256);a.applyModifiers(gn,!0,C),!He(C.value)&&(A.abilityIndex=l)}}A.ivs=A.ivs.map(l=>{const C=He(31);return C>l?C:l}),A.nature=[rt.HARDY,rt.DOCILE,rt.BASHFUL,rt.QUIRKY,rt.SERIOUS][He(5)],!R&&(A.getSpeciesForm().getBaseStatTotal()<=rl||A.isShiny())&&(A.getSpeciesForm().abilityHidden&&A.abilityIndex===A.getSpeciesForm().getAbilityCount()-1&&a.validateAchv(ht.HIDDEN_ABILITY),A.species.subLegendary&&a.validateAchv(ht.CATCH_SUB_LEGENDARY),A.species.legendary&&a.validateAchv(ht.CATCH_LEGENDARY),A.species.mythical&&a.validateAchv(ht.CATCH_MYTHICAL),a.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),await a.gameData.setPokemonCaught(A,!0,!1,!1)&&(n=!0,await EA(u.t("battle:addedAsAStarter",{pokemonName:$e(s).getName()})))),A.pokerus=E.pokerus,A.luck=E.getLuck(),A.ivs=A.ivs.map((l,C)=>E.ivs[C]>l?E.ivs[C]:l),!R&&a.gameData.dexData[s].caughtAttr&&a.gameData.addStarterCandy($e(s),1),A.generateAndPopulateMoveset();const I=A.moveset;A.moveset=E.moveset.slice(0);const r=await FQ(A,s,R);YQ(A,I,r);const L=[i.UNKNOWN];let N=He(18);for(;N===L[0];)N=He(18);return L.push(N),A.customPokemonData||(A.customPokemonData=new Ms),A.customPokemonData.types=L,A.passive=E.passive,n}o(wk,"postProcessTransformedPokemon");function vk(E){return E.getSpeciesForm().getBaseStatTotal()<rl}o(vk,"shouldGetOldGateau");function Vk(E){const A=[],s=E.getSpeciesForm().baseStats.slice(0);return A.push(s[p.HP]<s[p.SPD]?p.HP:p.SPD),A.push(s[p.ATK]<s[p.SPATK]?p.ATK:p.SPATK),A.push(s[p.DEF]<s[p.SPDEF]?p.DEF:p.SPDEF),A}o(Vk,"getOldGateauBoostedStats");function gQ(E,A,s,R,n){let I;for(;Pe(I);){const r=E+A[1],L=Math.max(E+A[0],0);let N=qA.filter(l=>{const C=l.getBaseStatTotal(),U=C>=L&&C<=r,D=(!R||C<rl||C>Fu)&&(!s||C<=Fu);return U&&D&&!_Q.includes(l.speciesId)});if((N==null?void 0:N.length)>20)for(N=GO(N),I=N.pop();Pe(I)||n.includes(I);)I=N.pop();else A[0]-=10,A[1]+=10}return I}o(gQ,"getTransformedSpecies");function mQ(){const E=a.add.container(0,-a.game.canvas.height/6);E.name="Dream Background";const A=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,0);A.setName("Black Background"),A.setOrigin(0,0),E.add(A),A.setVisible(!0);const s=a.add.video(0,0,"evo_bg").stop();s.setLoop(!0),s.setOrigin(0,0),s.setScale(.4359673025),E.add(s),a.fieldUI.add(E),a.fieldUI.bringToTop(E),s.play(),E.setVisible(!0),E.alpha=0,a.tweens.add({targets:E,alpha:1,duration:3e3,ease:"Sine.easeInOut"})}o(mQ,"doShowDreamBackground");function pQ(){const E=a.fieldUI.getByName("Dream Background");a.tweens.add({targets:E,alpha:0,duration:3e3,ease:"Sine.easeInOut",onComplete:o(()=>{a.fieldUI.remove(E,!0)},"onComplete")})}o(pQ,"doHideDreamBackground");function KQ(E){return new Promise(A=>{const s=[];for(let I=0;I<3;I++){const r=I*4e3;a.time.delayedCall(r,()=>{const L=E[I],N=L.previousPokemon,l=L.newPokemon,C=I,U=T_(N,l,C).then(()=>{if(E.length>I+3){const D=E[I+3],M=D.previousPokemon,h=D.newPokemon;s.push(T_(M,h,C))}});s.push(U)})}const R=setInterval(n,500);async function n(){s.length===E.length&&(clearInterval(R),await Promise.all(s),A())}o(n,"checkAllPromisesExist")})}o(KQ,"doSideBySideTransformations");async function FQ(E,A,s=!1){var I;let R=null;const n=(I=E.getEggMoves())==null?void 0:I.slice(0);if(n){const r=GO([0,1,2,3]);let L=r.pop(),N=Pe(L)?null:n[L],l=0;for(;l<3&&(!N||E.moveset.some(C=>C.moveId===N));)L=r.pop(),N=Pe(L)?null:n[L],l++;N&&(E.moveset.some(C=>C.moveId===N)||(E.moveset.length<4?E.moveset.push(new Lt(N)):(R=He(4),E.moveset[R]=new Lt(N))),!s&&!Pe(L)&&a.gameData.dexData[A].caughtAttr&&await a.gameData.setEggMoveUnlocked($e(A),L,!0))}return R}o(FQ,"addEggMoveToNewPokemonMoveset");function YQ(E,A,s){let R=null;for(const n of A)if((n==null?void 0:n.getMove().type)===E.getTypes()[0]&&!E.moveset.some(I=>I.moveId===n.moveId)){R=n;break}if(!R){for(const n of A)if(!E.moveset.some(I=>I.moveId===n.moveId)){R=n;break}}if(R)if(E.moveset.length<4)E.moveset.push(R);else{let n=He(4);for(;s!==null&&n===s;)n=He(4);E.moveset[n]=R}}o(YQ,"addFavoredMoveToNewPokemonMoveset");const dp=class dp extends HE{start(){super.start(),a.trainer.setVisible(!0),a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back`),a.tweens.add({targets:a.trainer,x:106,duration:1e3,onComplete:o(()=>this.end(),"onComplete")})}};o(dp,"ShowTrainerPhase");let Yu=dp;const Hp=class Hp extends HR{constructor(A){super(uA.SWITCH,A,-1,!0)}switchAndSummon(){this.end()}summon(){}onEnd(){const A=this.getPokemon();A.resetSprite(),A.resetTurnData(),A.resetSummonData(),a.updateFieldScale(),a.triggerPokemonFormChange(A,Bs)}};o(Hp,"ReturnPhase");let Xr=Hp;const Cs="mysteryEncounters/theWinstrateChallenge",WQ=xA.withEncounterType(Et.THE_WINSTRATE_CHALLENGE).withEncounterTier(zt.ROGUE).withSceneWaveRangeRequirement(100,JA[1]).withIntroSpriteConfigs([{spriteKey:"vito",fileRoot:"trainer",hasShadow:!1,x:16,y:-4},{spriteKey:"vivi",fileRoot:"trainer",hasShadow:!1,x:-14,y:-4},{spriteKey:"victor",fileRoot:"trainer",hasShadow:!0,x:-32},{spriteKey:"victoria",fileRoot:"trainer",hasShadow:!0,x:40},{spriteKey:"vicky",fileRoot:"trainer",hasShadow:!0,x:3,y:5,yShadow:5}]).withIntroDialogue([{text:`${Cs}:intro`},{speaker:`${Cs}:speaker`,text:`${Cs}:intro_dialogue`}]).withAutoHideIntroVisuals(!1).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;return E.enemyPartyConfigs.push(bQ()),E.enemyPartyConfigs.push(xQ()),E.enemyPartyConfigs.push(VQ()),E.enemyPartyConfigs.push(vQ()),E.enemyPartyConfigs.push(wQ()),!0}).setLocalizationKey(`${Cs}`).withTitle(`${Cs}:title`).withDescription(`${Cs}:description`).withQuery(`${Cs}:query`).withSimpleOption({buttonLabel:`${Cs}:option.1.label`,buttonTooltip:`${Cs}:option.1.tooltip`,selected:[{speaker:`${Cs}:speaker`,text:`${Cs}:option.1.selected`}]},async()=>{a.currentBattle.mysteryEncounter.doContinueEncounter=async()=>{await yQ()},await AE(!0,!1),await S_()}).withSimpleOption({buttonLabel:`${Cs}:option.2.label`,buttonTooltip:`${Cs}:option.2.tooltip`,selected:[{speaker:`${Cs}:speaker`,text:`${Cs}:option.2.selected`}]},async()=>{a.unshiftPhase(new kr(!0)),bt({guaranteedModifierTypeFuncs:[j.RARER_CANDY],fillRemaining:!1}),wt()}).build();async function S_(){const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs.pop();if(A)await OE(A);else{await AE(!1,!1),await _n(`${Cs}:victory`,`${Cs}:speaker`);const s=j.VOUCHER_PREMIUM().newModifier();a.addModifier(s),a.playSound("item_fanfare"),await EA(u.t("battle:rewardGain",{modifierName:s==null?void 0:s.type.name})),await _n(`${Cs}:victory_2`,`${Cs}:speaker`),a.ui.clearText();const R=oE(j.MYSTERY_ENCOUNTER_MACHO_BRACE);R.type.tier=V.MASTER,bt({guaranteedModifierTypeOptions:[R],fillRemaining:!1}),E.doContinueEncounter=void 0,wt(!1,PE.NO_BATTLE)}}o(S_,"spawnNextTrainerOrEndEncounter");function yQ(){return new Promise(async E=>{if(a.currentBattle.mysteryEncounter.enemyPartyConfigs.length===0){const A=a.currentBattle.trainer;A&&a.tweens.add({targets:A,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{a.field.remove(A,!0)},"onComplete")}),await S_(),E()}else{a.arena.resetArenaEffects();const A=a.getPlayerField();for(const R of A)R.lapseTag(w.COMMANDED);A.forEach((R,n)=>a.unshiftPhase(new Xr(n)));for(const R of a.getPlayerParty())R.species.speciesId===e.EISCUE&&R.hasAbility(O.ICE_FACE)&&R.formIndex===1&&a.triggerPokemonFormChange(R,qt),R.resetBattleData(),r7(wS,R);a.unshiftPhase(new Yu);const s=a.currentBattle.trainer;a.currentBattle.trainer=null,await S_(),s&&a.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{a.field.remove(s,!0),E()},"onComplete")})}})}o(yQ,"endTrainerBattleAndShowDialogue");function wQ(){return{trainerType:c.VICTOR,pokemonConfigs:[{species:$e(e.SWELLOW),isBoss:!1,abilityIndex:0,nature:rt.ADAMANT,moveSet:[t.FACADE,t.BRAVE_BIRD,t.PROTECT,t.QUICK_ATTACK],modifierConfigs:[{modifier:mt(j.FLAME_ORB),isTransferable:!1},{modifier:mt(j.FOCUS_BAND),stackCount:2,isTransferable:!1}]},{species:$e(e.OBSTAGOON),isBoss:!1,abilityIndex:1,nature:rt.ADAMANT,moveSet:[t.FACADE,t.OBSTRUCT,t.NIGHT_SLASH,t.FIRE_PUNCH],modifierConfigs:[{modifier:mt(j.FLAME_ORB),isTransferable:!1},{modifier:mt(j.LEFTOVERS),stackCount:2,isTransferable:!1}]}]}}o(wQ,"getVictorTrainerConfig");function vQ(){return{trainerType:c.VICTORIA,pokemonConfigs:[{species:$e(e.ROSERADE),isBoss:!1,abilityIndex:0,nature:rt.CALM,moveSet:[t.SYNTHESIS,t.SLUDGE_BOMB,t.GIGA_DRAIN,t.SLEEP_POWDER],modifierConfigs:[{modifier:mt(j.SOUL_DEW),isTransferable:!1},{modifier:mt(j.QUICK_CLAW),stackCount:2,isTransferable:!1}]},{species:$e(e.GARDEVOIR),isBoss:!1,formIndex:1,nature:rt.TIMID,moveSet:[t.PSYSHOCK,t.MOONBLAST,t.SHADOW_BALL,t.WILL_O_WISP],modifierConfigs:[{modifier:mt(j.ATTACK_TYPE_BOOSTER,[i.PSYCHIC]),stackCount:1,isTransferable:!1},{modifier:mt(j.ATTACK_TYPE_BOOSTER,[i.FAIRY]),stackCount:1,isTransferable:!1}]}]}}o(vQ,"getVictoriaTrainerConfig");function VQ(){return{trainerType:c.VIVI,pokemonConfigs:[{species:$e(e.SEAKING),isBoss:!1,abilityIndex:3,nature:rt.ADAMANT,moveSet:[t.WATERFALL,t.MEGAHORN,t.KNOCK_OFF,t.REST],modifierConfigs:[{modifier:mt(j.BERRY,[gt.LUM]),stackCount:2,isTransferable:!1},{modifier:mt(j.BASE_STAT_BOOSTER,[p.HP]),stackCount:4,isTransferable:!1}]},{species:$e(e.BRELOOM),isBoss:!1,abilityIndex:1,nature:rt.JOLLY,moveSet:[t.SPORE,t.SWORDS_DANCE,t.SEED_BOMB,t.DRAIN_PUNCH],modifierConfigs:[{modifier:mt(j.BASE_STAT_BOOSTER,[p.HP]),stackCount:4,isTransferable:!1},{modifier:mt(j.TOXIC_ORB),isTransferable:!1}]},{species:$e(e.CAMERUPT),isBoss:!1,formIndex:1,nature:rt.CALM,moveSet:[t.EARTH_POWER,t.FIRE_BLAST,t.YAWN,t.PROTECT],modifierConfigs:[{modifier:mt(j.QUICK_CLAW),stackCount:3,isTransferable:!1}]}]}}o(VQ,"getViviTrainerConfig");function xQ(){return{trainerType:c.VICKY,pokemonConfigs:[{species:$e(e.MEDICHAM),isBoss:!1,formIndex:1,nature:rt.IMPISH,moveSet:[t.AXE_KICK,t.ICE_PUNCH,t.ZEN_HEADBUTT,t.BULLET_PUNCH],modifierConfigs:[{modifier:mt(j.SHELL_BELL),isTransferable:!1}]}]}}o(xQ,"getVickyTrainerConfig");function bQ(){return{trainerType:c.VITO,pokemonConfigs:[{species:$e(e.HISUI_ELECTRODE),isBoss:!1,abilityIndex:0,nature:rt.MODEST,moveSet:[t.THUNDERBOLT,t.GIGA_DRAIN,t.FOUL_PLAY,t.THUNDER_WAVE],modifierConfigs:[{modifier:mt(j.BASE_STAT_BOOSTER,[p.SPD]),stackCount:2,isTransferable:!1}]},{species:$e(e.SWALOT),isBoss:!1,abilityIndex:2,nature:rt.QUIET,moveSet:[t.SLUDGE_BOMB,t.GIGA_DRAIN,t.ICE_BEAM,t.EARTHQUAKE],modifierConfigs:[{modifier:mt(j.BERRY,[gt.SITRUS]),stackCount:2},{modifier:mt(j.BERRY,[gt.APICOT]),stackCount:2},{modifier:mt(j.BERRY,[gt.GANLON]),stackCount:2},{modifier:mt(j.BERRY,[gt.STARF]),stackCount:2},{modifier:mt(j.BERRY,[gt.SALAC]),stackCount:2},{modifier:mt(j.BERRY,[gt.LUM]),stackCount:2},{modifier:mt(j.BERRY,[gt.LANSAT]),stackCount:2},{modifier:mt(j.BERRY,[gt.LIECHI]),stackCount:2},{modifier:mt(j.BERRY,[gt.PETAYA]),stackCount:2},{modifier:mt(j.BERRY,[gt.ENIGMA]),stackCount:2},{modifier:mt(j.BERRY,[gt.LEPPA]),stackCount:2}]},{species:$e(e.DODRIO),isBoss:!1,abilityIndex:2,nature:rt.JOLLY,moveSet:[t.DRILL_PECK,t.QUICK_ATTACK,t.THRASH,t.KNOCK_OFF],modifierConfigs:[{modifier:mt(j.KINGS_ROCK),stackCount:2,isTransferable:!1}]},{species:$e(e.ALAKAZAM),isBoss:!1,formIndex:1,nature:rt.BOLD,moveSet:[t.PSYCHIC,t.SHADOW_BALL,t.FOCUS_BLAST,t.THUNDERBOLT],modifierConfigs:[{modifier:mt(j.WIDE_LENS),stackCount:2,isTransferable:!1}]},{species:$e(e.DARMANITAN),isBoss:!1,abilityIndex:0,nature:rt.IMPISH,moveSet:[t.EARTHQUAKE,t.U_TURN,t.FLARE_BLITZ,t.ROCK_SLIDE],modifierConfigs:[{modifier:mt(j.QUICK_CLAW),stackCount:2,isTransferable:!1}]}]}}o(bQ,"getVitoTrainerConfig");const ds="mysteryEncounters/teleportingHijinks",Tc=1.75,kQ=[T.SPACE,T.FAIRY_CAVE,T.LABORATORY,T.ISLAND,T.WASTELAND,T.DOJO],ZQ=[i.ELECTRIC,i.STEEL],XQ=xA.withEncounterType(Et.TELEPORTING_HIJINKS).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new a_([1,2,3],10)).withSceneRequirement(new an(0,Tc)).withAutoHideIntroVisuals(!1).withCatchAllowed(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"teleporting_hijinks_teleporter",fileRoot:"mystery-encounters",hasShadow:!0,x:4,y:4,yShadow:1}]).withIntroDialogue([{text:`${ds}:intro`}]).setLocalizationKey(`${ds}`).withTitle(`${ds}:title`).withDescription(`${ds}:description`).withQuery(`${ds}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=a.getWaveMoneyAmount(Tc);return E.setDialogueToken("price",A.toString()),E.misc={price:A},!0}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneMoneyRequirement(0,Tc).withDialogue({buttonLabel:`${ds}:option.1.label`,buttonTooltip:`${ds}:option.1.tooltip`,selected:[{text:`${ds}:option.1.selected`}]}).withPreOptionPhase(async()=>{SO(-a.currentBattle.mysteryEncounter.misc.price,!0,!1)}).withOptionPhase(async()=>{const E=await g6();bt({fillRemaining:!0}),await OE(E)}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPokemonTypeRequirement(ZQ,!0,1).withDialogue({buttonLabel:`${ds}:option.2.label`,buttonTooltip:`${ds}:option.2.tooltip`,disabledButtonTooltip:`${ds}:option.2.disabled_tooltip`,selected:[{text:`${ds}:option.2.selected`}]}).withOptionPhase(async()=>{const E=await g6();bt({fillRemaining:!0}),fR(a.currentBattle.mysteryEncounter.selectedOption.primaryPokemon.id,100),await OE(E)}).build()).withSimpleOption({buttonLabel:`${ds}:option.3.label`,buttonTooltip:`${ds}:option.3.tooltip`,selected:[{text:`${ds}:option.3.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter,A=Il(il),s=a.arena.randomSpecies(a.currentBattle.waveIndex,A,0,TI(a.getPlayerParty()),!0),R=new Fs(s,A,oe.NONE,!0);E.setDialogueToken("enemyPokemon",ee(R));const n={pokemonConfigs:[{level:A,species:s,dataSource:new Ks(R),isBoss:!0}]},I=oE(j.ATTACK_TYPE_BOOSTER,[i.STEEL]),r=oE(j.ATTACK_TYPE_BOOSTER,[i.ELECTRIC]);bt({guaranteedModifierTypeOptions:[I,r],fillRemaining:!0}),await AE(!0,!0),await OE(n)}).build();async function g6(){const E=a.currentBattle.mysteryEncounter,A=kQ.filter(N=>a.arena.biomeType!==N),s=A[He(A.length)];await EA(`${ds}:transport`),await Promise.all([QQ(s),AE()]),a.updateBiomeWaveText(),a.playBgm(),await EA(`${ds}:attacked`);const R=Il(il),n=a.arena.randomSpecies(a.currentBattle.waveIndex,R,0,TI(a.getPlayerParty()),!0),I=new Fs(n,R,oe.NONE,!0);E.setDialogueToken("enemyPokemon",ee(I));const r=a.currentBattle.waveIndex<50?[p.DEF,p.SPDEF,p.SPD]:[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD];return{pokemonConfigs:[{level:R,species:n,dataSource:new Ks(I),isBoss:!0,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(N=>{SE(`${ds}:boss_enraged`),a.unshiftPhase(new AA(N.getBattlerIndex(),!0,r,1))},"mysteryEncounterBattleEffects")}]}}o(g6,"doBiomeTransitionDialogueAndBattleInit");async function QQ(E){return new Promise(A=>{a.tweens.add({targets:[a.arenaEnemy,a.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:o(()=>{a.newArena(E);const R=`${Sl(E)}_bg`;a.arenaBgTransition.setTexture(R),a.arenaBgTransition.setAlpha(0),a.arenaBgTransition.setVisible(!0),a.arenaPlayerTransition.setBiome(E),a.arenaPlayerTransition.setAlpha(0),a.arenaPlayerTransition.setVisible(!0),a.tweens.add({targets:[a.arenaPlayer,a.arenaBgTransition,a.arenaPlayerTransition],duration:1e3,ease:"Sine.easeInOut",alpha:o(n=>n===a.arenaPlayer?0:1,"alpha"),onComplete:o(()=>{a.arenaBg.setTexture(R),a.arenaPlayer.setBiome(E),a.arenaPlayer.setAlpha(1),a.arenaEnemy.setBiome(E),a.arenaEnemy.setAlpha(1),a.arenaNextEnemy.setBiome(E),a.arenaBgTransition.setVisible(!1),a.arenaPlayerTransition.setVisible(!1),a.lastEnemyTrainer&&a.lastEnemyTrainer.destroy(),A(),a.tweens.add({targets:a.arenaEnemy,x:"-=300"})},"onComplete")})},"onComplete")})})}o(QQ,"animateBiomeChange");const PA="mysteryEncounters/bugTypeSuperfan",Sc=[e.PARASECT,e.VENOMOTH,e.LEDIAN,e.ARIADOS,e.YANMA,e.BEAUTIFLY,e.DUSTOX,e.MASQUERAIN,e.NINJASK,e.VOLBEAT,e.ILLUMISE,e.ANORITH,e.KRICKETUNE,e.WORMADAM,e.MOTHIM,e.SKORUPI,e.JOLTIK,e.LARVESTA,e.VIVILLON,e.CHARJABUG,e.RIBOMBEE,e.SPIDOPS,e.LOKIX],Ui=[e.SCYTHER,e.PINSIR,e.HERACROSS,e.FORRETRESS,e.SCIZOR,e.SHUCKLE,e.SHEDINJA,e.ARMALDO,e.VESPIQUEN,e.DRAPION,e.YANMEGA,e.LEAVANNY,e.SCOLIPEDE,e.CRUSTLE,e.ESCAVALIER,e.ACCELGOR,e.GALVANTULA,e.VIKAVOLT,e.ARAQUANID,e.ORBEETLE,e.CENTISKORCH,e.FROSMOTH,e.KLEAVOR],$Q=[{species:e.PINSIR,formIndex:1},{species:e.SCIZOR,formIndex:1},{species:e.HERACROSS,formIndex:1},{species:e.ORBEETLE,formIndex:1},{species:e.CENTISKORCH,formIndex:1},{species:e.DURANT},{species:e.VOLCARONA},{species:e.GOLISOPOD}],m6=[e.GENESECT,e.SLITHER_WING,e.BUZZWOLE,e.PHEROMOSA],p6=[t.MEGAHORN,t.X_SCISSOR,t.ATTACK_ORDER,t.PIN_MISSILE,t.FIRST_IMPRESSION],K6=[t.SILVER_WIND,t.BUG_BUZZ,t.SIGNAL_BEAM,t.POLLEN_PUFF],F6=[t.STRING_SHOT,t.STICKY_WEB,t.SILK_TRAP,t.RAGE_POWDER,t.HEAL_ORDER],Y6=[t.BUG_BITE,t.LEECH_LIFE,t.DEFEND_ORDER,t.QUIVER_DANCE,t.TAIL_GLOW,t.INFESTATION,t.U_TURN],ha=[30,50,70,100,120,140,160],JQ=xA.withEncounterType(Et.BUG_TYPE_SUPERFAN).withEncounterTier(zt.GREAT).withPrimaryPokemonRequirement(uI.Some(new Wa(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new mu(i.BUG,1),new br(i.BUG,!1,1))).withMaxAllowedEncounters(1).withSceneWaveRangeRequirement(...JA).withIntroSpriteConfigs([]).withAutoHideIntroVisuals(!1).withIntroDialogue([{text:`${PA}:intro`},{speaker:`${PA}:speaker`,text:`${PA}:intro_dialogue`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=zQ(a.currentBattle.waveIndex),s=A.getSpriteKey();E.enemyPartyConfigs.push({trainerConfig:A,female:!0});let R,n;a.currentBattle.waveIndex<ha[3]?(R=Gn(e.BEEDRILL,!1),n=Gn(e.BUTTERFREE,!1)):(R=Gn(e.BEEDRILL,!1,1),n=Gn(e.BUTTERFREE,!1,1)),E.spriteConfigs=[{spriteKey:R.spriteKey,fileRoot:R.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:-30,tint:.15,y:-4,yShadow:-4},{spriteKey:n.spriteKey,fileRoot:n.fileRoot,hasShadow:!0,repeat:!0,isPokemon:!0,x:30,tint:.15,y:-4,yShadow:-4},{spriteKey:s,fileRoot:"trainer",hasShadow:!0,x:4,y:7,yShadow:7}];const r=[mt(j.QUICK_CLAW),mt(j.GRIP_CLAW),mt(j.ATTACK_TYPE_BOOSTER,[i.BUG])].map(L=>(L==null?void 0:L.name)??"unknown").join("/");return E.setDialogueToken("requiredBugItems",r),!0}).setLocalizationKey(`${PA}`).withTitle(`${PA}:title`).withDescription(`${PA}:description`).withQuery(`${PA}:query`).withSimpleOption({buttonLabel:`${PA}:option.1.label`,buttonTooltip:`${PA}:option.1.tooltip`,selected:[{speaker:`${PA}:speaker`,text:`${PA}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],s=[];s.push(new Lt(p6[He(p6.length)])),s.push(new Lt(K6[He(K6.length)])),s.push(new Lt(F6[He(F6.length)])),s.push(new Lt(Y6[He(Y6.length)])),E.misc={moveTutorOptions:s},E.onRewards=jQ,bt({fillRemaining:!0}),await AE(!0,!0),await OE(A)}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(new br(i.BUG,!1,1)).withDialogue({buttonLabel:`${PA}:option.2.label`,buttonTooltip:`${PA}:option.2.tooltip`,disabledButtonTooltip:`${PA}:option.2.disabled_tooltip`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=a.getPlayerParty().filter(R=>R.isOfType(i.BUG,!0)).length,s=u.t(`${PA}:numBugTypes`,{count:A});if(E.setDialogueToken("numBugTypes",s),A<2)bt({guaranteedModifierTypeFuncs:[j.SUPER_LURE,j.GREAT_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${PA}:speaker`,text:`${PA}:option.2.selected_0_to_1`}];else if(A<4)bt({guaranteedModifierTypeFuncs:[j.QUICK_CLAW,j.MAX_LURE,j.ULTRA_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${PA}:speaker`,text:`${PA}:option.2.selected_2_to_3`}];else if(A<6)bt({guaranteedModifierTypeFuncs:[j.GRIP_CLAW,j.MAX_LURE,j.ROGUE_BALL],fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${PA}:speaker`,text:`${PA}:option.2.selected_4_to_5`}];else{const R=[oE(j.MASTER_BALL)],n=[];a.findModifier(l=>l instanceof CL)||R.push(oE(j.MEGA_BRACELET)),a.findModifier(l=>l instanceof uL)||R.push(oE(j.DYNAMAX_BAND));const I=oE(j.EVOLUTION_ITEM);I&&n.push(I);const r=oE(j.RARE_EVOLUTION_ITEM);r&&n.push(r);const L=oE(j.FORM_CHANGE_ITEM);L&&n.push(L);const N=oE(j.RARE_FORM_CHANGE_ITEM);N&&n.push(N),n.length>0&&R.push(n[He(n.length)]),bt({guaranteedModifierTypeOptions:R,fillRemaining:!1}),E.selectedOption.dialogue.selected=[{speaker:`${PA}:speaker`,text:`${PA}:option.2.selected_6`}]}}).withOptionPhase(async()=>{wt()}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withPrimaryPokemonRequirement(uI.Some(new Wa(["BypassSpeedChanceModifier","ContactHeldItemTransferChanceModifier"],1),new mu(i.BUG,1))).withDialogue({buttonLabel:`${PA}:option.3.label`,buttonTooltip:`${PA}:option.3.tooltip`,disabledButtonTooltip:`${PA}:option.3.disabled_tooltip`,selected:[{text:`${PA}:option.3.selected`},{speaker:`${PA}:speaker`,text:`${PA}:option.3.selected_dialogue`}],secondOptionPrompt:`${PA}:option.3.select_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>R.getHeldItems().filter(I=>(I instanceof FI||I instanceof xI||I instanceof Bn&&I.type.moveType===i.BUG)&&I.isTransferable).map(I=>({label:I.type.name,handler:o(()=>(E.setDialogueToken("selectedItem",I.type.name),E.misc={chosenPokemon:R,chosenModifier:I},!0),"handler")})),"onPokemonSelected"),void 0,o(R=>R.getHeldItems().some(I=>I instanceof FI||I instanceof xI||I instanceof Bn&&I.type.moveType===i.BUG)?null:VA(`${PA}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenModifier;E.misc.chosenPokemon.loseHeldItem(A,!1),a.updateModifiers(!0,!0);const R=oE(j.MYSTERY_ENCOUNTER_GOLDEN_BUG_NET);R.type.tier=V.ROGUE,bt({guaranteedModifierTypeOptions:[R],guaranteedModifierTypeFuncs:[j.REVIVER_SEED],fillRemaining:!1}),wt(!0)}).build()).withOutroDialogue([{text:`${PA}:outro`}]).build();function zQ(E){const A=tE[c.BUG_TYPE_SUPERFAN].clone();A.name=u.t("trainerNames:bug_type_superfan");let s=$Q.slice(0);s=GO(s);const R=s.pop();if(E<ha[0])A.setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0)).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0));else if(E<ha[1])A.setPartyTemplates(new Rt(3,Ze.AVERAGE)).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0)).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0)).setPartyMemberFunc(2,Ie(Sc,oe.TRAINER,!0));else if(E<ha[2])A.setPartyTemplates(new Rt(4,Ze.AVERAGE)).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0)).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0)).setPartyMemberFunc(2,Ie(Sc,oe.TRAINER,!0)).setPartyMemberFunc(3,Ie(Ui,oe.TRAINER,!0));else if(E<ha[3])A.setPartyTemplates(new Rt(5,Ze.AVERAGE)).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0)).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0)).setPartyMemberFunc(2,Ie(Sc,oe.TRAINER,!0)).setPartyMemberFunc(3,Ie(Ui,oe.TRAINER,!0)).setPartyMemberFunc(4,Ie(Ui,oe.TRAINER,!0));else if(E<ha[4])A.setPartyTemplates(new Rt(5,Ze.AVERAGE)).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(2,Ie(Ui,oe.TRAINER,!0)).setPartyMemberFunc(3,Ie(Ui,oe.TRAINER,!0)).setPartyMemberFunc(4,Ie([R.species],oe.TRAINER,!0,n=>{Pe(R.formIndex)||(n.formIndex=R.formIndex,n.generateAndPopulateMoveset(),n.generateName())}));else if(E<ha[5]){s=GO(s);const n=s.pop();A.setPartyTemplates(new Rt(5,Ze.AVERAGE)).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0,I=>{I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,Ie(Ui,oe.TRAINER,!0)).setPartyMemberFunc(3,Ie([R.species],oe.TRAINER,!0,I=>{Pe(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(4,Ie([n.species],oe.TRAINER,!0,I=>{Pe(n.formIndex)||(I.formIndex=n.formIndex,I.generateAndPopulateMoveset(),I.generateName())}))}else if(E<ha[6])A.setPartyTemplates(new QA(new Rt(4,Ze.AVERAGE),new Rt(1,Ze.STRONG))).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0,n=>{n.formIndex=1,n.generateAndPopulateMoveset(),n.generateName()})).setPartyMemberFunc(2,Ie(Ui,oe.TRAINER,!0)).setPartyMemberFunc(3,Ie([R.species],oe.TRAINER,!0,n=>{Pe(R.formIndex)||(n.formIndex=R.formIndex,n.generateAndPopulateMoveset(),n.generateName())})).setPartyMemberFunc(4,Ie(m6,oe.TRAINER,!0));else{s=GO(s);const n=s.pop();A.setPartyTemplates(new QA(new Rt(4,Ze.AVERAGE),new Rt(1,Ze.STRONG))).setPartyMemberFunc(0,Ie([e.BEEDRILL],oe.TRAINER,!0,I=>{I.setBoss(!0,2),I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(1,Ie([e.BUTTERFREE],oe.TRAINER,!0,I=>{I.setBoss(!0,2),I.formIndex=1,I.generateAndPopulateMoveset(),I.generateName()})).setPartyMemberFunc(2,Ie([R.species],oe.TRAINER,!0,I=>{Pe(R.formIndex)||(I.formIndex=R.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(3,Ie([n.species],oe.TRAINER,!0,I=>{Pe(n.formIndex)||(I.formIndex=n.formIndex,I.generateAndPopulateMoveset(),I.generateName())})).setPartyMemberFunc(4,Ie(m6,oe.TRAINER,!0))}return A}o(zQ,"getTrainerConfigForWave");function jQ(){return new Promise(async E=>{const A=a.currentBattle.mysteryEncounter.misc.moveTutorOptions;await _n(`${PA}:battle_won`,`${PA}:speaker`);const s=1,R=new JR({delayVisibility:!1,scale:s,onSide:!0,right:!0,x:1,y:-JR.getHeight(s,!0)-1,width:a.game.canvas.width/6-2});a.ui.add(R);const n=A.map(L=>({label:L.getName(),handler:o(()=>(R.active=!1,R.setVisible(!1),!0),"handler"),onHover:o(()=>{R.active=!0,R.show(Ve[L.moveId])},"onHover")})),I=o(()=>{R.active=!1,R.setVisible(!1)},"onHoverOverCancel"),r=await W$(n,`${PA}:teach_move_prompt`,void 0,I);r||(R.active=!1,R.setVisible(!1)),r&&r.selectedOptionIndex<A.length&&a.unshiftPhase(new ra(r.selectedPokemonIndex,A[r.selectedOptionIndex].moveId)),E()})}o(jQ,"doBugTypeMoveTutor");const $E="mysteryEncounters/funAndGames",qQ=xA.withEncounterType(Et.FUN_AND_GAMES).withEncounterTier(zt.GREAT).withSceneWaveRangeRequirement(...JA).withSceneRequirement(new an(0,1.5)).withAutoHideIntroVisuals(!1).withSkipEnemyBattleTurns(!0).withSkipToFightInput(!0).withFleeAllowed(!1).withIntroSpriteConfigs([{spriteKey:"fun_and_games_game",fileRoot:"mystery-encounters",hasShadow:!1,x:0,y:6},{spriteKey:"fun_and_games_wobbuffet",fileRoot:"mystery-encounters",hasShadow:!0,x:-28,y:6,yShadow:6},{spriteKey:"fun_and_games_man",fileRoot:"mystery-encounters",hasShadow:!0,x:40,y:6,yShadow:6}]).withIntroDialogue([{speaker:`${$E}:speaker`,text:`${$E}:intro_dialogue`}]).setLocalizationKey(`${$E}`).withTitle(`${$E}:title`).withDescription(`${$E}:description`).withQuery(`${$E}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;return a.loadBgm("mystery_encounter_fun_and_games","mystery_encounter_fun_and_games.mp3"),E.setDialogueToken("wobbuffetName",$e(e.WOBBUFFET).getName()),!0}).withOnVisualsStart(()=>(a.fadeAndSwitchBgm("mystery_encounter_fun_and_games"),!0)).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_DEFAULT).withSceneRequirement(new an(0,1.5)).withDialogue({buttonLabel:`${$E}:option.1.label`,buttonTooltip:`${$E}:option.1.tooltip`,selected:[{text:`${$E}:option.1.selected`}]}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>{E.misc={playerPokemon:R}},"onPokemonSelected"),void 0,o(R=>EI(R,`${$E}:invalid_selection`),"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;E.misc.turnsRemaining=3;const A=E.options[0].requirements[0].requiredMoney;return SO(-A,!0,!1),await EA(u.t("mysteryEncounterMessages:paid_money",{amount:A})),E.onTurnStart=t$,E.doContinueEncounter=xk,s$(),await e$(),await A$(),!0}).build()).withSimpleOption({buttonLabel:`${$E}:option.2.label`,buttonTooltip:`${$E}:option.2.tooltip`,selected:[{text:`${$E}:option.2.selected`}]},async()=>(await AE(!0,!0),wt(!0),!0)).build();async function e$(){return new Promise(async E=>{const A=a.currentBattle.mysteryEncounter,s=A.misc.playerPokemon,R=a.getPlayerParty(),n=R.indexOf(s);if(n!==0){const C=R[0];R[0]=s,R[n]=C}let I;a.ui.showText(u.t("battle:playerGo",{pokemonName:ee(s)})),a.pbTray.hide(),a.trainer.setTexture(`trainer_${a.gameData.gender===Jt.FEMALE?"f":"m"}_back_pb`),a.time.delayedCall(562,()=>{a.trainer.setFrame("2"),a.time.delayedCall(64,()=>{a.trainer.setFrame("3")})}),a.tweens.add({targets:a.trainer,x:-36,duration:1e3,onComplete:o(()=>a.trainer.setVisible(!1),"onComplete")}),a.time.delayedCall(750,()=>{I=E$(s)});const r=$e(e.WOBBUFFET);a.currentBattle.enemyParty=[];const L=a.addEnemyPokemon(r,A.misc.playerPokemon.level,oe.NONE,!1,!0);L.ivs=[0,0,0,0,0,0],L.setNature(rt.MILD),L.setAlpha(0),L.setVisible(!1),L.calculateStats(),a.currentBattle.enemyParty[0]=L,a.gameData.setPokemonSeen(L,!0),await L.loadAssets();const N=setInterval(l,500);async function l(){I&&(clearInterval(N),await I,E())}o(l,"checkPlayerAnimationPromise")})}o(e$,"summonPlayerPokemon");function xk(){return new Promise(async E=>{const A=a.getEnemyPokemon();if(!A||A.isFainted(!0)||A.hp===0){A&&(A.hideInfo(),A.leaveField()),AE(!0,!0),a.currentBattle.enemyParty=[],a.currentBattle.mysteryEncounter.doContinueEncounter=void 0,wt(!0),await EA(`${$E}:ko`);const s=a.getWaveMoneyAmount(1.5);SO(-s,!0,!1)}E()})}o(xk,"handleLoseMinigame");function t$(){const E=a.currentBattle.mysteryEncounter,A=a.getEnemyPokemon();if(!A)return xk(),!0;if(E.misc.turnsRemaining<=0){const s=A.hp/A.getMaxHp();let R,n=!1;return s<.03?(bt({guaranteedModifierTypeFuncs:[j.MULTI_LENS],fillRemaining:!1}),R=`${$E}:best_result`):s<.15?(bt({guaranteedModifierTypeFuncs:[j.SCOPE_LENS],fillRemaining:!1}),R=`${$E}:great_result`):s<.33?(bt({guaranteedModifierTypeFuncs:[j.WIDE_LENS],fillRemaining:!1}),R=`${$E}:good_result`):(n=!0,R=`${$E}:bad_result`),A.hideInfo(),A.leaveField(),a.currentBattle.enemyParty=[],a.currentBattle.mysteryEncounter.doContinueEncounter=void 0,wt(n),SE(`${$E}:end_game`),SE(R),!0}return E.misc.turnsRemaining<3&&SE(`${$E}:charging_continue`),SE(`${$E}:turn_remaining_${E.misc.turnsRemaining}`),E.misc.turnsRemaining--,!1}o(t$,"handleNextTurn");async function A$(){const E=a.getEnemyPokemon();a.add.existing(E),a.field.add(E);const A=a.getPlayerPokemon();A!=null&&A.isOnField()&&a.field.moveBelow(E,A),E.showInfo(),a.time.delayedCall(1e3,()=>{E.cry()}),E.resetSummonData(),a.currentBattle.mysteryEncounter.misc.wobbuffetHealth=E.hp}o(A$,"showWobbuffetHealthBar");function E$(E){return new Promise(A=>{const s=a.addFieldSprite(36,80,"pb",fO(E.pokeball));s.setVisible(!1),s.setOrigin(.5,.625),a.field.add(s),E.setFieldPosition($s.CENTER,0);const R=E.getFieldPositionOffset();s.setVisible(!0),a.tweens.add({targets:s,duration:650,x:100+R[0]}),a.tweens.add({targets:s,duration:150,ease:"Cubic.easeOut",y:70+R[1],onComplete:o(()=>{a.tweens.add({targets:s,duration:500,ease:"Cubic.easeIn",angle:1440,y:132+R[1],onComplete:o(()=>{a.playSound("se/pb_rel"),s.destroy(),a.add.existing(E),a.field.add(E),Q0(E.x,E.y-16,E.pokeball),a.updateModifiers(!0),a.updateFieldScale(),E.showInfo(),E.playAnim(),E.setVisible(!0),E.getSprite().setVisible(!0),E.setScale(.5),E.tint(Rn(E.pokeball)),E.untint(250,"Sine.easeIn"),a.updateFieldScale(),a.tweens.add({targets:E,duration:250,ease:"Sine.easeIn",scale:E.getSpriteScale(),onComplete:o(()=>{E.cry(E.getHpRatio()>.25?void 0:{rate:.85}),E.getSprite().clearTint(),E.resetSummonData(),a.time.delayedCall(1e3,()=>{E.isShiny()&&a.unshiftPhase(new oS(E.getBattlerIndex())),E.resetTurnData(),a.triggerPokemonFormChange(E,Bs,!0),a.pushPhase(new SI(E.getBattlerIndex())),A()})},"onComplete")})},"onComplete")})},"onComplete")})})}o(E$,"summonPlayerPokemonAnimation");function s$(){var R,n,I;const E=(R=a.currentBattle.mysteryEncounter.introVisuals)==null?void 0:R.getSpriteAtIndex(0)[0],A=(n=a.currentBattle.mysteryEncounter.introVisuals)==null?void 0:n.getSpriteAtIndex(1)[0],s=(I=a.currentBattle.mysteryEncounter.introVisuals)==null?void 0:I.getSpriteAtIndex(2)[0];a.tweens.add({targets:s,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750}),a.tweens.add({targets:[A,E],x:"+=16",ease:"Sine.easeInOut",duration:750})}o(s$,"hideShowmanIntroSprite");const vs="mysteryEncounters/uncommonBreed",R$=xA.withEncounterType(Et.UNCOMMON_BREED).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withCatchAllowed(!0).withHideWildIntroMessage(!0).withFleeAllowed(!1).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${vs}:intro`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=pf(!1,!0).level-2,s=Wf(A,!0,!0),R=s.getEggMoves();if(R){const N=He(4),l=R[N];E.misc={eggMove:l,pokemon:s},s.moveset.length<4?s.moveset.push(new Lt(l)):s.moveset[0]=new Lt(l)}else E.misc.pokemon=s;const n=a.currentBattle.waveIndex<50?[p.DEF,p.SPDEF,p.SPD]:[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],I={pokemonConfigs:[{level:A,species:s.species,dataSource:new Ks(s),isBoss:!1,tags:[w.MYSTERY_ENCOUNTER_POST_SUMMON],mysteryEncounterBattleEffects:o(N=>{SE(`${vs}:option.1.stat_boost`),a.unshiftPhase(new AA(N.getBattlerIndex(),!0,n,1))},"mysteryEncounterBattleEffects")}]};E.enemyPartyConfigs=[I];const{spriteKey:r,fileRoot:L}=J0(s);return E.spriteConfigs=[{spriteKey:r,fileRoot:L,hasShadow:!0,x:-5,repeat:!0,isPokemon:!0,isShiny:s.shiny,variant:s.variant}],E.setDialogueToken("enemyPokemon",s.getNameToRender()),a.loadSe("PRSFX- Spotlight2","battle_anims","PRSFX- Spotlight2.wav"),!0}).withOnVisualsStart(()=>{const E=a.currentBattle.mysteryEncounter,A=E.introVisuals.getSprites();return a.tweens.add({targets:A,duration:300,ease:"Cubic.easeOut",yoyo:!0,y:"-=20",loop:1,onComplete:o(()=>{var s;return(s=E.introVisuals)==null?void 0:s.playShinySparkles()},"onComplete")}),a.time.delayedCall(500,()=>a.playSound("battle_anims/PRSFX- Spotlight2")),!0}).setLocalizationKey(`${vs}`).withTitle(`${vs}:title`).withDescription(`${vs}:description`).withQuery(`${vs}:query`).withSimpleOption({buttonLabel:`${vs}:option.1.label`,buttonTooltip:`${vs}:option.1.tooltip`,selected:[{text:`${vs}:option.1.selected`}]},async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.eggMove;if(!Pe(A)){const s=new Lt(A),n=s.getMove()instanceof at?Wt.ENEMY:Wt.PLAYER;E.startOfBattleEffects.push({sourceBattlerIndex:Wt.ENEMY,targets:[n],move:s,ignorePp:!0})}bt({fillRemaining:!0}),await OE(E.enemyPartyConfigs[0])}).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withSceneRequirement(new Bu("BerryModifier",4)).withDialogue({buttonLabel:`${vs}:option.2.label`,buttonTooltip:`${vs}:option.2.tooltip`,disabledButtonTooltip:`${vs}:option.2.disabled_tooltip`,selected:[{text:`${vs}:option.2.selected`}]}).withOptionPhase(async()=>{const E=a.findModifiers(R=>R instanceof GE);for(let R=0;R<4;R++){const n=He(E.length),I=E[n];I.stackCount--,I.stackCount===0&&(a.removeModifier(I),E.splice(n,1))}await a.updateModifiers(!0,!0);const A=a.currentBattle.mysteryEncounter,s=A.misc.pokemon;W6(s,A.misc.eggMove),await xr(s,null,we.POKEBALL,!1),bt({fillRemaining:!0}),wt()}).build()).withOption(Zt.newOptionWithMode(Kt.DISABLED_OR_SPECIAL).withPrimaryPokemonRequirement(new $a(pk,!0)).withDialogue({buttonLabel:`${vs}:option.3.label`,buttonTooltip:`${vs}:option.3.tooltip`,disabledButtonTooltip:`${vs}:option.3.disabled_tooltip`,selected:[{text:`${vs}:option.3.selected`}]}).withOptionPhase(async()=>{var s,R;const E=a.currentBattle.mysteryEncounter,A=E.misc.pokemon;W6(A,E.misc.eggMove),A.ivs=A.ivs.map(n=>{const I=He(31);return I>n?I:n}),await xr(A,null,we.POKEBALL,!1),(R=(s=E.selectedOption)==null?void 0:s.primaryPokemon)!=null&&R.id&&fR(E.selectedOption.primaryPokemon.id,A.getExpValue(),!1),bt({fillRemaining:!0}),wt()}).build()).build();function W6(E,A){const s=E.getEggMoves();if(s){let R=s[He(4)];for(;R===A;)R=s[He(4)];E.moveset.length<4?E.moveset.push(new Lt(R)):E.moveset[1]=new Lt(R)}}o(W6,"givePokemonExtraEggMove");var hS=(E=>(E[E.NONE=0]="NONE",E.LINEAR="Linear",E.QUADRATIC="Quad",E.CUBIC="Cubic",E.QUARTIC="Quart",E.QUINTIC="Quint",E.SINUSOIDAL="Sine",E.EXPONENTIAL="Expo",E.CIRCULAR="Circ",E.ELASTIC="Elastic",E.BACK="Back",E.BOUNCE="Bounce",E.STEPPED="Stepped",E))(hS||{});const YL=new Array(11).fill(null).map((E,A)=>A?{value:(A*10).toString(),label:(A*10).toString()}:{value:"Mute",label:u.t("settings:mute")}),O$=new Array(9).fill(null).map((E,A)=>{const s=((A+1)*10).toString();return{value:s,label:s}}),CR=[{value:"Off",label:u.t("settings:off")},{value:"On",label:u.t("settings:on")}],n$=[{value:"Auto",label:u.t("settings:auto")},{value:"Disabled",label:u.t("settings:disabled")}],a$=[{value:"Auto",label:u.t("settings:auto")},{value:"Disabled",label:u.t("settings:disabled"),needConfirmation:!0,confirmationMessage:u.t("settings:confirmDisableTouch")}],bk=[{value:"Rewards",label:u.t("settings:rewards")},{value:"Shop",label:u.t("settings:shop")},{value:"Reroll",label:u.t("settings:reroll")},{value:"Check Team",label:u.t("settings:checkTeam")}],i$=bk.map(E=>{switch(E.value){case"Rewards":return ea.REWARDS;case"Shop":return ea.SHOP;case"Reroll":return ea.REROLL;case"Check Team":return ea.CHECK_TEAM;default:throw new Error(`Unknown value: ${E.value}`)}});var z0=(E=>(E[E.GENERAL=0]="GENERAL",E[E.DISPLAY=1]="DISPLAY",E[E.AUDIO=2]="AUDIO",E))(z0||{});const St={Game_Speed:"GAME_SPEED",HP_Bar_Speed:"HP_BAR_SPEED",EXP_Gains_Speed:"EXP_GAINS_SPEED",EXP_Party_Display:"EXP_PARTY_DISPLAY",Skip_Seen_Dialogues:"SKIP_SEEN_DIALOGUES",Egg_Skip:"EGG_SKIP",Battle_Style:"BATTLE_STYLE",Enable_Retries:"ENABLE_RETRIES",Hide_IVs:"HIDE_IVS",Tutorials:"TUTORIALS",Touch_Controls:"TOUCH_CONTROLS",Vibration:"VIBRATION",Language:"LANGUAGE",UI_Theme:"UI_THEME",Window_Type:"WINDOW_TYPE",Money_Format:"MONEY_FORMAT",Damage_Numbers:"DAMAGE_NUMBERS",Move_Animations:"MOVE_ANIMATIONS",Show_Stats_on_Level_Up:"SHOW_LEVEL_UP_STATS",Shop_Cursor_Target:"SHOP_CURSOR_TARGET",Command_Cursor_Memory:"COMMAND_CURSOR_MEMORY",Dex_For_Devs:"DEX_FOR_DEVS",Candy_Upgrade_Notification:"CANDY_UPGRADE_NOTIFICATION",Candy_Upgrade_Display:"CANDY_UPGRADE_DISPLAY",Move_Info:"MOVE_INFO",Show_Moveset_Flyout:"SHOW_MOVESET_FLYOUT",Show_Arena_Flyout:"SHOW_ARENA_FLYOUT",Show_Time_Of_Day_Widget:"SHOW_TIME_OF_DAY_WIDGET",Time_Of_Day_Animation:"TIME_OF_DAY_ANIMATION",Sprite_Set:"SPRITE_SET",Fusion_Palette_Swaps:"FUSION_PALETTE_SWAPS",Player_Gender:"PLAYER_GENDER",Type_Hints:"TYPE_HINTS",Master_Volume:"MASTER_VOLUME",BGM_Volume:"BGM_VOLUME",Field_Volume:"FIELD_VOLUME",SE_Volume:"SE_VOLUME",UI_Volume:"UI_SOUND_EFFECTS",Battle_Music:"BATTLE_MUSIC",Show_BGM_Bar:"SHOW_BGM_BAR",Move_Touch_Controls:"MOVE_TOUCH_CONTROLS",Shop_Overlay_Opacity:"SHOP_OVERLAY_OPACITY"};var Gr=(E=>(E[E.GENFIVE=0]="GENFIVE",E[E.ALLGENS=1]="ALLGENS",E))(Gr||{});const FA=[{key:St.Game_Speed,label:u.t("settings:gameSpeed"),options:[{value:"1",label:"1x"},{value:"1.25",label:"1.25x"},{value:"1.5",label:"1.5x"},{value:"2",label:"2x"},{value:"2.5",label:"2.5x"},{value:"3",label:"3x"},{value:"4",label:"4x"},{value:"5",label:"5x"}],default:3,type:0},{key:St.HP_Bar_Speed,label:u.t("settings:hpBarSpeed"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Fast",label:u.t("settings:fast")},{value:"Faster",label:u.t("settings:faster")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:St.EXP_Gains_Speed,label:u.t("settings:expGainsSpeed"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Fast",label:u.t("settings:fast")},{value:"Faster",label:u.t("settings:faster")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:St.EXP_Party_Display,label:u.t("settings:expPartyDisplay"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Level Up Notification",label:u.t("settings:levelUpNotifications")},{value:"Skip",label:u.t("settings:skip")}],default:0,type:0},{key:St.Skip_Seen_Dialogues,label:u.t("settings:skipSeenDialogues"),options:CR,default:0,type:0},{key:St.Egg_Skip,label:u.t("settings:eggSkip"),options:[{value:"Never",label:u.t("settings:never")},{value:"Ask",label:u.t("settings:ask")},{value:"Always",label:u.t("settings:always")}],default:1,type:0},{key:St.Battle_Style,label:u.t("settings:battleStyle"),options:[{value:"Switch",label:u.t("settings:switch")},{value:"Set",label:u.t("settings:set")}],default:0,type:0},{key:St.Command_Cursor_Memory,label:u.t("settings:commandCursorMemory"),options:CR,default:0,type:0},{key:St.Enable_Retries,label:u.t("settings:enableRetries"),options:CR,default:0,type:0},{key:St.Hide_IVs,label:u.t("settings:hideIvs"),options:CR,default:0,type:0},{key:St.Tutorials,label:u.t("settings:tutorials"),options:CR,default:1,type:0},{key:St.Vibration,label:u.t("settings:vibrations"),options:n$,default:0,type:0},{key:St.Touch_Controls,label:u.t("settings:touchControls"),options:a$,default:0,type:0,isHidden:o(()=>!mC(),"isHidden")},{key:St.Move_Touch_Controls,label:u.t("settings:moveTouchControls"),options:[{value:"Configure",label:u.t("settings:change")}],default:0,type:0,activatable:!0,isHidden:o(()=>!mC(),"isHidden")},{key:St.Language,label:u.t("settings:language"),options:[{value:"English",label:"English"},{value:"Change",label:u.t("settings:change")}],default:0,type:1,requireReload:!0},{key:St.UI_Theme,label:u.t("settings:uiTheme"),options:[{value:"Default",label:u.t("settings:default")},{value:"Legacy",label:u.t("settings:legacy")}],default:0,type:1,requireReload:!0},{key:St.Window_Type,label:u.t("settings:windowType"),options:new Array(5).fill(null).map((E,A)=>{const s=(A+1).toString();return{value:s,label:s}}),default:0,type:1},{key:St.Money_Format,label:u.t("settings:moneyFormat"),options:[{value:"Normal",label:u.t("settings:normal")},{value:"Abbreviated",label:u.t("settings:abbreviated")}],default:0,type:1},{key:St.Damage_Numbers,label:u.t("settings:damageNumbers"),options:[{value:"Off",label:u.t("settings:off")},{value:"Simple",label:u.t("settings:simple")},{value:"Fancy",label:u.t("settings:fancy")}],default:0,type:1},{key:St.Move_Animations,label:u.t("settings:moveAnimations"),options:CR,default:1,type:1},{key:St.Show_Stats_on_Level_Up,label:u.t("settings:showStatsOnLevelUp"),options:CR,default:1,type:1},{key:St.Candy_Upgrade_Notification,label:u.t("settings:candyUpgradeNotification"),options:[{value:"Off",label:u.t("settings:off")},{value:"Passives Only",label:u.t("settings:passivesOnly")},{value:"On",label:u.t("settings:on")}],default:0,type:1},{key:St.Candy_Upgrade_Display,label:u.t("settings:candyUpgradeDisplay"),options:[{value:"Icon",label:u.t("settings:icon")},{value:"Animation",label:u.t("settings:animation")}],default:0,type:1,requireReload:!0},{key:St.Move_Info,label:u.t("settings:moveInfo"),options:CR,default:1,type:1},{key:St.Show_Moveset_Flyout,label:u.t("settings:showMovesetFlyout"),options:CR,default:1,type:1},{key:St.Show_Arena_Flyout,label:u.t("settings:showArenaFlyout"),options:CR,default:1,type:1},{key:St.Show_Time_Of_Day_Widget,label:u.t("settings:showTimeOfDayWidget"),options:CR,default:1,type:1,requireReload:!0},{key:St.Time_Of_Day_Animation,label:u.t("settings:timeOfDayAnimation"),options:[{value:"Bounce",label:u.t("settings:bounce")},{value:"Back",label:u.t("settings:timeOfDay_back")}],default:0,type:1},{key:St.Sprite_Set,label:u.t("settings:spriteSet"),options:[{value:"Consistent",label:u.t("settings:consistent")},{value:"Experimental",label:u.t("settings:experimental")}],default:0,type:1,requireReload:!0},{key:St.Fusion_Palette_Swaps,label:u.t("settings:fusionPaletteSwaps"),options:CR,default:1,type:1},{key:St.Player_Gender,label:u.t("settings:playerGender"),options:[{value:"Boy",label:u.t("settings:boy")},{value:"Girl",label:u.t("settings:girl")}],default:0,type:1},{key:St.Type_Hints,label:u.t("settings:typeHints"),options:CR,default:0,type:1},{key:St.Show_BGM_Bar,label:u.t("settings:showBgmBar"),options:CR,default:1,type:1},{key:St.Master_Volume,label:u.t("settings:masterVolume"),options:YL,default:5,type:2},{key:St.BGM_Volume,label:u.t("settings:bgmVolume"),options:YL,default:10,type:2},{key:St.Field_Volume,label:u.t("settings:fieldVolume"),options:YL,default:10,type:2},{key:St.SE_Volume,label:u.t("settings:seVolume"),options:YL,default:10,type:2},{key:St.UI_Volume,label:u.t("settings:uiVolume"),options:YL,default:10,type:2},{key:St.Battle_Music,label:u.t("settings:battleMusic"),options:[{value:"Gen V",label:u.t("settings:musicGenFive")},{value:"All Gens",label:u.t("settings:musicAllGens")}],default:1,type:2,requireReload:!0},{key:St.Shop_Cursor_Target,label:u.t("settings:shopCursorTarget"),options:bk,default:0,type:1},{key:St.Shop_Overlay_Opacity,label:u.t("settings:shopOverlayOpacity"),options:O$,default:7,type:1,requireReload:!1}];ji&&FA.push({key:St.Dex_For_Devs,label:u.t("settings:dexForDevs"),options:CR,default:0,type:0});function kk(E){return FA.findIndex(A=>A.key===E)}o(kk,"settingIndex");function I$(){for(const E of FA)N_(E.key,E.default)}o(I$,"resetSettings");function N_(E,A){const s=kk(E);if(s===-1)return!1;switch(FA[s].key){case St.Game_Speed:a.gameSpeed=Number.parseFloat(FA[s].options[A].value.replace("x",""));break;case St.Master_Volume:a.masterVolume=A?Number.parseInt(FA[s].options[A].value)*.01:0,a.updateSoundVolume();break;case St.BGM_Volume:a.bgmVolume=A?Number.parseInt(FA[s].options[A].value)*.01:0,a.updateSoundVolume();break;case St.Field_Volume:a.fieldVolume=A?Number.parseInt(FA[s].options[A].value)*.01:0,a.updateSoundVolume();break;case St.SE_Volume:a.seVolume=A?Number.parseInt(FA[s].options[A].value)*.01:0,a.updateSoundVolume();break;case St.UI_Volume:a.uiVolume=A?Number.parseInt(FA[s].options[A].value)*.01:0;break;case St.Battle_Music:a.musicPreference=A;break;case St.Damage_Numbers:a.damageNumbersMode=A;break;case St.UI_Theme:a.uiTheme=A;break;case St.Window_Type:rZ(Number.parseInt(FA[s].options[A].value));break;case St.Tutorials:a.enableTutorials=FA[s].options[A].value==="On";break;case St.Move_Info:a.enableMoveInfo=FA[s].options[A].value==="On";break;case St.Enable_Retries:a.enableRetries=FA[s].options[A].value==="On";break;case St.Hide_IVs:a.hideIvs=FA[s].options[A].value==="On";break;case St.Skip_Seen_Dialogues:a.skipSeenDialogues=FA[s].options[A].value==="On";break;case St.Egg_Skip:a.eggSkipPreference=A;break;case St.Battle_Style:a.battleStyle=A;break;case St.Show_BGM_Bar:a.showBgmBar=FA[s].options[A].value==="On";break;case St.Candy_Upgrade_Notification:if(a.candyUpgradeNotification===A)break;a.candyUpgradeNotification=A,a.eventTarget.dispatchEvent(new Xc(A));break;case St.Candy_Upgrade_Display:a.candyUpgradeDisplay=A;case St.Money_Format:switch(FA[s].options[A].value){case"Normal":a.moneyFormat=bc.NORMAL;break;case"Abbreviated":a.moneyFormat=bc.ABBREVIATED;break}a.updateMoneyText(!1);break;case St.Sprite_Set:a.experimentalSprites=!!A,A&&a.initExpSprites();break;case St.Move_Animations:a.moveAnimations=FA[s].options[A].value==="On";break;case St.Show_Moveset_Flyout:a.showMovesetFlyout=FA[s].options[A].value==="On";break;case St.Show_Arena_Flyout:a.showArenaFlyout=FA[s].options[A].value==="On";break;case St.Show_Time_Of_Day_Widget:a.showTimeOfDayWidget=FA[s].options[A].value==="On";break;case St.Time_Of_Day_Animation:a.timeOfDayAnimation=FA[s].options[A].value==="Bounce"?hS.BOUNCE:hS.BACK;break;case St.Show_Stats_on_Level_Up:a.showLevelUpStats=FA[s].options[A].value==="On";break;case St.Shop_Cursor_Target:{const R=i$[A];a.shopCursorTarget=R;break}case St.Command_Cursor_Memory:a.commandCursorMemory=FA[s].options[A].value==="On";break;case St.Dex_For_Devs:a.dexForDevs=FA[s].options[A].value==="On";break;case St.EXP_Gains_Speed:a.expGainsSpeed=A;break;case St.EXP_Party_Display:a.expParty=A;break;case St.HP_Bar_Speed:a.hpBarSpeed=A;break;case St.Fusion_Palette_Swaps:a.fusionPaletteSwaps=!!A;break;case St.Player_Gender:if(a.gameData){const R=FA[s].options[A].value==="Girl";a.gameData.gender=R?Jt.FEMALE:Jt.MALE,a.trainer.setTexture(a.trainer.texture.key.replace(R?"m":"f",R?"f":"m"))}else return!1;break;case St.Touch_Controls:{a.enableTouchControls=FA[s].options[A].value!=="Disabled"&&mC();const R=document.getElementById("touchControls");R&&R.classList.toggle("visible",a.enableTouchControls);break}case St.Vibration:a.enableVibration=FA[s].options[A].value!=="Disabled"&&mC();break;case St.Type_Hints:a.typeHints=FA[s].options[A].value==="On";break;case St.Language:if(A&&a.ui){const R=o(()=>{a.ui.revertMode(),a.ui.getHandler().setOptionCursor(-1,0,!0)},"cancelHandler"),n=o(I=>{try{return u.changeLanguage(I),localStorage.setItem("prLang",I),R(),window.location.reload(),!0}catch(r){return console.error("Error changing locale:",r),!1}},"changeLocaleHandler");return a.ui.setOverlayMode(te.OPTION_SELECT,{options:[{label:"English",handler:o(()=>n("en"),"handler")},{label:"Español (ES)",handler:o(()=>n("es-ES"),"handler")},{label:"Español (LATAM)",handler:o(()=>n("es-MX"),"handler")},{label:"Italiano",handler:o(()=>n("it"),"handler")},{label:"Français",handler:o(()=>n("fr"),"handler")},{label:"Deutsch",handler:o(()=>n("de"),"handler")},{label:"Português (BR)",handler:o(()=>n("pt-BR"),"handler")},{label:"简体中文",handler:o(()=>n("zh-CN"),"handler")},{label:"繁體中文",handler:o(()=>n("zh-TW"),"handler")},{label:"한국어",handler:o(()=>n("ko"),"handler")},{label:"日本語",handler:o(()=>n("ja"),"handler")},{label:"Català",handler:o(()=>n("ca-ES"),"handler")},{label:u.t("settings:back"),handler:o(()=>R(),"handler")}],maxOptions:7}),!1}break;case St.Shop_Overlay_Opacity:a.updateShopOverlayOpacity(Number.parseInt(FA[s].options[A].value)*.01);break}return!0}o(N_,"setSetting");const wE="mysteryEncounters/globalTradeSystem",r$=512,L$=4096,o$={1:[e.RATTATA,e.PIDGEY,e.WEEDLE],2:[e.SENTRET,e.HOOTHOOT,e.LEDYBA],3:[e.POOCHYENA,e.ZIGZAGOON,e.TAILLOW],4:[e.BIDOOF,e.STARLY,e.KRICKETOT],5:[e.PATRAT,e.PURRLOIN,e.PIDOVE],6:[e.BUNNELBY,e.LITLEO,e.SCATTERBUG],7:[e.PIKIPEK,e.YUNGOOS,e.ROCKRUFF],8:[e.SKWOVET,e.WOOLOO,e.ROOKIDEE],9:[e.LECHONK,e.FIDOUGH,e.TAROUNTULA]},T$=[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.ROARING_MOON,e.WALKING_WAKE,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS,e.IRON_VALIANT,e.IRON_LEAVES,e.IRON_BOULDER,e.IRON_CROWN],S$=xA.withEncounterType(Et.GLOBAL_TRADE_SYSTEM).withEncounterTier(zt.COMMON).withSceneWaveRangeRequirement(...JA).withAutoHideIntroVisuals(!1).withIntroSpriteConfigs([{spriteKey:"global_trade_system",fileRoot:"mystery-encounters",hasShadow:!0,disableAnimation:!0,x:3,y:5,yShadow:1}]).withIntroDialogue([{text:`${wE}:intro`}]).setLocalizationKey(`${wE}`).withTitle(`${wE}:title`).withDescription(`${wE}:description`).withQuery(`${wE}:query`).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter;let A;a.musicPreference===Gr.GENFIVE?(A="mystery_encounter_gen_5_gts",a.loadBgm(A,`${A}.mp3`)):(A="mystery_encounter_gen_6_gts",a.loadBgm(A,`${A}.mp3`));const s=N$();return E.misc={tradeOptionsMap:s,bgmKey:A},!0}).withOnVisualsStart(()=>(a.fadeAndSwitchBgm(a.currentBattle.mysteryEncounter.misc.bgmKey),!0)).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${wE}:option.1.label`,buttonTooltip:`${wE}:option.1.tooltip`,secondOptionPrompt:`${wE}:option.1.trade_options_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>{const n=E.misc.tradeOptionsMap.get(s.id);return n?n.map(I=>({label:I.getNameToRender(),handler:o(()=>(E.setDialogueToken("tradedPokemon",s.getNameToRender()),E.setDialogueToken("received",I.getNameToRender()),E.misc.tradedPokemon=s,E.misc.receivedPokemon=I,!0),"handler"),onHover:o(()=>{const L=I.species.forms&&I.species.forms.length>I.formIndex?I.species.forms[I.formIndex].formName:null,N=`${u.t("pokemonInfoContainer:ability")} ${I.getAbility().name}${I.getGender()!==At.GENDERLESS?`     |     ${u.t("pokemonInfoContainer:gender")} ${kI(I.getGender())}`:""}`,l=u.t("pokemonInfoContainer:nature")+" "+zR(I.getNature())+(L?`     |     ${u.t("pokemonInfoContainer:form")} ${L}`:"");EA(`${N}
${l}`,0,0,!1)},"onHover")})):[]},"onPokemonSelected"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.tradedPokemon,s=E.misc.receivedPokemon,R=A.getHeldItems().filter(L=>!(L instanceof GR)&&!(L instanceof KI)),n=Nc();E.setDialogueToken("tradeTrainerName",n.trim()),a.removePokemonFromPlayerParty(A,!1),s.passive=A.passive,s.pokeball=YA(4);const I=new Ks(s),r=a.addPlayerPokemon(s.species,s.level,I.abilityIndex,I.formIndex,I.gender,I.shiny,I.variant,I.ivs,I.nature,I);a.getPlayerParty().push(r),await r.loadAssets();for(const L of R)L.pokemonId=r.id,a.addModifier(L,!0,!1,!1,!0);await y6(),await v6(A,r),await EA(`${wE}:trade_received`,null,0,!0,4e3),a.playBgm(E.misc.bgmKey),await I6(r),await w6(),A.destroy(),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withHasDexProgress(!0).withDialogue({buttonLabel:`${wE}:option.2.label`,buttonTooltip:`${wE}:option.2.tooltip`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(s=>{const R=Zk(a.getPlayerParty().map(r=>r.species)),n=new Fs(R,s.level,oe.NONE,!1);if(!n.shiny){const r=new je(r$);EE.isEventActive()&&(r.value*=EE.getShinyMultiplier()),a.applyModifiers(vI,!0,r);const L=Math.min(r.value,L$);n.trySetShinySeed(L,!1)}const I=n.species.ability2?2:1;if(n.species.abilityHidden&&n.abilityIndex<I){const r=new je(64);a.applyModifiers(gn,!0,r),!He(r.value)&&(n.abilityIndex=I)}if(!n.shiny&&(!n.species.abilityHidden||n.abilityIndex<I)){const r=n.getEggMoves();if(r){const L=r[He(3)];if(!n.moveset.some(N=>N.moveId===L))if(n.moveset.length<4)n.moveset.push(new Lt(L));else{const N=He(4);n.moveset[N]=new Lt(L)}}}E.setDialogueToken("tradedPokemon",s.getNameToRender()),E.setDialogueToken("received",n.getNameToRender()),E.misc.tradedPokemon=s,E.misc.receivedPokemon=n},"onPokemonSelected"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.tradedPokemon,s=E.misc.receivedPokemon,R=A.getHeldItems().filter(L=>!(L instanceof GR)&&!(L instanceof KI)),n=Nc();E.setDialogueToken("tradeTrainerName",n.trim()),a.removePokemonFromPlayerParty(A,!1),s.passive=A.passive,s.pokeball=YA(4);const I=new Ks(s),r=a.addPlayerPokemon(s.species,s.level,I.abilityIndex,I.formIndex,I.gender,I.shiny,I.variant,I.ivs,I.nature,I);a.getPlayerParty().push(r),await r.loadAssets();for(const L of R)L.pokemonId=r.id,a.addModifier(L,!0,!1,!1,!0);await y6(),await v6(A,r),await EA(`${wE}:trade_received`,null,0,!0,4e3),a.playBgm(E.misc.bgmKey),await I6(r),await w6(),A.destroy(),wt(!0)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${wE}:option.3.label`,buttonTooltip:`${wE}:option.3.tooltip`,secondOptionPrompt:`${wE}:option.3.trade_options_prompt`}).withPreOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter;return Os(o(R=>R.getHeldItems().filter(I=>I.isTransferable).map(I=>({label:I.type.name,handler:o(()=>(E.setDialogueToken("chosenItem",I.type.name),E.misc.chosenModifier=I,E.misc.chosenPokemon=R,!0),"handler")})),"onPokemonSelected"),void 0,o(R=>R.getHeldItems().filter(I=>I.isTransferable).length>0?null:VA(`${wE}:option.3.invalid_selection`)??null,"selectableFilter"))}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.misc.chosenModifier,s=a.getPlayerParty(),R=E.misc.chosenPokemon,n=A.type.withTierFromPool(yE.PLAYER,s);let I=n.tier??V.GREAT;n.id==="WHITE_HERB"?I=V.GREAT:n.id==="LUCKY_EGG"?I=V.ULTRA:n.id==="GOLDEN_EGG"&&(I=V.ROGUE),I<V.MASTER&&I++,Ti(s,yE.PLAYER,0);let r=null;for(;!r||r.type.id.includes("TM_");)r=Bf(1,s,[],{guaranteedModifierTiers:[I],allowLuckUpgrades:!1})[0];E.setDialogueToken("itemName",r.type.name),bt({guaranteedModifierTypeOptions:[r],fillRemaining:!1}),R.loseHeldItem(A,!1),await a.updateModifiers(!0,!0);const L=Nc();E.setDialogueToken("tradeTrainerName",L.trim()),await EA(`${wE}:item_trade_selected`),wt()}).build()).withSimpleOption({buttonLabel:`${wE}:option.4.label`,buttonTooltip:`${wE}:option.4.tooltip`,selected:[{text:`${wE}:option.4.selected`}]},async()=>(wt(!0),!0)).build();function N$(){const E=new Map,A=a.getPlayerParty().map(s=>s.species);for(const s of a.getPlayerParty())if(s.species.legendary||s.species.subLegendary||s.species.mythical){const R=s.species.generation,n=o$[R].map(I=>{const r=$e(I);return new Fs(r,5,oe.NONE,!1)});E.set(s.id,n)}else{const R=s.getSpeciesForm().getBaseStatTotal(),n=[];for(let I=0;I<3;I++){const r=Zk(A,R);A.push(r),n.push(r)}E.set(s.id,n.map(I=>new Fs(I,s.level,oe.NONE,!1)))}return E}o(N$,"getPokemonTradeOptions");function Zk(E,A){let s,R=9999,n=0;for(A&&(R=A+100,n=A-100);Pe(s);){let I=qA.filter(r=>{const L=r.legendary||r.subLegendary||r.mythical,N=r.getBaseStatTotal(),l=N>=n&&N<=R;return!L&&l&&!T$.includes(r.speciesId)});if((I==null?void 0:I.length)>20)for(I=GO(I),s=I.pop();Pe(s)||E.includes(s);)s=I.pop();else n-=10,R+=10}return s}o(Zk,"generateTradeOption");function y6(){return new Promise(E=>{const A=a.add.container(0,-a.game.canvas.height/6);A.setName("Trade Background");const s=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,0);s.setName("Black Background"),s.setOrigin(0,0),s.setVisible(!1),A.add(s);const R=a.add.image(0,0,"default_bg");R.setName("Trade Background Image"),R.setOrigin(0,0),A.add(R),a.fieldUI.add(A),a.fieldUI.bringToTop(A),A.setVisible(!0),A.alpha=0,a.tweens.add({targets:A,alpha:1,duration:500,ease:"Sine.easeInOut",onComplete:o(()=>{E()},"onComplete")})})}o(y6,"showTradeBackground");function w6(){return new Promise(E=>{const A=a.fieldUI.getByName("Trade Background");a.tweens.add({targets:A,alpha:0,duration:1e3,ease:"Sine.easeInOut",onComplete:o(()=>{a.fieldUI.remove(A,!0),E()},"onComplete")})})}o(w6,"hideTradeBackground");function v6(E,A){return new Promise(s=>{const R=a.fieldUI.getByName("Trade Background"),n=R.getByName("Trade Background Image");let I,r,L,N;const l=o(()=>{const h=a.addPokemonSprite(E,n.displayWidth/2,n.displayHeight/2,"pkmn__sub");return h.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),h},"getPokemonSprite");R.add(I=l()),R.add(r=l()),R.add(L=l()),R.add(N=l()),I.setAlpha(0),r.setAlpha(0),r.setTintFill(Rn(E.pokeball)),L.setVisible(!1),N.setVisible(!1),N.setTintFill(Rn(A.pokeball)),[I,r].map(h=>{const _=E.getSpriteKey(!0);try{h.play(_)}catch(d){console.error(`Failed to play animation for ${_}`,d)}h.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:BR(E.getTeraType()),isTerastallized:E.isTerastallized}),h.setPipelineData("ignoreTimeTint",!0),h.setPipelineData("spriteKey",E.getSpriteKey()),h.setPipelineData("shiny",E.shiny),h.setPipelineData("variant",E.variant),["spriteColors","fusionSpriteColors"].map(d=>{var f;(f=E.summonData)!=null&&f.speciesForm&&(d+="Base"),h.pipelineData[d]=E.getSprite().pipelineData[d]})}),[L,N].map(h=>{const _=A.getSpriteKey(!0);try{h.play(_)}catch(d){console.error(`Failed to play animation for ${_}`,d)}h.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:BR(E.getTeraType()),isTerastallized:E.isTerastallized}),h.setPipelineData("ignoreTimeTint",!0),h.setPipelineData("spriteKey",A.getSpriteKey()),h.setPipelineData("shiny",A.shiny),h.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(d=>{var f;(f=A.summonData)!=null&&f.speciesForm&&(d+="Base"),h.pipelineData[d]=A.getSprite().pipelineData[d]})});const C=fO(E.pokeball),U=a.add.sprite(n.displayWidth/2,n.displayHeight/2,"pb",C);U.setVisible(!1),R.add(U);const D=fO(A.pokeball),M=a.add.sprite(n.displayWidth/2,n.displayHeight/2,"pb",D);M.setVisible(!1),R.add(M),a.tweens.add({targets:I,alpha:1,ease:"Cubic.easeInOut",duration:500,onComplete:o(async()=>{a.fadeOutBgm(1e3,!1),await EA(`${wE}:pokemon_trade_selected`),E.cry(),a.playBgm("evolution"),await EA(`${wE}:pokemon_trade_goodbye`),U.setAlpha(0),U.setVisible(!0),a.tweens.add({targets:U,alpha:1,ease:"Cubic.easeInOut",duration:250,onComplete:o(()=>{U.setTexture("pb",`${C}_opening`),a.time.delayedCall(17,()=>U.setTexture("pb",`${C}_open`)),a.playSound("se/pb_rel"),r.setVisible(!0),a.tweens.add({targets:[r,I],duration:500,ease:"Sine.easeIn",scale:.25,onComplete:o(()=>{I.setVisible(!1),U.setTexture("pb",`${C}_opening`),r.setVisible(!1),a.playSound("se/pb_catch"),a.time.delayedCall(17,()=>U.setTexture("pb",`${C}`)),a.tweens.add({targets:U,y:"+=10",duration:200,delay:250,ease:"Cubic.easeIn",onComplete:o(()=>{a.playSound("se/pb_bounce_1"),a.tweens.add({targets:U,y:"-=100",duration:200,delay:1e3,ease:"Cubic.easeInOut",onStart:o(()=>{a.playSound("se/pb_throw")},"onStart"),onComplete:o(async()=>{await l$(I,L),await C$(A,L,N,M,D),s()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}o(v6,"doPokemonTradeSequence");function l$(E,A){return new Promise(s=>{const R=a.fieldUI.getByName("Trade Background"),n=R.getByName("Trade Background Image");R.getByName("Black Background").setVisible(!0),R.bringToTop(E),R.bringToTop(A),E.x=n.displayWidth/4,E.y=200,E.scale=1,E.setVisible(!0),A.x=n.displayWidth*3/4,A.y=-200,A.scale=1,A.setVisible(!0);const r=300,L=750,N=1e3;a.tweens.add({targets:n,alpha:0,ease:"Cubic.easeInOut",duration:r,onComplete:o(()=>{a.tweens.add({targets:[A,E],y:n.displayWidth/2-100,ease:"Cubic.easeInOut",duration:N*3,onComplete:o(()=>{a.tweens.add({targets:A,x:n.displayWidth/4,ease:"Cubic.easeInOut",duration:N/2,delay:L}),a.tweens.add({targets:E,x:n.displayWidth*3/4,ease:"Cubic.easeInOut",duration:N/2,delay:L,onComplete:o(()=>{a.tweens.add({targets:A,y:"+=200",ease:"Cubic.easeInOut",duration:N*2,delay:L}),a.tweens.add({targets:E,y:"-=200",ease:"Cubic.easeInOut",duration:N*2,delay:L,onComplete:o(()=>{a.tweens.add({targets:n,alpha:1,ease:"Cubic.easeInOut",duration:r,onComplete:o(()=>{s()},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})},"onComplete")})})}o(l$,"doPokemonTradeFlyBySequence");function C$(E,A,s,R,n){return new Promise(I=>{const r=a.fieldUI.getByName("Trade Background"),L=r.getByName("Trade Background Image");A.setVisible(!1),A.x=L.displayWidth/2,A.y=L.displayHeight/2,s.setVisible(!1),s.x=L.displayWidth/2,s.y=L.displayHeight/2,R.setVisible(!0),R.x=L.displayWidth/2,R.y=L.displayHeight/2-100;let N;E.shiny&&(N=a.add.sprite(A.x,A.y,"shiny"),N.setVisible(!1),r.add(N));const l=1e3;a.playSound("se/pb_throw"),a.tweens.add({targets:R,y:"+=100",ease:"Cubic.easeInOut",duration:l,onComplete:o(()=>{a.playSound("se/pb_bounce_1"),a.time.delayedCall(100,()=>a.playSound("se/pb_bounce_1")),a.time.delayedCall(2e3,()=>{a.playSound("se/pb_rel"),a.fadeOutBgm(500,!1),E.cry(),s.scale=.25,s.alpha=1,A.setVisible(!0),A.scale=.25,s.alpha=1,s.setVisible(!0),R.setTexture("pb",`${n}_opening`),a.time.delayedCall(17,()=>R.setTexture("pb",`${n}_open`)),a.tweens.add({targets:A,duration:250,ease:"Sine.easeOut",scale:1}),a.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1,alpha:0,onComplete:o(()=>{E.shiny&&a.time.delayedCall(500,()=>{$0(N,E.variant)}),R.destroy(),a.time.delayedCall(2e3,()=>I())},"onComplete")})})},"onComplete")})})}o(C$,"doTradeReceivedSequence");function Nc(){const E=c.YOUNGSTER-c.ACE_TRAINER+1,A=`trainersCommon:${c[YA(E)+1]}`,s=u.exists(`${A}.MALE`)?YA(2)===0?".MALE":".FEMALE":"",R=eE(Object.keys(u.t(`${A}${s}`,{returnObjects:!0}))),I=u.t(`${A}${s}.${R}`).split(" & ");return I[YA(I.length)]}o(Nc,"generateRandomTraderName");const aA="mysteryEncounters/theExpertPokemonBreeder",bO="trainerNames:expert_pokemon_breeder",zO=45,kO=60,jO=75,u$=20,fp=class fp{constructor(A,s){this.species=A,this.evolution=s}};o(fp,"BreederSpeciesEvolution");let vA=fp;const U$=[[e.MUNCHLAX,new vA(e.SNORLAX,kO)],[e.HAPPINY,new vA(e.CHANSEY,zO),new vA(e.BLISSEY,jO)],[e.MAGBY,new vA(e.MAGMAR,zO),new vA(e.MAGMORTAR,jO)],[e.ELEKID,new vA(e.ELECTABUZZ,zO),new vA(e.ELECTIVIRE,jO)],[e.RIOLU,new vA(e.LUCARIO,kO)],[e.BUDEW,new vA(e.ROSELIA,zO),new vA(e.ROSERADE,jO)],[e.TOXEL,new vA(e.TOXTRICITY,kO)],[e.MIME_JR,new vA(e.GALAR_MR_MIME,zO),new vA(e.MR_RIME,jO)]],D$=[[e.PICHU,new vA(e.PIKACHU,zO),new vA(e.RAICHU,jO)],[e.PICHU,new vA(e.PIKACHU,zO),new vA(e.ALOLA_RAICHU,jO)],[e.SMOOCHUM,new vA(e.JYNX,kO)],[e.TYROGUE,new vA(e.HITMONLEE,kO)],[e.TYROGUE,new vA(e.HITMONCHAN,kO)],[e.TYROGUE,new vA(e.HITMONTOP,kO)],[e.IGGLYBUFF,new vA(e.JIGGLYPUFF,zO),new vA(e.WIGGLYTUFF,jO)],[e.AZURILL,new vA(e.MARILL,zO),new vA(e.AZUMARILL,jO)],[e.WYNAUT,new vA(e.WOBBUFFET,kO)],[e.CHINGLING,new vA(e.CHIMECHO,kO)],[e.BONSLY,new vA(e.SUDOWOODO,kO)],[e.MANTYKE,new vA(e.MANTINE,kO)]],M$=xA.withEncounterType(Et.THE_EXPERT_POKEMON_BREEDER).withEncounterTier(zt.ULTRA).withSceneWaveRangeRequirement(...JA).withScenePartySizeRequirement(4,6,!0).withIntroSpriteConfigs([]).withIntroDialogue([{text:`${aA}:intro`},{speaker:bO,text:`${aA}:intro_dialogue`}]).withOnInit(()=>{const E=a.currentBattle.mysteryEncounter,A=a.currentBattle.waveIndex;E.enemyPartyConfigs=[c$()];const s=A<zO?e.CLEFFA:A<jO?e.CLEFAIRY:e.CLEFABLE;E.spriteConfigs=[{spriteKey:s.toString(),fileRoot:"pokemon",hasShadow:!0,repeat:!0,x:14,y:-2,yShadow:-2},{spriteKey:"expert_pokemon_breeder",fileRoot:"trainer",hasShadow:!0,x:-14,y:4,yShadow:2}];let R=a.getPlayerParty().slice(0);R=R.filter(d=>d.isAllowedInBattle()).sort((d,f)=>d.friendship-f.friendship);const n=R[0],I=R[1],r=R[2];E.setDialogueToken("pokemon1Name",n.getNameToRender()),E.setDialogueToken("pokemon2Name",I.getNameToRender()),E.setDialogueToken("pokemon3Name",r.getNameToRender());const[L,N]=lc(n);let l=VA(`${aA}:option.1.tooltip_base`);if(N>0){const d=u.t(`${aA}:numEggs`,{count:N,rarity:u.t("egg:greatTier")});l+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon1RareEggs",d)}if(L>0){const d=u.t(`${aA}:numEggs`,{count:L,rarity:u.t("egg:defaultTier")});l+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon1CommonEggs",d)}E.options[0].dialogue.buttonTooltip=l;const[C,U]=lc(I);let D=VA(`${aA}:option.2.tooltip_base`);if(U>0){const d=u.t(`${aA}:numEggs`,{count:U,rarity:u.t("egg:greatTier")});D+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon2RareEggs",d)}if(C>0){const d=u.t(`${aA}:numEggs`,{count:C,rarity:u.t("egg:defaultTier")});D+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon2CommonEggs",d)}E.options[1].dialogue.buttonTooltip=D;const[M,h]=lc(r);let _=VA(`${aA}:option.3.tooltip_base`);if(h>0){const d=u.t(`${aA}:numEggs`,{count:h,rarity:u.t("egg:greatTier")});_+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon3RareEggs",d)}if(M>0){const d=u.t(`${aA}:numEggs`,{count:M,rarity:u.t("egg:defaultTier")});_+=u.t(`${aA}:eggs_tooltip`,{eggs:d}),E.setDialogueToken("pokemon3CommonEggs",d)}return E.options[2].dialogue.buttonTooltip=_,E.misc={pokemon1:n,pokemon1CommonEggs:L,pokemon1RareEggs:N,pokemon2:I,pokemon2CommonEggs:C,pokemon2RareEggs:U,pokemon3:r,pokemon3CommonEggs:M,pokemon3RareEggs:h},!0}).setLocalizationKey(`${aA}`).withTitle(`${aA}:title`).withDescription(`${aA}:description`).withQuery(`${aA}:query`).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${aA}:option.1.label`,selected:[{speaker:bO,text:`${aA}:option.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon1:s,pokemon1CommonEggs:R,pokemon1RareEggs:n}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const I=Cc(R,n);bt({guaranteedModifierTypeFuncs:[j.SOOTHE_BELL],fillRemaining:!0},I,()=>Dc()),uc(E,s),E.dialogue.outro=[{speaker:bO,text:`${aA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon1CommonEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon1CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon1RareEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon1RareEggs})}),E.onGameOver=Uc,await OE(A)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${aA}:option.2.label`,selected:[{speaker:bO,text:`${aA}:option.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon2:s,pokemon2CommonEggs:R,pokemon2RareEggs:n}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const I=Cc(R,n);bt({guaranteedModifierTypeFuncs:[j.SOOTHE_BELL],fillRemaining:!0},I,()=>Dc()),uc(E,s),E.dialogue.outro=[{speaker:bO,text:`${aA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon2CommonEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon2CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon2RareEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon2RareEggs})}),E.onGameOver=Uc,await OE(A)}).build()).withOption(Zt.newOptionWithMode(Kt.DEFAULT).withDialogue({buttonLabel:`${aA}:option.3.label`,selected:[{speaker:bO,text:`${aA}:option.selected`}]}).withOptionPhase(async()=>{const E=a.currentBattle.mysteryEncounter,A=E.enemyPartyConfigs[0],{pokemon3:s,pokemon3CommonEggs:R,pokemon3RareEggs:n}=E.misc;E.misc.chosenPokemon=s,E.setDialogueToken("chosenPokemon",s.getNameToRender());const I=Cc(R,n);bt({guaranteedModifierTypeFuncs:[j.SOOTHE_BELL],fillRemaining:!0},I,()=>Dc()),uc(E,s),E.dialogue.outro=[{speaker:bO,text:`${aA}:outro`}],E.dialogueTokens.hasOwnProperty("pokemon3CommonEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon3CommonEggs})}),E.dialogueTokens.hasOwnProperty("pokemon3RareEggs")&&E.dialogue.outro.push({text:u.t(`${aA}:gained_eggs`,{numEggs:E.dialogueTokens.pokemon3RareEggs})}),E.onGameOver=Uc,await OE(A)}).build()).withOutroDialogue([{speaker:bO,text:`${aA}:outro`}]).build();function c$(){const E=a.currentBattle.waveIndex,A=tE[c.EXPERT_POKEMON_BREEDER].clone();A.name=u.t(bO);const s=E<zO?e.CLEFFA:E<jO?e.CLEFAIRY:e.CLEFABLE,R={trainerType:c.EXPERT_POKEMON_BREEDER,pokemonConfigs:[{nickname:u.t(`${aA}:cleffa_1_nickname`,{speciesName:$e(s).getName()}),species:$e(s),isBoss:!1,abilityIndex:1,shiny:!1,nature:rt.ADAMANT,moveSet:[t.METEOR_MASH,t.FIRE_PUNCH,t.ICE_PUNCH,t.THUNDER_PUNCH],ivs:[31,31,31,31,31,31],tera:i.STEEL}]};if(a.arena.biomeType===T.SPACE)R.pokemonConfigs.push({nickname:u.t(`${aA}:cleffa_2_nickname`,{speciesName:$e(s).getName()}),species:$e(s),isBoss:!1,abilityIndex:1,shiny:!0,variant:1,nature:rt.MODEST,moveSet:[t.MOONBLAST,t.MYSTICAL_FIRE,t.ICE_BEAM,t.THUNDERBOLT],ivs:[31,31,31,31,31,31]},{nickname:u.t(`${aA}:cleffa_3_nickname`,{speciesName:$e(s).getName()}),species:$e(s),isBoss:!1,abilityIndex:2,shiny:!0,variant:2,nature:rt.BOLD,moveSet:[t.TRI_ATTACK,t.STORED_POWER,t.TAKE_HEART,t.MOONLIGHT],ivs:[31,31,31,31,31,31]});else{const n=V6(U$,E),I=V6(D$,E);R.pokemonConfigs.push({species:$e(n),isBoss:!1,ivs:[31,31,31,31,31,31]},{species:$e(I),isBoss:!1,ivs:[31,31,31,31,31,31]})}return R}o(c$,"getPartyConfig");function V6(E,A){const R=GO(E.slice(0)).pop().slice(0);let n=R.pop();for(;n instanceof vA&&n.evolution>A;)n=R.pop();return n instanceof vA?n.species:n}o(V6,"getSpeciesFromPool");function lc(E){const A=E.getSpeciesForm().getBaseStatTotal(),s=Math.min(Math.max(Math.floor((680-A)/20),1),18),R=E.species.getRootSpeciesId();let n=0;if(tA.hasOwnProperty(R)){const N=tA[R];n=Math.min(Math.max(Math.floor(7-N)*2,0),12)}let I=Math.min(n+s,30),r=Math.min(I,5);I-=r;const L=Math.floor(I/4);return r+=I%4,[r,L]}o(lc,"calculateEggRewardsForPokemon");function Cc(E,A){const s=u.t(`${aA}:title`)+`:
`+u.t(bO),R=[];if(E>0)for(let n=0;n<E;n++)R.push({pulled:!1,sourceType:VE.EVENT,eggDescriptor:s,tier:F.COMMON});if(A>0)for(let n=0;n<A;n++)R.push({pulled:!1,sourceType:VE.EVENT,eggDescriptor:s,tier:F.RARE});return R}o(Cc,"getEggOptions");function uc(E,A){const s=a.getPlayerParty(),R=s.indexOf(A);s[R]=s[0],s[0]=A,E.misc.originalParty=a.getPlayerParty().slice(1),E.misc.originalPartyHeldItems=E.misc.originalParty.map(n=>n.getHeldItems()),a.party=[A]}o(uc,"removePokemonFromPartyAndStoreHeldItems");function Xk(){const E=a.currentBattle.mysteryEncounter;a.getPlayerParty().push(...E.misc.originalParty);const A=E.misc.originalPartyHeldItems;for(const s of A)for(const R of s)a.addModifier(R,!0,!1,!1,!0);a.updateModifiers(!0)}o(Xk,"restorePartyAndHeldItems");function Uc(){const E=a.currentBattle.mysteryEncounter;E.dialogue.outro=[{speaker:bO,text:`${aA}:outro_failed`}],Xk();const A=E.misc.chosenPokemon;A.friendship=0,E.doEncounterRewards=void 0,E.misc.encounterFailed=!0,a.playBgm(a.arena.bgm),a.clearPhaseQueue(),a.clearPhaseQueueSplice();const s=a.getEnemyPokemon();return s&&(a.playSound("se/pb_rel"),s.hideInfo(),s.tint(Rn(s.pokeball),1,250,"Sine.easeIn"),a.tweens.add({targets:s,duration:250,ease:"Sine.easeIn",scale:.5,onComplete:o(()=>{s.leaveField(!0,!0,!0)},"onComplete")})),a.time.delayedCall(250,()=>{var I,r;const R=(I=a.currentBattle.trainer)==null?void 0:I.getSprites(),n=(r=a.currentBattle.trainer)==null?void 0:r.getTintSprites();if(R&&n)for(let L=0;L<R.length;L++)R[L].setVisible(!0),n[L].setVisible(!0),R[L].clearTint(),n[L].clearTint();a.tweens.add({targets:a.currentBattle.trainer,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750})}),y$(!0),!1}o(Uc,"onGameOver");function Dc(){const E=a.currentBattle.mysteryEncounter;E.misc.encounterFailed||(E.misc.chosenPokemon.addFriendship(u$),Xk())}o(Dc,"doPostEncounterCleanup");const Qk=3,Mc=256,h$=3,_$=12,P$=15,G$=[T.SEA,T.SEABED,T.BADLANDS,T.DESERT,T.ICE_CAVE,T.VOLCANO,T.WASTELAND,T.ABYSS,T.SPACE,T.END],d$=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.FOREST,T.SWAMP,T.BEACH,T.LAKE,T.MOUNTAIN,T.CAVE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.RUINS,T.CONSTRUCTION_SITE,T.JUNGLE,T.FAIRY_CAVE,T.TEMPLE,T.SLUM,T.SNOWY_FOREST,T.ISLAND,T.LABORATORY],H$=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.FOREST,T.SWAMP,T.BEACH,T.LAKE,T.MOUNTAIN,T.BADLANDS,T.CAVE,T.DESERT,T.ICE_CAVE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.RUINS,T.CONSTRUCTION_SITE,T.JUNGLE,T.FAIRY_CAVE,T.TEMPLE,T.SLUM,T.SNOWY_FOREST,T.ISLAND,T.LABORATORY],f$=[T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS,T.BEACH,T.LAKE,T.MEADOW,T.POWER_PLANT,T.GRAVEYARD,T.DOJO,T.FACTORY,T.CONSTRUCTION_SITE,T.SLUM,T.ISLAND],SA={},B$=[],g$=[Et.DANCING_LESSONS],m$=[Et.MYSTERIOUS_CHALLENGERS,Et.SHADY_VITAMIN_DEALER,Et.THE_POKEMON_SALESMAN,Et.THE_WINSTRATE_CHALLENGE,Et.THE_EXPERT_POKEMON_BREEDER],p$=[Et.DEPARTMENT_STORE_SALE,Et.PART_TIMER,Et.FUN_AND_GAMES,Et.GLOBAL_TRADE_SYSTEM],K$=[Et.FIGHT_OR_FLIGHT,Et.DARK_DEAL,Et.MYSTERIOUS_CHEST,Et.TRAINING_SESSION,Et.DELIBIRDY,Et.A_TRAINERS_TEST,Et.TRASH_TO_TREASURE,Et.BERRIES_ABOUND,Et.CLOWNING_AROUND,Et.WEIRD_DREAM,Et.TELEPORTING_HIJINKS,Et.BUG_TYPE_SUPERFAN,Et.UNCOMMON_BREED],Er=new Map([[T.TOWN,[]],[T.PLAINS,[Et.SLUMBERING_SNORLAX,Et.ABSOLUTE_AVARICE]],[T.GRASS,[Et.SLUMBERING_SNORLAX,Et.ABSOLUTE_AVARICE]],[T.TALL_GRASS,[Et.ABSOLUTE_AVARICE]],[T.METROPOLIS,[]],[T.FOREST,[Et.SAFARI_ZONE,Et.ABSOLUTE_AVARICE]],[T.SEA,[Et.LOST_AT_SEA]],[T.SWAMP,[Et.SAFARI_ZONE]],[T.BEACH,[]],[T.LAKE,[]],[T.SEABED,[]],[T.MOUNTAIN,[]],[T.BADLANDS,[Et.DANCING_LESSONS]],[T.CAVE,[Et.THE_STRONG_STUFF]],[T.DESERT,[Et.DANCING_LESSONS]],[T.ICE_CAVE,[]],[T.MEADOW,[]],[T.POWER_PLANT,[]],[T.VOLCANO,[Et.FIERY_FALLOUT,Et.DANCING_LESSONS]],[T.GRAVEYARD,[]],[T.DOJO,[]],[T.FACTORY,[]],[T.RUINS,[]],[T.WASTELAND,[Et.DANCING_LESSONS]],[T.ABYSS,[Et.DANCING_LESSONS]],[T.SPACE,[Et.THE_EXPERT_POKEMON_BREEDER]],[T.CONSTRUCTION_SITE,[]],[T.JUNGLE,[Et.SAFARI_ZONE]],[T.FAIRY_CAVE,[]],[T.TEMPLE,[]],[T.SLUM,[]],[T.SNOWY_FOREST,[]],[T.ISLAND,[]],[T.LABORATORY,[]]]);function F$(){SA[Et.MYSTERIOUS_CHALLENGERS]=BX,SA[Et.MYSTERIOUS_CHEST]=gX,SA[Et.DARK_DEAL]=cX,SA[Et.FIGHT_OR_FLIGHT]=HX,SA[Et.TRAINING_SESSION]=FX,SA[Et.SLUMBERING_SNORLAX]=KX,SA[Et.DEPARTMENT_STORE_SALE]=hX,SA[Et.SHADY_VITAMIN_DEALER]=pX,SA[Et.FIELD_TRIP]=_X,SA[Et.SAFARI_ZONE]=YX,SA[Et.LOST_AT_SEA]=fX,SA[Et.FIERY_FALLOUT]=bX,SA[Et.THE_STRONG_STUFF]=ZX,SA[Et.THE_POKEMON_SALESMAN]=QX,SA[Et.AN_OFFER_YOU_CANT_REFUSE]=zX,SA[Et.DELIBIRDY]=jX,SA[Et.ABSOLUTE_AVARICE]=qX,SA[Et.A_TRAINERS_TEST]=EQ,SA[Et.TRASH_TO_TREASURE]=sQ,SA[Et.BERRIES_ABOUND]=nQ,SA[Et.CLOWNING_AROUND]=aQ,SA[Et.PART_TIMER]=rQ,SA[Et.DANCING_LESSONS]=uQ,SA[Et.WEIRD_DREAM]=HQ,SA[Et.THE_WINSTRATE_CHALLENGE]=WQ,SA[Et.TELEPORTING_HIJINKS]=XQ,SA[Et.BUG_TYPE_SUPERFAN]=JQ,SA[Et.FUN_AND_GAMES]=qQ,SA[Et.UNCOMMON_BREED]=R$,SA[Et.GLOBAL_TRADE_SYSTEM]=S$,SA[Et.THE_EXPERT_POKEMON_BREEDER]=M$,B$.forEach(A=>{G$.forEach(s=>{const R=Er.get(s);R&&!R.includes(A)&&R.push(A)})}),g$.forEach(A=>{d$.forEach(s=>{const R=Er.get(s);R&&!R.includes(A)&&R.push(A)})}),m$.forEach(A=>{H$.forEach(s=>{const R=Er.get(s);R&&!R.includes(A)&&R.push(A)})}),p$.forEach(A=>{f$.forEach(s=>{const R=Er.get(s);R&&!R.includes(A)&&R.push(A)})});let E="";Er.forEach((A,s)=>{K$.forEach(R=>{A.includes(R)||A.push(R)}),E+=`${GL(s).toUpperCase()}: [${A.map(R=>Et[R].toString().toLowerCase()).sort().join(", ")}]
`})}o(F$,"initMysteryEncounters");const Bp=class Bp{constructor(A,s,R,n){this.type=A,this.tier=s,this.waveIndex=R,this.selectedOption=n??-1}};o(Bp,"SeenEncounterData");let l_=Bp;const gp=class gp{constructor(A){this.encounteredEvents=[],this.encounterSpawnChance=Qk,this.queuedEncounters=[],Pe(A)||Object.assign(this,A),this.encounteredEvents=this.encounteredEvents??[],this.queuedEncounters=this.queuedEncounters??[]}};o(gp,"MysteryEncounterSaveData");let Qr=gp;const mp=class mp extends ns{constructor(A){super(A)}start(){const A=this.getPokemon();if(A!=null&&A.isActive(!0)&&A.status&&A.status.isPostTurn()&&!A.switchOutStatus){A.status.incrementTurn();const s=new Pt(!1);if(_t(fE,A,s),_t(wU,A,s),s.value)this.end();else{a.queueMessage(Ok(A.status.effect,ee(A)));const R=new je(0);switch(A.status.effect){case re.POISON:R.value=Math.max(A.getMaxHp()>>3,1);break;case re.TOXIC:R.value=Math.max(Math.floor(A.getMaxHp()/16*A.status.toxicTurnCount),1);break;case re.BURN:R.value=Math.max(A.getMaxHp()>>4,1),_t(jU,A,null,!1,R);break}R.value&&(a.damageNumberHandler.add(this.getPokemon(),A.damage(R.value,!1,!0)),A.updateInfo(),bf(nL,A,R.value,A.hasPassive(),!1,[])),new ti(UA.POISON+(A.status.effect-1),A).play(!1,()=>this.end())}}else this.end()}end(){a.currentBattle.battleSpec===DE.FINAL_BOSS?a.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};o(mp,"PostTurnStatusEffectPhase");let _S=mp;const pp=class pp extends HE{constructor(A){super(),this.double=A}start(){super.start();const A=a.getPlayerField().find(s=>s.isActive(!0));A?A.setFieldPosition(this.double&&a.getPokemonAllowedInBattle().length>1?$s.LEFT:$s.CENTER,500).then(()=>{if(A.getFieldIndex()===1){const s=a.getPlayerParty();s[1]=s[0],s[0]=A}this.end()}):this.end()}};o(pp,"ToggleDoublePositionPhase");let mO=pp;const Kp=class Kp extends nE{constructor(A){super(),this.FIRST_DIALOGUE_PROMPT_DELAY=300,this.optionSelectSettings=A}start(){super.start(),a.clearPhaseQueue(),a.clearPhaseQueueSplice();const A=a.currentBattle.mysteryEncounter;A.updateSeedOffset(),this.optionSelectSettings||a.mysteryEncounterSaveData.encounteredEvents.push(new l_(A.encounterType,A.encounterTier,a.currentBattle.waveIndex)),a.ui.setMode(te.MYSTERY_ENCOUNTER,this.optionSelectSettings)}handleOptionSelect(A,s){var R,n;if(a.currentBattle.mysteryEncounter.selectedOption=A,!this.optionSelectSettings){const I=a.mysteryEncounterSaveData.encounteredEvents[a.mysteryEncounterSaveData.encounteredEvents.length-1];I.type===((R=a.currentBattle.mysteryEncounter)==null?void 0:R.encounterType)&&(I.selectedOption=s)}return A.onOptionPhase?(a.currentBattle.mysteryEncounter.populateDialogueTokensFromRequirements(),A.onPreOptionPhase?a.executeWithSeedOffset(async()=>await A.onPreOptionPhase().then(I=>{(Pe(I)||I)&&this.continueEncounter()}),(n=a.currentBattle.mysteryEncounter)==null?void 0:n.getSeedOffset()):this.continueEncounter(),!0):!1}continueEncounter(){var R,n,I;const A=o(()=>{a.pushPhase(new C_),this.end()},"endDialogueAndContinueEncounter"),s=(I=(n=(R=a.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:n.selectedOption)==null?void 0:I.dialogue;if(s!=null&&s.selected&&s.selected.length>0){a.ui.setMode(te.MESSAGE);const r=s.selected;let L=0;const N=o(()=>{const l=L===r.length-1?A:N,C=r[L];let U=null;const D=VA(C.text);C.speaker&&(U=VA(C.speaker)),L++,U?a.ui.showDialogue(D??"",U,null,l,0,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):a.ui.showText(D??"",null,l,L===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");N()}else A()}end(){a.ui.setMode(te.MESSAGE).then(()=>super.end())}};o(Kp,"MysteryEncounterPhase");let Wu=Kp;const Fp=class Fp extends nE{constructor(){super(),this.onOptionSelect=a.currentBattle.mysteryEncounter.selectedOption.onOptionPhase}start(){var A,s;super.start(),(A=a.currentBattle.mysteryEncounter)!=null&&A.autoHideIntroVisuals?AE().then(()=>{var R;a.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((R=a.currentBattle.mysteryEncounter)==null?void 0:R.getSeedOffset())*500)}):a.executeWithSeedOffset(()=>{this.onOptionSelect().finally(()=>{this.end()})},((s=a.currentBattle.mysteryEncounter)==null?void 0:s.getSeedOffset())*500)}};o(Fp,"MysteryEncounterOptionSelectedPhase");let C_=Fp;const Yp=class Yp extends nE{start(){super.start();const A=[w.FLINCHED,w.ENDURING];for(a.getField(!0).filter(r=>r.summonData).forEach(r=>{const L=r.summonData.tags;L.filter(N=>A.includes(N.tagType)&&N.lapseTypes.includes(As.TURN_END)&&!N.lapse(r,As.TURN_END)).forEach(N=>{N.onRemove(r),L.splice(L.indexOf(N),1)})});a.findPhase(r=>r instanceof _S);)a.tryRemovePhase(r=>r instanceof _S);const R=a.getPokemonAllowedInBattle(),n=R.filter(r=>!r.isActive(!0));if(!R.length)return a.unshiftPhase(new gO),this.end();a.getPlayerField().forEach((r,L)=>{!r.isAllowedInBattle()&&n.length>L&&a.unshiftPhase(new Xa(uA.SWITCH,L,!0,!1))}),a.currentBattle.double&&R.length===1&&n.length===0&&a.unshiftPhase(new mO(!0)),this.end()}};o(Yp,"MysteryEncounterBattleStartCleanupPhase");let u_=Yp;const Wp=class Wp extends nE{constructor(A=!1){super(),this.disableSwitch=A}start(){super.start(),this.doMysteryEncounterBattle()}getBattleMessage(){var R,n;const A=a.getEnemyField(),s=a.currentBattle.mysteryEncounter.encounterMode;return a.currentBattle.battleSpec===DE.FINAL_BOSS?u.t("battle:bossAppeared",{bossName:A[0].name}):s===PE.TRAINER_BATTLE?a.currentBattle.double?u.t("battle:trainerAppearedDouble",{trainerName:(R=a.currentBattle.trainer)==null?void 0:R.getName(oe.NONE,!0)}):u.t("battle:trainerAppeared",{trainerName:(n=a.currentBattle.trainer)==null?void 0:n.getName(oe.NONE,!0)}):A.length===1?u.t("battle:singleWildAppeared",{pokemonName:A[0].name}):u.t("battle:multiWildAppeared",{pokemonName1:A[0].name,pokemonName2:A[1].name})}doMysteryEncounterBattle(){var s,R,n,I;const A=a.currentBattle.mysteryEncounter.encounterMode;if(A===PE.WILD_BATTLE||A===PE.BOSS_BATTLE){A===PE.BOSS_BATTLE&&a.playBgm();const r=a.getEnemyParty().filter(L=>!L.isFainted()).length;a.unshiftPhase(new ts(0,!1)),a.currentBattle.double&&r>1&&a.unshiftPhase(new ts(1,!1)),(s=a.currentBattle.mysteryEncounter)!=null&&s.hideBattleIntroMessage?this.endBattleSetup():a.ui.showText(this.getBattleMessage(),null,()=>this.endBattleSetup(),0)}else if(A===PE.TRAINER_BATTLE){this.showEnemyTrainer();const r=o(()=>{var l;a.currentBattle.started=!0,a.playBgm(),a.pbTray.showPbTray(a.getPlayerParty()),a.pbTrayEnemy.showPbTray(a.getEnemyParty());const N=o(()=>{this.hideEnemyTrainer();const C=a.getEnemyParty().filter(U=>!U.isFainted()).length;a.unshiftPhase(new ts(0,!1)),a.currentBattle.double&&C>1&&a.unshiftPhase(new ts(1,!1)),this.endBattleSetup()},"doTrainerSummon");(l=a.currentBattle.mysteryEncounter)!=null&&l.hideBattleIntroMessage?N():a.ui.showText(this.getBattleMessage(),null,N,1e3,!0)},"doSummon"),L=(R=a.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!L||!L.length)r();else{const N=a.currentBattle.trainer;let l;a.executeWithSeedOffset(()=>l=eE(L),(n=a.currentBattle.mysteryEncounter)==null?void 0:n.getSeedOffset()),l=l;const C=o(()=>{a.ui.showDialogue(l,N==null?void 0:N.getName(oe.NONE,!0),null,()=>{a.charSprite.hide().then(()=>a.hideFieldOverlay(250).then(()=>r()))})},"showDialogueAndSummon");(I=a.currentBattle.trainer)!=null&&I.config.hasCharSprite&&!a.ui.shouldSkipDialogue(l)?a.showFieldOverlay(500).then(()=>a.charSprite.showCharacter(N==null?void 0:N.getKey(),k0(L[0])).then(()=>C())):C()}}}endBattleSetup(){const A=a.getEnemyField(),s=a.currentBattle.mysteryEncounter.encounterMode;s!==PE.TRAINER_BATTLE&&a.findModifier(I=>I instanceof bI)&&A.map(I=>a.pushPhase(new MS(I.getBattlerIndex())));const R=a.getPlayerParty().filter(n=>n.isAllowedInBattle());if(R[0].isOnField()||a.pushPhase(new ts(0)),a.currentBattle.double?R.length>1&&(a.pushPhase(new mO(!0)),R[1].isOnField()||a.pushPhase(new ts(1))):(R.length>1&&R[1].isOnField()&&(a.getPlayerField().forEach(n=>n.lapseTag(w.COMMANDED)),a.pushPhase(new Xr(1))),a.pushPhase(new mO(!1))),s!==PE.TRAINER_BATTLE&&!this.disableSwitch){const n=a.currentBattle.double?2:1;R.length>n&&(a.pushPhase(new pn(0,a.currentBattle.double)),a.currentBattle.double&&a.pushPhase(new pn(1,a.currentBattle.double)))}this.end()}showEnemyTrainer(){const A=a.currentBattle.trainer;A&&(A.alpha=0,A.x+=16,A.y-=16,A.setVisible(!0),a.tweens.add({targets:A,x:"-=16",y:"+=16",alpha:1,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{A.untint(100,"Sine.easeOut"),A.playAnim()},"onComplete")}))}hideEnemyTrainer(){a.tweens.add({targets:a.currentBattle.trainer,x:"+=16",y:"-=16",alpha:0,ease:"Sine.easeInOut",duration:750})}};o(Wp,"MysteryEncounterBattlePhase");let U_=Wp;const yp=class yp extends nE{constructor(A=!1){super(),this.addHealPhase=A}start(){super.start();const A=a.currentBattle.mysteryEncounter;A.doContinueEncounter?A.doContinueEncounter().then(()=>{this.end()}):a.executeWithSeedOffset(()=>{A.onRewards?A.onRewards().then(()=>{this.doEncounterRewardsAndContinue()}):this.doEncounterRewardsAndContinue()},a.currentBattle.waveIndex*1e3)}doEncounterRewardsAndContinue(){const A=a.currentBattle.mysteryEncounter;A.doEncounterExp&&A.doEncounterExp(),A.doEncounterRewards?A.doEncounterRewards():this.addHealPhase&&(a.tryRemovePhase(s=>s instanceof BO),a.unshiftPhase(new BO(0,void 0,{fillRemaining:!1,rerollMultiplier:-1}))),a.pushPhase(new D_),this.end()}};o(yp,"MysteryEncounterRewardsPhase");let PS=yp;const wp=class wp extends nE{constructor(){var A,s;super(),this.FIRST_DIALOGUE_PROMPT_DELAY=750,this.onPostOptionSelect=(s=(A=a.currentBattle.mysteryEncounter)==null?void 0:A.selectedOption)==null?void 0:s.onPostOptionPhase}start(){var A;super.start(),this.onPostOptionSelect?a.executeWithSeedOffset(async()=>await this.onPostOptionSelect().then(s=>{(Pe(s)||s)&&this.continueEncounter()}),((A=a.currentBattle.mysteryEncounter)==null?void 0:A.getSeedOffset())*2e3):this.continueEncounter()}continueEncounter(){var R,n,I;const A=o(()=>{a.pushPhase(new lI),this.end()},"endPhase"),s=(I=(n=(R=a.currentBattle)==null?void 0:R.mysteryEncounter)==null?void 0:n.dialogue)==null?void 0:I.outro;if(s&&s.length>0){let r=0;const L=o(()=>{const N=r===s.length-1?A:L,l=s[r];let C=null;const U=VA(l.text);l.speaker&&(C=VA(l.speaker)),r++,a.ui.setMode(te.MESSAGE),C?a.ui.showDialogue(U??"",C,null,N,0,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0):a.ui.showText(U??"",null,N,r===1?this.FIRST_DIALOGUE_PROMPT_DELAY:0,!0)},"showNextDialogue");L()}else A()}};o(wp,"PostMysteryEncounterPhase");let D_=wp;const vp=class vp extends ns{constructor(A,s,R=null,n=!1){super(A),this.anim=R,this.targetIndex=s,this.playOnEmptyField=n}setAnimation(A){this.anim=A}start(){const A=this.targetIndex!==void 0?(this.player?a.getEnemyField():a.getPlayerField())[this.targetIndex]:this.getPokemon();new ti(this.anim,this.getPokemon(),A).play(!1,()=>{this.end()})}};o(vp,"CommonAnimPhase");let Rs=vp;const Vp=class Vp extends ns{constructor(A,s=!1){super(A),this.wasFollowUp=s}start(){super.start();const A=this.getPokemon();!this.wasFollowUp&&(A!=null&&A.isActive(!0))&&A.lapseTags(As.AFTER_MOVE),a.arena.setIgnoreAbilities(!1),this.end()}};o(Vp,"MoveEndPhase");let QR=Vp;const xp=class xp extends ns{constructor(A,s,R){super(A),this.move=R,this.targetIndex=s}start(){super.start();const A=this.getUserPokemon(),s=this.getTargetPokemon(),R=this.move.getMove();if(!s||!R.isChargingMove())return console.warn("Invalid parameters for MoveChargePhase"),super.end();new SN(R.chargeAnim,R.id,A).play(!1,()=>{R.showChargeText(A,s),q8(dt,A,s,R),A.addTag(w.CHARGING,1,R.id,A.id),this.end()})}end(){const A=this.getUserPokemon(),s=this.move.getMove();if(s.isChargingMove()){const R=new Pt(!1);q8(eM,A,null,s,R),R.value?(a.tryRemovePhase(n=>n instanceof QR&&n.getPokemon()===A),a.unshiftPhase(new _A(A,[this.targetIndex],this.move,!1))):A.getMoveQueue().push({move:s.id,targets:[this.targetIndex]}),A.pushMoveHistory({move:this.move.moveId,targets:[this.targetIndex],result:DA.OTHER})}super.end()}getUserPokemon(){return(this.player?a.getPlayerField():a.getEnemyField())[this.fieldIndex]}getTargetPokemon(){return a.getField(!0).find(A=>this.targetIndex===A.getBattlerIndex())}};o(xp,"MoveChargePhase");let M_=xp;const bp=class bp extends HE{constructor(A,s,R,n=!1,I=!1,r=!1,L=!1){super(),this.failed=!1,this.cancelled=!1,this.reflected=!1,this.pokemon=A,this.targets=s,this.move=R,this.followUp=n,this.ignorePp=I,this.reflected=r,this.forcedLast=L}get pokemon(){return this._pokemon}set pokemon(A){this._pokemon=A}get move(){return this._move}set move(A){this._move=A}get targets(){return this._targets}set targets(A){this._targets=A}canMove(A=!1){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon,this.ignorePp,A)&&!!this.targets.length}fail(){this.failed=!0}cancel(){this.cancelled=!0}isForcedLast(){return this.forcedLast}start(){if(super.start(),t[this.move.moveId],!this.canMove(!0))return this.pokemon.isActive(!0)&&(this.fail(),this.showMoveText(),this.showFailedText()),this.end();this.pokemon.turnData.acted=!0,this.followUp&&(this.pokemon.turnData.hitsLeft=-1,this.pokemon.turnData.hitCount=0),(!this.followUp||this.reflected)&&this.move.getMove().doesFlagEffectApply({flag:ct.IGNORE_ABILITIES,user:this.pokemon,isFollowUp:this.followUp})&&a.arena.setIgnoreAbilities(!0,this.pokemon.getBattlerIndex()),this.resolveRedirectTarget(),this.resolveCounterAttackTarget(),this.resolvePreMoveStatusEffects(),this.lapsePreMoveAndMoveTags(),this.failed||this.cancelled||this.resolveFinalPreMoveCancellationChecks(),this.cancelled||this.failed?this.handlePreMoveFailures():this.move.getMove().isChargingMove()&&!this.pokemon.getTag(w.CHARGING)?this.chargeMove():this.useMove(),this.end()}resolveFinalPreMoveCancellationChecks(){const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();(A.length===0||s.length&&s[0].move===t.NONE)&&(this.showMoveText(),this.showFailedText(),this.cancel())}getActiveTargetPokemon(){return a.getField(!0).filter(A=>this.targets.includes(A.getBattlerIndex()))}resolvePreMoveStatusEffects(){if(!this.followUp&&this.pokemon.status&&!this.pokemon.status.isPostTurn()){this.pokemon.status.incrementTurn();let A=!1,s=!1;switch(this.pokemon.status.effect){case re.PARALYSIS:A=(!this.pokemon.randSeedInt(4)||xe.STATUS_ACTIVATION_OVERRIDE===!0)&&xe.STATUS_ACTIVATION_OVERRIDE!==!1;break;case re.SLEEP:{dA(CN,this.pokemon,null,this.move.getMove());const R=new je(this.pokemon.status.sleepTurnsRemaining??0);_t(sD,this.pokemon,null,!1,this.pokemon.status.effect,R),this.pokemon.status.sleepTurnsRemaining=R.value,s=this.pokemon.status.sleepTurnsRemaining<=0,A=!s&&!this.pokemon.getTag(w.BYPASS_SLEEP);break}case re.FREEZE:s=!!this.move.getMove().findAttr(R=>R instanceof IE&&R.selfTarget&&R.isOfEffect(re.FREEZE))||!this.pokemon.randSeedInt(5)&&xe.STATUS_ACTIVATION_OVERRIDE!==!0||xe.STATUS_ACTIVATION_OVERRIDE===!1,A=!s;break}A?(this.cancel(),a.queueMessage(Ok(this.pokemon.status.effect,ee(this.pokemon))),a.unshiftPhase(new Rs(this.pokemon.getBattlerIndex(),void 0,UA.POISON+(this.pokemon.status.effect-1)))):s&&(a.queueMessage(oi(this.pokemon.status.effect,ee(this.pokemon))),this.pokemon.resetStatus(),this.pokemon.updateInfo())}}lapsePreMoveAndMoveTags(){this.pokemon.lapseTags(As.PRE_MOVE),!this.followUp&&this.canMove()&&!this.cancelled&&this.pokemon.lapseTags(As.MOVE)}useMove(){var N,l,C;const A=this.getActiveTargetPokemon(),s=this.pokemon.getMoveQueue();if(a.triggerPokemonFormChange(this.pokemon,JT),this.move.getMove().hasAttr(Kn)){const U=a.arena.findTags(_=>_.tagType===Fe.FUTURE_SIGHT),D=a.arena.findTags(_=>_.tagType===Fe.DOOM_DESIRE);let M=!1;const h=A[0].getBattlerIndex();for(const _ of U)if(_.targetIndex===h){M=!0;break}for(const _ of D)if(_.targetIndex===h){M=!0;break}if(M)return this.showMoveText(),this.showFailedText(),this.end()}let n=!0;for(const U of this.move.getMove().getAttrs(FD))if(U.apply(this.pokemon,A[0],this.move.getMove())){n=!1;break}if(n&&this.showMoveText(),s.length>0&&(this.ignorePp=((N=s.shift())==null?void 0:N.ignorePP)??!1),((l=this.pokemon.getTag(w.CHARGING))==null?void 0:l.sourceMove)===this.move.moveId&&this.pokemon.lapseTag(w.CHARGING),!this.ignorePp){const U=1+this.getPpIncreaseFromPressure(A);this.move.usePp(U),a.eventTarget.dispatchEvent(new bT((C=this.pokemon)==null?void 0:C.id,this.move.getMove(),this.move.ppUsed))}const I=this.move.getMove();let r=!1,L=!1;if(n){const U=I.applyConditions(this.pokemon,A[0],I);L=a.arena.isMoveWeatherCancelled(this.pokemon,I),r=a.arena.isMoveTerrainCancelled(this.pokemon,this.targets,I),n=U&&!L&&!r}if(Ve[this.move.moveId].hasAttr(SL)||n&&(a.currentBattle.lastMove=this.move.moveId),n)An(sI,this.pokemon,null,this.move.getMove()),a.unshiftPhase(new pR(this.pokemon.getBattlerIndex(),this.targets,this.move,this.reflected));else{[t.ROAR,t.WHIRLWIND,t.TRICK_OR_TREAT,t.FORESTS_CURSE].includes(this.move.moveId)&&An(sI,this.pokemon,null,this.move.getMove()),this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:DA.FAIL,virtual:this.move.virtual});const U=I.getFailedText(this.pokemon,A[0],I);let D;U?D=U:r?D=rX(A[0],a.arena.getTerrainType()):L&&(D=aX(a.arena.getWeatherType())),this.showFailedText(D),this.pokemon.lapseTags(As.MOVE_EFFECT)}this.move.getMove().hasFlag(ct.DANCE_MOVE)&&!this.followUp&&a.getField(!0).forEach(U=>{aj($U,U,this.move,this.pokemon,this.targets)})}chargeMove(){const A=this.move.getMove(),s=this.getActiveTargetPokemon();if(A.applyConditions(this.pokemon,s[0],A))An(sI,this.pokemon,null,this.move.getMove()),this.showMoveText(),a.unshiftPhase(new M_(this.pokemon.getBattlerIndex(),this.targets[0],this.move));else{this.pokemon.pushMoveHistory({move:this.move.moveId,targets:this.targets,result:DA.FAIL,virtual:this.move.virtual});const R=A.getFailedText(this.pokemon,s[0],A);this.showMoveText(),this.showFailedText(R??void 0),this.pokemon.lapseTags(As.MOVE_EFFECT)}}end(){a.unshiftPhase(new QR(this.pokemon.getBattlerIndex(),this.followUp)),super.end()}getPpIncreaseFromPressure(A){return this.pokemon.getOpponents().filter(R=>A.includes(R)&&R.isActive(!0)&&R.hasAbilityWithAttr(OD)).length}resolveRedirectTarget(){if(this.targets.length===1){const A=this.targets[0],s=new je(A);a.getField(!0).filter(n=>n!==this.pokemon).forEach(n=>_t(AD,n,null,!1,this.move.moveId,s,this.pokemon));let R=A!==s.value;this.pokemon.getOpponents().forEach(n=>{const I=n.getTag(uD);I&&(!I.powder||!this.pokemon.isOfType(i.GRASS)&&!this.pokemon.hasAbility(O.OVERCOAT))&&(s.value=n.getBattlerIndex(),R=!1)}),A!==s.value&&(this.move.getMove().getAttrs(zi).forEach(I=>{(!I.abilitiesOnly||R)&&(s.value=A)}),this.pokemon.hasAbilityWithAttr(RI)&&(s.value=A,a.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr(RI),!0),a.queueAbilityDisplay(this.pokemon,this.pokemon.getPassiveAbility().hasAttr(RI),!1)),this.targets[0]=s.value)}}resolveCounterAttackTarget(){var A;if(this.targets.length===1&&this.targets[0]===Wt.ATTACKER){if(this.pokemon.turnData.attacksReceived.length&&(this.targets[0]=this.pokemon.turnData.attacksReceived[0].sourceBattlerIndex,a.currentBattle.double&&this.move.getMove().hasFlag(ct.REDIRECT_COUNTER)&&a.getField()[this.targets[0]].hp===0)){const s=this.pokemon.isPlayer()?a.getEnemyField():a.getPlayerField();this.targets[0]=((A=s.find(R=>R.hp>0))==null?void 0:A.getBattlerIndex())??Wt.ATTACKER}this.targets[0]===Wt.ATTACKER&&(this.fail(),this.showMoveText(),this.showFailedText())}}handlePreMoveFailures(){var A,s,R;if(this.cancelled||this.failed){if(this.failed){const n=this.ignorePp?0:1;n&&this.move.usePp(),a.eventTarget.dispatchEvent(new bT((A=this.pokemon)==null?void 0:A.id,this.move.getMove(),n))}this.cancelled&&((R=(s=this.pokemon.summonData)==null?void 0:s.tags)!=null&&R.find(n=>n.tagType===w.FRENZY))&&xn(this.pokemon,this.move.getMove()),this.pokemon.pushMoveHistory({move:t.NONE,result:DA.FAIL,targets:this.targets}),this.pokemon.lapseTags(As.MOVE_EFFECT),this.pokemon.lapseTags(As.AFTER_MOVE),this.pokemon.getMoveQueue().shift()}}showMoveText(){this.move.moveId!==t.NONE&&(this.pokemon.getTag(w.RECHARGING)||this.pokemon.getTag(w.INTERRUPTED)||(a.queueMessage(u.t(this.reflected?"battle:magicCoatActivated":"battle:useMove",{pokemonNameWithAffix:ee(this.pokemon),moveName:this.move.getName()}),500),dA($i,this.pokemon,this.pokemon.getOpponents()[0],this.move.getMove())))}showFailedText(A=u.t("battle:attackFailed")){a.queueMessage(A)}};o(bp,"MovePhase");let _A=bp;const kp=class kp extends nE{constructor(A,s,R){super(),this.expValue=A,this.useWaveIndexMultiplier=s,this.pokemonParticipantIds=R}start(){super.start(),a.applyPartyExp(this.expValue,!1,this.useWaveIndexMultiplier,this.pokemonParticipantIds),this.end()}};o(kp,"PartyExpPhase");let c_=kp;function Y$(){const E=a.add.sprite(0,0,"encounter_exclaim");E.setName("exclamation"),a.field.add(E),a.field.moveTo(E,a.field.getAll().length-1),E.setVisible(!0),E.setPosition(110,68),a.tweens.add({targets:E,y:"-=25",ease:"Cubic.easeOut",duration:300,yoyo:!0,onComplete:o(()=>{a.time.delayedCall(800,()=>{a.field.remove(E,!0)})},"onComplete")}),a.playSound("battle_anims/GEN8- Exclaim",{volume:.7})}o(Y$,"doTrainerExclamation");async function OE(E){var l,C;const A=[],s=a.currentBattle;let R=(E==null?void 0:E.doubleBattle)??!1;const n=E==null?void 0:E.trainerType,I=E==null?void 0:E.trainerConfig;let r;if(!Pe(n)||I){a.currentBattle.mysteryEncounter.encounterMode=PE.TRAINER_BATTLE,a.currentBattle.trainer&&(a.currentBattle.trainer.setVisible(!1),a.currentBattle.trainer.destroy()),r=I||tE[n];const U=r.doubleOnly||r.hasDouble&&!!E.doubleBattle;R=U;const D=Pe(E.female)?!!He(2):E.female,M=new ps(r.trainerType,U?LA.DOUBLE:D?LA.FEMALE:LA.DEFAULT,void 0,void 0,void 0,r);M.x+=300,M.setVisible(!1),a.field.add(M),a.currentBattle.trainer=M,A.push(M.loadAssets().then(()=>M.initSprite())),s.enemyLevels=a.currentBattle.trainer.getPartyLevels(a.currentBattle.waveIndex)}else{a.currentBattle.mysteryEncounter.encounterMode=PE.WILD_BATTLE;const U=E!=null&&E.pokemonConfigs&&E.pokemonConfigs.length>0?(l=E==null?void 0:E.pokemonConfigs)==null?void 0:l.length:R?2:1;s.enemyLevels=new Array(U).fill(null).map(()=>a.currentBattle.getLevelForWave())}a.getEnemyParty().forEach(U=>{U.leaveField(!0,!0,!0)}),s.enemyParty=[],s.double=R;const L=Pe(E.levelAdditiveModifier)?0:E.levelAdditiveModifier,N=Math.max(Math.round(a.currentBattle.waveIndex/10*L),0);s.enemyLevels=s.enemyLevels.map(U=>U+N),s.enemyLevels.forEach((U,D)=>{let M,h,_=!1;if((!Pe(n)||r)&&s.trainer)if(E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const H=E.pokemonConfigs[D];U=H.level?H.level:U,h=H.dataSource,M=H.species,_=H.isBoss,s.enemyParty[D]=a.addEnemyPokemon(M,U,oe.TRAINER,_,!1,h)}else s.enemyParty[D]=s.trainer.genPartyMember(D);else{if(E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const H=E.pokemonConfigs[D];U=H.level?H.level:U,h=H.dataSource,M=H.species,_=H.isBoss,_&&(a.currentBattle.mysteryEncounter.encounterMode=PE.BOSS_BATTLE)}else M=a.randomSpecies(s.waveIndex,U,!0);s.enemyParty[D]=a.addEnemyPokemon(M,U,oe.NONE,_,!1,h)}const d=a.getEnemyParty()[D];if(d.hp=d.getMaxHp(),d.status=null,d.passive=!1,D<(R?2:1)&&(d.setX(-66+d.getFieldPositionOffset()[0]),d.resetSummonData()),(Pe(E.countAsSeen)||E.countAsSeen)&&a.gameData.setPokemonSeen(d,!0,!!(n||r)),E!=null&&E.pokemonConfigs&&D<E.pokemonConfigs.length){const H=E.pokemonConfigs[D];if(Pe(H.nickname)||(d.nickname=btoa(unescape(encodeURIComponent(H.nickname)))),H.dataSource&&(d.id=He(4294967296)),Pe(H.formIndex)||(d.formIndex=H.formIndex),Pe(H.shiny)||(d.shiny=H.shiny),d.shiny&&!Pe(H.variant)&&(d.variant=H.variant),Pe(H.customPokemonData)||(d.customPokemonData=H.customPokemonData),H.isBoss){let K=Pe(H.bossSegments)?a.getEncounterBossSegments(a.currentBattle.waveIndex,U,M,!0):H.bossSegments;Pe(H.bossSegmentModifier)||(K+=H.bossSegmentModifier),d.setBoss(!0,K)}H.passive&&(d.passive=!0),H.nature&&(d.nature=H.nature),H.ivs&&(d.ivs=H.ivs);const B=H.status;if(B){const K=Array.isArray(B)?B[0]:B,Y=Array.isArray(B)?B[1]:B===re.SLEEP?3:void 0;d.status=new iI(K,0,Y)}if(d.summonData||(d.summonData=new MN),Pe(H.abilityIndex)||(d.abilityIndex=H.abilityIndex),Pe(H.gender)||(d.gender=H.gender,d.summonData.gender=H.gender),Pe(H.aiType)||(d.aiType=H.aiType),H!=null&&H.moveSet&&H.moveSet.length>0){const K=H.moveSet.map(Y=>new Lt(Y));d.moveset=K,d.summonData.moveset=K}H.tags&&H.tags.length>0&&H.tags.forEach(Y=>d.addTag(Y)),H.tera&&H.tera!==i.UNKNOWN&&(d.teraType=H.tera,s.trainer&&s.trainer.config.setInstantTera(D)),H.mysteryEncounterBattleEffects&&(d.mysteryEncounterBattleEffects=H.mysteryEncounterBattleEffects),d.primeSummonData(d.summonData),d.isShiny()&&!d.shinySparkle&&d.initShinySparkle(),d.initBattleInfo(),d.getBattleInfo().initInfo(d),d.generateName()}A.push(d.loadAssets()),`${d.stats[0]}${d.ivs[0]}`,`${d.stats[1]}${d.ivs[1]}`,`${d.stats[2]}${d.ivs[2]}`,`${d.stats[3]}${d.ivs[3]}`,`${d.stats[4]}${d.ivs[4]}`,`${d.stats[5]}${d.ivs[5]}`;const f=[];d.getMoveset().forEach(H=>{f.push(H.getName())}),`${ee(d)}`,`${d.species.speciesId}`,`${zR(d.nature,!0,!0,!0)}`,`${d.getAbility().name}`,d.hasPassive(),`${d.getPassiveAbility().name}`,d.isBoss()&&`${d.bossSegments}`}),a.pushPhase(new U_(E.disableSwitch)),await Promise.all(A),s.enemyParty.forEach((U,D)=>{D<(R?2:1)&&(U.setVisible(!1),s.double&&U.setFieldPosition(D?$s.RIGHT:$s.LEFT),U.x+=300)});{Ti(a.getEnemyField(),s.battleType===Ht.TRAINER?yE.TRAINER:yE.WILD);const U=(C=E==null?void 0:E.pokemonConfigs)==null?void 0:C.filter(D=>D==null?void 0:D.modifierConfigs).map(D=>D.modifierConfigs);a.generateEnemyModifiers(U)}}o(OE,"initBattleWithEnemyConfig");function Ll(E){return E=Array.isArray(E)?E:[E],Promise.all(E.map(A=>ol(A))).then(()=>Tl(E))}o(Ll,"loadCustomMovesForEncounter");function SO(E,A=!0,s=!0){a.money=Math.min(Math.max(a.money+E,0),Number.MAX_SAFE_INTEGER),a.updateMoneyText(),a.animateMoneyChanged(!1),A&&a.playSound("se/buy"),s&&(E<0?a.queueMessage(u.t("mysteryEncounterMessages:paid_money",{amount:-E}),null,!0):a.queueMessage(u.t("mysteryEncounterMessages:receive_money",{amount:E}),null,!0))}o(SO,"updatePlayerMoney");function mt(E,A){const s=Object.keys(j).find(n=>j[n]===E);if(!s)return null;let R=j[s]();return R=R.withIdFromFunc(j[s]).withTierFromPool(yE.PLAYER,a.getPlayerParty()),R instanceof YE?R.generateType(a.getPlayerParty(),A):R}o(mt,"generateModifierType");function oE(E,A){const s=mt(E,A);return s&&new us(s,0)}o(oE,"generateModifierTypeOption");function Os(E,A,s){return new Promise(R=>{const n=a.ui.getMode();a.ui.setMode(te.PARTY,gs.SELECT,-1,(I,r)=>{I<a.getPlayerParty().length?a.ui.setMode(n).then(()=>{const L=a.getPlayerParty()[I],N=E(L);if(!N){a.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",L.getNameToRender()),R(!0);return}a.ui.setMode(te.MESSAGE).then(()=>{var U,D,M;const l=o(()=>{const h=N.map(d=>{const f=d.handler;return d.handler=()=>(f(),a.currentBattle.mysteryEncounter.setDialogueToken("selectedPokemon",L.getNameToRender()),R(!0),!0),d}).concat({label:u.t("menu:cancel"),handler:o(()=>(a.ui.clearText(),a.ui.setMode(n),R(!1),!0),"handler"),onHover:o(()=>{EA(u.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),_={options:h,maxOptions:7,yOffset:0,supportHover:!0};h[0].onHover&&h[0].onHover(),a.ui.setModeWithoutClear(te.OPTION_SELECT,_,null,!0)},"displayOptions"),C=(M=(D=(U=a.currentBattle.mysteryEncounter)==null?void 0:U.selectedOption)==null?void 0:D.dialogue)==null?void 0:M.secondOptionPrompt;C?EA(C).then(()=>l()):l()})}):a.ui.setMode(n).then(()=>{A&&A(),R(!1)})},s)})}o(Os,"selectPokemonForOption");function W$(E,A,s,R){return new Promise(n=>{const I=a.ui.getMode(),r=o(C=>{a.ui.setMode(te.MESSAGE).then(()=>{A?EA(A).then(()=>{N[0].onHover&&N[0].onHover(),a.ui.setMode(te.OPTION_SELECT,C)}):(N[0].onHover&&N[0].onHover(),a.ui.setMode(te.OPTION_SELECT,C))})},"displayOptions"),L=o(C=>{a.ui.setMode(te.PARTY,gs.SELECT,-1,(U,D)=>{U<a.getPlayerParty().length?a.ui.setMode(I).then(()=>{n({selectedPokemonIndex:U,selectedOptionIndex:C})}):r(l)},s)},"selectPokemonAfterOption"),N=E.map((C,U)=>{const D=C.handler;return C.handler=()=>(D(),L(U),!0),C}).concat({label:u.t("menu:cancel"),handler:o(()=>(a.ui.clearText(),a.ui.setMode(I),n(null),!0),"handler"),onHover:o(()=>{R&&R(),EA(u.t("mysteryEncounterMessages:cancel_option"),0,0,!1)},"onHover")}),l={options:N,maxOptions:7,yOffset:0,supportHover:!0};r(l)})}o(W$,"selectOptionThenPokemon");function bt(E,A,s){a.currentBattle.mysteryEncounter.doEncounterRewards=()=>(s&&s(),E?a.unshiftPhase(new BO(0,void 0,E)):a.tryRemovePhase(R=>R instanceof BO),A&&A.forEach(R=>{new sa(R).addEggToGameData()}),!0)}o(bt,"setEncounterRewards");function fR(E,A,s=!0){const R=Array.isArray(E)?E:[E];a.currentBattle.mysteryEncounter.doEncounterExp=()=>(a.unshiftPhase(new c_(A,s,new Set(R))),!0)}o(fR,"setEncounterExp");function GS(E){a.pushPhase(new Wu(E))}o(GS,"initSubsequentOptionSelect");function wt(E=!1,A=PE.NO_BATTLE){a.currentBattle.mysteryEncounter.encounterMode=A,a.clearPhaseQueue(),a.clearPhaseQueueSplice(),$k(E)}o(wt,"leaveEncounterWithoutBattle");function $k(E=!1,A=!1){if(a.getPlayerParty().filter(n=>n.isAllowedInBattle()).length===0){a.clearPhaseQueue(),a.unshiftPhase(new gO);return}const R=a.currentBattle.mysteryEncounter;R.continuousEncounter||A||(R.encounterMode===PE.NO_BATTLE?(a.pushPhase(new PS(E)),a.pushPhase(new Vr)):a.getEnemyParty().find(n=>R.encounterMode!==PE.TRAINER_BATTLE?n.isOnField():!(n!=null&&n.isFainted(!0)))||(a.pushPhase(new Qa(!0)),R.encounterMode===PE.TRAINER_BATTLE&&a.pushPhase(new fu),(a.gameMode.isEndless||!a.gameMode.isWaveFinal(a.currentBattle.waveIndex))&&(a.pushPhase(new PS(E)),R.doContinueEncounter||a.pushPhase(new Vr))))}o($k,"handleMysteryEncounterVictory");function y$(E=!1,A=!1){if(a.getPlayerParty().filter(n=>n.isAllowedInBattle()).length===0){a.clearPhaseQueue(),a.unshiftPhase(new gO);return}const R=a.currentBattle.mysteryEncounter;R.continuousEncounter||A||(R.encounterMode!==PE.NO_BATTLE&&a.pushPhase(new Qa(!1)),a.pushPhase(new PS(E)),R.doContinueEncounter||a.pushPhase(new Vr))}o(y$,"handleMysteryEncounterBattleFailed");function AE(E=!0,A=!0,s=750){return new Promise(R=>{const n=a.currentBattle.mysteryEncounter.introVisuals,I=a.getEnemyField();I&&(a.currentBattle.enemyParty=[]),n?(E||(n.setVisible(!0),n.x=244,n.y=60,n.alpha=0),a.tweens.add({targets:[n,I],x:`${E?"+":"-"}=16`,y:`${E?"-":"+"}=16`,alpha:E?0:1,ease:"Sine.easeInOut",duration:s,onComplete:o(()=>{E&&A&&(a.field.remove(n,!0),I.forEach(r=>{r.leaveField(!0,!0,!0)}),a.currentBattle.mysteryEncounter.introVisuals=void 0),R(!0)},"onComplete")})):R(!0)})}o(AE,"transitionMysteryEncounterIntroVisuals");function w$(){const E=a.currentBattle.mysteryEncounter;a.currentBattle.isBattleMysteryEncounter()&&E&&E.encounterMode!==PE.NO_BATTLE&&!E.startOfBattleEffectsComplete&&(E.startOfBattleEffects.forEach(s=>{let R;s.sourcePokemon?R=s.sourcePokemon:Pe(s.sourceBattlerIndex)?R=a.getEnemyField()[0]:s.sourceBattlerIndex===Wt.ATTACKER?R=a.getEnemyField()[0]:s.sourceBattlerIndex===Wt.ENEMY?R=a.getEnemyField()[0]:s.sourceBattlerIndex===Wt.ENEMY_2?R=a.getEnemyField()[1]:s.sourceBattlerIndex===Wt.PLAYER?R=a.getPlayerField()[0]:s.sourceBattlerIndex===Wt.PLAYER_2&&(R=a.getPlayerField()[1]),a.pushPhase(new _A(R,s.targets,s.move,s.followUp,s.ignorePp))}),a.pushPhase(new u_),E.startOfBattleEffectsComplete=!0)}o(w$,"handleMysteryEncounterBattleStartEffects");function v$(){const E=a.currentBattle.mysteryEncounter;return a.currentBattle.isBattleMysteryEncounter()&&E&&E.onTurnStart?E.onTurnStart():!1}o(v$,"handleMysteryEncounterTurnStartEffects");function Wf(E,A=!1,s=!1){let R,n=!1;const I=EE.getEventEncounters();let r;if(I.length>0&&He(2)===1){const N=eE(I),l=$e(N.species).getWildSpeciesForLevel(E,!N.blockEvolution,A,a.gameMode);n=!0,R=$e(l),r=N.formIndex}else R=a.arena.randomSpecies(a.currentBattle.waveIndex,E,0,TI(a.getPlayerParty()),A);const L=new Fs(R,E,oe.NONE,A);return r&&(L.formIndex=r),n&&!L.shiny&&L.trySetShinySeed(),s&&L.abilityIndex!==2&&L.species.abilityHidden&&L.tryRerollHiddenAbilitySeed(),L}o(Wf,"getRandomEncounterSpecies");const Zp=class Zp extends HE{constructor(A=!1){super(),this.loaded=A}start(){var I,r,L,N;super.start(),a.updateGameInfo(),a.initSession(),a.eventTarget.dispatchEvent(new $c),a.gameMode.isClassic&&a.currentBattle.waveIndex>200&&a.unshiftPhase(new gO);const A=[],s=a.currentBattle;s.isBattleMysteryEncounter()&&!s.mysteryEncounter&&a.executeWithSeedOffset(()=>{const l=s.mysteryEncounterType;s.mysteryEncounter=a.getMysteryEncounter(l)},s.waveIndex*16);const R=s.mysteryEncounter;R&&(a.executeWithSeedOffset(()=>{R.onInit&&R.onInit(),R.populateDialogueTokensFromRequirements()},s.waveIndex),R.encounterAnimations&&R.encounterAnimations.length>0&&A.push(_j(R.encounterAnimations).then(()=>dj(!0))),R.initIntroVisuals(),a.field.add(R.introVisuals));let n=0;if((I=s.enemyLevels)==null||I.every((l,C)=>{var M,h;if(s.isBattleMysteryEncounter())return!1;if(!this.loaded)if(s.battleType===Ht.TRAINER){for(const _ of a.getPlayerParty())_&&_.customPokemonData.resetHitReceivedCount();s.enemyParty[C]=(M=s.trainer)==null?void 0:M.genPartyMember(C)}else{let _=a.randomSpecies(s.waveIndex,l,!0);a.findModifier(d=>d instanceof zN)&&!a.gameMode.isBoss(s.waveIndex)&&a.arena.biomeType!==T.END&&He(10)===0&&(_=uX(l)),s.enemyParty[C]=a.addEnemyPokemon(_,l,oe.NONE,!!a.getEncounterBossSegments(s.waveIndex,l,_)),a.currentBattle.battleSpec===DE.FINAL_BOSS&&(s.enemyParty[C].ivs=new Array(6).fill(31)),a.getPlayerParty().slice(0,s.double?2:1).reverse().forEach(d=>{_t(nD,d,null,!1,s.enemyParty[C])})}const U=a.getEnemyParty()[C];C<(s.double?2:1)&&(U.setX(-66+U.getFieldPositionOffset()[0]),U.resetSummonData()),this.loaded||a.gameData.setPokemonSeen(U,!0,s.battleType===Ht.TRAINER||((h=s==null?void 0:s.mysteryEncounter)==null?void 0:h.encounterMode)===PE.TRAINER_BATTLE),U.species.speciesId===e.ETERNATUS&&(a.gameMode.isClassic&&(s.battleSpec===DE.FINAL_BOSS||a.gameMode.isWaveFinal(s.waveIndex))?(s.battleSpec!==DE.FINAL_BOSS&&(U.formIndex=1,U.updateScale()),U.setBoss()):s.waveIndex%1e3||(U.formIndex=1,U.updateScale())),n+=U.getSpeciesForm().baseTotal,A.push(U.loadAssets()),`${U.stats[0]}${U.ivs[0]}`,`${U.stats[1]}${U.ivs[1]}`,`${U.stats[2]}${U.ivs[2]}`,`${U.stats[3]}${U.ivs[3]}`,`${U.stats[4]}${U.ivs[4]}`,`${U.stats[5]}${U.ivs[5]}`;const D=[];for(const _ of U.getMoveset())D.push(_.getName());return`${ee(U)}`,`${U.species.speciesId}`,`${zR(U.nature,!0,!0,!0)}`,`${U.getAbility().name}`,U.hasPassive(),`${U.getPassiveAbility().name}`,U.isBoss()&&`${U.bossSegments}`,!0}),a.getPlayerParty().filter(l=>l.isShiny()).length===Yr&&a.validateAchv(ht.SHINY_PARTY),s.battleType===Ht.TRAINER)A.push((r=s.trainer)==null?void 0:r.loadAssets().then(()=>{var l;return(l=s.trainer)==null?void 0:l.initSprite()}));else if(s.isBattleMysteryEncounter())(L=s.mysteryEncounter)!=null&&L.introVisuals&&A.push(s.mysteryEncounter.introVisuals.loadAssets().then(()=>s.mysteryEncounter.introVisuals.initSprite())),(N=s.mysteryEncounter)!=null&&N.loadAssets&&s.mysteryEncounter.loadAssets.length>0&&A.push(...s.mysteryEncounter.loadAssets),A.push(new Promise(l=>{a.loadSe("GEN8- Exclaim","battle_anims","GEN8- Exclaim.wav"),a.loadImage("encounter_exclaim","mystery-encounters"),a.load.once(Phaser.Loader.Events.COMPLETE,()=>l()),a.load.isLoading()||a.load.start()}));else if(!(xe.OPP_HEALTH_SEGMENTS_OVERRIDE>1)&&s.enemyParty.filter(C=>C.isBoss()).length>1)for(const C of s.enemyParty)C.isBoss()&&!C.isPopulatedFromDataSource&&(C.setBoss(!0,Math.ceil(C.bossSegments*(C.getSpeciesForm().baseTotal/n))),C.initBattleInfo());Promise.all(A).then(()=>{if(s.enemyParty.every((l,C)=>{var U;if(s.isBattleMysteryEncounter())return!1;if(C<(s.double?2:1)){if(s.battleType===Ht.WILD){a.field.add(l),s.seenEnemyPartyMemberIds.add(l.id);const D=a.getPlayerPokemon();D!=null&&D.isOnField()&&a.field.moveBelow(l,D),l.tint(0,.5)}else s.battleType===Ht.TRAINER&&(l.setVisible(!1),(U=a.currentBattle.trainer)==null||U.tint(0,.5));s.double&&l.setFieldPosition(C?$s.RIGHT:$s.LEFT)}return!0}),!this.loaded&&s.battleType!==Ht.MYSTERY_ENCOUNTER){Ti(a.getEnemyField(),s.battleType===Ht.TRAINER?yE.TRAINER:yE.WILD),a.generateEnemyModifiers(),Zf(!1);for(const l of a.getEnemyField())Xf(l,!1)}s.battleType===Ht.TRAINER&&a.currentBattle.trainer.genAI(a.getEnemyParty()),a.ui.setMode(te.MESSAGE).then(()=>{this.loaded?(this.doEncounter(),a.resetSeed()):(this.trySetWeatherIfNewBiome(),a.gameData.saveAll(!0,s.waveIndex%5===1||(a.lastSavePlayTime??0)>=300).then(l=>{if(a.disableMenu=!1,!l)return a.reset(!0);this.doEncounter(),a.resetSeed()}))})})}doEncounter(){var I,r;a.playBgm(void 0,!0),a.updateModifiers(!1),a.setFieldScale(1);const{battleType:A,waveIndex:s}=a.currentBattle;a.isMysteryEncounterValidForWave(A,s)&&!a.currentBattle.isBattleMysteryEncounter()&&(a.mysteryEncounterSaveData.encounterSpawnChance+=h$);for(const L of a.getPlayerParty())L&&L.resetBattleData();const R=a.getEnemyField();a.tweens.add({targets:[a.arenaEnemy,a.currentBattle.trainer,R,a.arenaPlayer,a.trainer].flat(),x:o((L,N,l,C)=>C<2+R.length?l+300:l-300,"x"),duration:2e3,onComplete:o(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")});const n=(r=(I=a.currentBattle)==null?void 0:I.mysteryEncounter)==null?void 0:r.introVisuals;if(n){const L=n.enterFromRight;L&&(n.x+=500),a.tweens.add({targets:n,x:L?"-=200":"+=300",duration:2e3})}}getEncounterMessage(){var s,R;const A=a.getEnemyField();return a.currentBattle.battleSpec===DE.FINAL_BOSS?u.t("battle:bossAppeared",{bossName:ee(A[0])}):a.currentBattle.battleType===Ht.TRAINER?a.currentBattle.double?u.t("battle:trainerAppearedDouble",{trainerName:(s=a.currentBattle.trainer)==null?void 0:s.getName(oe.NONE,!0)}):u.t("battle:trainerAppeared",{trainerName:(R=a.currentBattle.trainer)==null?void 0:R.getName(oe.NONE,!0)}):A.length===1?u.t("battle:singleWildAppeared",{pokemonName:A[0].getNameToRender()}):u.t("battle:multiWildAppeared",{pokemonName1:A[0].getNameToRender(),pokemonName2:A[1].getNameToRender()})}doEncounterCommon(A=!0){var R,n;const s=a.getEnemyField();if(a.currentBattle.battleType===Ht.WILD){for(const I of s)I.untint(100,"Sine.easeOut"),I.cry(),I.showInfo(),I.isShiny()&&a.validateAchv(ht.SEE_SHINY);a.updateFieldScale(),A?a.ui.showText(this.getEncounterMessage(),null,()=>this.end(),1500):this.end()}else if(a.currentBattle.battleType===Ht.TRAINER){const I=a.currentBattle.trainer;I==null||I.untint(100,"Sine.easeOut"),I==null||I.playAnim();const r=o(()=>{a.currentBattle.started=!0,a.playBgm(void 0),a.pbTray.showPbTray(a.getPlayerParty()),a.pbTrayEnemy.showPbTray(a.getEnemyParty());const N=o(()=>{this.hideEnemyTrainer();const l=a.getEnemyParty().filter(C=>!C.isFainted()).length;a.unshiftPhase(new ts(0,!1)),a.currentBattle.double&&l>1&&a.unshiftPhase(new ts(1,!1)),this.end()},"doTrainerSummon");A?a.ui.showText(this.getEncounterMessage(),null,N,1500,!0):N()},"doSummon"),L=(R=a.currentBattle.trainer)==null?void 0:R.getEncounterMessages();if(!(L!=null&&L.length))r();else{let N;a.executeWithSeedOffset(()=>N=eE(L),a.currentBattle.waveIndex),N=N;const l=o(()=>{a.ui.showDialogue(N,I==null?void 0:I.getName(oe.NONE,!0),null,()=>{a.charSprite.hide().then(()=>a.hideFieldOverlay(250).then(()=>r()))})},"showDialogueAndSummon");(n=a.currentBattle.trainer)!=null&&n.config.hasCharSprite&&!a.ui.shouldSkipDialogue(N)?a.showFieldOverlay(500).then(()=>a.charSprite.showCharacter(I==null?void 0:I.getKey(),k0(L[0])).then(()=>l())):l()}}else if(a.currentBattle.isBattleMysteryEncounter()&&a.currentBattle.mysteryEncounter){const I=a.currentBattle.mysteryEncounter,r=I.introVisuals;r==null||r.playAnim(),I.onVisualsStart?I.onVisualsStart():I.spriteConfigs&&r&&r.playShinySparkles();const L=o(()=>{const l=o(()=>{a.ui.clearText(),a.ui.getMessageHandler().hideNameText(),a.unshiftPhase(new Wu),this.end()},"doShowEncounterOptions");if(A){const C=I.dialogue.intro;if(!C)l();else{let D=0;const M=o(()=>{const h=D===C.length-1?l:M,_=C[D],d=VA(_==null?void 0:_.speaker),f=VA(_.text);D++,d?a.ui.showDialogue(f,d,null,h,0,D===1?750:0):a.ui.showText(f,null,h,D===1?750:0,!0)},"showNextDialogue");C.length>0&&M()}}else l()},"doEncounter"),N=u.t("battle:mysteryEncounterAppeared");N?(Y$(),a.ui.showDialogue(N,"???",null,()=>{a.charSprite.hide().then(()=>a.hideFieldOverlay(250).then(()=>L()))})):L()}}end(){const A=a.getEnemyField();if(A.forEach((s,R)=>{if(s.isShiny()&&a.unshiftPhase(new oS(Wt.ENEMY+R)),s.species.speciesId===e.ETERNATUS&&(a.gameMode.isBattleClassicFinalBoss(a.currentBattle.waveIndex)||a.gameMode.isEndlessMajorBoss(a.currentBattle.waveIndex))){const n=a.findModifier(I=>I instanceof VI,!1);n&&(a.removeModifier(n,!0),n.setTransferrableFalse(),a.addEnemyModifier(n))}}),[Ht.TRAINER,Ht.MYSTERY_ENCOUNTER].includes(a.currentBattle.battleType)||(A.map(R=>a.pushConditionalPhase(new SI(R.getBattlerIndex()),()=>{if(!a.getPlayerParty().length)return!1;const n=a.getPlayerParty().filter(r=>r.isOnField()).length,I=Math.min(a.getPlayerParty().filter(r=>!r.isFainted()).length,2);return a.currentBattle.double?n===I:n===1})),a.findModifier(R=>R instanceof bI)&&A.map(R=>a.pushPhase(new MS(R.getBattlerIndex())))),!this.loaded){const s=a.getPokemonAllowedInBattle();if(s[0].isOnField()||a.pushPhase(new ts(0)),a.currentBattle.double?s.length>1&&(a.pushPhase(new mO(!0)),s[1].isOnField()||a.pushPhase(new ts(1))):(s.length>1&&s[1].isOnField()&&a.pushPhase(new Xr(1)),a.pushPhase(new mO(!1))),a.currentBattle.battleType!==Ht.TRAINER&&(a.currentBattle.waveIndex>1||!a.gameMode.isDaily)){const R=a.currentBattle.double?2:1;s.length>R&&(a.pushPhase(new pn(0,a.currentBattle.double)),a.currentBattle.double&&a.pushPhase(new pn(1,a.currentBattle.double)))}}Za(LO.Access_Menu).then(()=>super.end())}tryOverrideForBattleSpec(){switch(a.currentBattle.battleSpec){case DE.FINAL_BOSS:{const A=a.getEnemyPokemon();return a.ui.showText(this.getEncounterMessage(),null,()=>{const s="battleSpecDialogue:encounter";if(a.ui.shouldSkipDialogue(s))this.doEncounterCommon(!1);else{const R=5643853+a.gameData.gameStats.classicSessionsPlayed,n=!u.exists(s,{fallbackLng:[]})||u.resolvedLanguage==="en"?u.t("battleSpecDialogue:key",{count:R,ordinal:!0}):"",I=R.toLocaleString()+n,r=a.gameData.gender??Jt.UNSET,L=Jt[r].toLowerCase(),N=u.t(s,{context:L,cycleCount:I});a.gameData.getSeenDialogues()[s]||a.gameData.saveSeenDialogue(s),a.ui.showDialogue(N,A==null?void 0:A.species.name,null,()=>{this.doEncounterCommon(!1)})}},1500,!0),!0}}return!1}trySetWeatherIfNewBiome(){this.loaded||a.arena.trySetWeather(dk(a.arena))}};o(Zp,"EncounterPhase");let $r=Zp;const x6={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},"es-ES":{starterInfoTextSize:"52px",instructionTextSize:"35px"},"es-MX":{starterInfoTextSize:"52px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"52px",instructionTextSize:"38px"}},b6=2,cc=17,Pl=109,Sn=285,Xl=38,Gl=34,dS=107,k6=20;function h_(E,A=0){const n=E%9*18,I=13+(Math.floor(E/9)-A)*17;return{x:n,y:I}}o(h_,"calcStarterPosition$1");function yf(E){const A=dS/7,s=Xl+A/2;return Math.round(s+A*E)}o(yf,"calcStarterIconY");function Z6(E,A=6){let s=dS,R=0;for(let n=0;n<A;n++){const I=Math.abs(E-(yf(n)-13));I<s&&(R=n,s=I)}return R}o(Z6,"findClosestStarterIndex");function X6(E,A){const s=yf(E)-13;let R=dS,n=0;for(let I=0;I<A;I++){const r=Math.abs(s-h_(I*9).y);r<R&&(n=I,R=r)}return n}o(X6,"findClosestStarterRow");const Xp=class Xp extends hs{constructor(){super(te.STARTER_SELECT),this.starterContainers=[],this.filteredStarterContainers=[],this.validStarterContainers=[],this.starterIconsCursorXOffset=-3,this.starterIconsCursorYOffset=1,this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.teraCursor=i.UNKNOWN,this.filterBarCursor=0,this.allSpecies=[],this.speciesLoaded=new Map,this.starterSpecies=[],this.pokerusSpecies=[],this.starterAttr=[],this.starterAbilityIndexes=[],this.starterNatures=[],this.starterTeras=[],this.starterMovesets=[],this.instructionRowX=0,this.instructionRowY=0,this.instructionRowTextOffset=9,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.blockInput=!1,this.updateStarters=()=>{this.scrollCursor=0,this.filteredStarterContainers=[],this.validStarterContainers=[],this.pokerusCursorObjs.forEach(s=>s.setVisible(!1)),this.starterCursorObjs.forEach(s=>s.setVisible(!1)),this.filterBar.updateFilterLabels(),a.gameMode.modeId===hA.CHALLENGE?this.starterContainers.forEach(s=>{var I;const R=s.species;let n=!1;if(((I=R.forms)==null?void 0:I.length)>0)for(let r=0;r<R.forms.length;r++){if(!R.forms[r].isStarterSelectable)continue;const L=BigInt(Math.pow(2,r))*de.DEFAULT_FORM,N=ui(s.species,a.gameData.getSpeciesDexAttrProps(R,L),!0);n=n||N}else n=ui(s.species,a.gameData.getSpeciesDexAttrProps(R,a.gameData.getSpeciesDefaultDexAttr(s.species,!1,!0)),!0);n?this.validStarterContainers.push(s):s.setVisible(!1)}):this.validStarterContainers=this.starterContainers;for(let s=0;s<this.validStarterContainers.length;s++){const R=this.validStarterContainers[s],n=R.icon,I=this.getCurrentDexProps(R.species.speciesId),r=a.gameData.getSpeciesDexAttrProps(R.species,I);n.setTexture(R.species.getIconAtlasKey(r.formIndex,r.shiny,r.variant),R.species.getIconId(r.female,r.formIndex,r.shiny,r.variant)),R.checkIconId(r.female,r.formIndex,r.shiny,r.variant)}this.validStarterContainers.forEach(s=>{var ve,_e;s.setVisible(!1),s.cost=a.gameData.getSpeciesStarterValue(s.species.speciesId);const R=((ve=a.gameData.dexData[s.species.speciesId])==null?void 0:ve.caughtAttr)||BigInt(0),n=a.gameData.starterData[s.species.speciesId],I=_E.hasOwnProperty(s.species.speciesId),r=this.filterBar.getVals(rA.GEN).includes(s.species.generation),L=this.filterBar.getVals(rA.TYPES).some(Le=>s.species.isOfType(Le-1)),N=!!(R&de.NON_SHINY),l=!!(R&de.SHINY),C=l&&!!(R&de.DEFAULT_VARIANT),U=l&&!!(R&de.VARIANT_2),D=l&&!!(R&de.VARIANT_3),M=!N&&!C&&!U&&!D,h=this.filterBar.getVals(rA.CAUGHT).some(Le=>{if(Le==="SHINY3")return D;if(Le==="SHINY2")return U&&!D;if(Le==="SHINY")return C&&!U&&!D;if(Le==="NORMAL")return N&&!C&&!U&&!D;if(Le==="UNCAUGHT")return M}),_=n.passiveAttr>0,d=this.isPassiveAvailable(s.species.speciesId)&&!_,f=this.filterBar.getVals(rA.UNLOCKS).some(Le=>{if(Le.val==="PASSIVE"&&Le.state===nt.ON)return _;if(Le.val==="PASSIVE"&&Le.state===nt.EXCLUDE)return I&&!_;if(Le.val==="PASSIVE"&&Le.state===nt.UNLOCKABLE)return d;if(Le.val==="PASSIVE"&&Le.state===nt.OFF)return!0}),H=n.valueReduction===1,B=n.valueReduction===2,K=this.isValueReductionAvailable(s.species.speciesId),Y=this.filterBar.getVals(rA.UNLOCKS).some(Le=>{if(Le.val==="COST_REDUCTION"&&Le.state===nt.ON)return H||B;if(Le.val==="COST_REDUCTION"&&Le.state===nt.ONE)return H;if(Le.val==="COST_REDUCTION"&&Le.state===nt.TWO)return B;if(Le.val==="COST_REDUCTION"&&Le.state===nt.EXCLUDE)return I&&!(H||B);if(Le.val==="COST_REDUCTION"&&Le.state===nt.UNLOCKABLE)return K;if(Le.val==="COST_REDUCTION"&&Le.state===nt.OFF)return!0}),v=((_e=this.starterPreferences[s.species.speciesId])==null?void 0:_e.favorite)??!1,Z=this.filterBar.getVals(rA.MISC).some(Le=>{if(Le.val==="FAVORITE"&&Le.state===nt.ON)return v;if(Le.val==="FAVORITE"&&Le.state===nt.EXCLUDE)return!v;if(Le.val==="FAVORITE"&&Le.state===nt.OFF)return!0}),z=n.classicWinCount>0,q=n.classicWinCount===0,J=n.classicWinCount===void 0,Ae=this.filterBar.getVals(rA.MISC).some(Le=>{if(Le.val==="WIN"&&Le.state===nt.ON)return z;if(Le.val==="WIN"&&Le.state===nt.EXCLUDE)return q||J;if(Le.val==="WIN"&&Le.state===nt.OFF)return!0}),Q=s.species.abilityHidden!==s.species.ability1&&s.species.abilityHidden!==O.NONE,Re=n.abilityAttr&hE.ABILITY_HIDDEN,W=this.filterBar.getVals(rA.MISC).some(Le=>{if(Le.val==="HIDDEN_ABILITY"&&Le.state===nt.ON)return Re;if(Le.val==="HIDDEN_ABILITY"&&Le.state===nt.EXCLUDE)return Q&&!Re;if(Le.val==="HIDDEN_ABILITY"&&Le.state===nt.OFF)return!0}),ie=this.isSameSpeciesEggAvailable(s.species.speciesId),Be=this.filterBar.getVals(rA.MISC).some(Le=>{if(Le.val==="EGG"&&Le.state===nt.ON)return ie;if(Le.val==="EGG"&&Le.state===nt.EXCLUDE)return I&&!ie;if(Le.val==="EGG"&&Le.state===nt.OFF)return!0}),he=this.filterBar.getVals(rA.MISC).some(Le=>{if(Le.val==="POKERUS"&&Le.state===nt.ON)return this.pokerusSpecies.includes(s.species);if(Le.val==="POKERUS"&&Le.state===nt.EXCLUDE)return!this.pokerusSpecies.includes(s.species);if(Le.val==="POKERUS"&&Le.state===nt.OFF)return!0});r&&L&&h&&f&&Y&&Z&&Ae&&W&&Be&&he&&this.filteredStarterContainers.push(s)}),this.starterSelectScrollBar.setTotalRows(Math.max(Math.ceil(this.filteredStarterContainers.length/9),1)),this.starterSelectScrollBar.setScrollCursor(0);const A=this.filterBar.getVals(rA.SORT)[0];this.filteredStarterContainers.sort((s,R)=>{switch(A.val){case RE.NUMBER:return(s.species.speciesId-R.species.speciesId)*-A.dir;case RE.COST:return(s.cost-R.cost)*-A.dir;case RE.CANDY:{const n=a.gameData.starterData[s.species.speciesId].candyCount,I=a.gameData.starterData[R.species.speciesId].candyCount;return(n-I)*-A.dir}case RE.IV:{const n=a.gameData.dexData[s.species.speciesId].ivs.reduce((r,L)=>r+L,0)/a.gameData.dexData[s.species.speciesId].ivs.length,I=a.gameData.dexData[R.species.speciesId].ivs.reduce((r,L)=>r+L,0)/a.gameData.dexData[R.species.speciesId].ivs.length;return(n-I)*-A.dir}case RE.NAME:return s.species.name.localeCompare(R.species.name)*-A.dir;case RE.CAUGHT:return(a.gameData.dexData[s.species.speciesId].caughtCount-a.gameData.dexData[R.species.speciesId].caughtCount)*-A.dir;case RE.HATCHED:return(a.gameData.dexData[s.species.speciesId].hatchedCount-a.gameData.dexData[R.species.speciesId].hatchedCount)*-A.dir}return 0}),this.updateScroll()},this.updateScroll=()=>{const R=this.scrollCursor*9,n=Math.min(this.filteredStarterContainers.length-1,R+9*9-1);this.starterSelectScrollBar.setScrollCursor(this.scrollCursor);let I=0;this.filteredStarterContainers.forEach((r,L)=>{var U;const N=h_(L,this.scrollCursor);if(r.setPosition(N.x,N.y),L<R||L>n){r.setVisible(!1),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[I].setPosition(N.x-1,N.y+1),this.pokerusCursorObjs[I].setVisible(!1),I++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(N.x-1,N.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!1));return}r.setVisible(!0),this.pokerusSpecies.includes(r.species)&&(this.pokerusCursorObjs[I].setPosition(N.x-1,N.y+1),this.pokerusCursorObjs[I].setVisible(!0),I++),this.starterSpecies.includes(r.species)&&(this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setPosition(N.x-1,N.y+1),this.starterCursorObjs[this.starterSpecies.indexOf(r.species)].setVisible(!0));const l=r.species.speciesId;this.updateStarterValueLabel(r),r.label.setVisible(!0);const C=l&&a.gameData.dexData[l].caughtAttr&de.SHINY?[de.DEFAULT_VARIANT,de.VARIANT_2,de.VARIANT_3].filter(D=>!!(a.gameData.dexData[l].caughtAttr&D)):[];for(let D=0;D<3;D++){const M=C.length>D;r.shinyIcons[D].setVisible(M),M&&r.shinyIcons[D].setTint(lE(C[D]===de.DEFAULT_VARIANT?0:C[D]===de.VARIANT_2?1:2))}r.starterPassiveBgs.setVisible(!!a.gameData.starterData[l].passiveAttr),r.hiddenAbilityIcon.setVisible(!!a.gameData.dexData[l].caughtAttr&&!!(a.gameData.starterData[l].abilityAttr&4)),r.classicWinIcon.setVisible(a.gameData.starterData[l].classicWinCount>0),r.favoriteIcon.setVisible(((U=this.starterPreferences[l])==null?void 0:U.favorite)??!1),a.candyUpgradeDisplay===0?(KE[l]||(KE[l]=["ffffff","ffffff"]),r.candyUpgradeIcon.setTint(Es(bE(KE[l][0]))),r.candyUpgradeOverlayIcon.setTint(Es(bE(KE[l][1]))),this.setUpgradeIcon(r)):a.candyUpgradeDisplay===1&&(r.candyUpgradeIcon.setVisible(!1),r.candyUpgradeOverlayIcon.setVisible(!1))})}}setup(){const A=this.getUi(),s=u.resolvedLanguage??"en",R=Object.keys(x6).find(se=>s.includes(se))??"en",n=x6[R];this.starterSelectContainer=a.add.container(0,-a.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const I=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,26720);I.setOrigin(0,0),this.starterSelectContainer.add(I);const r=a.add.image(0,0,"starter_select_bg");r.setOrigin(0,0),this.starterSelectContainer.add(r),this.shinyOverlay=a.add.image(6,6,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,0),this.shinyOverlay.setVisible(!1),this.starterSelectContainer.add(this.shinyOverlay);const L=Gt(Pl,cc+1,175,161),N=a.add.image(Pl+1,cc+2,"starter_container_bg");N.setOrigin(0,0),this.starterSelectContainer.add(N),this.starterSelectContainer.add(Gt(Sn,Xl-k6,Gl,k6,!0)),this.starterSelectContainer.add(Gt(Sn,Xl,Gl,dS)),this.starterSelectContainer.add(Gt(Sn,Xl+dS,Gl,Gl,!0)),this.starterSelectContainer.add(L),this.filterBarContainer=a.add.container(0,0),this.filterBar=new Uu(Math.min(Pl,Sn),1,210,cc);const l=[new vt(1,new It(u.t("starterSelectUiHandler:gen1"))),new vt(2,new It(u.t("starterSelectUiHandler:gen2"))),new vt(3,new It(u.t("starterSelectUiHandler:gen3"))),new vt(4,new It(u.t("starterSelectUiHandler:gen4"))),new vt(5,new It(u.t("starterSelectUiHandler:gen5"))),new vt(6,new It(u.t("starterSelectUiHandler:gen6"))),new vt(7,new It(u.t("starterSelectUiHandler:gen7"))),new vt(8,new It(u.t("starterSelectUiHandler:gen8"))),new vt(9,new It(u.t("starterSelectUiHandler:gen9")))],C=new hR(0,0,l,this.updateStarters,cR.HYBRID);this.filterBar.addFilter(rA.GEN,u.t("filterBar:genFilter"),C);const U=Object.keys(i).filter(se=>Number.isNaN(Number(se))),D=[];U.forEach((se,Ne)=>{if(Ne===0||Ne===19)return;const Ue=a.add.sprite(0,0,Ds("types"));Ue.setScale(.5),Ue.setFrame(se.toLowerCase()),D.push(new vt(Ne,new It("",Ue)))}),this.filterBar.addFilter(rA.TYPES,u.t("filterBar:typeFilter"),new hR(0,0,D,this.updateStarters,cR.HYBRID,.5));const M=a.add.sprite(0,0,"shiny_icons");M.setOrigin(.15,.2),M.setScale(.6),M.setFrame(DO(0)),M.setTint(lE(0));const h=a.add.sprite(0,0,"shiny_icons");h.setOrigin(.15,.2),h.setScale(.6),h.setFrame(DO(1)),h.setTint(lE(1));const _=a.add.sprite(0,0,"shiny_icons");_.setOrigin(.15,.2),_.setScale(.6),_.setFrame(DO(2)),_.setTint(lE(2));const d=[new vt("SHINY3",new It("",_)),new vt("SHINY2",new It("",h)),new vt("SHINY",new It("",M)),new vt("NORMAL",new It(u.t("filterBar:normal"))),new vt("UNCAUGHT",new It(u.t("filterBar:uncaught")))];this.filterBar.addFilter(rA.CAUGHT,u.t("filterBar:caughtFilter"),new hR(0,0,d,this.updateStarters,cR.HYBRID));const f=[new It(u.t("filterBar:passive"),void 0,nt.OFF),new It(u.t("filterBar:passiveUnlocked"),void 0,nt.ON),new It(u.t("filterBar:passiveUnlockable"),void 0,nt.UNLOCKABLE),new It(u.t("filterBar:passiveLocked"),void 0,nt.EXCLUDE)],H=[new It(u.t("filterBar:costReduction"),void 0,nt.OFF),new It(u.t("filterBar:costReductionUnlocked"),void 0,nt.ON),new It(u.t("filterBar:costReductionUnlockedOne"),void 0,nt.ONE),new It(u.t("filterBar:costReductionUnlockedTwo"),void 0,nt.TWO),new It(u.t("filterBar:costReductionUnlockable"),void 0,nt.UNLOCKABLE),new It(u.t("filterBar:costReductionLocked"),void 0,nt.EXCLUDE)],B=[new vt("PASSIVE",f),new vt("COST_REDUCTION",H)];this.filterBar.addFilter(rA.UNLOCKS,u.t("filterBar:unlocksFilter"),new hR(0,0,B,this.updateStarters,cR.RADIAL));const K=[new It(u.t("filterBar:favorite"),void 0,nt.OFF),new It(u.t("filterBar:isFavorite"),void 0,nt.ON),new It(u.t("filterBar:notFavorite"),void 0,nt.EXCLUDE)],Y=[new It(u.t("filterBar:ribbon"),void 0,nt.OFF),new It(u.t("filterBar:hasWon"),void 0,nt.ON),new It(u.t("filterBar:hasNotWon"),void 0,nt.EXCLUDE)],v=[new It(u.t("filterBar:hiddenAbility"),void 0,nt.OFF),new It(u.t("filterBar:hasHiddenAbility"),void 0,nt.ON),new It(u.t("filterBar:noHiddenAbility"),void 0,nt.EXCLUDE)],Z=[new It(u.t("filterBar:egg"),void 0,nt.OFF),new It(u.t("filterBar:eggPurchasable"),void 0,nt.ON)],z=[new It(u.t("filterBar:pokerus"),void 0,nt.OFF),new It(u.t("filterBar:hasPokerus"),void 0,nt.ON)],q=[new vt("FAVORITE",K),new vt("WIN",Y),new vt("HIDDEN_ABILITY",v),new vt("EGG",Z),new vt("POKERUS",z)];this.filterBar.addFilter(rA.MISC,u.t("filterBar:miscFilter"),new hR(0,0,q,this.updateStarters,cR.RADIAL));const J=[new vt(RE.NUMBER,new It(u.t("filterBar:sortByNumber"),void 0,nt.ON)),new vt(RE.COST,new It(u.t("filterBar:sortByCost"))),new vt(RE.CANDY,new It(u.t("filterBar:sortByCandies"))),new vt(RE.IV,new It(u.t("filterBar:sortByIVs"))),new vt(RE.NAME,new It(u.t("filterBar:sortByName"))),new vt(RE.CAUGHT,new It(u.t("filterBar:sortByNumCaught"))),new vt(RE.HATCHED,new It(u.t("filterBar:sortByNumHatched")))];this.filterBar.addFilter(rA.SORT,u.t("filterBar:sortFilter"),new hR(0,0,J,this.updateStarters,cR.SINGLE)),this.filterBarContainer.add(this.filterBar),this.starterSelectContainer.add(this.filterBarContainer),this.filterBar.offsetHybridFilters(),a.uiTheme||L.setVisible(!1),this.iconAnimHandler=new II,this.iconAnimHandler.setup(),this.pokemonNumberText=Se(17,1,"0000",k.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=Se(6,112,"",k.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonGrowthRateLabelText=Se(8,106,u.t("starterSelectUiHandler:growthRate"),k.SUMMARY_ALT,{fontSize:"36px"}),this.pokemonGrowthRateLabelText.setOrigin(0,0),this.pokemonGrowthRateLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonGrowthRateLabelText),this.pokemonGrowthRateText=Se(34,106,"",k.SUMMARY_PINK,{fontSize:"36px"}),this.pokemonGrowthRateText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGrowthRateText),this.pokemonGenderText=Se(96,112,"",k.SUMMARY_ALT),this.pokemonGenderText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGenderText),this.pokemonUncaughtText=Se(6,127,u.t("starterSelectUiHandler:uncaught"),k.SUMMARY_ALT,{fontSize:"56px"}),this.pokemonUncaughtText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonUncaughtText);const Ae=(n==null?void 0:n.starterInfoXPos)||31,Q=(n==null?void 0:n.starterInfoYOffset)||0,Re=(n==null?void 0:n.starterInfoTextSize)||56;this.pokemonAbilityLabelText=Se(6,127+Q,u.t("starterSelectUiHandler:ability"),k.SUMMARY_ALT,{fontSize:Re}),this.pokemonAbilityLabelText.setOrigin(0,0),this.pokemonAbilityLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonAbilityLabelText),this.pokemonAbilityText=Se(Ae,127+Q,"",k.SUMMARY_ALT,{fontSize:Re}),this.pokemonAbilityText.setOrigin(0,0),this.pokemonAbilityText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonAbilityText),this.pokemonPassiveLabelText=Se(6,136+Q,u.t("starterSelectUiHandler:passive"),k.SUMMARY_ALT,{fontSize:Re}),this.pokemonPassiveLabelText.setOrigin(0,0),this.pokemonPassiveLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLabelText),this.pokemonPassiveText=Se(Ae,136+Q,"",k.SUMMARY_ALT,{fontSize:Re}),this.pokemonPassiveText.setOrigin(0,0),this.pokemonPassiveText.setInteractive(new Phaser.Geom.Rectangle(0,0,250,55),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonPassiveText),this.pokemonPassiveDisabledIcon=a.add.sprite(Ae,137+Q,"icon_stop"),this.pokemonPassiveDisabledIcon.setOrigin(0,.5),this.pokemonPassiveDisabledIcon.setScale(.35),this.pokemonPassiveDisabledIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveDisabledIcon),this.pokemonPassiveLockedIcon=a.add.sprite(Ae,137+Q,"icon_lock"),this.pokemonPassiveLockedIcon.setOrigin(0,.5),this.pokemonPassiveLockedIcon.setScale(.42,.38),this.pokemonPassiveLockedIcon.setVisible(!1),this.starterSelectContainer.add(this.pokemonPassiveLockedIcon),this.pokemonNatureLabelText=Se(6,145+Q,u.t("starterSelectUiHandler:nature"),k.SUMMARY_ALT,{fontSize:Re}),this.pokemonNatureLabelText.setOrigin(0,0),this.pokemonNatureLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonNatureLabelText),this.pokemonNatureText=pE(Ae,145+Q,"",k.SUMMARY_ALT,{fontSize:Re}),this.pokemonNatureText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNatureText),this.pokemonMoveContainers=[],this.pokemonMoveBgs=[],this.pokemonMoveLabels=[],this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.valueLimitLabel=Se(Sn+17,150,"0/10",k.TOOLTIP_CONTENT),this.valueLimitLabel.setOrigin(.5,0),this.starterSelectContainer.add(this.valueLimitLabel);const W=Se(Sn+17,162,u.t("common:start"),k.TOOLTIP_CONTENT);W.setOrigin(.5,0),this.starterSelectContainer.add(W),this.startCursorObj=a.add.nineslice(Sn+4,160,"select_cursor",void 0,26,15,6,6,6,6),this.startCursorObj.setVisible(!1),this.startCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.startCursorObj);const ie=Se(Sn+17,23,u.t("starterSelectUiHandler:randomize"),k.TOOLTIP_CONTENT);ie.setOrigin(.5,0),this.starterSelectContainer.add(ie),this.randomCursorObj=a.add.nineslice(Sn+4,21,"select_cursor",void 0,26,15,6,6,6,6),this.randomCursorObj.setVisible(!1),this.randomCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.randomCursorObj);const Be=[],he=a.add.container(Pl+6,9);this.starterSelectScrollBar=new mn(161,12,5,L.height-6,9),he.add(this.starterSelectScrollBar),this.pokerusCursorObjs=new Array(Pf).fill(null).map(()=>{const se=a.add.image(0,0,"select_cursor_pokerus");return se.setVisible(!1),se.setOrigin(0,0),he.add(se),se}),this.starterCursorObjs=new Array(6).fill(null).map(()=>{const se=a.add.image(0,0,"select_cursor_highlight");return se.setVisible(!1),se.setOrigin(0,0),he.add(se),se}),this.cursorObj=a.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.starterIconsCursorObj=a.add.image(289,64,"select_gen_cursor"),this.starterIconsCursorObj.setName("starter-icons-cursor"),this.starterIconsCursorObj.setVisible(!1),this.starterIconsCursorObj.setOrigin(0,0),this.starterSelectContainer.add(this.starterIconsCursorObj),he.add(this.cursorObj);for(const se of qA){if(!tA.hasOwnProperty(se.speciesId)||!se.isObtainable())continue;Be.push(se.speciesId),this.speciesLoaded.set(se.speciesId,!1),this.allSpecies.push(se);const Ne=new $h(se).setVisible(!1);this.iconAnimHandler.addOrUpdate(Ne.icon,ss.NONE),this.starterContainers.push(Ne),he.add(Ne)}this.starterSelectContainer.add(he),this.starterIcons=new Array(6).fill(null).map((se,Ne)=>{const Ue=a.add.sprite(Sn+7,yf(Ne),"pokemon_icons_0");return Ue.setScale(.5),Ue.setOrigin(0,0),Ue.setFrame("unknown"),this.starterSelectContainer.add(Ue),this.iconAnimHandler.addOrUpdate(Ue,ss.PASSIVE),Ue}),this.pokemonSprite=a.add.sprite(53,63,"pkmn__sub"),this.pokemonSprite.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=a.add.sprite(8,98,Ds("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=a.add.sprite(26,98,Ds("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.pokemonLuckLabelText=Se(8,89,u.t("common:luckIndicator"),k.WINDOW_ALT,{fontSize:"56px"}),this.pokemonLuckLabelText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckLabelText),this.pokemonLuckText=Se(8+this.pokemonLuckLabelText.displayWidth+2,89,"0",k.WINDOW,{fontSize:"56px"}),this.pokemonLuckText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckText),this.pokemonCandyContainer=a.add.container(4.5,18),this.pokemonCandyIcon=a.add.sprite(0,0,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=a.add.sprite(0,0,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyDarknessOverlay=a.add.sprite(0,0,"candy"),this.pokemonCandyDarknessOverlay.setScale(.5),this.pokemonCandyDarknessOverlay.setOrigin(0,0),this.pokemonCandyDarknessOverlay.setTint(0),this.pokemonCandyDarknessOverlay.setAlpha(.5),this.pokemonCandyContainer.add(this.pokemonCandyDarknessOverlay),this.pokemonCandyCountText=Se(9.5,0,"x0",k.WINDOW_ALT,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyCountText),this.pokemonCandyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,30,20),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonCandyContainer),this.pokemonFormText=Se(6,42,"Form",k.WINDOW_ALT,{fontSize:"42px"}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText),this.pokemonCaughtHatchedContainer=a.add.container(2,25),this.pokemonCaughtHatchedContainer.setScale(.5),this.starterSelectContainer.add(this.pokemonCaughtHatchedContainer);const ve=a.add.sprite(1,0,"items","pb");ve.setOrigin(0,0),ve.setScale(.75),this.pokemonCaughtHatchedContainer.add(ve),this.pokemonCaughtCountText=Se(24,4,"0",k.SUMMARY_ALT),this.pokemonCaughtCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonCaughtCountText),this.pokemonHatchedIcon=a.add.sprite(1,14,"egg_icons"),this.pokemonHatchedIcon.setOrigin(.15,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedIcon),this.pokemonShinyIcon=a.add.sprite(14,76,"shiny_icons"),this.pokemonShinyIcon.setOrigin(.15,.2),this.pokemonShinyIcon.setScale(1),this.pokemonCaughtHatchedContainer.add(this.pokemonShinyIcon),this.pokemonHatchedCountText=Se(24,19,"0",k.SUMMARY_ALT),this.pokemonHatchedCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedCountText),this.pokemonMovesContainer=a.add.container(102,16),this.pokemonMovesContainer.setScale(.375);for(let se=0;se<4;se++){const Ne=a.add.container(0,14*se),Ue=a.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Ue.setOrigin(1,0);const me=Se(-Ue.width/2,0,"-",k.PARTY);me.setOrigin(.5,0),this.pokemonMoveBgs.push(Ue),this.pokemonMoveLabels.push(me),Ne.add(Ue),Ne.add(me),this.pokemonMoveContainers.push(Ne),this.pokemonMovesContainer.add(Ne)}this.pokemonAdditionalMoveCountLabel=Se(-this.pokemonMoveBgs[0].width/2,56,"(+0)",k.PARTY),this.pokemonAdditionalMoveCountLabel.setOrigin(.5,0),this.pokemonMovesContainer.add(this.pokemonAdditionalMoveCountLabel),this.starterSelectContainer.add(this.pokemonMovesContainer),this.pokemonEggMovesContainer=a.add.container(102,85),this.pokemonEggMovesContainer.setScale(.375);const _e=Se(-46,0,u.t("starterSelectUiHandler:eggMoves"),k.WINDOW_ALT);_e.setOrigin(.5,0),this.pokemonEggMovesContainer.add(_e);for(let se=0;se<4;se++){const Ne=a.add.container(0,16+14*se),Ue=a.add.nineslice(0,0,"type_bgs","unknown",92,14,2,2,2,2);Ue.setOrigin(1,0);const me=Se(-Ue.width/2,0,"???",k.PARTY);me.setOrigin(.5,0),this.pokemonEggMoveBgs.push(Ue),this.pokemonEggMoveLabels.push(me),Ne.add(Ue),Ne.add(me),this.pokemonEggMoveContainers.push(Ne),this.pokemonEggMovesContainer.add(Ne)}this.starterSelectContainer.add(this.pokemonEggMovesContainer),this.teraIcon=a.add.sprite(85,63,"button_tera"),this.teraIcon.setName("terrastallize-icon"),this.teraIcon.setFrame("fire"),this.starterSelectContainer.add(this.teraIcon);const Le=n.instructionTextSize;this.instructionsContainer=a.add.container(4,156),this.instructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.instructionsContainer),this.shinyIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","R.png"),this.shinyIconElement.setName("sprite-shiny-icon-element"),this.shinyIconElement.setScale(.675),this.shinyIconElement.setOrigin(0,0),this.shinyLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleShiny"),k.PARTY,{fontSize:Le}),this.shinyLabel.setName("text-shiny-label"),this.formIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","F.png"),this.formIconElement.setName("sprite-form-icon-element"),this.formIconElement.setScale(.675),this.formIconElement.setOrigin(0,0),this.formLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleForm"),k.PARTY,{fontSize:Le}),this.formLabel.setName("text-form-label"),this.genderIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","G.png"),this.genderIconElement.setName("sprite-gender-icon-element"),this.genderIconElement.setScale(.675),this.genderIconElement.setOrigin(0,0),this.genderLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleGender"),k.PARTY,{fontSize:Le}),this.genderLabel.setName("text-gender-label"),this.abilityIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","E.png"),this.abilityIconElement.setName("sprite-ability-icon-element"),this.abilityIconElement.setScale(.675),this.abilityIconElement.setOrigin(0,0),this.abilityLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleAbility"),k.PARTY,{fontSize:Le}),this.abilityLabel.setName("text-ability-label"),this.natureIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","N.png"),this.natureIconElement.setName("sprite-nature-icon-element"),this.natureIconElement.setScale(.675),this.natureIconElement.setOrigin(0,0),this.natureLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleNature"),k.PARTY,{fontSize:Le}),this.natureLabel.setName("text-nature-label"),this.teraIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","V.png"),this.teraIconElement.setName("sprite-tera-icon-element"),this.teraIconElement.setScale(.675),this.teraIconElement.setOrigin(0,0),this.teraLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("starterSelectUiHandler:cycleTera"),k.PARTY,{fontSize:Le}),this.teraLabel.setName("text-tera-label"),this.goFilterIconElement=new Phaser.GameObjects.Sprite(a,this.filterInstructionRowX,this.filterInstructionRowY,"keyboard","C.png"),this.goFilterIconElement.setName("sprite-goFilter-icon-element"),this.goFilterIconElement.setScale(.675),this.goFilterIconElement.setOrigin(0,0),this.goFilterLabel=Se(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY,u.t("starterSelectUiHandler:goFilter"),k.PARTY,{fontSize:Le}),this.goFilterLabel.setName("text-goFilter-label"),this.hideInstructions(),this.filterInstructionsContainer=a.add.container(50,5),this.filterInstructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.filterInstructionsContainer),this.starterSelectMessageBoxContainer=a.add.container(0,a.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=Gt(1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox),this.message=Se(8,8,"",k.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.statsContainer=new LS(6,16),a.add.existing(this.statsContainer),this.statsContainer.setVisible(!1),this.starterSelectContainer.add(this.statsContainer);const Ee=1;this.moveInfoOverlay=new JR({scale:Ee,top:!0,x:1,y:a.game.canvas.height/6-JR.getHeight(Ee)-29}),this.starterSelectContainer.add(this.moveInfoOverlay),this.starterSelectContainer.bringToTop(this.filterBarContainer),this.initTutorialOverlay(this.starterSelectContainer),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),a.eventTarget.addEventListener(en.CANDY_UPGRADE_NOTIFICATION_CHANGED,se=>this.onCandyUpgradeDisplayChanged(se)),this.updateInstructions()}show(A){return this.starterPreferences||(this.starterPreferences=O7()),this.moveInfoOverlay.clear(),this.pokerusSpecies=i7(),A.length>=1&&A[0]instanceof Function?(super.show(A),this.starterSelectCallback=A[0],this.starterSelectContainer.setVisible(!0),this.allSpecies.forEach((s,R)=>{const n=this.starterContainers[R].icon,I=a.gameData.dexData[s.speciesId];this.starterPreferences[s.speciesId]=this.initStarterPrefs(s),I.caughtAttr?n.clearTint():I.seenAttr&&n.setTint(8421504),this.setUpgradeAnimation(n,s)}),this.resetFilters(),this.updateStarters(),this.setFilterMode(!1),this.filterBarCursor=0,this.setCursor(0),this.tryUpdateValue(0),Za(LO.Starter_Select),!0):!1}initStarterPrefs(A){var l;const s=this.starterPreferences[A.speciesId],R=a.gameData.dexData[A.speciesId],n=a.gameData.starterData[A.speciesId];if(!s||!R.caughtAttr)return{};const I=R.caughtAttr,r=I&de.SHINY,L=I&de.NON_SHINY;if(s.shiny&&!r?(s.shiny=void 0,s.variant=void 0):s.shiny===!1&&!L&&(s.shiny=void 0),s.variant!==void 0){const C=[r&&I&de.DEFAULT_VARIANT,r&&I&de.VARIANT_2,r&&I&de.VARIANT_3];(Number.isNaN(s.variant)||s.variant<0||!C[s.variant])&&(s.variant=void 0)}if(s.female!==void 0&&((s.female?I&de.FEMALE:I&de.MALE)||(s.female=void 0)),s.ability!==void 0){const C=A.ability2===A.ability1,U=n.abilityAttr,D=U&hE.ABILITY_1,M=U&hE.ABILITY_2,h=U&hE.ABILITY_HIDDEN;[D,C?M&&!D:M,h][s.ability]||(s.ability=void 0)}const N=s.form;return N!==void 0&&(!((l=A.forms[N])!=null&&l.isStarterSelectable)||!(I&a.gameData.getFormAttr(N)))&&(s.form=void 0),s.nature!==void 0&&a.gameData.getNaturesForAttr(R.natureAttr).indexOf(s.nature)<0&&(s.nature=void 0),s}resetFilters(){this.filterBar.setValsToDefault(),this.resetCaughtDropdown()}resetCaughtDropdown(){const A=this.filterBar.getFilter(rA.CAUGHT);A.resetToDefault();for(let s=0;s<A.options.length;s++)A.options[s].val!=="ALL"&&A.options[s].val!=="UNCAUGHT"&&A.toggleOptionState(s)}showText(A,s,R,n,I,r,L){super.showText(A,s,R,n,I,r);const N=(A==null?void 0:A.indexOf(`
`))===-1;this.starterSelectMessageBox.setSize(318,N?28:42),L?(this.starterSelectMessageBox.setOrigin(0,0),this.starterSelectMessageBoxContainer.setY(0),this.message.setY(4)):(this.starterSelectMessageBoxContainer.setY(a.game.canvas.height/6),this.starterSelectMessageBox.setOrigin(0,1),this.message.setY(N?-22:-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isUpgradeIconEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===1}isPassiveAvailable(A){const s=a.gameData.starterData[A];return s.candyCount>=jT(tA[A])&&!(s.passiveAttr&Hs.UNLOCKED)}isValueReductionAvailable(A){const s=a.gameData.starterData[A];return s.candyCount>=qT(tA[A])[s.valueReduction]&&s.valueReduction<b6}isSameSpeciesEggAvailable(A){return a.gameData.starterData[A].candyCount>=eS(tA[A])}setUpgradeAnimation(A,s,R=!1){if(a.tweens.killTweensOf(A),a.candyUpgradeDisplay===0||s.speciesId!==s.getRootSpeciesId(!1))return;A.y=2;const n={targets:A,loop:-1,delay:uf(0,50)*5,loopDelay:1e3,tweens:[{targets:A,y:-3,duration:Ot(125),ease:"Cubic.easeOut",yoyo:!0},{targets:A,y:-1,duration:Ot(150),ease:"Cubic.easeOut",yoyo:!0}]},I=this.isPassiveAvailable(s.speciesId),r=this.isValueReductionAvailable(s.speciesId),L=this.isSameSpeciesEggAvailable(s.speciesId);a.candyUpgradeNotification===1?I&&(a.tweens.chain(n).paused=R):a.candyUpgradeNotification===2&&(I||r||L)&&(a.tweens.chain(n).paused=R)}setUpgradeIcon(A){const s=A.species,R=!!(s!=null&&s.speciesId);if(!s||a.candyUpgradeNotification===0||s.speciesId!==s.getRootSpeciesId(!1)){A.candyUpgradeIcon.setVisible(!1),A.candyUpgradeOverlayIcon.setVisible(!1);return}const n=this.isPassiveAvailable(s.speciesId),I=this.isValueReductionAvailable(s.speciesId),r=this.isSameSpeciesEggAvailable(s.speciesId);a.candyUpgradeNotification===1?(A.candyUpgradeIcon.setVisible(R&&n),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible)):a.candyUpgradeNotification===2&&(A.candyUpgradeIcon.setVisible(R&&(n||I||r)),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible))}updateCandyUpgradeDisplay(A){this.isUpgradeIconEnabled()&&this.setUpgradeIcon(A),this.isUpgradeAnimationEnabled()&&this.setUpgradeAnimation(A.icon,this.lastSpecies,!0)}onCandyUpgradeDisplayChanged(A){if(A){if(a.candyUpgradeDisplay===0){this.filteredStarterContainers.forEach(R=>{this.setUpgradeIcon(R)});return}this.filteredStarterContainers.forEach((R,n)=>{const I=this.filteredStarterContainers[n].icon;this.setUpgradeAnimation(I,R.species)})}}processInput(A){var _,d,f;if(this.blockInput)return!1;const s=9,R=9,n=this.filteredStarterContainers.length,I=Math.ceil(n/s),r=Math.floor(this.cursor/s),L=this.scrollCursor*s,N=Math.min(this.filteredStarterContainers.length-1,L+R*s-1),l=N-L+1,C=Math.ceil(l/s),U=Math.floor((this.cursor-L)/s),D=this.getUi();let M=!1,h=!1;if(A===X.SUBMIT)this.tryStart(!0)?M=!0:h=!0;else if(A===X.CANCEL)this.filterMode&&this.filterBar.openDropDown?(this.filterBar.toggleDropDown(this.filterBarCursor),M=!0):this.filterMode&&!this.filterBar.getFilter(this.filterBar.getColumn(this.filterBarCursor)).hasDefaultValues()?(this.filterBar.getColumn(this.filterBarCursor)===rA.CAUGHT?this.resetCaughtDropdown():this.filterBar.resetSelection(this.filterBarCursor),this.updateStarters(),M=!0):this.statsMode?(this.toggleStatsMode(!1),M=!0):this.starterSpecies.length?(this.popStarter(this.starterSpecies.length-1),M=!0,this.updateInstructions()):(this.tryExit(),M=!0);else if(A===X.STATS)this.filterMode||(this.startCursorObj.setVisible(!1),this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=0,this.setFilterMode(!0),this.filterBar.toggleDropDown(this.filterBarCursor));else if(this.startCursorObj.visible)switch(A){case X.ACTION:this.tryStart(!0)?M=!0:h=!0;break;case X.UP:this.startCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=this.starterSpecies.length-1,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.startCursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)),M=!0;break;case X.DOWN:this.startCursorObj.setVisible(!1),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0),M=!0;break;case X.LEFT:n>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(C-1)*9+8),M=!0);break;case X.RIGHT:n>0&&(this.startCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+(C-1)*9),M=!0);break}else if(this.filterMode)switch(A){case X.LEFT:this.filterBarCursor>0?M=this.setCursor(this.filterBarCursor-1):M=this.setCursor(this.filterBar.numFilters-1);break;case X.RIGHT:this.filterBarCursor<this.filterBar.numFilters-1?M=this.setCursor(this.filterBarCursor+1):M=this.setCursor(0);break;case X.UP:if(this.filterBar.openDropDown)M=this.filterBar.decDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.starterSpecies.length>0?this.startCursorObj.setVisible(!0):this.randomCursorObj.setVisible(!0),M=!0;else if(n>0){this.setFilterMode(!1),this.scrollCursor=Math.max(0,I-9),this.updateScroll();const H=(this.filterBarCursor+.5)/this.filterBar.numFilters,B=Math.min(8,Math.floor(H*11));n%9>B?this.setCursor(n-n%9+B):this.setCursor(Math.max(n-n%9+B-9,0)),M=!0}break;case X.DOWN:if(this.filterBar.openDropDown)M=this.filterBar.incDropDownCursor();else if(this.filterBarCursor===this.filterBar.numFilters-1)this.setFilterMode(!1),this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0),M=!0;else if(n>0){this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll();const H=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),B=Math.min(8,Math.floor(H*11));this.setCursor(Math.min(B,n)),M=!0}break;case X.ACTION:this.filterBar.openDropDown?this.filterBar.toggleOptionState():this.filterBar.toggleDropDown(this.filterBarCursor),M=!0;break}else if(this.randomCursorObj.visible)switch(A){case X.ACTION:if(this.starterSpecies.length>=6){h=!0;break}const H=this.starterSpecies.map(W=>W.generation).reduce((W,ie,Be)=>W+a.gameData.getSpeciesStarterValue(this.starterSpecies[Be].speciesId),0),B=this.filteredStarterContainers.filter(W=>{const ie=W.species,[Be]=this.isInParty(ie),he=a.gameData.getSpeciesStarterValue(ie.speciesId),ve=ui(ie,a.gameData.getSpeciesDexAttrProps(ie,this.getCurrentDexProps(ie.speciesId)),this.isPartyValid()),_e=a.gameData.dexData[ie.speciesId].caughtAttr;return!Be&&ve&&H+he<=this.getValueLimit()&&_e});if(B.length===0){h=!0;break}const Y=B[Math.floor(Math.random()*B.length)].species;this.setSpecies(Y);const v=this.getCurrentDexProps(Y.speciesId),Z=a.gameData.getSpeciesDexAttrProps(Y,v),z=this.abilityCursor,q=this.natureCursor,J=this.teraCursor,Ae=(_=this.starterMoveset)==null?void 0:_.slice(0),Q=a.gameData.getSpeciesStarterValue(Y.speciesId);ms(Y.speciesId,Z.formIndex).loadAssets(Z.female,Z.formIndex,Z.shiny,Z.variant,!0).then(()=>{this.tryUpdateValue(Q,!0)&&(this.addToParty(Y,v,z,q,Ae,J,!0),D.playSelect())});break;case X.UP:this.randomCursorObj.setVisible(!1),this.filterBarCursor=this.filterBar.numFilters-1,this.setFilterMode(!0),M=!0;break;case X.DOWN:this.randomCursorObj.setVisible(!1),this.starterSpecies.length>0?(this.starterIconsCursorIndex=0,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.filterBarCursor=this.filterBar.numFilters-1,this.setFilterMode(!0)),M=!0;break;case X.LEFT:n>0&&(this.randomCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L+8),M=!0);break;case X.RIGHT:n>0&&(this.randomCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(L),M=!0);break}else{let H;const B=a.gameData.starterData[this.lastSpecies.speciesId];let K=this.starterPreferences[this.lastSpecies.speciesId];if(this.starterIconsCursorObj.visible?H=this.filteredStarterContainers[this.filteredStarterContainers.findIndex(Y=>Y.species===this.lastSpecies)]:H=this.filteredStarterContainers[this.cursor],A===X.ACTION){if(!((d=this.speciesStarterDexEntry)!=null&&d.caughtAttr))h=!0;else if(this.starterSpecies.length<=6){const Y=this.getUi();let v=[];const[Z,z]=this.isInParty(this.lastSpecies),q=this.isPartyValid(),J=ui(this.lastSpecies,a.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),q),Ae=this.starterSpecies.map(he=>he.generation).reduce((he,ve,_e)=>he+=a.gameData.getSpeciesStarterValue(this.starterSpecies[_e].speciesId),0),Q=a.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId);if(!Z&&J&&Ae+Q<=this.getValueLimit()&&this.starterSpecies.length<Yr?v=[{label:u.t("starterSelectUiHandler:addToParty"),handler:o(()=>{var ve;Y.setMode(te.STARTER_SELECT);const he=this.tryUpdateValue(a.gameData.getSpeciesStarterValue(this.lastSpecies.speciesId),!0);if(!Z&&J&&he){const _e=this.starterCursorObjs[this.starterSpecies.length];_e.setVisible(!0),_e.setPosition(this.cursorObj.x,this.cursorObj.y),this.addToParty(this.lastSpecies,this.dexAttrCursor,this.abilityCursor,this.natureCursor,(ve=this.starterMoveset)==null?void 0:ve.slice(0),this.teraCursor),Y.playSelect()}else Y.playError();return!0},"handler"),overrideSound:!0}]:Z&&(v=[{label:u.t("starterSelectUiHandler:removeFromParty"),handler:o(()=>(this.popStarter(z),Y.setMode(te.STARTER_SELECT),!0),"handler")}]),v.push({label:u.t("starterSelectUiHandler:toggleIVs"),handler:o(()=>(this.toggleStatsMode(),Y.setMode(te.STARTER_SELECT),!0),"handler")}),this.speciesStarterMoves.length>1){const he=o(ve=>{this.blockInput=!0,Y.setMode(te.STARTER_SELECT).then(()=>{Y.showText(u.t("starterSelectUiHandler:selectMoveSwapOut"),null,()=>{this.moveInfoOverlay.show(Ve[ve[0]]),Y.setModeWithoutClear(te.OPTION_SELECT,{options:ve.map((_e,Le)=>({label:Ve[_e].name,handler:o(()=>(this.blockInput=!0,Y.setMode(te.STARTER_SELECT).then(()=>{Y.showText(`${u.t("starterSelectUiHandler:selectMoveSwapWith")} ${Ve[_e].name}.`,null,()=>{const se=this.speciesStarterMoves.filter(Ne=>Ne!==_e);this.moveInfoOverlay.show(Ve[se[0]]),Y.setModeWithoutClear(te.OPTION_SELECT,{options:se.map(Ne=>({label:Ve[Ne].name,handler:o(()=>(this.switchMoveHandler(Le,Ne,_e),he(this.starterMoveset),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.show(Ve[Ne])},"onHover")})).concat({label:u.t("menu:cancel"),handler:o(()=>(he(this.starterMoveset),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.show(Ve[_e])},"onHover")})).concat({label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),Y.setMode(te.STARTER_SELECT),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})})},"showSwapOptions");v.push({label:u.t("starterSelectUiHandler:manageMoves"),handler:o(()=>(he(this.starterMoveset),!0),"handler")})}if(this.canCycleNature){const he=o(()=>{this.blockInput=!0,Y.setMode(te.STARTER_SELECT).then(()=>{Y.showText(u.t("starterSelectUiHandler:selectNature"),null,()=>{var _e;const ve=a.gameData.getNaturesForAttr((_e=this.speciesStarterDexEntry)==null?void 0:_e.natureAttr);Y.setModeWithoutClear(te.OPTION_SELECT,{options:ve.map((Le,Ee)=>({label:zR(Le,!0,!0,!0,a.uiTheme),handler:o(()=>(K||(K=this.starterPreferences[this.lastSpecies.speciesId]={}),K.nature=Le,this.clearText(),Y.setMode(te.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies,{natureIndex:Le}),this.blockInput=!1,!0),"handler")})).concat({label:u.t("menu:cancel"),handler:o(()=>(this.clearText(),Y.setMode(te.STARTER_SELECT),this.blockInput=!1,!0),"handler")}),maxOptions:8,yOffset:19})})})},"showNatureOptions");v.push({label:u.t("starterSelectUiHandler:manageNature"),handler:o(()=>(he(),!0),"handler")})}const Re=B.passiveAttr;Re&Hs.UNLOCKED&&(Re&Hs.ENABLED?v.push({label:u.t("starterSelectUiHandler:disablePassive"),handler:o(()=>(B.passiveAttr^=Hs.ENABLED,Y.setMode(te.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")}):v.push({label:u.t("starterSelectUiHandler:enablePassive"),handler:o(()=>(B.passiveAttr|=Hs.ENABLED,Y.setMode(te.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),!0),"handler")})),(K==null?void 0:K.favorite)??!1?v.push({label:u.t("starterSelectUiHandler:removeFromFavorites"),handler:o(()=>(K.favorite=!1,H&&H.favoriteIcon.setVisible(K.favorite),Y.setMode(te.STARTER_SELECT),!0),"handler")}):v.push({label:u.t("starterSelectUiHandler:addToFavorites"),handler:o(()=>(K.favorite=!0,H&&H.favoriteIcon.setVisible(K.favorite),Y.setMode(te.STARTER_SELECT),!0),"handler")}),v.push({label:u.t("menu:rename"),handler:o(()=>{Y.playSelect();let he=K.nickname?String(K.nickname):"";return he=decodeURIComponent(escape(atob(he))),Y.setModeWithoutClear(te.RENAME_POKEMON,{buttonActions:[ve=>{Y.playSelect(),K.nickname=ve;const _e=decodeURIComponent(escape(atob(K.nickname)));_e.length>0?this.pokemonNameText.setText(_e):this.pokemonNameText.setText(this.lastSpecies.name),Y.setMode(te.STARTER_SELECT)},()=>{Y.setMode(te.STARTER_SELECT)}]},he),!0},"handler")});const ie=B.candyCount,Be=o(()=>{const he=[];if(!(Re&Hs.UNLOCKED)){const Le=jT(tA[this.lastSpecies.speciesId]);he.push({label:`x${Le} ${u.t("starterSelectUiHandler:unlockPassive")} (${nA[this.lastSpecies.getPassiveAbility()].name})`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||ie>=Le?(B.passiveAttr|=Hs.UNLOCKED|Hs.ENABLED,xe.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=Le),this.pokemonCandyCountText.setText(`x${B.candyCount}`),a.gameData.saveSystem().then(Ee=>{if(!Ee)return a.reset(!0)}),Y.setMode(te.STARTER_SELECT),this.setSpeciesDetails(this.lastSpecies),a.playSound("se/buy"),H&&(this.updateCandyUpgradeDisplay(H),H.starterPassiveBgs.setVisible(!!a.gameData.starterData[this.lastSpecies.speciesId].passiveAttr)),!0):!1,"handler"),item:"candy",itemArgs:KE[this.lastSpecies.speciesId]})}const ve=B.valueReduction;if(ve<b6){const Le=qT(tA[this.lastSpecies.speciesId])[ve];he.push({label:`x${Le} ${u.t("starterSelectUiHandler:reduceCost")}`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||ie>=Le?(B.valueReduction++,xe.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=Le),this.pokemonCandyCountText.setText(`x${B.candyCount}`),a.gameData.saveSystem().then(Ee=>{if(!Ee)return a.reset(!0)}),this.tryUpdateValue(0),Y.setMode(te.STARTER_SELECT),a.playSound("se/buy"),H&&(this.updateStarterValueLabel(H),this.updateCandyUpgradeDisplay(H)),!0):!1,"handler"),item:"candy",itemArgs:KE[this.lastSpecies.speciesId]})}const _e=eS(tA[this.lastSpecies.speciesId]);he.push({label:`x${_e} ${u.t("starterSelectUiHandler:sameSpeciesEgg")}`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||ie>=_e?a.gameData.eggs.length>=99&&!xe.UNLIMITED_EGG_COUNT_OVERRIDE?(this.showText(u.t("egg:tooManyEggs"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),2e3,!1,void 0,!0),!1):(xe.FREE_CANDY_UPGRADE_OVERRIDE||(B.candyCount-=_e),this.pokemonCandyCountText.setText(`x${B.candyCount}`),new sa({species:this.lastSpecies.speciesId,sourceType:VE.SAME_SPECIES_EGG}).addEggToGameData(),a.gameData.saveSystem().then(Ee=>{if(!Ee)return a.reset(!0)}),Y.setMode(te.STARTER_SELECT),a.playSound("se/buy"),H&&this.updateCandyUpgradeDisplay(H),!0):!1,"handler"),item:"candy",itemArgs:KE[this.lastSpecies.speciesId]}),he.push({label:u.t("menu:cancel"),handler:o(()=>(Y.setMode(te.STARTER_SELECT),!0),"handler")}),Y.setModeWithoutClear(te.OPTION_SELECT,{options:he,yOffset:47})},"showUseCandies");v.push({label:u.t("menuUiHandler:POKEDEX"),handler:o(()=>(Y.setMode(te.STARTER_SELECT).then(()=>{const he={shiny:K.shiny,variant:K.variant,form:K.form,female:K.female};Y.setOverlayMode(te.POKEDEX_PAGE,this.lastSpecies,he)}),!0),"handler")}),IA.hasOwnProperty(this.lastSpecies.speciesId)||v.push({label:u.t("starterSelectUiHandler:useCandies"),handler:o(()=>(Y.setMode(te.STARTER_SELECT).then(()=>Be()),!0),"handler")}),v.push({label:u.t("menu:cancel"),handler:o(()=>(Y.setMode(te.STARTER_SELECT),!0),"handler")}),Y.setModeWithoutClear(te.OPTION_SELECT,{options:v,yOffset:47}),M=!0}}else{const Y=a.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId));switch(A){case X.CYCLE_SHINY:if(this.canCycleShiny)if(K.shiny===!1){const v=a.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)),Z=K.variant?K.variant:v.variant;this.setSpeciesDetails(this.lastSpecies,{shiny:!0,variant:Z}),a.playSound("se/sparkle");const z=lE(Z);this.pokemonShinyIcon.setFrame(DO(Z)),this.pokemonShinyIcon.setTint(z),this.pokemonShinyIcon.setVisible(!0),K.shiny=!0}else{let v=Y.variant;do if(v=(v+1)%3,v===0){if(this.speciesStarterDexEntry.caughtAttr&de.DEFAULT_VARIANT)break}else if(v===1){if(this.speciesStarterDexEntry.caughtAttr&de.VARIANT_2)break}else if(this.speciesStarterDexEntry.caughtAttr&de.VARIANT_3)break;while(v!==Y.variant);if(K.variant=v,this.speciesStarterDexEntry.caughtAttr&de.NON_SHINY&&v<=Y.variant)this.setSpeciesDetails(this.lastSpecies,{shiny:!1,variant:0}),this.pokemonShinyIcon.setVisible(!1),M=!0,K.shiny=!1;else{this.setSpeciesDetails(this.lastSpecies,{variant:v});const Z=lE(v);this.pokemonShinyIcon.setFrame(DO(v)),this.pokemonShinyIcon.setTint(Z),M=!0}}break;case X.CYCLE_FORM:if(this.canCycleForm){const v=this.lastSpecies.forms.length;let Z=Y.formIndex;do if(Z=(Z+1)%v,this.lastSpecies.forms[Z].isStarterSelectable&&this.speciesStarterDexEntry.caughtAttr&a.gameData.getFormAttr(Z))break;while(Z!==Y.formIndex);K.form=Z,K.tera=this.lastSpecies.forms[Z].type1,this.setSpeciesDetails(this.lastSpecies,{formIndex:Z,teraType:K.tera}),M=!0}break;case X.CYCLE_GENDER:this.canCycleGender&&(K.female=!Y.female,this.setSpeciesDetails(this.lastSpecies,{female:!Y.female}),M=!0);break;case X.CYCLE_ABILITY:if(this.canCycleAbility){const v=this.lastSpecies.getAbilityCount(),Z=a.gameData.starterData[this.lastSpecies.speciesId].abilityAttr,z=Z&hE.ABILITY_1;let q=this.abilityCursor;do if(q=(q+1)%v,q===0){if(z)break}else if(q===1){this.lastSpecies.ability1===this.lastSpecies.ability2&&z&&(q=(q+1)%v);break}else if(Z&hE.ABILITY_HIDDEN)break;while(q!==this.abilityCursor);K.ability=q;const{visible:J}=a.ui.getTooltip();if(J&&this.activeTooltip==="ABILITY"){const Ae=nA[this.lastSpecies.getAbility(q)];a.ui.editTooltip(`${Ae.name}`,`${Ae.description}`)}this.setSpeciesDetails(this.lastSpecies,{abilityIndex:q}),M=!0}break;case X.CYCLE_NATURE:if(this.canCycleNature){const v=a.gameData.getNaturesForAttr((f=this.speciesStarterDexEntry)==null?void 0:f.natureAttr),Z=v.indexOf(this.natureCursor),z=v[Z<v.length-1?Z+1:0];K.nature=z,this.setSpeciesDetails(this.lastSpecies,{natureIndex:z}),M=!0}break;case X.CYCLE_TERA:if(this.canCycleTera){const v=ms(this.lastSpecies.speciesId,K.form??0);v.type1===this.teraCursor&&!Pe(v.type2)?(K.tera=v.type2,this.setSpeciesDetails(this.lastSpecies,{teraType:v.type2})):(K.tera=v.type1,this.setSpeciesDetails(this.lastSpecies,{teraType:v.type1})),M=!0}break;case X.UP:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===0?(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.randomCursorObj.setVisible(!0)):(this.starterIconsCursorIndex--,this.moveStarterIconsCursor(this.starterIconsCursorIndex)),M=!0):r>0?(this.scrollCursor>0&&r-this.scrollCursor===0&&(this.scrollCursor--,this.updateScroll()),M=this.setCursor(this.cursor-9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),M=!0);break;case X.DOWN:this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex<=this.starterSpecies.length-2?(this.starterIconsCursorIndex++,this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),M=!0):r<I-1?(r-this.scrollCursor===8&&this.scrollCursor++,M=this.setCursor(this.cursor+9),this.updateScroll()):I>1?(this.scrollCursor=0,this.updateScroll(),M=this.setCursor(this.cursor%9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.filteredStarterContainers[this.cursor]),this.setFilterMode(!0),M=!0);break;case X.LEFT:if(!this.starterIconsCursorObj.visible)this.cursor%9!==0?M=this.setCursor(this.cursor-1):(U===0?(this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)):this.starterSpecies.length===0?M=this.setCursor(this.cursor+Math.min(8,n-this.cursor)):U<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=Z6(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),M=!0);else if(n>0){const v=X6(this.starterIconsCursorIndex,C);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+v*9+8,N)),M=!0}else M=!1;break;case X.RIGHT:if(!this.starterIconsCursorObj.visible)this.cursor%9<(r<I-1?8:(n-1)%9)?M=this.setCursor(this.cursor+1):(U===0?(this.cursorObj.setVisible(!1),this.randomCursorObj.setVisible(!0)):this.starterSpecies.length===0?M=this.setCursor(this.cursor-Math.min(8,this.cursor%9)):U<7?(this.cursorObj.setVisible(!1),this.starterIconsCursorIndex=Z6(this.cursorObj.y-1,this.starterSpecies.length),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):(this.cursorObj.setVisible(!1),this.setSpecies(null),this.startCursorObj.setVisible(!0)),M=!0);else if(n>0){const v=X6(this.starterIconsCursorIndex,C);this.starterIconsCursorObj.setVisible(!1),this.cursorObj.setVisible(!0),this.setCursor(Math.min(L+v*9,N-N%9)),M=!0}else M=!1;break}}}return M?D.playSelect():h&&D.playError(),M||h}isInParty(A){let s=0,R=!1;for(let n=0;n<this.starterSpecies.length;n++)if(this.starterSpecies[n]===A){R=!0,s=n;break}return[R,s]}addToParty(A,s,R,n,I,r,L=!1){const N=a.gameData.getSpeciesDexAttrProps(A,s);this.starterIcons[this.starterSpecies.length].setTexture(A.getIconAtlasKey(N.formIndex,N.shiny,N.variant)),this.starterIcons[this.starterSpecies.length].setFrame(A.getIconId(N.female,N.formIndex,N.shiny,N.variant)),this.checkIconId(this.starterIcons[this.starterSpecies.length],A,N.female,N.formIndex,N.shiny,N.variant),this.starterSpecies.push(A),this.starterAttr.push(s),this.starterAbilityIndexes.push(R),this.starterNatures.push(n),this.starterTeras.push(r),this.starterMovesets.push(I),(this.speciesLoaded.get(A.speciesId)||L)&&ms(A.speciesId,N.formIndex).cry(),this.updateInstructions()}updatePartyIcon(A,s){const R=a.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId));this.starterIcons[s].setTexture(A.getIconAtlasKey(R.formIndex,R.shiny,R.variant)),this.starterIcons[s].setFrame(A.getIconId(R.female,R.formIndex,R.shiny,R.variant)),this.checkIconId(this.starterIcons[s],A,R.female,R.formIndex,R.shiny,R.variant)}switchMoveHandler(A,s,R){var L,N,l,C,U;const n=this.lastSpecies.speciesId,I=(L=this.starterMoveset)==null?void 0:L.indexOf(s);this.starterMoveset[A]=s,I>-1&&(this.starterMoveset[I]=R);const r=a.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.dexAttrCursor);if(iR.hasOwnProperty(n)){(!a.gameData.starterData[n].moveset||Array.isArray(a.gameData.starterData[n].moveset))&&(a.gameData.starterData[n].moveset={[r.formIndex]:(N=this.starterMoveset)==null?void 0:N.slice(0)});const D=a.gameData.starterData[n].moveset;D.hasOwnProperty(r.formIndex)||(a.gameData.starterData[n].moveset[r.formIndex]=(l=this.starterMoveset)==null?void 0:l.slice(0)),D.hasOwnProperty(r.formIndex)&&D[r.formIndex][I]!==s&&(a.gameData.starterData[n].moveset[r.formIndex]=(C=this.starterMoveset)==null?void 0:C.slice(0))}else a.gameData.starterData[n].moveset=(U=this.starterMoveset)==null?void 0:U.slice(0);this.setSpeciesDetails(this.lastSpecies,{forSeen:!1}),this.starterMovesets.length&&Array.from({length:this.starterSpecies.length},(D,M)=>{this.starterSpecies[M].speciesId===n&&(this.starterMovesets[M]=this.starterMoveset)})}updateButtonIcon(A,s,R,n){var r;let I;if(s==="touch")switch(s="keyboard",A){case ot.Button_Cycle_Shiny:I="R.png";break;case ot.Button_Cycle_Form:I="F.png";break;case ot.Button_Cycle_Gender:I="G.png";break;case ot.Button_Cycle_Ability:I="E.png";break;case ot.Button_Cycle_Nature:I="N.png";break;case ot.Button_Cycle_Tera:I="V.png";break;case ot.Button_Stats:I="C.png";break}else I=(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(A);R.setTexture(s,I),R.setPosition(this.instructionRowX,this.instructionRowY),n.setPosition(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY),R.setVisible(!0),n.setVisible(!0),this.instructionsContainer.add([R,n]),this.instructionRowY+=8,this.instructionRowY>=24&&(this.instructionRowY=0,this.instructionRowX+=50)}updateFilterButtonIcon(A,s,R,n){var r;let I;s==="touch"?(s="keyboard",I="C.png"):I=(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(A),R.setTexture(s,I),R.setPosition(this.filterInstructionRowX,this.filterInstructionRowY),n.setPosition(this.filterInstructionRowX+this.instructionRowTextOffset,this.filterInstructionRowY),R.setVisible(!0),n.setVisible(!0),this.filterInstructionsContainer.add([R,n]),this.filterInstructionRowY+=8,this.filterInstructionRowY>=24&&(this.filterInstructionRowY=0,this.filterInstructionRowX+=50)}updateInstructions(){var s;this.instructionRowX=0,this.instructionRowY=0,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.hideInstructions(),this.instructionsContainer.removeAll(),this.filterInstructionsContainer.removeAll();let A;a.inputMethod==="gamepad"?A=a.inputController.getConfig(a.inputController.selectedDevice[oA.GAMEPAD]).padType:A=a.inputMethod,A&&((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr&&(this.canCycleShiny&&this.updateButtonIcon(ot.Button_Cycle_Shiny,A,this.shinyIconElement,this.shinyLabel),this.canCycleForm&&this.updateButtonIcon(ot.Button_Cycle_Form,A,this.formIconElement,this.formLabel),this.canCycleGender&&this.updateButtonIcon(ot.Button_Cycle_Gender,A,this.genderIconElement,this.genderLabel),this.canCycleAbility&&this.updateButtonIcon(ot.Button_Cycle_Ability,A,this.abilityIconElement,this.abilityLabel),this.canCycleNature&&this.updateButtonIcon(ot.Button_Cycle_Nature,A,this.natureIconElement,this.natureLabel),this.canCycleTera&&this.updateButtonIcon(ot.Button_Cycle_Tera,A,this.teraIconElement,this.teraLabel)),this.filterMode||this.updateFilterButtonIcon(ot.Button_Stats,A,this.goFilterIconElement,this.goFilterLabel))}getValueLimit(){const A=new je(0);switch(a.gameMode.modeId){case hA.ENDLESS:case hA.SPLICED_ENDLESS:A.value=15;break;default:A.value=10}return PR(rO.STARTER_POINTS,A),A.value}destroy(){this.starterContainers=[]}setCursor(A){var R,n;let s=!1;if(this.filterMode)s=this.filterBarCursor!==A,this.filterBarCursor=A,this.filterBar.setCursor(A);else{A=Math.max(Math.min(this.filteredStarterContainers.length-1,A),0),s=super.setCursor(A);const I=h_(A,this.scrollCursor);this.cursorObj.setPosition(I.x-1,I.y+1);const r=(R=this.filteredStarterContainers[A])==null?void 0:R.species;if(r){const L=this.getCurrentDexProps(r.speciesId),N=a.gameData.getSpeciesDexAttrProps(r,L),l=(n=this.starterPreferences[r.speciesId])!=null&&n.variant?this.starterPreferences[r.speciesId].variant:N.variant,C=lE(l);this.pokemonShinyIcon.setFrame(DO(l)),this.pokemonShinyIcon.setTint(C),this.setSpecies(r),this.updateInstructions()}}return s}setFilterMode(A){return this.cursorObj.setVisible(!A),this.filterBar.cursorObj.setVisible(A),A!==this.filterMode?(this.filterMode=A,this.setCursor(A?this.filterBarCursor:this.cursor),A&&(this.setSpecies(null),this.updateInstructions()),!0):!1}moveStarterIconsCursor(A){this.starterIconsCursorObj.x=this.starterIcons[A].x+this.starterIconsCursorXOffset,this.starterIconsCursorObj.y=this.starterIcons[A].y+this.starterIconsCursorYOffset,this.starterSpecies.length>0?(this.starterIconsCursorObj.setVisible(!0),this.setSpecies(this.starterSpecies[A])):(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null))}getFriendship(A){let s=a.gameData.starterData[A].friendship;(!s||s===void 0)&&(s=0);const R=nl(tA[A]);return{currentFriendship:s,friendshipCap:R}}setSpecies(A){var R,n,I,r;this.speciesStarterDexEntry=A?a.gameData.dexData[A.speciesId]:null,this.dexAttrCursor=A?this.getCurrentDexProps(A.speciesId):0n,this.abilityCursor=A?a.gameData.getStarterSpeciesDefaultAbilityIndex(A):0,this.natureCursor=A?a.gameData.getSpeciesDefaultNature(A):0,this.teraCursor=A?A.type1:i.UNKNOWN,!A&&a.ui.getTooltip().visible&&a.ui.hideTooltip(),this.pokemonAbilityText.off("pointerover"),this.pokemonPassiveText.off("pointerover");const s=A?{...this.starterPreferences[A.speciesId]}:null;if(s!=null&&s.nature&&(this.natureCursor=s.nature),s!=null&&s.ability&&!Number.isNaN(s.ability)&&(this.abilityCursor=s.ability),s!=null&&s.tera&&(this.teraCursor=s.tera),this.statsMode&&((R=this.speciesStarterDexEntry)!=null&&R.caughtAttr?(this.statsContainer.setVisible(!0),this.showStats()):(this.statsContainer.setVisible(!1),this.statsContainer.updateIvs(null))),this.lastSpecies){const L=this.getCurrentDexProps(this.lastSpecies.speciesId),N=a.gameData.getSpeciesDexAttrProps(this.lastSpecies,L),l=this.allSpecies.indexOf(this.lastSpecies),C=this.starterContainers[l].icon;this.checkIconId(C,this.lastSpecies,N.female,N.formIndex,N.shiny,N.variant),this.iconAnimHandler.addOrUpdate(C,ss.NONE);const U=this.starterContainers[l].icon;a.tweens.getTweensOf(U).forEach(D=>D.resume())}if(this.lastSpecies=A,A&&((n=this.speciesStarterDexEntry)!=null&&n.seenAttr||(I=this.speciesStarterDexEntry)!=null&&I.caughtAttr)){if(this.pokemonNumberText.setText(ZR(A.speciesId,4)),s!=null&&s.nickname){const L=decodeURIComponent(escape(atob(s.nickname)));this.pokemonNameText.setText(L)}else this.pokemonNameText.setText(A.name);if((r=this.speciesStarterDexEntry)!=null&&r.caughtAttr){const L=KE[A.speciesId],N=a.gameData.getDexAttrLuck(this.speciesStarterDexEntry.caughtAttr);this.pokemonLuckText.setVisible(!!N),this.pokemonLuckText.setText(N.toString()),this.pokemonLuckText.setTint(lE(Math.min(N-1,2))),this.pokemonLuckLabelText.setVisible(this.pokemonLuckText.visible);let l=aa(G[A.growthRate]);const C=l.replace(" ","_");u.exists("growth:"+C)&&(l=u.t("growth:"+C)),this.pokemonGrowthRateText.setText(l),this.pokemonGrowthRateText.setColor(FC(A.growthRate)),this.pokemonGrowthRateText.setShadowColor(FC(A.growthRate,!0)),this.pokemonGrowthRateLabelText.setVisible(!0),this.pokemonUncaughtText.setVisible(!1),this.pokemonAbilityLabelText.setVisible(!0),this.pokemonPassiveLabelText.setVisible(!0),this.pokemonNatureLabelText.setVisible(!0),this.pokemonCaughtCountText.setText(`${this.speciesStarterDexEntry.caughtCount}`),A.speciesId===e.MANAPHY||A.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Wi(A)),this.pokemonHatchedCountText.setText(`${this.speciesStarterDexEntry.hatchedCount}`);const U=this.getCurrentDexProps(A.speciesId),D=a.gameData.getSpeciesDexAttrProps(A,U),M=D.variant,h=lE(M);if(this.pokemonShinyIcon.setFrame(DO(M)),this.pokemonShinyIcon.setTint(h),this.pokemonShinyIcon.setVisible(D.shiny),this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonFormText.setVisible(!0),IA.hasOwnProperty(A.speciesId))this.pokemonCaughtHatchedContainer.setY(16),this.pokemonShinyIcon.setY(135),this.pokemonShinyIcon.setFrame(DO(M)),[this.pokemonCandyContainer,this.pokemonHatchedIcon,this.pokemonHatchedCountText].map(K=>K.setVisible(!1)),this.pokemonFormText.setY(25);else{this.pokemonCaughtHatchedContainer.setY(25),this.pokemonShinyIcon.setY(117),this.pokemonCandyIcon.setTint(Es(bE(L[0]))),this.pokemonCandyOverlayIcon.setTint(Es(bE(L[1]))),this.pokemonCandyCountText.setText(`x${a.gameData.starterData[A.speciesId].candyCount}`),this.pokemonCandyContainer.setVisible(!0),this.pokemonFormText.setY(42),this.pokemonHatchedIcon.setVisible(!0),this.pokemonHatchedCountText.setVisible(!0);const{currentFriendship:K,friendshipCap:Y}=this.getFriendship(this.lastSpecies.speciesId),v=16-16*(K/Y);this.pokemonCandyDarknessOverlay.setCrop(0,0,16,v),this.pokemonCandyContainer.on("pointerover",()=>{a.ui.showTooltip("",`${K}/${Y}`,!0),this.activeTooltip="CANDY"}),this.pokemonCandyContainer.on("pointerout",()=>{a.ui.hideTooltip(),this.activeTooltip=void 0})}const _=this.allSpecies.indexOf(A),d=this.starterContainers[_].icon;this.isUpgradeAnimationEnabled()&&(a.tweens.getTweensOf(d).forEach(K=>K.pause()),d.x=-2,d.y=2),this.iconAnimHandler.addOrUpdate(d,ss.PASSIVE);const f=this.starterSpecies.indexOf(A);let H;if(f>-1)H=a.gameData.getSpeciesDexAttrProps(A,this.starterAttr[f]),this.setSpeciesDetails(A,{shiny:H.shiny,formIndex:H.formIndex,female:H.female,variant:H.variant,abilityIndex:this.starterAbilityIndexes[f],natureIndex:this.starterNatures[f],teraType:this.starterTeras[f]});else{const K=this.getCurrentDexProps(A.speciesId),Y=(s==null?void 0:s.ability)??a.gameData.getStarterSpeciesDefaultAbilityIndex(A),v=(s==null?void 0:s.nature)||a.gameData.getSpeciesDefaultNature(A);H=a.gameData.getSpeciesDexAttrProps(A,K),s!=null&&s.variant&&!Number.isNaN(s.variant)&&H.shiny&&(H.variant=s.variant),H.formIndex=(s==null?void 0:s.form)??H.formIndex,H.female=(s==null?void 0:s.female)??H.female,this.setSpeciesDetails(A,{shiny:H.shiny,formIndex:H.formIndex,female:H.female,variant:H.variant,abilityIndex:Y,natureIndex:v})}const B=ms(A.speciesId,H.formIndex);this.setTypeIcons(B.type1,B.type2),this.pokemonSprite.clearTint(),this.pokerusSpecies.includes(A)&&Za(LO.Pokerus)}else{this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!0),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1),this.teraIcon.setVisible(!1);const L=a.gameData.getSpeciesDefaultDexAttr(A,!0,!0),N=a.gameData.getStarterSpeciesDefaultAbilityIndex(A),l=a.gameData.getSpeciesDefaultNature(A),C=a.gameData.getSpeciesDexAttrProps(A,L);this.setSpeciesDetails(A,{shiny:C.shiny,formIndex:C.formIndex,female:C.female,variant:C.variant,abilityIndex:N,natureIndex:l,forSeen:!0}),this.pokemonSprite.setTint(8421504)}}else this.pokemonNumberText.setText(ZR(0,4)),this.pokemonNameText.setText(A?"???":""),this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1),this.pokemonShinyIcon.setVisible(!1),this.pokemonUncaughtText.setVisible(!!A),this.pokemonAbilityLabelText.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonNatureLabelText.setVisible(!1),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1),this.teraIcon.setVisible(!1),this.setSpeciesDetails(A,{shiny:!1,formIndex:0,female:!1,variant:0,abilityIndex:0,natureIndex:0}),this.pokemonSprite.clearTint()}setSpeciesDetails(A,s={}){var d,f,H,B,K,Y;let{shiny:R,formIndex:n,female:I,variant:r,abilityIndex:L,natureIndex:N,teraType:l}=s;const C=s.forSeen??!1,U=A?a.gameData.getSpeciesDexAttrProps(A,this.dexAttrCursor):null,D=this.abilityCursor>-1?this.abilityCursor:a.gameData.getStarterSpeciesDefaultAbilityIndex(A),M=this.natureCursor>-1?this.natureCursor:a.gameData.getSpeciesDefaultNature(A);this.dexAttrCursor=0n,this.abilityCursor=-1,this.natureCursor=-1,this.teraCursor=i.UNKNOWN;const h=(A==null?void 0:A.genderDiffs)&&!Pe(I)||!Pe(n)||!Pe(R)||!Pe(r);if(this.activeTooltip==="CANDY")if(this.lastSpecies&&this.pokemonCandyContainer.visible){const{currentFriendship:v,friendshipCap:Z}=this.getFriendship(this.lastSpecies.speciesId);a.ui.editTooltip("",`${v}/${Z}`)}else a.ui.hideTooltip();if((d=A==null?void 0:A.forms)!=null&&d.find(v=>v.formKey==="female")&&(I!==void 0?n=I?1:0:n!==void 0&&(I=n===1)),A){this.dexAttrCursor|=(R!==void 0?!R:!(R=U==null?void 0:U.shiny))?de.NON_SHINY:de.SHINY,this.dexAttrCursor|=(I!==void 0?!I:!(I=U==null?void 0:U.female))?de.MALE:de.FEMALE,this.dexAttrCursor|=(r!==void 0?!r:!(r=U==null?void 0:U.variant))?de.DEFAULT_VARIANT:r===1?de.VARIANT_2:de.VARIANT_3,this.dexAttrCursor|=a.gameData.getFormAttr(n!==void 0?n:n=U.formIndex),this.abilityCursor=L!==void 0?L:L=D,this.natureCursor=N!==void 0?N:N=M,this.teraCursor=Pe(l)?l=A.type1:l;const[v,Z]=this.isInParty(A);v&&this.updatePartyIcon(A,Z)}if(this.pokemonSprite.setVisible(!1),this.pokemonPassiveLabelText.setVisible(!1),this.pokemonPassiveText.setVisible(!1),this.pokemonPassiveDisabledIcon.setVisible(!1),this.pokemonPassiveLockedIcon.setVisible(!1),this.teraIcon.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),this.starterMoveset=null,this.speciesStarterMoves=[],A){const v=a.gameData.dexData[A.speciesId],Z=a.gameData.starterData[A.speciesId].abilityAttr,z=((f=a.gameData.dexData[A.speciesId])==null?void 0:f.caughtAttr)||BigInt(0);if(!v.caughtAttr){const q=a.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId)),J=a.gameData.getStarterSpeciesDefaultAbilityIndex(A),Ae=a.gameData.getSpeciesDefaultNature(A);(R===void 0||R!==q.shiny)&&(R=q.shiny),(n===void 0||n!==q.formIndex)&&(n=q.formIndex),(I===void 0||I!==q.female)&&(I=q.female),(r===void 0||r!==q.variant)&&(r=q.variant),(L===void 0||L!==J)&&(L=J),(N===void 0||N!==Ae)&&(N=Ae)}if(this.shinyOverlay.setVisible(R??!1),this.pokemonNumberText.setColor(this.getTextColor(R?k.SUMMARY_GOLD:k.SUMMARY,!1)),this.pokemonNumberText.setShadowColor(this.getTextColor(R?k.SUMMARY_GOLD:k.SUMMARY,!0)),C?(H=this.speciesStarterDexEntry)!=null&&H.seenAttr:(B=this.speciesStarterDexEntry)!=null&&B.caughtAttr){const q=this.starterSpecies.indexOf(A);q>-1&&(this.starterAttr[q]=this.dexAttrCursor,this.starterAbilityIndexes[q]=this.abilityCursor,this.starterNatures[q]=this.natureCursor,this.starterTeras[q]=this.teraCursor);const J=new Pt(!1);this.assetLoadCancelled=J,h?A.loadAssets(I,n,R,r,!0).then(()=>{J.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(I,n,R,r)),this.pokemonSprite.setPipelineData("shiny",R),this.pokemonSprite.setPipelineData("variant",r),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(I,n,R,r)),this.pokemonSprite.setVisible(!this.statsMode))}):this.pokemonSprite.setVisible(!this.statsMode);const Ae=this.filteredStarterContainers.find(Le=>Le.species.speciesId===A.speciesId);Ae&&(Ae.icon.setTexture(A.getIconAtlasKey(n,R,r),A.getIconId(I,n,R,r)),Ae.checkIconId(I,n,R,r));const Q=!!(z&de.NON_SHINY),Re=!!(z&de.SHINY),W=[de.DEFAULT_VARIANT,de.VARIANT_2,de.VARIANT_3].filter(Le=>z&Le);this.canCycleShiny=Q&&Re||Re&&W.length>1;const ie=!!(z&de.MALE),Be=!!(z&de.FEMALE);this.canCycleGender=ie&&Be;const he=Z&hE.ABILITY_1;let ve=Z&hE.ABILITY_2;const _e=Z&hE.ABILITY_HIDDEN;he&&ve&&A.ability1===A.ability2&&(ve=0),this.canCycleAbility=[he,ve,_e].filter(Le=>Le).length>1,this.canCycleForm=A.forms.filter(Le=>{var Ee;return Le.isStarterSelectable||!((Ee=mR[A.speciesId])!=null&&Ee.find(se=>se.formKey))}).map((Le,Ee)=>v.caughtAttr&a.gameData.getFormAttr(Ee)).filter(Le=>Le).length>1,this.canCycleNature=a.gameData.getNaturesForAttr(v.natureAttr).length>1,this.canCycleTera=!this.statsMode&&a.gameData.achvUnlocks.hasOwnProperty(ht.TERASTALLIZE.id)&&!Pe(ms(A.speciesId,n??0).type2)}if(v.caughtAttr&&A.malePercent!==null){const q=I?At.FEMALE:At.MALE;this.pokemonGenderText.setText(kI(q)),this.pokemonGenderText.setColor(sn(q)),this.pokemonGenderText.setShadowColor(sn(q,!0))}else this.pokemonGenderText.setText("");if(v.caughtAttr){let q;((K=this.lastSpecies.forms)==null?void 0:K.length)>1?q=nA[this.lastSpecies.forms[n??0].getAbility(L)]:q=nA[this.lastSpecies.getAbility(L)],this.pokemonAbilityText.setText(q.name);const J=L===(this.lastSpecies.ability2?2:1);this.pokemonAbilityText.setColor(this.getTextColor(J?k.SUMMARY_GOLD:k.SUMMARY_ALT)),this.pokemonAbilityText.setShadowColor(this.getTextColor(J?k.SUMMARY_GOLD:k.SUMMARY_ALT,!0));const Ae=a.gameData.starterData[A.speciesId].passiveAttr,Q=nA[this.lastSpecies.getPassiveAbility(n)];if(this.pokemonAbilityText.visible&&(this.activeTooltip==="ABILITY"&&a.ui.editTooltip(`${q.name}`,`${q.description}`),this.pokemonAbilityText.on("pointerover",()=>{a.ui.showTooltip(`${q.name}`,`${q.description}`,!0),this.activeTooltip="ABILITY"}),this.pokemonAbilityText.on("pointerout",()=>{a.ui.hideTooltip(),this.activeTooltip=void 0})),Q){const _e=!!(Ae&Hs.UNLOCKED),Le=!!(Ae&Hs.ENABLED),Ee=_e&&Le?k.SUMMARY_ALT:k.SUMMARY_GRAY,se=_e&&Le?1:.5;this.pokemonPassiveLabelText.setVisible(!0),this.pokemonPassiveLabelText.setColor(this.getTextColor(k.SUMMARY_ALT)),this.pokemonPassiveLabelText.setShadowColor(this.getTextColor(k.SUMMARY_ALT,!0)),this.pokemonPassiveText.setVisible(!0),this.pokemonPassiveText.setText(Q.name),this.pokemonPassiveText.setColor(this.getTextColor(Ee)),this.pokemonPassiveText.setAlpha(se),this.pokemonPassiveText.setShadowColor(this.getTextColor(Ee,!0)),this.activeTooltip==="PASSIVE"&&a.ui.editTooltip(`${Q.name}`,`${Q.description}`),this.pokemonPassiveText.visible&&(this.pokemonPassiveText.on("pointerover",()=>{a.ui.showTooltip(`${Q.name}`,`${Q.description}`,!0),this.activeTooltip="PASSIVE"}),this.pokemonPassiveText.on("pointerout",()=>{a.ui.hideTooltip(),this.activeTooltip=void 0}));const Ne={x:this.pokemonPassiveText.x+this.pokemonPassiveText.displayWidth+1,y:this.pokemonPassiveText.y+this.pokemonPassiveText.displayHeight/2};this.pokemonPassiveDisabledIcon.setVisible(_e&&!Le),this.pokemonPassiveDisabledIcon.setPosition(Ne.x,Ne.y),this.pokemonPassiveLockedIcon.setVisible(!_e),this.pokemonPassiveLockedIcon.setPosition(Ne.x,Ne.y)}else this.activeTooltip==="PASSIVE"&&a.ui.hideTooltip();this.pokemonNatureText.setText(zR(N,!0,!0,!1,a.uiTheme));let Re;if(iR.hasOwnProperty(A.speciesId)&&n&&iR[A.speciesId].hasOwnProperty(n)?Re=iR[A.speciesId][n]:Re=vr[A.speciesId],this.speciesStarterMoves.push(...Re.filter(_e=>_e[0]>0&&_e[0]<=5).map(_e=>_e[1])),_E.hasOwnProperty(A.speciesId))for(let _e=0;_e<4;_e++)a.gameData.starterData[A.speciesId].eggMoves&1<<_e&&this.speciesStarterMoves.push(_E[A.speciesId][_e]);const W=a.gameData.starterData[A.speciesId].moveset,ie=W?Array.isArray(W)?W:W[n]:null,Be=this.speciesStarterMoves.concat(_E.hasOwnProperty(A.speciesId)?_E[A.speciesId].filter((_e,Le)=>a.gameData.starterData[A.speciesId].eggMoves&1<<Le):[]);this.starterMoveset=(ie||this.speciesStarterMoves.slice(0,4)).filter(_e=>Be.find(Le=>Le===_e)),this.starterMoveset.length<4&&this.starterMoveset.length<Be.length&&this.starterMoveset.push(...Be.filter(_e=>{var Le;return((Le=this.starterMoveset)==null?void 0:Le.indexOf(_e))===-1}).slice(0,4-this.starterMoveset.length)),this.starterMoveset=this.starterMoveset.filter((_e,Le)=>{var Ee;return((Ee=this.starterMoveset)==null?void 0:Ee.indexOf(_e))===Le});const he=ms(A.speciesId,n),ve=A.getFormNameToDisplay(n);this.pokemonFormText.setText(ve),this.setTypeIcons(he.type1,he.type2),this.teraIcon.setFrame(i[this.teraCursor].toLowerCase()),this.teraIcon.setVisible(!this.statsMode&&a.gameData.achvUnlocks.hasOwnProperty(ht.TERASTALLIZE.id))}else this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.teraIcon.setVisible(!1),this.setTypeIcons(null,null)}else this.shinyOverlay.setVisible(!1),this.pokemonNumberText.setColor(this.getTextColor(k.SUMMARY)),this.pokemonNumberText.setShadowColor(this.getTextColor(k.SUMMARY,!0)),this.pokemonGenderText.setText(""),this.pokemonAbilityText.setText(""),this.pokemonPassiveText.setText(""),this.pokemonNatureText.setText(""),this.teraIcon.setVisible(!1),this.setTypeIcons(null,null);this.starterMoveset||(this.starterMoveset=this.speciesStarterMoves.slice(0,4));for(let v=0;v<4;v++){const Z=v<this.starterMoveset.length?Ve[this.starterMoveset[v]]:null;this.pokemonMoveBgs[v].setFrame(i[Z?Z.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonMoveLabels[v].setText(Z?Z.name:"-"),this.pokemonMoveContainers[v].setVisible(!!Z)}const _=A&&_E.hasOwnProperty(A.speciesId);for(let v=0;v<4;v++){const Z=_?Ve[_E[A.speciesId][v]]:null,z=Z&&a.gameData.starterData[A.speciesId].eggMoves&1<<v;this.pokemonEggMoveBgs[v].setFrame(i[Z?Z.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[v].setText(Z&&z?Z.name:"???")}this.pokemonEggMovesContainer.setVisible(!!((Y=this.speciesStarterDexEntry)!=null&&Y.caughtAttr)&&_),this.pokemonAdditionalMoveCountLabel.setText(`(+${Math.max(this.speciesStarterMoves.length-4,0)})`),this.pokemonAdditionalMoveCountLabel.setVisible(this.speciesStarterMoves.length>4),this.tryUpdateValue(),this.updateInstructions()}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(i[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(i[s].toLowerCase())):this.type2Icon.setVisible(!1)}popStarter(A){this.starterSpecies.splice(A,1),this.starterAttr.splice(A,1),this.starterAbilityIndexes.splice(A,1),this.starterNatures.splice(A,1),this.starterTeras.splice(A,1),this.starterMovesets.splice(A,1);for(let s=0;s<this.starterSpecies.length;s++){const R=this.starterSpecies[s],n=this.getCurrentDexProps(R.speciesId),I=a.gameData.getSpeciesDexAttrProps(R,n);this.starterIcons[s].setTexture(R.getIconAtlasKey(I.formIndex,I.shiny,I.variant)),this.starterIcons[s].setFrame(R.getIconId(I.female,I.formIndex,I.shiny,I.variant)),this.checkIconId(this.starterIcons[s],R,I.female,I.formIndex,I.shiny,I.variant),s>=A&&(this.starterCursorObjs[s].setPosition(this.starterCursorObjs[s+1].x,this.starterCursorObjs[s+1].y),this.starterCursorObjs[s].setVisible(this.starterCursorObjs[s+1].visible))}this.starterCursorObjs[this.starterSpecies.length].setVisible(!1),this.starterIcons[this.starterSpecies.length].setTexture("pokemon_icons_0"),this.starterIcons[this.starterSpecies.length].setFrame("unknown"),this.starterIconsCursorObj.visible?(this.starterIconsCursorIndex===this.starterSpecies.length&&(this.starterSpecies.length>0?this.starterIconsCursorIndex--:(this.starterIconsCursorObj.setVisible(!1),this.setSpecies(null),this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.moveStarterIconsCursor(this.starterIconsCursorIndex)):this.startCursorObj.visible&&this.starterSpecies.length===0&&(this.startCursorObj.setVisible(!1),this.filteredStarterContainers.length>0?(this.cursorObj.setVisible(!0),this.setCursor(0+this.scrollCursor*9)):(this.filterBarCursor=Math.max(1,this.filterBar.numFilters-1),this.setFilterMode(!0))),this.tryUpdateValue()}updateStarterValueLabel(A){const s=A.species.speciesId,R=tA[s],n=a.gameData.getSpeciesStarterValue(s);A.cost=n;let I=n.toString();I.startsWith("0.")&&(I=I.slice(1)),A.label.setText(I);let r;switch(R-n){case 0:r=k.WINDOW;break;case 1:case .5:r=k.SUMMARY_BLUE;break;default:r=k.SUMMARY_GOLD;break}R-n>0&&(A.label.setColor(this.getTextColor(r)),A.label.setShadowColor(this.getTextColor(r,!0)))}tryUpdateValue(A,s){const n=this.starterSpecies.map(C=>C.generation).reduce((C,U,D)=>C+=a.gameData.getSpeciesStarterValue(this.starterSpecies[D].speciesId),0)+(A||0),I=this.getValueLimit(),r=n>I;let L=n.toString();if(L.startsWith("0.")&&(L=L.slice(1)),this.valueLimitLabel.setText(`${L}/${I}`),this.valueLimitLabel.setColor(this.getTextColor(r?k.SUMMARY_PINK:k.TOOLTIP_CONTENT)),this.valueLimitLabel.setShadowColor(this.getTextColor(r?k.SUMMARY_PINK:k.TOOLTIP_CONTENT,!0)),r)return a.time.delayedCall(Ot(500),()=>this.tryUpdateValue()),!1;let N=this.isPartyValid();if(s){const C=this.filteredStarterContainers[this.cursor].species,U=ui(C,a.gameData.getSpeciesDexAttrProps(C,this.getCurrentDexProps(C.speciesId)),!1);N=N||U}const l=I-n;for(let C=0;C<this.allSpecies.length;C++){const U=a.gameData.getSpeciesStarterValue(this.allSpecies[C].speciesId),D=this.starterContainers[C].icon,M=ui(this.allSpecies[C],a.gameData.getSpeciesDexAttrProps(this.allSpecies[C],this.getCurrentDexProps(this.allSpecies[C].speciesId)),N),h=l>=U&&M,_=this.isInParty(this.allSpecies[C])[0];h||_&&l>=U?D.setAlpha(1):D.setAlpha(.375)}return!0}tryExit(){this.blockInput=!0;const A=this.getUi(),s=o(()=>{A.setMode(te.STARTER_SELECT),this.clearText(),this.blockInput=!1},"cancel");return A.showText(u.t("starterSelectUiHandler:confirmExit"),null,()=>{A.setModeWithoutClear(te.CONFIRM,()=>{var R;A.setMode(te.STARTER_SELECT),a.clearPhaseQueue(),a.gameMode.isChallenge?(a.pushPhase(new Du),a.pushPhase(new $r)):a.pushPhase(new NI),this.clearText(),(R=a.getCurrentPhase())==null||R.end()},s,null,null,19)}),!0}tryStart(A=!1){if(!this.starterSpecies.length)return!1;const s=this.getUi(),R=o(()=>{s.setMode(te.STARTER_SELECT),A||this.popStarter(this.starterSpecies.length-1),this.clearText()},"cancel");return this.isPartyValid()?s.showText(u.t("starterSelectUiHandler:confirmStartTeam"),null,()=>{s.setModeWithoutClear(te.CONFIRM,()=>{o(()=>{a.money=a.gameMode.getStartingMoney(),s.setMode(te.STARTER_SELECT);const r=this,L=this.starterSelectCallback;this.starterSelectCallback=null,L==null||L(new Array(this.starterSpecies.length).fill(0).map((N,l)=>{var U;const C=r.starterSpecies[l];return{species:C,dexAttr:r.starterAttr[l],abilityIndex:r.starterAbilityIndexes[l],passive:!(a.gameData.starterData[C.speciesId].passiveAttr^(Hs.ENABLED|Hs.UNLOCKED)),nature:r.starterNatures[l],teraType:r.starterTeras[l],moveset:r.starterMovesets[l],pokerus:r.pokerusSpecies.includes(C),nickname:(U=r.starterPreferences[C.speciesId])==null?void 0:U.nickname}}))},"startRun")()},R,null,null,19)}):(this.tutorialActive=!0,this.showText(u.t("starterSelectUiHandler:invalidParty"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),void 0,!0)),!0}isPartyValid(){let A=!1;for(let s=0;s<this.starterSpecies.length;s++){const R=this.starterSpecies[s],n=ui(R,a.gameData.getSpeciesDexAttrProps(R,this.getCurrentDexProps(R.speciesId)),!1);A=A||n}return A}getCurrentDexProps(A){var n,I,r,L,N,l,C;let s=0n;const R=a.gameData.dexData[A].caughtAttr;return(n=this.starterPreferences[A])!=null&&n.female||(R&de.FEMALE)>0n&&(R&de.MALE)===0n?s+=de.FEMALE:s+=de.MALE,(I=this.starterPreferences[A])!=null&&I.shiny||(R&de.SHINY)>0n&&((r=this.starterPreferences[A])==null?void 0:r.shiny)!==!1?(s+=de.SHINY,((L=this.starterPreferences[A])==null?void 0:L.variant)!==void 0?s+=BigInt(Math.pow(2,(N=this.starterPreferences[A])==null?void 0:N.variant))*de.DEFAULT_VARIANT:(R&de.VARIANT_3)>0?s+=de.VARIANT_3:(R&de.VARIANT_2)>0?s+=de.VARIANT_2:s+=de.DEFAULT_VARIANT):(s+=de.NON_SHINY,s+=de.DEFAULT_VARIANT),(l=this.starterPreferences[A])!=null&&l.form?s+=BigInt(Math.pow(2,(C=this.starterPreferences[A])==null?void 0:C.form))*de.DEFAULT_FORM:s+=a.gameData.getFormAttr(a.gameData.getFormIndex(R)),s}toggleStatsMode(A){var s;if(A===void 0&&(A=!this.statsMode),A)this.showStats(),this.statsMode=!0,this.pokemonSprite.setVisible(!1),this.teraIcon.setVisible(!1),this.canCycleTera=!1,this.updateInstructions();else{this.statsMode=!1,this.statsContainer.setVisible(!1),this.pokemonSprite.setVisible(!!((s=this.speciesStarterDexEntry)!=null&&s.caughtAttr)),this.statsContainer.updateIvs(null),this.teraIcon.setVisible(a.gameData.achvUnlocks.hasOwnProperty(ht.TERASTALLIZE.id));const n=a.gameData.getSpeciesDexAttrProps(this.lastSpecies,this.getCurrentDexProps(this.lastSpecies.speciesId)).formIndex;this.canCycleTera=!this.statsMode&&a.gameData.achvUnlocks.hasOwnProperty(ht.TERASTALLIZE.id)&&!Pe(ms(this.lastSpecies.speciesId,n??0).type2),this.updateInstructions()}}showStats(){this.speciesStarterDexEntry&&(this.statsContainer.setVisible(!0),this.statsContainer.updateIvs(this.speciesStarterDexEntry.ivs))}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}hideInstructions(){this.shinyIconElement.setVisible(!1),this.shinyLabel.setVisible(!1),this.formIconElement.setVisible(!1),this.formLabel.setVisible(!1),this.genderIconElement.setVisible(!1),this.genderLabel.setVisible(!1),this.abilityIconElement.setVisible(!1),this.abilityLabel.setVisible(!1),this.natureIconElement.setVisible(!1),this.natureLabel.setVisible(!1),this.teraIconElement.setVisible(!1),this.teraLabel.setVisible(!1),this.goFilterIconElement.setVisible(!1),this.goFilterLabel.setVisible(!1)}clear(){for(super.clear(),Jz(this.starterPreferences),this.cursor=-1,this.hideInstructions(),this.activeTooltip=void 0,a.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1;this.starterSpecies.length;)this.popStarter(this.starterSpecies.length-1);this.statsMode&&this.toggleStatsMode(!1)}checkIconId(A,s,R,n,I,r){A.frame.name!==s.getIconId(R,n,I,r)&&(`${s.name}${A.frame.name}${R}${n}${I}${r}`,A.setTexture(s.getIconAtlasKey(n,!1,r)),A.setFrame(s.getIconId(R,n,!1,r)))}clearStarterPreferences(){this.starterPreferences={}}};o(Xp,"StarterSelectUiHandler");let HS=Xp;const Qp=class Qp extends Js{constructor(){super(te.TARGET_SELECT),this.isMultipleTargets=!1,this.targetBattleInfoMoveTween=[],this.cursor=-1}setup(){}show(A){if(A.length<3)return!1;super.show(A),this.fieldIndex=A[0],this.move=A[1],this.targetSelectCallback=A[2];const s=a.getPlayerField()[this.fieldIndex],R=Fn(s,this.move);return this.targets=R.targets,this.isMultipleTargets=R.multiple??!1,this.targets.length?(this.enemyModifiers=a.getModifierBar(!0),this.fieldIndex===Wt.PLAYER?this.resetCursor(this.cursor0,s):this.fieldIndex===Wt.PLAYER_2&&this.resetCursor(this.cursor1,s),!0):!1}resetCursor(A,s){Pe(A)||([Wt.PLAYER,Wt.PLAYER_2].includes(A)||s.battleSummonData.waveTurnCount===1)&&(A=-1),this.setCursor(this.targets.includes(A)?A:this.targets[0])}processInput(A){const s=this.getUi();let R=!1;if(A===X.ACTION||A===X.CANCEL){const n=this.isMultipleTargets?this.targets:[this.cursor];this.targetSelectCallback(A===X.ACTION?n:[]),R=!0,this.fieldIndex===Wt.PLAYER?(Pe(this.cursor0)||this.cursor0!==this.cursor)&&(this.cursor0=this.cursor):this.fieldIndex===Wt.PLAYER_2&&(Pe(this.cursor1)||this.cursor1!==this.cursor)&&(this.cursor1=this.cursor)}else if(this.isMultipleTargets)R=!1;else switch(A){case X.UP:this.cursor<Wt.ENEMY&&this.targets.findIndex(n=>n>=Wt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(n=>n>=Wt.ENEMY)));break;case X.DOWN:this.cursor>=Wt.ENEMY&&this.targets.findIndex(n=>n<Wt.ENEMY)>-1&&(R=this.setCursor(this.targets.find(n=>n<Wt.ENEMY)));break;case X.LEFT:this.cursor%2&&this.targets.findIndex(n=>n===this.cursor-1)>-1&&(R=this.setCursor(this.cursor-1));break;case X.RIGHT:!(this.cursor%2)&&this.targets.findIndex(n=>n===this.cursor+1)>-1&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=a.getField()[A],R=this.targets.map(r=>a.getField()[r]);this.targetsHighlighted=this.isMultipleTargets?R:[s];const n=super.setCursor(A);if(this.targetFlashTween){this.targetFlashTween.stop();for(const r of R)r.setAlpha(r.getTag(xE)?.5:1),this.highlightItems(r.id,1)}if(this.targetFlashTween=a.tweens.add({targets:this.targetsHighlighted,key:{start:1,to:.25},loop:-1,loopDelay:150,duration:Ot(450),ease:"Sine.easeInOut",yoyo:!0,onUpdate:o(r=>{for(const L of this.targetsHighlighted)L.setAlpha(r.getValue()),this.highlightItems(L.id,r.getValue())},"onUpdate")}),this.targetBattleInfoMoveTween.length>=1){this.targetBattleInfoMoveTween.filter(r=>r!==void 0).forEach(r=>r.stop());for(const r of R)r.getBattleInfo().resetY()}return this.targetsHighlighted.map(r=>r.getBattleInfo()).map(r=>{this.targetBattleInfoMoveTween.push(a.tweens.add({targets:[r],y:{start:r.getBaseY(),to:r.getBaseY()+1},loop:-1,duration:Ot(250),ease:"Linear",yoyo:!0}))}),n}eraseCursor(){this.targetFlashTween&&(this.targetFlashTween.stop(),this.targetFlashTween=null);for(const A of this.targetsHighlighted)A.setAlpha(A.getTag(xE)?.5:1),this.highlightItems(A.id,1);this.targetBattleInfoMoveTween.length>=1&&(this.targetBattleInfoMoveTween.filter(A=>A!==void 0).forEach(A=>A.stop()),this.targetBattleInfoMoveTween=[]);for(const A of this.targetsHighlighted)A.getBattleInfo().resetY()}highlightItems(A,s){const R=this.enemyModifiers.getAll("name",A.toString());for(const n of R)n.setAlpha(s)}clear(){super.clear(),this.eraseCursor()}};o(Qp,"TargetSelectUiHandler");let __=Qp;const P_="LEFT",Jk="RIGHT",fi=class fi{constructor(){this.selectedMode=te.SETTINGS,this.navigationMenus=new Array,this.modes=[te.SETTINGS,te.SETTINGS_DISPLAY,te.SETTINGS_AUDIO,te.SETTINGS_GAMEPAD,te.SETTINGS_KEYBOARD],this.labels=[u.t("settings:general"),u.t("settings:display"),u.t("settings:audio"),u.t("settings:gamepad"),u.t("settings:keyboard")]}reset(){this.selectedMode=te.SETTINGS,this.updateNavigationMenus()}static getInstance(){return fi.instance||(fi.instance=new fi),fi.instance}navigate(A){const s=this.modes.indexOf(this.selectedMode),R=this.modes.length-1,n=A===P_?-1:1;s===0&&A===P_?this.selectedMode=this.modes[R]:s===R&&A===Jk?this.selectedMode=this.modes[0]:this.selectedMode=this.modes[s+n],a.ui.setMode(this.selectedMode),this.updateNavigationMenus()}updateNavigationMenus(){for(const A of this.navigationMenus)A.update()}updateIcons(){for(const A of this.navigationMenus)A.updateIcons()}clearNavigationMenus(){this.navigationMenus.length=0}};o(fi,"NavigationManager");let NO=fi;const $p=class $p extends Phaser.GameObjects.Container{constructor(A,s){super(a,A,s),this.headerTitles=new Array,this.setup()}setup(){const A=NO.getInstance(),s=Gt(0,0,a.game.canvas.width/6-2,24);s.setOrigin(0,0),this.add(s),this.width=s.width,this.height=s.height,this.navigationIcons={};const R=a.add.sprite(8,4,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,8,4),this.navigationIcons.BUTTON_CYCLE_FORM=R;const n=a.add.sprite(0,0,"keyboard");n.setOrigin(0,-.1),n.setPositionRelative(s,s.width-20,4),this.navigationIcons.BUTTON_CYCLE_SHINY=n;let I=R,r=R.width*6;for(const L of A.labels){const N=Se(0,0,L,k.SETTINGS_LABEL);N.setOrigin(0,0),N.setPositionRelative(I,6+r/6,0),this.add(N),this.headerTitles.push(N),I=N,r=N.width}this.add(R),this.add(n),A.navigationMenus.push(this),A.updateNavigationMenus()}update(){const A=NO.getInstance(),s=A.modes.indexOf(A.selectedMode);for(const[R,n]of this.headerTitles.entries())RZ(n,R===s?k.SETTINGS_SELECTED:k.SETTINGS_LABEL)}updateIcons(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const n of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(n)){this.navigationIcons[n].setTexture("keyboard"),this.navigationIcons[n].setFrame(A[n]),this.navigationIcons[n].alpha=1;continue}const I=(s=a.inputController)==null?void 0:s.getIconForLatestInputRecorded(n);if(I){const r=(R=a.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[n].setTexture(r),this.navigationIcons[n].setFrame(I),this.navigationIcons[n].alpha=1}else this.navigationIcons[n].alpha=0}}navigate(A){const s=NO.getInstance();switch(A){case X.CYCLE_FORM:return s.navigate(P_),!0;case X.CYCLE_SHINY:return s.navigate(Jk),!0}return!1}};o($p,"NavigationMenu");let yu=$p;const Jp=class Jp extends hs{constructor(A,s=null){super(s),this.settings=FA.filter(R=>{var n;return R.type===A&&!((n=R==null?void 0:R.isHidden)!=null&&n.call(R))}),this.reloadRequired=!1,this.rowsToDisplay=8}setup(){const A=this.getUi();this.settingsContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.title}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6-20),Phaser.Geom.Rectangle.Contains),this.navigationIcons={},this.navigationContainer=new yu(0,0),this.optionsBg=Gt(0,this.navigationContainer.height,a.game.canvas.width/6-2,a.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const s=Gt(0,a.game.canvas.height/6-this.navigationContainer.height,a.game.canvas.width/6-2,22);s.setOrigin(0,0);const R=a.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(s,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=R;const n=Se(0,0,u.t("settings:action"),k.SETTINGS_LABEL);n.setOrigin(0,.15),n.setPositionRelative(R,-n.width/6-2,0);const I=a.add.sprite(0,0,"keyboard");I.setOrigin(0,-.1),I.setPositionRelative(s,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=I;const r=Se(0,0,u.t("settings:back"),k.SETTINGS_LABEL);r.setOrigin(0,.15),r.setPositionRelative(I,-r.width/6-2,0),this.optionsContainer=a.add.container(0,0),this.settingLabels=[],this.optionValueLabels=[],this.reloadSettings=this.settings.filter(l=>l==null?void 0:l.requireReload),this.settings.forEach((l,C)=>{let U=l.label;l!=null&&l.requireReload&&(U+=` (${u.t("settings:requireReload")})`),this.settingLabels[C]=Se(8,28+C*16,U,k.SETTINGS_LABEL),this.settingLabels[C].setOrigin(0,0),this.optionsContainer.add(this.settingLabels[C]),this.optionValueLabels.push(l.options.map((f,H)=>{const B=Se(0,0,f.label,l.default===H?k.SETTINGS_SELECTED:k.SETTINGS_VALUE);return B.setOrigin(0,0),this.optionsContainer.add(B),B}));const D=this.optionValueLabels[C].map(f=>f.width).reduce((f,H)=>f+=H,0),M=Math.max(78,this.settingLabels[C].displayWidth+8),h=297-M-D/6,_=Math.floor(h/(this.optionValueLabels[C].length-1));let d=0;for(const f of this.optionValueLabels[C])f.setPositionRelative(this.settingLabels[C],M+d,0),d+=f.width/6+_}),this.optionCursors=this.settings.map(l=>l.default),this.scrollBar=new mn(this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.scrollBar.setTotalRows(this.settings.length),this.messageBoxContainer=a.add.container(0,a.scaledCanvas.height),this.messageBoxContainer.setName("settings-message-box"),this.messageBoxContainer.setVisible(!1);const L=Gt(0,-1,a.scaledCanvas.width-2,48);L.setOrigin(0,1),this.messageBoxContainer.add(L);const N=Se(8,-40,"",k.WINDOW,{maxLines:2});N.setWordWrapWidth(a.game.canvas.width-60),N.setName("settings-message"),N.setOrigin(0,0),this.messageBoxContainer.add(N),this.message=N,this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.scrollBar),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(this.optionsContainer),this.settingsContainer.add(R),this.settingsContainer.add(I),this.settingsContainer.add(n),this.settingsContainer.add(r),this.settingsContainer.add(this.messageBoxContainer),A.add(this.settingsContainer),this.setCursor(0),this.setScrollCursor(0),this.settingsContainer.setVisible(!1)}updateBindings(){var A,s;for(const R of Object.keys(this.navigationIcons)){if(R==="BUTTON_HOME"){this.navigationIcons[R].setTexture("keyboard"),this.navigationIcons[R].setFrame("HOME.png"),this.navigationIcons[R].alpha=1;continue}const n=(A=a.inputController)==null?void 0:A.getIconForLatestInputRecorded(R);if(n){const I=(s=a.inputController)==null?void 0:s.getLastSourceType();this.navigationIcons[R].setTexture(I),this.navigationIcons[R].setFrame(n),this.navigationIcons[R].alpha=1}else this.navigationIcons[R].alpha=0}NO.getInstance().updateIcons()}show(A){super.show(A),this.updateBindings();const s=localStorage.hasOwnProperty(this.localStorageKey)?JSON.parse(localStorage.getItem(this.localStorageKey)):{};return this.settings.forEach((R,n)=>this.setOptionCursor(n,s.hasOwnProperty(R.key)?s[R.key]:this.settings[n].default)),this.settingsContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}processInput(A){const s=this.getUi();let R=!1;if(A===X.CANCEL)R=!0,NO.getInstance().reset(),a.ui.revertMode();else{const n=this.cursor+this.scrollCursor;switch(A){case X.UP:if(n)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const r=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=r&&L}break;case X.DOWN:if(n<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const r=this.setCursor(0),L=this.setScrollCursor(0);R=r&&L}break;case X.LEFT:this.optionCursors[n]&&(R=this.setOptionCursor(n,this.optionCursors[n]-1,!0));break;case X.RIGHT:this.optionCursors[n]<this.optionValueLabels[n].length-1&&(R=this.setOptionCursor(n,this.optionCursors[n]+1,!0));break;case X.CYCLE_FORM:case X.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break;case X.ACTION:const I=this.settings[n];I!=null&&I.activatable&&(R=this.activateSetting(I));break}}return R&&s.playSelect(),R}activateSetting(A){switch(A.key){case St.Move_Touch_Controls:return a.inputController.moveTouchControlsHandler.enableConfigurationMode(this.getUi()),!0}return!1}setCursor(A){const s=super.setCursor(A);if(!this.cursorObj){const R=a.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=a.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setOptionCursor(A,s,R){A===-1&&(A=this.cursor+this.scrollCursor);const n=this.settings[A],I=this.optionCursors[A],r=this.optionValueLabels[A][I];r.setColor(this.getTextColor(k.SETTINGS_VALUE)),r.setShadowColor(this.getTextColor(k.SETTINGS_VALUE,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];if(L.setColor(this.getTextColor(k.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(k.SETTINGS_SELECTED,!0)),R){const N=o(()=>{a.gameData.saveSetting(n.key,s),n.requireReload&&(this.reloadRequired=!0)},"saveSetting");if(n.options[s].needConfirmation){const l=o(()=>{a.ui.revertMode(),this.showText(""),N()},"confirmUpdateSetting"),C=o(()=>{a.ui.revertMode(),this.showText(""),this.setOptionCursor(A,I,!1)},"cancelUpdateSetting"),U=n.options[s].confirmationMessage??u.t("settings:defaultConfirmMessage");a.ui.showText(U,null,()=>{a.ui.setOverlayMode(te.CONFIRM,l,C,null,null,1,750)})}else N()}return!0}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}updateSettingsScroll(){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.setScrollCursor(0),this.eraseCursor(),this.getUi().bgmBar.toggleBgmBar(a.showBgmBar),this.reloadRequired&&(this.reloadRequired=!1,a.reset(!0,!1,!0))}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}showText(A,s,R,n,I,r){this.messageBoxContainer.setVisible(!!(A!=null&&A.length)),super.showText(A,s,R,n,I,r)}};o(Jp,"AbstractSettingsUiHandler");let fS=Jp;const zp=class zp extends fS{constructor(A=null){super(z0.GENERAL,A),this.title="General",this.localStorageKey="settings"}};o(zp,"SettingsUiHandler");let wu=zp;var We=(E=>(E.Controller="CONTROLLER",E.Gamepad_Support="GAMEPAD_SUPPORT",E.Button_Up="BUTTON_UP",E.Button_Down="BUTTON_DOWN",E.Button_Left="BUTTON_LEFT",E.Button_Right="BUTTON_RIGHT",E.Button_Action="BUTTON_ACTION",E.Button_Cancel="BUTTON_CANCEL",E.Button_Menu="BUTTON_MENU",E.Button_Stats="BUTTON_STATS",E.Button_Cycle_Form="BUTTON_CYCLE_FORM",E.Button_Cycle_Shiny="BUTTON_CYCLE_SHINY",E.Button_Cycle_Gender="BUTTON_CYCLE_GENDER",E.Button_Cycle_Ability="BUTTON_CYCLE_ABILITY",E.Button_Cycle_Nature="BUTTON_CYCLE_NATURE",E.Button_Cycle_Tera="BUTTON_CYCLE_TERA",E.Button_Speed_Up="BUTTON_SPEED_UP",E.Button_Slow_Down="BUTTON_SLOW_DOWN",E.Button_Submit="BUTTON_SUBMIT",E))(We||{});const Vs="Press action to assign",zk={CONTROLLER:["Default","Change"],GAMEPAD_SUPPORT:["Auto","Disabled"],BUTTON_UP:[`KEY ${X.UP.toString()}`,Vs],BUTTON_DOWN:[`KEY ${X.DOWN.toString()}`,Vs],BUTTON_LEFT:[`KEY ${X.LEFT.toString()}`,Vs],BUTTON_RIGHT:[`KEY ${X.RIGHT.toString()}`,Vs],BUTTON_ACTION:[`KEY ${X.ACTION.toString()}`,Vs],BUTTON_CANCEL:[`KEY ${X.CANCEL.toString()}`,Vs],BUTTON_MENU:[`KEY ${X.MENU.toString()}`,Vs],BUTTON_STATS:[`KEY ${X.STATS.toString()}`,Vs],BUTTON_CYCLE_FORM:[`KEY ${X.CYCLE_FORM.toString()}`,Vs],BUTTON_CYCLE_SHINY:[`KEY ${X.CYCLE_SHINY.toString()}`,Vs],BUTTON_CYCLE_GENDER:[`KEY ${X.CYCLE_GENDER.toString()}`,Vs],BUTTON_CYCLE_ABILITY:[`KEY ${X.CYCLE_ABILITY.toString()}`,Vs],BUTTON_CYCLE_NATURE:[`KEY ${X.CYCLE_NATURE.toString()}`,Vs],BUTTON_CYCLE_TERA:[`KEY ${X.CYCLE_TERA.toString()}`,Vs],BUTTON_SPEED_UP:[`KEY ${X.SPEED_UP.toString()}`,Vs],BUTTON_SLOW_DOWN:[`KEY ${X.SLOW_DOWN.toString()}`,Vs],BUTTON_SUBMIT:[`KEY ${X.SUBMIT.toString()}`,Vs]},jk={CONTROLLER:0,GAMEPAD_SUPPORT:0,BUTTON_UP:0,BUTTON_DOWN:0,BUTTON_LEFT:0,BUTTON_RIGHT:0,BUTTON_ACTION:0,BUTTON_CANCEL:0,BUTTON_MENU:0,BUTTON_STATS:0,BUTTON_CYCLE_FORM:0,BUTTON_CYCLE_SHINY:0,BUTTON_CYCLE_GENDER:0,BUTTON_CYCLE_ABILITY:0,BUTTON_CYCLE_NATURE:0,BUTTON_CYCLE_TERA:0,BUTTON_SPEED_UP:0,BUTTON_SLOW_DOWN:0,BUTTON_SUBMIT:0},V$=[ot.Button_Up,ot.Button_Down,ot.Button_Left,ot.Button_Right];function Ql(E,A){switch(E){case"GAMEPAD_SUPPORT":a.inputController.setGamepadSupport(zk[E][A]!=="Disabled");break;case"BUTTON_ACTION":case"BUTTON_CANCEL":case"BUTTON_MENU":case"BUTTON_STATS":case"BUTTON_CYCLE_SHINY":case"BUTTON_CYCLE_FORM":case"BUTTON_CYCLE_GENDER":case"BUTTON_CYCLE_ABILITY":case"BUTTON_CYCLE_NATURE":case"BUTTON_CYCLE_TERA":case"BUTTON_SPEED_UP":case"BUTTON_SLOW_DOWN":case"BUTTON_SUBMIT":if(A&&a.ui){const s=o((R=!1)=>(a.ui.revertMode(),a.ui.getHandler().updateBindings(),R),"cancelHandler");a.ui.setOverlayMode(te.GAMEPAD_BINDING,{target:E,cancelHandler:s})}break;case"CONTROLLER":if(A){const s=a.inputController.getGamepadsName();if(a.ui&&s){const R=o(()=>(a.ui.revertMode(),a.ui.getHandler().setOptionCursor(Object.values(We).indexOf("CONTROLLER"),0,!0),a.ui.getHandler().updateBindings(),!1),"cancelHandler"),n=o(I=>(a.inputController.setChosenGamepad(I),R(),!0),"changeGamepadHandler");return a.ui.setOverlayMode(te.OPTION_SELECT,{options:[...s.map(I=>({label:Mf(I,30),handler:o(()=>n(I),"handler")})),{label:"Cancel",handler:R}]}),!1}}break}return!0}o(Ql,"setSettingGamepad");const qk={padID:"Xbox 360 controller (XInput STANDARD GAMEPAD)",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[We.Button_Up]:X.UP,[We.Button_Down]:X.DOWN,[We.Button_Left]:X.LEFT,[We.Button_Right]:X.RIGHT,[We.Button_Action]:X.ACTION,[We.Button_Cancel]:X.CANCEL,[We.Button_Cycle_Nature]:X.CYCLE_NATURE,[We.Button_Cycle_Tera]:X.CYCLE_TERA,[We.Button_Menu]:X.MENU,[We.Button_Stats]:X.STATS,[We.Button_Cycle_Form]:X.CYCLE_FORM,[We.Button_Cycle_Shiny]:X.CYCLE_SHINY,[We.Button_Cycle_Gender]:X.CYCLE_GENDER,[We.Button_Cycle_Ability]:X.CYCLE_ABILITY,[We.Button_Speed_Up]:X.SPEED_UP,[We.Button_Slow_Down]:X.SLOW_DOWN},default:{LC_N:We.Button_Up,LC_S:We.Button_Down,LC_W:We.Button_Left,LC_E:We.Button_Right,RC_S:We.Button_Action,RC_E:We.Button_Cancel,RC_W:We.Button_Cycle_Nature,RC_N:We.Button_Cycle_Tera,START:We.Button_Menu,SELECT:We.Button_Stats,LB:We.Button_Cycle_Form,RB:We.Button_Cycle_Shiny,LT:We.Button_Cycle_Gender,RT:We.Button_Cycle_Ability,LS:We.Button_Speed_Up,RS:We.Button_Slow_Down}},e7={padID:"Dualshock",padType:"dualshock",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,TOUCH:17},icons:{RC_S:"CROSS.png",RC_E:"CIRCLE.png",RC_W:"SQUARE.png",RC_N:"TRIANGLE.png",START:"START.png",SELECT:"SELECT.png",LB:"L1.png",RB:"R1.png",LT:"L2.png",RT:"R2.png",LS:"L3.png",RS:"R3.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png",TOUCH:"TOUCH.png"},settings:{[We.Button_Up]:X.UP,[We.Button_Down]:X.DOWN,[We.Button_Left]:X.LEFT,[We.Button_Right]:X.RIGHT,[We.Button_Action]:X.ACTION,[We.Button_Cancel]:X.CANCEL,[We.Button_Cycle_Nature]:X.CYCLE_NATURE,[We.Button_Cycle_Tera]:X.CYCLE_TERA,[We.Button_Menu]:X.MENU,[We.Button_Stats]:X.STATS,[We.Button_Cycle_Form]:X.CYCLE_FORM,[We.Button_Cycle_Shiny]:X.CYCLE_SHINY,[We.Button_Cycle_Gender]:X.CYCLE_GENDER,[We.Button_Cycle_Ability]:X.CYCLE_ABILITY,[We.Button_Speed_Up]:X.SPEED_UP,[We.Button_Slow_Down]:X.SLOW_DOWN,[We.Button_Submit]:X.SUBMIT},default:{LC_N:We.Button_Up,LC_S:We.Button_Down,LC_W:We.Button_Left,LC_E:We.Button_Right,RC_S:We.Button_Action,RC_E:We.Button_Cancel,RC_W:We.Button_Cycle_Nature,RC_N:We.Button_Cycle_Tera,START:We.Button_Menu,SELECT:We.Button_Stats,LB:We.Button_Cycle_Form,RB:We.Button_Cycle_Shiny,LT:We.Button_Cycle_Gender,RT:We.Button_Cycle_Ability,LS:We.Button_Speed_Up,RS:We.Button_Slow_Down,TOUCH:We.Button_Submit}},t7={padID:"081f-e401",padType:"xbox",deviceMapping:{RC_S:2,RC_E:1,RC_W:3,RC_N:0,START:9,SELECT:8,LB:4,RB:5,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[We.Button_Up]:X.UP,[We.Button_Down]:X.DOWN,[We.Button_Left]:X.LEFT,[We.Button_Right]:X.RIGHT,[We.Button_Action]:X.ACTION,[We.Button_Cancel]:X.CANCEL,[We.Button_Cycle_Nature]:X.CYCLE_NATURE,[We.Button_Cycle_Tera]:X.CYCLE_TERA,[We.Button_Menu]:X.MENU,[We.Button_Stats]:X.STATS,[We.Button_Cycle_Form]:X.CYCLE_FORM,[We.Button_Cycle_Shiny]:X.CYCLE_SHINY,[We.Button_Cycle_Gender]:X.CYCLE_GENDER,[We.Button_Cycle_Ability]:X.CYCLE_ABILITY,[We.Button_Speed_Up]:X.SPEED_UP,[We.Button_Slow_Down]:X.SLOW_DOWN},default:{LC_N:We.Button_Up,LC_S:We.Button_Down,LC_W:We.Button_Left,LC_E:We.Button_Right,RC_S:We.Button_Action,RC_E:We.Button_Cancel,RC_W:We.Button_Cycle_Nature,RC_N:We.Button_Cycle_Tera,START:We.Button_Menu,SELECT:We.Button_Stats,LB:We.Button_Cycle_Form,RB:We.Button_Cycle_Shiny,LT:-1,RT:-1,LS:-1,RS:-1}};function Jr(E,A){return Object.keys(E.deviceMapping).find(s=>E.deviceMapping[s]===A)}o(Jr,"getKeyWithKeycode");function A7(E,A){const s=Jr(E,A);return s?E.custom[s]:null}o(A7,"getSettingNameWithKeycode");function dl(E,A){const s=A7(E,A);return E.settings[s]}o(dl,"getButtonWithKeycode");function zr(E,A){return Object.keys(E.custom).find(s=>E.custom[s]===A)}o(zr,"getKeyWithSettingName");function G_(E,A){return E.custom[A]}o(G_,"getSettingNameWithKey");function x$(E,A){return E.icons[A]}o(x$,"getIconWithKey");function vu(E,A){const s=zr(E,A);return x$(E,s)}o(vu,"getIconWithSettingName");function b$(E,A,s,R){let n;A==="gamepad"?n=E[s[oA.GAMEPAD]]:n=E[s[oA.KEYBOARD]];const I=vu(n,R);if(!I){const r=R.includes("ALT_");let L;return r?L=R.split("ALT_").splice(1)[0]:L=`ALT_${R}`,vu(n,L)}return I}o(b$,"getIconForLatestInput");function k$(E,A,s){if(!Q$(E,Jr(E,s))||!$$(E,A))return!1;const R=A7(E,s);if(R){const r=zr(E,R);r&&(E.custom[r]=-1)}const n=zr(E,A);n&&(E.custom[n]=-1);const I=Jr(E,s);return I&&(E.custom[I]=A),!0}o(k$,"assign");function Z$(E,A,s){if(E.padType==="keyboard")return!1;const R=zr(E,A),n=G_(E,R),I=Jr(E,s),r=G_(E,I);return R&&(E.custom[R]=r),I&&(E.custom[I]=n),!0}o(Z$,"swap");function X$(E,A){const s=zr(E,A);return E.blacklist.includes(s)?!1:(s&&(E.custom[s]=-1),!0)}o(X$,"deleteBind");function Q$(E,A){var R;const s=G_(E,A);return!((R=E.blacklist)!=null&&R.includes(A))}o(Q$,"canIAssignThisKey");function $$(E,A){var R;const s=zr(E,A);return!((R=E.blacklist)!=null&&R.includes(s))}o($$,"canIOverrideThisSetting");const jp=class jp extends Js{constructor(A=null){super(A),this.layout=new Map,this.rowsToDisplay=8}getLocalStorageSetting(){return localStorage.hasOwnProperty(this.localStoragePropertyName)?JSON.parse(localStorage.getItem(this.localStoragePropertyName)):{}}camelize(A){return A.replace(/(?:^\w|[A-Z]|\b\w)/g,(s,R)=>R===0?s.toLowerCase():s.toUpperCase()).replace(/\s+/g,"")}setup(){const A=this.getUi();this.navigationIcons={},this.settingsContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.settingsContainer.setName(`settings-${this.titleSelected}`),this.settingsContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.navigationContainer=new yu(0,0),this.optionsBg=Gt(0,this.navigationContainer.height,a.game.canvas.width/6-2,a.game.canvas.height/6-16-this.navigationContainer.height-2),this.optionsBg.setOrigin(0,0),this.actionsBg=Gt(0,a.game.canvas.height/6-this.navigationContainer.height,a.game.canvas.width/6-2,22),this.actionsBg.setOrigin(0,0);const s=a.add.sprite(0,0,"keyboard");s.setOrigin(0,-.1),s.setPositionRelative(this.actionsBg,this.navigationContainer.width-32,4),this.navigationIcons.BUTTON_ACTION=s;const R=Se(0,0,u.t("settings:action"),k.SETTINGS_LABEL);R.setOrigin(0,.15),R.setPositionRelative(s,-R.width/6-2,0);const n=a.add.sprite(0,0,"keyboard");n.setOrigin(0,-.1),n.setPositionRelative(this.actionsBg,this.navigationContainer.width-100,4),this.navigationIcons.BUTTON_CANCEL=n;const I=Se(0,0,u.t("settings:back"),k.SETTINGS_LABEL);I.setOrigin(0,.15),I.setPositionRelative(n,-I.width/6-2,0);const r=a.add.sprite(0,0,"keyboard");r.setOrigin(0,-.1),r.setPositionRelative(this.actionsBg,this.navigationContainer.width-180,4),this.navigationIcons.BUTTON_HOME=r;const L=Se(0,0,u.t("settings:reset"),k.SETTINGS_LABEL);L.setOrigin(0,.15),L.setPositionRelative(r,-L.width/6-2,0),this.settingsContainer.add(this.optionsBg),this.settingsContainer.add(this.actionsBg),this.settingsContainer.add(this.navigationContainer),this.settingsContainer.add(s),this.settingsContainer.add(n),this.settingsContainer.add(r),this.settingsContainer.add(R),this.settingsContainer.add(I),this.settingsContainer.add(L);for(const N of this.configs){this.layout[N.padType]=new Map;const l=a.add.container(0,0);l.setVisible(!1);const C=Object.keys(N.settings),U=[],D=[],M={},_=[...Object.keys(this.setting).slice(0,this.commonSettingsCount).map(H=>this.setting[H]),...Object.keys(N.settings)],d=Object.values(Object.keys(this.settingDeviceDefaults).filter(H=>_.includes(H)).map(H=>this.settingDeviceDefaults[H]));Object.keys(this.setting).filter(H=>_.includes(this.setting[H])).forEach((H,B)=>{const K=H.replace(/\_/g," "),Y=this.settingBlacklisted.includes(this.setting[H]),v=Y?k.SETTINGS_LOCKED:k.SETTINGS_LABEL;let Z;const z=this.camelize(K.replace("Alt ",""));K.toLowerCase().includes("alt")?Z=`${u.t(`settings:${z}`)}${u.t("settings:alt")}`:Z=u.t(`settings:${z}`),U[B]=Se(8,28+B*16,Z,v),U[B].setOrigin(0,0),l.add(U[B]);const q=[];for(const[ie,Be]of this.settingDeviceOptions[this.setting[H]].entries()){if(C.includes(this.setting[H])){if(ie){const _e=Se(0,0,Y?"":Be,k.WINDOW);_e.setOrigin(0,0),l.add(_e),q.push(_e);continue}const ve=a.add.sprite(0,0,this.textureOverride?this.textureOverride:N.padType);ve.setOrigin(0,-.15),M[this.setting[H]]=ve,l.add(ve),q.push(ve);continue}const he=Se(0,0,Be,this.settingDeviceDefaults[this.setting[H]]===ie?k.SETTINGS_SELECTED:k.WINDOW);he.setOrigin(0,0),l.add(he),q.push(he)}D.push(q);const J=D[B].map(ie=>ie.width).reduce((ie,Be)=>ie+=Be,0),Ae=Math.max(130,U[B].displayWidth+8),Q=297-Ae-J/6,Re=Math.floor(Q/(D[B].length-1));let W=0;for(const ie of D[B])ie.setPositionRelative(U[B],Ae+W,0),W+=ie.width/6+Re}),this.layout[N.padType].optionsContainer=l,this.layout[N.padType].inputsIcons=M,this.layout[N.padType].settingLabels=U,this.layout[N.padType].optionValueLabels=D,this.layout[N.padType].optionCursors=d,this.layout[N.padType].keys=_,this.layout[N.padType].bindingSettings=C,this.settingsContainer.add(l)}this.scrollBar=new mn(this.optionsBg.width-9,this.optionsBg.y+5,4,this.optionsBg.height-11,this.rowsToDisplay),this.settingsContainer.add(this.scrollBar),A.add(this.settingsContainer),this.settingsContainer.setVisible(!1)}getActiveConfig(){return a.inputController.getActiveConfig(this.device)}updateBindings(){Object.keys(this.layout).forEach(R=>this.layout[R].optionsContainer.setVisible(!1));const A=this.getActiveConfig();if(!this.setLayout(A))return;const s=this.getLocalStorageSetting();if(this.keys.forEach((R,n)=>{this.setOptionCursor(n,s.hasOwnProperty(R)?s[R]:this.optionCursors[n])}),!!A.custom){for(const R of this.bindingSettings){const n=vu(A,R);n?(this.inputsIcons[R].setFrame(n),this.inputsIcons[R].alpha=1):this.inputsIcons[R].alpha=0}this.setCursor(this.cursor),this.setScrollCursor(this.scrollCursor)}}updateNavigationDisplay(){var s,R;const A={BUTTON_HOME:"HOME.png",BUTTON_DELETE:"DEL.png"};for(const n of Object.keys(this.navigationIcons)){if(Object.keys(A).includes(n)){this.navigationIcons[n].setTexture("keyboard"),this.navigationIcons[n].setFrame(A[n]),this.navigationIcons[n].alpha=1;continue}const I=(s=a.inputController)==null?void 0:s.getIconForLatestInputRecorded(n);if(I){const r=(R=a.inputController)==null?void 0:R.getLastSourceType();this.navigationIcons[n].setTexture(r),this.navigationIcons[n].setFrame(I),this.navigationIcons[n].alpha=1}else this.navigationIcons[n].alpha=0}}show(A){return super.show(A),this.updateNavigationDisplay(),NO.getInstance().updateIcons(),this.updateBindings(),this.settingsContainer.setVisible(!0),this.resetScroll(),this.getUi().moveTo(this.settingsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}setLayout(A){if(!A)return this.layout.noGamepads.optionsContainer.setVisible(!0),!1;const s=A.padType,R=this.layout[s];return this.keys=R.keys,this.optionsContainer=R.optionsContainer,this.optionsContainer.setVisible(!0),this.settingLabels=R.settingLabels,this.optionValueLabels=R.optionValueLabels,this.optionCursors=R.optionCursors,this.inputsIcons=R.inputsIcons,this.bindingSettings=R.bindingSettings,this.scrollBar.setTotalRows(R.settingLabels.length),this.scrollBar.setScrollCursor(0),!0}processInput(A){const s=this.getUi();let R=!1;if(this.updateNavigationDisplay(),A===X.CANCEL)R=!0,NO.getInstance().reset(),a.ui.revertMode();else{const n=this.cursor+this.scrollCursor,I=this.setting[Object.keys(this.setting)[n]];switch(A){case X.ACTION:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||!I.includes("BUTTON_")?R=!1:R=this.setSetting(I,1);break;case X.UP:if(!this.optionValueLabels)return!1;if(n)this.cursor?R=this.setCursor(this.cursor-1):R=this.setScrollCursor(this.scrollCursor-1);else{const r=this.setCursor(this.rowsToDisplay-1),L=this.setScrollCursor(this.optionValueLabels.length-this.rowsToDisplay);R=r&&L}break;case X.DOWN:if(!this.optionValueLabels)return!1;if(n<this.optionValueLabels.length-1)this.cursor<this.rowsToDisplay-1?R=this.setCursor(this.cursor+1):this.scrollCursor<this.optionValueLabels.length-this.rowsToDisplay&&(R=this.setScrollCursor(this.scrollCursor+1));else{const r=this.setCursor(0),L=this.setScrollCursor(0);R=r&&L}break;case X.LEFT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||I.includes("BUTTON_")?R=!1:this.optionCursors[n]&&(R=this.setOptionCursor(n,this.optionCursors[n]-1,!0));break;case X.RIGHT:if(!this.optionCursors||!this.optionValueLabels)return!1;this.settingBlacklisted.includes(I)||I.includes("BUTTON_")?R=!1:this.optionCursors[n]<this.optionValueLabels[n].length-1&&(R=this.setOptionCursor(n,this.optionCursors[n]+1,!0));break;case X.CYCLE_FORM:case X.CYCLE_SHINY:R=this.navigationContainer.navigate(A);break}}return R&&s.playSelect(),R}resetScroll(){var A;(A=this.cursorObj)==null||A.destroy(),this.cursorObj=null,this.cursor=0,this.setCursor(0),this.setScrollCursor(0),this.updateSettingsScroll()}setCursor(A){const s=super.setCursor(A);if(!this.optionsContainer)return s;if(!this.cursorObj){const R=a.game.canvas.width/6-(this.scrollBar.visible?16:10);this.cursorObj=a.add.nineslice(0,0,"summary_moves_cursor",void 0,R,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.optionsContainer.add(this.cursorObj)}return this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor),this.updateSettingsScroll(),this.setCursor(this.cursor),!0)}setOptionCursor(A,s,R){const n=this.setting[Object.keys(this.setting)[A]],I=this.optionCursors[A];if(!this.bindingSettings.includes(n)&&!n.includes("BUTTON_")){const r=this.optionValueLabels[A][I];r.setColor(this.getTextColor(k.WINDOW)),r.setShadowColor(this.getTextColor(k.WINDOW,!0)),this.optionCursors[A]=s;const L=this.optionValueLabels[A][s];L.setColor(this.getTextColor(k.SETTINGS_SELECTED)),L.setShadowColor(this.getTextColor(k.SETTINGS_SELECTED,!0))}return R&&this.saveSettingToLocalStorage(n,s),!0}updateSettingsScroll(){if(this.optionsContainer){this.optionsContainer.setY(-16*this.scrollCursor);for(let A=0;A<this.settingLabels.length;A++){const s=A>=this.scrollCursor&&A<this.scrollCursor+this.rowsToDisplay;this.settingLabels[A].setVisible(s);for(const R of this.optionValueLabels[A])R.setVisible(s)}}}clear(){super.clear(),this.settingsContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(jp,"AbstractControlSettingsUiHandler");let Vu=jp;const qp=class qp extends Vu{constructor(A=null){super(A),this.setSetting=Ql,this.titleSelected="Gamepad",this.setting=We,this.settingDeviceDefaults=jk,this.settingDeviceOptions=zk,this.configs=[qk,e7,t7],this.commonSettingsCount=2,this.localStoragePropertyName="settingsGamepad",this.settingBlacklisted=V$,this.device=oA.GAMEPAD}setup(){super.setup(),this.layout.noGamepads=new Map;const A=a.add.container(0,0);A.setVisible(!1);const s=Se(8,28,u.t("settings:gamepadPleasePlug"),k.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A),this.layout.noGamepads.optionsContainer=A,this.layout.noGamepads.label=s}setLayout(A){return A?super.setLayout(A):(this.layout.noGamepads.optionsContainer.setVisible(!0),!1)}updateChosenGamepadDisplay(){this.updateBindings(),this.resetScroll();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Controller)for(const n of Object.keys(this.layout))n!=="noGamepads"&&this.layout[n].optionValueLabels[A][0].setText(Mf(a.inputController.selectedDevice[oA.GAMEPAD],20))}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Controller&&a.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};o(qp,"SettingsGamepadUiHandler");let xu=qp;const eK=class eK extends Js{constructor(A=null){super(A),this.leftArrowGap=90,this.arrowSpacing=3}setup(){const A=this.getUi();this.widestTextBox=0,this.challengesContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.challengesContainer.setName("challenges"),this.challengesContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains);const s=a.add.rectangle(-1,-1,a.scaledCanvas.width,a.scaledCanvas.height,4342338,.8);s.setName("rect-challenge-overlay"),s.setOrigin(0,0),this.challengesContainer.add(s);const R=Gt(0,0,a.game.canvas.width/6,24);R.setName("window-header-bg"),R.setOrigin(0,0);const n=Se(0,0,u.t("challenges:title"),k.SETTINGS_LABEL);n.setName("text-header"),n.setOrigin(0,0),n.setPositionRelative(R,8,4),this.optionsWidth=a.scaledCanvas.width*.6,this.optionsBg=Gt(0,R.height,this.optionsWidth,a.scaledCanvas.height-R.height-2),this.optionsBg.setName("window-options-bg"),this.optionsBg.setOrigin(0,0);const I=Gt(0,R.height,a.scaledCanvas.width-this.optionsWidth,a.scaledCanvas.height-R.height-26);I.setName("window-desc-bg"),I.setOrigin(0,0),I.setPositionRelative(this.optionsBg,this.optionsBg.width,0),this.descriptionText=new Cf(a,I.x+6,I.y+4,"",{fontFamily:"emerald",fontSize:84,color:bC.ORANGE,padding:{bottom:6},wrap:{mode:"word",width:(I.width-12)*6}}),this.descriptionText.setName("text-desc"),a.add.existing(this.descriptionText),this.descriptionText.setScale(1/6),this.descriptionText.setShadow(4,5,kC.ORANGE),this.descriptionText.setOrigin(0,0),this.startBg=Gt(0,0,I.width,24),this.startBg.setName("window-start-bg"),this.startBg.setOrigin(0,0),this.startBg.setPositionRelative(I,0,I.height),this.startText=Se(0,0,u.t("challenges:noneSelected"),k.SETTINGS_LABEL),this.startText.setName("text-start"),this.startText.setOrigin(0,0),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4),this.startCursor=a.add.nineslice(0,0,"summary_moves_cursor",void 0,I.width-8,16,1,1,1,1),this.startCursor.setName("9s-start-cursor"),this.startCursor.setOrigin(0,0),this.startCursor.setPositionRelative(this.startBg,4,3),this.startCursor.setVisible(!1),this.valuesContainer=a.add.container(0,0),this.valuesContainer.setName("values"),this.challengeLabels=[];for(let r=0;r<9;r++){const L=Se(8,28+r*16,"",k.SETTINGS_LABEL);L.setName(`text-challenge-label-${r}`),L.setOrigin(0,0),this.valuesContainer.add(L);const N=a.add.image(0,0,"cursor_reverse");N.setName(`challenge-left-arrow-${r}`),N.setOrigin(0,0),N.setVisible(!1),N.setScale(.75),this.valuesContainer.add(N);const l=a.add.image(0,0,"cursor");l.setName(`challenge-right-arrow-${r}`),l.setOrigin(0,0),l.setScale(.75),l.setVisible(!1),this.valuesContainer.add(l);const C=Se(0,28+r*16,"",k.SETTINGS_LABEL);C.setName(`challenge-value-text-${r}`),C.setPositionRelative(L,100,0),this.valuesContainer.add(C),this.challengeLabels[r]={label:L,value:C,leftArrow:N,rightArrow:l}}this.monoTypeValue=a.add.sprite(8,98,Ds("types")),this.monoTypeValue.setName("challenge-value-monotype-sprite"),this.monoTypeValue.setScale(.86),this.monoTypeValue.setVisible(!1),this.valuesContainer.add(this.monoTypeValue),this.challengesContainer.add(R),this.challengesContainer.add(n),this.challengesContainer.add(this.optionsBg),this.challengesContainer.add(I),this.challengesContainer.add(this.descriptionText),this.challengesContainer.add(this.startBg),this.challengesContainer.add(this.startText),this.challengesContainer.add(this.startCursor),this.challengesContainer.add(this.valuesContainer),A.add(this.challengesContainer),this.setCursor(0),this.setScrollCursor(0),this.challengesContainer.setVisible(!1)}setDescription(A){this.descriptionText.setText(`[color=${bC.ORANGE}][shadow=${kC.ORANGE}]${A}`)}initLabels(){this.setDescription(a.gameMode.challenges[0].getDescription()),this.widestTextBox=0;for(let A=0;A<9;A++)if(A<a.gameMode.challenges.length){this.challengeLabels[A].label.setVisible(!0),this.challengeLabels[A].value.setVisible(!0),this.challengeLabels[A].leftArrow.setVisible(!0),this.challengeLabels[A].rightArrow.setVisible(!0);const s=Se(0,0,"",k.SETTINGS_LABEL);for(let R=0;R<=a.gameMode.challenges[A].maxValue;R++)a.gameMode.challenges[A].id!==ut.SINGLE_TYPE&&(s.setText(a.gameMode.challenges[A].getValue(R)),s.displayWidth>this.widestTextBox&&(this.widestTextBox=s.displayWidth));s.destroy()}}updateText(){this.setDescription(this.getActiveChallenge().getDescription());let A=!1;for(let s=0;s<Math.min(9,a.gameMode.challenges.length);s++){const R=a.gameMode.challenges[this.scrollCursor+s],n=this.challengeLabels[s];n.label.setText(R.getName()),n.leftArrow.setPositionRelative(n.label,this.leftArrowGap,4.5),n.leftArrow.setVisible(R.value!==0),n.rightArrow.setPositionRelative(n.leftArrow,Math.max(this.monoTypeValue.width,this.widestTextBox)+n.leftArrow.displayWidth+2*this.arrowSpacing,0),n.rightArrow.setVisible(R.value!==R.maxValue),n.rightArrow.x+n.rightArrow.width+this.optionsBg.rightWidth+this.arrowSpacing>this.optionsWidth&&n.rightArrow.setX(this.optionsWidth-this.arrowSpacing-this.optionsBg.rightWidth);const I=Math.round((n.leftArrow.x+n.rightArrow.x+n.leftArrow.displayWidth)/2);R.id===ut.SINGLE_TYPE?(this.monoTypeValue.setX(I),this.monoTypeValue.setY(n.label.y+8),this.monoTypeValue.setFrame(R.getValue()),this.monoTypeValue.setVisible(!0),n.value.setVisible(!1),A=!0):(n.value.setText(R.getValue()),n.value.setX(I),n.value.setOrigin(.5,0),n.value.setVisible(!0))}A||this.monoTypeValue.setVisible(!1),this.hasSelectedChallenge=a.gameMode.challenges.some(s=>s.value!==0),this.hasSelectedChallenge?(this.startText.setText(u.t("common:start")),this.startText.setAlpha(1),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)):(this.startText.setText(u.t("challenges:noneSelected")),this.startText.setAlpha(.5),this.startText.setPositionRelative(this.startBg,(this.startBg.width-this.startText.displayWidth)/2,4)),this.challengesContainer.update()}show(A){return super.show(A),this.startCursor.setVisible(!1),this.updateChallengeArrows(!1),this.challengesContainer.setVisible(!0),this.hasSelectedChallenge=a.gameMode.challenges.some(s=>s.value!==0),this.setCursor(0),this.initLabels(),this.updateText(),this.getUi().moveTo(this.challengesContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateChallengeArrows(A){for(let s=0;s<Math.min(9,a.gameMode.challenges.length);s++){const R=this.challengeLabels[s];A?(R.leftArrow.setTint(8421504),R.rightArrow.setTint(8421504)):(R.leftArrow.clearTint(),R.rightArrow.clearTint())}}processInput(A){var I,r,L,N,l;const s=this.getUi(),R=9;let n=!1;if(A===X.CANCEL)this.startCursor.visible?(this.startCursor.setVisible(!1),(I=this.cursorObj)==null||I.setVisible(!0),this.updateChallengeArrows(this.startCursor.visible)):(a.clearPhaseQueue(),a.pushPhase(new NI),(r=a.getCurrentPhase())==null||r.end()),n=!0;else if(A===X.SUBMIT||A===X.ACTION)this.hasSelectedChallenge?(this.startCursor.visible?(a.unshiftPhase(new Pu),(L=a.getCurrentPhase())==null||L.end()):(this.startCursor.setVisible(!0),(N=this.cursorObj)==null||N.setVisible(!1),this.updateChallengeArrows(this.startCursor.visible)),n=!0):n=!1;else if((l=this.cursorObj)!=null&&l.visible&&!this.startCursor.visible)switch(A){case X.UP:if(this.cursor===0)if(this.scrollCursor===0)if(a.gameMode.challenges.length>R){const C=this.setCursor(R-1),U=this.setScrollCursor(a.gameMode.challenges.length-R);n=C&&U}else n=this.setCursor(a.gameMode.challenges.length-1);else n=this.setScrollCursor(this.scrollCursor-1);else n=this.setCursor(this.cursor-1);n&&this.updateText();break;case X.DOWN:if(this.cursor===R-1)if(this.scrollCursor<a.gameMode.challenges.length-R)n=this.setScrollCursor(this.scrollCursor+1);else{const C=this.setCursor(0),U=this.setScrollCursor(0);n=C&&U}else a.gameMode.challenges.length<R&&this.cursor===a.gameMode.challenges.length-1?n=this.setCursor(0):n=this.setCursor(this.cursor+1);n&&this.updateText();break;case X.LEFT:n=this.getActiveChallenge().decreaseValue(),n&&this.updateText();break;case X.RIGHT:n=this.getActiveChallenge().increaseValue(),n&&this.updateText();break}return n&&s.playSelect(),n}setCursor(A){let s=super.setCursor(A);return this.cursorObj||(this.cursorObj=a.add.nineslice(0,0,"summary_moves_cursor",void 0,this.optionsWidth-8,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.valuesContainer.add(this.cursorObj)),s||(s=!this.cursorObj.visible),this.cursorObj.setVisible(!0),this.cursorObj.setPositionRelative(this.optionsBg,4,4+(this.cursor+this.scrollCursor)*16),s}setScrollCursor(A){return A===this.scrollCursor?!1:(this.scrollCursor=A,this.setCursor(this.cursor),!0)}getActiveChallenge(){return a.gameMode.challenges[this.cursor+this.scrollCursor]}clear(){super.clear(),this.challengesContainer.setVisible(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(eK,"GameChallengesUiHandler");let d_=eK;const tK=class tK extends Phaser.GameObjects.Container{constructor(){super(a,a.game.canvas.width/6,0),this.queue=[],this.playerGender=a.gameData.gender}setup(){this.defaultWidth=200,this.defaultHeight=40,this.bg=a.add.nineslice(0,0,"achv_bar",void 0,this.defaultWidth,this.defaultHeight,41,6,16,4),this.bg.setOrigin(0,0),this.add(this.bg),this.icon=a.add.sprite(4,4,"items"),this.icon.setOrigin(0,0),this.add(this.icon),this.titleText=Se(40,3,"",k.MESSAGE,{fontSize:"72px"}),this.titleText.setOrigin(0,0),this.add(this.titleText),this.scoreText=Se(150,3,"",k.MESSAGE,{fontSize:"72px"}),this.scoreText.setOrigin(1,0),this.add(this.scoreText),this.descriptionText=Se(43,16,"",k.WINDOW_ALT,{fontSize:"72px"}),this.descriptionText.setOrigin(0,0),this.add(this.descriptionText),this.descriptionText.setWordWrapWidth(664),this.descriptionText.setLineSpacing(-5),this.setScale(.5),this.shown=!1}showAchv(A){if(this.shown){this.queue.push(A);return}const s=A.getTier();this.bg.setTexture(`achv_bar${s?`_${s+1}`:""}`),this.icon.setFrame(A.getIconImage()),this.titleText.setText(A.getName(this.playerGender)),this.scoreText.setVisible(A instanceof wA),A instanceof wA?this.descriptionText.setText(ff(A.localizationKey)):A instanceof ES&&this.descriptionText.setText(A.description),A instanceof wA&&this.scoreText.setText(`+${A.score}pt`),this.bg.width=Math.max(this.defaultWidth,this.icon.displayWidth+this.titleText.displayWidth+this.scoreText.displayWidth+16),this.scoreText.x=this.bg.width-2,this.descriptionText.width=this.bg.width-this.icon.displayWidth-16,this.descriptionText.setWordWrapWidth(this.descriptionText.width*6),this.bg.height=Math.max(this.defaultHeight,this.titleText.displayHeight+this.descriptionText.displayHeight+8),this.icon.y=this.bg.height/2-this.icon.height/2,a.playSound("se/achv"),a.tweens.add({targets:this,x:a.game.canvas.width/6-this.bg.width/2,duration:500,ease:"Sine.easeOut"}),a.time.delayedCall(1e4,()=>this.hide(this.playerGender)),this.setVisible(!0),this.shown=!0}hide(A){this.shown&&a.tweens.add({targets:this,x:a.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:o(()=>{if(this.shown=!1,this.setVisible(!1),this.queue.length){const s=this.queue.shift();s&&this.showAchv(s)}},"onComplete")})}};o(tK,"AchvBar");let H_=tK;var gE=(E=>(E[E.SYSTEM=0]="SYSTEM",E[E.SESSION=1]="SESSION",E[E.SETTINGS=2]="SETTINGS",E[E.TUTORIALS=3]="TUTORIALS",E[E.SEEN_DIALOGUES=4]="SEEN_DIALOGUES",E[E.RUN_HISTORY=5]="RUN_HISTORY",E))(gE||{});const Q6=-150,J$=0,$6=0,AK=class AK extends Phaser.GameObjects.Container{constructor(){super(a,Q6,$6)}setup(){this.defaultWidth=230,this.defaultHeight=100,this.bg=a.add.nineslice(-5,-5,"bgm_bar",void 0,this.defaultWidth,this.defaultHeight,0,0,10,10),this.bg.setOrigin(0,0),this.add(this.bg),this.musicText=Se(5,5,"",k.BGM_BAR),this.musicText.setOrigin(0,0),this.musicText.setWordWrapWidth(650,!0),this.add(this.musicText),this.setVisible(!1),this.shown=!1}setBgmToBgmBar(A){this.musicText.setText(`${u.t("bgmName:music")}${this.getRealBgmName(A)}`),this.musicText.width=this.bg.width-20,this.musicText.setWordWrapWidth(this.defaultWidth*4),this.bg.width=Math.min(this.defaultWidth,this.musicText.displayWidth+23),this.bg.height=Math.min(this.defaultHeight,this.musicText.displayHeight+20),a.fieldUI.bringToTop(this),this.y=$6}toggleBgmBar(A){if(this.musicText.text===""){this.setVisible(!1);return}if(!a.showBgmBar){this.setVisible(!1);return}a.tweens.add({targets:this,x:A?J$:Q6,duration:500,ease:"Sine.easeInOut",onComplete:o(()=>{this.setVisible(!0)},"onComplete")})}getRealBgmName(A){return u.t([`bgmName:${A}`,"bgmName:missing_entries"],{name:pC(A)})}};o(AK,"BgmBar");let f_=AK;const EK=class EK extends Js{constructor(A=null){super(A),this.buttonContainers=[],this.buttonBgs=[],this.buttonLabels=[]}getButtonTopMargin(){return 0}setup(){const A=this.getUi();this.modalContainer=a.add.container(0,0),this.modalContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.modalBg=Gt(0,0,0,0),this.modalContainer.add(this.modalBg),this.titleText=Se(0,4,"",k.SETTINGS_LABEL),this.titleText.setOrigin(.5,0),this.modalContainer.add(this.titleText),A.add(this.modalContainer);const s=this.getButtonLabels();for(const R of s)this.addButton(R);this.modalContainer.setVisible(!1)}addButton(A){const s=this.getButtonTopMargin(),R=Se(0,8,A,k.TOOLTIP_CONTENT);R.setOrigin(.5,.5);const n=Gt(0,0,R.getBounds().width+8,16,!1,!1,0,0,dR.THIN);n.setOrigin(.5,0),n.setInteractive(new Phaser.Geom.Rectangle(0,0,n.width,n.height),Phaser.Geom.Rectangle.Contains);const I=a.add.container(0,s);this.buttonLabels.push(R),this.buttonBgs.push(n),this.buttonContainers.push(I),I.add(n),I.add(R),this.addInteractionHoverEffect(n),this.modalContainer.add(I)}show(A){if(A.length>=1&&"buttonActions"in A[0]){if(super.show(A),A[0].hasOwnProperty("fadeOut")&&typeof A[0].fadeOut=="function"){const[R,n,I,r]=this.getMargin(),L=a.add.rectangle((this.getWidth()+r+n)/2,(this.getHeight()+R+I)/2,a.game.canvas.width/6,a.game.canvas.height/6,0);L.setOrigin(.5,.5),L.setName("rect-ui-overlay-modal"),L.setAlpha(0),this.modalContainer.add(L),this.modalContainer.moveTo(L,0),a.tweens.add({targets:L,alpha:1,duration:250,ease:"Sine.easeOut",onComplete:A[0].fadeOut})}const s=A[0];this.updateContainer(s),this.modalContainer.setVisible(!0),this.getUi().moveTo(this.modalContainer,this.getUi().length-1);for(let R=0;R<this.buttonBgs.length;R++)R<this.buttonBgs.length&&this.buttonBgs[R].on("pointerdown",n=>s.buttonActions[R]());return!0}return!1}updateContainer(A){const[s,R,n,I]=this.getMargin(A),[r,L]=[this.getWidth(A),this.getHeight(A)];this.modalContainer.setPosition((a.game.canvas.width/6-(r+(R-I)))/2,(-a.game.canvas.height/6-(L+(n-s)))/2),this.modalBg.setSize(r,L);const N=this.getModalTitle(A);this.titleText.setText(N),this.titleText.setX(r/2),this.titleText.setVisible(!!N);for(let l=0;l<this.buttonContainers.length;l++){const C=r/(this.buttonContainers.length+1);this.buttonContainers[l].setPosition(C*(l+1),this.modalBg.height-(this.buttonBgs[l].height+8))}}processInput(A){return!1}clear(){super.clear(),this.modalContainer.setVisible(!1),this.buttonBgs.map(A=>A.off("pointerdown"))}addInteractionHoverEffect(A){A.on("pointerover",()=>{this.setMouseCursorStyle("pointer"),A.setTint(12303291)}),A.on("pointerout",()=>{this.setMouseCursorStyle("default"),A.clearTint()})}};o(EK,"ModalUiHandler");let jr=EK;const sK=class sK extends jr{constructor(A=null){super(A),this.editing=!1,this.inputContainers=[],this.inputs=[],this.formLabels=[]}getHeight(A){return 20*this.getInputFieldConfigs().length+(this.getModalTitle()?26:0)+(A!=null&&A.errorMessage?12:0)+this.getButtonTopMargin()+28}getReadableErrorMessage(A){return(A==null?void 0:A.indexOf("connection refused"))>-1?"Could not connect to the server":A}setup(){super.setup();const A=this.getInputFieldConfigs(),s=!!this.getModalTitle();A.length>=1&&this.updateFields(A,s),this.errorMessage=Se(10,(s?31:5)+20*(A.length-1)+16+this.getButtonTopMargin(),"",k.TOOLTIP_CONTENT),this.errorMessage.setColor(this.getTextColor(k.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(k.SUMMARY_PINK,!0)),this.errorMessage.setVisible(!1),this.modalContainer.add(this.errorMessage)}updateFields(A,s){this.inputContainers=[],this.inputs=[],this.formLabels=[],A.forEach((R,n)=>{const I=Se(10,(s?31:5)+20*n,R.label,k.TOOLTIP_CONTENT);I.name="formLabel"+n,this.formLabels.push(I),this.modalContainer.add(this.formLabels[this.formLabels.length-1]);const r=a.add.container(70,(s?28:2)+20*n);r.setVisible(!1);const L=Gt(0,0,80,16,!1,!1,0,0,dR.XTHIN),N=R==null?void 0:R.isPassword,l=R==null?void 0:R.isReadOnly,C=OZ(4,-2,440,116,k.TOOLTIP_CONTENT,{type:N?"password":"text",maxLength:N?64:20,readOnly:l});C.setOrigin(0,0),r.add(L),r.add(C),this.inputContainers.push(r),this.modalContainer.add(r),this.inputs.push(C)})}show(A){if(super.show(A)){this.inputContainers.map(R=>R.setVisible(!0));const s=A[0];return this.submitAction=s.buttonActions.length?s.buttonActions[0]:null,this.buttonBgs.length&&(this.buttonBgs[0].off("pointerdown"),this.buttonBgs[0].on("pointerdown",()=>{this.submitAction&&this.submitAction()})),this.modalContainer.y+=24,this.modalContainer.setAlpha(0),this.tween=a.tweens.add({targets:this.modalContainer,duration:Ot(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),!0}return!1}processInput(A){return A===X.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}sanitizeInputs(){for(const A of this.inputs)A.text=A.text.trim()}updateContainer(A){super.updateContainer(A),this.errorMessage.setText(this.getReadableErrorMessage((A==null?void 0:A.errorMessage)||"")),this.errorMessage.setVisible(!!this.errorMessage.text)}clear(){super.clear(),this.modalContainer.setVisible(!1),this.inputContainers.map(A=>A.setVisible(!1)),this.submitAction=null,this.tween&&this.tween.remove()}};o(sK,"FormModalUiHandler");let Ja=sK;const RK=class RK extends Ja{constructor(A=null){super(A),this.buttonGap=10,this.httpUserNotFoundErrorCode=404,this.ERR_REQUIRED_FIELD=s=>s==="username"?`${pC(s)} is required`:`${pC(s)} Id is required`,this.SUCCESS_SERVICE_MODE=(s,R)=>`Username and ${s} successfully ${R.toLowerCase()}ed`}getModalTitle(){return"Admin panel"}getWidth(){return this.adminMode===2?180:160}getMargin(){return[0,0,0,0]}getButtonLabels(){switch(this.adminMode){case 0:return["Link Account","Cancel"];case 1:return["Find account","Cancel"];case 2:return["Back to search","Cancel"];default:return["Activate ADMIN","Cancel"]}}getInputFieldConfigs(){const A=[];switch(this.adminMode){case 0:A.push({label:"Username"}),A.push({label:"Discord ID"});break;case 1:A.push({label:"Username"});break;case 2:const s=this.adminResult??{discordId:"",googleId:""};A.push({label:"Username",isReadOnly:!0}),A.push({label:"Discord ID",isReadOnly:s.discordId!==""}),A.push({label:"Google ID",isReadOnly:s.googleId!==""}),A.push({label:"Last played",isReadOnly:!0}),A.push({label:"Registered",isReadOnly:!0});break}return A}processInput(A){return A===X.SUBMIT&&this.submitAction?(this.submitAction(),!0):!1}show(A){this.config=A[0],this.adminMode=A[1],this.adminResult=A[2]??{username:"",discordId:"",googleId:"",lastLoggedIn:"",registered:""};const s=A[3],R=this.getInputFieldConfigs(),n=!!this.getModalTitle();this.updateFields(R,n),this.updateContainer(this.config);const I=this.getButtonLabels();for(let r=0;r<I.length;r++)this.buttonLabels[r].setText(I[r]);if(this.errorMessage.setPosition(10,(n?31:5)+20*(R.length-1)+16+this.getButtonTopMargin()),s?(this.errorMessage.setColor(this.getTextColor(k.SUMMARY_PINK)),this.errorMessage.setShadowColor(this.getTextColor(k.SUMMARY_PINK,!0))):(this.errorMessage.setColor(this.getTextColor(k.SUMMARY_GREEN)),this.errorMessage.setShadowColor(this.getTextColor(k.SUMMARY_GREEN,!0))),super.show(A)){this.populateFields(this.adminMode,this.adminResult);const r=this.submitAction;return this.submitAction=L=>{this.submitAction=r;const N=this.convertInputsToAdmin(),l=this.areFieldsValid(this.adminMode);if(l.error)return a.ui.setMode(te.LOADING,{buttonActions:[]}),this.showMessage(l.errorMessage??"",N,!0);a.ui.setMode(te.LOADING,{buttonActions:[]}),this.adminMode===0?this.adminLinkUnlink(N,"discord","Link").then(C=>C.error?this.showMessage(C.errorType,N,!0):this.showMessage(this.SUCCESS_SERVICE_MODE("discord","link"),N,!1)):this.adminMode===1?this.adminSearch(N).then(C=>{if(C.error)return this.showMessage(C.errorType,N,!0);this.updateAdminPanelInfo(C.adminSearchResult??N)}):this.adminMode===2&&this.updateAdminPanelInfo(N,1)},!0}return!1}showMessage(A,s,R){a.ui.setMode(te.ADMIN,Object.assign(this.config,{errorMessage:A==null?void 0:A.trim()}),this.adminMode,s,R),R?a.ui.playError():a.ui.playSelect()}populateFields(A,s){switch(A){case 0:this.inputs[0].setText(s.username),this.inputs[1].setText(s.discordId);break;case 1:this.inputs[0].setText(s.username);break;case 2:Object.keys(s).forEach((R,n)=>{if(this.inputs[n].setText(s[R]),R==="discordId"||R==="googleId"){const I=this.inputContainers[n].list.find(L=>L.type==="NineSlice"),r=a.add.image(this.inputContainers[n].x+I.width+this.buttonGap,this.inputContainers[n].y+Math.floor(I.height/2),s[R]===""?"link_icon":"unlink_icon");r.setName(`adminBtn_${R}`),r.setOrigin(.5,.5),r.setInteractive(),r.on("pointerdown",()=>{const L=R.toLowerCase().replace("id",""),N=s[R]===""?"Link":"Unlink",l=this.areFieldsValid(this.adminMode,L);if(l.error)return a.ui.setMode(te.LOADING,{buttonActions:[]}),this.showMessage(l.errorMessage??"",s,!0);this.adminLinkUnlink(this.convertInputsToAdmin(),L,N).then(C=>{if(C.error)return a.ui.setMode(te.LOADING,{buttonActions:[]}),this.showMessage(C.errorType,s,!0);a.ui.setMode(te.LOADING,{buttonActions:[]}),this.adminSearch(s).then(U=>U.error?this.showMessage(U.errorType,s,!0):this.showMessage(this.SUCCESS_SERVICE_MODE(L,N),U.adminSearchResult??s,!1))})}),this.addInteractionHoverEffect(r),this.modalContainer.add(r)}});break}}areFieldsValid(A,s){switch(A){case 0:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};if(!this.inputs[1].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("discord")};break;case 1:if(!this.inputs[0].text)return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD("username")};break;case 2:if(!this.inputs[1].text&&s==="discord")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};if(!this.inputs[2].text&&s==="google")return{error:!0,errorMessage:this.ERR_REQUIRED_FIELD(s)};break}return{error:!1}}convertInputsToAdmin(){var A,s,R,n,I,r,L,N,l;return{username:(A=this.inputs[0])!=null&&A.node?this.inputs[0].text:"",discordId:(s=this.inputs[1])!=null&&s.node?(R=this.inputs[1])==null?void 0:R.text:"",googleId:(n=this.inputs[2])!=null&&n.node?(I=this.inputs[2])==null?void 0:I.text:"",lastLoggedIn:(r=this.inputs[3])!=null&&r.node?(L=this.inputs[3])==null?void 0:L.text:"",registered:(N=this.inputs[4])!=null&&N.node?(l=this.inputs[4])==null?void 0:l.text:""}}async adminSearch(A){try{const[s,R]=await _O.admin.searchAccount({username:A.username});return R||!s?{adminSearchResult:A,error:!0,errorType:R}:{adminSearchResult:s,error:!1}}catch(s){return console.error(s),{error:!0,errorType:s}}}async adminLinkUnlink(A,s,R){try{let n=null;return s==="discord"?R==="Link"?n=await _O.admin.linkAccountToDiscord({discordId:A.discordId,username:A.username}):R==="Unlink"?n=await _O.admin.unlinkAccountFromDiscord({discordId:A.discordId,username:A.username}):console.warn("Unknown mode",R,"for service",s):s==="google"?R==="Link"?n=await _O.admin.linkAccountToGoogleId({googleId:A.googleId,username:A.username}):R==="Unlink"?n=await _O.admin.unlinkAccountFromGoogleId({googleId:A.googleId,username:A.username}):console.warn("Unknown mode",R,"for service",s):console.warn("Unknown service",s),n?{adminSearchResult:A,error:!0,errorType:n}:{adminSearchResult:A,error:!1}}catch(n){return console.error(n),{error:!0,errorType:n}}}updateAdminPanelInfo(A,s){s=s??2,a.ui.setMode(te.ADMIN,{buttonActions:[()=>{a.ui.revertMode(),a.ui.revertMode()},()=>{a.ui.revertMode(),a.ui.revertMode()}]},s,A)}clear(){super.clear();const A=["formLabel","adminBtn"],s=[],R=this.modalContainer.list;for(let n=R.length-1;n>=0;n--)(A.some(I=>R[n].name.includes(I))||R[n].type==="Container"&&R[n].list.find(I=>I.type==="rexInputText"))&&s.push(R[n]);for(;s.length>0;)this.modalContainer.remove(s.pop(),!0)}};o(RK,"AdminUiHandler");let B_=RK;var _a=(E=>(E[E.GAME_SETTINGS=0]="GAME_SETTINGS",E[E.ACHIEVEMENTS=1]="ACHIEVEMENTS",E[E.STATS=2]="STATS",E[E.EGG_LIST=3]="EGG_LIST",E[E.EGG_GACHA=4]="EGG_GACHA",E[E.POKEDEX=5]="POKEDEX",E[E.MANAGE_DATA=6]="MANAGE_DATA",E[E.COMMUNITY=7]="COMMUNITY",E[E.SAVE_AND_QUIT=8]="SAVE_AND_QUIT",E[E.LOG_OUT=9]="LOG_OUT",E))(_a||{});let J6="https://wiki.pokerogue.net/start";const z$="https://discord.gg/uWpTfdKG49",j$="https://github.com/pagefaultgames/pokerogue",q$="https://www.reddit.com/r/pokerogue",eJ="https://github.com/sponsors/pagefaultgames",OK=class OK extends hs{constructor(A=null){super(A),this.textPadding=8,this.defaultMessageBoxWidth=220,this.defaultWordWrapWidth=1224,this.scale=.1666666667,this.excludedMenus=()=>[{condition:[te.COMMAND,te.TITLE].includes(A??te.TITLE),options:[4,3]},{condition:OR,options:[9]}],this.menuOptions=$R(_a).map(s=>Number.parseInt(_a[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s)))}setup(){var R;const A=this.getUi(),s=(R=u.resolvedLanguage)==null?void 0:R.substring(0,2);["de","fr","ko","zh"].includes(s)&&(J6=`https://wiki.pokerogue.net/${s}:start`),this.bgmBar=new f_,this.bgmBar.setup(),A.bgmBar=this.bgmBar,this.menuContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.menuContainer.setName("menu"),this.menuContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.menuOverlay=new Phaser.GameObjects.Rectangle(a,-1,-1,a.scaledCanvas.width,a.scaledCanvas.height,16777215,.3),this.menuOverlay.setName("menu-overlay"),this.menuOverlay.setOrigin(0,0),this.menuContainer.add(this.menuOverlay),this.menuContainer.add(this.bgmBar),this.menuContainer.setVisible(!1)}render(){const A=this.getUi();this.excludedMenus=()=>[{condition:a.getCurrentPhase()instanceof BO,options:[4]},{condition:OR,options:[9]}],this.menuOptions=$R(_a).map(r=>Number.parseInt(_a[r])).filter(r=>!this.excludedMenus().some(L=>L.condition&&L.options.includes(r))),this.optionSelectText=Se(0,0,this.menuOptions.map(r=>`${u.t(`menuUiHandler:${_a[r]}`)}`).join(`
`),k.WINDOW,{maxLines:this.menuOptions.length}),this.optionSelectText.setLineSpacing(12),this.scale=Wn(k.WINDOW,a.uiTheme).scale,this.menuBg=Gt(a.game.canvas.width/6-(this.optionSelectText.displayWidth+25),0,this.optionSelectText.displayWidth+19+24*this.scale,a.game.canvas.height/6-2),this.menuBg.setOrigin(0,0),this.optionSelectText.setPositionRelative(this.menuBg,10+24*this.scale,6),this.menuContainer.add(this.menuBg),this.menuContainer.add(this.optionSelectText),A.add(this.menuContainer),this.menuMessageBoxContainer=a.add.container(0,130),this.menuMessageBoxContainer.setName("menu-message-box"),this.menuMessageBoxContainer.setVisible(!1),this.menuMessageBox=Gt(0,0,this.defaultMessageBoxWidth,48),this.menuMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.menuMessageBox),this.dialogueMessageBox=Gt(-this.textPadding,0,a.game.canvas.width/6+this.textPadding*2,49,!1,!1,0,0,dR.THIN),this.dialogueMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.dialogueMessageBox);const s=Se(this.textPadding,this.textPadding,"",k.WINDOW,{maxLines:2});s.setName("menu-message"),s.setOrigin(0,0),this.menuMessageBoxContainer.add(s),this.initTutorialOverlay(this.menuContainer),this.initPromptSprite(this.menuMessageBoxContainer),this.message=s,this.setDialogTestMode(!1),this.menuContainer.add(this.menuMessageBoxContainer);const R=[],n=o((r,L,N)=>{A.revertMode(),A.showText(r,null,()=>{const l={options:new Array(5).fill(null).map((C,U)=>U).filter(L).map(C=>({label:u.t("menuUiHandler:slot",{slotNumber:C+1}),handler:o(()=>(N(C),A.revertMode(),A.showText("",0),!0),"handler")})).concat([{label:u.t("menuUiHandler:cancel"),handler:o(()=>(A.revertMode(),A.showText("",0),!0),"handler")}]),xOffset:98};A.setOverlayMode(te.MENU_OPTION_SELECT,l)})},"confirmSlot");(ji||ec)&&R.push({label:u.t("menuUiHandler:importSession"),handler:o(()=>(n(u.t("menuUiHandler:importSlotSelect"),()=>!0,r=>a.gameData.importData(gE.SESSION,r)),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportSession"),handler:o(()=>{const r=[];return Promise.all(new Array(5).fill(null).map((L,N)=>{const l=N;return a.gameData.getSession(l).then(C=>{C&&r.push(l)})})).then(()=>{n(u.t("menuUiHandler:exportSlotSelect"),L=>r.indexOf(L)>-1,L=>a.gameData.tryExportData(gE.SESSION,L))}),!0},"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:importRunHistory"),handler:o(()=>(a.gameData.importData(gE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportRunHistory"),handler:o(()=>(a.gameData.tryExportData(gE.RUN_HISTORY),!0),"handler"),keepOpen:!0}),(ji||ec)&&R.push({label:u.t("menuUiHandler:importData"),handler:o(()=>(A.revertMode(),a.gameData.importData(gE.SYSTEM),!0),"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:exportData"),handler:o(()=>(a.gameData.tryExportData(gE.SYSTEM),!0),"handler"),keepOpen:!0},{label:u.t("menuUiHandler:consentPreferences"),handler:o(()=>{const r=document.querySelector(".termly-display-preferences"),L=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});return r.dispatchEvent(L),r.focus(),!0},"handler"),keepOpen:!0}),(ji||ec)&&R.push({label:"Test Dialogue",handler:o(()=>{A.playSelect();const r="",L={};return L.buttonActions=[N=>{A.revertMode(),A.playSelect();const C=decodeURIComponent(escape(atob(N))),U=A.getHandler();U.tutorialActive=!0;const D={},M=C.split(" "),h=M[0],_=/\{\{(\w*)\}\}/g,d=u.t(h).match(_)??[];if(d.length>0)for(let f=0;f<d.length;f++)typeof M[f+1]<"u"&&(D[d[f].replace(/\W/g,"")]=u.t(M[f+1]));this.setDialogTestMode(!0),A.showText(String(u.t(h,D)),null,()=>a.ui.showText("",0,()=>{U.tutorialActive=!1,this.setDialogTestMode(!1)}),null,!0)},()=>{A.revertMode()}],A.setMode(te.TEST_DIALOGUE,L,r),!0},"handler"),keepOpen:!0}),R.push({label:u.t("menuUiHandler:cancel"),handler:o(()=>(a.ui.revertMode(),!0),"handler"),keepOpen:!0}),this.manageDataConfig={xOffset:98,options:R,maxOptions:7};const I=[{label:"Wiki",handler:o(()=>{var r;return(r=window.open(J6,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"Discord",handler:o(()=>{var r;return(r=window.open(z$,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"GitHub",handler:o(()=>{var r;return(r=window.open(j$,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:"Reddit",handler:o(()=>{var r;return(r=window.open(q$,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0},{label:u.t("menuUiHandler:donate"),handler:o(()=>{var r;return(r=window.open(eJ,"_blank"))==null||r.focus(),!0},"handler"),keepOpen:!0}];I.push({label:u.t("menuUiHandler:cancel"),handler:o(()=>(a.ui.revertMode(),!0),"handler")}),this.communityConfig={xOffset:98,options:I},this.setCursor(0)}show(A){return this.render(),super.show(A),this.menuOptions=$R(_a).map(s=>Number.parseInt(_a[s])).filter(s=>!this.excludedMenus().some(R=>R.condition&&R.options.includes(s))),this.menuContainer.setVisible(!0),this.setCursor(0),this.getUi().moveTo(this.menuContainer,this.getUi().length-1),this.getUi().hideTooltip(),a.playSound("ui/menu_open"),this.menuContainer.bringToTop(this.tutorialOverlay),this.menuContainer.bringToTop(this.menuMessageBoxContainer),Za(LO.Menu),this.bgmBar.toggleBgmBar(!0),!0}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===X.ACTION){let I=this.cursor;const r=this.excludedMenus().find(L=>L.condition);if(r!==void 0&&r.options!==void 0&&r.options.length>0){const L=r.options.sort();for(const N of L)if(I>=N)I++;else break}switch(this.showText("",0),I){case 0:s.setOverlayMode(te.SETTINGS),R=!0;break;case 1:s.setOverlayMode(te.ACHIEVEMENTS),R=!0;break;case 2:s.setOverlayMode(te.GAME_STATS),R=!0;break;case 3:a.gameData.eggs.length?(s.revertMode(),s.setOverlayMode(te.EGG_LIST),R=!0):(s.showText(u.t("menuUiHandler:noEggs"),null,()=>s.showText(""),Ot(1500)),n=!0);break;case 4:s.revertMode(),s.setOverlayMode(te.EGG_GACHA),R=!0;break;case 5:s.revertMode(),s.setOverlayMode(te.POKEDEX),R=!0;break;case 6:s.setOverlayMode(te.MENU_OPTION_SELECT,this.manageDataConfig),R=!0;break;case 7:s.setOverlayMode(te.MENU_OPTION_SELECT,this.communityConfig),R=!0;break;case 8:if(a.currentBattle){R=!0;const N=o(()=>{s.setMode(te.LOADING,{buttonActions:[],fadeOut:o(()=>a.gameData.saveAll(!0,!0,!0,!0).then(()=>{a.reset(!0)}),"fadeOut")})},"doSaveQuit");a.currentBattle.turn>1?s.showText(u.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(te.CONFIRM,N,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):N()}else n=!0;break;case 9:R=!0;const L=o(()=>{s.setMode(te.LOADING,{buttonActions:[],fadeOut:o(()=>_O.account.logout().then(()=>{uu().then(()=>a.reset(!0,!0))}),"fadeOut")})},"doLogout");a.currentBattle?s.showText(u.t("menuUiHandler:losingProgressionWarning"),null,()=>{if(!this.active){this.showText("",0);return}s.setOverlayMode(te.CONFIRM,L,()=>{s.revertMode(),this.showText("",0)},!1,-98)}):L();break}}else if(A===X.CANCEL)R=!0,s.revertMode().then(I=>{I||s.setMode(te.MESSAGE)});else switch(A){case X.UP:this.cursor?R=this.setCursor(this.cursor-1):R=this.setCursor(this.menuOptions.length-1);break;case X.DOWN:this.cursor+1<this.menuOptions.length?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break}return R?s.playSelect():n&&s.playError(),R||n}setDialogTestMode(A){this.menuMessageBox.setVisible(!A),this.dialogueMessageBox.setVisible(A),this.message.setWordWrapWidth(A?a.ui.getMessageHandler().wordWrapWidth:this.defaultWordWrapWidth),this.message.setX(A?this.textPadding+1:this.textPadding),this.message.setY(A?this.textPadding+.4:this.textPadding)}showText(A,s,R,n,I,r){this.menuMessageBoxContainer.setVisible(!!A),super.showText(A,s,R,n,I,r)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.cursorObj.setOrigin(0,0),this.menuContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.menuBg,7,6+(18+this.cursor*96)*this.scale),s}clear(){super.clear(),this.menuContainer.setVisible(!1),this.bgmBar.toggleBgmBar(!1),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(OK,"MenuUiHandler");let g_=OK;const tJ={de:{TextSize:"80px"}},nK=class nK extends hs{constructor(A=null){super(A),this.ROWS=4,this.COLS=17,this.achvsTotal=Object.keys(ht).length,this.vouchersTotal=Object.keys(Us).length,this.scrollCursor=0}setup(){var M;const A=this.getUi();this.mainContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.mainContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.headerBg=Gt(0,0,a.game.canvas.width/6-2,24),this.headerBg.setOrigin(0,0),this.headerText=Se(0,0,"",k.SETTINGS_LABEL),this.headerText.setOrigin(0,0),this.headerText.setPositionRelative(this.headerBg,8,4),this.headerActionButton=new Phaser.GameObjects.Sprite(a,0,0,"keyboard","ACTION.png"),this.headerActionButton.setOrigin(0,0),this.headerActionButton.setPositionRelative(this.headerBg,236,6),this.headerActionText=Se(0,0,"",k.WINDOW,{fontSize:"60px"}),this.headerActionText.setOrigin(0,0),this.headerActionText.setPositionRelative(this.headerBg,264,8);const s=a.gameData.gender??Jt.MALE,R=Jt[s].toLowerCase();this.achvsName=u.t("achv:Achievements.name",{context:R}),this.vouchersName=u.t("voucher:vouchers"),this.iconsBg=Gt(0,this.headerBg.height,a.game.canvas.width/6-2,a.game.canvas.height/6-this.headerBg.height-68),this.iconsBg.setOrigin(0,0);const n=6;this.scrollBar=new mn(this.iconsBg.width-9,this.iconsBg.y+n,4,this.iconsBg.height-n*2,this.ROWS),this.iconsContainer=a.add.container(5,this.headerBg.height+8),this.icons=[];for(let h=0;h<this.ROWS*this.COLS;h++){const _=h%this.COLS*18,d=Math.floor(h/this.COLS)*18,f=a.add.sprite(_,d,"items","unknown");f.setOrigin(0,0),f.setScale(.5),this.icons.push(f),this.iconsContainer.add(f)}const I=Gt(0,this.headerBg.height+this.iconsBg.height,174,24);I.setOrigin(0,0),this.titleBg=I,this.titleText=Se(0,0,"",k.WINDOW);const r=((M=tJ[u.language])==null?void 0:M.TextSize)??this.titleText.style.fontSize;this.titleText.setFontSize(r);const L=I.x+I.width/2,N=I.y+I.height/2;this.titleText.setOrigin(.5,.5),this.titleText.setPosition(L,N),this.scoreContainer=a.add.container(I.x+I.width,I.y);const l=Gt(0,0,46,24);l.setOrigin(0,0),this.scoreContainer.add(l),this.scoreText=Se(l.width/2,l.height/2,"",k.WINDOW),this.scoreText.setOrigin(.5,.5),this.scoreContainer.add(this.scoreText);const C=Gt(this.scoreContainer.x+l.width,I.y,98,24);C.setOrigin(0,0),this.unlockText=Se(0,0,"",k.WINDOW),this.unlockText.setOrigin(.5,.5),this.unlockText.setPositionRelative(C,C.width/2,C.height/2);const U=Gt(0,I.y+I.height,a.game.canvas.width/6-2,42);U.setOrigin(0,0);const D=Se(0,0,"",k.WINDOW,{maxLines:2});D.setWordWrapWidth(1870),D.setOrigin(0,0),D.setPositionRelative(U,8,4),this.message=D,this.mainContainer.add(this.headerBg),this.mainContainer.add(this.headerActionButton),this.mainContainer.add(this.headerText),this.mainContainer.add(this.headerActionText),this.mainContainer.add(this.iconsBg),this.mainContainer.add(this.scrollBar),this.mainContainer.add(this.iconsContainer),this.mainContainer.add(I),this.mainContainer.add(this.titleText),this.mainContainer.add(this.scoreContainer),this.mainContainer.add(C),this.mainContainer.add(this.unlockText),this.mainContainer.add(U),this.mainContainer.add(D),A.add(this.mainContainer),this.currentPage=0,this.mainContainer.setVisible(!1)}show(A){return super.show(A),this.headerBgX=this.headerBg.getTopRight().x,this.updateAchvIcons(),this.mainContainer.setVisible(!0),this.setCursor(0),this.setScrollCursor(0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.getUi().moveTo(this.mainContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}showAchv(A){const s=a.gameData.gender??Jt.MALE,R=Jt[s].toLowerCase();A.name=u.t(`achv:${A.localizationKey}.name`,{context:R}),A.description=ff(A.localizationKey);const n=a.gameData.achvUnlocks,I=n.hasOwnProperty(A.id),r=!I&&A.secret&&(!A.parentId||!n.hasOwnProperty(A.parentId));this.titleText.setText(I?A.name:"???"),this.showText(r?"":A.description),this.scoreText.setText(`${A.score}pt`),this.unlockText.setText(I?new Date(n[A.id]).toLocaleDateString():u.t("achv:Locked.name"))}showVoucher(A){const s=a.gameData.voucherUnlocks,R=s.hasOwnProperty(A.id);this.titleText.setText(zC(A.voucherType)),this.showText(A.description),this.unlockText.setText(R?new Date(s[A.id]).toLocaleDateString():u.t("voucher:locked"))}processInput(A){const s=this.getUi();let R=!1;if(A===X.ACTION&&(R=!0,this.setScrollCursor(0),this.currentPage===0?(this.currentPage=1,this.updateVoucherIcons()):this.currentPage===1&&(this.currentPage=0,this.updateAchvIcons()),this.setCursor(0,!0),this.scrollBar.setTotalRows(Math.ceil(this.currentTotal/this.COLS)),this.scrollBar.setScrollCursor(0),this.mainContainer.update()),A===X.CANCEL)R=!0,a.ui.revertMode();else{const n=Math.floor(this.cursor/this.COLS),I=this.scrollCursor*this.COLS;switch(A){case X.UP:if(this.cursor<this.COLS)if(this.scrollCursor)R=this.setScrollCursor(this.scrollCursor-1);else{R=this.setScrollCursor(Math.ceil(this.currentTotal/this.COLS)-this.ROWS);let L=this.cursor+(this.ROWS-1)*this.COLS;L>this.currentTotal-this.scrollCursor*this.COLS-1&&(L-=this.COLS),R=R&&this.setCursor(L)}else R=this.setCursor(this.cursor-this.COLS);break;case X.DOWN:const r=I+1<this.currentTotal;n>=this.ROWS-1?this.scrollCursor<Math.ceil(this.currentTotal/this.COLS)-this.ROWS&&r?R=this.setScrollCursor(this.scrollCursor+1):R=this.setScrollCursor(0)&&this.setCursor(this.cursor%this.COLS):r&&(R=this.setCursor(Math.min(this.cursor+this.COLS,this.currentTotal-I-1)));break;case X.LEFT:this.cursor%this.COLS===0?R=this.setCursor(Math.min(this.cursor+this.COLS-1,this.currentTotal-I-1)):R=this.setCursor(this.cursor-1);break;case X.RIGHT:(this.cursor+1)%this.COLS===0||this.cursor+I===this.currentTotal-1?R=this.setCursor(this.cursor-this.cursor%this.COLS):R=this.setCursor(this.cursor+1);break}}return R&&s.playSelect(),R}setCursor(A,s){const R=super.setCursor(A);let n=R;if(this.cursorObj||(this.cursorObj=a.add.nineslice(0,0,"select_cursor_highlight",void 0,16,16,1,1,1,1),this.cursorObj.setOrigin(0,0),this.iconsContainer.add(this.cursorObj),n=!0),this.cursorObj.setPositionRelative(this.icons[this.cursor],0,0),n||s)switch(this.currentPage){case 0:s&&(this.titleBg.width=174,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!0)),this.showAchv(ht[Object.keys(ht)[A+this.scrollCursor*this.COLS]]);break;case 1:s&&(this.titleBg.width=220,this.titleText.x=this.titleBg.width/2,this.scoreContainer.setVisible(!1)),this.showVoucher(Us[Object.keys(Us)[A+this.scrollCursor*this.COLS]]);break}return R}setScrollCursor(A){if(A===this.scrollCursor)return!1;this.scrollCursor=A,this.scrollBar.setScrollCursor(this.scrollCursor);const s=Math.min(this.cursor,this.currentTotal-this.scrollCursor*this.COLS-1);switch(s!==this.cursor&&this.setCursor(s),this.currentPage){case 0:this.updateAchvIcons(),this.showAchv(ht[Object.keys(ht)[this.cursor+this.scrollCursor*this.COLS]]);break;case 1:this.updateVoucherIcons(),this.showVoucher(Us[Object.keys(Us)[this.cursor+this.scrollCursor*this.COLS]]);break}return!0}updateAchvIcons(){this.headerText.text=this.achvsName,this.headerActionText.text=this.vouchersName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=a.gameData.achvUnlocks,R=this.scrollCursor*this.COLS,n=this.ROWS*this.COLS,I=Object.values(ht).slice(R,n+R);I.forEach((r,L)=>{const N=this.icons[L],l=s.hasOwnProperty(r.id),C=!l&&r.secret&&(!r.parentId||!s.hasOwnProperty(r.parentId)),U=!C&&!l;N.setFrame(C?"unknown":r.iconImage),N.setVisible(!0),U?N.setTintFill(0):N.clearTint()}),I.length<this.icons.length&&this.icons.slice(I.length).map(r=>r.setVisible(!1)),this.currentTotal=this.achvsTotal}updateVoucherIcons(){this.headerText.text=this.vouchersName,this.headerActionText.text=this.achvsName;const A=this.headerBgX-this.headerActionText.displayWidth-8;this.headerActionText.setX(A),this.headerActionButton.setX(A-this.headerActionButton.displayWidth-4);const s=a.gameData.voucherUnlocks,R=this.scrollCursor*this.COLS,n=this.ROWS*this.COLS,I=Object.values(Us).slice(R,n+R);I.forEach((r,L)=>{const N=this.icons[L],l=s.hasOwnProperty(r.id);N.setFrame(Jn(r.voucherType)),N.setVisible(!0),l?N.clearTint():N.setTintFill(0)}),I.length<this.icons.length&&this.icons.slice(I.length).map(r=>r.setVisible(!1)),this.currentTotal=this.vouchersTotal}clear(){super.clear(),this.currentPage=0,this.mainContainer.setVisible(!1),this.setScrollCursor(0),this.setCursor(0,!0),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}};o(nK,"AchvsUiHandler");let m_=nK;const aK=class aK extends rS{constructor(A=te.OPTION_SELECT){super(A)}getWindowWidth(){return 64}};o(aK,"OptionSelectUiHandler");let BS=aK;const iK=class iK extends Js{constructor(){super(te.EGG_HATCH_SCENE),this.eventTarget=new EventTarget}setup(){this.eggHatchContainer=a.add.container(0,-a.game.canvas.height/6),a.fieldUI.add(this.eggHatchContainer);const A=a.anims.generateFrameNames("egg_lightrays",{start:0,end:3});a.anims.exists("egg_lightrays")||a.anims.create({key:"egg_lightrays",frames:A,frameRate:32})}show(A){return super.show(A),this.getUi().showText("",0),a.setModifiersVisible(!1),!0}processInput(A){if(A===X.ACTION||A===X.CANCEL){const s=a.getCurrentPhase();if(s instanceof du&&s.trySkip())return!0}return a.ui.getMessageHandler().processInput(A)}setCursor(A){return!1}clear(){super.clear(),this.eggHatchContainer.removeAll(!0),this.getUi().hideTooltip()}};o(iK,"EggHatchSceneHandler");let p_=iK;const IK=class IK{constructor(A,s,R){this.handler=A,this.ROWS=s,this.COLUMNS=R,this.scrollCursor=0,this.cursor=0,this.totalElements=s*R}withScrollBar(A){return this.scrollBar=A,this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this}withUpdateGridCallBack(A){return this.updateGridCallback=A,this}withUpdateSingleElementCallback(A){return this.updateDetailsCallback=A,this}setTotalElements(A){this.totalElements=A,this.scrollBar&&this.scrollBar.setTotalRows(Math.ceil(this.totalElements/this.COLUMNS)),this.setScrollCursor(0)}getItemOffset(){return this.scrollCursor*this.COLUMNS}processInput(A){let s=!1;const R=Math.min(this.ROWS,Math.ceil(this.totalElements/this.COLUMNS)),n=Math.max(0,Math.ceil(this.totalElements/this.COLUMNS)-R),I=Math.floor(this.cursor/this.COLUMNS),r=this.cursor%this.COLUMNS,L=this.scrollCursor*this.COLUMNS,N=Math.min(this.totalElements-1,this.totalElements-n*this.COLUMNS-1);switch(A){case X.UP:if(I>0)s=this.setCursor(this.cursor-this.COLUMNS);else if(this.scrollCursor>0)s=this.setScrollCursor(this.scrollCursor-1);else{let l=this.cursor+(R-1)*this.COLUMNS;l>N&&(l-=this.COLUMNS),s=this.setScrollCursor(n,l)}break;case X.DOWN:I<R-1?s=this.setCursor(Math.min(this.cursor+this.COLUMNS,this.totalElements-L-1)):this.scrollCursor<n?s=this.setScrollCursor(this.scrollCursor+1):s=this.setScrollCursor(0,this.cursor%this.COLUMNS);break;case X.LEFT:r>0?s=this.setCursor(this.cursor-1):this.scrollCursor===n&&I===R-1?s=this.setCursor(N):s=this.setCursor(this.cursor+this.COLUMNS-1);break;case X.RIGHT:r<this.COLUMNS-1&&this.cursor+L<this.totalElements-1?s=this.setCursor(this.cursor+1):s=this.setCursor(this.cursor-r);break}return s}reset(){this.setScrollCursor(0),this.setCursor(0)}setCursor(A){return this.cursor=A,this.handler.setCursor(A)}setScrollCursor(A,s){const R=A!==this.scrollCursor;R&&(this.scrollCursor=A,this.scrollBar&&this.scrollBar.setScrollCursor(A),this.updateGridCallback&&this.updateGridCallback());let n=!1;const I=this.cursor+this.scrollCursor*this.COLUMNS;return s!==void 0?n=this.setCursor(s):I>=this.totalElements?n=this.setCursor(this.totalElements-this.scrollCursor*this.COLUMNS-1):R&&this.updateDetailsCallback&&this.updateDetailsCallback(I),R||n}};o(IK,"ScrollableGridUiHandler");let bu=IK;const rK=class rK extends hs{constructor(){super(te.EGG_LIST),this.ROWS=9,this.COLUMNS=11}setup(){const A=this.getUi();this.eggListContainer=a.add.container(0,-a.game.canvas.height/6),this.eggListContainer.setVisible(!1),A.add(this.eggListContainer);const s=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,26720);s.setOrigin(0,0),this.eggListContainer.add(s);const R=a.add.image(0,0,"egg_list_bg");R.setOrigin(0,0),this.eggListContainer.add(R),this.eggListContainer.add(Gt(1,85,106,22)),this.eggListContainer.add(Gt(1,102,106,50,!0)),this.eggListContainer.add(Gt(1,147,106,32,!0)),this.eggListContainer.add(Gt(107,1,212,178)),this.iconAnimHandler=new II,this.iconAnimHandler.setup(),this.eggNameText=Se(8,68,"",k.SUMMARY),this.eggNameText.setOrigin(0,0),this.eggListContainer.add(this.eggNameText),this.eggDateText=Se(8,91,"",k.TOOLTIP_CONTENT),this.eggListContainer.add(this.eggDateText),this.eggHatchWavesText=Se(8,108,"",k.TOOLTIP_CONTENT),this.eggHatchWavesText.setWordWrapWidth(540),this.eggListContainer.add(this.eggHatchWavesText),this.eggGachaInfoText=Se(8,152,"",k.TOOLTIP_CONTENT),this.eggGachaInfoText.setWordWrapWidth(540),this.eggListContainer.add(this.eggGachaInfoText),this.eggListIconContainer=a.add.container(113,5),this.eggListContainer.add(this.eggListIconContainer),this.cursorObj=a.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.eggListContainer.add(this.cursorObj),this.eggSprite=a.add.sprite(54,37,"egg"),this.eggListContainer.add(this.eggSprite);const n=new mn(310,5,4,170,this.ROWS);this.eggListContainer.add(n),this.scrollGridHandler=new bu(this,this.ROWS,this.COLUMNS).withScrollBar(n).withUpdateGridCallBack(()=>this.updateEggIcons()).withUpdateSingleElementCallback(r=>this.setEggDetails(r)),this.eggListMessageBoxContainer=a.add.container(0,a.game.canvas.height/6),this.eggListMessageBoxContainer.setVisible(!1),this.eggListContainer.add(this.eggListMessageBoxContainer);const I=Gt(1,-1,318,28);I.setOrigin(0,1),this.eggListMessageBoxContainer.add(I),this.message=Se(8,-8,"",k.WINDOW,{maxLines:1}),this.message.setOrigin(0,1),this.eggListMessageBoxContainer.add(this.message),this.cursor=-1}show(A){return super.show(A),this.initEggIcons(),this.getUi().bringToTop(this.eggListContainer),this.eggListContainer.setVisible(!0),this.scrollGridHandler.setTotalElements(a.gameData.eggs.length),this.updateEggIcons(),this.setCursor(0),!0}initEggIcons(){this.eggIcons=[];for(let A=0;A<Math.min(this.ROWS*this.COLUMNS,a.gameData.eggs.length);A++){const s=A%this.COLUMNS*18,R=Math.floor(A/this.COLUMNS)*18,n=a.add.sprite(s-2,R+2,"egg_icons");n.setScale(.5),n.setOrigin(0,0),this.eggListIconContainer.add(n),this.eggIcons.push(n)}}updateEggIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(this.eggIcons.length,a.gameData.eggs.length-A);this.eggIcons.forEach((R,n)=>{if(n!==this.cursor&&this.iconAnimHandler.addOrUpdate(R,ss.NONE),n<s){const I=a.gameData.eggs[n+A];R.setFrame(I.getKey()),R.setVisible(!0)}else R.setVisible(!1)})}setEggDetails(A){const s=a.gameData.eggs[A];this.eggSprite.setFrame(`egg_${s.getKey()}`),this.eggNameText.setText(`${u.t("egg:egg")} (${s.getEggDescriptor()})`),this.eggDateText.setText(new Date(s.timestamp).toLocaleString(void 0,{weekday:"short",year:"numeric",month:"2-digit",day:"numeric"})),this.eggHatchWavesText.setText(s.getEggHatchWavesMessage()),this.eggGachaInfoText.setText(s.getEggTypeDescriptor())}processInput(A){const s=this.getUi();let R=!1;const n=!1;return A===X.CANCEL?(s.revertMode(),R=!0):R=this.scrollGridHandler.processInput(A),R&&s.playSelect(),R||n}setCursor(A){let s=!1;const R=this.cursor;if(s=super.setCursor(A),s){const n=this.eggIcons[A];this.cursorObj.setPositionRelative(n,114,5),R>-1&&this.iconAnimHandler.addOrUpdate(this.eggIcons[R],ss.NONE),this.iconAnimHandler.addOrUpdate(n,ss.ACTIVE),this.setEggDetails(A+this.scrollGridHandler.getItemOffset())}return s}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.eggListContainer.setVisible(!1),this.iconAnimHandler.removeAll(),this.eggListIconContainer.removeAll(!0),this.eggIcons=[]}};o(rK,"EggListUiHandler");let K_=rK;const LK=class LK extends hs{constructor(){super(te.EGG_GACHA),this.scale=.1666666667,this.gachaContainers=[],this.gachaKnobs=[],this.gachaHatches=[],this.gachaInfoContainers=[],this.voucherCountLabels=[],this.defaultText=u.t("egg:selectMachine")}setup(){this.gachaCursor=0,this.scale=Wn(k.WINDOW,a.uiTheme).scale;const A=this.getUi();this.eggGachaContainer=a.add.container(0,-a.game.canvas.height/6),this.eggGachaContainer.setVisible(!1),A.add(this.eggGachaContainer);const s=a.add.nineslice(0,0,"default_bg",void 0,320,180,0,0,16,0);s.setOrigin(0,0),this.eggGachaContainer.add(s);const R=a.anims.generateFrameNames("gacha_hatch",{suffix:".png",start:1,end:4});a.anims.exists("open")||a.anims.create({key:"open",frames:R,frameRate:12}),a.anims.exists("close")||a.anims.create({key:"close",frames:R.reverse(),frameRate:12}),dE(bn).forEach((M,h)=>{const _=bn[M].toString().toLowerCase(),d=a.add.container(180*h,18),f=a.add.sprite(0,0,`gacha_${_}`);f.setOrigin(0,0);const H=a.add.sprite(115,80,`gacha_underlay_${_}`);H.setOrigin(0,0);const B=a.add.sprite(0,0,"gacha_eggs");B.setOrigin(0,0);const K=a.add.sprite(0,0,"gacha_glass");K.setOrigin(0,0);const Y=a.add.container(160,46),v=u.resolvedLanguage??"en";let Z=k.WINDOW_ALT,z=4,q=0,J=-20,Ae=6;["de","es-ES","fr","ko","pt-BR"].includes(v)&&(Z=k.SMALLER_WINDOW_ALT,z=2,q=2);let Q=z,Re=q;["de","es-ES"].includes(v)&&(J=-25,Ae=10,Q=-6,Re=0);const W=Se(z,q,u.t("egg:legendaryUPGacha"),Z);switch(W.setOrigin(0,0),Y.add(W),M){case bn.LEGENDARY:["de","es-ES"].includes(v)&&(W.setAlign("center"),W.setY(0)),["pt-BR"].includes(v)?W.setX(Q-2):W.setX(Q),W.setY(Re);const he=a.add.sprite(J,Ae,"pokemon_icons_0");["pt-BR"].includes(v)&&he.setX(J-2),he.setScale(.5),he.setOrigin(0,.5),Y.add(he);break;case bn.MOVE:["de","es-ES","fr","pt-BR"].includes(v)&&(W.setAlign("center"),W.setY(0)),W.setText(u.t("egg:moveUPGacha")),W.setX(0),W.setOrigin(.5,0);break;case bn.SHINY:["de","fr","ko"].includes(v)&&(W.setAlign("center"),W.setY(0)),W.setText(u.t("egg:shinyUPGacha")),W.setX(0),W.setOrigin(.5,0);break}const ie=a.add.sprite(191,89,"gacha_knob"),Be=a.add.sprite(115,73,"gacha_hatch");Be.setOrigin(0,0),d.add(B),d.add(H),d.add(f),d.add(K),d.add(ie),d.add(Be),d.add(Y),K.setAlpha(.5),Be.setAlpha(.9),Be.on("animationupdate",(he,ve)=>H.setFrame(ve.textureFrame==="4.png"?"open_hatch":"default")),this.gachaContainers.push(d),this.gachaKnobs.push(ie),this.gachaHatches.push(Be),this.gachaInfoContainers.push(Y),this.eggGachaContainer.add(d),this.updateGachaInfo(h)}),this.eggGachaOptionsContainer=a.add.container(),this.eggGachaOptionsContainer=a.add.container(a.game.canvas.width/6,148),this.eggGachaContainer.add(this.eggGachaOptionsContainer),this.eggGachaOptionSelectBg=Gt(0,0,96,16+576*this.scale),this.eggGachaOptionSelectBg.setOrigin(1,1),this.eggGachaOptionsContainer.add(this.eggGachaOptionSelectBg);const n="x1",r=[{multiplier:n,description:`1 ${u.t("egg:pull")}`,icon:Jn(uE.REGULAR)},{multiplier:"x10",description:`10 ${u.t("egg:pulls")}`,icon:Jn(uE.REGULAR)},{multiplier:n,description:`5 ${u.t("egg:pulls")}`,icon:Jn(uE.PLUS)},{multiplier:n,description:`10 ${u.t("egg:pulls")}`,icon:Jn(uE.PREMIUM)},{multiplier:n,description:`25 ${u.t("egg:pulls")}`,icon:Jn(uE.GOLDEN)}],L=u.resolvedLanguage??"en",N=r.map(M=>{const h=M.description.split(" ");return h[0].length<2&&(h[0]+=["zh","ko"].includes(L.substring(0,2))?" ":"  "),M.multiplier===n&&(h[0]=" "+h[0]),`     ${M.multiplier.padEnd(5)}${h.join(" ")}`}).join(`
`),l=Se(0,0,`${N}
${u.t("menu:cancel")}`,k.WINDOW);l.setLineSpacing(28),l.setFontSize("80px"),this.eggGachaOptionsContainer.add(l),l.setPositionRelative(this.eggGachaOptionSelectBg,16,9),r.forEach((M,h)=>{const _=a.add.sprite(0,0,"items",M.icon);_.setScale(3*this.scale),_.setPositionRelative(this.eggGachaOptionSelectBg,20,9+(48+h*96)*this.scale),this.eggGachaOptionsContainer.add(_)}),this.eggGachaContainer.add(this.eggGachaOptionsContainer),new Array($R(uE).length).fill(null).map((M,h)=>{const _=a.add.container(a.game.canvas.width/6-56*h,0),d=Gt(0,0,56,22);d.setOrigin(1,0),_.add(d);const f=Se(-48,3,"0",k.WINDOW);f.setOrigin(0,0),_.add(f),this.voucherCountLabels.push(f);const H=Jn(h),B=a.add.sprite(-19,2,"items",H);B.setOrigin(0,0),B.setScale(.5),_.add(B),this.eggGachaContainer.add(_)}),this.eggGachaOverlay=a.add.rectangle(0,0,s.displayWidth,s.displayHeight,0),this.eggGachaOverlay.setOrigin(0,0),this.eggGachaOverlay.setAlpha(0),this.eggGachaContainer.add(this.eggGachaOverlay),this.eggGachaSummaryContainer=a.add.container(0,0),this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaContainer.add(this.eggGachaSummaryContainer);const C=a.add.container(0,148),U=Gt(0,0,320,32);U.setOrigin(0,0),C.add(U),this.eggGachaMessageBox=U;const D=Se(8,8,"",k.WINDOW,{maxLines:2});D.setOrigin(0,0),C.add(D),this.message=D,this.initTutorialOverlay(this.eggGachaContainer),this.eggGachaContainer.add(C),this.initPromptSprite(C),this.setCursor(0)}show(A){super.show(A),this.getUi().showText(this.defaultText,0),this.setGachaCursor(1);for(let s=0;s<this.gachaContainers.length;s++)this.updateGachaInfo(s);return this.updateVoucherCounts(),this.getUi().bringToTop(this.eggGachaContainer),this.eggGachaContainer.setVisible(!0),Za(LO.Egg_Gacha),!0}getDelayValue(A){return this.transitioning&&this.transitionCancelled&&(A=Math.ceil(A/5)),Ot(A)}pull(A=0,s=0,R){xe.EGG_GACHA_PULL_COUNT_OVERRIDE&&!s&&(A=xe.EGG_GACHA_PULL_COUNT_OVERRIDE),this.eggGachaOptionsContainer.setVisible(!1),this.setTransitioning(!0);const n=o(()=>{if(this.transitionCancelled)return this.showSummary(R);const I=a.add.sprite(127,75,"egg",`egg_${R[s].getKey()}`);I.setScale(.5),this.gachaContainers[this.gachaCursor].add(I),this.gachaContainers[this.gachaCursor].moveTo(I,2);const r=o(()=>{a.playSound("se/gacha_running",{loop:!0}),a.time.delayedCall(this.getDelayValue(s?500:1250),()=>{a.playSound("se/gacha_dispense"),a.time.delayedCall(this.getDelayValue(750),()=>{a.sound.stopByKey("se/gacha_running"),a.tweens.add({targets:I,duration:this.getDelayValue(350),y:95,ease:"Bounce.easeOut",onComplete:o(()=>{a.time.delayedCall(this.getDelayValue(125),()=>{a.playSound("se/pb_catch"),this.gachaHatches[this.gachaCursor].play("open"),a.tweens.add({targets:I,duration:this.getDelayValue(350),scale:.75,ease:"Sine.easeIn"}),a.tweens.add({targets:I,y:110,duration:this.getDelayValue(350),ease:"Back.easeOut",onComplete:o(()=>{this.gachaHatches[this.gachaCursor].play("close"),a.tweens.add({targets:I,y:200,duration:this.getDelayValue(350),ease:"Cubic.easeIn",onComplete:o(()=>{++s<A?this.pull(A,s,R):this.showSummary(R)},"onComplete")})},"onComplete")})})},"onComplete")})})})},"doPullAnim");s?r():(a.playSound("se/gacha_dial"),a.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:90,ease:"Cubic.easeInOut",onComplete:o(()=>{a.tweens.add({targets:this.gachaKnobs[this.gachaCursor],duration:this.getDelayValue(350),angle:0,ease:"Sine.easeInOut"}),a.time.delayedCall(this.getDelayValue(350),r)},"onComplete")}))},"doPull");if(A||(A=1),s||(s=0),!R){R=[];for(let I=1;I<=A;I++){const r={pulled:!0,sourceType:this.gachaCursor};if(I===A){const N=this.getGuaranteedEggTierFromPullCount(A);!R.some(l=>l.tier>=N)&&N!==F.COMMON&&(r.tier=N)}const L=new sa(r);R.push(L)}R=GO(R),(a.currentBattle?a.gameData.saveAll(!0,!0,!0):a.gameData.saveSystem()).then(I=>{if(!I)return a.reset(!0);n()});return}n()}getGuaranteedEggTierFromPullCount(A){switch(A){case 10:return F.RARE;case 25:return F.EPIC;default:return F.COMMON}}showSummary(A){const s=this.getDelayValue(750);this.summaryFinished=!1,this.transitionCancelled=!1,this.setTransitioning(!0),this.eggGachaSummaryContainer.setVisible(!0);const R=A.length<20?1:.5;a.tweens.add({targets:this.eggGachaOverlay,alpha:.5,ease:"Sine.easeOut",duration:s,onComplete:o(()=>{const I=Math.ceil(A.length/5),r=Math.min(A.length,5),L=this.eggGachaOverlay.displayHeight-this.eggGachaMessageBox.displayHeight;A.map((l,C)=>{const U=C%5,D=Math.floor(C/5),M=this.eggGachaOverlay.displayWidth/(r+2),h=L/(I+2),_=h/2*(D/Math.max(I-1,1))+h/4,d=a.add.container(M*(U+1)+M*.5,h*(D+1)+_);d.setScale(1e-4);const f=a.add.sprite(0,0,"egg",`egg_${l.getKey()}`);d.add(f);const H=Se(0,14,l.getEggDescriptor(),k.PARTY,{align:"center"});return H.setOrigin(.5,0),H.setTint(aZ(l.isManaphyEgg()?F.EPIC:l.tier)),d.add(H),this.eggGachaSummaryContainer.addAt(d,0),d}).forEach((l,C)=>{const U=this.transitionCancelled?0:this.getDelayValue(C*100);a.time.delayedCall(U,()=>a.tweens.add({targets:l,duration:this.getDelayValue(350),scale:R,ease:"Sine.easeOut",onComplete:o(()=>{C===A.length-1&&(this.setTransitioning(!1),this.summaryFinished=!0)},"onComplete")}))})},"onComplete")})}hideSummary(){this.setTransitioning(!0),a.tweens.add({targets:[this.eggGachaOverlay,this.eggGachaSummaryContainer],alpha:0,duration:this.getDelayValue(250),ease:"Cubic.easeIn",onComplete:o(()=>{this.eggGachaSummaryContainer.setVisible(!1),this.eggGachaSummaryContainer.setAlpha(1),this.eggGachaSummaryContainer.removeAll(!0),this.setTransitioning(!1),this.summaryFinished=!1,this.eggGachaOptionsContainer.setVisible(!0)},"onComplete")})}updateGachaInfo(A){const s=this.gachaInfoContainers[A];switch(A){case bn.LEGENDARY:const R=$e(Qh(new Date().getTime()));s.getAt(1).setTexture(R.getIconAtlasKey(),R.getIconId(!1));break}}consumeVouchers(A,s){a.gameData.voucherCounts[A]=Math.max(a.gameData.voucherCounts[A]-s,0),this.updateVoucherCounts()}updateVoucherCounts(){this.voucherCountLabels.forEach((A,s)=>{A.setText(a.gameData.voucherCounts[s].toString())})}showText(A,s,R,n,I,r){A||(A=this.defaultText),(A==null?void 0:A.indexOf(`
`))===-1?(this.eggGachaMessageBox.setSize(320,32),this.eggGachaMessageBox.setY(0),this.message.setY(8)):(this.eggGachaMessageBox.setSize(320,46),this.eggGachaMessageBox.setY(-14),this.message.setY(-6)),super.showText(A,s,R,n,I,r)}showError(A){this.showText(A,void 0,()=>this.showText(this.defaultText),Ot(1500))}setTransitioning(A){this.transitioning!==A&&(this.transitioning=A,this.transitionCancelled=!1)}processInput(A){const s=this.getUi();let R=!1,n=!1;if(this.transitioning)if(!this.transitionCancelled&&(A===X.ACTION||A===X.CANCEL))this.transitionCancelled=!0,R=!0;else return!1;else if(this.eggGachaSummaryContainer.visible)this.summaryFinished&&(A===X.ACTION||A===X.CANCEL)&&(this.hideSummary(),R=!0);else switch(A){case X.ACTION:switch(this.cursor){case 0:!a.gameData.voucherCounts[uE.REGULAR]&&!xe.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(u.t("egg:notEnoughVouchers"))):a.gameData.eggs.length<99||xe.UNLIMITED_EGG_COUNT_OVERRIDE?(xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(uE.REGULAR,1),this.pull(),R=!0):(n=!0,this.showError(u.t("egg:tooManyEggs")));break;case 2:!a.gameData.voucherCounts[uE.PLUS]&&!xe.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(u.t("egg:notEnoughVouchers"))):a.gameData.eggs.length<95||xe.UNLIMITED_EGG_COUNT_OVERRIDE?(xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(uE.PLUS,1),this.pull(5),R=!0):(n=!0,this.showError(u.t("egg:tooManyEggs")));break;case 1:case 3:this.cursor===1&&a.gameData.voucherCounts[uE.REGULAR]<10&&!xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.cursor===3&&!a.gameData.voucherCounts[uE.PREMIUM]&&!xe.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(u.t("egg:notEnoughVouchers"))):a.gameData.eggs.length<90||xe.UNLIMITED_EGG_COUNT_OVERRIDE?(this.cursor===3?xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(uE.PREMIUM,1):xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(uE.REGULAR,10),this.pull(10),R=!0):(n=!0,this.showError(u.t("egg:tooManyEggs")));break;case 4:!a.gameData.voucherCounts[uE.GOLDEN]&&!xe.EGG_FREE_GACHA_PULLS_OVERRIDE?(n=!0,this.showError(u.t("egg:notEnoughVouchers"))):a.gameData.eggs.length<75||xe.UNLIMITED_EGG_COUNT_OVERRIDE?(xe.EGG_FREE_GACHA_PULLS_OVERRIDE||this.consumeVouchers(uE.GOLDEN,1),this.pull(25),R=!0):(n=!0,this.showError(u.t("egg:tooManyEggs")));break;case 5:s.revertMode(),R=!0;break}break;case X.CANCEL:this.getUi().revertMode(),R=!0;break;case X.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case X.DOWN:this.cursor<5&&(R=this.setCursor(this.cursor+1));break;case X.LEFT:this.gachaCursor&&(R=this.setGachaCursor(this.gachaCursor-1));break;case X.RIGHT:this.gachaCursor<$R(bn).length-1&&(R=this.setGachaCursor(this.gachaCursor+1));break}return R?s.playSelect():n&&s.playError(),R||n}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.eggGachaOptionsContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.eggGachaOptionSelectBg,10,9+(48+this.cursor*96)*this.scale),s}setGachaCursor(A){const R=this.gachaCursor!==A;return R&&(this.gachaCursor=A,this.setTransitioning(!0),a.tweens.add({targets:this.gachaContainers,duration:this.eggGachaContainer.visible?500:0,x:o((n,I,r,L)=>180*(L-A),"x"),ease:"Cubic.easeInOut",onComplete:o(()=>this.setTransitioning(!1),"onComplete")})),R}clear(){super.clear(),this.setGachaCursor(-1),this.eggGachaContainer.setVisible(!1)}};o(LK,"EggGachaUiHandler");let F_=LK;const oK=class oK extends Phaser.GameObjects.Container{constructor(A,s={}){super(a,0,0),this.shinyIcons=[],this.cost=0,this.setSpecies(A,s);const R=a.add.image(2,5,"passive_bg");R.setOrigin(0,0),R.setScale(.75),R.setVisible(!1),this.add(R),this.starterPassiveBgs=R;for(let H=0;H<3;H++){const B=a.add.image(H*-3+12,2,"shiny_star_small");B.setScale(.5),B.setOrigin(0,0),B.setVisible(!1),this.shinyIcons.push(B)}this.add(this.shinyIcons);const n=Se(1,2,"0",k.WINDOW,{fontSize:"32px"});n.setShadowOffset(2,2),n.setOrigin(0,0),n.setVisible(!1),this.add(n),this.label=n;const I=a.add.image(12,7,"ha_capsule");I.setOrigin(0,0),I.setScale(.5),I.setVisible(!1),this.add(I),this.hiddenAbilityIcon=I;const r=a.add.image(0,7,"favorite");r.setOrigin(0,0),r.setScale(.5),r.setVisible(!1),this.add(r),this.favoriteIcon=r;const L=a.add.image(0,12,"champion_ribbon");L.setOrigin(0,0),L.setScale(.5),L.setVisible(!1),this.add(L),this.classicWinIcon=L;const N=a.add.image(12,12,"candy");N.setOrigin(0,0),N.setScale(.25),N.setVisible(!1),this.add(N),this.candyUpgradeIcon=N;const l=a.add.image(12,12,"candy_overlay");l.setOrigin(0,0),l.setScale(.25),l.setVisible(!1),this.add(l),this.candyUpgradeOverlayIcon=l;const C=a.add.image(0,12,"mystery_egg");C.setOrigin(0,0),C.setScale(.25),C.setVisible(!1),this.add(C),this.eggMove1Icon=C;const U=a.add.image(0,12,"normal_memory");U.setOrigin(0,0),U.setScale(.25),U.setVisible(!1),this.add(U),this.tmMove1Icon=U;const D=a.add.image(7,12,"mystery_egg");D.setOrigin(0,0),D.setScale(.25),D.setVisible(!1),this.add(D),this.eggMove2Icon=D;const M=a.add.image(7,12,"normal_memory");M.setOrigin(0,0),M.setScale(.25),M.setVisible(!1),this.add(M),this.tmMove2Icon=M;const h=a.add.image(3,3,"candy");h.setOrigin(0,0),h.setScale(.25),h.setVisible(!1),this.add(h),this.passive1Icon=h;const _=a.add.image(12,12,"candy_overlay");_.setOrigin(0,0),_.setScale(.25),_.setVisible(!1),this.add(_),this.passive1OverlayIcon=_;const d=a.add.image(12,3,"candy");d.setOrigin(0,0),d.setScale(.25),d.setVisible(!1),this.add(d),this.passive2Icon=d;const f=a.add.image(12,12,"candy_overlay");f.setOrigin(0,0),f.setScale(.25),f.setVisible(!1),this.add(f),this.passive2OverlayIcon=f}setSpecies(A,s={}){this.species=A;const{shiny:R,formIndex:n,female:I,variant:r}=s,L=a.gameData.getSpeciesDefaultDexAttr(A,!1,!0),N=a.gameData.getSpeciesDexAttrProps(A,L);Pe(n)||(N.formIndex=n),Pe(R)||(N.shiny=R),Pe(r)||(N.variant=r),Pe(I)||(N.female=I),this.icon&&(this.remove(this.icon),this.icon.destroy()),this.icon=a.add.sprite(-2,2,A.getIconAtlasKey(N.formIndex,N.shiny,N.variant)),this.icon.setScale(.5),this.icon.setOrigin(0,0),this.icon.setFrame(A.getIconId(N.female,N.formIndex,N.shiny,N.variant)),this.checkIconId(N.female,N.formIndex,N.shiny,N.variant),this.add(this.icon)}checkIconId(A,s,R,n){this.icon.frame.name!==this.species.getIconId(A,s,R,n)&&(`${this.species.name}`,this.icon.setTexture(this.species.getIconAtlasKey(s,!1,n)),this.icon.setFrame(this.species.getIconId(A,s,!1,n)))}};o(oK,"PokedexMonContainer");let ku=oK;var JE=(E=>(E[E.NAME=0]="NAME",E[E.MOVE_1=1]="MOVE_1",E[E.MOVE_2=2]="MOVE_2",E[E.ABILITY_1=3]="ABILITY_1",E[E.ABILITY_2=4]="ABILITY_2",E))(JE||{});const TK=class TK extends Phaser.GameObjects.Container{constructor(A,s,R,n,I){super(a,A,s),this.labels=[],this.selections=[],this.selectionStrings=[],this.rows=[],this.numFilters=0,this.lastCursor=-1,this.textPadding=8,this.defaultWordWrapWidth=1224,this.defaultText="---",this.onChange=I,this.width=R,this.height=n,this.window=Gt(0,0,R,n,!1,!1,void 0,void 0,dR.THIN),this.add(this.window),this.cursorObj=a.add.image(1,1,"cursor"),this.cursorObj.setScale(.5),this.cursorObj.setVisible(!1),this.cursorObj.setOrigin(0,0),this.add(this.cursorObj),this.menuMessageBoxContainer=a.add.container(0,130),this.menuMessageBoxContainer.setName("menu-message-box"),this.menuMessageBoxContainer.setVisible(!1),this.dialogueMessageBox=Gt(-this.textPadding,0,a.game.canvas.width/6+this.textPadding*2,49,!1,!1,0,0,dR.THIN),this.dialogueMessageBox.setOrigin(0,0),this.menuMessageBoxContainer.add(this.dialogueMessageBox);const r=Se(this.textPadding,this.textPadding,"",k.WINDOW,{maxLines:2});r.setName("menu-message"),r.setOrigin(0,0),this.menuMessageBoxContainer.add(r),this.message=r}addFilter(A,s){if(this.rows.includes(A))return!1;this.rows.push(A);const r=Se(14,3,s,k.TOOLTIP_CONTENT);this.labels.push(r),this.add(r);const L=Se(54,3,this.defaultText,k.TOOLTIP_CONTENT);return this.selections.push(L),this.add(L),this.selectionStrings.push(""),this.calcFilterPositions(),this.numFilters++,!0}resetSelection(A){this.selections[A].setText(this.defaultText),this.selectionStrings[A]="",this.onChange()}setValsToDefault(){for(let A=0;A<this.numFilters;A++)this.resetSelection(A)}startSearch(A,s){s.playSelect();const R="",n={};n.buttonActions=[I=>{s.playSelect();const L=decodeURIComponent(escape(atob(I))),N=s.getHandler();N.tutorialActive=!0,this.selections[A].setText(L===""?this.defaultText:String(u.t(L))),s.revertMode(),this.onChange()},()=>{s.revertMode(),this.onChange}],s.setOverlayMode(te.POKEDEX_SCAN,n,R,A)}setCursor(A){this.cursorObj.setPosition(8,this.labels[A].y+3),this.lastCursor=A}updateFilterLabels(){for(let A=0;A<this.numFilters;A++)this.selections[A].text===this.defaultText?this.labels[A].setColor(eA(k.TOOLTIP_CONTENT,!1,a.uiTheme)):this.labels[A].setColor(eA(k.STATS_LABEL,!1,a.uiTheme))}calcFilterPositions(){let s=16;this.labels.forEach(n=>{s+=n.displayHeight});const R=(this.height-s)/(this.labels.length-1);for(let n=0;n<this.labels.length;n++)if(n===0)this.labels[n].y=8,this.selections[n].y=8;else{const I=this.labels[n-1].y+this.labels[n-1].displayHeight;this.labels[n].y=I+R,this.selections[n].y=I+R}}getValue(A){return this.selections[A].getWrappedText()[0]}getNearestFilter(A){const s=A.y+A.icon.displayHeight/2;let R=0,n=1e3;for(let I=0;I<this.labels.length;I++){const r=Math.abs(s-(this.labels[I].y+this.labels[I].displayHeight/3));r<n&&(R=I,n=r)}return R}};o(TK,"FilterText");let Y_=TK;const qO={[e.BULBASAUR]:{0:O.GRASSY_SURGE},[e.IVYSAUR]:{0:O.GRASSY_SURGE},[e.VENUSAUR]:{0:O.GRASSY_SURGE,1:O.SEED_SOWER,2:O.FLOWER_VEIL},[e.CHARMANDER]:{0:O.SHEER_FORCE},[e.CHARMELEON]:{0:O.BEAST_BOOST},[e.CHARIZARD]:{0:O.BEAST_BOOST,1:O.LEVITATE,2:O.TURBOBLAZE,3:O.UNNERVE},[e.SQUIRTLE]:{0:O.DAUNTLESS_SHIELD},[e.WARTORTLE]:{0:O.DAUNTLESS_SHIELD},[e.BLASTOISE]:{0:O.DAUNTLESS_SHIELD,1:O.BULLETPROOF,2:O.BULLETPROOF},[e.CATERPIE]:{0:O.GLUTTONY},[e.METAPOD]:{0:O.STURDY},[e.BUTTERFREE]:{0:O.MAGICIAN,1:O.MAGICIAN},[e.WEEDLE]:{0:O.POISON_TOUCH},[e.KAKUNA]:{0:O.STURDY},[e.BEEDRILL]:{0:O.ADAPTABILITY,1:O.TINTED_LENS},[e.PIDGEY]:{0:O.SHEER_FORCE},[e.PIDGEOTTO]:{0:O.SHEER_FORCE},[e.PIDGEOT]:{0:O.SHEER_FORCE,1:O.SHEER_FORCE},[e.RATTATA]:{0:O.STRONG_JAW},[e.RATICATE]:{0:O.STRONG_JAW},[e.SPEAROW]:{0:O.MOXIE},[e.FEAROW]:{0:O.MOXIE},[e.EKANS]:{0:O.REGENERATOR},[e.ARBOK]:{0:O.REGENERATOR},[e.SANDSHREW]:{0:O.TOUGH_CLAWS},[e.SANDSLASH]:{0:O.TOUGH_CLAWS},[e.NIDORAN_F]:{0:O.FLARE_BOOST},[e.NIDORINA]:{0:O.FLARE_BOOST},[e.NIDOQUEEN]:{0:O.FLARE_BOOST},[e.NIDORAN_M]:{0:O.GUTS},[e.NIDORINO]:{0:O.GUTS},[e.NIDOKING]:{0:O.GUTS},[e.VULPIX]:{0:O.FUR_COAT},[e.NINETALES]:{0:O.FUR_COAT},[e.ZUBAT]:{0:O.INTIMIDATE},[e.GOLBAT]:{0:O.INTIMIDATE},[e.CROBAT]:{0:O.INTIMIDATE},[e.ODDISH]:{0:O.TRIAGE},[e.GLOOM]:{0:O.TRIAGE},[e.VILEPLUME]:{0:O.TRIAGE},[e.BELLOSSOM]:{0:O.TRIAGE},[e.PARAS]:{0:O.TRIAGE},[e.PARASECT]:{0:O.TRIAGE},[e.VENONAT]:{0:O.FLUFFY},[e.VENOMOTH]:{0:O.SIMPLE},[e.DIGLETT]:{0:O.STURDY},[e.DUGTRIO]:{0:O.STURDY},[e.MEOWTH]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.PERSIAN]:{0:O.TOUGH_CLAWS},[e.PSYDUCK]:{0:O.SIMPLE},[e.GOLDUCK]:{0:O.SIMPLE},[e.MANKEY]:{0:O.IRON_FIST},[e.PRIMEAPE]:{0:O.IRON_FIST},[e.ANNIHILAPE]:{0:O.IRON_FIST},[e.GROWLITHE]:{0:O.FLUFFY},[e.ARCANINE]:{0:O.FLUFFY},[e.POLIWAG]:{0:O.NO_GUARD},[e.POLIWHIRL]:{0:O.NO_GUARD},[e.POLIWRATH]:{0:O.NO_GUARD},[e.POLITOED]:{0:O.NO_GUARD},[e.ABRA]:{0:O.COMATOSE},[e.KADABRA]:{0:O.MAGICIAN},[e.ALAKAZAM]:{0:O.MAGICIAN,1:O.MAGICIAN},[e.MACHOP]:{0:O.QUICK_FEET},[e.MACHOKE]:{0:O.QUICK_FEET},[e.MACHAMP]:{0:O.QUICK_FEET,1:O.QUICK_FEET},[e.BELLSPROUT]:{0:O.FLOWER_GIFT},[e.WEEPINBELL]:{0:O.FLOWER_GIFT},[e.VICTREEBEL]:{0:O.FLOWER_GIFT},[e.TENTACOOL]:{0:O.TOXIC_CHAIN},[e.TENTACRUEL]:{0:O.TOXIC_CHAIN},[e.GEODUDE]:{0:O.DRY_SKIN},[e.GRAVELER]:{0:O.DRY_SKIN},[e.GOLEM]:{0:O.DRY_SKIN},[e.PONYTA]:{0:O.MAGIC_GUARD},[e.RAPIDASH]:{0:O.MAGIC_GUARD},[e.SLOWPOKE]:{0:O.UNAWARE},[e.SLOWBRO]:{0:O.UNAWARE,1:O.REGENERATOR},[e.SLOWKING]:{0:O.UNAWARE},[e.MAGNEMITE]:{0:O.LEVITATE},[e.MAGNETON]:{0:O.LEVITATE},[e.MAGNEZONE]:{0:O.LEVITATE},[e.FARFETCHD]:{0:O.SNIPER},[e.DODUO]:{0:O.PARENTAL_BOND},[e.DODRIO]:{0:O.PARENTAL_BOND},[e.SEEL]:{0:O.WATER_BUBBLE},[e.DEWGONG]:{0:O.WATER_BUBBLE},[e.GRIMER]:{0:O.WATER_ABSORB},[e.MUK]:{0:O.WATER_ABSORB},[e.SHELLDER]:{0:O.STURDY},[e.CLOYSTER]:{0:O.ICE_SCALES},[e.GASTLY]:{0:O.SHADOW_SHIELD},[e.HAUNTER]:{0:O.SHADOW_SHIELD},[e.GENGAR]:{0:O.SHADOW_SHIELD,1:O.UNNERVE,2:O.GLUTTONY},[e.ONIX]:{0:O.ROCKY_PAYLOAD},[e.STEELIX]:{0:O.ROCKY_PAYLOAD,1:O.SAND_SPIT},[e.DROWZEE]:{0:O.MAGICIAN},[e.HYPNO]:{0:O.MAGICIAN},[e.KRABBY]:{0:O.UNBURDEN},[e.KINGLER]:{0:O.UNBURDEN,1:O.UNBURDEN},[e.VOLTORB]:{0:O.TRANSISTOR},[e.ELECTRODE]:{0:O.TRANSISTOR},[e.EXEGGCUTE]:{0:O.RIPEN},[e.EXEGGUTOR]:{0:O.RIPEN},[e.ALOLA_EXEGGUTOR]:{0:O.UNBURDEN},[e.CUBONE]:{0:O.PARENTAL_BOND},[e.MAROWAK]:{0:O.PARENTAL_BOND},[e.ALOLA_MAROWAK]:{0:O.PARENTAL_BOND},[e.LICKITUNG]:{0:O.CHEEK_POUCH},[e.LICKILICKY]:{0:O.CHEEK_POUCH},[e.KOFFING]:{0:O.WHITE_SMOKE},[e.WEEZING]:{0:O.PARENTAL_BOND},[e.GALAR_WEEZING]:{0:O.PARENTAL_BOND},[e.RHYHORN]:{0:O.SOLID_ROCK},[e.RHYDON]:{0:O.SOLID_ROCK},[e.RHYPERIOR]:{0:O.FILTER},[e.TANGELA]:{0:O.SEED_SOWER},[e.TANGROWTH]:{0:O.SEED_SOWER},[e.KANGASKHAN]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[e.HORSEA]:{0:O.DRAGONS_MAW},[e.SEADRA]:{0:O.DRAGONS_MAW},[e.KINGDRA]:{0:O.MULTISCALE},[e.GOLDEEN]:{0:O.MULTISCALE},[e.SEAKING]:{0:O.MULTISCALE},[e.STARYU]:{0:O.REGENERATOR},[e.STARMIE]:{0:O.REGENERATOR},[e.SCYTHER]:{0:O.TINTED_LENS},[e.SCIZOR]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.KLEAVOR]:{0:O.WEAK_ARMOR},[e.PINSIR]:{0:O.TINTED_LENS,1:O.MOLD_BREAKER},[e.TAUROS]:{0:O.STAMINA},[e.MAGIKARP]:{0:O.MULTISCALE},[e.GYARADOS]:{0:O.MULTISCALE,1:O.MULTISCALE},[e.LAPRAS]:{0:O.LIGHTNING_ROD,1:O.FILTER},[e.DITTO]:{0:O.ADAPTABILITY},[e.EEVEE]:{0:O.PICKUP,1:O.PICKUP,2:O.FLUFFY},[e.VAPOREON]:{0:O.REGENERATOR},[e.JOLTEON]:{0:O.TRANSISTOR},[e.FLAREON]:{0:O.FUR_COAT},[e.ESPEON]:{0:O.MAGICIAN},[e.UMBREON]:{0:O.TOXIC_CHAIN},[e.LEAFEON]:{0:O.GRASSY_SURGE},[e.GLACEON]:{0:O.SNOW_WARNING},[e.SYLVEON]:{0:O.COMPETITIVE},[e.PORYGON]:{0:O.TRANSISTOR},[e.PORYGON2]:{0:O.TRANSISTOR},[e.PORYGON_Z]:{0:O.PROTEAN},[e.OMANYTE]:{0:O.STURDY},[e.OMASTAR]:{0:O.STURDY},[e.KABUTO]:{0:O.TOUGH_CLAWS},[e.KABUTOPS]:{0:O.TOUGH_CLAWS},[e.AERODACTYL]:{0:O.INTIMIDATE,1:O.INTIMIDATE},[e.ARTICUNO]:{0:O.SNOW_WARNING},[e.ZAPDOS]:{0:O.DRIZZLE},[e.MOLTRES]:{0:O.DROUGHT},[e.DRATINI]:{0:O.MULTISCALE},[e.DRAGONAIR]:{0:O.MULTISCALE},[e.DRAGONITE]:{0:O.AERILATE},[e.MEWTWO]:{0:O.NEUROFORCE,1:O.NEUROFORCE,2:O.NEUROFORCE},[e.MEW]:{0:O.PROTEAN},[e.CHIKORITA]:{0:O.CUTE_CHARM},[e.BAYLEEF]:{0:O.THICK_FAT},[e.MEGANIUM]:{0:O.THICK_FAT},[e.CYNDAQUIL]:{0:O.WHITE_SMOKE},[e.QUILAVA]:{0:O.DROUGHT},[e.TYPHLOSION]:{0:O.DROUGHT},[e.HISUI_TYPHLOSION]:{0:O.DROUGHT},[e.TOTODILE]:{0:O.TOUGH_CLAWS},[e.CROCONAW]:{0:O.TOUGH_CLAWS},[e.FERALIGATR]:{0:O.TOUGH_CLAWS},[e.SENTRET]:{0:O.PICKUP},[e.FURRET]:{0:O.PICKUP},[e.HOOTHOOT]:{0:O.AERILATE},[e.NOCTOWL]:{0:O.AERILATE},[e.LEDYBA]:{0:O.PRANKSTER},[e.LEDIAN]:{0:O.PRANKSTER},[e.SPINARAK]:{0:O.PRANKSTER},[e.ARIADOS]:{0:O.PRANKSTER},[e.CHINCHOU]:{0:O.REGENERATOR},[e.LANTURN]:{0:O.REGENERATOR},[e.PICHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY},[e.PIKACHU]:{0:O.ELECTRIC_SURGE,1:O.STURDY,2:O.COSTAR,3:O.IRON_FIST,4:O.QUEENLY_MAJESTY,5:O.MISTY_SURGE,6:O.TINTED_LENS,7:O.LIBERO,8:O.THICK_FAT},[e.RAICHU]:{0:O.ELECTRIC_SURGE},[e.ALOLA_RAICHU]:{0:O.ELECTRIC_SURGE},[e.CLEFFA]:{0:O.PRANKSTER},[e.CLEFAIRY]:{0:O.PRANKSTER},[e.CLEFABLE]:{0:O.ANALYTIC},[e.IGGLYBUFF]:{0:O.HUGE_POWER},[e.JIGGLYPUFF]:{0:O.HUGE_POWER},[e.WIGGLYTUFF]:{0:O.HUGE_POWER},[e.TOGEPI]:{0:O.PIXILATE},[e.TOGETIC]:{0:O.PIXILATE},[e.TOGEKISS]:{0:O.PIXILATE},[e.NATU]:{0:O.TINTED_LENS},[e.XATU]:{0:O.SHEER_FORCE},[e.MAREEP]:{0:O.ELECTROMORPHOSIS},[e.FLAAFFY]:{0:O.ELECTROMORPHOSIS},[e.AMPHAROS]:{0:O.ELECTROMORPHOSIS,1:O.ELECTROMORPHOSIS},[e.HOPPIP]:{0:O.WIND_RIDER},[e.SKIPLOOM]:{0:O.WIND_RIDER},[e.JUMPLUFF]:{0:O.FLUFFY},[e.AIPOM]:{0:O.SCRAPPY},[e.AMBIPOM]:{0:O.SCRAPPY},[e.SUNKERN]:{0:O.DROUGHT},[e.SUNFLORA]:{0:O.DROUGHT},[e.YANMA]:{0:O.TECHNICIAN},[e.YANMEGA]:{0:O.SHEER_FORCE},[e.WOOPER]:{0:O.WATER_VEIL},[e.QUAGSIRE]:{0:O.COMATOSE},[e.MURKROW]:{0:O.DARK_AURA},[e.HONCHKROW]:{0:O.DARK_AURA},[e.MISDREAVUS]:{0:O.BEADS_OF_RUIN},[e.MISMAGIUS]:{0:O.BEADS_OF_RUIN},[e.UNOWN]:{0:O.ADAPTABILITY,1:O.BEAST_BOOST,2:O.CONTRARY,3:O.DAZZLING,4:O.EMERGENCY_EXIT,5:O.FRIEND_GUARD,6:O.GOOD_AS_GOLD,7:O.HONEY_GATHER,8:O.IMPOSTER,9:O.JUSTIFIED,10:O.KLUTZ,11:O.LIBERO,12:O.MOODY,13:O.NEUTRALIZING_GAS,14:O.OPPORTUNIST,15:O.PICKUP,16:O.QUICK_DRAW,17:O.RUN_AWAY,18:O.SIMPLE,19:O.TRACE,20:O.UNNERVE,21:O.VICTORY_STAR,22:O.WANDERING_SPIRIT,23:O.FAIRY_AURA,24:O.DARK_AURA,25:O.AURA_BREAK,26:O.PURE_POWER,27:O.UNAWARE},[e.GIRAFARIG]:{0:O.PARENTAL_BOND},[e.FARIGIRAF]:{0:O.PARENTAL_BOND},[e.PINECO]:{0:O.ROUGH_SKIN},[e.FORRETRESS]:{0:O.IRON_BARBS},[e.DUNSPARCE]:{0:O.UNAWARE},[e.DUDUNSPARCE]:{0:O.UNAWARE,1:O.UNAWARE},[e.GLIGAR]:{0:O.POISON_TOUCH},[e.GLISCOR]:{0:O.TOXIC_BOOST},[e.SNUBBULL]:{0:O.PIXILATE},[e.GRANBULL]:{0:O.PIXILATE},[e.QWILFISH]:{0:O.TOXIC_DEBRIS},[e.SHUCKLE]:{0:O.HARVEST},[e.HERACROSS]:{0:O.TECHNICIAN,1:O.TECHNICIAN},[e.SNEASEL]:{0:O.TOUGH_CLAWS},[e.WEAVILE]:{0:O.TOUGH_CLAWS},[e.TEDDIURSA]:{0:O.RUN_AWAY},[e.URSARING]:{0:O.THICK_FAT},[e.URSALUNA]:{0:O.THICK_FAT},[e.SLUGMA]:{0:O.DROUGHT},[e.MAGCARGO]:{0:O.DESOLATE_LAND},[e.SWINUB]:{0:O.UNAWARE},[e.PILOSWINE]:{0:O.UNAWARE},[e.MAMOSWINE]:{0:O.SLUSH_RUSH},[e.CORSOLA]:{0:O.STORM_DRAIN},[e.REMORAID]:{0:O.SIMPLE},[e.OCTILLERY]:{0:O.SIMPLE},[e.DELIBIRD]:{0:O.HUGE_POWER},[e.SKARMORY]:{0:O.LIGHTNING_ROD},[e.HOUNDOUR]:{0:O.BALL_FETCH},[e.HOUNDOOM]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD},[e.PHANPY]:{0:O.STURDY},[e.DONPHAN]:{0:O.SPEED_BOOST},[e.STANTLER]:{0:O.SPEED_BOOST},[e.WYRDEER]:{0:O.SPEED_BOOST},[e.SMEARGLE]:{0:O.PRANKSTER},[e.TYROGUE]:{0:O.DEFIANT},[e.HITMONLEE]:{0:O.SHEER_FORCE},[e.HITMONCHAN]:{0:O.MOXIE},[e.HITMONTOP]:{0:O.SPEED_BOOST},[e.SMOOCHUM]:{0:O.PSYCHIC_SURGE},[e.JYNX]:{0:O.PSYCHIC_SURGE},[e.ELEKID]:{0:O.SHEER_FORCE},[e.ELECTABUZZ]:{0:O.SHEER_FORCE},[e.ELECTIVIRE]:{0:O.SHEER_FORCE},[e.MAGBY]:{0:O.SHEER_FORCE},[e.MAGMAR]:{0:O.SHEER_FORCE},[e.MAGMORTAR]:{0:O.SHEER_FORCE},[e.MILTANK]:{0:O.STAMINA},[e.RAIKOU]:{0:O.BEAST_BOOST},[e.ENTEI]:{0:O.BEAST_BOOST},[e.SUICUNE]:{0:O.BEAST_BOOST},[e.LARVITAR]:{0:O.SOLID_ROCK},[e.PUPITAR]:{0:O.SOLID_ROCK},[e.TYRANITAR]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.LUGIA]:{0:O.DELTA_STREAM},[e.HO_OH]:{0:O.MAGIC_GUARD},[e.CELEBI]:{0:O.PSYCHIC_SURGE},[e.TREECKO]:{0:O.TINTED_LENS},[e.GROVYLE]:{0:O.TINTED_LENS},[e.SCEPTILE]:{0:O.TINTED_LENS,1:O.TINTED_LENS},[e.TORCHIC]:{0:O.DEFIANT},[e.COMBUSKEN]:{0:O.DEFIANT},[e.BLAZIKEN]:{0:O.DEFIANT,1:O.DEFIANT},[e.MUDKIP]:{0:O.REGENERATOR},[e.MARSHTOMP]:{0:O.REGENERATOR},[e.SWAMPERT]:{0:O.REGENERATOR,1:O.DRIZZLE},[e.POOCHYENA]:{0:O.TOUGH_CLAWS},[e.MIGHTYENA]:{0:O.TOUGH_CLAWS},[e.ZIGZAGOON]:{0:O.RUN_AWAY},[e.LINOONE]:{0:O.RUN_AWAY},[e.WURMPLE]:{0:O.GLUTTONY},[e.SILCOON]:{0:O.STURDY},[e.BEAUTIFLY]:{0:O.SIMPLE},[e.CASCOON]:{0:O.STURDY},[e.DUSTOX]:{0:O.SIMPLE},[e.LOTAD]:{0:O.DRIZZLE},[e.LOMBRE]:{0:O.DRIZZLE},[e.LUDICOLO]:{0:O.DRIZZLE},[e.SEEDOT]:{0:O.STURDY},[e.NUZLEAF]:{0:O.SHARPNESS},[e.SHIFTRY]:{0:O.SHARPNESS},[e.TAILLOW]:{0:O.AERILATE},[e.SWELLOW]:{0:O.AERILATE},[e.WINGULL]:{0:O.WATER_ABSORB},[e.PELIPPER]:{0:O.SWIFT_SWIM},[e.RALTS]:{0:O.NEUROFORCE},[e.KIRLIA]:{0:O.NEUROFORCE},[e.GARDEVOIR]:{0:O.NEUROFORCE,1:O.PSYCHIC_SURGE},[e.GALLADE]:{0:O.NEUROFORCE,1:O.SHARPNESS},[e.SURSKIT]:{0:O.WATER_BUBBLE},[e.MASQUERAIN]:{0:O.WATER_BUBBLE},[e.SHROOMISH]:{0:O.GUTS},[e.BRELOOM]:{0:O.GUTS},[e.SLAKOTH]:{0:O.GUTS},[e.VIGOROTH]:{0:O.GUTS},[e.SLAKING]:{0:O.GUTS},[e.NINCADA]:{0:O.TECHNICIAN},[e.NINJASK]:{0:O.TECHNICIAN},[e.SHEDINJA]:{0:O.MAGIC_GUARD},[e.WHISMUR]:{0:O.PUNK_ROCK},[e.LOUDRED]:{0:O.PUNK_ROCK},[e.EXPLOUD]:{0:O.PUNK_ROCK},[e.MAKUHITA]:{0:O.STAMINA},[e.HARIYAMA]:{0:O.STAMINA},[e.AZURILL]:{0:O.MISTY_SURGE},[e.MARILL]:{0:O.MISTY_SURGE},[e.AZUMARILL]:{0:O.MISTY_SURGE},[e.NOSEPASS]:{0:O.SOLID_ROCK},[e.PROBOPASS]:{0:O.LEVITATE},[e.SKITTY]:{0:O.SCRAPPY},[e.DELCATTY]:{0:O.SCRAPPY},[e.SABLEYE]:{0:O.UNNERVE,1:O.UNNERVE},[e.MAWILE]:{0:O.ADAPTABILITY,1:O.INTIMIDATE},[e.ARON]:{0:O.EARTH_EATER},[e.LAIRON]:{0:O.EARTH_EATER},[e.AGGRON]:{0:O.EARTH_EATER,1:O.ROCKY_PAYLOAD},[e.MEDITITE]:{0:O.MINDS_EYE},[e.MEDICHAM]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[e.ELECTRIKE]:{0:O.BALL_FETCH},[e.MANECTRIC]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[e.PLUSLE]:{0:O.POWER_SPOT},[e.MINUN]:{0:O.POWER_SPOT},[e.VOLBEAT]:{0:O.HONEY_GATHER},[e.ILLUMISE]:{0:O.HONEY_GATHER},[e.GULPIN]:{0:O.EARTH_EATER},[e.SWALOT]:{0:O.EARTH_EATER},[e.CARVANHA]:{0:O.SHEER_FORCE},[e.SHARPEDO]:{0:O.SHEER_FORCE,1:O.SPEED_BOOST},[e.WAILMER]:{0:O.LEVITATE},[e.WAILORD]:{0:O.LEVITATE},[e.NUMEL]:{0:O.SOLID_ROCK},[e.CAMERUPT]:{0:O.FUR_COAT,1:O.STAMINA},[e.TORKOAL]:{0:O.ANALYTIC},[e.SPOINK]:{0:O.PSYCHIC_SURGE},[e.GRUMPIG]:{0:O.PSYCHIC_SURGE},[e.SPINDA]:{0:O.SIMPLE},[e.TRAPINCH]:{0:O.ADAPTABILITY},[e.VIBRAVA]:{0:O.ADAPTABILITY},[e.FLYGON]:{0:O.ADAPTABILITY},[e.CACNEA]:{0:O.SAND_RUSH},[e.CACTURNE]:{0:O.SAND_RUSH},[e.SWABLU]:{0:O.FLUFFY},[e.ALTARIA]:{0:O.FLUFFY,1:O.FLUFFY},[e.ZANGOOSE]:{0:O.POISON_HEAL},[e.SEVIPER]:{0:O.MULTISCALE},[e.LUNATONE]:{0:O.SHADOW_SHIELD},[e.SOLROCK]:{0:O.DROUGHT},[e.BARBOACH]:{0:O.SIMPLE},[e.WHISCASH]:{0:O.SIMPLE},[e.CORPHISH]:{0:O.TOUGH_CLAWS},[e.CRAWDAUNT]:{0:O.TOUGH_CLAWS},[e.BALTOY]:{0:O.WELL_BAKED_BODY},[e.CLAYDOL]:{0:O.WELL_BAKED_BODY},[e.LILEEP]:{0:O.SEED_SOWER},[e.CRADILY]:{0:O.SEED_SOWER},[e.ANORITH]:{0:O.WATER_ABSORB},[e.ARMALDO]:{0:O.WATER_ABSORB},[e.FEEBAS]:{0:O.MULTISCALE},[e.MILOTIC]:{0:O.MAGIC_GUARD},[e.CASTFORM]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[e.KECLEON]:{0:O.ADAPTABILITY},[e.SHUPPET]:{0:O.SHADOW_SHIELD},[e.BANETTE]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.DUSKULL]:{0:O.UNNERVE},[e.DUSCLOPS]:{0:O.UNNERVE},[e.DUSKNOIR]:{0:O.UNNERVE},[e.TROPIUS]:{0:O.RIPEN},[e.ABSOL]:{0:O.SHARPNESS,1:O.SHARPNESS},[e.WYNAUT]:{0:O.STURDY},[e.WOBBUFFET]:{0:O.STURDY},[e.SNORUNT]:{0:O.SNOW_WARNING},[e.GLALIE]:{0:O.SNOW_WARNING,1:O.SNOW_WARNING},[e.FROSLASS]:{0:O.SNOW_WARNING},[e.SPHEAL]:{0:O.UNAWARE},[e.SEALEO]:{0:O.UNAWARE},[e.WALREIN]:{0:O.UNAWARE},[e.CLAMPERL]:{0:O.DAUNTLESS_SHIELD},[e.GOREBYSS]:{0:O.ARENA_TRAP},[e.HUNTAIL]:{0:O.ARENA_TRAP},[e.RELICANTH]:{0:O.PRIMORDIAL_SEA},[e.LUVDISC]:{0:O.MULTISCALE},[e.BAGON]:{0:O.INTIMIDATE},[e.SHELGON]:{0:O.ANGER_SHELL},[e.SALAMENCE]:{0:O.GALE_WINGS,1:O.ROCK_HEAD},[e.BELDUM]:{0:O.LEVITATE},[e.METANG]:{0:O.LEVITATE},[e.METAGROSS]:{0:O.LEVITATE,1:O.FULL_METAL_BODY},[e.REGIROCK]:{0:O.SAND_STREAM},[e.REGICE]:{0:O.SNOW_WARNING},[e.REGISTEEL]:{0:O.STEELY_SPIRIT},[e.LATIAS]:{0:O.SPEED_BOOST,1:O.PRISM_ARMOR},[e.LATIOS]:{0:O.SPEED_BOOST,1:O.TINTED_LENS},[e.KYOGRE]:{0:O.MOLD_BREAKER,1:O.TERAVOLT},[e.GROUDON]:{0:O.MOLD_BREAKER,1:O.TURBOBLAZE},[e.RAYQUAZA]:{0:O.UNNERVE,1:O.UNNERVE},[e.JIRACHI]:{0:O.COMATOSE},[e.DEOXYS]:{0:O.PROTEAN,1:O.ADAPTABILITY,2:O.REGENERATOR,3:O.SHADOW_SHIELD},[e.TURTWIG]:{0:O.SOLID_ROCK},[e.GROTLE]:{0:O.SOLID_ROCK},[e.TORTERRA]:{0:O.THICK_FAT},[e.CHIMCHAR]:{0:O.UNNERVE},[e.MONFERNO]:{0:O.BEAST_BOOST},[e.INFERNAPE]:{0:O.BEAST_BOOST},[e.PIPLUP]:{0:O.CUTE_CHARM},[e.PRINPLUP]:{0:O.DRIZZLE},[e.EMPOLEON]:{0:O.DRIZZLE},[e.STARLY]:{0:O.INTIMIDATE},[e.STARAVIA]:{0:O.ROCK_HEAD},[e.STARAPTOR]:{0:O.ROCK_HEAD},[e.BIDOOF]:{0:O.SAP_SIPPER},[e.BIBAREL]:{0:O.SAP_SIPPER},[e.KRICKETOT]:{0:O.HONEY_GATHER},[e.KRICKETUNE]:{0:O.SHARPNESS},[e.SHINX]:{0:O.SPEED_BOOST},[e.LUXIO]:{0:O.SPEED_BOOST},[e.LUXRAY]:{0:O.SPEED_BOOST},[e.BUDEW]:{0:O.SEED_SOWER},[e.ROSELIA]:{0:O.GRASSY_SURGE},[e.ROSERADE]:{0:O.GRASSY_SURGE},[e.CRANIDOS]:{0:O.ROCK_HEAD},[e.RAMPARDOS]:{0:O.ROCK_HEAD},[e.SHIELDON]:{0:O.EARTH_EATER},[e.BASTIODON]:{0:O.EARTH_EATER},[e.BURMY]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[e.WORMADAM]:{0:O.STURDY,1:O.STURDY,2:O.STURDY},[e.MOTHIM]:{0:O.SPEED_BOOST},[e.COMBEE]:{0:O.RUN_AWAY},[e.VESPIQUEN]:{0:O.INTIMIDATE},[e.PACHIRISU]:{0:O.HONEY_GATHER},[e.BUIZEL]:{0:O.MOXIE},[e.FLOATZEL]:{0:O.MOXIE},[e.CHERUBI]:{0:O.DROUGHT},[e.CHERRIM]:{0:O.ORICHALCUM_PULSE,1:O.ORICHALCUM_PULSE},[e.SHELLOS]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.GASTRODON]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.DRIFLOON]:{0:O.MAGIC_GUARD},[e.DRIFBLIM]:{0:O.MAGIC_GUARD},[e.BUNEARY]:{0:O.ADAPTABILITY},[e.LOPUNNY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY},[e.GLAMEOW]:{0:O.INTIMIDATE},[e.PURUGLY]:{0:O.INTIMIDATE},[e.CHINGLING]:{0:O.PUNK_ROCK},[e.CHIMECHO]:{0:O.PUNK_ROCK},[e.STUNKY]:{0:O.NEUTRALIZING_GAS},[e.SKUNTANK]:{0:O.NEUTRALIZING_GAS},[e.BRONZOR]:{0:O.MIRROR_ARMOR},[e.BRONZONG]:{0:O.MIRROR_ARMOR},[e.BONSLY]:{0:O.SAP_SIPPER},[e.SUDOWOODO]:{0:O.SAP_SIPPER},[e.MIME_JR]:{0:O.PRANKSTER},[e.MR_MIME]:{0:O.PRANKSTER},[e.GALAR_MR_MIME]:{0:O.PRANKSTER},[e.MR_RIME]:{0:O.PRANKSTER},[e.HAPPINY]:{0:O.HOSPITALITY},[e.CHANSEY]:{0:O.FRIEND_GUARD},[e.BLISSEY]:{0:O.FUR_COAT},[e.CHATOT]:{0:O.PUNK_ROCK},[e.SPIRITOMB]:{0:O.VESSEL_OF_RUIN},[e.GIBLE]:{0:O.ARENA_TRAP},[e.GABITE]:{0:O.ARENA_TRAP},[e.GARCHOMP]:{0:O.ARENA_TRAP,1:O.SAND_RUSH},[e.MUNCHLAX]:{0:O.CHEEK_POUCH},[e.SNORLAX]:{0:O.CHEEK_POUCH,1:O.RIPEN},[e.RIOLU]:{0:O.MINDS_EYE},[e.LUCARIO]:{0:O.MINDS_EYE,1:O.MINDS_EYE},[e.HIPPOPOTAS]:{0:O.UNAWARE},[e.HIPPOWDON]:{0:O.UNAWARE},[e.SKORUPI]:{0:O.SUPER_LUCK},[e.DRAPION]:{0:O.SUPER_LUCK},[e.CROAGUNK]:{0:O.MOXIE},[e.TOXICROAK]:{0:O.MOXIE},[e.CARNIVINE]:{0:O.ARENA_TRAP},[e.FINNEON]:{0:O.WATER_BUBBLE},[e.LUMINEON]:{0:O.WATER_BUBBLE},[e.MANTYKE]:{0:O.UNAWARE},[e.MANTINE]:{0:O.UNAWARE},[e.SNOVER]:{0:O.SLUSH_RUSH},[e.ABOMASNOW]:{0:O.SLUSH_RUSH,1:O.SEED_SOWER},[e.ROTOM]:{0:O.HADRON_ENGINE,1:O.HADRON_ENGINE,2:O.HADRON_ENGINE,3:O.HADRON_ENGINE,4:O.HADRON_ENGINE,5:O.HADRON_ENGINE},[e.UXIE]:{0:O.UNNERVE},[e.MESPRIT]:{0:O.MOODY},[e.AZELF]:{0:O.NEUROFORCE},[e.DIALGA]:{0:O.BERSERK,1:O.BERSERK},[e.PALKIA]:{0:O.BERSERK,1:O.BERSERK},[e.HEATRAN]:{0:O.EARTH_EATER},[e.REGIGIGAS]:{0:O.SCRAPPY},[e.GIRATINA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.CRESSELIA]:{0:O.SHADOW_SHIELD},[e.PHIONE]:{0:O.SIMPLE},[e.MANAPHY]:{0:O.PRIMORDIAL_SEA},[e.DARKRAI]:{0:O.UNNERVE},[e.SHAYMIN]:{0:O.GRASSY_SURGE,1:O.DELTA_STREAM},[e.ARCEUS]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[e.VICTINI]:{0:O.SHEER_FORCE},[e.SNIVY]:{0:O.MULTISCALE},[e.SERVINE]:{0:O.MULTISCALE},[e.SERPERIOR]:{0:O.MULTISCALE},[e.TEPIG]:{0:O.GLUTTONY},[e.PIGNITE]:{0:O.ROCK_HEAD},[e.EMBOAR]:{0:O.ROCK_HEAD},[e.OSHAWOTT]:{0:O.MOLD_BREAKER},[e.DEWOTT]:{0:O.MOLD_BREAKER},[e.SAMUROTT]:{0:O.LIGHTNING_ROD},[e.HISUI_SAMUROTT]:{0:O.MOLD_BREAKER},[e.PATRAT]:{0:O.NO_GUARD},[e.WATCHOG]:{0:O.NO_GUARD},[e.LILLIPUP]:{0:O.BALL_FETCH},[e.HERDIER]:{0:O.FUR_COAT},[e.STOUTLAND]:{0:O.FUR_COAT},[e.PURRLOIN]:{0:O.PICKUP},[e.LIEPARD]:{0:O.PICKUP},[e.PANSAGE]:{0:O.WELL_BAKED_BODY},[e.SIMISAGE]:{0:O.WELL_BAKED_BODY},[e.PANSEAR]:{0:O.WATER_ABSORB},[e.SIMISEAR]:{0:O.WATER_ABSORB},[e.PANPOUR]:{0:O.SAP_SIPPER},[e.SIMIPOUR]:{0:O.SAP_SIPPER},[e.MUNNA]:{0:O.NEUTRALIZING_GAS},[e.MUSHARNA]:{0:O.NEUTRALIZING_GAS},[e.PIDOVE]:{0:O.SNIPER},[e.TRANQUILL]:{0:O.SNIPER},[e.UNFEZANT]:{0:O.SNIPER},[e.BLITZLE]:{0:O.ELECTRIC_SURGE},[e.ZEBSTRIKA]:{0:O.ELECTRIC_SURGE},[e.ROGGENROLA]:{0:O.SOLID_ROCK},[e.BOLDORE]:{0:O.SOLID_ROCK},[e.GIGALITH]:{0:O.SOLID_ROCK},[e.WOOBAT]:{0:O.OPPORTUNIST},[e.SWOOBAT]:{0:O.OPPORTUNIST},[e.DRILBUR]:{0:O.STURDY},[e.EXCADRILL]:{0:O.STURDY},[e.AUDINO]:{0:O.FRIEND_GUARD,1:O.FAIRY_AURA},[e.TIMBURR]:{0:O.ROCKY_PAYLOAD},[e.GURDURR]:{0:O.ROCKY_PAYLOAD},[e.CONKELDURR]:{0:O.ROCKY_PAYLOAD},[e.TYMPOLE]:{0:O.POISON_HEAL},[e.PALPITOAD]:{0:O.POISON_HEAL},[e.SEISMITOAD]:{0:O.POISON_HEAL},[e.THROH]:{0:O.STAMINA},[e.SAWK]:{0:O.SCRAPPY},[e.SEWADDLE]:{0:O.SHIELD_DUST},[e.SWADLOON]:{0:O.SHIELD_DUST},[e.LEAVANNY]:{0:O.SHARPNESS},[e.VENIPEDE]:{0:O.STAMINA},[e.WHIRLIPEDE]:{0:O.STAMINA},[e.SCOLIPEDE]:{0:O.STAMINA},[e.COTTONEE]:{0:O.FLUFFY},[e.WHIMSICOTT]:{0:O.FLUFFY},[e.PETILIL]:{0:O.FLOWER_VEIL},[e.LILLIGANT]:{0:O.GRASSY_SURGE},[e.HISUI_LILLIGANT]:{0:O.FLOWER_VEIL},[e.BASCULIN]:{0:O.ROCK_HEAD,1:O.RECKLESS,2:O.SUPREME_OVERLORD},[e.BASCULEGION]:{0:O.SUPREME_OVERLORD,1:O.SUPREME_OVERLORD},[e.SANDILE]:{0:O.TOUGH_CLAWS},[e.KROKOROK]:{0:O.TOUGH_CLAWS},[e.KROOKODILE]:{0:O.TOUGH_CLAWS},[e.DARUMAKA]:{0:O.GORILLA_TACTICS},[e.DARMANITAN]:{0:O.GORILLA_TACTICS,1:O.SOLID_ROCK},[e.MARACTUS]:{0:O.WELL_BAKED_BODY},[e.DWEBBLE]:{0:O.ROCKY_PAYLOAD},[e.CRUSTLE]:{0:O.ROCKY_PAYLOAD},[e.SCRAGGY]:{0:O.PROTEAN},[e.SCRAFTY]:{0:O.PROTEAN},[e.SIGILYPH]:{0:O.FLARE_BOOST},[e.YAMASK]:{0:O.PURIFYING_SALT},[e.COFAGRIGUS]:{0:O.PURIFYING_SALT},[e.TIRTOUGA]:{0:O.WATER_ABSORB},[e.CARRACOSTA]:{0:O.WATER_ABSORB},[e.ARCHEN]:{0:O.MULTISCALE},[e.ARCHEOPS]:{0:O.MULTISCALE},[e.TRUBBISH]:{0:O.NEUTRALIZING_GAS},[e.GARBODOR]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[e.ZORUA]:{0:O.DARK_AURA},[e.ZOROARK]:{0:O.DARK_AURA},[e.MINCCINO]:{0:O.FUR_COAT},[e.CINCCINO]:{0:O.FUR_COAT},[e.GOTHITA]:{0:O.UNNERVE},[e.GOTHORITA]:{0:O.UNNERVE},[e.GOTHITELLE]:{0:O.UNNERVE},[e.SOLOSIS]:{0:O.PSYCHIC_SURGE},[e.DUOSION]:{0:O.PSYCHIC_SURGE},[e.REUNICLUS]:{0:O.PSYCHIC_SURGE},[e.DUCKLETT]:{0:O.DRIZZLE},[e.SWANNA]:{0:O.DRIZZLE},[e.VANILLITE]:{0:O.REFRIGERATE},[e.VANILLISH]:{0:O.REFRIGERATE},[e.VANILLUXE]:{0:O.SLUSH_RUSH},[e.DEERLING]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[e.SAWSBUCK]:{0:O.FLOWER_VEIL,1:O.CUD_CHEW,2:O.HARVEST,3:O.FUR_COAT},[e.EMOLGA]:{0:O.SERENE_GRACE},[e.KARRABLAST]:{0:O.QUICK_DRAW},[e.ESCAVALIER]:{0:O.QUICK_DRAW},[e.FOONGUS]:{0:O.MYCELIUM_MIGHT},[e.AMOONGUSS]:{0:O.THICK_FAT},[e.FRILLISH]:{0:O.POISON_HEAL},[e.JELLICENT]:{0:O.POISON_HEAL},[e.ALOMOMOLA]:{0:O.MULTISCALE},[e.JOLTIK]:{0:O.TRANSISTOR},[e.GALVANTULA]:{0:O.TRANSISTOR},[e.FERROSEED]:{0:O.ROUGH_SKIN},[e.FERROTHORN]:{0:O.ROUGH_SKIN},[e.KLINK]:{0:O.STEELY_SPIRIT},[e.KLANG]:{0:O.STEELY_SPIRIT},[e.KLINKLANG]:{0:O.STEELY_SPIRIT},[e.TYNAMO]:{0:O.POISON_HEAL},[e.EELEKTRIK]:{0:O.POISON_HEAL},[e.EELEKTROSS]:{0:O.POISON_HEAL},[e.ELGYEM]:{0:O.BEADS_OF_RUIN},[e.BEHEEYEM]:{0:O.BEADS_OF_RUIN},[e.LITWICK]:{0:O.SHADOW_TAG},[e.LAMPENT]:{0:O.SHADOW_TAG},[e.CHANDELURE]:{0:O.SHADOW_TAG},[e.AXEW]:{0:O.DRAGONS_MAW},[e.FRAXURE]:{0:O.DRAGONS_MAW},[e.HAXORUS]:{0:O.DRAGONS_MAW},[e.CUBCHOO]:{0:O.FUR_COAT},[e.BEARTIC]:{0:O.FUR_COAT},[e.CRYOGONAL]:{0:O.SNOW_WARNING},[e.SHELMET]:{0:O.STAMINA},[e.ACCELGOR]:{0:O.PROTEAN},[e.STUNFISK]:{0:O.STORM_DRAIN},[e.MIENFOO]:{0:O.NO_GUARD},[e.MIENSHAO]:{0:O.NO_GUARD},[e.DRUDDIGON]:{0:O.INTIMIDATE},[e.GOLETT]:{0:O.SHADOW_SHIELD},[e.GOLURK]:{0:O.SHADOW_SHIELD},[e.PAWNIARD]:{0:O.SWORD_OF_RUIN},[e.BISHARP]:{0:O.SWORD_OF_RUIN},[e.KINGAMBIT]:{0:O.SWORD_OF_RUIN},[e.BOUFFALANT]:{0:O.ROCK_HEAD},[e.RUFFLET]:{0:O.SPEED_BOOST},[e.BRAVIARY]:{0:O.SPEED_BOOST},[e.HISUI_BRAVIARY]:{0:O.SPEED_BOOST},[e.VULLABY]:{0:O.THICK_FAT},[e.MANDIBUZZ]:{0:O.THICK_FAT},[e.HEATMOR]:{0:O.CONTRARY},[e.DURANT]:{0:O.COMPOUND_EYES},[e.DEINO]:{0:O.NO_GUARD},[e.ZWEILOUS]:{0:O.NO_GUARD},[e.HYDREIGON]:{0:O.PARENTAL_BOND},[e.LARVESTA]:{0:O.FLASH_FIRE},[e.VOLCARONA]:{0:O.DROUGHT},[e.COBALION]:{0:O.INTREPID_SWORD},[e.TERRAKION]:{0:O.ROCKY_PAYLOAD},[e.VIRIZION]:{0:O.SHARPNESS},[e.TORNADUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[e.THUNDURUS]:{0:O.DRIZZLE,1:O.DRIZZLE},[e.RESHIRAM]:{0:O.ORICHALCUM_PULSE},[e.ZEKROM]:{0:O.HADRON_ENGINE},[e.LANDORUS]:{0:O.STORM_DRAIN,1:O.STORM_DRAIN},[e.KYUREM]:{0:O.SNOW_WARNING,1:O.HADRON_ENGINE,2:O.ORICHALCUM_PULSE},[e.KELDEO]:{0:O.GRIM_NEIGH,1:O.GRIM_NEIGH},[e.MELOETTA]:{0:O.PUNK_ROCK,1:O.SCRAPPY},[e.GENESECT]:{0:O.PROTEAN,1:O.PROTEAN,2:O.PROTEAN,3:O.PROTEAN,4:O.PROTEAN},[e.CHESPIN]:{0:O.ROUGH_SKIN},[e.QUILLADIN]:{0:O.DAUNTLESS_SHIELD},[e.CHESNAUGHT]:{0:O.DAUNTLESS_SHIELD},[e.FENNEKIN]:{0:O.FLUFFY},[e.BRAIXEN]:{0:O.PSYCHIC_SURGE},[e.DELPHOX]:{0:O.PSYCHIC_SURGE},[e.FROAKIE]:{0:O.STAKEOUT,1:O.STAKEOUT},[e.FROGADIER]:{0:O.STAKEOUT,1:O.STAKEOUT},[e.GRENINJA]:{0:O.STAKEOUT,1:O.STAKEOUT,2:O.STAKEOUT},[e.BUNNELBY]:{0:O.INNER_FOCUS},[e.DIGGERSBY]:{0:O.THICK_FAT},[e.FLETCHLING]:{0:O.FLAME_BODY},[e.FLETCHINDER]:{0:O.MAGIC_GUARD},[e.TALONFLAME]:{0:O.MAGIC_GUARD},[e.SCATTERBUG]:{0:O.RUN_AWAY,1:O.RUN_AWAY,2:O.RUN_AWAY,3:O.RUN_AWAY,4:O.RUN_AWAY,5:O.RUN_AWAY,6:O.RUN_AWAY,7:O.RUN_AWAY,8:O.RUN_AWAY,9:O.RUN_AWAY,10:O.RUN_AWAY,11:O.RUN_AWAY,12:O.RUN_AWAY,13:O.RUN_AWAY,14:O.RUN_AWAY,15:O.RUN_AWAY,16:O.RUN_AWAY,17:O.RUN_AWAY,18:O.RUN_AWAY,19:O.RUN_AWAY},[e.SPEWPA]:{0:O.COMPOUND_EYES,1:O.COMPOUND_EYES,2:O.COMPOUND_EYES,3:O.COMPOUND_EYES,4:O.COMPOUND_EYES,5:O.COMPOUND_EYES,6:O.COMPOUND_EYES,7:O.COMPOUND_EYES,8:O.COMPOUND_EYES,9:O.COMPOUND_EYES,10:O.COMPOUND_EYES,11:O.COMPOUND_EYES,12:O.COMPOUND_EYES,13:O.COMPOUND_EYES,14:O.COMPOUND_EYES,15:O.COMPOUND_EYES,16:O.COMPOUND_EYES,17:O.COMPOUND_EYES,18:O.COMPOUND_EYES,19:O.COMPOUND_EYES},[e.VIVILLON]:{0:O.PRANKSTER,1:O.PRANKSTER,2:O.PRANKSTER,3:O.PRANKSTER,4:O.PRANKSTER,5:O.PRANKSTER,6:O.PRANKSTER,7:O.PRANKSTER,8:O.PRANKSTER,9:O.PRANKSTER,10:O.PRANKSTER,11:O.PRANKSTER,12:O.PRANKSTER,13:O.PRANKSTER,14:O.PRANKSTER,15:O.PRANKSTER,16:O.PRANKSTER,17:O.PRANKSTER,18:O.PRANKSTER,19:O.PRANKSTER},[e.LITLEO]:{0:O.BEAST_BOOST},[e.PYROAR]:{0:O.BEAST_BOOST},[e.FLABEBE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.FLOETTE]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.FLORGES]:{0:O.GRASSY_SURGE,1:O.GRASSY_SURGE,2:O.GRASSY_SURGE,3:O.GRASSY_SURGE,4:O.GRASSY_SURGE},[e.SKIDDO]:{0:O.SEED_SOWER},[e.GOGOAT]:{0:O.SEED_SOWER},[e.PANCHAM]:{0:O.TECHNICIAN},[e.PANGORO]:{0:O.FUR_COAT},[e.FURFROU]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY,3:O.FLUFFY,4:O.FLUFFY,5:O.FLUFFY,6:O.FLUFFY,7:O.FLUFFY,8:O.FLUFFY,9:O.FLUFFY},[e.ESPURR]:{0:O.PRANKSTER},[e.MEOWSTIC]:{0:O.FUR_COAT,1:O.NEUROFORCE},[e.HONEDGE]:{0:O.SHARPNESS},[e.DOUBLADE]:{0:O.SHARPNESS},[e.AEGISLASH]:{0:O.SHARPNESS,1:O.SHARPNESS},[e.SPRITZEE]:{0:O.FUR_COAT},[e.AROMATISSE]:{0:O.FUR_COAT},[e.SWIRLIX]:{0:O.RIPEN},[e.SLURPUFF]:{0:O.RIPEN},[e.INKAY]:{0:O.SHADOW_SHIELD},[e.MALAMAR]:{0:O.SHADOW_SHIELD},[e.BINACLE]:{0:O.SAP_SIPPER},[e.BARBARACLE]:{0:O.SAP_SIPPER},[e.SKRELP]:{0:O.WATER_BUBBLE},[e.DRAGALGE]:{0:O.DRAGONS_MAW},[e.CLAUNCHER]:{0:O.PROTEAN},[e.CLAWITZER]:{0:O.PROTEAN},[e.HELIOPTILE]:{0:O.PROTEAN},[e.HELIOLISK]:{0:O.PROTEAN},[e.TYRUNT]:{0:O.RECKLESS},[e.TYRANTRUM]:{0:O.RECKLESS},[e.AMAURA]:{0:O.ICE_SCALES},[e.AURORUS]:{0:O.ICE_SCALES},[e.HAWLUCHA]:{0:O.MOXIE},[e.DEDENNE]:{0:O.PIXILATE},[e.CARBINK]:{0:O.SOLID_ROCK},[e.GOOMY]:{0:O.REGENERATOR},[e.SLIGGOO]:{0:O.POISON_HEAL},[e.GOODRA]:{0:O.POISON_HEAL},[e.HISUI_SLIGGOO]:{0:O.REGENERATOR},[e.HISUI_GOODRA]:{0:O.REGENERATOR},[e.KLEFKI]:{0:O.LEVITATE},[e.PHANTUMP]:{0:O.SHADOW_TAG},[e.TREVENANT]:{0:O.SHADOW_TAG},[e.PUMPKABOO]:{0:O.WELL_BAKED_BODY,1:O.ADAPTABILITY,2:O.PRANKSTER,3:O.SEED_SOWER},[e.GOURGEIST]:{0:O.WELL_BAKED_BODY,1:O.ADAPTABILITY,2:O.PRANKSTER,3:O.SEED_SOWER},[e.BERGMITE]:{0:O.ICE_SCALES},[e.AVALUGG]:{0:O.ICE_SCALES},[e.HISUI_AVALUGG]:{0:O.ICE_SCALES},[e.NOIBAT]:{0:O.CHEEK_POUCH},[e.NOIVERN]:{0:O.PUNK_ROCK},[e.XERNEAS]:{0:O.HARVEST,1:O.HARVEST},[e.YVELTAL]:{0:O.SOUL_HEART},[e.ZYGARDE]:{0:O.UNNERVE,1:O.MOXIE,2:O.UNNERVE,3:O.MOXIE,4:O.ADAPTABILITY,5:O.ADAPTABILITY},[e.DIANCIE]:{0:O.SOLID_ROCK,1:O.PRISM_ARMOR},[e.HOOPA]:{0:O.OPPORTUNIST,1:O.OPPORTUNIST},[e.VOLCANION]:{0:O.NEUTRALIZING_GAS},[e.ETERNAL_FLOETTE]:{0:O.MAGIC_GUARD},[e.ROWLET]:{0:O.WIND_RIDER},[e.DARTRIX]:{0:O.WIND_RIDER},[e.DECIDUEYE]:{0:O.SNIPER},[e.HISUI_DECIDUEYE]:{0:O.SNIPER},[e.LITTEN]:{0:O.OPPORTUNIST},[e.TORRACAT]:{0:O.OPPORTUNIST},[e.INCINEROAR]:{0:O.OPPORTUNIST},[e.POPPLIO]:{0:O.PUNK_ROCK},[e.BRIONNE]:{0:O.PUNK_ROCK},[e.PRIMARINA]:{0:O.PUNK_ROCK},[e.PIKIPEK]:{0:O.TECHNICIAN},[e.TRUMBEAK]:{0:O.TECHNICIAN},[e.TOUCANNON]:{0:O.TECHNICIAN},[e.YUNGOOS]:{0:O.TOUGH_CLAWS},[e.GUMSHOOS]:{0:O.TOUGH_CLAWS},[e.GRUBBIN]:{0:O.SHIELD_DUST},[e.CHARJABUG]:{0:O.POWER_SPOT},[e.VIKAVOLT]:{0:O.SPEED_BOOST},[e.CRABRAWLER]:{0:O.WATER_BUBBLE},[e.CRABOMINABLE]:{0:O.WATER_BUBBLE},[e.ORICORIO]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY},[e.CUTIEFLY]:{0:O.PICKUP},[e.RIBOMBEE]:{0:O.TINTED_LENS},[e.ROCKRUFF]:{0:O.PICKUP,1:O.PICKUP},[e.LYCANROC]:{0:O.STURDY,1:O.INTIMIDATE,2:O.STAKEOUT},[e.WISHIWASHI]:{0:O.REGENERATOR,1:O.REGENERATOR},[e.MAREANIE]:{0:O.TOXIC_DEBRIS},[e.TOXAPEX]:{0:O.TOXIC_DEBRIS},[e.MUDBRAY]:{0:O.SAP_SIPPER},[e.MUDSDALE]:{0:O.SAP_SIPPER},[e.DEWPIDER]:{0:O.TINTED_LENS},[e.ARAQUANID]:{0:O.TINTED_LENS},[e.FOMANTIS]:{0:O.SHARPNESS},[e.LURANTIS]:{0:O.SHARPNESS},[e.MORELULL]:{0:O.TRIAGE},[e.SHIINOTIC]:{0:O.TRIAGE},[e.SALANDIT]:{0:O.PICKUP},[e.SALAZZLE]:{0:O.DRAGONS_MAW},[e.STUFFUL]:{0:O.SCRAPPY},[e.BEWEAR]:{0:O.SCRAPPY},[e.BOUNSWEET]:{0:O.SIMPLE},[e.STEENEE]:{0:O.SIMPLE},[e.TSAREENA]:{0:O.MOXIE},[e.COMFEY]:{0:O.FRIEND_GUARD},[e.ORANGURU]:{0:O.POWER_SPOT},[e.PASSIMIAN]:{0:O.LIBERO},[e.WIMPOD]:{0:O.REGENERATOR},[e.GOLISOPOD]:{0:O.REGENERATOR},[e.SANDYGAST]:{0:O.SAND_SPIT},[e.PALOSSAND]:{0:O.SAND_SPIT},[e.PYUKUMUKU]:{0:O.PURIFYING_SALT},[e.TYPE_NULL]:{0:O.CLEAR_BODY},[e.SILVALLY]:{0:O.ADAPTABILITY,1:O.ADAPTABILITY,2:O.ADAPTABILITY,3:O.ADAPTABILITY,4:O.ADAPTABILITY,5:O.ADAPTABILITY,6:O.ADAPTABILITY,7:O.ADAPTABILITY,8:O.ADAPTABILITY,9:O.ADAPTABILITY,10:O.ADAPTABILITY,11:O.ADAPTABILITY,12:O.ADAPTABILITY,13:O.ADAPTABILITY,14:O.ADAPTABILITY,15:O.ADAPTABILITY,16:O.ADAPTABILITY,17:O.ADAPTABILITY},[e.MINIOR]:{0:O.STURDY,1:O.STURDY,2:O.STURDY,3:O.STURDY,4:O.STURDY,5:O.STURDY,6:O.STURDY,7:O.AERILATE,8:O.AERILATE,9:O.AERILATE,10:O.AERILATE,11:O.AERILATE,12:O.AERILATE,13:O.AERILATE},[e.KOMALA]:{0:O.GUTS},[e.TURTONATOR]:{0:O.DAUNTLESS_SHIELD},[e.TOGEDEMARU]:{0:O.ROUGH_SKIN},[e.MIMIKYU]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.BRUXISH]:{0:O.MULTISCALE},[e.DRAMPA]:{0:O.THICK_FAT},[e.DHELMISE]:{0:O.WATER_BUBBLE},[e.JANGMO_O]:{0:O.DAUNTLESS_SHIELD},[e.HAKAMO_O]:{0:O.DAUNTLESS_SHIELD},[e.KOMMO_O]:{0:O.DAUNTLESS_SHIELD},[e.TAPU_KOKO]:{0:O.DAUNTLESS_SHIELD},[e.TAPU_LELE]:{0:O.BERSERK},[e.TAPU_BULU]:{0:O.FLOWER_VEIL},[e.TAPU_FINI]:{0:O.FAIRY_AURA},[e.COSMOG]:{0:O.PICKUP},[e.COSMOEM]:{0:O.POWER_SPOT},[e.SOLGALEO]:{0:O.BEAST_BOOST},[e.LUNALA]:{0:O.BEAST_BOOST},[e.NIHILEGO]:{0:O.LEVITATE},[e.BUZZWOLE]:{0:O.MOXIE},[e.PHEROMOSA]:{0:O.TINTED_LENS},[e.XURKITREE]:{0:O.TRANSISTOR},[e.CELESTEELA]:{0:O.HEATPROOF},[e.KARTANA]:{0:O.TECHNICIAN},[e.GUZZLORD]:{0:O.POISON_HEAL},[e.NECROZMA]:{0:O.BEAST_BOOST,1:O.FULL_METAL_BODY,2:O.SHADOW_SHIELD,3:O.UNNERVE},[e.MAGEARNA]:{0:O.STEELY_SPIRIT,1:O.STEELY_SPIRIT},[e.MARSHADOW]:{0:O.IRON_FIST},[e.POIPOLE]:{0:O.LEVITATE},[e.NAGANADEL]:{0:O.LEVITATE},[e.STAKATAKA]:{0:O.SOLID_ROCK},[e.BLACEPHALON]:{0:O.MAGIC_GUARD},[e.ZERAORA]:{0:O.TOUGH_CLAWS},[e.MELTAN]:{0:O.HEATPROOF},[e.MELMETAL]:{0:O.HEATPROOF,1:O.FULL_METAL_BODY},[e.ALOLA_RATTATA]:{0:O.ADAPTABILITY},[e.ALOLA_RATICATE]:{0:O.ADAPTABILITY},[e.ALOLA_SANDSHREW]:{0:O.ICE_SCALES},[e.ALOLA_SANDSLASH]:{0:O.ICE_SCALES},[e.ALOLA_VULPIX]:{0:O.ICE_BODY},[e.ALOLA_NINETALES]:{0:O.ICE_BODY},[e.ALOLA_DIGLETT]:{0:O.STURDY},[e.ALOLA_DUGTRIO]:{0:O.STURDY},[e.ALOLA_MEOWTH]:{0:O.DARK_AURA},[e.ALOLA_PERSIAN]:{0:O.DARK_AURA},[e.ALOLA_GEODUDE]:{0:O.DRY_SKIN},[e.ALOLA_GRAVELER]:{0:O.DRY_SKIN},[e.ALOLA_GOLEM]:{0:O.DRY_SKIN},[e.ALOLA_GRIMER]:{0:O.TOXIC_DEBRIS},[e.ALOLA_MUK]:{0:O.TOXIC_DEBRIS},[e.GROOKEY]:{0:O.PICKPOCKET},[e.THWACKEY]:{0:O.PICKPOCKET},[e.RILLABOOM]:{0:O.GRASS_PELT,1:O.GRASS_PELT},[e.SCORBUNNY]:{0:O.SHEER_FORCE},[e.RABOOT]:{0:O.SHEER_FORCE},[e.CINDERACE]:{0:O.NO_GUARD,1:O.NO_GUARD},[e.SOBBLE]:{0:O.SUPER_LUCK},[e.DRIZZILE]:{0:O.SUPER_LUCK},[e.INTELEON]:{0:O.SUPER_LUCK,1:O.SUPER_LUCK},[e.SKWOVET]:{0:O.HARVEST},[e.GREEDENT]:{0:O.HARVEST},[e.ROOKIDEE]:{0:O.GALE_WINGS},[e.CORVISQUIRE]:{0:O.GALE_WINGS},[e.CORVIKNIGHT]:{0:O.IRON_BARBS,1:O.IRON_BARBS},[e.BLIPBUG]:{0:O.RUN_AWAY},[e.DOTTLER]:{0:O.PSYCHIC_SURGE},[e.ORBEETLE]:{0:O.PSYCHIC_SURGE,1:O.PSYCHIC_SURGE},[e.NICKIT]:{0:O.MAGICIAN},[e.THIEVUL]:{0:O.MAGICIAN},[e.GOSSIFLEUR]:{0:O.SEED_SOWER},[e.ELDEGOSS]:{0:O.GRASSY_SURGE},[e.WOOLOO]:{0:O.SCRAPPY},[e.DUBWOOL]:{0:O.SCRAPPY},[e.CHEWTLE]:{0:O.SOLID_ROCK},[e.DREDNAW]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.YAMPER]:{0:O.PICKUP},[e.BOLTUND]:{0:O.SHEER_FORCE},[e.ROLYCOLY]:{0:O.SOLID_ROCK},[e.CARKOL]:{0:O.SOLID_ROCK},[e.COALOSSAL]:{0:O.SOLID_ROCK,1:O.SOLID_ROCK},[e.APPLIN]:{0:O.STURDY},[e.FLAPPLE]:{0:O.NO_GUARD,1:O.NO_GUARD},[e.APPLETUN]:{0:O.WELL_BAKED_BODY,1:O.WELL_BAKED_BODY},[e.DIPPLIN]:{0:O.PARENTAL_BOND},[e.HYDRAPPLE]:{0:O.PARENTAL_BOND},[e.SILICOBRA]:{0:O.SAND_RUSH},[e.SANDACONDA]:{0:O.SAND_RUSH,1:O.SAND_RUSH},[e.CRAMORANT]:{0:O.LIGHTNING_ROD,1:O.LIGHTNING_ROD,2:O.LIGHTNING_ROD},[e.ARROKUDA]:{0:O.SPEED_BOOST},[e.BARRASKEWDA]:{0:O.INTIMIDATE},[e.TOXEL]:{0:O.ELECTRIC_SURGE},[e.TOXTRICITY]:{0:O.ELECTRIC_SURGE,1:O.ELECTRIC_SURGE,2:O.ELECTRIC_SURGE},[e.SIZZLIPEDE]:{0:O.HUSTLE},[e.CENTISKORCH]:{0:O.HUSTLE,1:O.HUSTLE},[e.CLOBBOPUS]:{0:O.WATER_BUBBLE},[e.GRAPPLOCT]:{0:O.WATER_BUBBLE},[e.SINISTEA]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.POLTEAGEIST]:{0:O.SHADOW_SHIELD,1:O.SHADOW_SHIELD},[e.HATENNA]:{0:O.FAIRY_AURA},[e.HATTREM]:{0:O.FAIRY_AURA},[e.HATTERENE]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[e.IMPIDIMP]:{0:O.INTIMIDATE},[e.MORGREM]:{0:O.INTIMIDATE},[e.GRIMMSNARL]:{0:O.INTIMIDATE,1:O.INTIMIDATE},[e.MILCERY]:{0:O.REGENERATOR},[e.ALCREMIE]:{0:O.REGENERATOR,1:O.REGENERATOR,2:O.REGENERATOR,3:O.REGENERATOR,4:O.REGENERATOR,5:O.REGENERATOR,6:O.REGENERATOR,7:O.REGENERATOR,8:O.REGENERATOR,9:O.REGENERATOR},[e.FALINKS]:{0:O.DAUNTLESS_SHIELD},[e.PINCURCHIN]:{0:O.ELECTROMORPHOSIS},[e.SNOM]:{0:O.SNOW_WARNING},[e.FROSMOTH]:{0:O.SNOW_WARNING},[e.STONJOURNER]:{0:O.STURDY},[e.EISCUE]:{0:O.ICE_SCALES,1:O.ICE_SCALES},[e.INDEEDEE]:{0:O.HOSPITALITY,1:O.FRIEND_GUARD},[e.MORPEKO]:{0:O.MOODY,1:O.MOODY},[e.CUFANT]:{0:O.EARTH_EATER},[e.COPPERAJAH]:{0:O.EARTH_EATER,1:O.EARTH_EATER},[e.DRACOZOLT]:{0:O.NO_GUARD},[e.ARCTOZOLT]:{0:O.WATER_ABSORB},[e.DRACOVISH]:{0:O.SWIFT_SWIM},[e.ARCTOVISH]:{0:O.STRONG_JAW},[e.DURALUDON]:{0:O.FILTER,1:O.UNAWARE},[e.ARCHALUDON]:{0:O.TRANSISTOR},[e.DREEPY]:{0:O.TECHNICIAN},[e.DRAKLOAK]:{0:O.PARENTAL_BOND},[e.DRAGAPULT]:{0:O.PARENTAL_BOND},[e.ZACIAN]:{0:O.UNNERVE,1:O.UNNERVE},[e.ZAMAZENTA]:{0:O.UNNERVE,1:O.UNNERVE},[e.ETERNATUS]:{0:O.NEUTRALIZING_GAS,1:O.NEUTRALIZING_GAS},[e.KUBFU]:{0:O.IRON_FIST},[e.URSHIFU]:{0:O.IRON_FIST,1:O.IRON_FIST,2:O.IRON_FIST,3:O.IRON_FIST},[e.ZARUDE]:{0:O.TOUGH_CLAWS,1:O.TOUGH_CLAWS},[e.REGIELEKI]:{0:O.ELECTRIC_SURGE},[e.REGIDRAGO]:{0:O.MULTISCALE},[e.GLASTRIER]:{0:O.FILTER},[e.SPECTRIER]:{0:O.DAZZLING},[e.CALYREX]:{0:O.HARVEST,1:O.FILTER,2:O.DAZZLING},[e.ENAMORUS]:{0:O.FAIRY_AURA,1:O.FAIRY_AURA},[e.GALAR_MEOWTH]:{0:O.UNBURDEN},[e.PERRSERKER]:{0:O.UNBURDEN},[e.GALAR_PONYTA]:{0:O.CHILLING_NEIGH},[e.GALAR_RAPIDASH]:{0:O.CHILLING_NEIGH},[e.GALAR_SLOWPOKE]:{0:O.OBLIVIOUS},[e.GALAR_SLOWBRO]:{0:O.NEUROFORCE},[e.GALAR_SLOWKING]:{0:O.INTIMIDATE},[e.GALAR_FARFETCHD]:{0:O.STAKEOUT},[e.SIRFETCHD]:{0:O.INTREPID_SWORD},[e.GALAR_ARTICUNO]:{0:O.SERENE_GRACE},[e.GALAR_ZAPDOS]:{0:O.TOUGH_CLAWS},[e.GALAR_MOLTRES]:{0:O.DARK_AURA},[e.GALAR_CORSOLA]:{0:O.SHADOW_SHIELD},[e.CURSOLA]:{0:O.SHADOW_SHIELD},[e.GALAR_ZIGZAGOON]:{0:O.POISON_HEAL},[e.GALAR_LINOONE]:{0:O.POISON_HEAL},[e.OBSTAGOON]:{0:O.POISON_HEAL},[e.GALAR_DARUMAKA]:{0:O.FLASH_FIRE},[e.GALAR_DARMANITAN]:{0:O.FLASH_FIRE,1:O.FLASH_FIRE},[e.GALAR_YAMASK]:{0:O.TABLETS_OF_RUIN},[e.RUNERIGUS]:{0:O.TABLETS_OF_RUIN},[e.GALAR_STUNFISK]:{0:O.ARENA_TRAP},[e.HISUI_GROWLITHE]:{0:O.RECKLESS},[e.HISUI_ARCANINE]:{0:O.RECKLESS},[e.HISUI_VOLTORB]:{0:O.TRANSISTOR},[e.HISUI_ELECTRODE]:{0:O.TRANSISTOR},[e.HISUI_QWILFISH]:{0:O.MERCILESS},[e.OVERQWIL]:{0:O.MERCILESS},[e.HISUI_SNEASEL]:{0:O.SCRAPPY},[e.SNEASLER]:{0:O.SCRAPPY},[e.HISUI_ZORUA]:{0:O.ADAPTABILITY},[e.HISUI_ZOROARK]:{0:O.ADAPTABILITY},[e.SPRIGATITO]:{0:O.PICKUP},[e.FLORAGATO]:{0:O.MAGICIAN},[e.MEOWSCARADA]:{0:O.MAGICIAN},[e.FUECOCO]:{0:O.GLUTTONY},[e.CROCALOR]:{0:O.PUNK_ROCK},[e.SKELEDIRGE]:{0:O.PUNK_ROCK},[e.QUAXLY]:{0:O.OPPORTUNIST},[e.QUAXWELL]:{0:O.OPPORTUNIST},[e.QUAQUAVAL]:{0:O.OPPORTUNIST},[e.LECHONK]:{0:O.SIMPLE},[e.OINKOLOGNE]:{0:O.SIMPLE,1:O.SIMPLE},[e.TAROUNTULA]:{0:O.HONEY_GATHER},[e.SPIDOPS]:{0:O.HONEY_GATHER},[e.NYMBLE]:{0:O.TECHNICIAN},[e.LOKIX]:{0:O.GUTS},[e.PAWMI]:{0:O.TRANSISTOR},[e.PAWMO]:{0:O.TRANSISTOR},[e.PAWMOT]:{0:O.TRANSISTOR},[e.TANDEMAUS]:{0:O.FRIEND_GUARD},[e.MAUSHOLD]:{0:O.SCRAPPY,1:O.SCRAPPY},[e.FIDOUGH]:{0:O.WATER_ABSORB},[e.DACHSBUN]:{0:O.WATER_ABSORB},[e.SMOLIV]:{0:O.RIPEN},[e.DOLLIV]:{0:O.RIPEN},[e.ARBOLIVA]:{0:O.RIPEN},[e.SQUAWKABILLY]:{0:O.MOXIE,1:O.MOXIE,2:O.MOXIE,3:O.MOXIE},[e.NACLI]:{0:O.SOLID_ROCK},[e.NACLSTACK]:{0:O.SOLID_ROCK},[e.GARGANACL]:{0:O.SOLID_ROCK},[e.CHARCADET]:{0:O.BATTLE_ARMOR},[e.ARMAROUGE]:{0:O.PRISM_ARMOR},[e.CERULEDGE]:{0:O.PRISM_ARMOR},[e.TADBULB]:{0:O.LEVITATE},[e.BELLIBOLT]:{0:O.STAMINA},[e.WATTREL]:{0:O.SHEER_FORCE},[e.KILOWATTREL]:{0:O.SHEER_FORCE},[e.MASCHIFF]:{0:O.STRONG_JAW},[e.MABOSSTIFF]:{0:O.STRONG_JAW},[e.SHROODLE]:{0:O.CORROSION},[e.GRAFAIAI]:{0:O.CORROSION},[e.BRAMBLIN]:{0:O.WANDERING_SPIRIT},[e.BRAMBLEGHAST]:{0:O.SHADOW_SHIELD},[e.TOEDSCOOL]:{0:O.RUN_AWAY},[e.TOEDSCRUEL]:{0:O.PRANKSTER},[e.KLAWF]:{0:O.WATER_ABSORB},[e.CAPSAKID]:{0:O.FLOWER_GIFT},[e.SCOVILLAIN]:{0:O.PARENTAL_BOND},[e.RELLOR]:{0:O.PRANKSTER},[e.RABSCA]:{0:O.PRANKSTER},[e.FLITTLE]:{0:O.DAZZLING},[e.ESPATHRA]:{0:O.DAZZLING},[e.TINKATINK]:{0:O.STEELWORKER},[e.TINKATUFF]:{0:O.STEELWORKER},[e.TINKATON]:{0:O.STEELWORKER},[e.WIGLETT]:{0:O.STURDY},[e.WUGTRIO]:{0:O.STURDY},[e.BOMBIRDIER]:{0:O.UNBURDEN},[e.FINIZEN]:{0:O.SWIFT_SWIM},[e.PALAFIN]:{0:O.EMERGENCY_EXIT,1:O.IRON_FIST},[e.VAROOM]:{0:O.LEVITATE},[e.REVAVROOM]:{0:O.LEVITATE,1:O.DARK_AURA,2:O.FLASH_FIRE,3:O.MERCILESS,4:O.FILTER,5:O.SCRAPPY},[e.CYCLIZAR]:{0:O.PROTEAN},[e.ORTHWORM]:{0:O.REGENERATOR},[e.GLIMMET]:{0:O.STURDY},[e.GLIMMORA]:{0:O.TERA_SHELL},[e.GREAVARD]:{0:O.UNAWARE},[e.HOUNDSTONE]:{0:O.UNAWARE},[e.FLAMIGO]:{0:O.MOXIE},[e.CETODDLE]:{0:O.REFRIGERATE},[e.CETITAN]:{0:O.REFRIGERATE},[e.VELUZA]:{0:O.SUPER_LUCK},[e.DONDOZO]:{0:O.DRAGONS_MAW},[e.TATSUGIRI]:{0:O.FLUFFY,1:O.FLUFFY,2:O.FLUFFY},[e.GREAT_TUSK]:{0:O.INTIMIDATE},[e.SCREAM_TAIL]:{0:O.UNAWARE},[e.BRUTE_BONNET]:{0:O.CHLOROPHYLL},[e.FLUTTER_MANE]:{0:O.DAZZLING},[e.SLITHER_WING]:{0:O.SCRAPPY},[e.SANDY_SHOCKS]:{0:O.ELECTRIC_SURGE},[e.IRON_TREADS]:{0:O.DAUNTLESS_SHIELD},[e.IRON_BUNDLE]:{0:O.SNOW_WARNING},[e.IRON_HANDS]:{0:O.IRON_FIST},[e.IRON_JUGULIS]:{0:O.LIGHTNING_ROD},[e.IRON_MOTH]:{0:O.LEVITATE},[e.IRON_THORNS]:{0:O.SAND_STREAM},[e.FRIGIBAX]:{0:O.INTIMIDATE},[e.ARCTIBAX]:{0:O.INTIMIDATE},[e.BAXCALIBUR]:{0:O.INTIMIDATE},[e.GIMMIGHOUL]:{0:O.HONEY_GATHER,1:O.HONEY_GATHER},[e.GHOLDENGO]:{0:O.HONEY_GATHER},[e.WO_CHIEN]:{0:O.VESSEL_OF_RUIN},[e.CHIEN_PAO]:{0:O.INTIMIDATE},[e.TING_LU]:{0:O.STAMINA},[e.CHI_YU]:{0:O.BERSERK},[e.ROARING_MOON]:{0:O.INTIMIDATE},[e.IRON_VALIANT]:{0:O.NEUROFORCE},[e.KORAIDON]:{0:O.THERMAL_EXCHANGE},[e.MIRAIDON]:{0:O.COMPOUND_EYES},[e.WALKING_WAKE]:{0:O.BEAST_BOOST},[e.IRON_LEAVES]:{0:O.SHARPNESS},[e.POLTCHAGEIST]:{0:O.TRIAGE,1:O.TRIAGE},[e.SINISTCHA]:{0:O.TRIAGE,1:O.TRIAGE},[e.OKIDOGI]:{0:O.DARK_AURA},[e.MUNKIDORI]:{0:O.MAGICIAN},[e.FEZANDIPITI]:{0:O.PIXILATE},[e.OGERPON]:{0:O.OPPORTUNIST,1:O.SUPER_LUCK,2:O.FLASH_FIRE,3:O.MAGIC_GUARD,4:O.OPPORTUNIST,5:O.SUPER_LUCK,6:O.FLASH_FIRE,7:O.MAGIC_GUARD},[e.GOUGING_FIRE]:{0:O.BEAST_BOOST},[e.RAGING_BOLT]:{0:O.BEAST_BOOST},[e.IRON_BOULDER]:{0:O.SHARPNESS},[e.IRON_CROWN]:{0:O.SHARPNESS},[e.TERAPAGOS]:{0:O.SHIELD_DUST,1:O.SHIELD_DUST,2:O.SHIELD_DUST},[e.PECHARUNT]:{0:O.TOXIC_CHAIN},[e.PALDEA_TAUROS]:{0:O.STAMINA,1:O.ADAPTABILITY,2:O.ADAPTABILITY},[e.PALDEA_WOOPER]:{0:O.POISON_TOUCH},[e.CLODSIRE]:{0:O.THICK_FAT},[e.BLOODMOON_URSALUNA]:{0:O.BERSERK}},z6={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},"es-ES":{starterInfoTextSize:"56px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"56px",instructionTextSize:"38px"}},AJ=2,Hl=17,fl=143;function hc(E){const R=E%9*18,n=13+Math.floor(E/9)*17;return{x:R,y:n}}o(hc,"calcStarterPosition");const SK=class SK extends hs{constructor(){super(te.POKEDEX),this.pokemonContainers=[],this.filteredPokemonData=[],this.filterBarCursor=0,this.oldCursor=-1,this.allSpecies=[],this.speciesLoaded=new Map,this.pokerusSpecies=[],this.blockInput=!1,this.textPadding=8,this.defaultMessageBoxWidth=220,this.defaultWordWrapWidth=1224,this.scale=.1666666667,this.filterTextCursor=0,this.showDecorations=!1,this.trayContainers=[],this.trayCursor=0,this.showingTray=!1,this.updateStarters=()=>{this.scrollCursor=0,this.filteredPokemonData=[],this.pokerusCursorObjs.forEach(s=>s.setVisible(!1)),this.filterBar.updateFilterLabels(),this.filterText.updateFilterLabels(),this.filteredPokemonData=[],this.allSpecies.forEach(s=>{var Ni,$I,li,Ci,WO;const R=this.getStarterSpeciesId(s.speciesId),n=this.getCurrentDexProps(s.speciesId),I=this.getSanitizedProps(a.gameData.getSpeciesDexAttrProps(s,n)),r={species:s,cost:a.gameData.getSpeciesStarterValue(R),props:I},L=(((Ni=a.gameData.dexData[s.speciesId])==null?void 0:Ni.caughtAttr)||BigInt(0))&((($I=a.gameData.dexData[this.getStarterSpeciesId(s.speciesId)])==null?void 0:$I.caughtAttr)||BigInt(0))&s.getFullUnlocksData(),N=a.gameData.starterData[R],l=_E.hasOwnProperty(R),C=this.filterText.getValue(JE.NAME),U=s.name===C||C===this.filterText.defaultText,D=vr[s.speciesId].map(et=>Ve[et[1]].name),M=((li=_E[R])==null?void 0:li.map(et=>Ve[et].name))??[],h=((Ci=Lk[s.speciesId])==null?void 0:Ci.map(et=>Ve[Array.isArray(et)?et[1]:et].name))??[],_=this.filterText.getValue(JE.MOVE_1),d=this.filterText.getValue(JE.MOVE_2),f=s.forms.some(et=>this.hasFormLevelMove(et,_)),H=s.forms.some(et=>this.hasFormLevelMove(et,d)),B=D.includes(_)||f,K=M.includes(_),Y=h.includes(_),v=D.includes(d)||H,Z=M.includes(d),z=h.includes(d),q=B||K||Y||_===this.filterText.defaultText,J=v||Z||z||d===this.filterText.defaultText,Ae=q&&J;if(K&&!B){const et=M.findIndex(yO=>yO===_);(N.eggMoves&1<<et)===0?r.eggMove1=!1:r.eggMove1=!0}else Y&&!B&&(r.tmMove1=!0);if(Z&&!v){const et=M.findIndex(yO=>yO===d);(N.eggMoves&1<<et)===0?r.eggMove2=!1:r.eggMove2=!0}else z&&!v&&(r.tmMove2=!0);const Q=[s.ability1,s.ability2,s.abilityHidden].map(et=>nA[et].name),Re=qO.hasOwnProperty(s.speciesId)?s.speciesId:qO.hasOwnProperty(R)?R:IA[R],W=qO[Re],ie=this.filterText.getValue(JE.ABILITY_1),Be=s.forms.some(et=>[et.ability1,et.ability2,et.abilityHidden].map(yO=>nA[yO].name).includes(ie)),he=Q.includes(ie)||Be||ie===this.filterText.defaultText,ve=Object.values(W).some(et=>nA[et].name===ie),_e=this.filterText.getValue(JE.ABILITY_2),Le=s.forms.some(et=>[et.ability1,et.ability2,et.abilityHidden].map(yO=>nA[yO].name).includes(_e)),Ee=Q.includes(_e)||Le||_e===this.filterText.defaultText,se=Object.values(W).some(et=>nA[et].name===_e),Ne=he&&(se||_e===this.filterText.defaultText)||Ee&&(ve||ie===this.filterText.defaultText);(ve||se)&&(ve?N.passiveAttr>0?r.passive1=!0:r.passive1=!1:N.passiveAttr>0?r.passive2=!0:r.passive2=!1);const Ue=this.filterBar.getVals(rA.GEN).includes(s.generation),me=this.filterBar.getVals(rA.TYPES).some(et=>s.isOfType(et-1)),st=new Map(Object.values(T).map((et,yO)=>typeof et=="string"?[yO,et]:void 0).filter(et=>et!==void 0));st.set(35,"Uncatchable");const Ct=dL[s.speciesId].concat(dL[R]).map(et=>T[et.biome]);Ct.length===0&&Ct.push("Uncatchable");const tt=Ct.length===0&&this.filterBar.getVals(rA.BIOME).length===36,ft=this.filterBar.getVals(rA.BIOME).some(et=>Ct.includes(st.get(et)??""))||tt,Xt=!!(L&de.NON_SHINY),pt=!!(L&de.SHINY),fA=pt&&!!(L&de.DEFAULT_VARIANT),cA=pt&&!!(L&de.VARIANT_2),x=pt&&!!(L&de.VARIANT_3),be=!Xt&&!fA&&!cA&&!x,Ye=this.filterBar.getVals(rA.CAUGHT).some(et=>{if(et==="SHINY3")return x;if(et==="SHINY2")return cA&&!x;if(et==="SHINY")return fA&&!cA&&!x;if(et==="NORMAL")return Xt&&!fA&&!cA&&!x;if(et==="UNCAUGHT")return be}),le=N.passiveAttr>0,Te=this.isPassiveAvailable(s.speciesId)&&!le,fe=this.filterBar.getVals(rA.UNLOCKS).some(et=>{if(et.val==="PASSIVE"&&et.state===nt.ON)return le;if(et.val==="PASSIVE"&&et.state===nt.EXCLUDE)return l&&!le;if(et.val==="PASSIVE"&&et.state===nt.UNLOCKABLE)return Te;if(et.val==="PASSIVE"&&et.state===nt.OFF)return!0}),qe=N.valueReduction===1,Je=N.valueReduction===2,pe=this.isValueReductionAvailable(s.speciesId),it=this.filterBar.getVals(rA.UNLOCKS).some(et=>{if(et.val==="COST_REDUCTION"&&et.state===nt.ON)return qe||Je;if(et.val==="COST_REDUCTION"&&et.state===nt.ONE)return qe;if(et.val==="COST_REDUCTION"&&et.state===nt.TWO)return Je;if(et.val==="COST_REDUCTION"&&et.state===nt.EXCLUDE)return l&&!(qe||Je);if(et.val==="COST_REDUCTION"&&et.state===nt.UNLOCKABLE)return pe;if(et.val==="COST_REDUCTION"&&et.state===nt.OFF)return!0}),Bt=this.getStarterSpeciesId(s.speciesId)===s.speciesId,lt=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="STARTER"&&et.state===nt.ON)return Bt;if(et.val==="STARTER"&&et.state===nt.EXCLUDE)return!Bt;if(et.val==="STARTER"&&et.state===nt.OFF)return!0}),xt=((WO=this.starterPreferences[s.speciesId])==null?void 0:WO.favorite)??!1,BA=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="FAVORITE"&&et.state===nt.ON)return xt;if(et.val==="FAVORITE"&&et.state===nt.EXCLUDE)return!xt;if(et.val==="FAVORITE"&&et.state===nt.OFF)return!0}),NA=N.classicWinCount>0,Ws=N.classicWinCount===0,Ln=N.classicWinCount===void 0,Is=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="WIN"&&et.state===nt.ON)return NA;if(et.val==="WIN"&&et.state===nt.EXCLUDE)return Ws||Ln;if(et.val==="WIN"&&et.state===nt.OFF)return!0}),qR=s.abilityHidden!==s.ability1&&s.abilityHidden!==O.NONE,CE=N.abilityAttr&hE.ABILITY_HIDDEN,yn=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="HIDDEN_ABILITY"&&et.state===nt.ON)return CE;if(et.val==="HIDDEN_ABILITY"&&et.state===nt.EXCLUDE)return qR&&!CE;if(et.val==="HIDDEN_ABILITY"&&et.state===nt.OFF)return!0}),wn=this.isSameSpeciesEggAvailable(s.speciesId),eO=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="EGG"&&et.state===nt.ON)return wn;if(et.val==="EGG"&&et.state===nt.EXCLUDE)return l&&!wn;if(et.val==="EGG"&&et.state===nt.OFF)return!0}),QI=this.filterBar.getVals(rA.MISC).some(et=>{if(et.val==="POKERUS"&&et.state===nt.ON)return this.pokerusSpecies.includes(s);if(et.val==="POKERUS"&&et.state===nt.EXCLUDE)return!this.pokerusSpecies.includes(s);if(et.val==="POKERUS"&&et.state===nt.OFF)return!0});U&&Ne&&Ae&&Ue&&ft&&me&&Ye&&fe&&it&&lt&&BA&&Is&&yn&&eO&&QI&&this.filteredPokemonData.push(r)}),this.starterSelectScrollBar.setTotalRows(Math.max(Math.ceil(this.filteredPokemonData.length/9),1)),this.starterSelectScrollBar.setScrollCursor(0);const A=this.filterBar.getVals(rA.SORT)[0];this.filteredPokemonData.sort((s,R)=>{switch(A.val){case RE.NUMBER:return(s.species.speciesId-R.species.speciesId)*-A.dir;case RE.COST:return(s.cost-R.cost)*-A.dir;case RE.CANDY:{const n=a.gameData.starterData[this.getStarterSpeciesId(s.species.speciesId)].candyCount,I=a.gameData.starterData[this.getStarterSpeciesId(R.species.speciesId)].candyCount;return(n-I)*-A.dir}case RE.IV:{const n=a.gameData.dexData[s.species.speciesId].ivs.reduce((r,L)=>r+L,0)/a.gameData.dexData[s.species.speciesId].ivs.length,I=a.gameData.dexData[R.species.speciesId].ivs.reduce((r,L)=>r+L,0)/a.gameData.dexData[R.species.speciesId].ivs.length;return(n-I)*-A.dir}case RE.NAME:return s.species.name.localeCompare(R.species.name)*-A.dir;case RE.CAUGHT:return(a.gameData.dexData[s.species.speciesId].caughtCount-a.gameData.dexData[R.species.speciesId].caughtCount)*-A.dir;case RE.HATCHED:return(a.gameData.dexData[this.getStarterSpeciesId(s.species.speciesId)].hatchedCount-a.gameData.dexData[this.getStarterSpeciesId(R.species.speciesId)].hatchedCount)*-A.dir}return 0}),this.filteredIndices=this.filteredPokemonData.map(s=>s.species.speciesId),this.updateScroll()},this.updateScroll=()=>{const s=this.scrollCursor*9;this.starterSelectScrollBar.setScrollCursor(this.scrollCursor),this.pokerusCursorObjs.forEach(n=>n.setVisible(!1));let R=0;this.pokemonContainers.forEach((n,I)=>{var L;const r=I+s;if(r>=this.filteredPokemonData.length)n.setVisible(!1);else{n.setVisible(!0);const N=this.filteredPokemonData[r],l=N.props;n.setSpecies(N.species,l),n.icon.setTexture(N.species.getIconAtlasKey(l.formIndex,l.shiny,l.variant),n.species.getIconId(l.female,l.formIndex,l.shiny,l.variant)),n.checkIconId(l.female,l.formIndex,l.shiny,l.variant);const U=N.species.speciesId,D=a.gameData.dexData[U],M=D.caughtAttr&a.gameData.dexData[this.getStarterSpeciesId(U)].caughtAttr&N.species.getFullUnlocksData();if(M&N.species.getFullUnlocksData()||a.dexForDevs?n.icon.clearTint():this.isSeen(N.species,D)?n.icon.setTint(8421504):n.icon.setTint(0),[[N.eggMove1,n.eggMove1Icon],[N.eggMove2,n.eggMove2Icon],[N.tmMove1,n.tmMove1Icon],[N.tmMove2,n.tmMove2Icon],[N.passive1,n.passive1Icon],[N.passive2,n.passive2Icon]].forEach(([_,d])=>{_?(d.setVisible(!0),d.clearTint()):_===!1?(d.setVisible(!0),d.setTint(8421504)):d.setVisible(!1)}),this.showDecorations){this.pokerusSpecies.includes(N.species)&&(this.pokerusCursorObjs[R].setPosition(n.x-1,n.y+1),this.pokerusCursorObjs[R].setVisible(!0),R++),this.updateStarterValueLabel(n),n.label.setVisible(!0);const _=U&&M&de.SHINY?[de.DEFAULT_VARIANT,de.VARIANT_2,de.VARIANT_3].filter(d=>!!(M&d)):[];for(let d=0;d<3;d++){const f=_.length>d;n.shinyIcons[d].setVisible(f),f&&n.shinyIcons[d].setTint(lE(_[d]===de.DEFAULT_VARIANT?0:_[d]===de.VARIANT_2?1:2))}n.starterPassiveBgs.setVisible(!!a.gameData.starterData[this.getStarterSpeciesId(U)].passiveAttr),n.hiddenAbilityIcon.setVisible(!!M&&!!(a.gameData.starterData[this.getStarterSpeciesId(U)].abilityAttr&4)),n.classicWinIcon.setVisible(a.gameData.starterData[this.getStarterSpeciesId(U)].classicWinCount>0),n.favoriteIcon.setVisible(((L=this.starterPreferences[U])==null?void 0:L.favorite)??!1),a.candyUpgradeDisplay===0?(KE[this.getStarterSpeciesId(U)]||(KE[this.getStarterSpeciesId(U)]=["ffffff","ffffff"]),n.candyUpgradeIcon.setTint(Es(bE(KE[this.getStarterSpeciesId(U)][0]))),n.candyUpgradeOverlayIcon.setTint(Es(bE(KE[this.getStarterSpeciesId(U)][1])))):a.candyUpgradeDisplay===1&&(n.candyUpgradeIcon.setVisible(!1),n.candyUpgradeOverlayIcon.setVisible(!1))}else{n.label.setVisible(!1);for(let _=0;_<3;_++)n.shinyIcons[_].setVisible(!1);n.starterPassiveBgs.setVisible(!1),n.hiddenAbilityIcon.setVisible(!1),n.classicWinIcon.setVisible(!1),n.favoriteIcon.setVisible(!1),n.candyUpgradeIcon.setVisible(!1),n.candyUpgradeOverlayIcon.setVisible(!1)}}})}}setup(){const A=this.getUi(),s=u.resolvedLanguage??"en",R=Object.keys(z6).find(ie=>s.includes(ie))??"en",n=z6[R];this.starterSelectContainer=a.add.container(0,-a.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const I=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,26720);I.setOrigin(0,0),this.starterSelectContainer.add(I);const r=Gt(fl,Hl+1,175,161),L=a.add.image(fl+1,Hl+2,"starter_container_bg");L.setOrigin(0,0),this.starterSelectContainer.add(L),this.starterSelectContainer.add(r),this.filterTextContainer=a.add.container(0,0),this.filterText=new Y_(1,Hl+2,140,100,this.updateStarters),this.filterText.addFilter(JE.NAME,u.t("filterText:nameField")),this.filterText.addFilter(JE.MOVE_1,u.t("filterText:move1Field")),this.filterText.addFilter(JE.MOVE_2,u.t("filterText:move2Field")),this.filterText.addFilter(JE.ABILITY_1,u.t("filterText:ability1Field")),this.filterText.addFilter(JE.ABILITY_2,u.t("filterText:ability2Field")),this.filterTextContainer.add(this.filterText),this.starterSelectContainer.add(this.filterTextContainer),this.filterBarContainer=a.add.container(0,0),this.filterBar=new Uu(fl,1,175,Hl,2,0,6);const N=[new vt(1,new It(u.t("pokedexUiHandler:gen1"))),new vt(2,new It(u.t("pokedexUiHandler:gen2"))),new vt(3,new It(u.t("pokedexUiHandler:gen3"))),new vt(4,new It(u.t("pokedexUiHandler:gen4"))),new vt(5,new It(u.t("pokedexUiHandler:gen5"))),new vt(6,new It(u.t("pokedexUiHandler:gen6"))),new vt(7,new It(u.t("pokedexUiHandler:gen7"))),new vt(8,new It(u.t("pokedexUiHandler:gen8"))),new vt(9,new It(u.t("pokedexUiHandler:gen9")))],l=new hR(0,0,N,this.updateStarters,cR.HYBRID);this.filterBar.addFilter(rA.GEN,u.t("filterBar:genFilter"),l);const C=Object.keys(i).filter(ie=>Number.isNaN(Number(ie))),U=[];C.forEach((ie,Be)=>{if(Be===0||Be===19)return;const he=a.add.sprite(0,0,Ds("types"));he.setScale(.5),he.setFrame(ie.toLowerCase()),U.push(new vt(Be,new It("",he)))}),this.filterBar.addFilter(rA.TYPES,u.t("filterBar:typeFilter"),new hR(0,0,U,this.updateStarters,cR.HYBRID,.5));const D=Object.values(T).filter(ie=>typeof ie=="number").map((ie,Be)=>new vt(Be,new It(u.t(`biome:${T[ie].toUpperCase()}`))));D.push(new vt(D.length,new It(u.t("filterBar:uncatchable"))));const M=new hR(0,0,D,this.updateStarters,cR.HYBRID);this.filterBar.addFilter(rA.BIOME,u.t("filterBar:biomeFilter"),M);const h=a.add.sprite(0,0,"shiny_icons");h.setOrigin(.15,.2),h.setScale(.6),h.setFrame(DO(0)),h.setTint(lE(0));const _=a.add.sprite(0,0,"shiny_icons");_.setOrigin(.15,.2),_.setScale(.6),_.setFrame(DO(1)),_.setTint(lE(1));const d=a.add.sprite(0,0,"shiny_icons");d.setOrigin(.15,.2),d.setScale(.6),d.setFrame(DO(2)),d.setTint(lE(2));const f=[new vt("SHINY3",new It("",d)),new vt("SHINY2",new It("",_)),new vt("SHINY",new It("",h)),new vt("NORMAL",new It(u.t("filterBar:normal"))),new vt("UNCAUGHT",new It(u.t("filterBar:uncaught")))];this.filterBar.addFilter(rA.CAUGHT,u.t("filterBar:caughtFilter"),new hR(0,0,f,this.updateStarters,cR.HYBRID));const H=[new It(u.t("filterBar:passive"),void 0,nt.OFF),new It(u.t("filterBar:passiveUnlocked"),void 0,nt.ON),new It(u.t("filterBar:passiveUnlockable"),void 0,nt.UNLOCKABLE),new It(u.t("filterBar:passiveLocked"),void 0,nt.EXCLUDE)],B=[new It(u.t("filterBar:costReduction"),void 0,nt.OFF),new It(u.t("filterBar:costReductionUnlocked"),void 0,nt.ON),new It(u.t("filterBar:costReductionUnlockedOne"),void 0,nt.ONE),new It(u.t("filterBar:costReductionUnlockedTwo"),void 0,nt.TWO),new It(u.t("filterBar:costReductionUnlockable"),void 0,nt.UNLOCKABLE),new It(u.t("filterBar:costReductionLocked"),void 0,nt.EXCLUDE)],K=[new vt("PASSIVE",H),new vt("COST_REDUCTION",B)];this.filterBar.addFilter(rA.UNLOCKS,u.t("filterBar:unlocksFilter"),new hR(0,0,K,this.updateStarters,cR.RADIAL));const Y=[new It(u.t("filterBar:starter"),void 0,nt.OFF),new It(u.t("filterBar:isStarter"),void 0,nt.ON),new It(u.t("filterBar:notStarter"),void 0,nt.EXCLUDE)],v=[new It(u.t("filterBar:favorite"),void 0,nt.OFF),new It(u.t("filterBar:isFavorite"),void 0,nt.ON),new It(u.t("filterBar:notFavorite"),void 0,nt.EXCLUDE)],Z=[new It(u.t("filterBar:ribbon"),void 0,nt.OFF),new It(u.t("filterBar:hasWon"),void 0,nt.ON),new It(u.t("filterBar:hasNotWon"),void 0,nt.EXCLUDE)],z=[new It(u.t("filterBar:hiddenAbility"),void 0,nt.OFF),new It(u.t("filterBar:hasHiddenAbility"),void 0,nt.ON),new It(u.t("filterBar:noHiddenAbility"),void 0,nt.EXCLUDE)],q=[new It(u.t("filterBar:egg"),void 0,nt.OFF),new It(u.t("filterBar:eggPurchasable"),void 0,nt.ON)],J=[new It(u.t("filterBar:pokerus"),void 0,nt.OFF),new It(u.t("filterBar:hasPokerus"),void 0,nt.ON)],Ae=[new vt("STARTER",Y),new vt("FAVORITE",v),new vt("WIN",Z),new vt("HIDDEN_ABILITY",z),new vt("EGG",q),new vt("POKERUS",J)];this.filterBar.addFilter(rA.MISC,u.t("filterBar:miscFilter"),new hR(0,0,Ae,this.updateStarters,cR.RADIAL));const Q=[new vt(RE.NUMBER,new It(u.t("filterBar:sortByNumber"),void 0,nt.ON)),new vt(RE.COST,new It(u.t("filterBar:sortByCost"))),new vt(RE.CANDY,new It(u.t("filterBar:sortByCandies"))),new vt(RE.IV,new It(u.t("filterBar:sortByIVs"))),new vt(RE.NAME,new It(u.t("filterBar:sortByName"))),new vt(RE.CAUGHT,new It(u.t("filterBar:sortByNumCaught"))),new vt(RE.HATCHED,new It(u.t("filterBar:sortByNumHatched")))];this.filterBar.addFilter(rA.SORT,u.t("filterBar:sortFilter"),new hR(0,0,Q,this.updateStarters,cR.SINGLE)),this.filterBarContainer.add(this.filterBar),this.starterSelectContainer.add(this.filterBarContainer),this.filterBar.offsetHybridFilters(),a.uiTheme||r.setVisible(!1),this.iconAnimHandler=new II,this.iconAnimHandler.setup(),this.pokemonNumberText=Se(6,141,"",k.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=Se(6,128,"",k.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonFormText=Se(6,121,"",k.PARTY,{fontSize:n.instructionTextSize}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText);const Re=a.add.container(fl+6,9);this.starterSelectScrollBar=new mn(161,12,5,r.height-6,9),Re.add(this.starterSelectScrollBar),this.pokerusCursorObjs=new Array(Pf).fill(null).map(()=>{const ie=a.add.image(0,0,"select_cursor_pokerus");return ie.setVisible(!1),ie.setOrigin(0,0),Re.add(ie),ie}),this.cursorObj=a.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),Re.add(this.cursorObj);for(const ie of qA)this.speciesLoaded.set(ie.speciesId,!1),this.allSpecies.push(ie);for(let ie=0;ie<81;ie++){const Be=new ku(this.allSpecies[ie]).setVisible(!1),he=hc(ie);Be.setPosition(he.x,he.y),this.iconAnimHandler.addOrUpdate(Be.icon,ss.NONE),this.pokemonContainers.push(Be),Re.add(Be)}this.formTrayContainer=a.add.container(0,0),this.trayBg=Gt(0,0,0,0),this.trayBg.setOrigin(0,0),this.formTrayContainer.add(this.trayBg),this.trayCursorObj=a.add.image(0,0,"select_cursor"),this.trayCursorObj.setOrigin(0,0),this.formTrayContainer.add(this.trayCursorObj),Re.add(this.formTrayContainer),Re.bringToTop(this.formTrayContainer),this.formTrayContainer.setVisible(!1),this.starterSelectContainer.add(Re),this.pokemonSprite=a.add.sprite(96,143,"pkmn__sub"),this.pokemonSprite.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=a.add.sprite(10,158,Ds("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=a.add.sprite(28,158,Ds("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.starterSelectMessageBoxContainer=a.add.container(0,a.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=Gt(1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox);const W=n.instructionTextSize;this.goFilterIconElement1=new Phaser.GameObjects.Sprite(a,10,2,"keyboard","C.png"),this.goFilterIconElement1.setName("sprite-goFilter1-icon-element"),this.goFilterIconElement1.setScale(.675),this.goFilterIconElement1.setOrigin(0,0),this.goFilterIconElement2=new Phaser.GameObjects.Sprite(a,20,2,"keyboard","V.png"),this.goFilterIconElement2.setName("sprite-goFilter2-icon-element"),this.goFilterIconElement2.setScale(.675),this.goFilterIconElement2.setOrigin(0,0),this.goFilterLabel=Se(30,2,u.t("pokedexUiHandler:goFilters"),k.PARTY,{fontSize:W}),this.goFilterLabel.setName("text-goFilter-label"),this.starterSelectContainer.add(this.goFilterIconElement1),this.starterSelectContainer.add(this.goFilterIconElement2),this.starterSelectContainer.add(this.goFilterLabel),this.toggleDecorationsIconElement=new Phaser.GameObjects.Sprite(a,10,10,"keyboard","R.png"),this.toggleDecorationsIconElement.setName("sprite-toggleDecorations-icon-element"),this.toggleDecorationsIconElement.setScale(.675),this.toggleDecorationsIconElement.setOrigin(0,0),this.toggleDecorationsLabel=Se(20,10,u.t("pokedexUiHandler:toggleDecorations"),k.PARTY,{fontSize:W}),this.toggleDecorationsLabel.setName("text-toggleDecorations-label"),this.starterSelectContainer.add(this.toggleDecorationsIconElement),this.starterSelectContainer.add(this.toggleDecorationsLabel),this.showFormTrayIconElement=new Phaser.GameObjects.Sprite(a,6,168,"keyboard","F.png"),this.showFormTrayIconElement.setName("sprite-showFormTray-icon-element"),this.showFormTrayIconElement.setScale(.675),this.showFormTrayIconElement.setOrigin(0,0),this.showFormTrayLabel=Se(16,168,u.t("pokedexUiHandler:showForms"),k.PARTY,{fontSize:W}),this.showFormTrayLabel.setName("text-showFormTray-label"),this.showFormTrayIconElement.setVisible(!1),this.showFormTrayLabel.setVisible(!1),this.starterSelectContainer.add(this.showFormTrayIconElement),this.starterSelectContainer.add(this.showFormTrayLabel),this.message=Se(8,8,"",k.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.starterSelectContainer.bringToTop(this.filterBarContainer),this.initTutorialOverlay(this.starterSelectContainer),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),this.starterSelectContainer.bringToTop(this.pokemonNameText),this.starterSelectContainer.bringToTop(this.pokemonFormText)}show(A){return this.starterPreferences||(this.starterPreferences=O7()),this.pokerusSpecies=i7(),A.length>=1&&A[0]==="refresh"?!1:(super.show(A),this.starterSelectContainer.setVisible(!0),this.getUi().bringToTop(this.starterSelectContainer),this.pokemonContainers.forEach(s=>{const R=s.icon,n=s.species;this.starterPreferences[n.speciesId]=this.initStarterPrefs(n),this.setUpgradeAnimation(R,n)}),this.resetFilters(),this.updateStarters(),this.setFilterMode(!1),this.filterBarCursor=0,this.setFilterTextMode(!1),this.filterTextCursor=0,this.setCursor(0),this.filterTextContainer.setVisible(!0),!0)}initStarterPrefs(A){var l;const s=this.starterPreferences[A.speciesId],R=a.gameData.dexData[A.speciesId],n=a.gameData.starterData[A.speciesId];if(!s||!R.caughtAttr)return{};const I=R.caughtAttr&A.getFullUnlocksData(),r=I&de.SHINY,L=I&de.NON_SHINY;if(s.shiny&&!r?(s.shiny=void 0,s.variant=void 0):s.shiny===!1&&!L&&(s.shiny=void 0),s.variant!==void 0){const C=[r&&I&de.DEFAULT_VARIANT,r&&I&de.VARIANT_2,r&&I&de.VARIANT_3];(Number.isNaN(s.variant)||s.variant<0||!C[s.variant])&&(s.variant=void 0)}if(s.female!==void 0&&((s.female?I&de.FEMALE:I&de.MALE)||(s.female=void 0)),s.ability!==void 0){const C=A.ability2===A.ability1,U=n.abilityAttr,D=U&hE.ABILITY_1,M=U&hE.ABILITY_2,h=U&hE.ABILITY_HIDDEN;[D,C?M&&!D:M,h][s.ability]||(s.ability=void 0)}const N=s.form;return N!==void 0&&(!((l=A.forms[N])!=null&&l.isStarterSelectable)||!(I&a.gameData.getFormAttr(N)))&&(s.form=void 0),s.nature!==void 0&&a.gameData.getNaturesForAttr(R.natureAttr).indexOf(s.nature)<0&&(s.nature=void 0),s}resetFilters(){this.filterBar.setValsToDefault(),this.filterText.setValsToDefault()}showText(A,s,R,n,I,r,L){super.showText(A,s,R,n,I,r);const N=(A==null?void 0:A.indexOf(`
`))===-1;this.starterSelectMessageBox.setSize(318,N?28:42),L?(this.starterSelectMessageBox.setOrigin(0,0),this.starterSelectMessageBoxContainer.setY(0),this.message.setY(4)):(this.starterSelectMessageBoxContainer.setY(a.game.canvas.height/6),this.starterSelectMessageBox.setOrigin(0,1),this.message.setY(N?-22:-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isSeen(A,s){if(s!=null&&s.seenAttr)return!0;const R=a.gameData.dexData[this.getStarterSpeciesId(A.speciesId)];return!!(R!=null&&R.caughtAttr)}isUpgradeIconEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===1}getStarterSpeciesId(A){return tA.hasOwnProperty(A)?A:Rl[A]}isPassiveAvailable(A){const s=a.gameData.starterData[this.getStarterSpeciesId(A)];return s.candyCount>=jT(tA[this.getStarterSpeciesId(A)])&&!(s.passiveAttr&Hs.UNLOCKED)}isValueReductionAvailable(A){const s=a.gameData.starterData[this.getStarterSpeciesId(A)];return s.candyCount>=qT(tA[this.getStarterSpeciesId(A)])[s.valueReduction]&&s.valueReduction<AJ}isSameSpeciesEggAvailable(A){return a.gameData.starterData[this.getStarterSpeciesId(A)].candyCount>=eS(tA[this.getStarterSpeciesId(A)])}setUpgradeAnimation(A,s,R=!1){if(a.tweens.killTweensOf(A),a.candyUpgradeDisplay===0||s.speciesId!==s.getRootSpeciesId(!1))return;A.y=2;const n={targets:A,loop:-1,delay:uf(0,50)*5,loopDelay:1e3,tweens:[{targets:A,y:-3,duration:Ot(125),ease:"Cubic.easeOut",yoyo:!0},{targets:A,y:-1,duration:Ot(150),ease:"Cubic.easeOut",yoyo:!0}]},I=this.isPassiveAvailable(s.speciesId),r=this.isValueReductionAvailable(s.speciesId),L=this.isSameSpeciesEggAvailable(s.speciesId);a.candyUpgradeNotification===1?I&&(a.tweens.chain(n).paused=R):a.candyUpgradeNotification===2&&(I||r||L)&&(a.tweens.chain(n).paused=R)}setUpgradeIcon(A){const s=A.species,R=!!(s!=null&&s.speciesId);if(!s||a.candyUpgradeNotification===0||s.speciesId!==s.getRootSpeciesId(!1)){A.candyUpgradeIcon.setVisible(!1),A.candyUpgradeOverlayIcon.setVisible(!1);return}const n=this.isPassiveAvailable(s.speciesId),I=this.isValueReductionAvailable(s.speciesId),r=this.isSameSpeciesEggAvailable(s.speciesId);a.candyUpgradeNotification===1?(A.candyUpgradeIcon.setVisible(R&&n),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible)):a.candyUpgradeNotification===2&&(A.candyUpgradeIcon.setVisible(R&&(n||I||r)),A.candyUpgradeOverlayIcon.setVisible(R&&A.candyUpgradeIcon.visible))}updateCandyUpgradeDisplay(A){this.isUpgradeIconEnabled()&&this.setUpgradeIcon(A),this.isUpgradeAnimationEnabled()&&this.setUpgradeAnimation(A.icon,this.lastSpecies,!0)}processInput(A){if(this.blockInput)return!1;const s=9,R=this.filteredPokemonData.length,n=Math.ceil(R/s),I=this.scrollCursor*s,r=Math.floor((I+this.cursor)/s),L=this.getUi();let N=!1,l=!1;if(A===X.SUBMIT)l=!0;else if(A===X.CANCEL)this.filterMode&&this.filterBar.openDropDown?(this.filterBar.toggleDropDown(this.filterBarCursor),N=!0):this.filterMode&&!this.filterBar.getFilter(this.filterBarCursor).hasDefaultValues()?(this.filterBar.resetSelection(this.filterBarCursor),this.updateStarters(),N=!0):this.filterTextMode&&this.filterText.getValue(this.filterTextCursor)!==this.filterText.defaultText?(this.filterText.resetSelection(this.filterTextCursor),N=!0):this.showingTray?N=this.closeFormTray():(this.tryExit(),N=!0);else if(A===X.STATS)!this.filterMode&&!this.showingTray?(this.cursorObj.setVisible(!1),this.setSpecies(null),this.filterText.cursorObj.setVisible(!1),this.filterTextMode=!1,this.filterBarCursor=0,this.setFilterMode(!0)):l=!0;else if(A===X.CYCLE_TERA)!this.filterTextMode&&!this.showingTray?(this.cursorObj.setVisible(!1),this.setSpecies(null),this.filterBar.cursorObj.setVisible(!1),this.filterMode=!1,this.filterTextCursor=0,this.setFilterTextMode(!0)):l=!0;else if(A===X.CYCLE_SHINY)this.showingTray?l=!0:(this.showDecorations=!this.showDecorations,this.updateScroll(),N=!0);else if(this.filterMode)switch(A){case X.LEFT:this.filterBarCursor>0?N=this.setCursor(this.filterBarCursor-1):N=this.setCursor(this.filterBar.numFilters-1);break;case X.RIGHT:this.filterBarCursor<this.filterBar.numFilters-1?N=this.setCursor(this.filterBarCursor+1):N=this.setCursor(0);break;case X.UP:if(this.filterBar.openDropDown)N=this.filterBar.decDropDownCursor();else if(R>0){this.setFilterMode(!1),this.scrollCursor=Math.max(0,n-9),this.updateScroll();const C=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),U=Math.min(8,C<.5?Math.floor(C*8):Math.ceil(C*8));R%9>U?this.setCursor(R-R%9+U-this.scrollCursor*9):this.setCursor(Math.max(R-R%9+U-9-this.scrollCursor*9,0)),N=!0}break;case X.DOWN:if(this.filterBar.openDropDown)N=this.filterBar.incDropDownCursor();else if(R>0){this.setFilterMode(!1),this.scrollCursor=0,this.updateScroll();const C=this.filterBarCursor/Math.max(1,this.filterBar.numFilters-1),U=Math.min(8,C<.5?Math.floor(C*8):Math.ceil(C*8));this.setCursor(Math.min(U,R-1)),N=!0}break;case X.ACTION:this.filterBar.openDropDown?this.filterBar.toggleOptionState():this.filterBar.toggleDropDown(this.filterBarCursor),N=!0;break}else if(this.filterTextMode)switch(A){case X.LEFT:if(R>0){this.setFilterTextMode(!1);const C=this.filterTextCursor;this.setCursor(C<n-1?(C+1)*s-1:R-1),N=!0}break;case X.RIGHT:if(R>0){this.setFilterTextMode(!1);const C=this.filterTextCursor;this.setCursor(C<n?C*s:(n-1)*s),N=!0}break;case X.UP:this.filterTextCursor>0?N=this.setCursor(this.filterTextCursor-1):N=this.setCursor(this.filterText.numFilters-1);break;case X.DOWN:this.filterTextCursor<this.filterText.numFilters-1?N=this.setCursor(this.filterTextCursor+1):N=this.setCursor(0);break;case X.ACTION:this.filterText.startSearch(this.filterTextCursor,this.getUi()),N=!0;break}else if(this.showingTray)if(A===X.ACTION){const C=this.trayForms[this.trayCursor].formIndex;L.setOverlayMode(te.POKEDEX_PAGE,this.lastSpecies,{form:C},this.filteredIndices),N=!0}else{const C=this.trayContainers.length,U=Math.ceil(C/s),D=Math.floor(this.trayCursor/s);switch(A){case X.UP:if(D>0)N=this.setTrayCursor(this.trayCursor-9);else{const M=this.trayCursor;C%9>M?N=this.setTrayCursor(C-C%9+M):N=this.setTrayCursor(Math.max(C-C%9+M-9,0))}break;case X.DOWN:D<U-1?N=this.setTrayCursor(this.trayCursor+9):N=this.setTrayCursor(this.trayCursor%9);break;case X.LEFT:this.trayCursor%9!==0?N=this.setTrayCursor(this.trayCursor-1):N=this.setTrayCursor(D<U-1?(D+1)*s-1:C-1);break;case X.RIGHT:this.trayCursor%9<(D<U-1?8:(C-1)%9)?N=this.setTrayCursor(this.trayCursor+1):N=this.setTrayCursor(D*9);break;case X.CYCLE_FORM:N=this.closeFormTray();break}}else if(A===X.ACTION)L.setOverlayMode(te.POKEDEX_PAGE,this.lastSpecies,null,this.filteredIndices),N=!0;else switch(A){case X.UP:r>0?this.scrollCursor>0&&r-this.scrollCursor===0?(this.scrollCursor--,this.updateScroll(),N=this.setCursor(this.cursor)):N=this.setCursor(this.cursor-9):(this.filterBarCursor=this.filterBar.getNearestFilter(this.pokemonContainers[this.cursor]),this.setFilterMode(!0),N=!0);break;case X.DOWN:r<n-1&&this.cursor+9<this.filteredPokemonData.length?r-this.scrollCursor===8?(this.scrollCursor++,this.updateScroll(),N=this.setCursor(this.cursor)):N=this.setCursor(this.cursor+9):n>1?(this.scrollCursor=0,this.updateScroll(),N=this.setCursor(this.cursor%9)):(this.filterBarCursor=this.filterBar.getNearestFilter(this.pokemonContainers[this.cursor]),this.setFilterMode(!0),N=!0);break;case X.LEFT:this.cursor%9!==0?N=this.setCursor(this.cursor-1):(this.filterTextCursor=this.filterText.getNearestFilter(this.pokemonContainers[this.cursor]),this.setFilterTextMode(!0),N=!0);break;case X.RIGHT:this.cursor%9<(r<n-1?8:(R-1)%9)?N=this.setCursor(this.cursor+1):(this.filterTextCursor=this.filterText.getNearestFilter(this.pokemonContainers[this.cursor]),this.setFilterTextMode(!0),N=!0);break;case X.CYCLE_FORM:{const C=this.pokemonContainers[this.cursor].species;this.canShowFormTray&&(N=this.openFormTray(C));break}}return N?L.playSelect():l&&L.playError(),N||l}updateButtonIcon(A,s,R,n){var r;let I;if(s==="touch")switch(s="keyboard",A){case ot.Button_Cycle_Shiny:I="R.png";break;case ot.Button_Cycle_Form:I="F.png";break;case ot.Button_Stats:I="C.png";break}else I=(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(A);R.setTexture(s,I),R.setVisible(!0),n.setVisible(!0)}updateFilterButtonIcon(A,s,R,n){var r;let I;s==="touch"?(s="keyboard",I="C.png"):I=(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(A),R.setTexture(s,I),R.setVisible(!0),n.setVisible(!0)}getSanitizedProps(A){return{shiny:!1,female:A.female,variant:0,formIndex:A.formIndex}}hasFormLevelMove(A,s){return!iR.hasOwnProperty(A.speciesId)||!iR[A.speciesId].hasOwnProperty(A.formIndex)?!1:iR[A.speciesId][A.formIndex].map(n=>Ve[n[1]].name).includes(s)}setCursor(A){var R;let s=!1;if(this.oldCursor=this.cursor,this.filterMode)s=this.filterBarCursor!==A,this.filterBarCursor=A,this.filterBar.setCursor(A);else if(this.filterTextMode)s=this.filterTextCursor!==A,this.filterTextCursor=A,this.filterText.setCursor(A);else{A=Math.max(Math.min(this.pokemonContainers.length-1,A),0),s=super.setCursor(A);const n=hc(A);this.cursorObj.setPosition(n.x-1,n.y+1);const I=(R=this.pokemonContainers[A])==null?void 0:R.species;if(I)return this.setSpecies(I),!0}return s}setFilterMode(A){return this.cursorObj.setVisible(!A),this.filterBar.cursorObj.setVisible(A),this.pokemonSprite.setVisible(!1),this.showFormTrayIconElement.setVisible(!1),this.showFormTrayLabel.setVisible(!1),A!==this.filterMode?(this.filterMode=A,this.setCursor(A?this.filterBarCursor:this.cursor),A&&this.setSpecies(null),!0):!1}setFilterTextMode(A){return this.cursorObj.setVisible(!A),this.filterText.cursorObj.setVisible(A),this.pokemonSprite.setVisible(!1),this.showFormTrayIconElement.setVisible(!1),this.showFormTrayLabel.setVisible(!1),A!==this.filterTextMode?(this.filterTextMode=A,this.setCursor(A?this.filterTextCursor:this.cursor),A&&this.setSpecies(null),!0):!1}openFormTray(A){this.trayForms=A.forms.filter(_=>!_.isUnobtainable),this.trayNumIcons=this.trayForms.length,this.trayRows=Math.floor(this.trayNumIcons/9)+(this.trayNumIcons%9===0?0:1),this.trayColumns=Math.min(this.trayNumIcons,9);const s=9,R=this.cursor,n=Math.floor(R/s),I=R-n*9,r=8-n,L=9-I,N=hc(this.cursor),l=this.trayRows<=r-1?0:1,C=this.trayColumns<=L?0:1;this.trayBg.setSize(13+this.trayColumns*17,8+this.trayRows*18),this.formTrayContainer.setX((C?N.x-18*(this.trayColumns-L):N.x)-3),this.formTrayContainer.setY(l?N.y-this.trayBg.height:N.y+17);const U=a.gameData.dexData[A.speciesId],D=this.getCurrentDexProps(A.speciesId),M=this.getSanitizedProps(a.gameData.getSpeciesDexAttrProps(this.lastSpecies,D));this.trayContainers=[];const h=this.isSeen(A,U);return this.trayForms.map((_,d)=>{const f=U?(U.caughtAttr&A.getFullUnlocksData()&a.gameData.getFormAttr(_.formIndex??0))>0n:!1,H=new ku(A,{formIndex:_.formIndex,female:M.female,shiny:M.shiny,variant:M.variant});this.iconAnimHandler.addOrUpdate(H.icon,ss.NONE),f||a.dexForDevs?H.icon.clearTint():h?H.icon.setTint(8421504):H.icon.setTint(0),H.setPosition(5+d%9*18,4+Math.floor(d/9)*17),this.formTrayContainer.add(H),this.trayContainers.push(H)}),this.showingTray=!0,this.setTrayCursor(0),this.formTrayContainer.setVisible(!0),this.showFormTrayIconElement.setVisible(!1),this.showFormTrayLabel.setVisible(!1),!0}closeFormTray(){return this.trayContainers.forEach(A=>{this.formTrayContainer.remove(A,!0)}),this.trayContainers=[],this.formTrayContainer.setVisible(!1),this.showingTray=!1,this.setSpeciesDetails(this.lastSpecies),!0}setTrayCursor(A){if(!this.showingTray)return!1;A=Phaser.Math.Clamp(this.trayContainers.length-1,A,0);const s=this.trayCursor!==A;s&&(this.trayCursor=A),this.trayCursorObj.setPosition(5+A%9*18,4+Math.floor(A/9)*17);const R=this.lastSpecies,n=this.trayForms[A].formIndex;return this.setSpeciesDetails(R,{formIndex:n}),s}getFriendship(A){let s=a.gameData.starterData[this.getStarterSpeciesId(A)].friendship;(!s||s===void 0)&&(s=0);const R=nl(tA[A]);return{currentFriendship:s,friendshipCap:R}}startIconAnimation(A){const R=this.pokemonContainers[A].icon;this.isUpgradeAnimationEnabled()&&(a.tweens.getTweensOf(R).forEach(n=>n.pause()),R.x=-2,R.y=2),this.iconAnimHandler.addOrUpdate(R,ss.PASSIVE)}stopIconAnimation(A){const s=this.pokemonContainers[A];if(s){const R=s.icon,n=this.getCurrentDexProps(s.species.speciesId),I=this.getSanitizedProps(a.gameData.getSpeciesDexAttrProps(s.species,n));this.checkIconId(R,s.species,I.female,I.formIndex,I.shiny,I.variant),this.iconAnimHandler.addOrUpdate(R,ss.NONE),a.tweens.getTweensOf(R).forEach(r=>r.resume())}}setSpecies(A){var s,R,n;if(this.speciesStarterDexEntry=A?a.gameData.dexData[A.speciesId]:null,!A&&a.ui.getTooltip().visible&&a.ui.hideTooltip(),this.lastSpecies&&this.stopIconAnimation(this.oldCursor),A&&(this.lastSpecies=A),A&&((s=this.speciesStarterDexEntry)!=null&&s.seenAttr||(R=this.speciesStarterDexEntry)!=null&&R.caughtAttr||a.dexForDevs))if(this.pokemonNumberText.setText(u.t("pokedexUiHandler:pokemonNumber")+ZR(A.speciesId,4)),this.pokemonNameText.setText(A.name),(n=this.speciesStarterDexEntry)!=null&&n.caughtAttr||a.dexForDevs){this.startIconAnimation(this.cursor);const I=ms(A.speciesId,0);this.setTypeIcons(I.type1,I.type2),this.setSpeciesDetails(A,{}),this.pokemonSprite.clearTint(),this.type1Icon.clearTint(),this.type2Icon.clearTint()}else this.type1Icon.setVisible(!0),this.type2Icon.setVisible(!0),this.setSpeciesDetails(A),this.pokemonSprite.setTint(8421504);else this.pokemonNumberText.setText(A?u.t("pokedexUiHandler:pokemonNumber")+ZR(A.speciesId,4):""),this.pokemonNameText.setText(A?"???":""),this.pokemonFormText.setText(""),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),A&&(this.pokemonSprite.setTint(0),this.setSpeciesDetails(A,{}))}setSpeciesDetails(A,s={}){var L,N;let{shiny:R,formIndex:n,female:I,variant:r}=s;if((L=A==null?void 0:A.forms)!=null&&L.find(l=>l.formKey==="female")&&(I!==void 0?n=I?1:0:n!==void 0&&(I=n===1)),this.pokemonSprite.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),A){const l=a.gameData.dexData[A.speciesId],C=l.caughtAttr&a.gameData.dexData[this.getStarterSpeciesId(A.speciesId)].caughtAttr&A.getFullUnlocksData();if(C){const h=this.getSanitizedProps(a.gameData.getSpeciesDexAttrProps(A,this.getCurrentDexProps(A.speciesId)));R===void 0&&(R=h.shiny),n===void 0&&(n=h.formIndex),I===void 0&&(I=h.female),r===void 0&&(r=h.variant)}const U=l?(C&a.gameData.getFormAttr(n??0))>0n:!1,D=this.isSeen(A,l),M=new Pt(!1);if(this.assetLoadCancelled=M,A.loadAssets(I,n,R,r,!0).then(()=>{M.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(I,n,R,r)),this.pokemonSprite.setPipelineData("shiny",R),this.pokemonSprite.setPipelineData("variant",r),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(I,n,R,r)),this.pokemonSprite.setVisible(!0))}),U||a.dexForDevs?this.pokemonSprite.clearTint():D?this.pokemonSprite.setTint(8421504):this.pokemonSprite.setTint(0),U||D||a.dexForDevs?a7.includes(A.speciesId)&&!n?this.pokemonFormText.setText(""):this.pokemonFormText.setText(A.getFormNameToDisplay(n,!1)):this.pokemonFormText.setText(""),U||D||a.dexForDevs){const h=ms(A.speciesId,n??0);this.setTypeIcons(h.type1,h.type2)}else this.setTypeIcons(null,null);((N=A==null?void 0:A.forms)==null?void 0:N.filter(h=>!h.isUnobtainable).length)>1?(this.showingTray||(this.showFormTrayIconElement.setVisible(!0),this.showFormTrayLabel.setVisible(!0)),this.canShowFormTray=!0):(this.showFormTrayIconElement.setVisible(!1),this.showFormTrayLabel.setVisible(!1),this.canShowFormTray=!1)}else this.setTypeIcons(null,null)}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(i[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(i[s].toLowerCase())):this.type2Icon.setVisible(!1)}updateStarterValueLabel(A){const s=A.species.speciesId,R=tA[s],n=a.gameData.getSpeciesStarterValue(this.getStarterSpeciesId(s));A.cost=n;let I=n.toString();I.startsWith("0.")&&(I=I.slice(1)),A.label.setText(I);let r;switch(R-n){case 0:r=k.WINDOW;break;case 1:case .5:r=k.SUMMARY_BLUE;break;default:r=k.SUMMARY_GOLD;break}R-n>0&&(A.label.setColor(this.getTextColor(r)),A.label.setShadowColor(this.getTextColor(r,!0)))}tryExit(){this.blockInput=!0;const A=this.getUi(),s=o(()=>{A.setMode(te.POKEDEX,"refresh"),this.clearText(),this.blockInput=!1},"cancel");return A.showText(u.t("pokedexUiHandler:confirmExit"),null,()=>{A.setModeWithoutClear(te.CONFIRM,()=>{A.setMode(te.POKEDEX,"refresh"),this.clearText(),this.clear(),A.revertMode()},s,null,null,19)}),!0}getCurrentDexProps(A){var I,r,L,N,l,C,U;let s=0n;const R=qA.find(D=>D.speciesId===A),n=a.gameData.dexData[A].caughtAttr&a.gameData.dexData[this.getStarterSpeciesId(A)].caughtAttr&((R==null?void 0:R.getFullUnlocksData())??0n);return(I=this.starterPreferences[A])!=null&&I.female||(n&de.FEMALE)>0n&&(n&de.MALE)===0n?s+=de.FEMALE:s+=de.MALE,(r=this.starterPreferences[A])!=null&&r.shiny||(n&de.SHINY)>0n&&((L=this.starterPreferences[A])==null?void 0:L.shiny)!==!1?(s+=de.SHINY,((N=this.starterPreferences[A])==null?void 0:N.variant)!==void 0?s+=BigInt(Math.pow(2,(l=this.starterPreferences[A])==null?void 0:l.variant))*de.DEFAULT_VARIANT:(n&de.VARIANT_3)>0?s+=de.VARIANT_3:(n&de.VARIANT_2)>0?s+=de.VARIANT_2:s+=de.DEFAULT_VARIANT):(s+=de.NON_SHINY,s+=de.DEFAULT_VARIANT),(C=this.starterPreferences[A])!=null&&C.form?s+=BigInt(Math.pow(2,(U=this.starterPreferences[A])==null?void 0:U.form))*de.DEFAULT_FORM:s+=a.gameData.getFormAttr(a.gameData.getFormIndex(n)),s}destroy(){this.pokemonContainers=[],this.filteredPokemonData=[]}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}clear(){super.clear(),this.cursor=-1,this.oldCursor=-1,a.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1}checkIconId(A,s,R,n,I,r){A.frame.name!==s.getIconId(R,n,I,r)&&(`${s.name}${A.frame.name}${R}${n}${I}${r}`,A.setTexture(s.getIconAtlasKey(n,!1,r)),A.setFrame(s.getIconId(R,n,!1,r)))}};o(SK,"PokedexUiHandler");let gS=SK;function VL(E){throw new Error('Could not dynamically require "'+E+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}o(VL,"commonjsRequire");var _c={exports:{}};/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/var j6;function EJ(){return j6||(j6=1,function(E,A){(function(s){E.exports=s()})(function(){return o(function s(R,n,I){function r(l,C){if(!n[l]){if(!R[l]){var U=typeof VL=="function"&&VL;if(!C&&U)return U(l,!0);if(L)return L(l,!0);var D=new Error("Cannot find module '"+l+"'");throw D.code="MODULE_NOT_FOUND",D}var M=n[l]={exports:{}};R[l][0].call(M.exports,function(h){var _=R[l][1][h];return r(_||h)},M,M.exports,s,R,n,I)}return n[l].exports}o(r,"u");for(var L=typeof VL=="function"&&VL,N=0;N<I.length;N++)r(I[N]);return r},"s")({1:[function(s,R,n){var I=s("./utils"),r=s("./support"),L="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.encode=function(N){for(var l,C,U,D,M,h,_,d=[],f=0,H=N.length,B=H,K=I.getTypeOf(N)!=="string";f<N.length;)B=H-f,U=K?(l=N[f++],C=f<H?N[f++]:0,f<H?N[f++]:0):(l=N.charCodeAt(f++),C=f<H?N.charCodeAt(f++):0,f<H?N.charCodeAt(f++):0),D=l>>2,M=(3&l)<<4|C>>4,h=1<B?(15&C)<<2|U>>6:64,_=2<B?63&U:64,d.push(L.charAt(D)+L.charAt(M)+L.charAt(h)+L.charAt(_));return d.join("")},n.decode=function(N){var l,C,U,D,M,h,_=0,d=0,f="data:";if(N.substr(0,f.length)===f)throw new Error("Invalid base64 input, it looks like a data url.");var H,B=3*(N=N.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(N.charAt(N.length-1)===L.charAt(64)&&B--,N.charAt(N.length-2)===L.charAt(64)&&B--,B%1!=0)throw new Error("Invalid base64 input, bad content length.");for(H=r.uint8array?new Uint8Array(0|B):new Array(0|B);_<N.length;)l=L.indexOf(N.charAt(_++))<<2|(D=L.indexOf(N.charAt(_++)))>>4,C=(15&D)<<4|(M=L.indexOf(N.charAt(_++)))>>2,U=(3&M)<<6|(h=L.indexOf(N.charAt(_++))),H[d++]=l,M!==64&&(H[d++]=C),h!==64&&(H[d++]=U);return H}},{"./support":30,"./utils":32}],2:[function(s,R,n){var I=s("./external"),r=s("./stream/DataWorker"),L=s("./stream/Crc32Probe"),N=s("./stream/DataLengthProbe");function l(C,U,D,M,h){this.compressedSize=C,this.uncompressedSize=U,this.crc32=D,this.compression=M,this.compressedContent=h}o(l,"o"),l.prototype={getContentWorker:o(function(){var C=new r(I.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new N("data_length")),U=this;return C.on("end",function(){if(this.streamInfo.data_length!==U.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),C},"getContentWorker"),getCompressedWorker:o(function(){return new r(I.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)},"getCompressedWorker")},l.createWorkerFrom=function(C,U,D){return C.pipe(new L).pipe(new N("uncompressedSize")).pipe(U.compressWorker(D)).pipe(new N("compressedSize")).withStreamInfo("compression",U)},R.exports=l},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(s,R,n){var I=s("./stream/GenericWorker");n.STORE={magic:"\0\0",compressWorker:o(function(){return new I("STORE compression")},"compressWorker"),uncompressWorker:o(function(){return new I("STORE decompression")},"uncompressWorker")},n.DEFLATE=s("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(s,R,n){var I=s("./utils"),r=function(){for(var L,N=[],l=0;l<256;l++){L=l;for(var C=0;C<8;C++)L=1&L?3988292384^L>>>1:L>>>1;N[l]=L}return N}();R.exports=function(L,N){return L!==void 0&&L.length?I.getTypeOf(L)!=="string"?function(l,C,U,D){var M=r,h=D+U;l^=-1;for(var _=D;_<h;_++)l=l>>>8^M[255&(l^C[_])];return-1^l}(0|N,L,L.length,0):function(l,C,U,D){var M=r,h=D+U;l^=-1;for(var _=D;_<h;_++)l=l>>>8^M[255&(l^C.charCodeAt(_))];return-1^l}(0|N,L,L.length,0):0}},{"./utils":32}],5:[function(s,R,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(s,R,n){var I=null;I=typeof Promise<"u"?Promise:s("lie"),R.exports={Promise:I}},{lie:37}],7:[function(s,R,n){var I=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Uint32Array<"u",r=s("pako"),L=s("./utils"),N=s("./stream/GenericWorker"),l=I?"uint8array":"array";function C(U,D){N.call(this,"FlateWorker/"+U),this._pako=null,this._pakoAction=U,this._pakoOptions=D,this.meta={}}o(C,"h"),n.magic="\b\0",L.inherits(C,N),C.prototype.processChunk=function(U){this.meta=U.meta,this._pako===null&&this._createPako(),this._pako.push(L.transformTo(l,U.data),!1)},C.prototype.flush=function(){N.prototype.flush.call(this),this._pako===null&&this._createPako(),this._pako.push([],!0)},C.prototype.cleanUp=function(){N.prototype.cleanUp.call(this),this._pako=null},C.prototype._createPako=function(){this._pako=new r[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var U=this;this._pako.onData=function(D){U.push({data:D,meta:U.meta})}},n.compressWorker=function(U){return new C("Deflate",U)},n.uncompressWorker=function(){return new C("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(s,R,n){function I(M,h){var _,d="";for(_=0;_<h;_++)d+=String.fromCharCode(255&M),M>>>=8;return d}o(I,"A");function r(M,h,_,d,f,H){var B,K,Y=M.file,v=M.compression,Z=H!==l.utf8encode,z=L.transformTo("string",H(Y.name)),q=L.transformTo("string",l.utf8encode(Y.name)),J=Y.comment,Ae=L.transformTo("string",H(J)),Q=L.transformTo("string",l.utf8encode(J)),Re=q.length!==Y.name.length,W=Q.length!==J.length,ie="",Be="",he="",ve=Y.dir,_e=Y.date,Le={crc32:0,compressedSize:0,uncompressedSize:0};h&&!_||(Le.crc32=M.crc32,Le.compressedSize=M.compressedSize,Le.uncompressedSize=M.uncompressedSize);var Ee=0;h&&(Ee|=8),Z||!Re&&!W||(Ee|=2048);var se=0,Ne=0;ve&&(se|=16),f==="UNIX"?(Ne=798,se|=function(me,st){var Ct=me;return me||(Ct=st?16893:33204),(65535&Ct)<<16}(Y.unixPermissions,ve)):(Ne=20,se|=function(me){return 63&(me||0)}(Y.dosPermissions)),B=_e.getUTCHours(),B<<=6,B|=_e.getUTCMinutes(),B<<=5,B|=_e.getUTCSeconds()/2,K=_e.getUTCFullYear()-1980,K<<=4,K|=_e.getUTCMonth()+1,K<<=5,K|=_e.getUTCDate(),Re&&(Be=I(1,1)+I(C(z),4)+q,ie+="up"+I(Be.length,2)+Be),W&&(he=I(1,1)+I(C(Ae),4)+Q,ie+="uc"+I(he.length,2)+he);var Ue="";return Ue+=`
\0`,Ue+=I(Ee,2),Ue+=v.magic,Ue+=I(B,2),Ue+=I(K,2),Ue+=I(Le.crc32,4),Ue+=I(Le.compressedSize,4),Ue+=I(Le.uncompressedSize,4),Ue+=I(z.length,2),Ue+=I(ie.length,2),{fileRecord:U.LOCAL_FILE_HEADER+Ue+z+ie,dirRecord:U.CENTRAL_FILE_HEADER+I(Ne,2)+Ue+I(Ae.length,2)+"\0\0\0\0"+I(se,4)+I(d,4)+z+ie+Ae}}o(r,"n");var L=s("../utils"),N=s("../stream/GenericWorker"),l=s("../utf8"),C=s("../crc32"),U=s("../signature");function D(M,h,_,d){N.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=h,this.zipPlatform=_,this.encodeFileName=d,this.streamFiles=M,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}o(D,"s"),L.inherits(D,N),D.prototype.push=function(M){var h=M.meta.percent||0,_=this.entriesCount,d=this._sources.length;this.accumulate?this.contentBuffer.push(M):(this.bytesWritten+=M.data.length,N.prototype.push.call(this,{data:M.data,meta:{currentFile:this.currentFile,percent:_?(h+100*(_-d-1))/_:100}}))},D.prototype.openedSource=function(M){this.currentSourceOffset=this.bytesWritten,this.currentFile=M.file.name;var h=this.streamFiles&&!M.file.dir;if(h){var _=r(M,h,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:_.fileRecord,meta:{percent:0}})}else this.accumulate=!0},D.prototype.closedSource=function(M){this.accumulate=!1;var h=this.streamFiles&&!M.file.dir,_=r(M,h,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(_.dirRecord),h)this.push({data:function(d){return U.DATA_DESCRIPTOR+I(d.crc32,4)+I(d.compressedSize,4)+I(d.uncompressedSize,4)}(M),meta:{percent:100}});else for(this.push({data:_.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},D.prototype.flush=function(){for(var M=this.bytesWritten,h=0;h<this.dirRecords.length;h++)this.push({data:this.dirRecords[h],meta:{percent:100}});var _=this.bytesWritten-M,d=function(f,H,B,K,Y){var v=L.transformTo("string",Y(K));return U.CENTRAL_DIRECTORY_END+"\0\0\0\0"+I(f,2)+I(f,2)+I(H,4)+I(B,4)+I(v.length,2)+v}(this.dirRecords.length,_,M,this.zipComment,this.encodeFileName);this.push({data:d,meta:{percent:100}})},D.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},D.prototype.registerPrevious=function(M){this._sources.push(M);var h=this;return M.on("data",function(_){h.processChunk(_)}),M.on("end",function(){h.closedSource(h.previous.streamInfo),h._sources.length?h.prepareNextSource():h.end()}),M.on("error",function(_){h.error(_)}),this},D.prototype.resume=function(){return!!N.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},D.prototype.error=function(M){var h=this._sources;if(!N.prototype.error.call(this,M))return!1;for(var _=0;_<h.length;_++)try{h[_].error(M)}catch{}return!0},D.prototype.lock=function(){N.prototype.lock.call(this);for(var M=this._sources,h=0;h<M.length;h++)M[h].lock()},R.exports=D},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(s,R,n){var I=s("../compressions"),r=s("./ZipFileWorker");n.generateWorker=function(L,N,l){var C=new r(N.streamFiles,l,N.platform,N.encodeFileName),U=0;try{L.forEach(function(D,M){U++;var h=function(H,B){var K=H||B,Y=I[K];if(!Y)throw new Error(K+" is not a valid compression method !");return Y}(M.options.compression,N.compression),_=M.options.compressionOptions||N.compressionOptions||{},d=M.dir,f=M.date;M._compressWorker(h,_).withStreamInfo("file",{name:D,dir:d,date:f,comment:M.comment||"",unixPermissions:M.unixPermissions,dosPermissions:M.dosPermissions}).pipe(C)}),C.entriesCount=U}catch(D){C.error(D)}return C}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(s,R,n){function I(){if(!(this instanceof I))return new I;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var r=new I;for(var L in this)typeof this[L]!="function"&&(r[L]=this[L]);return r}}o(I,"n"),(I.prototype=s("./object")).loadAsync=s("./load"),I.support=s("./support"),I.defaults=s("./defaults"),I.version="3.10.1",I.loadAsync=function(r,L){return new I().loadAsync(r,L)},I.external=s("./external"),R.exports=I},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(s,R,n){var I=s("./utils"),r=s("./external"),L=s("./utf8"),N=s("./zipEntries"),l=s("./stream/Crc32Probe"),C=s("./nodejsUtils");function U(D){return new r.Promise(function(M,h){var _=D.decompressed.getContentWorker().pipe(new l);_.on("error",function(d){h(d)}).on("end",function(){_.streamInfo.crc32!==D.decompressed.crc32?h(new Error("Corrupted zip : CRC32 mismatch")):M()}).resume()})}o(U,"f"),R.exports=function(D,M){var h=this;return M=I.extend(M||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:L.utf8decode}),C.isNode&&C.isStream(D)?r.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):I.prepareContent("the loaded zip file",D,!0,M.optimizedBinaryString,M.base64).then(function(_){var d=new N(M);return d.load(_),d}).then(function(_){var d=[r.Promise.resolve(_)],f=_.files;if(M.checkCRC32)for(var H=0;H<f.length;H++)d.push(U(f[H]));return r.Promise.all(d)}).then(function(_){for(var d=_.shift(),f=d.files,H=0;H<f.length;H++){var B=f[H],K=B.fileNameStr,Y=I.resolve(B.fileNameStr);h.file(Y,B.decompressed,{binary:!0,optimizedBinaryString:!0,date:B.date,dir:B.dir,comment:B.fileCommentStr.length?B.fileCommentStr:null,unixPermissions:B.unixPermissions,dosPermissions:B.dosPermissions,createFolders:M.createFolders}),B.dir||(h.file(Y).unsafeOriginalName=K)}return d.zipComment.length&&(h.comment=d.zipComment),h})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(s,R,n){var I=s("../utils"),r=s("../stream/GenericWorker");function L(N,l){r.call(this,"Nodejs stream input adapter for "+N),this._upstreamEnded=!1,this._bindStream(l)}o(L,"s"),I.inherits(L,r),L.prototype._bindStream=function(N){var l=this;(this._stream=N).pause(),N.on("data",function(C){l.push({data:C,meta:{percent:0}})}).on("error",function(C){l.isPaused?this.generatedError=C:l.error(C)}).on("end",function(){l.isPaused?l._upstreamEnded=!0:l.end()})},L.prototype.pause=function(){return!!r.prototype.pause.call(this)&&(this._stream.pause(),!0)},L.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},R.exports=L},{"../stream/GenericWorker":28,"../utils":32}],13:[function(s,R,n){var I=s("readable-stream").Readable;function r(L,N,l){I.call(this,N),this._helper=L;var C=this;L.on("data",function(U,D){C.push(U)||C._helper.pause(),l&&l(D)}).on("error",function(U){C.emit("error",U)}).on("end",function(){C.push(null)})}o(r,"n"),s("../utils").inherits(r,I),r.prototype._read=function(){this._helper.resume()},R.exports=r},{"../utils":32,"readable-stream":16}],14:[function(s,R,n){R.exports={isNode:typeof Buffer<"u",newBufferFrom:o(function(I,r){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(I,r);if(typeof I=="number")throw new Error('The "data" argument must not be a number');return new Buffer(I,r)},"newBufferFrom"),allocBuffer:o(function(I){if(Buffer.alloc)return Buffer.alloc(I);var r=new Buffer(I);return r.fill(0),r},"allocBuffer"),isBuffer:o(function(I){return Buffer.isBuffer(I)},"isBuffer"),isStream:o(function(I){return I&&typeof I.on=="function"&&typeof I.pause=="function"&&typeof I.resume=="function"},"isStream")}},{}],15:[function(s,R,n){function I(Y,v,Z){var z,q=L.getTypeOf(v),J=L.extend(Z||{},C);J.date=J.date||new Date,J.compression!==null&&(J.compression=J.compression.toUpperCase()),typeof J.unixPermissions=="string"&&(J.unixPermissions=parseInt(J.unixPermissions,8)),J.unixPermissions&&16384&J.unixPermissions&&(J.dir=!0),J.dosPermissions&&16&J.dosPermissions&&(J.dir=!0),J.dir&&(Y=f(Y)),J.createFolders&&(z=d(Y))&&H.call(this,z,!0);var Ae=q==="string"&&J.binary===!1&&J.base64===!1;Z&&Z.binary!==void 0||(J.binary=!Ae),(v instanceof U&&v.uncompressedSize===0||J.dir||!v||v.length===0)&&(J.base64=!1,J.binary=!0,v="",J.compression="STORE",q="string");var Q=null;Q=v instanceof U||v instanceof N?v:h.isNode&&h.isStream(v)?new _(Y,v):L.prepareContent(Y,v,J.binary,J.optimizedBinaryString,J.base64);var Re=new D(Y,Q,J);this.files[Y]=Re}o(I,"s");var r=s("./utf8"),L=s("./utils"),N=s("./stream/GenericWorker"),l=s("./stream/StreamHelper"),C=s("./defaults"),U=s("./compressedObject"),D=s("./zipObject"),M=s("./generate"),h=s("./nodejsUtils"),_=s("./nodejs/NodejsStreamInputAdapter"),d=o(function(Y){Y.slice(-1)==="/"&&(Y=Y.substring(0,Y.length-1));var v=Y.lastIndexOf("/");return 0<v?Y.substring(0,v):""},"_"),f=o(function(Y){return Y.slice(-1)!=="/"&&(Y+="/"),Y},"g"),H=o(function(Y,v){return v=v!==void 0?v:C.createFolders,Y=f(Y),this.files[Y]||I.call(this,Y,null,{dir:!0,createFolders:v}),this.files[Y]},"b");function B(Y){return Object.prototype.toString.call(Y)==="[object RegExp]"}o(B,"h");var K={load:o(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"load"),forEach:o(function(Y){var v,Z,z;for(v in this.files)z=this.files[v],(Z=v.slice(this.root.length,v.length))&&v.slice(0,this.root.length)===this.root&&Y(Z,z)},"forEach"),filter:o(function(Y){var v=[];return this.forEach(function(Z,z){Y(Z,z)&&v.push(z)}),v},"filter"),file:o(function(Y,v,Z){if(arguments.length!==1)return Y=this.root+Y,I.call(this,Y,v,Z),this;if(B(Y)){var z=Y;return this.filter(function(J,Ae){return!Ae.dir&&z.test(J)})}var q=this.files[this.root+Y];return q&&!q.dir?q:null},"file"),folder:o(function(Y){if(!Y)return this;if(B(Y))return this.filter(function(q,J){return J.dir&&Y.test(q)});var v=this.root+Y,Z=H.call(this,v),z=this.clone();return z.root=Z.name,z},"folder"),remove:o(function(Y){Y=this.root+Y;var v=this.files[Y];if(v||(Y.slice(-1)!=="/"&&(Y+="/"),v=this.files[Y]),v&&!v.dir)delete this.files[Y];else for(var Z=this.filter(function(q,J){return J.name.slice(0,Y.length)===Y}),z=0;z<Z.length;z++)delete this.files[Z[z].name];return this},"remove"),generate:o(function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},"generate"),generateInternalStream:o(function(Y){var v,Z={};try{if((Z=L.extend(Y||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:r.utf8encode})).type=Z.type.toLowerCase(),Z.compression=Z.compression.toUpperCase(),Z.type==="binarystring"&&(Z.type="string"),!Z.type)throw new Error("No output type specified.");L.checkSupport(Z.type),Z.platform!=="darwin"&&Z.platform!=="freebsd"&&Z.platform!=="linux"&&Z.platform!=="sunos"||(Z.platform="UNIX"),Z.platform==="win32"&&(Z.platform="DOS");var z=Z.comment||this.comment||"";v=M.generateWorker(this,Z,z)}catch(q){(v=new N("error")).error(q)}return new l(v,Z.type||"string",Z.mimeType)},"generateInternalStream"),generateAsync:o(function(Y,v){return this.generateInternalStream(Y).accumulate(v)},"generateAsync"),generateNodeStream:o(function(Y,v){return(Y=Y||{}).type||(Y.type="nodebuffer"),this.generateInternalStream(Y).toNodejsStream(v)},"generateNodeStream")};R.exports=K},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(s,R,n){R.exports=s("stream")},{stream:void 0}],17:[function(s,R,n){var I=s("./DataReader");function r(L){I.call(this,L);for(var N=0;N<this.data.length;N++)L[N]=255&L[N]}o(r,"i"),s("../utils").inherits(r,I),r.prototype.byteAt=function(L){return this.data[this.zero+L]},r.prototype.lastIndexOfSignature=function(L){for(var N=L.charCodeAt(0),l=L.charCodeAt(1),C=L.charCodeAt(2),U=L.charCodeAt(3),D=this.length-4;0<=D;--D)if(this.data[D]===N&&this.data[D+1]===l&&this.data[D+2]===C&&this.data[D+3]===U)return D-this.zero;return-1},r.prototype.readAndCheckSignature=function(L){var N=L.charCodeAt(0),l=L.charCodeAt(1),C=L.charCodeAt(2),U=L.charCodeAt(3),D=this.readData(4);return N===D[0]&&l===D[1]&&C===D[2]&&U===D[3]},r.prototype.readData=function(L){if(this.checkOffset(L),L===0)return[];var N=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,N},R.exports=r},{"../utils":32,"./DataReader":18}],18:[function(s,R,n){var I=s("../utils");function r(L){this.data=L,this.length=L.length,this.index=0,this.zero=0}o(r,"i"),r.prototype={checkOffset:o(function(L){this.checkIndex(this.index+L)},"checkOffset"),checkIndex:o(function(L){if(this.length<this.zero+L||L<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+L+"). Corrupted zip ?")},"checkIndex"),setIndex:o(function(L){this.checkIndex(L),this.index=L},"setIndex"),skip:o(function(L){this.setIndex(this.index+L)},"skip"),byteAt:o(function(){},"byteAt"),readInt:o(function(L){var N,l=0;for(this.checkOffset(L),N=this.index+L-1;N>=this.index;N--)l=(l<<8)+this.byteAt(N);return this.index+=L,l},"readInt"),readString:o(function(L){return I.transformTo("string",this.readData(L))},"readString"),readData:o(function(){},"readData"),lastIndexOfSignature:o(function(){},"lastIndexOfSignature"),readAndCheckSignature:o(function(){},"readAndCheckSignature"),readDate:o(function(){var L=this.readInt(4);return new Date(Date.UTC(1980+(L>>25&127),(L>>21&15)-1,L>>16&31,L>>11&31,L>>5&63,(31&L)<<1))},"readDate")},R.exports=r},{"../utils":32}],19:[function(s,R,n){var I=s("./Uint8ArrayReader");function r(L){I.call(this,L)}o(r,"i"),s("../utils").inherits(r,I),r.prototype.readData=function(L){this.checkOffset(L);var N=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,N},R.exports=r},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(s,R,n){var I=s("./DataReader");function r(L){I.call(this,L)}o(r,"i"),s("../utils").inherits(r,I),r.prototype.byteAt=function(L){return this.data.charCodeAt(this.zero+L)},r.prototype.lastIndexOfSignature=function(L){return this.data.lastIndexOf(L)-this.zero},r.prototype.readAndCheckSignature=function(L){return L===this.readData(4)},r.prototype.readData=function(L){this.checkOffset(L);var N=this.data.slice(this.zero+this.index,this.zero+this.index+L);return this.index+=L,N},R.exports=r},{"../utils":32,"./DataReader":18}],21:[function(s,R,n){var I=s("./ArrayReader");function r(L){I.call(this,L)}o(r,"i"),s("../utils").inherits(r,I),r.prototype.readData=function(L){if(this.checkOffset(L),L===0)return new Uint8Array(0);var N=this.data.subarray(this.zero+this.index,this.zero+this.index+L);return this.index+=L,N},R.exports=r},{"../utils":32,"./ArrayReader":17}],22:[function(s,R,n){var I=s("../utils"),r=s("../support"),L=s("./ArrayReader"),N=s("./StringReader"),l=s("./NodeBufferReader"),C=s("./Uint8ArrayReader");R.exports=function(U){var D=I.getTypeOf(U);return I.checkSupport(D),D!=="string"||r.uint8array?D==="nodebuffer"?new l(U):r.uint8array?new C(I.transformTo("uint8array",U)):new L(I.transformTo("array",U)):new N(U)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(s,R,n){n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK\x07",n.ZIP64_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\x07\b"},{}],24:[function(s,R,n){var I=s("./GenericWorker"),r=s("../utils");function L(N){I.call(this,"ConvertWorker to "+N),this.destType=N}o(L,"s"),r.inherits(L,I),L.prototype.processChunk=function(N){this.push({data:r.transformTo(this.destType,N.data),meta:N.meta})},R.exports=L},{"../utils":32,"./GenericWorker":28}],25:[function(s,R,n){var I=s("./GenericWorker"),r=s("../crc32");function L(){I.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}o(L,"s"),s("../utils").inherits(L,I),L.prototype.processChunk=function(N){this.streamInfo.crc32=r(N.data,this.streamInfo.crc32||0),this.push(N)},R.exports=L},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(s,R,n){var I=s("../utils"),r=s("./GenericWorker");function L(N){r.call(this,"DataLengthProbe for "+N),this.propName=N,this.withStreamInfo(N,0)}o(L,"s"),I.inherits(L,r),L.prototype.processChunk=function(N){if(N){var l=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=l+N.data.length}r.prototype.processChunk.call(this,N)},R.exports=L},{"../utils":32,"./GenericWorker":28}],27:[function(s,R,n){var I=s("../utils"),r=s("./GenericWorker");function L(N){r.call(this,"DataWorker");var l=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,N.then(function(C){l.dataIsReady=!0,l.data=C,l.max=C&&C.length||0,l.type=I.getTypeOf(C),l.isPaused||l._tickAndRepeat()},function(C){l.error(C)})}o(L,"s"),I.inherits(L,r),L.prototype.cleanUp=function(){r.prototype.cleanUp.call(this),this.data=null},L.prototype.resume=function(){return!!r.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,I.delay(this._tickAndRepeat,[],this)),!0)},L.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(I.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},L.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var N=null,l=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":N=this.data.substring(this.index,l);break;case"uint8array":N=this.data.subarray(this.index,l);break;case"array":case"nodebuffer":N=this.data.slice(this.index,l)}return this.index=l,this.push({data:N,meta:{percent:this.max?this.index/this.max*100:0}})},R.exports=L},{"../utils":32,"./GenericWorker":28}],28:[function(s,R,n){function I(r){this.name=r||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}o(I,"n"),I.prototype={push:o(function(r){this.emit("data",r)},"push"),end:o(function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(r){this.emit("error",r)}return!0},"end"),error:o(function(r){return!this.isFinished&&(this.isPaused?this.generatedError=r:(this.isFinished=!0,this.emit("error",r),this.previous&&this.previous.error(r),this.cleanUp()),!0)},"error"),on:o(function(r,L){return this._listeners[r].push(L),this},"on"),cleanUp:o(function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},"cleanUp"),emit:o(function(r,L){if(this._listeners[r])for(var N=0;N<this._listeners[r].length;N++)this._listeners[r][N].call(this,L)},"emit"),pipe:o(function(r){return r.registerPrevious(this)},"pipe"),registerPrevious:o(function(r){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=r.streamInfo,this.mergeStreamInfo(),this.previous=r;var L=this;return r.on("data",function(N){L.processChunk(N)}),r.on("end",function(){L.end()}),r.on("error",function(N){L.error(N)}),this},"registerPrevious"),pause:o(function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},"pause"),resume:o(function(){if(!this.isPaused||this.isFinished)return!1;var r=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),r=!0),this.previous&&this.previous.resume(),!r},"resume"),flush:o(function(){},"flush"),processChunk:o(function(r){this.push(r)},"processChunk"),withStreamInfo:o(function(r,L){return this.extraStreamInfo[r]=L,this.mergeStreamInfo(),this},"withStreamInfo"),mergeStreamInfo:o(function(){for(var r in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,r)&&(this.streamInfo[r]=this.extraStreamInfo[r])},"mergeStreamInfo"),lock:o(function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},"lock"),toString:o(function(){var r="Worker "+this.name;return this.previous?this.previous+" -> "+r:r},"toString")},R.exports=I},{}],29:[function(s,R,n){var I=s("../utils"),r=s("./ConvertWorker"),L=s("./GenericWorker"),N=s("../base64"),l=s("../support"),C=s("../external"),U=null;if(l.nodestream)try{U=s("../nodejs/NodejsStreamOutputAdapter")}catch{}function D(h,_){return new C.Promise(function(d,f){var H=[],B=h._internalType,K=h._outputType,Y=h._mimeType;h.on("data",function(v,Z){H.push(v),_&&_(Z)}).on("error",function(v){H=[],f(v)}).on("end",function(){try{var v=function(Z,z,q){switch(Z){case"blob":return I.newBlob(I.transformTo("arraybuffer",z),q);case"base64":return N.encode(z);default:return I.transformTo(Z,z)}}(K,function(Z,z){var q,J=0,Ae=null,Q=0;for(q=0;q<z.length;q++)Q+=z[q].length;switch(Z){case"string":return z.join("");case"array":return Array.prototype.concat.apply([],z);case"uint8array":for(Ae=new Uint8Array(Q),q=0;q<z.length;q++)Ae.set(z[q],J),J+=z[q].length;return Ae;case"nodebuffer":return Buffer.concat(z);default:throw new Error("concat : unsupported type '"+Z+"'")}}(B,H),Y);d(v)}catch(Z){f(Z)}H=[]}).resume()})}o(D,"l");function M(h,_,d){var f=_;switch(_){case"blob":case"arraybuffer":f="uint8array";break;case"base64":f="string"}try{this._internalType=f,this._outputType=_,this._mimeType=d,I.checkSupport(f),this._worker=h.pipe(new r(f)),h.lock()}catch(H){this._worker=new L("error"),this._worker.error(H)}}o(M,"f"),M.prototype={accumulate:o(function(h){return D(this,h)},"accumulate"),on:o(function(h,_){var d=this;return h==="data"?this._worker.on(h,function(f){_.call(d,f.data,f.meta)}):this._worker.on(h,function(){I.delay(_,arguments,d)}),this},"on"),resume:o(function(){return I.delay(this._worker.resume,[],this._worker),this},"resume"),pause:o(function(){return this._worker.pause(),this},"pause"),toNodejsStream:o(function(h){if(I.checkSupport("nodestream"),this._outputType!=="nodebuffer")throw new Error(this._outputType+" is not supported by this method");return new U(this,{objectMode:this._outputType!=="nodebuffer"},h)},"toNodejsStream")},R.exports=M},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(s,R,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer=typeof ArrayBuffer<"u"&&typeof Uint8Array<"u",n.nodebuffer=typeof Buffer<"u",n.uint8array=typeof Uint8Array<"u",typeof ArrayBuffer>"u")n.blob=!1;else{var I=new ArrayBuffer(0);try{n.blob=new Blob([I],{type:"application/zip"}).size===0}catch{try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);r.append(I),n.blob=r.getBlob("application/zip").size===0}catch{n.blob=!1}}}try{n.nodestream=!!s("readable-stream").Readable}catch{n.nodestream=!1}},{"readable-stream":16}],31:[function(s,R,n){for(var I=s("./utils"),r=s("./support"),L=s("./nodejsUtils"),N=s("./stream/GenericWorker"),l=new Array(256),C=0;C<256;C++)l[C]=252<=C?6:248<=C?5:240<=C?4:224<=C?3:192<=C?2:1;l[254]=l[254]=1;function U(){N.call(this,"utf-8 decode"),this.leftOver=null}o(U,"a");function D(){N.call(this,"utf-8 encode")}o(D,"l"),n.utf8encode=function(M){return r.nodebuffer?L.newBufferFrom(M,"utf-8"):function(h){var _,d,f,H,B,K=h.length,Y=0;for(H=0;H<K;H++)(64512&(d=h.charCodeAt(H)))==55296&&H+1<K&&(64512&(f=h.charCodeAt(H+1)))==56320&&(d=65536+(d-55296<<10)+(f-56320),H++),Y+=d<128?1:d<2048?2:d<65536?3:4;for(_=r.uint8array?new Uint8Array(Y):new Array(Y),H=B=0;B<Y;H++)(64512&(d=h.charCodeAt(H)))==55296&&H+1<K&&(64512&(f=h.charCodeAt(H+1)))==56320&&(d=65536+(d-55296<<10)+(f-56320),H++),d<128?_[B++]=d:(d<2048?_[B++]=192|d>>>6:(d<65536?_[B++]=224|d>>>12:(_[B++]=240|d>>>18,_[B++]=128|d>>>12&63),_[B++]=128|d>>>6&63),_[B++]=128|63&d);return _}(M)},n.utf8decode=function(M){return r.nodebuffer?I.transformTo("nodebuffer",M).toString("utf-8"):function(h){var _,d,f,H,B=h.length,K=new Array(2*B);for(_=d=0;_<B;)if((f=h[_++])<128)K[d++]=f;else if(4<(H=l[f]))K[d++]=65533,_+=H-1;else{for(f&=H===2?31:H===3?15:7;1<H&&_<B;)f=f<<6|63&h[_++],H--;1<H?K[d++]=65533:f<65536?K[d++]=f:(f-=65536,K[d++]=55296|f>>10&1023,K[d++]=56320|1023&f)}return K.length!==d&&(K.subarray?K=K.subarray(0,d):K.length=d),I.applyFromCharCode(K)}(M=I.transformTo(r.uint8array?"uint8array":"array",M))},I.inherits(U,N),U.prototype.processChunk=function(M){var h=I.transformTo(r.uint8array?"uint8array":"array",M.data);if(this.leftOver&&this.leftOver.length){if(r.uint8array){var _=h;(h=new Uint8Array(_.length+this.leftOver.length)).set(this.leftOver,0),h.set(_,this.leftOver.length)}else h=this.leftOver.concat(h);this.leftOver=null}var d=function(H,B){var K;for((B=B||H.length)>H.length&&(B=H.length),K=B-1;0<=K&&(192&H[K])==128;)K--;return K<0||K===0?B:K+l[H[K]]>B?K:B}(h),f=h;d!==h.length&&(r.uint8array?(f=h.subarray(0,d),this.leftOver=h.subarray(d,h.length)):(f=h.slice(0,d),this.leftOver=h.slice(d,h.length))),this.push({data:n.utf8decode(f),meta:M.meta})},U.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=U,I.inherits(D,N),D.prototype.processChunk=function(M){this.push({data:n.utf8encode(M.data),meta:M.meta})},n.Utf8EncodeWorker=D},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(s,R,n){var I=s("./support"),r=s("./base64"),L=s("./nodejsUtils"),N=s("./external");function l(_){return _}o(l,"n");function C(_,d){for(var f=0;f<_.length;++f)d[f]=255&_.charCodeAt(f);return d}o(C,"l"),s("setimmediate"),n.newBlob=function(_,d){n.checkSupport("blob");try{return new Blob([_],{type:d})}catch{try{var f=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return f.append(_),f.getBlob(d)}catch{throw new Error("Bug : can't construct the Blob.")}}};var U={stringifyByChunk:o(function(_,d,f){var H=[],B=0,K=_.length;if(K<=f)return String.fromCharCode.apply(null,_);for(;B<K;)d==="array"||d==="nodebuffer"?H.push(String.fromCharCode.apply(null,_.slice(B,Math.min(B+f,K)))):H.push(String.fromCharCode.apply(null,_.subarray(B,Math.min(B+f,K)))),B+=f;return H.join("")},"stringifyByChunk"),stringifyByChar:o(function(_){for(var d="",f=0;f<_.length;f++)d+=String.fromCharCode(_[f]);return d},"stringifyByChar"),applyCanBeUsed:{uint8array:function(){try{return I.uint8array&&String.fromCharCode.apply(null,new Uint8Array(1)).length===1}catch{return!1}}(),nodebuffer:function(){try{return I.nodebuffer&&String.fromCharCode.apply(null,L.allocBuffer(1)).length===1}catch{return!1}}()}};function D(_){var d=65536,f=n.getTypeOf(_),H=!0;if(f==="uint8array"?H=U.applyCanBeUsed.uint8array:f==="nodebuffer"&&(H=U.applyCanBeUsed.nodebuffer),H)for(;1<d;)try{return U.stringifyByChunk(_,f,d)}catch{d=Math.floor(d/2)}return U.stringifyByChar(_)}o(D,"s");function M(_,d){for(var f=0;f<_.length;f++)d[f]=_[f];return d}o(M,"f"),n.applyFromCharCode=D;var h={};h.string={string:l,array:o(function(_){return C(_,new Array(_.length))},"array"),arraybuffer:o(function(_){return h.string.uint8array(_).buffer},"arraybuffer"),uint8array:o(function(_){return C(_,new Uint8Array(_.length))},"uint8array"),nodebuffer:o(function(_){return C(_,L.allocBuffer(_.length))},"nodebuffer")},h.array={string:D,array:l,arraybuffer:o(function(_){return new Uint8Array(_).buffer},"arraybuffer"),uint8array:o(function(_){return new Uint8Array(_)},"uint8array"),nodebuffer:o(function(_){return L.newBufferFrom(_)},"nodebuffer")},h.arraybuffer={string:o(function(_){return D(new Uint8Array(_))},"string"),array:o(function(_){return M(new Uint8Array(_),new Array(_.byteLength))},"array"),arraybuffer:l,uint8array:o(function(_){return new Uint8Array(_)},"uint8array"),nodebuffer:o(function(_){return L.newBufferFrom(new Uint8Array(_))},"nodebuffer")},h.uint8array={string:D,array:o(function(_){return M(_,new Array(_.length))},"array"),arraybuffer:o(function(_){return _.buffer},"arraybuffer"),uint8array:l,nodebuffer:o(function(_){return L.newBufferFrom(_)},"nodebuffer")},h.nodebuffer={string:D,array:o(function(_){return M(_,new Array(_.length))},"array"),arraybuffer:o(function(_){return h.nodebuffer.uint8array(_).buffer},"arraybuffer"),uint8array:o(function(_){return M(_,new Uint8Array(_.length))},"uint8array"),nodebuffer:l},n.transformTo=function(_,d){if(d=d||"",!_)return d;n.checkSupport(_);var f=n.getTypeOf(d);return h[f][_](d)},n.resolve=function(_){for(var d=_.split("/"),f=[],H=0;H<d.length;H++){var B=d[H];B==="."||B===""&&H!==0&&H!==d.length-1||(B===".."?f.pop():f.push(B))}return f.join("/")},n.getTypeOf=function(_){return typeof _=="string"?"string":Object.prototype.toString.call(_)==="[object Array]"?"array":I.nodebuffer&&L.isBuffer(_)?"nodebuffer":I.uint8array&&_ instanceof Uint8Array?"uint8array":I.arraybuffer&&_ instanceof ArrayBuffer?"arraybuffer":void 0},n.checkSupport=function(_){if(!I[_.toLowerCase()])throw new Error(_+" is not supported by this platform")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(_){var d,f,H="";for(f=0;f<(_||"").length;f++)H+="\\x"+((d=_.charCodeAt(f))<16?"0":"")+d.toString(16).toUpperCase();return H},n.delay=function(_,d,f){setImmediate(function(){_.apply(f||null,d||[])})},n.inherits=function(_,d){function f(){}o(f,"r"),f.prototype=d.prototype,_.prototype=new f},n.extend=function(){var _,d,f={};for(_=0;_<arguments.length;_++)for(d in arguments[_])Object.prototype.hasOwnProperty.call(arguments[_],d)&&f[d]===void 0&&(f[d]=arguments[_][d]);return f},n.prepareContent=function(_,d,f,H,B){return N.Promise.resolve(d).then(function(K){return I.blob&&(K instanceof Blob||["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(K))!==-1)&&typeof FileReader<"u"?new N.Promise(function(Y,v){var Z=new FileReader;Z.onload=function(z){Y(z.target.result)},Z.onerror=function(z){v(z.target.error)},Z.readAsArrayBuffer(K)}):K}).then(function(K){var Y=n.getTypeOf(K);return Y?(Y==="arraybuffer"?K=n.transformTo("uint8array",K):Y==="string"&&(B?K=r.decode(K):f&&H!==!0&&(K=function(v){return C(v,I.uint8array?new Uint8Array(v.length):new Array(v.length))}(K))),K):N.Promise.reject(new Error("Can't read the data of '"+_+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(s,R,n){var I=s("./reader/readerFor"),r=s("./utils"),L=s("./signature"),N=s("./zipEntry"),l=s("./support");function C(U){this.files=[],this.loadOptions=U}o(C,"h"),C.prototype={checkSignature:o(function(U){if(!this.reader.readAndCheckSignature(U)){this.reader.index-=4;var D=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+r.pretty(D)+", expected "+r.pretty(U)+")")}},"checkSignature"),isSignature:o(function(U,D){var M=this.reader.index;this.reader.setIndex(U);var h=this.reader.readString(4)===D;return this.reader.setIndex(M),h},"isSignature"),readBlockEndOfCentral:o(function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var U=this.reader.readData(this.zipCommentLength),D=l.uint8array?"uint8array":"array",M=r.transformTo(D,U);this.zipComment=this.loadOptions.decodeFileName(M)},"readBlockEndOfCentral"),readBlockZip64EndOfCentral:o(function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var U,D,M,h=this.zip64EndOfCentralSize-44;0<h;)U=this.reader.readInt(2),D=this.reader.readInt(4),M=this.reader.readData(D),this.zip64ExtensibleData[U]={id:U,length:D,value:M}},"readBlockZip64EndOfCentral"),readBlockZip64EndOfCentralLocator:o(function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},"readBlockZip64EndOfCentralLocator"),readLocalFiles:o(function(){var U,D;for(U=0;U<this.files.length;U++)D=this.files[U],this.reader.setIndex(D.localHeaderOffset),this.checkSignature(L.LOCAL_FILE_HEADER),D.readLocalPart(this.reader),D.handleUTF8(),D.processAttributes()},"readLocalFiles"),readCentralDir:o(function(){var U;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(L.CENTRAL_FILE_HEADER);)(U=new N({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(U);if(this.centralDirRecords!==this.files.length&&this.centralDirRecords!==0&&this.files.length===0)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},"readCentralDir"),readEndOfCentral:o(function(){var U=this.reader.lastIndexOfSignature(L.CENTRAL_DIRECTORY_END);if(U<0)throw this.isSignature(0,L.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(U);var D=U;if(this.checkSignature(L.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===r.MAX_VALUE_16BITS||this.diskWithCentralDirStart===r.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===r.MAX_VALUE_16BITS||this.centralDirRecords===r.MAX_VALUE_16BITS||this.centralDirSize===r.MAX_VALUE_32BITS||this.centralDirOffset===r.MAX_VALUE_32BITS){if(this.zip64=!0,(U=this.reader.lastIndexOfSignature(L.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(U),this.checkSignature(L.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,L.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(L.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(L.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var M=this.centralDirOffset+this.centralDirSize;this.zip64&&(M+=20,M+=12+this.zip64EndOfCentralSize);var h=D-M;if(0<h)this.isSignature(D,L.CENTRAL_FILE_HEADER)||(this.reader.zero=h);else if(h<0)throw new Error("Corrupted zip: missing "+Math.abs(h)+" bytes.")},"readEndOfCentral"),prepareReader:o(function(U){this.reader=I(U)},"prepareReader"),load:o(function(U){this.prepareReader(U),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()},"load")},R.exports=C},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(s,R,n){var I=s("./reader/readerFor"),r=s("./utils"),L=s("./compressedObject"),N=s("./crc32"),l=s("./utf8"),C=s("./compressions"),U=s("./support");function D(M,h){this.options=M,this.loadOptions=h}o(D,"l"),D.prototype={isEncrypted:o(function(){return(1&this.bitFlag)==1},"isEncrypted"),useUTF8:o(function(){return(2048&this.bitFlag)==2048},"useUTF8"),readLocalPart:o(function(M){var h,_;if(M.skip(22),this.fileNameLength=M.readInt(2),_=M.readInt(2),this.fileName=M.readData(this.fileNameLength),M.skip(_),this.compressedSize===-1||this.uncompressedSize===-1)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if((h=function(d){for(var f in C)if(Object.prototype.hasOwnProperty.call(C,f)&&C[f].magic===d)return C[f];return null}(this.compressionMethod))===null)throw new Error("Corrupted zip : compression "+r.pretty(this.compressionMethod)+" unknown (inner file : "+r.transformTo("string",this.fileName)+")");this.decompressed=new L(this.compressedSize,this.uncompressedSize,this.crc32,h,M.readData(this.compressedSize))},"readLocalPart"),readCentralPart:o(function(M){this.versionMadeBy=M.readInt(2),M.skip(2),this.bitFlag=M.readInt(2),this.compressionMethod=M.readString(2),this.date=M.readDate(),this.crc32=M.readInt(4),this.compressedSize=M.readInt(4),this.uncompressedSize=M.readInt(4);var h=M.readInt(2);if(this.extraFieldsLength=M.readInt(2),this.fileCommentLength=M.readInt(2),this.diskNumberStart=M.readInt(2),this.internalFileAttributes=M.readInt(2),this.externalFileAttributes=M.readInt(4),this.localHeaderOffset=M.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");M.skip(h),this.readExtraFields(M),this.parseZIP64ExtraField(M),this.fileComment=M.readData(this.fileCommentLength)},"readCentralPart"),processAttributes:o(function(){this.unixPermissions=null,this.dosPermissions=null;var M=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),M==0&&(this.dosPermissions=63&this.externalFileAttributes),M==3&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||this.fileNameStr.slice(-1)!=="/"||(this.dir=!0)},"processAttributes"),parseZIP64ExtraField:o(function(){if(this.extraFields[1]){var M=I(this.extraFields[1].value);this.uncompressedSize===r.MAX_VALUE_32BITS&&(this.uncompressedSize=M.readInt(8)),this.compressedSize===r.MAX_VALUE_32BITS&&(this.compressedSize=M.readInt(8)),this.localHeaderOffset===r.MAX_VALUE_32BITS&&(this.localHeaderOffset=M.readInt(8)),this.diskNumberStart===r.MAX_VALUE_32BITS&&(this.diskNumberStart=M.readInt(4))}},"parseZIP64ExtraField"),readExtraFields:o(function(M){var h,_,d,f=M.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});M.index+4<f;)h=M.readInt(2),_=M.readInt(2),d=M.readData(_),this.extraFields[h]={id:h,length:_,value:d};M.setIndex(f)},"readExtraFields"),handleUTF8:o(function(){var M=U.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=l.utf8decode(this.fileName),this.fileCommentStr=l.utf8decode(this.fileComment);else{var h=this.findExtraFieldUnicodePath();if(h!==null)this.fileNameStr=h;else{var _=r.transformTo(M,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(_)}var d=this.findExtraFieldUnicodeComment();if(d!==null)this.fileCommentStr=d;else{var f=r.transformTo(M,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(f)}}},"handleUTF8"),findExtraFieldUnicodePath:o(function(){var M=this.extraFields[28789];if(M){var h=I(M.value);return h.readInt(1)!==1||N(this.fileName)!==h.readInt(4)?null:l.utf8decode(h.readData(M.length-5))}return null},"findExtraFieldUnicodePath"),findExtraFieldUnicodeComment:o(function(){var M=this.extraFields[25461];if(M){var h=I(M.value);return h.readInt(1)!==1||N(this.fileComment)!==h.readInt(4)?null:l.utf8decode(h.readData(M.length-5))}return null},"findExtraFieldUnicodeComment")},R.exports=D},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(s,R,n){function I(h,_,d){this.name=h,this.dir=d.dir,this.date=d.date,this.comment=d.comment,this.unixPermissions=d.unixPermissions,this.dosPermissions=d.dosPermissions,this._data=_,this._dataBinary=d.binary,this.options={compression:d.compression,compressionOptions:d.compressionOptions}}o(I,"n");var r=s("./stream/StreamHelper"),L=s("./stream/DataWorker"),N=s("./utf8"),l=s("./compressedObject"),C=s("./stream/GenericWorker");I.prototype={internalStream:o(function(h){var _=null,d="string";try{if(!h)throw new Error("No output type specified.");var f=(d=h.toLowerCase())==="string"||d==="text";d!=="binarystring"&&d!=="text"||(d="string"),_=this._decompressWorker();var H=!this._dataBinary;H&&!f&&(_=_.pipe(new N.Utf8EncodeWorker)),!H&&f&&(_=_.pipe(new N.Utf8DecodeWorker))}catch(B){(_=new C("error")).error(B)}return new r(_,d,"")},"internalStream"),async:o(function(h,_){return this.internalStream(h).accumulate(_)},"async"),nodeStream:o(function(h,_){return this.internalStream(h||"nodebuffer").toNodejsStream(_)},"nodeStream"),_compressWorker:o(function(h,_){if(this._data instanceof l&&this._data.compression.magic===h.magic)return this._data.getCompressedWorker();var d=this._decompressWorker();return this._dataBinary||(d=d.pipe(new N.Utf8EncodeWorker)),l.createWorkerFrom(d,h,_)},"_compressWorker"),_decompressWorker:o(function(){return this._data instanceof l?this._data.getContentWorker():this._data instanceof C?this._data:new L(this._data)},"_decompressWorker")};for(var U=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],D=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},M=0;M<U.length;M++)I.prototype[U[M]]=D;R.exports=I},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(s,R,n){(function(I){var r,L,N=I.MutationObserver||I.WebKitMutationObserver;if(N){var l=0,C=new N(h),U=I.document.createTextNode("");C.observe(U,{characterData:!0}),r=o(function(){U.data=l=++l%2},"r")}else if(I.setImmediate||I.MessageChannel===void 0)r="document"in I&&"onreadystatechange"in I.document.createElement("script")?function(){var _=I.document.createElement("script");_.onreadystatechange=function(){h(),_.onreadystatechange=null,_.parentNode.removeChild(_),_=null},I.document.documentElement.appendChild(_)}:function(){setTimeout(h,0)};else{var D=new I.MessageChannel;D.port1.onmessage=h,r=o(function(){D.port2.postMessage(0)},"r")}var M=[];function h(){var _,d;L=!0;for(var f=M.length;f;){for(d=M,M=[],_=-1;++_<f;)d[_]();f=M.length}L=!1}o(h,"u"),R.exports=function(_){M.push(_)!==1||L||r()}}).call(this,typeof gi<"u"?gi:typeof self<"u"?self:typeof window<"u"?window:{})},{}],37:[function(s,R,n){var I=s("immediate");function r(){}o(r,"u");var L={},N=["REJECTED"],l=["FULFILLED"],C=["PENDING"];function U(f){if(typeof f!="function")throw new TypeError("resolver must be a function");this.state=C,this.queue=[],this.outcome=void 0,f!==r&&_(this,f)}o(U,"o");function D(f,H,B){this.promise=f,typeof H=="function"&&(this.onFulfilled=H,this.callFulfilled=this.otherCallFulfilled),typeof B=="function"&&(this.onRejected=B,this.callRejected=this.otherCallRejected)}o(D,"h");function M(f,H,B){I(function(){var K;try{K=H(B)}catch(Y){return L.reject(f,Y)}K===f?L.reject(f,new TypeError("Cannot resolve promise with itself")):L.resolve(f,K)})}o(M,"f");function h(f){var H=f&&f.then;if(f&&(typeof f=="object"||typeof f=="function")&&typeof H=="function")return function(){H.apply(f,arguments)}}o(h,"c");function _(f,H){var B=!1;function K(Z){B||(B=!0,L.reject(f,Z))}o(K,"n");function Y(Z){B||(B=!0,L.resolve(f,Z))}o(Y,"i");var v=d(function(){H(Y,K)});v.status==="error"&&K(v.value)}o(_,"d");function d(f,H){var B={};try{B.value=f(H),B.status="success"}catch(K){B.status="error",B.value=K}return B}o(d,"p"),(R.exports=U).prototype.finally=function(f){if(typeof f!="function")return this;var H=this.constructor;return this.then(function(B){return H.resolve(f()).then(function(){return B})},function(B){return H.resolve(f()).then(function(){throw B})})},U.prototype.catch=function(f){return this.then(null,f)},U.prototype.then=function(f,H){if(typeof f!="function"&&this.state===l||typeof H!="function"&&this.state===N)return this;var B=new this.constructor(r);return this.state!==C?M(B,this.state===l?f:H,this.outcome):this.queue.push(new D(B,f,H)),B},D.prototype.callFulfilled=function(f){L.resolve(this.promise,f)},D.prototype.otherCallFulfilled=function(f){M(this.promise,this.onFulfilled,f)},D.prototype.callRejected=function(f){L.reject(this.promise,f)},D.prototype.otherCallRejected=function(f){M(this.promise,this.onRejected,f)},L.resolve=function(f,H){var B=d(h,H);if(B.status==="error")return L.reject(f,B.value);var K=B.value;if(K)_(f,K);else{f.state=l,f.outcome=H;for(var Y=-1,v=f.queue.length;++Y<v;)f.queue[Y].callFulfilled(H)}return f},L.reject=function(f,H){f.state=N,f.outcome=H;for(var B=-1,K=f.queue.length;++B<K;)f.queue[B].callRejected(H);return f},U.resolve=function(f){return f instanceof this?f:L.resolve(new this(r),f)},U.reject=function(f){var H=new this(r);return L.reject(H,f)},U.all=function(f){var H=this;if(Object.prototype.toString.call(f)!=="[object Array]")return this.reject(new TypeError("must be an array"));var B=f.length,K=!1;if(!B)return this.resolve([]);for(var Y=new Array(B),v=0,Z=-1,z=new this(r);++Z<B;)q(f[Z],Z);return z;function q(J,Ae){H.resolve(J).then(function(Q){Y[Ae]=Q,++v!==B||K||(K=!0,L.resolve(z,Y))},function(Q){K||(K=!0,L.reject(z,Q))})}},U.race=function(f){var H=this;if(Object.prototype.toString.call(f)!=="[object Array]")return this.reject(new TypeError("must be an array"));var B=f.length,K=!1;if(!B)return this.resolve([]);for(var Y=-1,v=new this(r);++Y<B;)Z=f[Y],H.resolve(Z).then(function(z){K||(K=!0,L.resolve(v,z))},function(z){K||(K=!0,L.reject(v,z))});var Z;return v}},{immediate:36}],38:[function(s,R,n){var I={};(0,s("./lib/utils/common").assign)(I,s("./lib/deflate"),s("./lib/inflate"),s("./lib/zlib/constants")),R.exports=I},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(s,R,n){var I=s("./zlib/deflate"),r=s("./utils/common"),L=s("./utils/strings"),N=s("./zlib/messages"),l=s("./zlib/zstream"),C=Object.prototype.toString,U=0,D=-1,M=0,h=8;function _(f){if(!(this instanceof _))return new _(f);this.options=r.assign({level:D,method:h,chunkSize:16384,windowBits:15,memLevel:8,strategy:M,to:""},f||{});var H=this.options;H.raw&&0<H.windowBits?H.windowBits=-H.windowBits:H.gzip&&0<H.windowBits&&H.windowBits<16&&(H.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var B=I.deflateInit2(this.strm,H.level,H.method,H.windowBits,H.memLevel,H.strategy);if(B!==U)throw new Error(N[B]);if(H.header&&I.deflateSetHeader(this.strm,H.header),H.dictionary){var K;if(K=typeof H.dictionary=="string"?L.string2buf(H.dictionary):C.call(H.dictionary)==="[object ArrayBuffer]"?new Uint8Array(H.dictionary):H.dictionary,(B=I.deflateSetDictionary(this.strm,K))!==U)throw new Error(N[B]);this._dict_set=!0}}o(_,"p");function d(f,H){var B=new _(H);if(B.push(f,!0),B.err)throw B.msg||N[B.err];return B.result}o(d,"n"),_.prototype.push=function(f,H){var B,K,Y=this.strm,v=this.options.chunkSize;if(this.ended)return!1;K=H===~~H?H:H===!0?4:0,typeof f=="string"?Y.input=L.string2buf(f):C.call(f)==="[object ArrayBuffer]"?Y.input=new Uint8Array(f):Y.input=f,Y.next_in=0,Y.avail_in=Y.input.length;do{if(Y.avail_out===0&&(Y.output=new r.Buf8(v),Y.next_out=0,Y.avail_out=v),(B=I.deflate(Y,K))!==1&&B!==U)return this.onEnd(B),!(this.ended=!0);Y.avail_out!==0&&(Y.avail_in!==0||K!==4&&K!==2)||(this.options.to==="string"?this.onData(L.buf2binstring(r.shrinkBuf(Y.output,Y.next_out))):this.onData(r.shrinkBuf(Y.output,Y.next_out)))}while((0<Y.avail_in||Y.avail_out===0)&&B!==1);return K===4?(B=I.deflateEnd(this.strm),this.onEnd(B),this.ended=!0,B===U):K!==2||(this.onEnd(U),!(Y.avail_out=0))},_.prototype.onData=function(f){this.chunks.push(f)},_.prototype.onEnd=function(f){f===U&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=f,this.msg=this.strm.msg},n.Deflate=_,n.deflate=d,n.deflateRaw=function(f,H){return(H=H||{}).raw=!0,d(f,H)},n.gzip=function(f,H){return(H=H||{}).gzip=!0,d(f,H)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(s,R,n){var I=s("./zlib/inflate"),r=s("./utils/common"),L=s("./utils/strings"),N=s("./zlib/constants"),l=s("./zlib/messages"),C=s("./zlib/zstream"),U=s("./zlib/gzheader"),D=Object.prototype.toString;function M(_){if(!(this instanceof M))return new M(_);this.options=r.assign({chunkSize:16384,windowBits:0,to:""},_||{});var d=this.options;d.raw&&0<=d.windowBits&&d.windowBits<16&&(d.windowBits=-d.windowBits,d.windowBits===0&&(d.windowBits=-15)),!(0<=d.windowBits&&d.windowBits<16)||_&&_.windowBits||(d.windowBits+=32),15<d.windowBits&&d.windowBits<48&&(15&d.windowBits)==0&&(d.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new C,this.strm.avail_out=0;var f=I.inflateInit2(this.strm,d.windowBits);if(f!==N.Z_OK)throw new Error(l[f]);this.header=new U,I.inflateGetHeader(this.strm,this.header)}o(M,"a");function h(_,d){var f=new M(d);if(f.push(_,!0),f.err)throw f.msg||l[f.err];return f.result}o(h,"o"),M.prototype.push=function(_,d){var f,H,B,K,Y,v,Z=this.strm,z=this.options.chunkSize,q=this.options.dictionary,J=!1;if(this.ended)return!1;H=d===~~d?d:d===!0?N.Z_FINISH:N.Z_NO_FLUSH,typeof _=="string"?Z.input=L.binstring2buf(_):D.call(_)==="[object ArrayBuffer]"?Z.input=new Uint8Array(_):Z.input=_,Z.next_in=0,Z.avail_in=Z.input.length;do{if(Z.avail_out===0&&(Z.output=new r.Buf8(z),Z.next_out=0,Z.avail_out=z),(f=I.inflate(Z,N.Z_NO_FLUSH))===N.Z_NEED_DICT&&q&&(v=typeof q=="string"?L.string2buf(q):D.call(q)==="[object ArrayBuffer]"?new Uint8Array(q):q,f=I.inflateSetDictionary(this.strm,v)),f===N.Z_BUF_ERROR&&J===!0&&(f=N.Z_OK,J=!1),f!==N.Z_STREAM_END&&f!==N.Z_OK)return this.onEnd(f),!(this.ended=!0);Z.next_out&&(Z.avail_out!==0&&f!==N.Z_STREAM_END&&(Z.avail_in!==0||H!==N.Z_FINISH&&H!==N.Z_SYNC_FLUSH)||(this.options.to==="string"?(B=L.utf8border(Z.output,Z.next_out),K=Z.next_out-B,Y=L.buf2string(Z.output,B),Z.next_out=K,Z.avail_out=z-K,K&&r.arraySet(Z.output,Z.output,B,K,0),this.onData(Y)):this.onData(r.shrinkBuf(Z.output,Z.next_out)))),Z.avail_in===0&&Z.avail_out===0&&(J=!0)}while((0<Z.avail_in||Z.avail_out===0)&&f!==N.Z_STREAM_END);return f===N.Z_STREAM_END&&(H=N.Z_FINISH),H===N.Z_FINISH?(f=I.inflateEnd(this.strm),this.onEnd(f),this.ended=!0,f===N.Z_OK):H!==N.Z_SYNC_FLUSH||(this.onEnd(N.Z_OK),!(Z.avail_out=0))},M.prototype.onData=function(_){this.chunks.push(_)},M.prototype.onEnd=function(_){_===N.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=_,this.msg=this.strm.msg},n.Inflate=M,n.inflate=h,n.inflateRaw=function(_,d){return(d=d||{}).raw=!0,h(_,d)},n.ungzip=h},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(s,R,n){var I=typeof Uint8Array<"u"&&typeof Uint16Array<"u"&&typeof Int32Array<"u";n.assign=function(N){for(var l=Array.prototype.slice.call(arguments,1);l.length;){var C=l.shift();if(C){if(typeof C!="object")throw new TypeError(C+"must be non-object");for(var U in C)C.hasOwnProperty(U)&&(N[U]=C[U])}}return N},n.shrinkBuf=function(N,l){return N.length===l?N:N.subarray?N.subarray(0,l):(N.length=l,N)};var r={arraySet:o(function(N,l,C,U,D){if(l.subarray&&N.subarray)N.set(l.subarray(C,C+U),D);else for(var M=0;M<U;M++)N[D+M]=l[C+M]},"arraySet"),flattenChunks:o(function(N){var l,C,U,D,M,h;for(l=U=0,C=N.length;l<C;l++)U+=N[l].length;for(h=new Uint8Array(U),l=D=0,C=N.length;l<C;l++)M=N[l],h.set(M,D),D+=M.length;return h},"flattenChunks")},L={arraySet:o(function(N,l,C,U,D){for(var M=0;M<U;M++)N[D+M]=l[C+M]},"arraySet"),flattenChunks:o(function(N){return[].concat.apply([],N)},"flattenChunks")};n.setTyped=function(N){N?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,r)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,L))},n.setTyped(I)},{}],42:[function(s,R,n){var I=s("./common"),r=!0,L=!0;try{String.fromCharCode.apply(null,[0])}catch{r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{L=!1}for(var N=new I.Buf8(256),l=0;l<256;l++)N[l]=252<=l?6:248<=l?5:240<=l?4:224<=l?3:192<=l?2:1;function C(U,D){if(D<65537&&(U.subarray&&L||!U.subarray&&r))return String.fromCharCode.apply(null,I.shrinkBuf(U,D));for(var M="",h=0;h<D;h++)M+=String.fromCharCode(U[h]);return M}o(C,"l"),N[254]=N[254]=1,n.string2buf=function(U){var D,M,h,_,d,f=U.length,H=0;for(_=0;_<f;_++)(64512&(M=U.charCodeAt(_)))==55296&&_+1<f&&(64512&(h=U.charCodeAt(_+1)))==56320&&(M=65536+(M-55296<<10)+(h-56320),_++),H+=M<128?1:M<2048?2:M<65536?3:4;for(D=new I.Buf8(H),_=d=0;d<H;_++)(64512&(M=U.charCodeAt(_)))==55296&&_+1<f&&(64512&(h=U.charCodeAt(_+1)))==56320&&(M=65536+(M-55296<<10)+(h-56320),_++),M<128?D[d++]=M:(M<2048?D[d++]=192|M>>>6:(M<65536?D[d++]=224|M>>>12:(D[d++]=240|M>>>18,D[d++]=128|M>>>12&63),D[d++]=128|M>>>6&63),D[d++]=128|63&M);return D},n.buf2binstring=function(U){return C(U,U.length)},n.binstring2buf=function(U){for(var D=new I.Buf8(U.length),M=0,h=D.length;M<h;M++)D[M]=U.charCodeAt(M);return D},n.buf2string=function(U,D){var M,h,_,d,f=D||U.length,H=new Array(2*f);for(M=h=0;M<f;)if((_=U[M++])<128)H[h++]=_;else if(4<(d=N[_]))H[h++]=65533,M+=d-1;else{for(_&=d===2?31:d===3?15:7;1<d&&M<f;)_=_<<6|63&U[M++],d--;1<d?H[h++]=65533:_<65536?H[h++]=_:(_-=65536,H[h++]=55296|_>>10&1023,H[h++]=56320|1023&_)}return C(H,h)},n.utf8border=function(U,D){var M;for((D=D||U.length)>U.length&&(D=U.length),M=D-1;0<=M&&(192&U[M])==128;)M--;return M<0||M===0?D:M+N[U[M]]>D?M:D}},{"./common":41}],43:[function(s,R,n){R.exports=function(I,r,L,N){for(var l=65535&I|0,C=I>>>16&65535|0,U=0;L!==0;){for(L-=U=2e3<L?2e3:L;C=C+(l=l+r[N++]|0)|0,--U;);l%=65521,C%=65521}return l|C<<16|0}},{}],44:[function(s,R,n){R.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(s,R,n){var I=function(){for(var r,L=[],N=0;N<256;N++){r=N;for(var l=0;l<8;l++)r=1&r?3988292384^r>>>1:r>>>1;L[N]=r}return L}();R.exports=function(r,L,N,l){var C=I,U=l+N;r^=-1;for(var D=l;D<U;D++)r=r>>>8^C[255&(r^L[D])];return-1^r}},{}],46:[function(s,R,n){var I,r=s("../utils/common"),L=s("./trees"),N=s("./adler32"),l=s("./crc32"),C=s("./messages"),U=0,D=4,M=0,h=-2,_=-1,d=4,f=2,H=8,B=9,K=286,Y=30,v=19,Z=2*K+1,z=15,q=3,J=258,Ae=J+q+1,Q=42,Re=113,W=1,ie=2,Be=3,he=4;function ve(x,be){return x.msg=C[be],be}o(ve,"R");function _e(x){return(x<<1)-(4<x?9:0)}o(_e,"T");function Le(x){for(var be=x.length;0<=--be;)x[be]=0}o(Le,"D");function Ee(x){var be=x.state,Ye=be.pending;Ye>x.avail_out&&(Ye=x.avail_out),Ye!==0&&(r.arraySet(x.output,be.pending_buf,be.pending_out,Ye,x.next_out),x.next_out+=Ye,be.pending_out+=Ye,x.total_out+=Ye,x.avail_out-=Ye,be.pending-=Ye,be.pending===0&&(be.pending_out=0))}o(Ee,"F");function se(x,be){L._tr_flush_block(x,0<=x.block_start?x.block_start:-1,x.strstart-x.block_start,be),x.block_start=x.strstart,Ee(x.strm)}o(se,"N");function Ne(x,be){x.pending_buf[x.pending++]=be}o(Ne,"U");function Ue(x,be){x.pending_buf[x.pending++]=be>>>8&255,x.pending_buf[x.pending++]=255&be}o(Ue,"P");function me(x,be){var Ye,le,Te=x.max_chain_length,fe=x.strstart,qe=x.prev_length,Je=x.nice_match,pe=x.strstart>x.w_size-Ae?x.strstart-(x.w_size-Ae):0,it=x.window,Bt=x.w_mask,lt=x.prev,xt=x.strstart+J,BA=it[fe+qe-1],NA=it[fe+qe];x.prev_length>=x.good_match&&(Te>>=2),Je>x.lookahead&&(Je=x.lookahead);do if(it[(Ye=be)+qe]===NA&&it[Ye+qe-1]===BA&&it[Ye]===it[fe]&&it[++Ye]===it[fe+1]){fe+=2,Ye++;do;while(it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&it[++fe]===it[++Ye]&&fe<xt);if(le=J-(xt-fe),fe=xt-J,qe<le){if(x.match_start=be,Je<=(qe=le))break;BA=it[fe+qe-1],NA=it[fe+qe]}}while((be=lt[be&Bt])>pe&&--Te!=0);return qe<=x.lookahead?qe:x.lookahead}o(me,"L");function st(x){var be,Ye,le,Te,fe,qe,Je,pe,it,Bt,lt=x.w_size;do{if(Te=x.window_size-x.lookahead-x.strstart,x.strstart>=lt+(lt-Ae)){for(r.arraySet(x.window,x.window,lt,lt,0),x.match_start-=lt,x.strstart-=lt,x.block_start-=lt,be=Ye=x.hash_size;le=x.head[--be],x.head[be]=lt<=le?le-lt:0,--Ye;);for(be=Ye=lt;le=x.prev[--be],x.prev[be]=lt<=le?le-lt:0,--Ye;);Te+=lt}if(x.strm.avail_in===0)break;if(qe=x.strm,Je=x.window,pe=x.strstart+x.lookahead,it=Te,Bt=void 0,Bt=qe.avail_in,it<Bt&&(Bt=it),Ye=Bt===0?0:(qe.avail_in-=Bt,r.arraySet(Je,qe.input,qe.next_in,Bt,pe),qe.state.wrap===1?qe.adler=N(qe.adler,Je,Bt,pe):qe.state.wrap===2&&(qe.adler=l(qe.adler,Je,Bt,pe)),qe.next_in+=Bt,qe.total_in+=Bt,Bt),x.lookahead+=Ye,x.lookahead+x.insert>=q)for(fe=x.strstart-x.insert,x.ins_h=x.window[fe],x.ins_h=(x.ins_h<<x.hash_shift^x.window[fe+1])&x.hash_mask;x.insert&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[fe+q-1])&x.hash_mask,x.prev[fe&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=fe,fe++,x.insert--,!(x.lookahead+x.insert<q)););}while(x.lookahead<Ae&&x.strm.avail_in!==0)}o(st,"j");function Ct(x,be){for(var Ye,le;;){if(x.lookahead<Ae){if(st(x),x.lookahead<Ae&&be===U)return W;if(x.lookahead===0)break}if(Ye=0,x.lookahead>=q&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+q-1])&x.hash_mask,Ye=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),Ye!==0&&x.strstart-Ye<=x.w_size-Ae&&(x.match_length=me(x,Ye)),x.match_length>=q)if(le=L._tr_tally(x,x.strstart-x.match_start,x.match_length-q),x.lookahead-=x.match_length,x.match_length<=x.max_lazy_match&&x.lookahead>=q){for(x.match_length--;x.strstart++,x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+q-1])&x.hash_mask,Ye=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart,--x.match_length!=0;);x.strstart++}else x.strstart+=x.match_length,x.match_length=0,x.ins_h=x.window[x.strstart],x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+1])&x.hash_mask;else le=L._tr_tally(x,0,x.window[x.strstart]),x.lookahead--,x.strstart++;if(le&&(se(x,!1),x.strm.avail_out===0))return W}return x.insert=x.strstart<q-1?x.strstart:q-1,be===D?(se(x,!0),x.strm.avail_out===0?Be:he):x.last_lit&&(se(x,!1),x.strm.avail_out===0)?W:ie}o(Ct,"Z");function tt(x,be){for(var Ye,le,Te;;){if(x.lookahead<Ae){if(st(x),x.lookahead<Ae&&be===U)return W;if(x.lookahead===0)break}if(Ye=0,x.lookahead>=q&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+q-1])&x.hash_mask,Ye=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),x.prev_length=x.match_length,x.prev_match=x.match_start,x.match_length=q-1,Ye!==0&&x.prev_length<x.max_lazy_match&&x.strstart-Ye<=x.w_size-Ae&&(x.match_length=me(x,Ye),x.match_length<=5&&(x.strategy===1||x.match_length===q&&4096<x.strstart-x.match_start)&&(x.match_length=q-1)),x.prev_length>=q&&x.match_length<=x.prev_length){for(Te=x.strstart+x.lookahead-q,le=L._tr_tally(x,x.strstart-1-x.prev_match,x.prev_length-q),x.lookahead-=x.prev_length-1,x.prev_length-=2;++x.strstart<=Te&&(x.ins_h=(x.ins_h<<x.hash_shift^x.window[x.strstart+q-1])&x.hash_mask,Ye=x.prev[x.strstart&x.w_mask]=x.head[x.ins_h],x.head[x.ins_h]=x.strstart),--x.prev_length!=0;);if(x.match_available=0,x.match_length=q-1,x.strstart++,le&&(se(x,!1),x.strm.avail_out===0))return W}else if(x.match_available){if((le=L._tr_tally(x,0,x.window[x.strstart-1]))&&se(x,!1),x.strstart++,x.lookahead--,x.strm.avail_out===0)return W}else x.match_available=1,x.strstart++,x.lookahead--}return x.match_available&&(le=L._tr_tally(x,0,x.window[x.strstart-1]),x.match_available=0),x.insert=x.strstart<q-1?x.strstart:q-1,be===D?(se(x,!0),x.strm.avail_out===0?Be:he):x.last_lit&&(se(x,!1),x.strm.avail_out===0)?W:ie}o(tt,"W");function ft(x,be,Ye,le,Te){this.good_length=x,this.max_lazy=be,this.nice_length=Ye,this.max_chain=le,this.func=Te}o(ft,"M");function Xt(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=H,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(2*Z),this.dyn_dtree=new r.Buf16(2*(2*Y+1)),this.bl_tree=new r.Buf16(2*(2*v+1)),Le(this.dyn_ltree),Le(this.dyn_dtree),Le(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16(z+1),this.heap=new r.Buf16(2*K+1),Le(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(2*K+1),Le(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}o(Xt,"H");function pt(x){var be;return x&&x.state?(x.total_in=x.total_out=0,x.data_type=f,(be=x.state).pending=0,be.pending_out=0,be.wrap<0&&(be.wrap=-be.wrap),be.status=be.wrap?Q:Re,x.adler=be.wrap===2?0:1,be.last_flush=U,L._tr_init(be),M):ve(x,h)}o(pt,"G");function fA(x){var be=pt(x);return be===M&&function(Ye){Ye.window_size=2*Ye.w_size,Le(Ye.head),Ye.max_lazy_match=I[Ye.level].max_lazy,Ye.good_match=I[Ye.level].good_length,Ye.nice_match=I[Ye.level].nice_length,Ye.max_chain_length=I[Ye.level].max_chain,Ye.strstart=0,Ye.block_start=0,Ye.lookahead=0,Ye.insert=0,Ye.match_length=Ye.prev_length=q-1,Ye.match_available=0,Ye.ins_h=0}(x.state),be}o(fA,"K");function cA(x,be,Ye,le,Te,fe){if(!x)return h;var qe=1;if(be===_&&(be=6),le<0?(qe=0,le=-le):15<le&&(qe=2,le-=16),Te<1||B<Te||Ye!==H||le<8||15<le||be<0||9<be||fe<0||d<fe)return ve(x,h);le===8&&(le=9);var Je=new Xt;return(x.state=Je).strm=x,Je.wrap=qe,Je.gzhead=null,Je.w_bits=le,Je.w_size=1<<Je.w_bits,Je.w_mask=Je.w_size-1,Je.hash_bits=Te+7,Je.hash_size=1<<Je.hash_bits,Je.hash_mask=Je.hash_size-1,Je.hash_shift=~~((Je.hash_bits+q-1)/q),Je.window=new r.Buf8(2*Je.w_size),Je.head=new r.Buf16(Je.hash_size),Je.prev=new r.Buf16(Je.w_size),Je.lit_bufsize=1<<Te+6,Je.pending_buf_size=4*Je.lit_bufsize,Je.pending_buf=new r.Buf8(Je.pending_buf_size),Je.d_buf=1*Je.lit_bufsize,Je.l_buf=3*Je.lit_bufsize,Je.level=be,Je.strategy=fe,Je.method=Ye,fA(x)}o(cA,"Y"),I=[new ft(0,0,0,0,function(x,be){var Ye=65535;for(Ye>x.pending_buf_size-5&&(Ye=x.pending_buf_size-5);;){if(x.lookahead<=1){if(st(x),x.lookahead===0&&be===U)return W;if(x.lookahead===0)break}x.strstart+=x.lookahead,x.lookahead=0;var le=x.block_start+Ye;if((x.strstart===0||x.strstart>=le)&&(x.lookahead=x.strstart-le,x.strstart=le,se(x,!1),x.strm.avail_out===0)||x.strstart-x.block_start>=x.w_size-Ae&&(se(x,!1),x.strm.avail_out===0))return W}return x.insert=0,be===D?(se(x,!0),x.strm.avail_out===0?Be:he):(x.strstart>x.block_start&&(se(x,!1),x.strm.avail_out),W)}),new ft(4,4,8,4,Ct),new ft(4,5,16,8,Ct),new ft(4,6,32,32,Ct),new ft(4,4,16,16,tt),new ft(8,16,32,32,tt),new ft(8,16,128,128,tt),new ft(8,32,128,256,tt),new ft(32,128,258,1024,tt),new ft(32,258,258,4096,tt)],n.deflateInit=function(x,be){return cA(x,be,H,15,8,0)},n.deflateInit2=cA,n.deflateReset=fA,n.deflateResetKeep=pt,n.deflateSetHeader=function(x,be){return x&&x.state?x.state.wrap!==2?h:(x.state.gzhead=be,M):h},n.deflate=function(x,be){var Ye,le,Te,fe;if(!x||!x.state||5<be||be<0)return x?ve(x,h):h;if(le=x.state,!x.output||!x.input&&x.avail_in!==0||le.status===666&&be!==D)return ve(x,x.avail_out===0?-5:h);if(le.strm=x,Ye=le.last_flush,le.last_flush=be,le.status===Q)if(le.wrap===2)x.adler=0,Ne(le,31),Ne(le,139),Ne(le,8),le.gzhead?(Ne(le,(le.gzhead.text?1:0)+(le.gzhead.hcrc?2:0)+(le.gzhead.extra?4:0)+(le.gzhead.name?8:0)+(le.gzhead.comment?16:0)),Ne(le,255&le.gzhead.time),Ne(le,le.gzhead.time>>8&255),Ne(le,le.gzhead.time>>16&255),Ne(le,le.gzhead.time>>24&255),Ne(le,le.level===9?2:2<=le.strategy||le.level<2?4:0),Ne(le,255&le.gzhead.os),le.gzhead.extra&&le.gzhead.extra.length&&(Ne(le,255&le.gzhead.extra.length),Ne(le,le.gzhead.extra.length>>8&255)),le.gzhead.hcrc&&(x.adler=l(x.adler,le.pending_buf,le.pending,0)),le.gzindex=0,le.status=69):(Ne(le,0),Ne(le,0),Ne(le,0),Ne(le,0),Ne(le,0),Ne(le,le.level===9?2:2<=le.strategy||le.level<2?4:0),Ne(le,3),le.status=Re);else{var qe=H+(le.w_bits-8<<4)<<8;qe|=(2<=le.strategy||le.level<2?0:le.level<6?1:le.level===6?2:3)<<6,le.strstart!==0&&(qe|=32),qe+=31-qe%31,le.status=Re,Ue(le,qe),le.strstart!==0&&(Ue(le,x.adler>>>16),Ue(le,65535&x.adler)),x.adler=1}if(le.status===69)if(le.gzhead.extra){for(Te=le.pending;le.gzindex<(65535&le.gzhead.extra.length)&&(le.pending!==le.pending_buf_size||(le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),Ee(x),Te=le.pending,le.pending!==le.pending_buf_size));)Ne(le,255&le.gzhead.extra[le.gzindex]),le.gzindex++;le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),le.gzindex===le.gzhead.extra.length&&(le.gzindex=0,le.status=73)}else le.status=73;if(le.status===73)if(le.gzhead.name){Te=le.pending;do{if(le.pending===le.pending_buf_size&&(le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),Ee(x),Te=le.pending,le.pending===le.pending_buf_size)){fe=1;break}fe=le.gzindex<le.gzhead.name.length?255&le.gzhead.name.charCodeAt(le.gzindex++):0,Ne(le,fe)}while(fe!==0);le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),fe===0&&(le.gzindex=0,le.status=91)}else le.status=91;if(le.status===91)if(le.gzhead.comment){Te=le.pending;do{if(le.pending===le.pending_buf_size&&(le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),Ee(x),Te=le.pending,le.pending===le.pending_buf_size)){fe=1;break}fe=le.gzindex<le.gzhead.comment.length?255&le.gzhead.comment.charCodeAt(le.gzindex++):0,Ne(le,fe)}while(fe!==0);le.gzhead.hcrc&&le.pending>Te&&(x.adler=l(x.adler,le.pending_buf,le.pending-Te,Te)),fe===0&&(le.status=103)}else le.status=103;if(le.status===103&&(le.gzhead.hcrc?(le.pending+2>le.pending_buf_size&&Ee(x),le.pending+2<=le.pending_buf_size&&(Ne(le,255&x.adler),Ne(le,x.adler>>8&255),x.adler=0,le.status=Re)):le.status=Re),le.pending!==0){if(Ee(x),x.avail_out===0)return le.last_flush=-1,M}else if(x.avail_in===0&&_e(be)<=_e(Ye)&&be!==D)return ve(x,-5);if(le.status===666&&x.avail_in!==0)return ve(x,-5);if(x.avail_in!==0||le.lookahead!==0||be!==U&&le.status!==666){var Je=le.strategy===2?function(pe,it){for(var Bt;;){if(pe.lookahead===0&&(st(pe),pe.lookahead===0)){if(it===U)return W;break}if(pe.match_length=0,Bt=L._tr_tally(pe,0,pe.window[pe.strstart]),pe.lookahead--,pe.strstart++,Bt&&(se(pe,!1),pe.strm.avail_out===0))return W}return pe.insert=0,it===D?(se(pe,!0),pe.strm.avail_out===0?Be:he):pe.last_lit&&(se(pe,!1),pe.strm.avail_out===0)?W:ie}(le,be):le.strategy===3?function(pe,it){for(var Bt,lt,xt,BA,NA=pe.window;;){if(pe.lookahead<=J){if(st(pe),pe.lookahead<=J&&it===U)return W;if(pe.lookahead===0)break}if(pe.match_length=0,pe.lookahead>=q&&0<pe.strstart&&(lt=NA[xt=pe.strstart-1])===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]){BA=pe.strstart+J;do;while(lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&lt===NA[++xt]&&xt<BA);pe.match_length=J-(BA-xt),pe.match_length>pe.lookahead&&(pe.match_length=pe.lookahead)}if(pe.match_length>=q?(Bt=L._tr_tally(pe,1,pe.match_length-q),pe.lookahead-=pe.match_length,pe.strstart+=pe.match_length,pe.match_length=0):(Bt=L._tr_tally(pe,0,pe.window[pe.strstart]),pe.lookahead--,pe.strstart++),Bt&&(se(pe,!1),pe.strm.avail_out===0))return W}return pe.insert=0,it===D?(se(pe,!0),pe.strm.avail_out===0?Be:he):pe.last_lit&&(se(pe,!1),pe.strm.avail_out===0)?W:ie}(le,be):I[le.level].func(le,be);if(Je!==Be&&Je!==he||(le.status=666),Je===W||Je===Be)return x.avail_out===0&&(le.last_flush=-1),M;if(Je===ie&&(be===1?L._tr_align(le):be!==5&&(L._tr_stored_block(le,0,0,!1),be===3&&(Le(le.head),le.lookahead===0&&(le.strstart=0,le.block_start=0,le.insert=0))),Ee(x),x.avail_out===0))return le.last_flush=-1,M}return be!==D?M:le.wrap<=0?1:(le.wrap===2?(Ne(le,255&x.adler),Ne(le,x.adler>>8&255),Ne(le,x.adler>>16&255),Ne(le,x.adler>>24&255),Ne(le,255&x.total_in),Ne(le,x.total_in>>8&255),Ne(le,x.total_in>>16&255),Ne(le,x.total_in>>24&255)):(Ue(le,x.adler>>>16),Ue(le,65535&x.adler)),Ee(x),0<le.wrap&&(le.wrap=-le.wrap),le.pending!==0?M:1)},n.deflateEnd=function(x){var be;return x&&x.state?(be=x.state.status)!==Q&&be!==69&&be!==73&&be!==91&&be!==103&&be!==Re&&be!==666?ve(x,h):(x.state=null,be===Re?ve(x,-3):M):h},n.deflateSetDictionary=function(x,be){var Ye,le,Te,fe,qe,Je,pe,it,Bt=be.length;if(!x||!x.state||(fe=(Ye=x.state).wrap)===2||fe===1&&Ye.status!==Q||Ye.lookahead)return h;for(fe===1&&(x.adler=N(x.adler,be,Bt,0)),Ye.wrap=0,Bt>=Ye.w_size&&(fe===0&&(Le(Ye.head),Ye.strstart=0,Ye.block_start=0,Ye.insert=0),it=new r.Buf8(Ye.w_size),r.arraySet(it,be,Bt-Ye.w_size,Ye.w_size,0),be=it,Bt=Ye.w_size),qe=x.avail_in,Je=x.next_in,pe=x.input,x.avail_in=Bt,x.next_in=0,x.input=be,st(Ye);Ye.lookahead>=q;){for(le=Ye.strstart,Te=Ye.lookahead-(q-1);Ye.ins_h=(Ye.ins_h<<Ye.hash_shift^Ye.window[le+q-1])&Ye.hash_mask,Ye.prev[le&Ye.w_mask]=Ye.head[Ye.ins_h],Ye.head[Ye.ins_h]=le,le++,--Te;);Ye.strstart=le,Ye.lookahead=q-1,st(Ye)}return Ye.strstart+=Ye.lookahead,Ye.block_start=Ye.strstart,Ye.insert=Ye.lookahead,Ye.lookahead=0,Ye.match_length=Ye.prev_length=q-1,Ye.match_available=0,x.next_in=Je,x.input=pe,x.avail_in=qe,Ye.wrap=fe,M},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(s,R,n){R.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(s,R,n){R.exports=function(I,r){var L,N,l,C,U,D,M,h,_,d,f,H,B,K,Y,v,Z,z,q,J,Ae,Q,Re,W,ie;L=I.state,N=I.next_in,W=I.input,l=N+(I.avail_in-5),C=I.next_out,ie=I.output,U=C-(r-I.avail_out),D=C+(I.avail_out-257),M=L.dmax,h=L.wsize,_=L.whave,d=L.wnext,f=L.window,H=L.hold,B=L.bits,K=L.lencode,Y=L.distcode,v=(1<<L.lenbits)-1,Z=(1<<L.distbits)-1;e:do{B<15&&(H+=W[N++]<<B,B+=8,H+=W[N++]<<B,B+=8),z=K[H&v];t:for(;;){if(H>>>=q=z>>>24,B-=q,(q=z>>>16&255)===0)ie[C++]=65535&z;else{if(!(16&q)){if((64&q)==0){z=K[(65535&z)+(H&(1<<q)-1)];continue t}if(32&q){L.mode=12;break e}I.msg="invalid literal/length code",L.mode=30;break e}J=65535&z,(q&=15)&&(B<q&&(H+=W[N++]<<B,B+=8),J+=H&(1<<q)-1,H>>>=q,B-=q),B<15&&(H+=W[N++]<<B,B+=8,H+=W[N++]<<B,B+=8),z=Y[H&Z];A:for(;;){if(H>>>=q=z>>>24,B-=q,!(16&(q=z>>>16&255))){if((64&q)==0){z=Y[(65535&z)+(H&(1<<q)-1)];continue A}I.msg="invalid distance code",L.mode=30;break e}if(Ae=65535&z,B<(q&=15)&&(H+=W[N++]<<B,(B+=8)<q&&(H+=W[N++]<<B,B+=8)),M<(Ae+=H&(1<<q)-1)){I.msg="invalid distance too far back",L.mode=30;break e}if(H>>>=q,B-=q,(q=C-U)<Ae){if(_<(q=Ae-q)&&L.sane){I.msg="invalid distance too far back",L.mode=30;break e}if(Re=f,(Q=0)===d){if(Q+=h-q,q<J){for(J-=q;ie[C++]=f[Q++],--q;);Q=C-Ae,Re=ie}}else if(d<q){if(Q+=h+d-q,(q-=d)<J){for(J-=q;ie[C++]=f[Q++],--q;);if(Q=0,d<J){for(J-=q=d;ie[C++]=f[Q++],--q;);Q=C-Ae,Re=ie}}}else if(Q+=d-q,q<J){for(J-=q;ie[C++]=f[Q++],--q;);Q=C-Ae,Re=ie}for(;2<J;)ie[C++]=Re[Q++],ie[C++]=Re[Q++],ie[C++]=Re[Q++],J-=3;J&&(ie[C++]=Re[Q++],1<J&&(ie[C++]=Re[Q++]))}else{for(Q=C-Ae;ie[C++]=ie[Q++],ie[C++]=ie[Q++],ie[C++]=ie[Q++],2<(J-=3););J&&(ie[C++]=ie[Q++],1<J&&(ie[C++]=ie[Q++]))}break}}break}}while(N<l&&C<D);N-=J=B>>3,H&=(1<<(B-=J<<3))-1,I.next_in=N,I.next_out=C,I.avail_in=N<l?l-N+5:5-(N-l),I.avail_out=C<D?D-C+257:257-(C-D),L.hold=H,L.bits=B}},{}],49:[function(s,R,n){var I=s("../utils/common"),r=s("./adler32"),L=s("./crc32"),N=s("./inffast"),l=s("./inftrees"),C=1,U=2,D=0,M=-2,h=1,_=852,d=592;function f(Q){return(Q>>>24&255)+(Q>>>8&65280)+((65280&Q)<<8)+((255&Q)<<24)}o(f,"L");function H(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}o(H,"s");function B(Q){var Re;return Q&&Q.state?(Re=Q.state,Q.total_in=Q.total_out=Re.total=0,Q.msg="",Re.wrap&&(Q.adler=1&Re.wrap),Re.mode=h,Re.last=0,Re.havedict=0,Re.dmax=32768,Re.head=null,Re.hold=0,Re.bits=0,Re.lencode=Re.lendyn=new I.Buf32(_),Re.distcode=Re.distdyn=new I.Buf32(d),Re.sane=1,Re.back=-1,D):M}o(B,"a");function K(Q){var Re;return Q&&Q.state?((Re=Q.state).wsize=0,Re.whave=0,Re.wnext=0,B(Q)):M}o(K,"o");function Y(Q,Re){var W,ie;return Q&&Q.state?(ie=Q.state,Re<0?(W=0,Re=-Re):(W=1+(Re>>4),Re<48&&(Re&=15)),Re&&(Re<8||15<Re)?M:(ie.window!==null&&ie.wbits!==Re&&(ie.window=null),ie.wrap=W,ie.wbits=Re,K(Q))):M}o(Y,"h");function v(Q,Re){var W,ie;return Q?(ie=new H,(Q.state=ie).window=null,(W=Y(Q,Re))!==D&&(Q.state=null),W):M}o(v,"u");var Z,z,q=!0;function J(Q){if(q){var Re;for(Z=new I.Buf32(512),z=new I.Buf32(32),Re=0;Re<144;)Q.lens[Re++]=8;for(;Re<256;)Q.lens[Re++]=9;for(;Re<280;)Q.lens[Re++]=7;for(;Re<288;)Q.lens[Re++]=8;for(l(C,Q.lens,0,288,Z,0,Q.work,{bits:9}),Re=0;Re<32;)Q.lens[Re++]=5;l(U,Q.lens,0,32,z,0,Q.work,{bits:5}),q=!1}Q.lencode=Z,Q.lenbits=9,Q.distcode=z,Q.distbits=5}o(J,"j");function Ae(Q,Re,W,ie){var Be,he=Q.state;return he.window===null&&(he.wsize=1<<he.wbits,he.wnext=0,he.whave=0,he.window=new I.Buf8(he.wsize)),ie>=he.wsize?(I.arraySet(he.window,Re,W-he.wsize,he.wsize,0),he.wnext=0,he.whave=he.wsize):(ie<(Be=he.wsize-he.wnext)&&(Be=ie),I.arraySet(he.window,Re,W-ie,Be,he.wnext),(ie-=Be)?(I.arraySet(he.window,Re,W-ie,ie,0),he.wnext=ie,he.whave=he.wsize):(he.wnext+=Be,he.wnext===he.wsize&&(he.wnext=0),he.whave<he.wsize&&(he.whave+=Be))),0}o(Ae,"Z"),n.inflateReset=K,n.inflateReset2=Y,n.inflateResetKeep=B,n.inflateInit=function(Q){return v(Q,15)},n.inflateInit2=v,n.inflate=function(Q,Re){var W,ie,Be,he,ve,_e,Le,Ee,se,Ne,Ue,me,st,Ct,tt,ft,Xt,pt,fA,cA,x,be,Ye,le,Te=0,fe=new I.Buf8(4),qe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!Q||!Q.state||!Q.output||!Q.input&&Q.avail_in!==0)return M;(W=Q.state).mode===12&&(W.mode=13),ve=Q.next_out,Be=Q.output,Le=Q.avail_out,he=Q.next_in,ie=Q.input,_e=Q.avail_in,Ee=W.hold,se=W.bits,Ne=_e,Ue=Le,be=D;e:for(;;)switch(W.mode){case h:if(W.wrap===0){W.mode=13;break}for(;se<16;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(2&W.wrap&&Ee===35615){fe[W.check=0]=255&Ee,fe[1]=Ee>>>8&255,W.check=L(W.check,fe,2,0),se=Ee=0,W.mode=2;break}if(W.flags=0,W.head&&(W.head.done=!1),!(1&W.wrap)||(((255&Ee)<<8)+(Ee>>8))%31){Q.msg="incorrect header check",W.mode=30;break}if((15&Ee)!=8){Q.msg="unknown compression method",W.mode=30;break}if(se-=4,x=8+(15&(Ee>>>=4)),W.wbits===0)W.wbits=x;else if(x>W.wbits){Q.msg="invalid window size",W.mode=30;break}W.dmax=1<<x,Q.adler=W.check=1,W.mode=512&Ee?10:12,se=Ee=0;break;case 2:for(;se<16;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(W.flags=Ee,(255&W.flags)!=8){Q.msg="unknown compression method",W.mode=30;break}if(57344&W.flags){Q.msg="unknown header flags set",W.mode=30;break}W.head&&(W.head.text=Ee>>8&1),512&W.flags&&(fe[0]=255&Ee,fe[1]=Ee>>>8&255,W.check=L(W.check,fe,2,0)),se=Ee=0,W.mode=3;case 3:for(;se<32;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.head&&(W.head.time=Ee),512&W.flags&&(fe[0]=255&Ee,fe[1]=Ee>>>8&255,fe[2]=Ee>>>16&255,fe[3]=Ee>>>24&255,W.check=L(W.check,fe,4,0)),se=Ee=0,W.mode=4;case 4:for(;se<16;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.head&&(W.head.xflags=255&Ee,W.head.os=Ee>>8),512&W.flags&&(fe[0]=255&Ee,fe[1]=Ee>>>8&255,W.check=L(W.check,fe,2,0)),se=Ee=0,W.mode=5;case 5:if(1024&W.flags){for(;se<16;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.length=Ee,W.head&&(W.head.extra_len=Ee),512&W.flags&&(fe[0]=255&Ee,fe[1]=Ee>>>8&255,W.check=L(W.check,fe,2,0)),se=Ee=0}else W.head&&(W.head.extra=null);W.mode=6;case 6:if(1024&W.flags&&(_e<(me=W.length)&&(me=_e),me&&(W.head&&(x=W.head.extra_len-W.length,W.head.extra||(W.head.extra=new Array(W.head.extra_len)),I.arraySet(W.head.extra,ie,he,me,x)),512&W.flags&&(W.check=L(W.check,ie,me,he)),_e-=me,he+=me,W.length-=me),W.length))break e;W.length=0,W.mode=7;case 7:if(2048&W.flags){if(_e===0)break e;for(me=0;x=ie[he+me++],W.head&&x&&W.length<65536&&(W.head.name+=String.fromCharCode(x)),x&&me<_e;);if(512&W.flags&&(W.check=L(W.check,ie,me,he)),_e-=me,he+=me,x)break e}else W.head&&(W.head.name=null);W.length=0,W.mode=8;case 8:if(4096&W.flags){if(_e===0)break e;for(me=0;x=ie[he+me++],W.head&&x&&W.length<65536&&(W.head.comment+=String.fromCharCode(x)),x&&me<_e;);if(512&W.flags&&(W.check=L(W.check,ie,me,he)),_e-=me,he+=me,x)break e}else W.head&&(W.head.comment=null);W.mode=9;case 9:if(512&W.flags){for(;se<16;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(Ee!==(65535&W.check)){Q.msg="header crc mismatch",W.mode=30;break}se=Ee=0}W.head&&(W.head.hcrc=W.flags>>9&1,W.head.done=!0),Q.adler=W.check=0,W.mode=12;break;case 10:for(;se<32;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}Q.adler=W.check=f(Ee),se=Ee=0,W.mode=11;case 11:if(W.havedict===0)return Q.next_out=ve,Q.avail_out=Le,Q.next_in=he,Q.avail_in=_e,W.hold=Ee,W.bits=se,2;Q.adler=W.check=1,W.mode=12;case 12:if(Re===5||Re===6)break e;case 13:if(W.last){Ee>>>=7&se,se-=7&se,W.mode=27;break}for(;se<3;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}switch(W.last=1&Ee,se-=1,3&(Ee>>>=1)){case 0:W.mode=14;break;case 1:if(J(W),W.mode=20,Re!==6)break;Ee>>>=2,se-=2;break e;case 2:W.mode=17;break;case 3:Q.msg="invalid block type",W.mode=30}Ee>>>=2,se-=2;break;case 14:for(Ee>>>=7&se,se-=7&se;se<32;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if((65535&Ee)!=(Ee>>>16^65535)){Q.msg="invalid stored block lengths",W.mode=30;break}if(W.length=65535&Ee,se=Ee=0,W.mode=15,Re===6)break e;case 15:W.mode=16;case 16:if(me=W.length){if(_e<me&&(me=_e),Le<me&&(me=Le),me===0)break e;I.arraySet(Be,ie,he,me,ve),_e-=me,he+=me,Le-=me,ve+=me,W.length-=me;break}W.mode=12;break;case 17:for(;se<14;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(W.nlen=257+(31&Ee),Ee>>>=5,se-=5,W.ndist=1+(31&Ee),Ee>>>=5,se-=5,W.ncode=4+(15&Ee),Ee>>>=4,se-=4,286<W.nlen||30<W.ndist){Q.msg="too many length or distance symbols",W.mode=30;break}W.have=0,W.mode=18;case 18:for(;W.have<W.ncode;){for(;se<3;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.lens[qe[W.have++]]=7&Ee,Ee>>>=3,se-=3}for(;W.have<19;)W.lens[qe[W.have++]]=0;if(W.lencode=W.lendyn,W.lenbits=7,Ye={bits:W.lenbits},be=l(0,W.lens,0,19,W.lencode,0,W.work,Ye),W.lenbits=Ye.bits,be){Q.msg="invalid code lengths set",W.mode=30;break}W.have=0,W.mode=19;case 19:for(;W.have<W.nlen+W.ndist;){for(;ft=(Te=W.lencode[Ee&(1<<W.lenbits)-1])>>>16&255,Xt=65535&Te,!((tt=Te>>>24)<=se);){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(Xt<16)Ee>>>=tt,se-=tt,W.lens[W.have++]=Xt;else{if(Xt===16){for(le=tt+2;se<le;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(Ee>>>=tt,se-=tt,W.have===0){Q.msg="invalid bit length repeat",W.mode=30;break}x=W.lens[W.have-1],me=3+(3&Ee),Ee>>>=2,se-=2}else if(Xt===17){for(le=tt+3;se<le;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}se-=tt,x=0,me=3+(7&(Ee>>>=tt)),Ee>>>=3,se-=3}else{for(le=tt+7;se<le;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}se-=tt,x=0,me=11+(127&(Ee>>>=tt)),Ee>>>=7,se-=7}if(W.have+me>W.nlen+W.ndist){Q.msg="invalid bit length repeat",W.mode=30;break}for(;me--;)W.lens[W.have++]=x}}if(W.mode===30)break;if(W.lens[256]===0){Q.msg="invalid code -- missing end-of-block",W.mode=30;break}if(W.lenbits=9,Ye={bits:W.lenbits},be=l(C,W.lens,0,W.nlen,W.lencode,0,W.work,Ye),W.lenbits=Ye.bits,be){Q.msg="invalid literal/lengths set",W.mode=30;break}if(W.distbits=6,W.distcode=W.distdyn,Ye={bits:W.distbits},be=l(U,W.lens,W.nlen,W.ndist,W.distcode,0,W.work,Ye),W.distbits=Ye.bits,be){Q.msg="invalid distances set",W.mode=30;break}if(W.mode=20,Re===6)break e;case 20:W.mode=21;case 21:if(6<=_e&&258<=Le){Q.next_out=ve,Q.avail_out=Le,Q.next_in=he,Q.avail_in=_e,W.hold=Ee,W.bits=se,N(Q,Ue),ve=Q.next_out,Be=Q.output,Le=Q.avail_out,he=Q.next_in,ie=Q.input,_e=Q.avail_in,Ee=W.hold,se=W.bits,W.mode===12&&(W.back=-1);break}for(W.back=0;ft=(Te=W.lencode[Ee&(1<<W.lenbits)-1])>>>16&255,Xt=65535&Te,!((tt=Te>>>24)<=se);){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(ft&&(240&ft)==0){for(pt=tt,fA=ft,cA=Xt;ft=(Te=W.lencode[cA+((Ee&(1<<pt+fA)-1)>>pt)])>>>16&255,Xt=65535&Te,!(pt+(tt=Te>>>24)<=se);){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}Ee>>>=pt,se-=pt,W.back+=pt}if(Ee>>>=tt,se-=tt,W.back+=tt,W.length=Xt,ft===0){W.mode=26;break}if(32&ft){W.back=-1,W.mode=12;break}if(64&ft){Q.msg="invalid literal/length code",W.mode=30;break}W.extra=15&ft,W.mode=22;case 22:if(W.extra){for(le=W.extra;se<le;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.length+=Ee&(1<<W.extra)-1,Ee>>>=W.extra,se-=W.extra,W.back+=W.extra}W.was=W.length,W.mode=23;case 23:for(;ft=(Te=W.distcode[Ee&(1<<W.distbits)-1])>>>16&255,Xt=65535&Te,!((tt=Te>>>24)<=se);){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if((240&ft)==0){for(pt=tt,fA=ft,cA=Xt;ft=(Te=W.distcode[cA+((Ee&(1<<pt+fA)-1)>>pt)])>>>16&255,Xt=65535&Te,!(pt+(tt=Te>>>24)<=se);){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}Ee>>>=pt,se-=pt,W.back+=pt}if(Ee>>>=tt,se-=tt,W.back+=tt,64&ft){Q.msg="invalid distance code",W.mode=30;break}W.offset=Xt,W.extra=15&ft,W.mode=24;case 24:if(W.extra){for(le=W.extra;se<le;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}W.offset+=Ee&(1<<W.extra)-1,Ee>>>=W.extra,se-=W.extra,W.back+=W.extra}if(W.offset>W.dmax){Q.msg="invalid distance too far back",W.mode=30;break}W.mode=25;case 25:if(Le===0)break e;if(me=Ue-Le,W.offset>me){if((me=W.offset-me)>W.whave&&W.sane){Q.msg="invalid distance too far back",W.mode=30;break}st=me>W.wnext?(me-=W.wnext,W.wsize-me):W.wnext-me,me>W.length&&(me=W.length),Ct=W.window}else Ct=Be,st=ve-W.offset,me=W.length;for(Le<me&&(me=Le),Le-=me,W.length-=me;Be[ve++]=Ct[st++],--me;);W.length===0&&(W.mode=21);break;case 26:if(Le===0)break e;Be[ve++]=W.length,Le--,W.mode=21;break;case 27:if(W.wrap){for(;se<32;){if(_e===0)break e;_e--,Ee|=ie[he++]<<se,se+=8}if(Ue-=Le,Q.total_out+=Ue,W.total+=Ue,Ue&&(Q.adler=W.check=W.flags?L(W.check,Be,Ue,ve-Ue):r(W.check,Be,Ue,ve-Ue)),Ue=Le,(W.flags?Ee:f(Ee))!==W.check){Q.msg="incorrect data check",W.mode=30;break}se=Ee=0}W.mode=28;case 28:if(W.wrap&&W.flags){for(;se<32;){if(_e===0)break e;_e--,Ee+=ie[he++]<<se,se+=8}if(Ee!==(4294967295&W.total)){Q.msg="incorrect length check",W.mode=30;break}se=Ee=0}W.mode=29;case 29:be=1;break e;case 30:be=-3;break e;case 31:return-4;case 32:default:return M}return Q.next_out=ve,Q.avail_out=Le,Q.next_in=he,Q.avail_in=_e,W.hold=Ee,W.bits=se,(W.wsize||Ue!==Q.avail_out&&W.mode<30&&(W.mode<27||Re!==4))&&Ae(Q,Q.output,Q.next_out,Ue-Q.avail_out)?(W.mode=31,-4):(Ne-=Q.avail_in,Ue-=Q.avail_out,Q.total_in+=Ne,Q.total_out+=Ue,W.total+=Ue,W.wrap&&Ue&&(Q.adler=W.check=W.flags?L(W.check,Be,Ue,Q.next_out-Ue):r(W.check,Be,Ue,Q.next_out-Ue)),Q.data_type=W.bits+(W.last?64:0)+(W.mode===12?128:0)+(W.mode===20||W.mode===15?256:0),(Ne==0&&Ue===0||Re===4)&&be===D&&(be=-5),be)},n.inflateEnd=function(Q){if(!Q||!Q.state)return M;var Re=Q.state;return Re.window&&(Re.window=null),Q.state=null,D},n.inflateGetHeader=function(Q,Re){var W;return Q&&Q.state?(2&(W=Q.state).wrap)==0?M:((W.head=Re).done=!1,D):M},n.inflateSetDictionary=function(Q,Re){var W,ie=Re.length;return Q&&Q.state?(W=Q.state).wrap!==0&&W.mode!==11?M:W.mode===11&&r(1,Re,ie,0)!==W.check?-3:Ae(Q,Re,ie,ie)?(W.mode=31,-4):(W.havedict=1,D):M},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(s,R,n){var I=s("../utils/common"),r=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],L=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],N=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],l=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];R.exports=function(C,U,D,M,h,_,d,f){var H,B,K,Y,v,Z,z,q,J,Ae=f.bits,Q=0,Re=0,W=0,ie=0,Be=0,he=0,ve=0,_e=0,Le=0,Ee=0,se=null,Ne=0,Ue=new I.Buf16(16),me=new I.Buf16(16),st=null,Ct=0;for(Q=0;Q<=15;Q++)Ue[Q]=0;for(Re=0;Re<M;Re++)Ue[U[D+Re]]++;for(Be=Ae,ie=15;1<=ie&&Ue[ie]===0;ie--);if(ie<Be&&(Be=ie),ie===0)return h[_++]=20971520,h[_++]=20971520,f.bits=1,0;for(W=1;W<ie&&Ue[W]===0;W++);for(Be<W&&(Be=W),Q=_e=1;Q<=15;Q++)if(_e<<=1,(_e-=Ue[Q])<0)return-1;if(0<_e&&(C===0||ie!==1))return-1;for(me[1]=0,Q=1;Q<15;Q++)me[Q+1]=me[Q]+Ue[Q];for(Re=0;Re<M;Re++)U[D+Re]!==0&&(d[me[U[D+Re]]++]=Re);if(Z=C===0?(se=st=d,19):C===1?(se=r,Ne-=257,st=L,Ct-=257,256):(se=N,st=l,-1),Q=W,v=_,ve=Re=Ee=0,K=-1,Y=(Le=1<<(he=Be))-1,C===1&&852<Le||C===2&&592<Le)return 1;for(;;){for(z=Q-ve,J=d[Re]<Z?(q=0,d[Re]):d[Re]>Z?(q=st[Ct+d[Re]],se[Ne+d[Re]]):(q=96,0),H=1<<Q-ve,W=B=1<<he;h[v+(Ee>>ve)+(B-=H)]=z<<24|q<<16|J|0,B!==0;);for(H=1<<Q-1;Ee&H;)H>>=1;if(H!==0?(Ee&=H-1,Ee+=H):Ee=0,Re++,--Ue[Q]==0){if(Q===ie)break;Q=U[D+d[Re]]}if(Be<Q&&(Ee&Y)!==K){for(ve===0&&(ve=Be),v+=W,_e=1<<(he=Q-ve);he+ve<ie&&!((_e-=Ue[he+ve])<=0);)he++,_e<<=1;if(Le+=1<<he,C===1&&852<Le||C===2&&592<Le)return 1;h[K=Ee&Y]=Be<<24|he<<16|v-_|0}}return Ee!==0&&(h[v+Ee]=Q-ve<<24|64<<16|0),f.bits=Be,0}},{"../utils/common":41}],51:[function(s,R,n){R.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(s,R,n){var I=s("../utils/common"),r=0,L=1;function N(Te){for(var fe=Te.length;0<=--fe;)Te[fe]=0}o(N,"n");var l=0,C=29,U=256,D=U+1+C,M=30,h=19,_=2*D+1,d=15,f=16,H=7,B=256,K=16,Y=17,v=18,Z=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],z=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],q=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],J=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Ae=new Array(2*(D+2));N(Ae);var Q=new Array(2*M);N(Q);var Re=new Array(512);N(Re);var W=new Array(256);N(W);var ie=new Array(C);N(ie);var Be,he,ve,_e=new Array(M);function Le(Te,fe,qe,Je,pe){this.static_tree=Te,this.extra_bits=fe,this.extra_base=qe,this.elems=Je,this.max_length=pe,this.has_stree=Te&&Te.length}o(Le,"D");function Ee(Te,fe){this.dyn_tree=Te,this.max_code=0,this.stat_desc=fe}o(Ee,"F");function se(Te){return Te<256?Re[Te]:Re[256+(Te>>>7)]}o(se,"N");function Ne(Te,fe){Te.pending_buf[Te.pending++]=255&fe,Te.pending_buf[Te.pending++]=fe>>>8&255}o(Ne,"U");function Ue(Te,fe,qe){Te.bi_valid>f-qe?(Te.bi_buf|=fe<<Te.bi_valid&65535,Ne(Te,Te.bi_buf),Te.bi_buf=fe>>f-Te.bi_valid,Te.bi_valid+=qe-f):(Te.bi_buf|=fe<<Te.bi_valid&65535,Te.bi_valid+=qe)}o(Ue,"P");function me(Te,fe,qe){Ue(Te,qe[2*fe],qe[2*fe+1])}o(me,"L");function st(Te,fe){for(var qe=0;qe|=1&Te,Te>>>=1,qe<<=1,0<--fe;);return qe>>>1}o(st,"j");function Ct(Te,fe,qe){var Je,pe,it=new Array(d+1),Bt=0;for(Je=1;Je<=d;Je++)it[Je]=Bt=Bt+qe[Je-1]<<1;for(pe=0;pe<=fe;pe++){var lt=Te[2*pe+1];lt!==0&&(Te[2*pe]=st(it[lt]++,lt))}}o(Ct,"Z");function tt(Te){var fe;for(fe=0;fe<D;fe++)Te.dyn_ltree[2*fe]=0;for(fe=0;fe<M;fe++)Te.dyn_dtree[2*fe]=0;for(fe=0;fe<h;fe++)Te.bl_tree[2*fe]=0;Te.dyn_ltree[2*B]=1,Te.opt_len=Te.static_len=0,Te.last_lit=Te.matches=0}o(tt,"W");function ft(Te){8<Te.bi_valid?Ne(Te,Te.bi_buf):0<Te.bi_valid&&(Te.pending_buf[Te.pending++]=Te.bi_buf),Te.bi_buf=0,Te.bi_valid=0}o(ft,"M");function Xt(Te,fe,qe,Je){var pe=2*fe,it=2*qe;return Te[pe]<Te[it]||Te[pe]===Te[it]&&Je[fe]<=Je[qe]}o(Xt,"H");function pt(Te,fe,qe){for(var Je=Te.heap[qe],pe=qe<<1;pe<=Te.heap_len&&(pe<Te.heap_len&&Xt(fe,Te.heap[pe+1],Te.heap[pe],Te.depth)&&pe++,!Xt(fe,Je,Te.heap[pe],Te.depth));)Te.heap[qe]=Te.heap[pe],qe=pe,pe<<=1;Te.heap[qe]=Je}o(pt,"G");function fA(Te,fe,qe){var Je,pe,it,Bt,lt=0;if(Te.last_lit!==0)for(;Je=Te.pending_buf[Te.d_buf+2*lt]<<8|Te.pending_buf[Te.d_buf+2*lt+1],pe=Te.pending_buf[Te.l_buf+lt],lt++,Je===0?me(Te,pe,fe):(me(Te,(it=W[pe])+U+1,fe),(Bt=Z[it])!==0&&Ue(Te,pe-=ie[it],Bt),me(Te,it=se(--Je),qe),(Bt=z[it])!==0&&Ue(Te,Je-=_e[it],Bt)),lt<Te.last_lit;);me(Te,B,fe)}o(fA,"K");function cA(Te,fe){var qe,Je,pe,it=fe.dyn_tree,Bt=fe.stat_desc.static_tree,lt=fe.stat_desc.has_stree,xt=fe.stat_desc.elems,BA=-1;for(Te.heap_len=0,Te.heap_max=_,qe=0;qe<xt;qe++)it[2*qe]!==0?(Te.heap[++Te.heap_len]=BA=qe,Te.depth[qe]=0):it[2*qe+1]=0;for(;Te.heap_len<2;)it[2*(pe=Te.heap[++Te.heap_len]=BA<2?++BA:0)]=1,Te.depth[pe]=0,Te.opt_len--,lt&&(Te.static_len-=Bt[2*pe+1]);for(fe.max_code=BA,qe=Te.heap_len>>1;1<=qe;qe--)pt(Te,it,qe);for(pe=xt;qe=Te.heap[1],Te.heap[1]=Te.heap[Te.heap_len--],pt(Te,it,1),Je=Te.heap[1],Te.heap[--Te.heap_max]=qe,Te.heap[--Te.heap_max]=Je,it[2*pe]=it[2*qe]+it[2*Je],Te.depth[pe]=(Te.depth[qe]>=Te.depth[Je]?Te.depth[qe]:Te.depth[Je])+1,it[2*qe+1]=it[2*Je+1]=pe,Te.heap[1]=pe++,pt(Te,it,1),2<=Te.heap_len;);Te.heap[--Te.heap_max]=Te.heap[1],function(NA,Ws){var Ln,Is,qR,CE,yn,wn,eO=Ws.dyn_tree,QI=Ws.max_code,Ni=Ws.stat_desc.static_tree,$I=Ws.stat_desc.has_stree,li=Ws.stat_desc.extra_bits,Ci=Ws.stat_desc.extra_base,WO=Ws.stat_desc.max_length,et=0;for(CE=0;CE<=d;CE++)NA.bl_count[CE]=0;for(eO[2*NA.heap[NA.heap_max]+1]=0,Ln=NA.heap_max+1;Ln<_;Ln++)WO<(CE=eO[2*eO[2*(Is=NA.heap[Ln])+1]+1]+1)&&(CE=WO,et++),eO[2*Is+1]=CE,QI<Is||(NA.bl_count[CE]++,yn=0,Ci<=Is&&(yn=li[Is-Ci]),wn=eO[2*Is],NA.opt_len+=wn*(CE+yn),$I&&(NA.static_len+=wn*(Ni[2*Is+1]+yn)));if(et!==0){do{for(CE=WO-1;NA.bl_count[CE]===0;)CE--;NA.bl_count[CE]--,NA.bl_count[CE+1]+=2,NA.bl_count[WO]--,et-=2}while(0<et);for(CE=WO;CE!==0;CE--)for(Is=NA.bl_count[CE];Is!==0;)QI<(qR=NA.heap[--Ln])||(eO[2*qR+1]!==CE&&(NA.opt_len+=(CE-eO[2*qR+1])*eO[2*qR],eO[2*qR+1]=CE),Is--)}}(Te,fe),Ct(it,BA,Te.bl_count)}o(cA,"Y");function x(Te,fe,qe){var Je,pe,it=-1,Bt=fe[1],lt=0,xt=7,BA=4;for(Bt===0&&(xt=138,BA=3),fe[2*(qe+1)+1]=65535,Je=0;Je<=qe;Je++)pe=Bt,Bt=fe[2*(Je+1)+1],++lt<xt&&pe===Bt||(lt<BA?Te.bl_tree[2*pe]+=lt:pe!==0?(pe!==it&&Te.bl_tree[2*pe]++,Te.bl_tree[2*K]++):lt<=10?Te.bl_tree[2*Y]++:Te.bl_tree[2*v]++,it=pe,BA=(lt=0)===Bt?(xt=138,3):pe===Bt?(xt=6,3):(xt=7,4))}o(x,"X");function be(Te,fe,qe){var Je,pe,it=-1,Bt=fe[1],lt=0,xt=7,BA=4;for(Bt===0&&(xt=138,BA=3),Je=0;Je<=qe;Je++)if(pe=Bt,Bt=fe[2*(Je+1)+1],!(++lt<xt&&pe===Bt)){if(lt<BA)for(;me(Te,pe,Te.bl_tree),--lt!=0;);else pe!==0?(pe!==it&&(me(Te,pe,Te.bl_tree),lt--),me(Te,K,Te.bl_tree),Ue(Te,lt-3,2)):lt<=10?(me(Te,Y,Te.bl_tree),Ue(Te,lt-3,3)):(me(Te,v,Te.bl_tree),Ue(Te,lt-11,7));it=pe,BA=(lt=0)===Bt?(xt=138,3):pe===Bt?(xt=6,3):(xt=7,4)}}o(be,"V"),N(_e);var Ye=!1;function le(Te,fe,qe,Je){Ue(Te,(l<<1)+(Je?1:0),3),function(pe,it,Bt,lt){ft(pe),Ne(pe,Bt),Ne(pe,~Bt),I.arraySet(pe.pending_buf,pe.window,it,Bt,pe.pending),pe.pending+=Bt}(Te,fe,qe)}o(le,"J"),n._tr_init=function(Te){Ye||(function(){var fe,qe,Je,pe,it,Bt=new Array(d+1);for(pe=Je=0;pe<C-1;pe++)for(ie[pe]=Je,fe=0;fe<1<<Z[pe];fe++)W[Je++]=pe;for(W[Je-1]=pe,pe=it=0;pe<16;pe++)for(_e[pe]=it,fe=0;fe<1<<z[pe];fe++)Re[it++]=pe;for(it>>=7;pe<M;pe++)for(_e[pe]=it<<7,fe=0;fe<1<<z[pe]-7;fe++)Re[256+it++]=pe;for(qe=0;qe<=d;qe++)Bt[qe]=0;for(fe=0;fe<=143;)Ae[2*fe+1]=8,fe++,Bt[8]++;for(;fe<=255;)Ae[2*fe+1]=9,fe++,Bt[9]++;for(;fe<=279;)Ae[2*fe+1]=7,fe++,Bt[7]++;for(;fe<=287;)Ae[2*fe+1]=8,fe++,Bt[8]++;for(Ct(Ae,D+1,Bt),fe=0;fe<M;fe++)Q[2*fe+1]=5,Q[2*fe]=st(fe,5);Be=new Le(Ae,Z,U+1,D,d),he=new Le(Q,z,0,M,d),ve=new Le(new Array(0),q,0,h,H)}(),Ye=!0),Te.l_desc=new Ee(Te.dyn_ltree,Be),Te.d_desc=new Ee(Te.dyn_dtree,he),Te.bl_desc=new Ee(Te.bl_tree,ve),Te.bi_buf=0,Te.bi_valid=0,tt(Te)},n._tr_stored_block=le,n._tr_flush_block=function(Te,fe,qe,Je){var pe,it,Bt=0;0<Te.level?(Te.strm.data_type===2&&(Te.strm.data_type=function(lt){var xt,BA=4093624447;for(xt=0;xt<=31;xt++,BA>>>=1)if(1&BA&&lt.dyn_ltree[2*xt]!==0)return r;if(lt.dyn_ltree[18]!==0||lt.dyn_ltree[20]!==0||lt.dyn_ltree[26]!==0)return L;for(xt=32;xt<U;xt++)if(lt.dyn_ltree[2*xt]!==0)return L;return r}(Te)),cA(Te,Te.l_desc),cA(Te,Te.d_desc),Bt=function(lt){var xt;for(x(lt,lt.dyn_ltree,lt.l_desc.max_code),x(lt,lt.dyn_dtree,lt.d_desc.max_code),cA(lt,lt.bl_desc),xt=h-1;3<=xt&&lt.bl_tree[2*J[xt]+1]===0;xt--);return lt.opt_len+=3*(xt+1)+5+5+4,xt}(Te),pe=Te.opt_len+3+7>>>3,(it=Te.static_len+3+7>>>3)<=pe&&(pe=it)):pe=it=qe+5,qe+4<=pe&&fe!==-1?le(Te,fe,qe,Je):Te.strategy===4||it===pe?(Ue(Te,2+(Je?1:0),3),fA(Te,Ae,Q)):(Ue(Te,4+(Je?1:0),3),function(lt,xt,BA,NA){var Ws;for(Ue(lt,xt-257,5),Ue(lt,BA-1,5),Ue(lt,NA-4,4),Ws=0;Ws<NA;Ws++)Ue(lt,lt.bl_tree[2*J[Ws]+1],3);be(lt,lt.dyn_ltree,xt-1),be(lt,lt.dyn_dtree,BA-1)}(Te,Te.l_desc.max_code+1,Te.d_desc.max_code+1,Bt+1),fA(Te,Te.dyn_ltree,Te.dyn_dtree)),tt(Te),Je&&ft(Te)},n._tr_tally=function(Te,fe,qe){return Te.pending_buf[Te.d_buf+2*Te.last_lit]=fe>>>8&255,Te.pending_buf[Te.d_buf+2*Te.last_lit+1]=255&fe,Te.pending_buf[Te.l_buf+Te.last_lit]=255&qe,Te.last_lit++,fe===0?Te.dyn_ltree[2*qe]++:(Te.matches++,fe--,Te.dyn_ltree[2*(W[qe]+U+1)]++,Te.dyn_dtree[2*se(fe)]++),Te.last_lit===Te.lit_bufsize-1},n._tr_align=function(Te){Ue(Te,2,3),me(Te,B,Ae),function(fe){fe.bi_valid===16?(Ne(fe,fe.bi_buf),fe.bi_buf=0,fe.bi_valid=0):8<=fe.bi_valid&&(fe.pending_buf[fe.pending++]=255&fe.bi_buf,fe.bi_buf>>=8,fe.bi_valid-=8)}(Te)}},{"../utils/common":41}],53:[function(s,R,n){R.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(s,R,n){(function(I){(function(r,L){if(!r.setImmediate){var N,l,C,U,D=1,M={},h=!1,_=r.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(r);d=d&&d.setTimeout?d:r,N={}.toString.call(r.process)==="[object process]"?function(K){process.nextTick(function(){H(K)})}:function(){if(r.postMessage&&!r.importScripts){var K=!0,Y=r.onmessage;return r.onmessage=function(){K=!1},r.postMessage("","*"),r.onmessage=Y,K}}()?(U="setImmediate$"+Math.random()+"$",r.addEventListener?r.addEventListener("message",B,!1):r.attachEvent("onmessage",B),function(K){r.postMessage(U+K,"*")}):r.MessageChannel?((C=new MessageChannel).port1.onmessage=function(K){H(K.data)},function(K){C.port2.postMessage(K)}):_&&"onreadystatechange"in _.createElement("script")?(l=_.documentElement,function(K){var Y=_.createElement("script");Y.onreadystatechange=function(){H(K),Y.onreadystatechange=null,l.removeChild(Y),Y=null},l.appendChild(Y)}):function(K){setTimeout(H,0,K)},d.setImmediate=function(K){typeof K!="function"&&(K=new Function(""+K));for(var Y=new Array(arguments.length-1),v=0;v<Y.length;v++)Y[v]=arguments[v+1];var Z={callback:K,args:Y};return M[D]=Z,N(D),D++},d.clearImmediate=f}function f(K){delete M[K]}o(f,"f");function H(K){if(h)setTimeout(H,0,K);else{var Y=M[K];if(Y){h=!0;try{(function(v){var Z=v.callback,z=v.args;switch(z.length){case 0:Z();break;case 1:Z(z[0]);break;case 2:Z(z[0],z[1]);break;case 3:Z(z[0],z[1],z[2]);break;default:Z.apply(L,z)}})(Y)}finally{f(K),h=!1}}}}o(H,"c");function B(K){K.source===r&&typeof K.data=="string"&&K.data.indexOf(U)===0&&H(+K.data.slice(U.length))}o(B,"d")})(typeof self>"u"?I===void 0?this:I:self)}).call(this,typeof gi<"u"?gi:typeof self<"u"?self:typeof window<"u"?window:{})},{}]},{},[10])(10)})}(_c)),_c.exports}o(EJ,"requireJszip_min");var sJ=EJ();const RJ=W7(sJ),NK=class NK extends Ja{constructor(A=null){super(A),this.ERR_USERNAME="invalid username",this.ERR_PASSWORD="invalid password",this.ERR_ACCOUNT_EXIST="account doesn't exist",this.ERR_PASSWORD_MATCH="password doesn't match",this.ERR_NO_SAVES="No save files found",this.ERR_TOO_MANY_SAVES="Too many save files found"}setup(){super.setup(),this.buildExternalPartyContainer(),this.infoContainer=a.add.container(0,0),this.usernameInfoImage=this.buildInteractableImage("settings_icon","username-info-icon",{x:20,scale:.5}),this.saveDownloadImage=this.buildInteractableImage("saving_icon","save-download-icon",{x:0,scale:.75}),this.infoContainer.add(this.usernameInfoImage),this.infoContainer.add(this.saveDownloadImage),this.getUi().add(this.infoContainer),this.infoContainer.setVisible(!1),this.infoContainer.disableInteractive()}buildExternalPartyContainer(){this.externalPartyContainer=a.add.container(0,0),this.externalPartyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/12,a.game.canvas.height/12),Phaser.Geom.Rectangle.Contains),this.externalPartyTitle=Se(0,4,"",k.SETTINGS_LABEL),this.externalPartyTitle.setOrigin(.5,0),this.externalPartyBg=Gt(0,0,0,0),this.externalPartyContainer.add(this.externalPartyBg),this.externalPartyContainer.add(this.externalPartyTitle),this.googleImage=this.buildInteractableImage("google","google-icon"),this.discordImage=this.buildInteractableImage("discord","discord-icon"),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.getUi().add(this.externalPartyContainer),this.externalPartyContainer.add(this.googleImage),this.externalPartyContainer.add(this.discordImage),this.externalPartyContainer.setVisible(!1)}getModalTitle(A){return u.t("menu:login")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[u.t("menu:login"),u.t("menu:register")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case this.ERR_USERNAME:return u.t("menu:invalidLoginUsername");case this.ERR_PASSWORD:return u.t("menu:invalidLoginPassword");case this.ERR_ACCOUNT_EXIST:return u.t("menu:accountNonExistent");case this.ERR_PASSWORD_MATCH:return u.t("menu:unmatchingPassword");case this.ERR_NO_SAVES:return"P01: "+u.t("menu:noSaves");case this.ERR_TOO_MANY_SAVES:return"P02: "+u.t("menu:tooManySaves")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:u.t("menu:username")}),A.push({label:u.t("menu:password"),isPassword:!0}),A}show(A){if(super.show(A)){const s=A[0];this.processExternalProvider(s);const R=this.submitAction;return this.submitAction=n=>{this.submitAction=R,this.sanitizeInputs(),a.ui.setMode(te.LOADING,{buttonActions:[]});const I=o(N=>{a.ui.setMode(te.LOGIN_FORM,Object.assign(s,{errorMessage:N==null?void 0:N.trim()})),a.ui.playError()},"onFail");if(!this.inputs[0].text)return I(u.t("menu:emptyUsername"));const[r,L]=this.inputs;_O.account.login({username:r.text,password:L.text}).then(N=>{!N&&R?R():I(N)})},!0}return!1}clear(){super.clear(),this.externalPartyContainer.setVisible(!1),this.infoContainer.setVisible(!1),this.setMouseCursorStyle("default"),[this.discordImage,this.googleImage,this.usernameInfoImage,this.saveDownloadImage].forEach(A=>A.off("pointerdown"))}processExternalProvider(A){this.externalPartyTitle.setText(u.t("menu:orUse")??""),this.externalPartyTitle.setX(20+this.externalPartyTitle.text.length),this.externalPartyTitle.setVisible(!0),this.externalPartyContainer.setPositionRelative(this.modalContainer,175,0),this.externalPartyContainer.setVisible(!0),this.externalPartyBg.setSize(this.externalPartyTitle.text.length+50,this.modalBg.height),this.getUi().moveTo(this.externalPartyContainer,this.getUi().length-1),this.googleImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-60),this.discordImage.setPosition(this.externalPartyBg.width/3.1,this.externalPartyBg.height-40),this.infoContainer.setPosition(5,-76),this.infoContainer.setVisible(!0),this.getUi().moveTo(this.infoContainer,this.getUi().length-1),this.usernameInfoImage.setPositionRelative(this.infoContainer,0,0),this.saveDownloadImage.setPositionRelative(this.infoContainer,20,0),this.discordImage.on("pointerdown",()=>{const I=`https://discord.com/api/oauth2/authorize?client_id=1248062921129459756&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/discord/callback")}&response_type=code&scope=identify&prompt=none`;window.open(I,"_self")}),this.googleImage.on("pointerdown",()=>{const I=`https://accounts.google.com/o/oauth2/auth?client_id=955345393540-2k6lfftf0fdnb0krqmpthjnqavfvvf73.apps.googleusercontent.com&redirect_uri=${encodeURIComponent("https://api.pokerogue.net/auth/google/callback")}&response_type=code&scope=openid`;window.open(I,"_self")});const s=o(R=>{a.ui.setMode(te.LOADING,{buttonActions:[]}),a.ui.setModeForceTransition(te.LOGIN_FORM,Object.assign(A,{errorMessage:R==null?void 0:R.trim()})),a.ui.playError()},"onFail");this.usernameInfoImage.on("pointerdown",()=>{const R=Object.keys(localStorage),n="data_",I=R.filter(r=>r.indexOf(n)>=0);if(I.length>0&&I.length<=2){const r=[];for(let L=0;L<I.length;L++)r.push({label:I[L].replace(n,""),handler:o(()=>(a.ui.revertMode(),this.infoContainer.disableInteractive(),!0),"handler")});a.ui.setOverlayMode(te.OPTION_SELECT,{options:r,delay:1e3}),this.infoContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width,a.game.canvas.height),Phaser.Geom.Rectangle.Contains)}else return I.length>2?s(this.ERR_TOO_MANY_SAVES):s(this.ERR_NO_SAVES)}),this.saveDownloadImage.on("pointerdown",()=>{const R=Object.keys(localStorage),n="data_",I="sessionData",r=R.filter(N=>N.indexOf(n)>=0),L=R.filter(N=>N.indexOf(I)>=0);if(r.length>0||L.length>0){const N=new RJ;for(let l=0;l<r.length;l++)N.file(r[l]+".prsv",localStorage.getItem(r[l]));for(let l=0;l<L.length;l++)N.file(L[l]+".prsv",localStorage.getItem(L[l]));N.generateAsync({type:"blob"}).then(l=>{const C=URL.createObjectURL(l),U=document.createElement("a");U.href=C,U.download="pokerogue_saves.zip",U.click(),URL.revokeObjectURL(C)})}else return s(this.ERR_NO_SAVES)}),this.externalPartyContainer.setAlpha(0),a.tweens.add({targets:this.externalPartyContainer,duration:Ot(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1}),this.infoContainer.setAlpha(0),a.tweens.add({targets:this.infoContainer,duration:Ot(1e3),ease:"Sine.easeInOut",y:"-=24",alpha:1})}buildInteractableImage(A,s,R={}){const{scale:n=.07,x:I=0,y:r=0,origin:L={x:0,y:0}}=R,N=a.add.image(I,r,A);return N.setName(s),N.setOrigin(L.x,L.y),N.setScale(n),N.setInteractive(),this.addInteractionHoverEffect(N),N}};o(NK,"LoginFormUiHandler");let W_=NK;const Pc={"es-ES":{inputFieldFontSize:"50px",errorMessageFontSize:"40px"}},lK=class lK extends Ja{getModalTitle(A){return u.t("menu:register")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonTopMargin(){return 8}getButtonLabels(A){return[u.t("menu:register"),u.t("menu:backToLogin")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");switch(s>0&&(A=A.slice(0,s)),A){case"invalid username":return u.t("menu:invalidRegisterUsername");case"invalid password":return u.t("menu:invalidRegisterPassword");case"failed to add account record":return u.t("menu:usernameAlreadyUsed")}return super.getReadableErrorMessage(A)}getInputFieldConfigs(){const A=[];return A.push({label:u.t("menu:username")}),A.push({label:u.t("menu:password"),isPassword:!0}),A.push({label:u.t("menu:confirmPassword"),isPassword:!0}),A}setup(){var R;super.setup(),this.modalContainer.list.forEach(n=>{var I;if(n instanceof Phaser.GameObjects.Text&&n!==this.titleText){const r=(I=Pc[u.resolvedLanguage])==null?void 0:I.inputFieldFontSize;r&&n.setFontSize(r)}});const A=((R=Pc[u.resolvedLanguage])==null?void 0:R.warningMessageFontSize)??"42px",s=Se(10,87,u.t("menu:registrationAgeWarning"),k.TOOLTIP_CONTENT,{fontSize:A});this.modalContainer.add(s)}show(A){if(super.show(A)){const s=A[0],R=this.submitAction;return this.submitAction=n=>{this.submitAction=R,this.sanitizeInputs(),a.ui.setMode(te.LOADING,{buttonActions:[]});const I=o(N=>{var C;a.ui.setMode(te.REGISTRATION_FORM,Object.assign(s,{errorMessage:N==null?void 0:N.trim()})),a.ui.playError();const l=(C=Pc[u.resolvedLanguage])==null?void 0:C.errorMessageFontSize;l&&this.errorMessage.setFontSize(l)},"onFail");if(!this.inputs[0].text)return I(u.t("menu:emptyUsername"));if(!this.inputs[1].text)return I(this.getReadableErrorMessage("invalid password"));if(this.inputs[1].text!==this.inputs[2].text)return I(u.t("menu:passwordNotMatchingConfirmPassword"));const[r,L]=this.inputs;_O.account.register({username:r.text,password:L.text}).then(N=>{N?I(N):_O.account.login({username:r.text,password:L.text}).then(l=>{l?I(l):R==null||R()})})},!0}return!1}};o(lK,"RegistrationFormUiHandler");let y_=lK;const CK=class CK extends jr{constructor(A=null){super(A)}getModalTitle(){return""}getWidth(){return 80}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=Se(this.getWidth()/2,this.getHeight()/2,u.t("menu:loading"),k.WINDOW);A.setOrigin(.5,.5),this.modalContainer.add(A)}};o(CK,"LoadingModalUiHandler");let w_=CK;const MO={playTime:{label_key:"playTime",sourceFunc:o(E=>Df(E.gameStats.playTime),"sourceFunc")},battles:{label_key:"totalBattles",sourceFunc:o(E=>E.gameStats.battles.toString(),"sourceFunc")},startersUnlocked:{label_key:"starters",sourceFunc:o(E=>{const A=E.getStarterCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(tA).length*1e3)/10}%)`},"sourceFunc")},shinyStartersUnlocked:{label_key:"shinyStarters",sourceFunc:o(E=>{const A=E.getStarterCount(s=>!!(s.caughtAttr&de.SHINY));return`${A} (${Math.floor(A/Object.keys(tA).length*1e3)/10}%)`},"sourceFunc")},dexSeen:{label_key:"speciesSeen",sourceFunc:o(E=>{const A=E.getSpeciesCount(s=>!!s.seenAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},dexCaught:{label_key:"speciesCaught",sourceFunc:o(E=>{const A=E.getSpeciesCount(s=>!!s.caughtAttr);return`${A} (${Math.floor(A/Object.keys(E.dexData).length*1e3)/10}%)`},"sourceFunc")},ribbonsOwned:{label_key:"ribbonsOwned",sourceFunc:o(E=>E.gameStats.ribbonsOwned.toString(),"sourceFunc")},classicSessionsPlayed:{label_key:"classicRuns",sourceFunc:o(E=>E.gameStats.classicSessionsPlayed.toString(),"sourceFunc")},sessionsWon:{label_key:"classicWins",sourceFunc:o(E=>E.gameStats.sessionsWon.toString(),"sourceFunc")},dailyRunSessionsPlayed:{label_key:"dailyRunAttempts",sourceFunc:o(E=>E.gameStats.dailyRunSessionsPlayed.toString(),"sourceFunc")},dailyRunSessionsWon:{label_key:"dailyRunWins",sourceFunc:o(E=>E.gameStats.dailyRunSessionsWon.toString(),"sourceFunc")},endlessSessionsPlayed:{label_key:"endlessRuns",sourceFunc:o(E=>E.gameStats.endlessSessionsPlayed.toString(),"sourceFunc"),hidden:!0},highestEndlessWave:{label_key:"highestWaveEndless",sourceFunc:o(E=>E.gameStats.highestEndlessWave.toString(),"sourceFunc"),hidden:!0},highestMoney:{label_key:"highestMoney",sourceFunc:o(E=>xc(E.gameStats.highestMoney),"sourceFunc")},highestDamage:{label_key:"highestDamage",sourceFunc:o(E=>E.gameStats.highestDamage.toString(),"sourceFunc")},highestHeal:{label_key:"highestHPHealed",sourceFunc:o(E=>E.gameStats.highestHeal.toString(),"sourceFunc")},pokemonSeen:{label_key:"pokemonEncountered",sourceFunc:o(E=>E.gameStats.pokemonSeen.toString(),"sourceFunc")},pokemonDefeated:{label_key:"pokemonDefeated",sourceFunc:o(E=>E.gameStats.pokemonDefeated.toString(),"sourceFunc")},pokemonCaught:{label_key:"pokemonCaught",sourceFunc:o(E=>E.gameStats.pokemonCaught.toString(),"sourceFunc")},pokemonHatched:{label_key:"eggsHatched",sourceFunc:o(E=>E.gameStats.pokemonHatched.toString(),"sourceFunc")},subLegendaryPokemonSeen:{label_key:"subLegendsSeen",sourceFunc:o(E=>E.gameStats.subLegendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonCaught:{label_key:"subLegendsCaught",sourceFunc:o(E=>E.gameStats.subLegendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},subLegendaryPokemonHatched:{label_key:"subLegendsHatched",sourceFunc:o(E=>E.gameStats.subLegendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},legendaryPokemonSeen:{label_key:"legendsSeen",sourceFunc:o(E=>E.gameStats.legendaryPokemonSeen.toString(),"sourceFunc"),hidden:!0},legendaryPokemonCaught:{label_key:"legendsCaught",sourceFunc:o(E=>E.gameStats.legendaryPokemonCaught.toString(),"sourceFunc"),hidden:!0},legendaryPokemonHatched:{label_key:"legendsHatched",sourceFunc:o(E=>E.gameStats.legendaryPokemonHatched.toString(),"sourceFunc"),hidden:!0},mythicalPokemonSeen:{label_key:"mythicalsSeen",sourceFunc:o(E=>E.gameStats.mythicalPokemonSeen.toString(),"sourceFunc"),hidden:!0},mythicalPokemonCaught:{label_key:"mythicalsCaught",sourceFunc:o(E=>E.gameStats.mythicalPokemonCaught.toString(),"sourceFunc"),hidden:!0},mythicalPokemonHatched:{label_key:"mythicalsHatched",sourceFunc:o(E=>E.gameStats.mythicalPokemonHatched.toString(),"sourceFunc"),hidden:!0},shinyPokemonSeen:{label_key:"shiniesSeen",sourceFunc:o(E=>E.gameStats.shinyPokemonSeen.toString(),"sourceFunc"),hidden:!0},shinyPokemonCaught:{label_key:"shiniesCaught",sourceFunc:o(E=>E.gameStats.shinyPokemonCaught.toString(),"sourceFunc"),hidden:!0},shinyPokemonHatched:{label_key:"shiniesHatched",sourceFunc:o(E=>E.gameStats.shinyPokemonHatched.toString(),"sourceFunc"),hidden:!0},pokemonFused:{label_key:"pokemonFused",sourceFunc:o(E=>E.gameStats.pokemonFused.toString(),"sourceFunc"),hidden:!0},trainersDefeated:{label_key:"trainersDefeated",sourceFunc:o(E=>E.gameStats.trainersDefeated.toString(),"sourceFunc")},eggsPulled:{label_key:"eggsPulled",sourceFunc:o(E=>E.gameStats.eggsPulled.toString(),"sourceFunc"),hidden:!0},rareEggsPulled:{label_key:"rareEggsPulled",sourceFunc:o(E=>E.gameStats.rareEggsPulled.toString(),"sourceFunc"),hidden:!0},epicEggsPulled:{label_key:"epicEggsPulled",sourceFunc:o(E=>E.gameStats.epicEggsPulled.toString(),"sourceFunc"),hidden:!0},legendaryEggsPulled:{label_key:"legendaryEggsPulled",sourceFunc:o(E=>E.gameStats.legendaryEggsPulled.toString(),"sourceFunc"),hidden:!0},manaphyEggsPulled:{label_key:"manaphyEggsPulled",sourceFunc:o(E=>E.gameStats.manaphyEggsPulled.toString(),"sourceFunc"),hidden:!0}},uK=class uK extends Js{constructor(A=null){super(A),this.statLabels=[],this.statValues=[]}setup(){const A=this.getUi();this.gameStatsContainer=a.add.container(1,-(a.game.canvas.height/6)+1),this.gameStatsContainer.setInteractive(new TE.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),TE.Geom.Rectangle.Contains);const s=Gt(0,0,a.game.canvas.width/6-2,24);s.setOrigin(0,0);const R=Se(0,0,u.t("gameStatsUiHandler:stats"),k.SETTINGS_LABEL);R.setOrigin(0,0),R.setPositionRelative(s,8,4);const n=(a.game.canvas.width/6-2)/2,[I,r]=new Array(2).fill(null).map((N,l)=>{const C=n+2,U=Math.floor(a.game.canvas.height/6-s.height-2),D=Gt((n-2)*l,s.height,C,U,!1,!1,l>0?-3:0,1);return D.setOrigin(0,0),D});this.statsContainer=a.add.container(0,0),new Array(18).fill(null).map((N,l)=>{const C=Se(8+(l%2===1?n:0),28+Math.floor(l/2)*16,"",k.STATS_LABEL);C.setOrigin(0,0),this.statsContainer.add(C),this.statLabels.push(C);const U=Se(n*(l%2+1)-8,C.y,"",k.STATS_VALUE);U.setOrigin(1,0),this.statsContainer.add(U),this.statValues.push(U)}),this.gameStatsContainer.add(s),this.gameStatsContainer.add(R),this.gameStatsContainer.add(I),this.gameStatsContainer.add(r),this.gameStatsContainer.add(this.statsContainer);const L=a.uiTheme===HO.LEGACY;this.arrowDown=a.add.sprite(n,a.game.canvas.height/6-(L?9:5),"prompt"),this.gameStatsContainer.add(this.arrowDown),this.arrowUp=a.add.sprite(n,s.height+(L?7:3),"prompt"),this.arrowUp.flipY=!0,this.gameStatsContainer.add(this.arrowUp),A.add(this.gameStatsContainer),this.setCursor(0),this.gameStatsContainer.setVisible(!1)}show(A){return super.show(A),this.setCursor(0),this.updateStats(),this.arrowUp.play("prompt"),this.arrowDown.play("prompt"),a.uiTheme===HO.LEGACY&&(this.arrowUp.setTint(4737096),this.arrowDown.setTint(4737096)),this.updateArrows(),this.gameStatsContainer.setVisible(!0),this.getUi().moveTo(this.gameStatsContainer,this.getUi().length-1),this.getUi().hideTooltip(),!0}updateStats(){const A=Object.keys(MO).slice(this.cursor*2,this.cursor*2+18);if(A.forEach((s,R)=>{const n=MO[s],I=n.sourceFunc(a.gameData);this.statLabels[R].setText(!n.hidden||Number.isNaN(Number.parseInt(I))||Number.parseInt(I)?u.t(`gameStatsUiHandler:${n.label_key}`):"???"),this.statValues[R].setText(I)}),A.length<18)for(let s=A.length;s<18;s++)this.statLabels[s].setText(""),this.statValues[s].setText("")}updateArrows(){const A=this.cursor>0;this.arrowUp.setVisible(A);const s=this.cursor<Math.ceil((Object.keys(MO).length-18)/2);this.arrowDown.setVisible(s)}processInput(A){const s=this.getUi();let R=!1;if(A===X.CANCEL)R=!0,a.ui.revertMode();else switch(A){case X.UP:this.cursor&&(R=this.setCursor(this.cursor-1));break;case X.DOWN:this.cursor<Math.ceil((Object.keys(MO).length-18)/2)&&(R=this.setCursor(this.cursor+1));break}return R&&s.playSelect(),R}setCursor(A){const s=super.setCursor(A);return s&&(this.updateStats(),this.updateArrows()),s}clear(){super.clear(),this.gameStatsContainer.setVisible(!1)}};o(uK,"GameStatsUiHandler");let v_=uK;function OJ(){const E=Object.keys(MO);for(const A of E){if(typeof MO[A]=="string"){let s=MO[A],R=!1;s.endsWith("?")&&(s=s.slice(0,-1),R=!0),MO[A]={label_key:s,sourceFunc:o(n=>n.gameStats[A].toString(),"sourceFunc"),hidden:R}}else MO[A]===null&&(MO[A]={sourceFunc:o(s=>s.gameStats[A].toString(),"sourceFunc")});if(!MO[A].label_key){const s=A.replace(/([a-z]{2,})([A-Z]{1}(?:[^A-Z]|$))/g,"$1_$2");MO[A].label_key=aa(`${s[0].toUpperCase()}${s.slice(1)}`)}}}o(OJ,"initStatsKeys");const nJ=15,aJ=10,q6=15,iJ=[...Array(nJ).fill("battlesWon"),...Array(aJ).fill("underratedPokemon"),"joinTheDiscord","infiniteLevels","everythingIsStackable","optionalSaveScumming","biomes","openSource","playWithSpeed","liveBugTesting","heavyInfluence","pokemonRiskAndPokemonRain","nowWithMoreSalt","infiniteFusionAtHome","brokenEggMoves","magnificent","doPeopleReadThis","thatsCrazy","gottaCatchEmAll","questionableBalancing","coolShaders","aiFree","suddenDifficultySpikes","basedOnAnUnfinishedFlashGame","moreAddictiveThanIntended","mostlyConsistentSeeds","achievementPointsDontDoAnything","nothingBeatsAJellyFilledDonut","dontTalkAboutThePokemonIncident","alsoTryPokengine","alsoTryEmeraldRogue","alsoTryRadicalRed","eeveeExpo","checkOutYnoproject","breedersInSpace","alsoTryPokemonUnbound","tryTheJohtoDragonChallenge","basicReadingAbilityRecommended","shoutoutsToTheArtists","gamblingNotEncouraged","dontForgetToTakeABreak","wEvent","ifItsNotAccurateItsAccurate","everyLossIsProgressMade","liveWoChienReaction","itsAFeatureNotABug","theEggsAreNotForEating","7.8outOf10TooManyWaterBiomes","butNothingHappened","thePowerOfScienceIsAmazing","freeToPlay","theresATimeAndPlaceForEverything","nowWithShinierShinies","smilesGoForMiles","certainlyNotDragonFree","haveANiceDay","redacted","hi","transRights","shinyOddsHigherThanYouThink","noFalseTrades","notForProfit","timeForYourDailyRun","moreEggsThanADaycare","disclaimerHarshSunDoesNotGiveVitaminD","whoNeedsAMap","luxrayIsNotADarkType","selfDestructiveEncounters","mostOptionsAreViable","pokerogueMorse","smiley","beAwareOfPassives","asSeenOnTheWorldWideWeb","vaultinVeluzas","tooManyStarters","checkTheWiki","winWithYourFavorites","alsoTryPokerogueWait","theWayISeeItKyogreIsSurrounded","tryOutHoneyGather","notForTheFaintOfHeart","p","flipYourDeviceToEvolveInkay","inArceusWeTrust","whyDidTheTorchicCrossTheRoad","goodLuck","fuseWisely","compensation","prepareForTroubleAndMakeItDouble","anEggForYourTroubles","regirock","hereForAGoodTime","getGoodOrDont","checkTheSubreddit","betterNerfGreninja","inCaseOfUpdateClearYourCache","insertTextHere","endingEndlessNotFound","iLikeMyEggsVouchered","YOU","noAddedSugar","notSponsored","notRated","justOneMoreWaveMom","saltCured","onlyOnPokerogueNet","pixelPerfection","openSource","probablyGood","itsAMonsterHouse","dontForgetYourPassword","tripleTripleTripleAxel","questionExclamation","clownEncounters","fullOfBerries","limitsAreMeantToBeBrokenSometimes","keepItCasual","serversProbablyWorking","mew","makeItRainAndYourProblemsGoAway","customMusicTracks","youAreValid","number591IsLookingOff","timeForYourDeliDelivery","goodFirstImpression","iPreferRarerCandies","pocketRoguelite","porygonDidNothingWrong","critMattered","pickupNotRequired","stayHydrated","alsoTryCobblemon","alsoTryPokeDoku","mySleepStyleIsDoesnt","makeYourOwnWorldChampDifference","yoChampInTheMaking","notLiableForDecisionAnxiety","theAirIsTastyHere","continue","startANewRunToday","neverGiveUp","theresAlwaysNextTime","oneTwoThreeAndPoof","yourPokemonOnlyGoToLevelOneHundred","theBattlesWillBeLegendary","levelCurveBetterThanJohto","alsoTryShowering","wellStillBeHere","weHopeToSeeYouAgain","aHealthyTeamCanMeanGreaterRewards","aWildPokemonAppeared","isThisThingOn","needsMoreTesting","whoChecksStatChanges","whenTwoTrainersEyesMeet","notOfficiallyOnSteam","fiftyFifty","metaNotIncluded","bornToBeAWinner","onARollout","itsAlwaysNightDeepInTheAbyss","folksThisIsInsane"],IJ=[{name:"New Year's",start:"01-01",end:"01-15",messages:["newYears.happyNewYear","newYears.andAHappyNewYear"]},{name:"Valentines",start:"02-07",end:"02-21",messages:["valentines.happyValentines","valentines.fullOfLove","valentines.applinForYou","valentines.thePowerOfLoveIsThreeThirtyBST","valentines.haveAHeartScale","valentines.i<3You"]},{name:"April Fools",start:"04-01",end:"04-03",messages:["aprilFools.battlesOne","aprilFools.aprilFools","aprilFools.removedPokemon","aprilFools.helloKyleAmber","aprilFools.gotcha","aprilFools.alsoTryPokerogueTwo","aprilFools.nowWithSameScumCountermeasures","aprilFools.neverGonnaGiveYouGoodRolls","aprilFools.youBumblingBuffoon","aprilFools.doubleShinyOddsForTrainersOnly","aprilFools.nowWithZMoves","aprilFools.newLightType","aprilFools.removedMegas","aprilFools.nerfedYourFavorites","aprilFools.grrr","aprilFools.enabledEternatusPassiveGoodLuck","aprilFools.theDarkestDaySoundsLikeAFutureProblem","aprilFools.tmShopWhen","aprilFools.whoIsFinn","aprilFools.watchOutForShadowPokemon","aprilFools.nowWithDarkTypeLuxray","aprilFools.onlyOnPokerogueNetAGAIN","aprilFools.noFreeVouchers","aprilFools.altffourAchievementPoints","aprilFools.rokePogue","aprilFools.readMe","aprilFools.winningNotIncluded","aprilFools.timeForYourSoloUnownRun","aprilFools.nowARealTimeStrategyGame","aprilFools.nowWithQuickTimeEncounters","aprilFools.timeYourInputsForHigherCatchrate","aprilFools.certifiedButtonSimulator","aprilFools.iHopeYouGetSuckerPunched"]},{name:"Halloween",start:"10-15",end:"10-31",messages:["halloween.happyHalloween","halloween.boo","halloween.pumpkabooAbout","halloween.mayContainSpiders","halloween.spookyScarySkeledirge","halloween.gourgeistUsedTrickOrTreat","halloween.letsSnuggleForever"]},{name:"Winter Holiday",start:"12-01",end:"12-31",messages:["winterHoliday.happyHolidays","winterHoliday.unaffilicatedWithDelibirdServices","winterHoliday.delibirdSeason","winterHoliday.diamondsFromTheSky","winterHoliday.holidayStylePikachuNotIncluded","winterHoliday.delibirdDirectlyToYourHouse","winterHoliday.haveAnIceDay","winterHoliday.spinTheClaydol","winterHoliday.beGoodForGoodnessSake","winterHoliday.moomooMilkAndLavaCookies","winterHoliday.iNeedAYacheBerry","winterHoliday.getJolly","winterHoliday.tisTheSeasonToBeSpeSpa","winterHoliday.deckTheHalls","winterHoliday.saveScummingGetsYouOnTheNaughtyList","winterHoliday.badTrainersGetRolycoly"]}];function rJ(){const E=[...iJ];for(const{name:A,start:s,end:R,messages:n}of IJ){const I=new Date,r=new Date(`${s}-${I.getFullYear()}`),L=new Date(`${R}-${I.getFullYear()}`);if(I>=r&&I<=L){`${n.length}${A}${q6}`;for(const N of n){const l=Array(q6).fill(N);E.push(...l)}}}return E.map(A=>`splashMessages:${A}`)}o(rJ,"getSplashMessages");const yo=class yo extends BS{constructor(A=te.TITLE){super(A)}setup(){super.setup();const A=this.getUi();this.titleContainer=a.add.container(0,-(a.game.canvas.height/6)),this.titleContainer.setName("title"),this.titleContainer.setAlpha(0),A.add(this.titleContainer);const s=a.add.image(a.game.canvas.width/6/2,8,"logo");s.setOrigin(.5,0),this.titleContainer.add(s),EE.isEventActive()&&(this.eventDisplay=new ch(0,0,EE.activeEvent()),this.eventDisplay.setup(),this.titleContainer.add(this.eventDisplay)),this.playerCountLabel=Se(a.game.canvas.width/6-2,0,`? ${u.t("menu:playersOnline")}`,k.MESSAGE,{fontSize:"54px"}),this.playerCountLabel.setOrigin(1,0),this.titleContainer.add(this.playerCountLabel),this.splashMessageText=Se(s.x+64,s.y+s.displayHeight-8,"",k.MONEY,{fontSize:"54px"}),this.splashMessageText.setOrigin(.5,.5),this.splashMessageText.setAngle(-20),this.titleContainer.add(this.splashMessageText);const R=this.splashMessageText.scale;a.tweens.add({targets:this.splashMessageText,duration:Ot(350),scale:R*1.25,loop:-1,yoyo:!0}),this.appVersionText=Se(s.x-60,s.y+s.displayHeight+4,"",k.MONEY,{fontSize:"54px"}),this.appVersionText.setOrigin(.5,.5),this.appVersionText.setAngle(0),this.titleContainer.add(this.appVersionText)}updateTitleStats(){_O.getGameTitleStats().then(A=>{A&&(this.playerCountLabel.setText(`${A.playerCount} ${u.t("menu:playersOnline")}`),this.splashMessage==="splashMessages:battlesWon"&&this.splashMessageText.setText(u.t(this.splashMessage,{count:A.battleCount})))}).catch(A=>{console.error(`Failed to fetch title stats:
`,A)})}randomPokemon(){const A=YA(1025,1),s=$e(A);(this.splashMessage==="splashMessages:underratedPokemon"||this.splashMessage==="splashMessages:dontTalkAboutThePokemonIncident"||this.splashMessage==="splashMessages:aWildPokemonAppeared"||this.splashMessage==="splashMessages:aprilFools.removedPokemon")&&this.splashMessageText.setText(u.t(this.splashMessage,{pokemonName:s.name}))}genderSplash(){this.splashMessage==="splashMessages:aprilFools.helloKyleAmber"&&(a.gameData.gender===Jt.MALE?this.splashMessageText.setText(u.t(this.splashMessage,{name:u.t("trainerNames:player_m")})):this.splashMessageText.setText(u.t(this.splashMessage,{name:u.t("trainerNames:player_f")})))}show(A){const s=super.show(A);if(s){this.playerCountLabel.setY(a.game.canvas.height/6-13-this.getWindowHeight()),this.splashMessage=y7(rJ()),this.splashMessageText.setText(u.t(this.splashMessage,{count:yo.BATTLES_WON_FALLBACK})),this.appVersionText.setText("v"+tk);const R=this.getUi();EE.isEventActive()&&(this.eventDisplay.setWidth(a.scaledCanvas.width-this.optionSelectBg.width-this.optionSelectBg.x),this.eventDisplay.show()),this.randomPokemon(),this.genderSplash(),this.updateTitleStats(),this.titleStatsTimer=setInterval(()=>{this.updateTitleStats()},6e4),a.tweens.add({targets:[this.titleContainer,R.getMessageHandler().bg],duration:Ot(325),alpha:o(n=>n===this.titleContainer?1:0,"alpha"),ease:"Sine.easeInOut"})}return s}clear(){var s;super.clear();const A=this.getUi();(s=this.eventDisplay)==null||s.clear(),this.titleStatsTimer&&clearInterval(this.titleStatsTimer),this.titleStatsTimer=null,a.tweens.add({targets:[this.titleContainer,A.getMessageHandler().bg],duration:Ot(325),alpha:o(R=>R===this.titleContainer?0:1,"alpha"),ease:"Sine.easeInOut"})}};o(yo,"TitleUiHandler"),yo.BATTLES_WON_FALLBACK=-1;let V_=yo;const UK=class UK extends Phaser.GameObjects.Container{constructor(){super(a,a.game.canvas.width/6-4,a.game.canvas.height/6-4)}setup(){this.icon=a.add.sprite(0,0,"saving_icon"),this.icon.setOrigin(1,1),this.add(this.icon),this.animActive=!1,this.shown=!1,this.setAlpha(0),this.setVisible(!1)}show(){this.shown=!0,!this.animActive&&(this.animActive=!0,a.tweens.add({targets:this,alpha:1,duration:Ot(250),ease:"Sine.easeInOut",onComplete:o(()=>{a.time.delayedCall(Ot(500),()=>{this.animActive=!1,this.shown||this.hide()})},"onComplete")}),this.setVisible(!0),this.shown=!0)}hide(){this.shown=!1,!this.animActive&&(this.animActive=!0,a.tweens.add({targets:this,alpha:0,duration:Ot(250),ease:"Sine.easeInOut",onComplete:o(()=>{this.animActive=!1,this.setVisible(!1),this.shown&&this.show()},"onComplete")}),this.shown=!1)}};o(UK,"SavingIconHandler");let x_=UK;const DK=class DK extends jr{constructor(A=null){super(A),this.minTime=1e3*5,this.maxTime=1e3*60*5,this.randVarianceTime=1e3*10,this.reconnectDuration=this.minTime}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 64}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=Se(this.getWidth()/2,this.getHeight()/2,u.t("menu:errorServerDown"),k.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}tryReconnect(){uu().then(A=>{A[0]||[200,400].includes(A[1])?(this.reconnectTimer=null,this.reconnectDuration=this.minTime,a.playSound("se/pb_bounce_1"),this.reconnectCallback()):A[1]===401?(w7(v7),a.reset(!0,!0)):(this.reconnectDuration=Math.min(this.reconnectDuration*2,this.maxTime),this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration+Math.random()*this.randVarianceTime))})}show(A){if(A.length>=1&&A[0]instanceof Function){const s={buttonActions:[]};return this.reconnectCallback=A[0],this.reconnectDuration=this.minTime,this.reconnectTimer=setTimeout(()=>this.tryReconnect(),this.reconnectDuration),super.show([s])}return!1}};o(DK,"UnavailableModalUiHandler");let b_=DK;const MK=class MK extends jr{constructor(A=null){super(A)}getModalTitle(){return""}getWidth(){return 160}getHeight(){return 32}getMargin(){return[0,0,48,0]}getButtonLabels(){return[]}setup(){super.setup();const A=Se(this.getWidth()/2,this.getHeight()/2,`Your session is out of date.
Your data will be reloaded…`,k.WINDOW,{fontSize:"48px",align:"center"});A.setOrigin(.5,.5),this.modalContainer.add(A)}show(A){const s={buttonActions:[]};return super.show([s])}};o(MK,"SessionReloadModalUiHandler");let k_=MK;const cK=class cK extends Js{constructor(A=null){super(A),this.listening=!1,this.buttonPressed=null,this.timeLeftAutoClose=5}setup(){const A=this.getUi();this.optionSelectContainer=a.add.container(0,0),this.actionsContainer=a.add.container(0,0),this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),A.add(this.optionSelectContainer),A.add(this.actionsContainer),this.titleBg=Gt(a.game.canvas.width/6-this.getWindowWidth(),-(a.game.canvas.height/6)+28+21,this.getWindowWidth(),24),this.titleBg.setOrigin(.5),this.optionSelectContainer.add(this.titleBg),this.actionBg=Gt(a.game.canvas.width/6-this.getWindowWidth(),-(a.game.canvas.height/6)+this.getWindowHeight()+28+21+21,this.getWindowWidth(),24),this.actionBg.setOrigin(.5),this.actionsContainer.add(this.actionBg),this.unlockText=Se(0,0,u.t("settings:pressButton"),k.WINDOW),this.unlockText.setOrigin(0,0),this.unlockText.setPositionRelative(this.titleBg,36,4),this.optionSelectContainer.add(this.unlockText),this.timerText=Se(0,0,"(5)",k.WINDOW),this.timerText.setOrigin(0,0),this.timerText.setPositionRelative(this.unlockText,this.unlockText.width/6+5,0),this.optionSelectContainer.add(this.timerText),this.optionSelectBg=Gt(a.game.canvas.width/6-this.getWindowWidth(),-(a.game.canvas.height/6)+this.getWindowHeight()+28,this.getWindowWidth(),this.getWindowHeight()),this.optionSelectBg.setOrigin(.5),this.optionSelectContainer.add(this.optionSelectBg),this.cancelLabel=Se(0,0,u.t("settings:back"),k.SETTINGS_LABEL),this.cancelLabel.setOrigin(0,.5),this.cancelLabel.setPositionRelative(this.actionBg,10,this.actionBg.height/2),this.actionsContainer.add(this.cancelLabel)}manageAutoCloseTimer(){clearTimeout(this.countdownTimer),this.countdownTimer=setTimeout(()=>{var A;this.timeLeftAutoClose-=1,this.timerText.setText(`(${this.timeLeftAutoClose})`),this.timeLeftAutoClose>=0?this.manageAutoCloseTimer():(A=this.cancelFn)==null||A.call(this)},1e3)}show(A){return super.show(A),this.buttonPressed=null,this.timeLeftAutoClose=5,this.cancelFn=A[0].cancelHandler,this.target=A[0].target,this.getUi().bringToTop(this.optionSelectContainer),this.getUi().bringToTop(this.actionsContainer),this.optionSelectContainer.setVisible(!0),setTimeout(()=>{this.listening=!0,this.manageAutoCloseTimer()},100),!0}getWindowWidth(){return 160}getWindowHeight(){return 64}processInput(A){var n,I;if(this.buttonPressed===null)return!1;const s=this.getUi();let R=!1;switch(A){case X.LEFT:case X.RIGHT:{R=this.setCursor(this.cursor?0:1);break}case X.ACTION:this.cursor===0?(n=this.cancelFn)==null||n.call(this):(R=this.swapAction(),NO.getInstance().updateIcons(),(I=this.cancelFn)==null||I.call(this,R));break}return R?s.playSelect():s.playError(),R}setCursor(A){return this.cursor=A,A===1?(this.actionLabel.setColor(this.getTextColor(k.SETTINGS_SELECTED)),this.actionLabel.setShadowColor(this.getTextColor(k.SETTINGS_SELECTED,!0)),this.cancelLabel.setColor(this.getTextColor(k.WINDOW)),this.cancelLabel.setShadowColor(this.getTextColor(k.WINDOW,!0)),!0):(this.actionLabel.setColor(this.getTextColor(k.WINDOW)),this.actionLabel.setShadowColor(this.getTextColor(k.WINDOW,!0)),this.cancelLabel.setColor(this.getTextColor(k.SETTINGS_SELECTED)),this.cancelLabel.setShadowColor(this.getTextColor(k.SETTINGS_SELECTED,!0)),!0)}clear(){super.clear(),clearTimeout(this.countdownTimer),this.timerText.setText("(5)"),this.timeLeftAutoClose=5,this.listening=!1,this.target=null,this.cancelFn=null,this.optionSelectContainer.setVisible(!1),this.actionsContainer.setVisible(!1),this.newButtonIcon.setVisible(!1),this.buttonPressed=null}onInputDown(A,s,R){clearTimeout(this.countdownTimer),this.timerText.setText(""),this.newButtonIcon.setTexture(R),this.newButtonIcon.setFrame(A),s&&(this.targetButtonIcon.setTexture(R),this.targetButtonIcon.setFrame(s),this.targetButtonIcon.setVisible(!0),this.swapText.setVisible(!0)),this.newButtonIcon.setVisible(!0),this.setCursor(0),this.actionsContainer.setVisible(!0)}};o(cK,"AbstractBindingUiHandler");let Zu=cK;const hK=class hK extends Zu{constructor(A=null){var s;super(A),(s=a.input.gamepad)==null||s.on("down",this.gamepadButtonDown,this)}setup(){super.setup(),this.newButtonIcon=a.add.sprite(0,0,"xbox"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,16),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.swapText=Se(0,0,"will swap with",k.WINDOW),this.swapText.setOrigin(.5),this.swapText.setPositionRelative(this.optionSelectBg,this.optionSelectBg.width/2-2,this.optionSelectBg.height/2-2),this.swapText.setVisible(!1),this.targetButtonIcon=a.add.sprite(0,0,"xbox"),this.targetButtonIcon.setPositionRelative(this.optionSelectBg,78,48),this.targetButtonIcon.setOrigin(.5),this.targetButtonIcon.setVisible(!1),this.actionLabel=Se(0,0,"Confirm swap",k.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-75,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon),this.optionSelectContainer.add(this.swapText),this.optionSelectContainer.add(this.targetButtonIcon)}getSelectedDevice(){var A;return(A=a.inputController)==null?void 0:A.selectedDevice[oA.GAMEPAD]}gamepadButtonDown(A,s,R){const n=[12,13,14,15];if(!this.listening||A.id.toLowerCase()!==this.getSelectedDevice()||n.includes(s.index)||this.buttonPressed!==null)return;const I=a.inputController.getActiveConfig(oA.GAMEPAD),r=I.padType,L=Jr(I,s.index),N=I.icons[L];if(!N)return;this.buttonPressed=s.index;const l=vu(I,this.target);this.onInputDown(N,l,r)}swapAction(){const A=a.inputController.getActiveConfig(oA.GAMEPAD);return a.inputController.assignBinding(A,this.target,this.buttonPressed)?(a.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}clear(){super.clear(),this.targetButtonIcon.setVisible(!1),this.swapText.setVisible(!1)}};o(hK,"GamepadBindingUiHandler");let Z_=hK;const X_={padID:"default",padType:"keyboard",deviceMapping:{KEY_A:Phaser.Input.Keyboard.KeyCodes.A,KEY_B:Phaser.Input.Keyboard.KeyCodes.B,KEY_C:Phaser.Input.Keyboard.KeyCodes.C,KEY_D:Phaser.Input.Keyboard.KeyCodes.D,KEY_E:Phaser.Input.Keyboard.KeyCodes.E,KEY_F:Phaser.Input.Keyboard.KeyCodes.F,KEY_G:Phaser.Input.Keyboard.KeyCodes.G,KEY_H:Phaser.Input.Keyboard.KeyCodes.H,KEY_I:Phaser.Input.Keyboard.KeyCodes.I,KEY_J:Phaser.Input.Keyboard.KeyCodes.J,KEY_K:Phaser.Input.Keyboard.KeyCodes.K,KEY_L:Phaser.Input.Keyboard.KeyCodes.L,KEY_M:Phaser.Input.Keyboard.KeyCodes.M,KEY_N:Phaser.Input.Keyboard.KeyCodes.N,KEY_O:Phaser.Input.Keyboard.KeyCodes.O,KEY_P:Phaser.Input.Keyboard.KeyCodes.P,KEY_Q:Phaser.Input.Keyboard.KeyCodes.Q,KEY_R:Phaser.Input.Keyboard.KeyCodes.R,KEY_S:Phaser.Input.Keyboard.KeyCodes.S,KEY_T:Phaser.Input.Keyboard.KeyCodes.T,KEY_U:Phaser.Input.Keyboard.KeyCodes.U,KEY_V:Phaser.Input.Keyboard.KeyCodes.V,KEY_W:Phaser.Input.Keyboard.KeyCodes.W,KEY_X:Phaser.Input.Keyboard.KeyCodes.X,KEY_Y:Phaser.Input.Keyboard.KeyCodes.Y,KEY_Z:Phaser.Input.Keyboard.KeyCodes.Z,KEY_0:Phaser.Input.Keyboard.KeyCodes.ZERO,KEY_1:Phaser.Input.Keyboard.KeyCodes.ONE,KEY_2:Phaser.Input.Keyboard.KeyCodes.TWO,KEY_3:Phaser.Input.Keyboard.KeyCodes.THREE,KEY_4:Phaser.Input.Keyboard.KeyCodes.FOUR,KEY_5:Phaser.Input.Keyboard.KeyCodes.FIVE,KEY_6:Phaser.Input.Keyboard.KeyCodes.SIX,KEY_7:Phaser.Input.Keyboard.KeyCodes.SEVEN,KEY_8:Phaser.Input.Keyboard.KeyCodes.EIGHT,KEY_9:Phaser.Input.Keyboard.KeyCodes.NINE,KEY_CTRL:Phaser.Input.Keyboard.KeyCodes.CTRL,KEY_DEL:Phaser.Input.Keyboard.KeyCodes.DELETE,KEY_END:Phaser.Input.Keyboard.KeyCodes.END,KEY_ENTER:Phaser.Input.Keyboard.KeyCodes.ENTER,KEY_ESC:Phaser.Input.Keyboard.KeyCodes.ESC,KEY_F1:Phaser.Input.Keyboard.KeyCodes.F1,KEY_F2:Phaser.Input.Keyboard.KeyCodes.F2,KEY_F3:Phaser.Input.Keyboard.KeyCodes.F3,KEY_F4:Phaser.Input.Keyboard.KeyCodes.F4,KEY_F5:Phaser.Input.Keyboard.KeyCodes.F5,KEY_F6:Phaser.Input.Keyboard.KeyCodes.F6,KEY_F7:Phaser.Input.Keyboard.KeyCodes.F7,KEY_F8:Phaser.Input.Keyboard.KeyCodes.F8,KEY_F9:Phaser.Input.Keyboard.KeyCodes.F9,KEY_F10:Phaser.Input.Keyboard.KeyCodes.F10,KEY_F11:Phaser.Input.Keyboard.KeyCodes.F11,KEY_F12:Phaser.Input.Keyboard.KeyCodes.F12,KEY_HOME:Phaser.Input.Keyboard.KeyCodes.HOME,KEY_INSERT:Phaser.Input.Keyboard.KeyCodes.INSERT,KEY_PAGE_DOWN:Phaser.Input.Keyboard.KeyCodes.PAGE_DOWN,KEY_PAGE_UP:Phaser.Input.Keyboard.KeyCodes.PAGE_UP,KEY_PLUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_ADD,KEY_MINUS:Phaser.Input.Keyboard.KeyCodes.NUMPAD_SUBTRACT,KEY_QUOTATION:Phaser.Input.Keyboard.KeyCodes.QUOTES,KEY_SHIFT:Phaser.Input.Keyboard.KeyCodes.SHIFT,KEY_SPACE:Phaser.Input.Keyboard.KeyCodes.SPACE,KEY_TAB:Phaser.Input.Keyboard.KeyCodes.TAB,KEY_TILDE:Phaser.Input.Keyboard.KeyCodes.BACKTICK,KEY_ARROW_UP:Phaser.Input.Keyboard.KeyCodes.UP,KEY_ARROW_DOWN:Phaser.Input.Keyboard.KeyCodes.DOWN,KEY_ARROW_LEFT:Phaser.Input.Keyboard.KeyCodes.LEFT,KEY_ARROW_RIGHT:Phaser.Input.Keyboard.KeyCodes.RIGHT,KEY_LEFT_BRACKET:Phaser.Input.Keyboard.KeyCodes.OPEN_BRACKET,KEY_RIGHT_BRACKET:Phaser.Input.Keyboard.KeyCodes.CLOSED_BRACKET,KEY_SEMICOLON:Phaser.Input.Keyboard.KeyCodes.SEMICOLON,KEY_BACKSPACE:Phaser.Input.Keyboard.KeyCodes.BACKSPACE,KEY_ALT:Phaser.Input.Keyboard.KeyCodes.ALT},icons:{KEY_A:"A.png",KEY_B:"B.png",KEY_C:"C.png",KEY_D:"D.png",KEY_E:"E.png",KEY_F:"F.png",KEY_G:"G.png",KEY_H:"H.png",KEY_I:"I.png",KEY_J:"J.png",KEY_K:"K.png",KEY_L:"L.png",KEY_M:"M.png",KEY_N:"N.png",KEY_O:"O.png",KEY_P:"P.png",KEY_Q:"Q.png",KEY_R:"R.png",KEY_S:"S.png",KEY_T:"T.png",KEY_U:"U.png",KEY_V:"V.png",KEY_W:"W.png",KEY_X:"X.png",KEY_Y:"Y.png",KEY_Z:"Z.png",KEY_0:"0.png",KEY_1:"1.png",KEY_2:"2.png",KEY_3:"3.png",KEY_4:"4.png",KEY_5:"5.png",KEY_6:"6.png",KEY_7:"7.png",KEY_8:"8.png",KEY_9:"9.png",KEY_F1:"F1.png",KEY_F2:"F2.png",KEY_F3:"F3.png",KEY_F4:"F4.png",KEY_F5:"F5.png",KEY_F6:"F6.png",KEY_F7:"F7.png",KEY_F8:"F8.png",KEY_F9:"F9.png",KEY_F10:"F10.png",KEY_F11:"F11.png",KEY_F12:"F12.png",KEY_PAGE_DOWN:"PAGE_DOWN.png",KEY_PAGE_UP:"PAGE_UP.png",KEY_CTRL:"CTRL.png",KEY_DEL:"DEL.png",KEY_END:"END.png",KEY_ENTER:"ENTER.png",KEY_ESC:"ESC.png",KEY_HOME:"HOME.png",KEY_INSERT:"INS.png",KEY_PLUS:"PLUS.png",KEY_MINUS:"MINUS.png",KEY_QUOTATION:"QUOTE.png",KEY_SHIFT:"SHIFT.png",KEY_SPACE:"SPACE.png",KEY_TAB:"TAB.png",KEY_TILDE:"TILDE.png",KEY_ARROW_UP:"KEY_ARROW_UP.png",KEY_ARROW_DOWN:"KEY_ARROW_DOWN.png",KEY_ARROW_LEFT:"KEY_ARROW_LEFT.png",KEY_ARROW_RIGHT:"KEY_ARROW_RIGHT.png",KEY_LEFT_BRACKET:"LEFT_BRACKET.png",KEY_RIGHT_BRACKET:"RIGHT_BRACKET.png",KEY_SEMICOLON:"SEMICOLON.png",KEY_BACKSPACE:"BACK.png",KEY_ALT:"ALT.png"},settings:{[ot.Button_Up]:X.UP,[ot.Button_Down]:X.DOWN,[ot.Button_Left]:X.LEFT,[ot.Button_Right]:X.RIGHT,[ot.Button_Submit]:X.SUBMIT,[ot.Button_Action]:X.ACTION,[ot.Button_Cancel]:X.CANCEL,[ot.Button_Menu]:X.MENU,[ot.Button_Stats]:X.STATS,[ot.Button_Cycle_Shiny]:X.CYCLE_SHINY,[ot.Button_Cycle_Form]:X.CYCLE_FORM,[ot.Button_Cycle_Gender]:X.CYCLE_GENDER,[ot.Button_Cycle_Ability]:X.CYCLE_ABILITY,[ot.Button_Cycle_Nature]:X.CYCLE_NATURE,[ot.Button_Speed_Up]:X.SPEED_UP,[ot.Button_Slow_Down]:X.SLOW_DOWN,[ot.Button_Cycle_Tera]:X.CYCLE_TERA,[ot.Alt_Button_Up]:X.UP,[ot.Alt_Button_Down]:X.DOWN,[ot.Alt_Button_Left]:X.LEFT,[ot.Alt_Button_Right]:X.RIGHT,[ot.Alt_Button_Submit]:X.SUBMIT,[ot.Alt_Button_Action]:X.ACTION,[ot.Alt_Button_Cancel]:X.CANCEL,[ot.Alt_Button_Menu]:X.MENU,[ot.Alt_Button_Stats]:X.STATS,[ot.Alt_Button_Cycle_Shiny]:X.CYCLE_SHINY,[ot.Alt_Button_Cycle_Form]:X.CYCLE_FORM,[ot.Alt_Button_Cycle_Gender]:X.CYCLE_GENDER,[ot.Alt_Button_Cycle_Ability]:X.CYCLE_ABILITY,[ot.Alt_Button_Cycle_Nature]:X.CYCLE_NATURE,[ot.Alt_Button_Speed_Up]:X.SPEED_UP,[ot.Alt_Button_Slow_Down]:X.SLOW_DOWN,[ot.Alt_Button_Cycle_Tera]:X.CYCLE_TERA},default:{KEY_ARROW_UP:ot.Button_Up,KEY_ARROW_DOWN:ot.Button_Down,KEY_ARROW_LEFT:ot.Button_Left,KEY_ARROW_RIGHT:ot.Button_Right,KEY_ENTER:ot.Button_Submit,KEY_SPACE:ot.Button_Action,KEY_BACKSPACE:ot.Button_Cancel,KEY_ESC:ot.Button_Menu,KEY_C:ot.Button_Stats,KEY_R:ot.Button_Cycle_Shiny,KEY_F:ot.Button_Cycle_Form,KEY_G:ot.Button_Cycle_Gender,KEY_E:ot.Button_Cycle_Ability,KEY_N:ot.Button_Cycle_Nature,KEY_V:ot.Button_Cycle_Tera,KEY_PLUS:-1,KEY_MINUS:-1,KEY_A:ot.Alt_Button_Left,KEY_B:-1,KEY_D:ot.Alt_Button_Right,KEY_H:-1,KEY_I:-1,KEY_J:-1,KEY_K:-1,KEY_L:-1,KEY_M:ot.Alt_Button_Menu,KEY_O:-1,KEY_P:-1,KEY_Q:-1,KEY_S:ot.Alt_Button_Down,KEY_T:ot.Alt_Button_Cycle_Form,KEY_U:-1,KEY_W:ot.Alt_Button_Up,KEY_X:ot.Alt_Button_Cancel,KEY_Y:ot.Alt_Button_Cycle_Shiny,KEY_Z:ot.Alt_Button_Action,KEY_0:-1,KEY_1:-1,KEY_2:-1,KEY_3:-1,KEY_4:-1,KEY_5:-1,KEY_6:-1,KEY_7:-1,KEY_8:-1,KEY_9:-1,KEY_CTRL:-1,KEY_DEL:-1,KEY_END:-1,KEY_F1:-1,KEY_F2:-1,KEY_F3:-1,KEY_F4:-1,KEY_F5:-1,KEY_F6:-1,KEY_F7:-1,KEY_F8:-1,KEY_F9:-1,KEY_F10:-1,KEY_F11:-1,KEY_F12:-1,KEY_HOME:-1,KEY_INSERT:-1,KEY_PAGE_DOWN:ot.Button_Slow_Down,KEY_PAGE_UP:ot.Button_Speed_Up,KEY_QUOTATION:-1,KEY_SHIFT:ot.Alt_Button_Stats,KEY_TAB:-1,KEY_TILDE:-1,KEY_LEFT_BRACKET:-1,KEY_RIGHT_BRACKET:-1,KEY_SEMICOLON:-1,KEY_ALT:-1},blacklist:["KEY_ENTER","KEY_ESC","KEY_SPACE","KEY_BACKSPACE","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_DEL","KEY_HOME"]},_K=class _K extends Vu{constructor(A=null){var n,I;super(A),this.setSetting=_k,this.titleSelected="Keyboard",this.setting=ot,this.settingDeviceDefaults=j9,this.settingDeviceOptions=z9,this.configs=[X_],this.commonSettingsCount=0,this.textureOverride="keyboard",this.localStoragePropertyName="settingsKeyboard",this.settingBlacklisted=q9,this.device=oA.KEYBOARD;const s=(n=a.input.keyboard)==null?void 0:n.addKey(Phaser.Input.Keyboard.KeyCodes.DELETE),R=(I=a.input.keyboard)==null?void 0:I.addKey(Phaser.Input.Keyboard.KeyCodes.HOME);s==null||s.on("up",this.onDeleteDown,this),R==null||R.on("up",this.onHomeDown,this)}setup(){super.setup(),this.layout.noKeyboard=new Map;const A=a.add.container(0,0);A.setVisible(!1);const s=Se(8,28,u.t("settings:keyboardPleasePress"),k.SETTINGS_LABEL);s.setOrigin(0,0),A.add(s),this.settingsContainer.add(A);const R=a.add.sprite(0,0,"keyboard");R.setOrigin(0,-.1),R.setPositionRelative(this.actionsBg,this.navigationContainer.width-260,4),this.navigationIcons.BUTTON_DELETE=R;const n=Se(0,0,u.t("settings:delete"),k.SETTINGS_LABEL);n.setOrigin(0,.15),n.setPositionRelative(R,-n.width/6-2,0),this.settingsContainer.add(R),this.settingsContainer.add(n),this.layout.noKeyboard.optionsContainer=A,this.layout.noKeyboard.label=s}onHomeDown(){[te.SETTINGS_KEYBOARD,te.SETTINGS_GAMEPAD].includes(a.ui.getMode())&&(a.gameData.resetMappingToFactory(),NO.getInstance().updateIcons())}onDeleteDown(){if(a.ui.getMode()!==te.SETTINGS_KEYBOARD)return;const A=this.cursor+this.scrollCursor,s=this.settingLabels[A].text,R=V7(s),n=ot[R],I=this.getActiveConfig();X$(this.getActiveConfig(),n)&&(this.saveCustomKeyboardMappingToLocalStorage(I),this.updateBindings(),NO.getInstance().updateIcons())}setLayout(A){return A?super.setLayout(A):(this.layout.noKeyboard.optionsContainer.setVisible(!0),!1)}updateChosenKeyboardDisplay(){this.updateBindings();for(const[A,s]of Object.keys(this.setting).entries())if(this.setting[s]===this.setting.Default_Layout)for(const n of Object.keys(this.layout))n!=="noKeyboard"&&this.layout[n].optionValueLabels[A][0].setText(Mf(a.inputController.selectedDevice[oA.KEYBOARD],22))}saveCustomKeyboardMappingToLocalStorage(A){var s;a.gameData.saveMappingConfigs((s=a.inputController)==null?void 0:s.selectedDevice[oA.KEYBOARD],A)}saveSettingToLocalStorage(A,s){this.setting[A]!==this.setting.Default_Layout&&a.gameData.saveControlSetting(this.device,this.localStoragePropertyName,A,this.settingDeviceDefaults,s)}};o(_K,"SettingsKeyboardUiHandler");let Xu=_K;const PK=class PK extends Zu{constructor(A=null){var s;super(A),(s=a.input.keyboard)==null||s.on("keydown",this.onKeyDown,this)}setup(){super.setup(),this.newButtonIcon=a.add.sprite(0,0,"keyboard"),this.newButtonIcon.setPositionRelative(this.optionSelectBg,78,32),this.newButtonIcon.setOrigin(.5),this.newButtonIcon.setVisible(!1),this.actionLabel=Se(0,0,"Assign button",k.SETTINGS_LABEL),this.actionLabel.setOrigin(0,.5),this.actionLabel.setPositionRelative(this.actionBg,this.actionBg.width-80,this.actionBg.height/2),this.actionsContainer.add(this.actionLabel),this.optionSelectContainer.add(this.newButtonIcon)}getSelectedDevice(){var A;return(A=a.inputController)==null?void 0:A.selectedDevice[oA.KEYBOARD]}onKeyDown(A){const s=[Phaser.Input.Keyboard.KeyCodes.UP,Phaser.Input.Keyboard.KeyCodes.DOWN,Phaser.Input.Keyboard.KeyCodes.LEFT,Phaser.Input.Keyboard.KeyCodes.RIGHT,Phaser.Input.Keyboard.KeyCodes.HOME,Phaser.Input.Keyboard.KeyCodes.ENTER,Phaser.Input.Keyboard.KeyCodes.ESC,Phaser.Input.Keyboard.KeyCodes.DELETE],R=A.keyCode;if(!this.listening||this.buttonPressed!==null||s.includes(R))return;const n=a.inputController.getActiveConfig(oA.KEYBOARD),I=Jr(n,R),r=n.icons[I];r&&(this.buttonPressed=R,this.onInputDown(r,null,"keyboard"))}swapAction(){const A=a.inputController.getActiveConfig(oA.KEYBOARD);return a.inputController.assignBinding(A,this.target,this.buttonPressed)?(a.gameData.saveMappingConfigs(this.getSelectedDevice(),A),!0):!1}};o(PK,"KeyboardBindingUiHandler");let Q_=PK;const GK=class GK extends fS{constructor(A=null){super(z0.DISPLAY,A),this.title="Display";const s=this.settings.findIndex(R=>R.key===St.Language);if(s>=0)switch(localStorage.getItem("prLang")){case"en":this.settings[s].options[0]={value:"English",label:"English"};break;case"es-ES":this.settings[s].options[0]={value:"Español (ES)",label:"Español (ES)"};break;case"es-MX":this.settings[s].options[0]={value:"Español (LATAM)",label:"Español (LATAM)"};break;case"it":this.settings[s].options[0]={value:"Italiano",label:"Italiano"};break;case"fr":this.settings[s].options[0]={value:"Français",label:"Français"};break;case"de":this.settings[s].options[0]={value:"Deutsch",label:"Deutsch"};break;case"pt-BR":this.settings[s].options[0]={value:"Português (BR)",label:"Português (BR)"};break;case"zh-CN":this.settings[s].options[0]={value:"简体中文",label:"简体中文"};break;case"zh-TW":this.settings[s].options[0]={value:"繁體中文",label:"繁體中文"};break;case"ko":case"ko-KR":this.settings[s].options[0]={value:"한국어",label:"한국어"};break;case"ja":this.settings[s].options[0]={value:"日本語",label:"日本語"};break;case"ca-ES":this.settings[s].options[0]={value:"Català",label:"Català"};break;default:this.settings[s].options[0]={value:"English",label:"English"};break}this.localStorageKey="settings"}};o(GK,"SettingsDisplayUiHandler");let Qu=GK;const dK=class dK extends fS{constructor(A=null){super(z0.AUDIO,A),this.title="Audio",this.localStorageKey="settings",this.rowsToDisplay=6}};o(dK,"SettingsAudioUiHandler");let $u=dK;const HK=class HK extends Ja{getModalTitle(A){return u.t("menu:renamePokemon")}getWidth(A){return 160}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[u.t("menu:rename"),u.t("menu:cancel")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:u.t("menu:nickname")}]}show(A){if(super.show(A)){const s=A[0];return A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=R=>{this.sanitizeInputs();const n=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return s.buttonActions[0](n),!0},!0}return!1}};o(HK,"RenameFormUiHandler");let $_=HK;const LJ=25,fK=class fK extends hs{constructor(){super(te.RUN_HISTORY),this.maxRows=3,this.scrollCursor=0}setup(){const A=this.getUi();this.runSelectContainer=a.add.container(0,0),this.runSelectContainer.setVisible(!1),A.add(this.runSelectContainer);const s=a.add.rectangle(0,0,a.game.canvas.width/6,-a.game.canvas.height/6,26720);s.setOrigin(0,0),this.runSelectContainer.add(s),this.runContainerInitialY=-a.game.canvas.height/6+8,this.runsContainer=a.add.container(8,this.runContainerInitialY),this.runSelectContainer.add(this.runsContainer),this.runs=[],a.loadImage("hall_of_fame_red","ui"),a.loadImage("hall_of_fame_blue","ui"),a.loadAtlas("rival_f","trainer"),a.loadAtlas("rival_m","trainer")}show(A){return super.show(A),this.getUi().bringToTop(this.runSelectContainer),this.runSelectContainer.setVisible(!0),this.populateRuns().then(()=>{this.setScrollCursor(0),this.setCursor(0),this.runs.length===0&&this.clearCursor()}),!0}processInput(A){const s=this.getUi();let R=!1;const n=!1;if([X.ACTION,X.CANCEL].includes(A)){if(A===X.ACTION){const I=this.cursor+this.scrollCursor;if(this.runs[I])a.ui.setOverlayMode(te.RUN_INFO,this.runs[I].entryData,mf.RUN_HISTORY,!0);else return!1;return R=!0,R}this.runSelectCallback=null,R=!0,a.ui.revertMode()}else if(this.runs.length>0)switch(A){case X.UP:this.cursor?R=this.setCursor(this.cursor-1):this.scrollCursor?R=this.setScrollCursor(this.scrollCursor-1):this.runs.length>1&&(R=this.setCursor(Math.min(this.runs.length-1,this.maxRows-1)),R=this.setScrollCursor(Math.max(0,this.runs.length-this.maxRows))||R);break;case X.DOWN:this.cursor<Math.min(this.maxRows-1,this.runs.length-this.scrollCursor-1)?R=this.setCursor(this.cursor+1):this.scrollCursor<this.runs.length-this.maxRows?R=this.setScrollCursor(this.scrollCursor+1):this.runs.length>1&&(R=this.setCursor(0),R=this.setScrollCursor(0)||R);break}return R&&s.playSelect(),R||n}async populateRuns(){const A=await a.gameData.getRunHistoryData(),s=Object.keys(A);if(s.length===0){this.showEmpty();return}const R=s.map(Number);s.length>1&&R.sort((I,r)=>r-I);const n=s.length;for(let I=0;I<n;I++){const r=new z_(A[R[I]],I);a.add.existing(r),this.runsContainer.add(r),this.runs.push(r)}this.cursorObj&&s.length>0&&this.runsContainer.bringToTop(this.cursorObj)}async showEmpty(){const A=Gt(0,0,304,165);this.runsContainer.add(A);const s=A.getCenter(),R=Se(0,0,u.t("saveSlotSelectUiHandler:empty"),k.WINDOW,{fontSize:"128px"});R.setPosition(s.x-18,s.y-15),this.runsContainer.add(R)}setCursor(A){const s=super.setCursor(A);return this.cursorObj||(this.cursorObj=a.add.nineslice(0,0,"select_cursor_highlight_thick",void 0,296,46,6,6,6,6),this.cursorObj.setOrigin(0,0),this.runsContainer.add(this.cursorObj)),this.cursorObj.setPosition(4,4+(A+this.scrollCursor)*56),s}setScrollCursor(A){const s=A!==this.scrollCursor;return s&&(this.scrollCursor=A,this.setCursor(this.cursor),a.tweens.add({targets:this.runsContainer,y:this.runContainerInitialY-56*A,duration:Ot(325),ease:"Sine.easeInOut"})),s}clear(){super.clear(),this.runSelectContainer.setVisible(!1),this.setScrollCursor(0),this.clearCursor(),this.runSelectCallback=null,this.clearRuns()}clearCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=null}clearRuns(){this.runs.splice(0,this.runs.length),this.runsContainer.removeAll(!0)}};o(fK,"RunHistoryUiHandler");let J_=fK;const BK=class BK extends Phaser.GameObjects.Container{constructor(A,s){super(a,0,s*56),this.slotId=s,this.entryData=A,this.setup(this.entryData)}setup(A){const s=A.isVictory,R=a.gameData.parseSessionData(JSON.stringify(A.entry)),n=Gt(0,0,304,52);if(this.add(n),s){const l=Se(8,5,`${u.t("runHistory:victory")}`,k.WINDOW);this.add(l)}else{const l=a.gameData.gender??Jt.UNSET,C=Jt[l].toLowerCase();if(R.battleType===Ht.WILD||R.battleType===Ht.MYSTERY_ENCOUNTER&&!R.trainer){const U=a.add.container(8,5),D=Se(0,0,`${u.t("runHistory:defeatedWild",{context:C})}`,k.WINDOW);U.add(D),R.enemyParty.forEach((M,h)=>{const _=a.add.container(65+h*25,-8);_.setScale(.75),M.boss=!1,M.player=!0;const d=M.toPokemon(),f=a.addPokemonIcon(d,0,0,0,0),H=Se(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Dr(d.level,1e3)}`,k.PARTY,{fontSize:"54px",color:"#f8f8f8"});H.setShadow(0,0,void 0),H.setStroke("#424242",14),H.setOrigin(1,0),_.add(f),_.add(H),U.add(_),d.destroy()}),this.add(U)}else if(R.battleType===Ht.TRAINER||R.battleType===Ht.MYSTERY_ENCOUNTER&&R.trainer){const U=R.trainer.toTrainer();if(R.trainer.trainerType>=375){const M=U.variant===LA.FEMALE?"trainerNames:rival_female":"trainerNames:rival",h=Se(8,5,`${u.t("runHistory:defeatedRival",{context:C})} ${u.t(M)}`,k.WINDOW);this.add(h)}else{const M=Se(8,5,`${u.t("runHistory:defeatedTrainer",{context:C})}${U.getName(0,!0)}`,k.WINDOW);this.add(M)}}}const I=Se(8,19,"",k.WINDOW);let r="";switch(R.gameMode){case hA.DAILY:r=u.t("gameMode:dailyRun");break;case hA.SPLICED_ENDLESS:case hA.ENDLESS:r=u.t("gameMode:endless");break;case hA.CLASSIC:r=u.t("gameMode:classic");break;case hA.CHALLENGE:r=u.t("gameMode:challenge");break}if(I.appendText(r,!1),R.gameMode===hA.SPLICED_ENDLESS){const l=a.add.image(0,0,"icon_spliced");l.setScale(.75);const C=I.getTopRight();l.setPosition(C.x+5,27),this.add(l),I.appendText("    - ",!1)}else I.appendText(" - ",!1);I.appendText(u.t("saveSlotSelectUiHandler:wave")+" "+R.waveIndex,!1),this.add(I);const L=Se(8,33,new Date(R.timestamp).toLocaleString(),k.WINDOW);this.add(L);const N=a.add.container(140,17);R.party.forEach((l,C)=>{const U=a.add.container(26*C,0);U.setScale(.75);const D=l.toPokemon(),M=a.addPokemonIcon(D,0,0,0,0),h=Se(32,20,`${u.t("saveSlotSelectUiHandler:lv")}${Dr(D.level,1e3)}`,k.PARTY,{fontSize:"54px",color:"#f8f8f8"});h.setShadow(0,0,void 0),h.setStroke("#424242",14),h.setOrigin(1,0),U.add(M),U.add(h),N.add(U),D.destroy()}),this.add(N)}};o(BK,"RunEntryContainer");let z_=BK;const gK=class gK extends CS{constructor(A,s=115,R=9){super(s,R),this.pokemonListContainer=A}setup(){super.setup(),super.changeToEggSummaryLayout(),this.currentPokemonSprite=a.add.sprite(54,80,"pkmn__sub"),this.currentPokemonSprite.setScale(.8),this.currentPokemonSprite.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.pokemonListContainer.add(this.currentPokemonSprite),this.pokemonNumberText=Se(80,107.5,"0000",k.SUMMARY,{fontSize:74}),this.pokemonNumberText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNumberText),this.pokemonNameText=Se(7,107.5,"",k.SUMMARY,{fontSize:74}),this.pokemonNameText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonNameText),this.pokemonHatchedIcon=a.add.sprite(-5,90,"egg_icons"),this.pokemonHatchedIcon.setOrigin(0,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonListContainer.add(this.pokemonHatchedIcon),this.pokemonCandyIcon=a.add.sprite(4.5,40,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=a.add.sprite(4.5,40,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyCountText=Se(14,40,"x0",k.SUMMARY,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonListContainer.add(this.pokemonCandyCountText),this.pokemonEggMoveContainers=[],this.pokemonEggMoveBgs=[],this.pokemonEggMoveLabels=[],this.pokemonEggMovesContainer=a.add.container(0,200),this.pokemonEggMovesContainer.setVisible(!1),this.pokemonEggMovesContainer.setScale(.5);for(let A=0;A<4;A++){const s=a.add.container(0,0+6*A),R=a.add.nineslice(70,0,"type_bgs","unknown",92,14,2,2,2,2);R.setOrigin(1,0);const n=Se(70-R.width/2,0,"???",k.PARTY);n.setOrigin(.5,0),this.pokemonEggMoveBgs.push(R),this.pokemonEggMoveLabels.push(n),s.add(R),s.add(n),s.setScale(.44),this.pokemonEggMoveContainers.push(s),this.pokemonEggMovesContainer.add(s)}super.add(this.pokemonEggMoveContainers)}hideDisplayPokemon(){this.currentPokemonSprite.setVisible(!1)}displayPokemon(A){const s=A.species,R=A.gender===At.FEMALE,n=A.formIndex,I=A.shiny,r=A.variant;this.currentPokemonSprite.setVisible(!1),s.loadAssets(R,n,I,r,!0).then(()=>{ms(s.speciesId,A.formIndex).cry(),this.currentPokemonSprite.play(s.getSpriteKey(R,n,I,r)),this.currentPokemonSprite.setPipelineData("shiny",I),this.currentPokemonSprite.setPipelineData("variant",r),this.currentPokemonSprite.setPipelineData("spriteKey",s.getSpriteKey(R,n,I,r)),this.currentPokemonSprite.setVisible(!0)})}showHatchInfo(A){this.pokemonEggMovesContainer.setVisible(!0);const s=A.pokemon,R=s.species;this.displayPokemon(s),super.show(s,!1,1,A.getDex(),A.getStarterEntry(),!0);const n=KE[R.speciesId];this.pokemonCandyIcon.setTint(Es(bE(n[0]))),this.pokemonCandyIcon.setVisible(!0),this.pokemonCandyOverlayIcon.setTint(Es(bE(n[1]))),this.pokemonCandyOverlayIcon.setVisible(!0),this.pokemonCandyCountText.setText(`x${a.gameData.starterData[R.speciesId].candyCount}`),this.pokemonCandyCountText.setVisible(!0),this.pokemonNumberText.setText(ZR(R.speciesId,4)),this.pokemonNameText.setText(R.name);const I=R&&_E.hasOwnProperty(R.speciesId);for(let r=0;r<4;r++){const L=I?Ve[_E[R.speciesId][r]]:null,N=L&&a.gameData.starterData[R.speciesId].eggMoves&Math.pow(2,r);this.pokemonEggMoveBgs[r].setFrame(i[L?L.type:i.UNKNOWN].toString().toLowerCase()),this.pokemonEggMoveLabels[r].setText(L&&N?L.name:"???"),!(L&&A.starterDataEntryBeforeUpdate.eggMoves&Math.pow(2,r))&&N&&this.pokemonEggMoveLabels[r].setText("(+) "+L.name)}this.pokemonEggMovesContainer.setVisible(!0),R.speciesId===e.MANAPHY||R.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Wi(R))}};o(gK,"PokemonHatchInfoContainer");let j_=gK;const mK=class mK extends Phaser.GameObjects.Container{constructor(A,s,R){super(a,A,s);const n=R.pokemon;this.species=n.species;const I=2,r=12,L=n.species,N=n.gender===At.FEMALE,l=n.formIndex,C=n.variant,U=n.shiny,D=a.add.sprite(-2,I,L.getIconAtlasKey(l,U,C));D.setScale(.5),D.setOrigin(0,0),D.setFrame(L.getIconId(N,l,U,C)),this.icon=D,this.checkIconId(N,l,U,C),this.add(this.icon),this.shinyIcon=a.add.image(r,I,"shiny_star_small"),this.shinyIcon.setOrigin(0,0),this.shinyIcon.setScale(.5),this.add(this.shinyIcon);const M=a.add.image(r,I*4,"ha_capsule");M.setOrigin(0,0),M.setScale(.5),this.hiddenAbilityIcon=M,this.add(this.hiddenAbilityIcon);const h=a.add.image(r,I*7,"icon_owned");h.setOrigin(0,0),h.setScale(.5),this.pokeballIcon=h,this.add(this.pokeballIcon);const _=a.add.image(0,I,"icon_egg_move");_.setOrigin(0,0),_.setScale(.5),this.eggMoveIcon=_,this.add(this.eggMoveIcon)}updateAndAnimate(A,s){const R=A.pokemon;this.species=R.species;const I=A.dexEntryBeforeUpdate.caughtAttr,r=BigInt(1<<(R.shiny?1:0)),L=BigInt(1<<R.variant+4),N=(r&I)===BigInt(0)||(L&I)===BigInt(0),l=(BigInt(1<<R.formIndex)*de.DEFAULT_FORM&I)===BigInt(0),C=R.gender===At.FEMALE,U=R.formIndex,D=R.variant,M=R.shiny;this.icon.setTexture(this.species.getIconAtlasKey(U,M,D)),this.icon.setFrame(this.species.getIconId(C,U,M,D)),this.checkIconId(C,U,M,D),this.shinyIcon.setVisible(R.shiny),this.shinyIcon.setTint(lE(R.variant)),this.eggMoveIcon.setVisible(A.eggMoveUnlocked),this.hiddenAbilityIcon.setVisible(R.abilityIndex===2),this.pokeballIcon.setVisible(!I||l),!I||N||l?s.addOrUpdate(this.icon,ss.PASSIVE):s.addOrUpdate(this.icon,ss.NONE)}checkIconId(A,s,R,n){this.icon.frame.name!==this.species.getIconId(A,s,R,n)&&(`${this.species.name}`,this.icon.setTexture(this.species.getIconAtlasKey(s,!1,n)),this.icon.setFrame(this.species.getIconId(A,s,!1,n)))}};o(mK,"HatchedPokemonContainer");let q_=mK;const Gc=112,dc=9,Bl=9,Ua=11,WL=18,pK=class pK extends hs{constructor(){super(te.EGG_HATCH_SUMMARY),this.eventTarget=new EventTarget}setup(){const A=this.getUi();this.summaryContainer=a.add.container(0,-a.game.canvas.height/6),this.summaryContainer.setVisible(!1),A.add(this.summaryContainer),this.eggHatchContainer=a.add.container(0,-a.game.canvas.height/6),this.eggHatchContainer.setVisible(!1),A.add(this.eggHatchContainer),this.iconAnimHandler=new II,this.iconAnimHandler.setup(),this.eggHatchBg=a.add.image(0,0,"egg_summary_bg"),this.eggHatchBg.setOrigin(0,0),this.eggHatchContainer.add(this.eggHatchBg),this.cursorObj=a.add.image(0,0,"select_cursor"),this.cursorObj.setOrigin(0,0),this.summaryContainer.add(this.cursorObj),this.pokemonContainers=[],this.pokemonIconsContainer=a.add.container(Gc,dc),this.summaryContainer.add(this.pokemonIconsContainer),this.infoContainer=new j_(this.summaryContainer),this.infoContainer.setup(),this.infoContainer.changeToEggSummaryLayout(),this.infoContainer.setVisible(!0),this.summaryContainer.add(this.infoContainer);const s=new mn(Gc+Ua*WL,dc+3,4,a.game.canvas.height/6-20,Bl);this.summaryContainer.add(s),this.scrollGridHandler=new bu(this,Bl,Ua).withScrollBar(s).withUpdateGridCallBack(()=>this.updatePokemonIcons()).withUpdateSingleElementCallback(R=>this.infoContainer.showHatchInfo(this.eggHatchData[R])),this.cursor=-1}clear(){super.clear(),this.scrollGridHandler.reset(),this.cursor=-1,this.summaryContainer.setVisible(!1),this.pokemonIconsContainer.removeAll(!0),this.pokemonContainers=[],this.eggHatchBg.setVisible(!1),this.getUi().hideTooltip();const A=a.getActiveKeys();Object.keys(a.anims.anims.entries).forEach(n=>{n.startsWith("pkmn__")&&!A.includes(n)&&a.anims.remove(n)}),Object.keys(a.cache.audio.entries.entries).forEach(n=>{n.startsWith("cry/")&&!A.includes(n)&&delete a.cache.audio.entries.entries[n]}),this.eggHatchData.length=0,this.iconAnimHandler.removeAll()}show(A){super.show(A),A.length>=1&&(this.eggHatchData=A[0].sort(o(function(n,I){const r=n.pokemon.species,L=I.pokemon.species;return Wi(r)<Wi(L)?-1:Wi(r)>Wi(L)?1:r.speciesId<L.speciesId?-1:r.speciesId>L.speciesId?1:0},"sortHatchData"))),this.getUi().bringToTop(this.summaryContainer),this.summaryContainer.setVisible(!0),this.eggHatchContainer.setVisible(!0),this.eggHatchBg.setVisible(!0),this.infoContainer.hideDisplayPokemon(),this.scrollGridHandler.setTotalElements(this.eggHatchData.length),this.updatePokemonIcons(),this.setCursor(0),a.playSoundWithoutBgm("evolution_fanfare");const s=a.eggSkipPreference===2?2e3:1e3;return this.blockExit=!0,a.time.delayedCall(s,()=>this.blockExit=!1),!0}updatePokemonIcons(){const A=this.scrollGridHandler.getItemOffset(),s=Math.min(Bl*Ua,this.eggHatchData.length-A);for(let R=0;R<Bl*Ua;R++){const n=this.eggHatchData[R+A];let I=this.pokemonContainers[R];if(R<s){if(!I){const r=R%Ua*WL,L=Math.floor(R/Ua)*WL;I=new q_(r,L,n).setVisible(!1),this.pokemonContainers.push(I),this.pokemonIconsContainer.add(I)}I.setVisible(!0),I.updateAndAnimate(n,this.iconAnimHandler)}else I&&(I.setVisible(!1),this.iconAnimHandler.addOrUpdate(I.icon,ss.NONE))}}processInput(A){const s=this.getUi();let R=!1,n=!1;if(A===X.CANCEL)if(this.blockExit)n=!0;else{const I=a.getCurrentPhase();I instanceof Hu&&I.end(),R=!0}else this.scrollGridHandler.processInput(A);return R?s.playSelect():n&&s.playError(),R||n}setCursor(A){let s=!1;const R=this.cursor;return s=super.setCursor(A),s&&(this.cursorObj.setPosition(Gc-1+WL*(A%Ua),dc+1+WL*Math.floor(A/Ua)),R>-1&&this.iconAnimHandler.addOrUpdate(this.pokemonContainers[R].icon,ss.NONE),this.iconAnimHandler.addOrUpdate(this.pokemonContainers[A].icon,ss.ACTIVE),this.infoContainer.showHatchInfo(this.eggHatchData[A+this.scrollGridHandler.getItemOffset()])),s}};o(pK,"EggSummaryUiHandler");let eP=pK;const KK=class KK extends Ja{constructor(A){super(A)}setup(){super.setup();const A=o((n,I,r)=>Object.keys(n??{}).map((L,N)=>{const l=Object.values(n)[N];if(typeof l=="object"&&!Pe(l))return A(l,I??L,I?r?[...r,L]:[L]:void 0).filter(C=>C.length>0);if(typeof l=="string"||Pe(l))return r?`${I}:${r.map(C=>C).join(".")}.${L}`:`${I}:${L}`}).filter(L=>L),"flattenKeys"),R=A(u.getDataByLanguage(String(u.resolvedLanguage))).filter(n=>n.length>0).flat(Number.POSITIVE_INFINITY).map(String);this.keys=R}getModalTitle(A){return"Test Dialogue"}getWidth(A){return 300}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return["Check","Cancel"]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){return[{label:"Dialogue"}]}show(A){const s=this.getUi(),R=!!this.getModalTitle();this.updateFields(this.getInputFieldConfigs(),R),this.updateContainer(A[0]);const n=this.inputs[0];if(n.setMaxLength(255),n.on("keydown",(I,r)=>{["escape","space"].some(L=>L===r.key.toLowerCase()||L===r.code.toLowerCase())&&s.getMode()===te.AUTO_COMPLETE&&(I.on("blur",()=>I.node.focus(),{once:!0}),s.revertMode())}),n.on("textchange",(I,r)=>{s.getMode()===te.AUTO_COMPLETE&&s.revertMode();let L=[];const N=I.text.split(" "),l=this.keys.filter(C=>C.toLowerCase().includes(N[N.length-1].toLowerCase()));if(I.text!==""&&l.length>0&&(L=l.slice(0).map(C=>({label:C,handler:o(()=>{var U;if(!Pe(r.data)||((U=r.inputType)==null?void 0:U.toLowerCase())==="deletecontentbackward"){const D=I.text.split(" ");D[D.length-1]=C,I.setText(D.join(" "))}return s.revertMode(),!0},"handler")}))),L.length>0){const C={options:L,maxOptions:5,modalContainer:this.modalContainer};s.setOverlayMode(te.AUTO_COMPLETE,C)}}),super.show(A)){const I=A[0];return this.inputs[0].resize(1150,116),this.inputContainers[0].list[0].width=200,A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=r=>{if(s.getMode()===te.TEST_DIALOGUE){this.sanitizeInputs();const L=btoa(unescape(encodeURIComponent(this.inputs[0].text)));return I.buttonActions[0](L),!0}return!1},!0}return!1}};o(KK,"TestDialogueUiHandler");let tP=KK;const FK=class FK extends rS{constructor(A=te.OPTION_SELECT){super(A)}getWindowWidth(){return 64}show(A){if(A[0].modalContainer){const{modalContainer:s}=A[0],R=super.show(A);return this.modalContainer=s,this.setupOptions(),R}return!1}setupOptions(){super.setupOptions(),this.modalContainer&&(this.optionSelectContainer.setSize(this.optionSelectContainer.height,Math.max(this.optionSelectText.displayWidth+24,this.getWindowWidth())),this.optionSelectContainer.setPositionRelative(this.modalContainer,this.optionSelectBg.width,this.optionSelectBg.height+50))}processInput(A){return A!==X.CANCEL&&A!==X.ACTION?super.processInput(A):!1}};o(FK,"AutoCompleteUiHandler");let AP=FK;const YK=class YK extends Js{constructor(){super(te.MYSTERY_ENCOUNTER),this.optionScrollTweens=new Array(4).fill(null),this.showDexProgress=!1,this.encounterOptions=[],this.viewPartyIndex=0,this.viewPartyXPosition=0,this.blockInput=!0}setup(){const A=this.getUi();this.cursorContainer=a.add.container(18,-38.7),this.cursorContainer.setVisible(!1),A.add(this.cursorContainer),this.optionsContainer=a.add.container(12,-38.7),this.optionsContainer.setVisible(!1),A.add(this.optionsContainer),this.dexProgressContainer=a.add.container(214,-43),this.dexProgressContainer.setVisible(!1),A.add(this.dexProgressContainer),this.descriptionContainer=a.add.container(0,-152),this.descriptionContainer.setVisible(!1),A.add(this.descriptionContainer),this.tooltipContainer=a.add.container(210,-48),this.tooltipContainer.setVisible(!1),A.add(this.tooltipContainer),this.setCursor(this.getCursor()),this.descriptionWindow=Gt(0,0,150,105,!1,!1,0,0,dR.THIN),this.descriptionContainer.add(this.descriptionWindow),this.tooltipWindow=Gt(0,0,110,48,!1,!1,0,0,dR.THIN),this.tooltipContainer.add(this.tooltipWindow),this.dexProgressWindow=Gt(0,0,24,28,!1,!1,0,0,dR.THIN),this.dexProgressContainer.add(this.dexProgressWindow),this.rarityBall=a.add.sprite(141,9,"pb"),this.rarityBall.setScale(.75),this.descriptionContainer.add(this.rarityBall);const s=a.add.sprite(12,10,"encounter_radar");s.setScale(.8),this.dexProgressContainer.add(s),this.dexProgressContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,24,28),Phaser.Geom.Rectangle.Contains)}show(A){var r,L,N,l;super.show(A),this.overrideSettings=A[0]??{};const s=Pe((r=this.overrideSettings)==null?void 0:r.hideDescription)?!0:!this.overrideSettings.hideDescription,R=Pe((L=this.overrideSettings)==null?void 0:L.slideInDescription)?!0:this.overrideSettings.slideInDescription,n=((N=this.overrideSettings)==null?void 0:N.startingCursorIndex)??0;this.cursorContainer.setVisible(!0),this.descriptionContainer.setVisible(s),this.optionsContainer.setVisible(!0),this.dexProgressContainer.setVisible(!0),this.displayEncounterOptions(R);const I=this.getCursor();return I===(((l=this.optionsContainer)==null?void 0:l.length)||0)-1?this.setCursor(I):this.setCursor(n),this.blockInput&&setTimeout(()=>{this.unblockInput()},1e3),this.displayOptionTooltip(),!0}processInput(A){var I;const s=this.getUi();let R=!1;const n=this.getCursor();if(A===X.CANCEL||A===X.ACTION){if(A===X.ACTION){const r=this.encounterOptions[n];if(n===this.viewPartyIndex){R=!0;const L={...this.overrideSettings,slideInDescription:!1};a.ui.setMode(te.PARTY,gs.CHECK,-1,()=>{a.ui.setMode(te.MYSTERY_ENCOUNTER,L),setTimeout(()=>{this.setCursor(this.viewPartyIndex),this.unblockInput()},300)})}else this.blockInput||!this.optionsMeetsReqs[n]&&(r.optionMode===Kt.DISABLED_OR_DEFAULT||r.optionMode===Kt.DISABLED_OR_SPECIAL)?R=!1:a.getCurrentPhase().handleOptionSelect(r,n)?R=!0:s.playError()}}else{switch((I=this.optionsContainer.getAll())==null?void 0:I.length){default:case 3:R=this.handleTwoOptionMoveInput(A);break;case 4:R=this.handleThreeOptionMoveInput(A);break;case 5:R=this.handleFourOptionMoveInput(A);break}this.displayOptionTooltip()}return R&&s.playSelect(),R}handleTwoOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case X.UP:R<this.viewPartyIndex&&(s=this.setCursor(this.viewPartyIndex));break;case X.DOWN:R===this.viewPartyIndex&&(s=this.setCursor(1));break;case X.LEFT:R>0&&(s=this.setCursor(R-1));break;case X.RIGHT:R<this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}handleThreeOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case X.UP:R===2?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case X.DOWN:R===this.viewPartyIndex?s=this.setCursor(1):s=this.setCursor(2);break;case X.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R===1&&(s=this.setCursor(R-1));break;case X.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R<1&&(s=this.setCursor(R+1));break}return s}handleFourOptionMoveInput(A){let s=!1;const R=this.getCursor();switch(A){case X.UP:R>=2&&R!==this.viewPartyIndex?s=this.setCursor(R-2):s=this.setCursor(this.viewPartyIndex);break;case X.DOWN:R<=1?s=this.setCursor(R+2):R===this.viewPartyIndex&&(s=this.setCursor(1));break;case X.LEFT:R===this.viewPartyIndex?s=this.setCursor(1):R%2===1&&(s=this.setCursor(R-1));break;case X.RIGHT:R===1?s=this.setCursor(this.viewPartyIndex):R%2===0&&R!==this.viewPartyIndex&&(s=this.setCursor(R+1));break}return s}unblockInput(){if(this.blockInput){this.blockInput=!1;for(let A=0;A<this.optionsContainer.length-1;A++){const s=this.encounterOptions[A].optionMode;!this.optionsMeetsReqs[A]&&(s===Kt.DISABLED_OR_DEFAULT||s===Kt.DISABLED_OR_SPECIAL)||this.optionsContainer.getAt(A).setAlpha(1)}}}getCursor(){return this.cursor?this.cursor:0}setCursor(A){var n,I,r,L;const R=this.getCursor()!==A;return R&&(this.cursor=A),this.viewPartyIndex=((n=this.optionsContainer.getAll())==null?void 0:n.length)-1,this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.cursorContainer.add(this.cursorObj)),A===this.viewPartyIndex?this.cursorObj.setPosition(this.viewPartyXPosition,-17):((I=this.optionsContainer.getAll())==null?void 0:I.length)===3?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),15):((r=this.optionsContainer.getAll())==null?void 0:r.length)===4?this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)):((L=this.optionsContainer.getAll())==null?void 0:L.length)===5&&this.cursorObj.setPosition(-10.5+(A%2===1?100:0),7+(A>1?16:0)),R}displayEncounterOptions(A=!0){var _,d,f,H;this.getUi().clearText();const s=a.currentBattle.mysteryEncounter;this.encounterOptions=((_=this.overrideSettings)==null?void 0:_.overrideOptions)??s.options,this.optionsMeetsReqs=[];const R=VA((d=s.dialogue.encounterOptionsDialogue)==null?void 0:d.title,k.TOOLTIP_TITLE),n=VA((f=s.dialogue.encounterOptionsDialogue)==null?void 0:f.description,k.TOOLTIP_CONTENT),I=VA((H=s.dialogue.encounterOptionsDialogue)==null?void 0:H.query,k.TOOLTIP_CONTENT);this.optionsContainer.removeAll(!0);for(let B=0;B<this.encounterOptions.length;B++){const K=this.encounterOptions[B];let Y;switch(this.encounterOptions.length){default:case 2:Y=pE(B%2===0?0:100,8,"-",k.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 3:Y=pE(B%2===0?0:100,B<2?0:16,"-",k.WINDOW,{fontSize:"80px",lineSpacing:-8});break;case 4:Y=pE(B%2===0?0:100,B<2?0:16,"-",k.WINDOW,{fontSize:"80px",lineSpacing:-8});break}this.optionsMeetsReqs.push(K.meetsRequirements());const v=K.dialogue,Z=!this.optionsMeetsReqs[B]&&v.disabledButtonLabel?v.disabledButtonLabel:v.buttonLabel;let z;K.hasRequirements()&&this.optionsMeetsReqs[B]&&(K.optionMode===Kt.DEFAULT_OR_SPECIAL||K.optionMode===Kt.DISABLED_OR_SPECIAL)?z=VA(Z,k.ME_OPTION_SPECIAL):z=VA(Z,v.style?v.style:k.ME_OPTION_DEFAULT),z&&Y.setText(z),!this.optionsMeetsReqs[B]&&(K.optionMode===Kt.DISABLED_OR_DEFAULT||K.optionMode===Kt.DISABLED_OR_SPECIAL)&&Y.setAlpha(.5),this.blockInput&&Y.setAlpha(.5);const q=90,J=a.make.graphics({});J.setScale(6),J.fillStyle(16777215),J.beginPath(),J.fillRect(Y.x+11,Y.y+140,q,18);const Ae=J.createGeometryMask();Y.setMask(Ae);const Q=Y.displayWidth,Re=this.optionScrollTweens[B];Re&&(Re.remove(),this.optionScrollTweens[B]=null),Q>q&&(this.optionScrollTweens[B]=a.tweens.add({targets:Y,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((Q-q)/15*2e3),x:`-=${Q-q}`})),this.optionsContainer.add(Y)}const r=pE(a.game.canvas.width/6,-24,hO(u.t("mysteryEncounterMessages:view_party_button"),k.PARTY),k.PARTY);this.optionsContainer.add(r),r.x-=r.displayWidth+16,this.viewPartyXPosition=r.x-10;const L=pE(0,0,R??"",k.TOOLTIP_TITLE,{wordWrap:{width:750},align:"center",lineSpacing:-8});this.descriptionContainer.add(L),L.setPosition(72-L.displayWidth/2,5.5);const N=s.encounterTier===zt.COMMON?0:s.encounterTier===zt.GREAT?1:s.encounterTier===zt.ULTRA?2:s.encounterTier===zt.ROGUE?3:4,l=fO(N);this.rarityBall.setTexture("pb",l);const C=pE(6,25,n??"",k.TOOLTIP_CONTENT,{wordWrap:{width:830}}),U=a.make.graphics({});U.setScale(6),U.fillStyle(16777215),U.beginPath(),U.fillRect(6,53,206,57);const D=U.createGeometryMask();C.setMask(D);const M=Math.floor(C.displayHeight/10);this.descriptionScrollTween&&(this.descriptionScrollTween.remove(),this.descriptionScrollTween=void 0),M>6&&(this.descriptionScrollTween=a.tweens.add({targets:C,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((M-6)*2e3),y:`-=${10*(M-6)}`})),this.descriptionContainer.add(C);const h=pE(0,0,I??"",k.TOOLTIP_CONTENT,{wordWrap:{width:830}});this.descriptionContainer.add(h),h.setPosition(75-h.displayWidth/2,90),A&&(this.descriptionContainer.x-=150,a.tweens.add({targets:this.descriptionContainer,x:"+=150",ease:"Sine.easeInOut",duration:1e3}))}displayOptionTooltip(){const A=this.getCursor();if(this.tooltipContainer.length>1&&this.tooltipContainer.removeBetween(1,this.tooltipContainer.length,!0),this.tooltipContainer.setVisible(!0),Pe(A)||A>this.optionsContainer.length-2){this.showHideDexProgress(!1);return}let s;const R=this.encounterOptions[A],n=R.dialogue;if(!this.optionsMeetsReqs[A]&&(R.optionMode===Kt.DISABLED_OR_DEFAULT||R.optionMode===Kt.DISABLED_OR_SPECIAL)&&n.disabledButtonTooltip?s=VA(n.disabledButtonTooltip,k.TOOLTIP_CONTENT):s=VA(n.buttonTooltip,k.TOOLTIP_CONTENT),s){const I=[...s.match(new RegExp(/\[color=[^\[]*\]\[shadow=[^\[]*\]/i))][0];s=s.replace(/(\(\+\)[^\(\[]*)/gi,r=>"[/color][/shadow]"+hO(r,k.SUMMARY_GREEN)+"[/color][/shadow]"+I),s=s.replace(/(\(\-\)[^\(\[]*)/gi,r=>"[/color][/shadow]"+hO(r,k.SUMMARY_BLUE)+"[/color][/shadow]"+I)}if(s){const I=pE(6,7,s,k.TOOLTIP_CONTENT,{wordWrap:{width:600},fontSize:"72px"});this.tooltipContainer.add(I);const r=a.make.graphics({});r.setScale(6),r.fillStyle(16777215),r.beginPath(),r.fillRect(this.tooltipContainer.x,this.tooltipContainer.y+188.5,150,32);const L=r.createGeometryMask();I.setMask(L);const N=Math.floor(I.displayHeight/11.2);this.tooltipScrollTween&&(this.tooltipScrollTween.remove(),this.tooltipScrollTween=void 0),N>3&&(this.tooltipScrollTween=a.tweens.add({targets:I,delay:Ot(1200),loop:-1,hold:Ot(1200),duration:Ot((N-3)*1200),y:`-=${11.2*(N-3)}`}))}R.hasDexProgress&&!this.showDexProgress?this.showHideDexProgress(!0):R.hasDexProgress||this.showHideDexProgress(!1)}clear(){super.clear(),this.overrideSettings=void 0,this.optionsContainer.setVisible(!1),this.optionsContainer.removeAll(!0),this.dexProgressContainer.setVisible(!1),this.descriptionContainer.setVisible(!1),this.tooltipContainer.setVisible(!1),this.descriptionContainer.removeBetween(2,this.descriptionContainer.length,!0),this.getUi().getMessageHandler().clearText(),this.eraseCursor()}eraseCursor(){this.cursorObj&&this.cursorObj.destroy(),this.cursorObj=void 0}showHideDexProgress(A){A&&!this.showDexProgress?(this.showDexProgress=!0,a.tweens.killTweensOf(this.dexProgressContainer),a.tweens.add({targets:this.dexProgressContainer,y:-63,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{this.dexProgressContainer.on("pointerover",()=>{a.ui.showTooltip("",u.t("mysteryEncounterMessages:affects_pokedex"),!0)}),this.dexProgressContainer.on("pointerout",()=>{a.ui.hideTooltip()})},"onComplete")})):!A&&this.showDexProgress&&(this.showDexProgress=!1,a.tweens.killTweensOf(this.dexProgressContainer),a.tweens.add({targets:this.dexProgressContainer,y:-43,ease:"Sine.easeInOut",duration:750,onComplete:o(()=>{this.dexProgressContainer.off("pointerover"),this.dexProgressContainer.off("pointerout")},"onComplete")}))}};o(YK,"MysteryEncounterUiHandler");let EP=YK;const WK=class WK extends Ja{setup(){super.setup(),this.nameKeys=qA.map(A=>A.name).filter((A,s,R)=>R.indexOf(A)===s),this.moveKeys=Ve.map(A=>A.name),this.abilityKeys=nA.map(A=>A.name)}getModalTitle(A){return u.t("pokedexUiHandler:scanChooseOption")}getWidth(A){return 300}getMargin(A){return[0,0,48,0]}getButtonLabels(A){return[u.t("pokedexUiHandler:scanSelect"),u.t("pokedexUiHandler:scanCancel")]}getReadableErrorMessage(A){const s=A==null?void 0:A.indexOf(":");return s>0&&(A=A.slice(0,s)),super.getReadableErrorMessage(A)}getInputFieldConfigs(){switch(this.row){case JE.NAME:return[{label:u.t("pokedexUiHandler:scanLabelName")}];case JE.MOVE_1:case JE.MOVE_2:return[{label:u.t("pokedexUiHandler:scanLabelMove")}];case JE.ABILITY_1:return[{label:u.t("pokedexUiHandler:scanLabelAbility")}];case JE.ABILITY_2:return[{label:u.t("pokedexUiHandler:scanLabelPassive")}];default:return[{label:""}]}}reduceKeys(){switch(this.row){case JE.NAME:{this.reducedKeys=this.nameKeys;break}case JE.MOVE_1:case JE.MOVE_2:{this.reducedKeys=this.moveKeys;break}case JE.ABILITY_1:case JE.ABILITY_2:{this.reducedKeys=this.abilityKeys;break}default:this.reducedKeys=this.keys}}show(A){this.row=A[2];const s=this.getUi(),R=!!this.getModalTitle();this.updateFields(this.getInputFieldConfigs(),R),this.updateContainer(A[0]);const n=this.inputs[0];if(n.setMaxLength(255),this.reduceKeys(),setTimeout(()=>{n.setFocus()},50),n.on("keydown",(I,r)=>{["escape","space"].some(L=>L===r.key.toLowerCase()||L===r.code.toLowerCase())&&s.getMode()===te.AUTO_COMPLETE&&(I.on("blur",()=>I.node.focus(),{once:!0}),s.revertMode())}),n.on("textchange",(I,r)=>{s.getMode()===te.AUTO_COMPLETE&&s.revertMode();let L=[];const N=this.reducedKeys.filter(l=>l.toLowerCase().includes(I.text.toLowerCase()));if(I.text!==""&&N.length>0&&(L=N.slice(0).map(l=>({label:l,handler:o(()=>{var C;return(!Pe(r.data)||((C=r.inputType)==null?void 0:C.toLowerCase())==="deletecontentbackward")&&I.setText(l),s.revertMode(),!0},"handler")}))),L.length>0){const l={options:L,maxOptions:5,modalContainer:this.modalContainer};s.setOverlayMode(te.AUTO_COMPLETE,l)}}),super.show(A)){const I=A[0];return this.inputs[0].resize(1150,116),this.inputContainers[0].list[0].width=200,A[1]&&typeof A[1].getNameToRender=="function"?this.inputs[0].text=A[1].getNameToRender():this.inputs[0].text=A[1],this.submitAction=r=>{if(s.getMode()===te.POKEDEX_SCAN){this.sanitizeInputs();const L=this.reducedKeys.includes(this.inputs[0].text)?this.inputs[0].text:"",N=btoa(unescape(encodeURIComponent(L)));return I.buttonActions[0](N),!0}return!1},!0}return!1}clear(){super.clear(),this.formLabels.forEach(A=>{A.destroy()})}};o(WK,"PokedexScanUiHandler");let sP=WK;const Hc=48,AO=8,gl=6,h0=class h0 extends Phaser.GameObjects.Container{constructor(A){super(a,A==null?void 0:A.x,A==null?void 0:A.y),this.active=!1,this.descScroll=null,this.scale=(A==null?void 0:A.scale)||1,this.setScale(this.scale),this.options=A||{},this.width=((A==null?void 0:A.width)||h0.getWidth(this.scale))/this.scale,this.descBg=Gt(0,0,this.width,Hc),this.descBg.setOrigin(0,0),this.add(this.descBg),this.desc=Se(AO,AO-2,"",k.BATTLE_INFO,{wordWrap:{width:(this.width-(AO-2)*2)*gl}}),this.desc.setLineSpacing(u.resolvedLanguage==="ja"?25:5),this.maskPointOriginX=(A==null?void 0:A.x)||0,this.maskPointOriginY=(A==null?void 0:A.y)||0,this.maskPointOriginX<0&&(this.maskPointOriginX+=a.game.canvas.width/gl),this.maskPointOriginY<0&&(this.maskPointOriginY+=a.game.canvas.height/gl),this.textMaskRect=a.make.graphics(),this.textMaskRect.fillStyle(16711680),this.textMaskRect.fillRect(this.maskPointOriginX+AO*this.scale,this.maskPointOriginY+(AO-2)*this.scale,this.width-AO*2*this.scale,(Hc-(AO-2)*2)*this.scale),this.textMaskRect.setScale(6);const s=this.createGeometryMask(this.textMaskRect);this.add(this.desc),this.desc.setMask(s),A!=null&&A.hideBg&&this.descBg.setVisible(!1),this.setVisible(!1)}show(A){if(!a.enableMoveInfo)return!1;this.desc.setText(A??""),this.descScroll&&(this.descScroll.remove(),this.descScroll=null,this.desc.y=AO-2);const s=Math.floor(this.desc.displayHeight*(96/72)/14.83),R=s>=3?48:s===2?36:24;this.textMaskRect.clear(),this.textMaskRect.fillStyle(16711680),this.textMaskRect.fillRect(this.maskPointOriginX+AO*this.scale,this.maskPointOriginY+(AO-2)*this.scale+(48-R),this.width-AO*2*this.scale,(R-(AO-2)*2)*this.scale);const n=this.createGeometryMask(this.textMaskRect);return this.desc.setMask(n),this.descBg.setSize(this.descBg.width,R),this.descBg.setY(48-R),this.desc.setY(AO-2+(48-R)),s>3&&(this.descScroll=a.tweens.add({targets:this.desc,delay:Ot(2e3),loop:-1,hold:Ot(2e3),duration:Ot((s-3)*2e3),y:`-=${14.83*(72/96)*(s-3)}`})),this.options.delayVisibility||this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),a.tweens.add({targets:this.desc,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A){return a.game.canvas.width/gl/2}static getHeight(A,s){return Hc*A}};o(h0,"PokedexInfoOverlay");let Ju=h0;const e8=120,Da=8,oJ=6,TJ=["HP","ATK","DEF","SPATK","SPDEF","SPD"],_0=class _0 extends Phaser.GameObjects.Container{constructor(A){super(a,A==null?void 0:A.x,A==null?void 0:A.y),this.active=!1,this.statsLabels=[],this.statsRectangles=[],this.statsShadows=[],this.scale=(A==null?void 0:A.scale)||1,this.setScale(this.scale),this.width=((A==null?void 0:A.width)||_0.getWidth(this.scale))/this.scale,this.statsBg=Gt(0,0,this.width,e8),this.statsBg.setOrigin(0,0),this.add(this.statsBg);for(let s=0;s<6;s++){const R=a.add.rectangle(this.width-Da+1,Da+3+s*15,100,5,26720);R.setOrigin(1,0),this.statsShadows.push(R),this.add(R);const n=a.add.rectangle(this.width-Da,Da+2+s*15,100,5,6728345);n.setOrigin(1,0),this.statsRectangles.push(n),this.add(n);const I=Se(Da,Da-2+s*15,"A",k.BATTLE_INFO);this.statsLabels.push(I),this.add(I)}this.statsTotalLabel=Se(Da,Da+6*15,"A",k.MONEY_WINDOW),this.add(this.statsTotalLabel),this.setVisible(!1)}show(A,s){for(let R=0;R<6;R++)this.statsLabels[R].setText(u.t(`pokemonInfo:Stat.${TJ[R]}shortened`)+`: ${A[R]}`),this.statsShadows[R].setSize(A[R]/2,5),this.statsRectangles[R].setSize(A[R]/2,5);return this.statsTotalLabel.setText(u.t("pokedexUiHandler:baseTotal")+`: ${s}`),this.setVisible(!0),this.active=!0,!0}clear(){this.setVisible(!1),this.active=!1}toggleInfo(A){A&&this.setVisible(!0),a.tweens.add({targets:this.statsLabels,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0}),A||this.setVisible(!1)}isActive(){return this.active}static getWidth(A){return a.game.canvas.width/oJ/2}static getHeight(A,s){return e8*A}};o(_0,"BaseStatsOverlay");let RP=_0;const t8={en:{starterInfoTextSize:"56px",instructionTextSize:"38px"},de:{starterInfoTextSize:"48px",instructionTextSize:"35px",starterInfoXPos:33},"es-ES":{starterInfoTextSize:"56px",instructionTextSize:"35px"},fr:{starterInfoTextSize:"54px",instructionTextSize:"38px"},it:{starterInfoTextSize:"56px",instructionTextSize:"38px"},pt_BR:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoXPos:33},zh:{starterInfoTextSize:"47px",instructionTextSize:"38px",starterInfoYOffset:1,starterInfoXPos:24},pt:{starterInfoTextSize:"48px",instructionTextSize:"42px",starterInfoXPos:33},ko:{starterInfoTextSize:"52px",instructionTextSize:"38px"},ja:{starterInfoTextSize:"51px",instructionTextSize:"38px"},"ca-ES":{starterInfoTextSize:"56px",instructionTextSize:"38px"}},A8=2,SJ=109;var Mi=(E=>(E[E.BASE_STATS=0]="BASE_STATS",E[E.ABILITIES=1]="ABILITIES",E[E.LEVEL_MOVES=2]="LEVEL_MOVES",E[E.EGG_MOVES=3]="EGG_MOVES",E[E.TM_MOVES=4]="TM_MOVES",E[E.BIOMES=5]="BIOMES",E[E.NATURES=6]="NATURES",E[E.TOGGLE_IVS=7]="TOGGLE_IVS",E[E.EVOLUTIONS=8]="EVOLUTIONS",E))(Mi||{});const yK=class yK extends hs{constructor(){super(te.POKEDEX_PAGE),this.allSpecies=[],this.speciesLoaded=new Map,this.eggMoves=[],this.hasEggMoves=[],this.tmMoves=[],this.instructionRowX=0,this.instructionRowY=0,this.instructionRowTextOffset=9,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.blockInput=!1,this.blockInputOverlay=!1,this.showBackSprite=!1,this.scale=.1666666667,this.filteredIndices=null}setup(){const A=this.getUi(),s=u.resolvedLanguage??"en",R=Object.keys(t8).find(U=>s.includes(U))??"en",n=t8[R];this.starterSelectContainer=a.add.container(0,-a.game.canvas.height/6),this.starterSelectContainer.setVisible(!1),A.add(this.starterSelectContainer);const I=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,26720);I.setOrigin(0,0),this.starterSelectContainer.add(I);const r=a.add.image(0,0,"pokedex_summary_bg");r.setOrigin(0,0),this.starterSelectContainer.add(r),this.shinyOverlay=a.add.image(6,6,"summary_overlay_shiny"),this.shinyOverlay.setOrigin(0,0),this.shinyOverlay.setVisible(!1),this.starterSelectContainer.add(this.shinyOverlay),this.pokemonNumberText=Se(17,1,"0000",k.SUMMARY),this.pokemonNumberText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNumberText),this.pokemonNameText=Se(6,112,"",k.SUMMARY),this.pokemonNameText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonNameText),this.pokemonGrowthRateLabelText=Se(8,106,u.t("pokedexUiHandler:growthRate"),k.SUMMARY_ALT,{fontSize:"36px"}),this.pokemonGrowthRateLabelText.setOrigin(0,0),this.pokemonGrowthRateLabelText.setVisible(!1),this.starterSelectContainer.add(this.pokemonGrowthRateLabelText),this.pokemonGrowthRateText=Se(34,106,"",k.SUMMARY_PINK,{fontSize:"36px"}),this.pokemonGrowthRateText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGrowthRateText),this.pokemonGenderText=Se(96,112,"",k.SUMMARY_ALT),this.pokemonGenderText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonGenderText),this.pokemonUncaughtText=Se(6,127,u.t("pokedexUiHandler:uncaught"),k.WINDOW,{fontSize:"56px"}),this.pokemonUncaughtText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonUncaughtText);const L=a.add.container(SJ+6,9);for(const U of qA)!tA.hasOwnProperty(U.speciesId)||!U.isObtainable()||(this.speciesLoaded.set(U.speciesId,!1),this.allSpecies.push(U));this.starterSelectContainer.add(L),this.pokemonSprite=a.add.sprite(53,63,"pkmn__sub"),this.pokemonSprite.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),this.starterSelectContainer.add(this.pokemonSprite),this.type1Icon=a.add.sprite(8,98,Ds("types")),this.type1Icon.setScale(.5),this.type1Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type1Icon),this.type2Icon=a.add.sprite(26,98,Ds("types")),this.type2Icon.setScale(.5),this.type2Icon.setOrigin(0,0),this.starterSelectContainer.add(this.type2Icon),this.pokemonLuckLabelText=Se(8,89,u.t("common:luckIndicator"),k.WINDOW_ALT,{fontSize:"56px"}),this.pokemonLuckLabelText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckLabelText),this.pokemonLuckText=Se(8+this.pokemonLuckLabelText.displayWidth+2,89,"0",k.WINDOW,{fontSize:"56px"}),this.pokemonLuckText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonLuckText),this.pokemonCandyContainer=a.add.container(4.5,18),this.pokemonCandyIcon=a.add.sprite(0,0,"candy"),this.pokemonCandyIcon.setScale(.5),this.pokemonCandyIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyIcon),this.pokemonCandyOverlayIcon=a.add.sprite(0,0,"candy_overlay"),this.pokemonCandyOverlayIcon.setScale(.5),this.pokemonCandyOverlayIcon.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyOverlayIcon),this.pokemonCandyDarknessOverlay=a.add.sprite(0,0,"candy"),this.pokemonCandyDarknessOverlay.setScale(.5),this.pokemonCandyDarknessOverlay.setOrigin(0,0),this.pokemonCandyDarknessOverlay.setTint(0),this.pokemonCandyDarknessOverlay.setAlpha(.5),this.pokemonCandyContainer.add(this.pokemonCandyDarknessOverlay),this.pokemonCandyCountText=Se(9.5,0,"x0",k.WINDOW_ALT,{fontSize:"56px"}),this.pokemonCandyCountText.setOrigin(0,0),this.pokemonCandyContainer.add(this.pokemonCandyCountText),this.pokemonCandyContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,30,20),Phaser.Geom.Rectangle.Contains),this.starterSelectContainer.add(this.pokemonCandyContainer),this.pokemonFormText=Se(6,42,"Form",k.WINDOW_ALT,{fontSize:"42px"}),this.pokemonFormText.setOrigin(0,0),this.starterSelectContainer.add(this.pokemonFormText),this.pokemonCaughtHatchedContainer=a.add.container(2,25),this.pokemonCaughtHatchedContainer.setScale(.5),this.starterSelectContainer.add(this.pokemonCaughtHatchedContainer);const N=a.add.sprite(1,0,"items","pb");N.setOrigin(0,0),N.setScale(.75),this.pokemonCaughtHatchedContainer.add(N),this.pokemonCaughtCountText=Se(24,4,"0",k.SUMMARY_ALT),this.pokemonCaughtCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonCaughtCountText),this.pokemonHatchedIcon=a.add.sprite(1,14,"egg_icons"),this.pokemonHatchedIcon.setOrigin(.15,.2),this.pokemonHatchedIcon.setScale(.8),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedIcon),this.pokemonShinyIcons=[];for(let U=0;U<3;U++){const D=a.add.sprite(153+U*13,160,"shiny_icons");D.setOrigin(.15,.2),D.setScale(1),D.setFrame(DO(U)),D.setVisible(!1),this.pokemonCaughtHatchedContainer.add(D),this.pokemonShinyIcons.push(D)}this.pokemonHatchedCountText=Se(24,19,"0",k.SUMMARY_ALT),this.pokemonHatchedCountText.setOrigin(0,0),this.pokemonCaughtHatchedContainer.add(this.pokemonHatchedCountText);const l=n.instructionTextSize;this.instructionsContainer=a.add.container(4,128),this.instructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.instructionsContainer),this.candyUpgradeIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","C.png"),this.candyUpgradeIconElement.setName("sprite-candyUpgrade-icon-element"),this.candyUpgradeIconElement.setScale(.675),this.candyUpgradeIconElement.setOrigin(0,0),this.candyUpgradeLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("pokedexUiHandler:candyUpgrade"),k.PARTY,{fontSize:l}),this.candyUpgradeLabel.setName("text-candyUpgrade-label"),this.shinyIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","R.png"),this.shinyIconElement.setName("sprite-shiny-icon-element"),this.shinyIconElement.setScale(.675),this.shinyIconElement.setOrigin(0,0),this.shinyLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("pokedexUiHandler:cycleShiny"),k.PARTY,{fontSize:l}),this.shinyLabel.setName("text-shiny-label"),this.formIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","F.png"),this.formIconElement.setName("sprite-form-icon-element"),this.formIconElement.setScale(.675),this.formIconElement.setOrigin(0,0),this.formLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("pokedexUiHandler:cycleForm"),k.PARTY,{fontSize:l}),this.formLabel.setName("text-form-label"),this.genderIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","G.png"),this.genderIconElement.setName("sprite-gender-icon-element"),this.genderIconElement.setScale(.675),this.genderIconElement.setOrigin(0,0),this.genderLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("pokedexUiHandler:cycleGender"),k.PARTY,{fontSize:l}),this.genderLabel.setName("text-gender-label"),this.variantIconElement=new Phaser.GameObjects.Sprite(a,this.instructionRowX,this.instructionRowY,"keyboard","V.png"),this.variantIconElement.setName("sprite-variant-icon-element"),this.variantIconElement.setScale(.675),this.variantIconElement.setOrigin(0,0),this.variantLabel=Se(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY,u.t("pokedexUiHandler:cycleVariant"),k.PARTY,{fontSize:l}),this.variantLabel.setName("text-variant-label"),this.showBackSpriteIconElement=new Phaser.GameObjects.Sprite(a,50,7,"keyboard","E.png"),this.showBackSpriteIconElement.setName("show-backSprite-icon-element"),this.showBackSpriteIconElement.setScale(.675),this.showBackSpriteIconElement.setOrigin(0,0),this.showBackSpriteLabel=Se(60,7,u.t("pokedexUiHandler:showBackSprite"),k.PARTY,{fontSize:l}),this.showBackSpriteLabel.setName("show-backSprite-label"),this.starterSelectContainer.add(this.showBackSpriteIconElement),this.starterSelectContainer.add(this.showBackSpriteLabel),this.hideInstructions(),this.filterInstructionsContainer=a.add.container(50,5),this.filterInstructionsContainer.setVisible(!0),this.starterSelectContainer.add(this.filterInstructionsContainer),this.starterSelectMessageBoxContainer=a.add.container(0,a.game.canvas.height/6),this.starterSelectMessageBoxContainer.setVisible(!1),this.starterSelectContainer.add(this.starterSelectMessageBoxContainer),this.starterSelectMessageBox=Gt(1,-1,318,28),this.starterSelectMessageBox.setOrigin(0,1),this.starterSelectMessageBoxContainer.add(this.starterSelectMessageBox),this.message=Se(8,8,"",k.WINDOW,{maxLines:2}),this.message.setOrigin(0,0),this.starterSelectMessageBoxContainer.add(this.message),this.initPromptSprite(this.starterSelectMessageBoxContainer),this.statsContainer=new LS(6,16),a.add.existing(this.statsContainer),this.statsContainer.setVisible(!1),this.starterSelectContainer.add(this.statsContainer),this.menuContainer=a.add.container(-130,0),this.menuContainer.setName("menu"),this.menuContainer.setInteractive(new Phaser.Geom.Rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6),Phaser.Geom.Rectangle.Contains),this.menuContainer.setVisible(!1),this.menuOptions=$R(Mi).map(U=>Number.parseInt(Mi[U])),this.optionSelectText=pE(0,0,this.menuOptions.map(U=>`${u.t(`pokedexUiHandler:${Mi[U]}`)}`).join(`
`),k.WINDOW,{maxLines:this.menuOptions.length,lineSpacing:12}),this.menuDescriptions=[u.t("pokedexUiHandler:showBaseStats"),u.t("pokedexUiHandler:showAbilities"),u.t("pokedexUiHandler:showLevelMoves"),u.t("pokedexUiHandler:showEggMoves"),u.t("pokedexUiHandler:showTmMoves"),u.t("pokedexUiHandler:showBiomes"),u.t("pokedexUiHandler:showNatures"),u.t("pokedexUiHandler:toggleIVs"),u.t("pokedexUiHandler:showEvolutions")],this.scale=Wn(k.WINDOW,a.uiTheme).scale,this.menuBg=Gt(a.game.canvas.width/6-83,0,this.optionSelectText.displayWidth+19+24*this.scale,a.game.canvas.height/6-2),this.menuBg.setOrigin(0,0),this.optionSelectText.setPosition(this.menuBg.x+10+24*this.scale,this.menuBg.y+6),this.menuContainer.add(this.menuBg),this.menuContainer.add(this.optionSelectText),A.add(this.menuContainer),this.starterSelectContainer.add(this.menuContainer),this.baseStatsOverlay=new RP({x:317,y:0,width:133}),this.menuContainer.add(this.baseStatsOverlay),this.menuContainer.bringToTop(this.baseStatsOverlay);const C=1;this.moveInfoOverlay=new JR({scale:C,top:!0,x:1,y:a.game.canvas.height/6-JR.getHeight(C)-29}),this.starterSelectContainer.add(this.moveInfoOverlay),this.infoOverlay=new Ju({scale:C,x:1,y:a.game.canvas.height/6-Ju.getHeight(C)-29}),this.starterSelectContainer.add(this.infoOverlay),this.starterSelectContainer.bringToTop(this.starterSelectMessageBoxContainer),this.previousSpecies=[],this.previousStarterAttributes=[]}show(A){var s;return this.canUseCandies=["TitlePhase","SelectStarterPhase","CommandPhase"].includes(((s=a.getCurrentPhase())==null?void 0:s.constructor.name)??""),A.length>=1&&A[0]==="refresh"?!1:(this.species=A[0],this.savedStarterAttributes=A[1]??{shiny:!1,female:!0,variant:0,form:0},this.formIndex=this.savedStarterAttributes.form??0,this.filteredIndices=A[2]??null,this.starterSetup(),A[4]instanceof Function&&(this.exitCallback=A[4]),this.moveInfoOverlay.clear(),this.infoOverlay.clear(),super.show(A),this.starterSelectContainer.setVisible(!0),this.getUi().bringToTop(this.starterSelectContainer),this.starterAttributes=this.initStarterPrefs(),this.menuOptions=$R(Mi).map(R=>Number.parseInt(Mi[R])),this.menuContainer.setVisible(!0),this.speciesStarterDexEntry=this.species?a.gameData.dexData[this.species.speciesId]:null,this.setSpecies(),this.updateInstructions(),this.optionSelectText.setText(this.getMenuText()),this.setCursor(0),!0)}getMenuText(){const A=this.isSeen(),s=!!this.isCaught(this.getStarterSpecies(this.species));return this.menuOptions.map(R=>{const n=`${u.t(`pokedexUiHandler:${Mi[R]}`)}`,I=!A||!s&&(R===7||R===6)||this.tmMoves.length<1&&R===4,r=eA(I?k.SHADOW_TEXT:k.SETTINGS_VALUE,!1,a.uiTheme);return`[shadow=${eA(I?k.SHADOW_TEXT:k.SETTINGS_VALUE,!0,a.uiTheme)}][color=${r}]${n}[/color][/shadow]`}).join(`
`)}starterSetup(){var _,d;this.evolutions=[],this.prevolutions=[],this.battleForms=[];const A=this.species;let s=((_=this.species)==null?void 0:_.forms.length)>0?this.species.forms[this.formIndex].formKey:"";this.isFormGender=s==="male"||s==="female",this.isFormGender&&(this.savedStarterAttributes.female===!0&&s==="male"||this.savedStarterAttributes.female===!1&&s==="female")&&(this.formIndex=(this.formIndex+1)%2,s=this.species.forms[this.formIndex].formKey);const R=this.formIndex??0;this.starterId=this.getStarterSpeciesId(this.species.speciesId);const n=jt.hasOwnProperty(A.speciesId)?jt[A.speciesId]:[];if(A.forms.length>0){const f=A.forms[R];this.levelMoves=R>0&&iR.hasOwnProperty(A.speciesId)&&iR[A.speciesId].hasOwnProperty(R)?iR[A.speciesId][R]:vr[A.speciesId],this.ability1=f.ability1,this.ability2=f.ability2===f.ability1?void 0:f.ability2,this.abilityHidden=f.abilityHidden===f.ability1?void 0:f.abilityHidden,this.evolutions=n.filter(H=>H.preFormKey===f.formKey||H.preFormKey===null),this.baseStats=f.baseStats,this.baseTotal=f.baseTotal}else this.levelMoves=vr[A.speciesId],this.ability1=A.ability1,this.ability2=A.ability2===A.ability1?void 0:A.ability2,this.abilityHidden=A.abilityHidden===A.ability1?void 0:A.abilityHidden,this.evolutions=n,this.baseStats=A.baseStats,this.baseTotal=A.baseTotal;this.eggMoves=_E[this.starterId]??[],this.hasEggMoves=Array.from({length:4},(f,H)=>(a.gameData.starterData[this.starterId].eggMoves&1<<H)!==0),this.tmMoves=((d=Lk[A.speciesId])==null?void 0:d.filter(f=>Array.isArray(f)?f[0]===s:!0).map(f=>Array.isArray(f)?f[1]:f).sort((f,H)=>Ve[f].name>Ve[H].name?1:-1))??[];const I=qO.hasOwnProperty(A.speciesId)?A.speciesId:qO.hasOwnProperty(this.starterId)?this.starterId:IA[this.starterId],r=qO[I];this.passive=this.formIndex in r?r[R]:r[0];const L=a.gameData.starterData[this.starterId],N=L.abilityAttr;this.hasPassive=L.passiveAttr>0;const l=N&hE.ABILITY_1,C=N&hE.ABILITY_2,U=N&hE.ABILITY_HIDDEN;this.hasAbilities=[l,C,U];const D=dL[A.speciesId]??[];this.preBiomes=this.sanitizeBiomes((dL[this.starterId]??[]).filter(f=>!D.some(H=>f.biome===H.biome&&f.tier===H.tier)&&f.biome!==T.TOWN),this.starterId),this.biomes=this.sanitizeBiomes(D,A.speciesId);const M=mR.hasOwnProperty(A.speciesId)?mR[A.speciesId]:[];this.battleForms=M.filter(f=>f.preFormKey===this.species.forms[this.formIndex].formKey);const h=IA.hasOwnProperty(this.species.speciesId)?qA.find(f=>f.speciesId===IA[this.species.speciesId]):null;if(h){const f=jt.hasOwnProperty(h.speciesId)?jt[h.speciesId]:[];this.prevolutions=f.filter(H=>{var B,K;return H.speciesId===A.speciesId&&((H.evoFormKey===""||H.evoFormKey===null)&&(h.forms.some(Y=>{var v;return Y.formKey===((v=A.forms[R])==null?void 0:v.formKey)})||h.forms.length>0&&A.forms.length===0||h.forms.length===0&&(A.forms.length===0||((B=A.forms[R])==null?void 0:B.formKey)===""))||H.evoFormKey===((K=A.forms[R])==null?void 0:K.formKey))})}this.availableVariants=A.getFullUnlocksData()&de.VARIANT_3?3:1}sanitizeBiomes(A,s){return s===e.BURMY||s===e.WORMADAM?A.filter(R=>{const n=(()=>{switch(R.biome){case T.BEACH:return 1;case T.SLUM:return 2;default:return 0}})();return this.formIndex===n}):s===e.ROTOM?A.filter(R=>{const n=(()=>{switch(R.biome){case T.VOLCANO:return 1;case T.SEA:return 2;case T.ICE_CAVE:return 3;case T.MOUNTAIN:return 4;case T.TALL_GRASS:return 5;default:return 0}})();return this.formIndex===n}):s===e.LYCANROC?A.filter(R=>{const n=(()=>{switch(R.tod[0]){case S.DAY:case S.DAWN:return 0;case S.DUSK:return 2;case S.NIGHT:return 1;default:return 0}})();return this.formIndex===n}):A}isCaught(A){if(a.dexForDevs)return 255n;const s=A||this.species,R=a.gameData.dexData[s.speciesId],n=a.gameData.dexData[this.getStarterSpeciesId(s.speciesId)];return((R==null?void 0:R.caughtAttr)??0n)&((n==null?void 0:n.caughtAttr)??0n)&s.getFullUnlocksData()}isFormCaught(A,s){if(a.dexForDevs)return!0;const R=A||this.species,n=s!==void 0?s:this.formIndex,I=this.isCaught(R);return I&&(!R.forms.length||R.forms.length===1)?!0:(I&a.gameData.getFormAttr(n??0))>0n}isSeen(){var s;return(s=this.speciesStarterDexEntry)!=null&&s.seenAttr?!0:!!this.isCaught(this.getStarterSpecies(this.species))}initStarterPrefs(){const A=this.species?{...this.savedStarterAttributes}:null,s=this.isCaught();if(!A||!this.isSeen())return{};const R=s&de.SHINY,n=s&de.NON_SHINY;if(!R||A.shiny===void 0&&n?(A.shiny=!1,A.variant=0):(!n||A.shiny===void 0&&R)&&(A.shiny=!0,A.variant=0),this.unlockedVariants=[!!(R&&s&de.DEFAULT_VARIANT),!!(R&&s&de.VARIANT_2),!!(R&&s&de.VARIANT_3)],A.variant===void 0||Number.isNaN(A.variant)||A.variant<0)A.variant=0;else if(!this.unlockedVariants[A.variant]){let I=-1;for(let r=0;r<=A.variant&&r<this.unlockedVariants.length;r++)this.unlockedVariants[r]&&(I=r);A.variant=I!==-1?I:0}return A.female!==void 0?(A.female&&!(s&de.FEMALE)||!A.female&&!(s&de.MALE))&&(A.female=!A.female):s&de.FEMALE?A.female=!0:s&de.MALE&&(A.female=!1),A}showText(A,s,R,n,I,r,L){super.showText(A,s,R,n,I,r);const N=(A==null?void 0:A.indexOf(`
`))===-1;this.starterSelectMessageBox.setSize(318,N?28:42),L?(this.starterSelectMessageBox.setOrigin(0,0),this.starterSelectMessageBoxContainer.setY(0),this.message.setY(4)):(this.starterSelectMessageBoxContainer.setY(a.game.canvas.height/6),this.starterSelectMessageBox.setOrigin(0,1),this.message.setY(N?-22:-37)),this.starterSelectMessageBoxContainer.setVisible(!!(A!=null&&A.length))}isUpgradeIconEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===0}isUpgradeAnimationEnabled(){return a.candyUpgradeNotification!==0&&a.candyUpgradeDisplay===1}getStarterSpeciesId(A){return A===e.PIKACHU?[0,1,8].includes(this.formIndex)?e.PICHU:e.PIKACHU:tA.hasOwnProperty(A)?A:Rl[A]}getStarterSpecies(A){return tA.hasOwnProperty(A.speciesId)?A:qA.find(s=>s.speciesId===Rl[A.speciesId])??A}processInput(A){if(this.blockInput)return!1;const s=this.getUi();let R=!1,n=!1;const I=this.isCaught(),r=this.isFormCaught(),L=this.isSeen(),N=!!this.isCaught(this.getStarterSpecies(this.species));if(this.blockInputOverlay){if(A===X.CANCEL||A===X.ACTION)return this.blockInputOverlay=!1,this.baseStatsOverlay.clear(),s.showText(""),!0;if(A===X.UP||A===X.DOWN)this.blockInputOverlay=!1,this.baseStatsOverlay.clear(),s.showText("");else return!1}if(A===X.SUBMIT)R=!0;else if(A===X.CANCEL)this.statsMode?(this.toggleStatsMode(!1),R=!0):this.previousSpecies.length>0?(this.blockInput=!0,s.setModeWithoutClear(te.OPTION_SELECT).then(()=>{const l=this.previousSpecies.pop(),C=this.previousStarterAttributes.pop();this.moveInfoOverlay.clear(),this.clearText(),s.setModeForceTransition(te.POKEDEX_PAGE,l,C),R=!0}),this.blockInput=!1):(s.revertMode().then(()=>{if(this.exitCallback,this.exitCallback instanceof Function){const l=this.exitCallback;this.exitCallback=null,l()}}),R=!0);else{const l=a.gameData.starterData[this.starterId],C=this.starterAttributes;if(A===X.ACTION)switch(this.cursor){case 0:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{s.showText(u.t("pokedexUiHandler:showBaseStats"),null,()=>(this.baseStatsOverlay.show(this.baseStats,this.baseTotal),this.blockInput=!1,this.blockInputOverlay=!0,!0)),R=!0})):n=!0;break;case 2:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{s.showText(u.t("pokedexUiHandler:showLevelMoves"),null,()=>{this.moveInfoOverlay.show(Ve[this.levelMoves[0][1]]),s.setModeWithoutClear(te.OPTION_SELECT,{options:this.levelMoves.map(U=>({label:(U[0]>0?String(U[0]):"").padEnd(4," ")+Ve[U[1]].name,handler:o(()=>!1,"handler"),onHover:o(()=>{this.moveInfoOverlay.show(Ve[U[1]]),U[0]===0?this.showText(u.t("pokedexUiHandler:onlyEvolutionMove")):U[0]===-1?this.showText(u.t("pokedexUiHandler:onlyRecallMove")):U[0]<=5?this.showText(u.t("pokedexUiHandler:onStarterSelectMove")):this.showText(u.t("pokedexUiHandler:byLevelUpMove"))},"onHover")})).concat({label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 3:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{if(this.eggMoves.length===0)return s.showText(u.t("pokedexUiHandler:noEggMoves")),this.blockInput=!1,!0;s.showText(u.t("pokedexUiHandler:showEggMoves"),null,()=>{this.moveInfoOverlay.show(Ve[this.eggMoves[0]]),s.setModeWithoutClear(te.OPTION_SELECT,{options:[{label:u.t("pokedexUiHandler:common"),skip:!0,style:k.MONEY_WINDOW,handler:o(()=>!1,"handler"),onHover:o(()=>this.moveInfoOverlay.clear(),"onHover")},...this.eggMoves.slice(0,3).map((U,D)=>({label:Ve[U].name,style:this.hasEggMoves[D]?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.moveInfoOverlay.show(Ve[U]),"onHover")})),{label:u.t("pokedexUiHandler:rare"),skip:!0,style:k.MONEY_WINDOW,handler:o(()=>!1,"handler"),onHover:o(()=>this.moveInfoOverlay.clear(),"onHover")},{label:Ve[this.eggMoves[3]].name,style:this.hasEggMoves[3]?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.moveInfoOverlay.show(Ve[this.eggMoves[3]]),"onHover")},{label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>this.moveInfoOverlay.clear(),"onHover")}],supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 4:L?this.tmMoves.length<1?(s.showText(u.t("pokedexUiHandler:noTmMoves")),n=!0):(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{s.showText(u.t("pokedexUiHandler:showTmMoves"),null,()=>{this.moveInfoOverlay.show(Ve[this.tmMoves[0]]),s.setModeWithoutClear(te.OPTION_SELECT,{options:this.tmMoves.map(U=>({label:Ve[U].name,handler:o(()=>!1,"handler"),onHover:o(()=>{this.moveInfoOverlay.show(Ve[U])},"onHover")})).concat({label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>{this.moveInfoOverlay.clear()},"onHover")}),supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 1:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{s.showText(u.t("pokedexUiHandler:showAbilities"),null,()=>{this.infoOverlay.show(nA[this.ability1].description);const U=[];if(this.ability1&&U.push({label:nA[this.ability1].name,style:this.hasAbilities[0]>0?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.show(nA[this.ability1].description),"onHover")}),this.ability2){const D=nA[this.ability2];U.push({label:D==null?void 0:D.name,style:this.hasAbilities[1]>0?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.show(D==null?void 0:D.description),"onHover")})}if(this.abilityHidden){U.push({label:u.t("pokedexUiHandler:hidden"),skip:!0,style:k.MONEY_WINDOW,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.clear(),"onHover")});const D=nA[this.abilityHidden];U.push({label:nA[this.abilityHidden].name,style:this.hasAbilities[2]>0?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.show(D==null?void 0:D.description),"onHover")})}this.passive&&(U.push({label:u.t("pokedexUiHandler:passive"),skip:!0,style:k.MONEY_WINDOW,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.clear(),"onHover")}),U.push({label:nA[this.passive].name,style:this.hasPassive?k.SETTINGS_VALUE:k.SHADOW_TEXT,handler:o(()=>!1,"handler"),onHover:o(()=>this.infoOverlay.show(nA[this.passive].description),"onHover")})),U.push({label:u.t("menu:cancel"),handler:o(()=>(this.infoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>this.infoOverlay.clear(),"onHover")}),s.setModeWithoutClear(te.OPTION_SELECT,{options:U,supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 5:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{var D,M;if((!this.biomes||((D=this.biomes)==null?void 0:D.length)===0)&&(!this.preBiomes||((M=this.preBiomes)==null?void 0:M.length)===0))return s.showText(u.t("pokedexUiHandler:noBiomes")),s.playError(),this.blockInput=!1,!0;const U=[];s.showText(u.t("pokedexUiHandler:showBiomes"),null,()=>{this.biomes.map(h=>{U.push({label:u.t(`biome:${T[h.biome].toUpperCase()}`)+" - "+u.t(`biome:${zA[h.tier].toUpperCase()}`)+(h.tod.length===1&&h.tod[0]===-1?"":" ("+h.tod.map(_=>u.t(`biome:${S[_].toUpperCase()}`)).join(", ")+")"),handler:o(()=>!1,"handler")})}),this.preBiomes.length>0&&(U.push({label:u.t("pokedexUiHandler:preBiomes"),skip:!0,handler:o(()=>!1,"handler")}),this.preBiomes.map(h=>{U.push({label:u.t(`biome:${T[h.biome].toUpperCase()}`)+" - "+u.t(`biome:${zA[h.tier].toUpperCase()}`)+(h.tod.length===1&&h.tod[0]===-1?"":" ("+h.tod.map(_=>u.t(`biome:${S[_].toUpperCase()}`)).join(", ")+")"),handler:o(()=>!1,"handler")})})),U.push({label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>this.moveInfoOverlay.clear(),"onHover")}),s.setModeWithoutClear(te.OPTION_SELECT,{options:U,supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 8:L?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{var D,M,h;const U=[];if((!this.prevolutions||((D=this.prevolutions)==null?void 0:D.length)===0)&&(!this.evolutions||((M=this.evolutions)==null?void 0:M.length)===0)&&(!this.battleForms||((h=this.battleForms)==null?void 0:h.length)===0))return s.showText(u.t("pokedexUiHandler:noEvolutions")),s.playError(),this.blockInput=!1,!0;s.showText(u.t("pokedexUiHandler:showEvolutions"),null,()=>{var _;((_=this.prevolutions)==null?void 0:_.length)>0&&(U.push({label:u.t("pokedexUiHandler:prevolutions"),style:k.MONEY_WINDOW,skip:!0,handler:o(()=>!1,"handler")}),this.prevolutions.map(d=>{var K;const f=qA.find(Y=>Y.speciesId===IA[this.species.speciesId]),H=((K=f==null?void 0:f.forms.find(Y=>Y.formKey===d.preFormKey))==null?void 0:K.formIndex)??0,B=d.description;U.push({label:d.preFormKey?(f??this.species).getFormNameToDisplay(H,!0):(f??this.species).getExpandedSpeciesName(),handler:o(()=>{this.previousSpecies.push(this.species),this.previousStarterAttributes.push({...this.savedStarterAttributes});const Y=qA.find(q=>q.speciesId===IA[d.speciesId]),v=d.preFormKey?d.preFormKey:this.species.forms.length>0?this.species.forms[this.formIndex].formKey:"",Z=Y==null?void 0:Y.forms.find(q=>q.formKey===v),z=Z?Z.formIndex:0;return this.starterAttributes.form=z,this.savedStarterAttributes.form=z,this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,Y,this.savedStarterAttributes),!0},"handler"),onHover:o(()=>this.showText(B),"onHover")})})),this.evolutions.length>0&&(U.push({label:u.t("pokedexUiHandler:evolutions"),style:k.MONEY_WINDOW,skip:!0,handler:o(()=>!1,"handler")}),this.evolutions.map(d=>{const f=qA.find(z=>z.speciesId===d.speciesId),H=!!this.isCaught(f),B=d.evoFormKey?d.evoFormKey:this.species.forms.length>0?this.species.forms[this.formIndex].formKey:"",K=f==null?void 0:f.forms.find(z=>z.formKey===B),Y=K?K.formIndex:0,v=this.isFormCaught(f,Y),Z=d.description;U.push({label:d.evoFormKey?(f??this.species).getFormNameToDisplay(Y,!0):(f??this.species).getExpandedSpeciesName(),style:H&&v?k.WINDOW:k.SHADOW_TEXT,handler:o(()=>(this.previousSpecies.push(this.species),this.previousStarterAttributes.push({...this.savedStarterAttributes}),this.starterAttributes.form=Y,this.savedStarterAttributes.form=Y,this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,f,this.savedStarterAttributes),!0),"handler"),onHover:o(()=>this.showText(Z),"onHover")})})),this.battleForms.length>0&&(U.push({label:u.t("pokedexUiHandler:forms"),style:k.MONEY_WINDOW,skip:!0,handler:o(()=>!1,"handler")}),this.battleForms.map(d=>{var v;const f=(v=this.species)==null?void 0:v.forms.find(Z=>Z.formKey===d.formKey),H=f?f.formIndex:0;let B="";d.trigger?B=d.trigger.description:B="";let K=this.species.getFormNameToDisplay(H);K===""&&(K=this.species.name);const Y=this.isFormCaught(this.species,H);B&&U.push({label:K,style:Y?k.WINDOW:k.SHADOW_TEXT,handler:o(()=>{var q;this.previousSpecies.push(this.species),this.previousStarterAttributes.push({...this.savedStarterAttributes});const Z=this.species,z=(q=this.species.forms.find(J=>J.formKey===d.formKey))==null?void 0:q.formIndex;return this.starterAttributes.form=z,this.savedStarterAttributes.form=z,this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,Z,this.savedStarterAttributes,this.filteredIndices),!0},"handler"),onHover:o(()=>this.showText(B),"onHover")})})),U.push({label:u.t("menu:cancel"),handler:o(()=>(this.moveInfoOverlay.clear(),this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler"),onHover:o(()=>this.moveInfoOverlay.clear(),"onHover")}),s.setModeWithoutClear(te.OPTION_SELECT,{options:U,supportHover:!0,maxOptions:8,yOffset:19}),this.blockInput=!1})}),R=!0):n=!0;break;case 7:N?(this.toggleStatsMode(),s.setMode(te.POKEDEX_PAGE,"refresh"),R=!0):n=!0;break;case 6:N?(this.blockInput=!0,s.setMode(te.POKEDEX_PAGE,"refresh").then(()=>{s.showText(u.t("pokedexUiHandler:showNature"),null,()=>{var D;const U=a.gameData.getNaturesForAttr((D=this.speciesStarterDexEntry)==null?void 0:D.natureAttr);s.setModeWithoutClear(te.OPTION_SELECT,{options:U.map((M,h)=>({label:zR(M,!0,!0,!0,a.uiTheme),handler:o(()=>!1,"handler")})).concat({label:u.t("menu:cancel"),handler:o(()=>(this.clearText(),s.setMode(te.POKEDEX_PAGE,"refresh"),this.blockInput=!1,!0),"handler")}),maxOptions:8,yOffset:19})})}),R=!0):n=!0;break}else{const U=a.gameData.getSpeciesDexAttrProps(this.species,this.getCurrentDexProps(this.species.speciesId));switch(A){case X.CYCLE_SHINY:if(this.canCycleShiny)if(C.shiny){let D=U.variant;do if(D=(D+1)%3,D===0){if(this.isCaught()&de.DEFAULT_VARIANT)break}else if(D===1){if(this.isCaught()&de.VARIANT_2)break}else if(this.isCaught()&de.VARIANT_3)break;while(D!==U.variant);C.variant=D,this.savedStarterAttributes.variant=C.variant,this.isCaught()&de.NON_SHINY&&D<=U.variant?(this.setSpeciesDetails(this.species,{shiny:!1,variant:0}),R=!0,C.shiny=!1,this.savedStarterAttributes.shiny=C.shiny):(this.setSpeciesDetails(this.species,{variant:D}),R=!0)}else{const D=C.variant?C.variant:0;this.setSpeciesDetails(this.species,{shiny:!0,variant:D}),a.playSound("se/sparkle"),C.shiny=!0,this.savedStarterAttributes.shiny=C.shiny}break;case X.CYCLE_FORM:if(this.canCycleForm){const D=this.species.forms.length;let M=this.formIndex;do if(M=(M+1)%D,this.species.forms[M].isStarterSelectable||a.dexForDevs)break;while(M!==U.formIndex||this.species.forms[M].isUnobtainable);C.form=M,this.savedStarterAttributes.form=C.form,this.formIndex=M;let h=U.female;this.isFormGender&&(h=!U.female),C.female=h,this.savedStarterAttributes.female=C.female,this.starterSetup(),this.setSpeciesDetails(this.species,{formIndex:M,female:h}),R=this.setCursor(this.cursor)}break;case X.CYCLE_GENDER:if(this.canCycleGender){C.female=!U.female,this.savedStarterAttributes.female=C.female;let D=this.formIndex;this.isFormGender&&(D=this.formIndex===0?1:0),C.form=D,this.savedStarterAttributes.form=C.form,this.formIndex=D,this.starterSetup(),this.setSpeciesDetails(this.species,{female:!U.female,formIndex:D}),R=!0}break;case X.STATS:if(!I||!r||!this.canUseCandies)n=!0;else{const D=this.getUi();D.showText("");const M=[],h=l.passiveAttr,_=l.candyCount;if(!(h&Hs.UNLOCKED)){const H=jT(tA[this.starterId]);M.push({label:`x${H} ${u.t("pokedexUiHandler:unlockPassive")} (${nA[this.passive].name})`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||_>=H?(l.passiveAttr|=Hs.UNLOCKED|Hs.ENABLED,xe.FREE_CANDY_UPGRADE_OVERRIDE||(l.candyCount-=H),this.pokemonCandyCountText.setText(`x${l.candyCount}`),a.gameData.saveSystem().then(B=>{if(!B)return a.reset(!0)}),this.setSpeciesDetails(this.species),a.playSound("se/buy"),D.setMode(te.POKEDEX_PAGE,"refresh"),!0):!1,"handler"),style:this.isPassiveAvailable()?k.WINDOW:k.SHADOW_TEXT,item:"candy",itemArgs:this.isPassiveAvailable()?KE[this.starterId]:["808080","808080"]})}const d=l.valueReduction;if(d<A8){const H=qT(tA[this.starterId])[d];M.push({label:`x${H} ${u.t("pokedexUiHandler:reduceCost")}`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||_>=H?(l.valueReduction++,xe.FREE_CANDY_UPGRADE_OVERRIDE||(l.candyCount-=H),this.pokemonCandyCountText.setText(`x${l.candyCount}`),a.gameData.saveSystem().then(B=>{if(!B)return a.reset(!0)}),D.setMode(te.POKEDEX_PAGE,"refresh"),a.playSound("se/buy"),!0):!1,"handler"),style:this.isValueReductionAvailable()?k.WINDOW:k.SHADOW_TEXT,item:"candy",itemArgs:this.isValueReductionAvailable()?KE[this.starterId]:["808080","808080"]})}const f=eS(tA[this.starterId]);M.push({label:`x${f} ${u.t("pokedexUiHandler:sameSpeciesEgg")}`,handler:o(()=>xe.FREE_CANDY_UPGRADE_OVERRIDE||_>=f?a.gameData.eggs.length>=99&&!xe.UNLIMITED_EGG_COUNT_OVERRIDE?(this.showText(u.t("egg:tooManyEggs"),void 0,()=>this.showText("",0,()=>this.tutorialActive=!1),2e3,!1,void 0,!0),!1):(xe.FREE_CANDY_UPGRADE_OVERRIDE||(l.candyCount-=f),this.pokemonCandyCountText.setText(`x${l.candyCount}`),new sa({scene:a,species:this.starterId,sourceType:VE.SAME_SPECIES_EGG}).addEggToGameData(),a.gameData.saveSystem().then(B=>{if(!B)return a.reset(!0)}),D.setMode(te.POKEDEX_PAGE,"refresh"),a.playSound("se/buy"),!0):!1,"handler"),style:this.isSameSpeciesEggAvailable()?k.WINDOW:k.SHADOW_TEXT,item:"candy",itemArgs:this.isSameSpeciesEggAvailable()?KE[this.starterId]:["808080","808080"]}),M.push({label:u.t("menu:cancel"),handler:o(()=>(D.setMode(te.POKEDEX_PAGE,"refresh"),!0),"handler")}),D.setModeWithoutClear(te.OPTION_SELECT,{options:M,yOffset:47}),R=!0}break;case X.CYCLE_ABILITY:this.showBackSprite=!this.showBackSprite,this.showBackSprite?this.showBackSpriteLabel.setText(u.t("pokedexUiHandler:showFrontSprite")):this.showBackSpriteLabel.setText(u.t("pokedexUiHandler:showBackSprite")),this.setSpeciesDetails(this.species,{},!0),R=!0;break;case X.UP:this.cursor?R=this.setCursor(this.cursor-1):R=this.setCursor(this.menuOptions.length-1);break;case X.DOWN:this.cursor+1<this.menuOptions.length?R=this.setCursor(this.cursor+1):R=this.setCursor(0);break;case X.LEFT:if(this.filteredIndices&&this.filteredIndices.length<=1)return s.playError(),this.blockInput=!1,!0;this.blockInput=!0,s.setModeWithoutClear(te.OPTION_SELECT).then(()=>{this.previousSpecies.length===0&&(this.previousSpecies.push(this.species),this.previousStarterAttributes.push({...this.savedStarterAttributes}));let D;if(this.filteredIndices){const _=this.filteredIndices.findIndex(f=>f===this.species.speciesId),d=_<=0?this.filteredIndices.length-1:_-1;D=$e(this.filteredIndices[d])}else{const _=qA.findIndex(f=>f.speciesId===this.species.speciesId),d=_<=0?qA.length-1:_-1;D=qA[d]}const M=D==null?void 0:D.forms.find(_=>{var d,f;return _.formKey===((f=(d=this.species)==null?void 0:d.forms[this.formIndex])==null?void 0:f.formKey)}),h=M?M.formIndex:0;this.starterAttributes.form=h,this.savedStarterAttributes.form=h,this.moveInfoOverlay.clear(),this.clearText(),s.setModeForceTransition(te.POKEDEX_PAGE,D,this.savedStarterAttributes,this.filteredIndices)}),this.blockInput=!1;break;case X.RIGHT:if(this.filteredIndices&&this.filteredIndices.length<=1)return s.playError(),this.blockInput=!1,!0;s.setModeWithoutClear(te.OPTION_SELECT).then(()=>{this.previousSpecies.length===0&&(this.previousSpecies.push(this.species),this.previousStarterAttributes.push({...this.savedStarterAttributes}));let D;if(this.filteredIndices){const _=this.filteredIndices.findIndex(f=>f===this.species.speciesId),d=_>=this.filteredIndices.length-1?0:_+1;D=$e(this.filteredIndices[d])}else{const _=qA.findIndex(f=>f.speciesId===this.species.speciesId),d=_>=qA.length-1?0:_+1;D=qA[d]}const M=D==null?void 0:D.forms.find(_=>{var d,f;return _.formKey===((f=(d=this.species)==null?void 0:d.forms[this.formIndex])==null?void 0:f.formKey)}),h=M?M.formIndex:0;this.starterAttributes.form=h,this.savedStarterAttributes.form=h,this.moveInfoOverlay.clear(),this.clearText(),s.setModeForceTransition(te.POKEDEX_PAGE,D,this.savedStarterAttributes,this.filteredIndices)});break}}}return R?s.playSelect():n&&s.playError(),R||n}updateButtonIcon(A,s,R,n){var r;let I;if(s==="touch")switch(s="keyboard",A){case ot.Button_Cycle_Shiny:I="R.png";break;case ot.Button_Cycle_Form:I="F.png";break;case ot.Button_Cycle_Gender:I="G.png";break;case ot.Button_Cycle_Ability:I="E.png";break}else I=(r=a.inputController)==null?void 0:r.getIconForLatestInputRecorded(A);R.setTexture(s,I),R.setPosition(this.instructionRowX,this.instructionRowY),n.setPosition(this.instructionRowX+this.instructionRowTextOffset,this.instructionRowY),R.setVisible(!0),n.setVisible(!0),this.instructionsContainer.add([R,n]),this.instructionRowY+=8,this.instructionRowY>=24&&(this.instructionRowY=8,this.instructionRowX+=50)}updateInstructions(){this.instructionRowX=0,this.instructionRowY=0,this.filterInstructionRowX=0,this.filterInstructionRowY=0,this.hideInstructions(),this.instructionsContainer.removeAll(),this.filterInstructionsContainer.removeAll();let A;if(a.inputMethod==="gamepad"?A=a.inputController.getConfig(a.inputController.selectedDevice[oA.GAMEPAD]).padType:A=a.inputMethod,!A)return;const s=this.isFormCaught();this.isCaught()&&(s?(this.canUseCandies&&this.updateButtonIcon(ot.Button_Stats,A,this.candyUpgradeIconElement,this.candyUpgradeLabel),this.canCycleShiny&&this.updateButtonIcon(ot.Button_Cycle_Shiny,A,this.shinyIconElement,this.shinyLabel),this.canCycleGender&&this.updateButtonIcon(ot.Button_Cycle_Gender,A,this.genderIconElement,this.genderLabel)):this.instructionRowY+=8,this.canCycleForm&&this.updateButtonIcon(ot.Button_Cycle_Form,A,this.formIconElement,this.formLabel))}setCursor(A){const s=super.setCursor(A);this.cursorObj||(this.cursorObj=a.add.image(0,0,"cursor"),this.cursorObj.setOrigin(0,0),this.menuContainer.add(this.cursorObj)),this.cursorObj.setScale(this.scale*6),this.cursorObj.setPositionRelative(this.menuBg,7,6+(18+this.cursor*96)*this.scale);const R=this.getUi();return this.isCaught()&&this.isFormCaught()||this.isSeen()?R.showText(this.menuDescriptions[A]):R.showText(""),s}getFriendship(A){let s=a.gameData.starterData[this.starterId].friendship;(!s||s===void 0)&&(s=0);const R=nl(tA[this.starterId]);return{currentFriendship:s,friendshipCap:R}}isPassiveAvailable(){const A=a.gameData.starterData[this.starterId];return A.candyCount>=jT(tA[this.starterId])&&!(A.passiveAttr&Hs.UNLOCKED)}isValueReductionAvailable(){const A=a.gameData.starterData[this.starterId];return A.candyCount>=qT(tA[this.starterId])[A.valueReduction]&&A.valueReduction<A8}isSameSpeciesEggAvailable(){return a.gameData.starterData[this.starterId].candyCount>=eS(tA[this.starterId])}setSpecies(){const A=this.species,s=A?{...this.starterAttributes}:null;if(!A&&a.ui.getTooltip().visible&&a.ui.hideTooltip(),this.statsMode&&(this.isCaught()?(this.statsContainer.setVisible(!0),this.showStats()):(this.statsContainer.setVisible(!1),this.statsContainer.updateIvs(null))),A&&(this.isSeen()||this.isCaught()))if(this.pokemonNumberText.setText(ZR(A.speciesId,4)),this.isCaught()){const R=this.getCurrentDexProps(A.speciesId),n=a.gameData.getSpeciesDexAttrProps(A,R);s!=null&&s.variant&&!Number.isNaN(s.variant)&&n.shiny&&(n.variant=s.variant),n.form=(s==null?void 0:s.form)??n.form,n.female=(s==null?void 0:s.female)??n.female,this.setSpeciesDetails(A,{shiny:n.shiny,formIndex:n.form,female:n.female,variant:n.variant??0})}else{this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!0),this.type2Icon.setVisible(!0),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1);for(const I of this.pokemonShinyIcons)I.setVisible(!1);this.pokemonUncaughtText.setVisible(!0),this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1);const R=a.gameData.getSpeciesDefaultDexAttr(A,!0,!0),n=a.gameData.getSpeciesDexAttrProps(A,R);this.setSpeciesDetails(A,{shiny:n.shiny,formIndex:n.formIndex,female:n.female,variant:n.variant}),this.pokemonSprite.setTint(8421504)}else{this.pokemonNumberText.setText(A?ZR(A.speciesId,4):""),this.pokemonNameText.setText(A?"???":""),this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1),this.type1Icon.setVisible(!1),this.type2Icon.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1),this.pokemonLuckText.setVisible(!1);for(const R of this.pokemonShinyIcons)R.setVisible(!1);this.pokemonUncaughtText.setVisible(!!A),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1),this.pokemonFormText.setVisible(!1),this.setSpeciesDetails(A,{shiny:!1,formIndex:0,female:!1,variant:0}),this.pokemonSprite.setTint(0)}}setSpeciesDetails(A,s={},R){var C,U,D;let{shiny:n,formIndex:I,female:r,variant:L}=s;const N=A?this.starterAttributes:null,l=(A==null?void 0:A.genderDiffs)&&!Pe(r)||!Pe(I)||!Pe(n)||!Pe(L)||R;if(this.activeTooltip==="CANDY")if(this.species&&this.pokemonCandyContainer.visible){const{currentFriendship:M,friendshipCap:h}=this.getFriendship(this.species.speciesId);a.ui.editTooltip("",`${M}/${h}`)}else a.ui.hideTooltip();if((C=A==null?void 0:A.forms)!=null&&C.find(M=>M.formKey==="female")&&(r!==void 0?I=r?1:0:I!==void 0&&(r=I===1)),A&&(n===void 0&&(n=(N==null?void 0:N.shiny)??!1),r===void 0&&(r=(N==null?void 0:N.female)??!1),L===void 0&&(L=(N==null?void 0:N.variant)??0),I===void 0&&(I=(N==null?void 0:N.form)??0)),this.pokemonSprite.setVisible(!1),this.assetLoadCancelled&&(this.assetLoadCancelled.value=!0,this.assetLoadCancelled=null),A){const M=this.isCaught(A);if(!M){const v=this.starterAttributes;(n===void 0||n!==v.shiny)&&(n=v.shiny),(I===void 0||I!==v.form)&&(I=v.form),(r===void 0||r!==v.female)&&(r=v.female),(L===void 0||L!==v.variant)&&(L=v.variant)}const h=this.isFormCaught(),_=this.isSeen();this.shinyOverlay.setVisible(n??!1),this.pokemonNumberText.setColor(this.getTextColor(n?k.SUMMARY_GOLD:k.SUMMARY,!1)),this.pokemonNumberText.setShadowColor(this.getTextColor(n?k.SUMMARY_GOLD:k.SUMMARY,!0));const d=new Pt(!1);if(this.assetLoadCancelled=d,l){const v=!!this.showBackSprite;A.loadAssets(r,I,n,L,!0,v).then(()=>{d.value||(this.assetLoadCancelled=null,this.speciesLoaded.set(A.speciesId,!0),this.pokemonSprite.play(A.getSpriteKey(r,I,n,L,v)),this.pokemonSprite.setPipelineData("shiny",n),this.pokemonSprite.setPipelineData("variant",L),this.pokemonSprite.setPipelineData("spriteKey",A.getSpriteKey(r,I,n,L,v)),this.pokemonSprite.setVisible(!this.statsMode))})}else this.pokemonSprite.setVisible(!this.statsMode);const f=!!(M&de.NON_SHINY),H=!!(M&de.SHINY),B=[de.DEFAULT_VARIANT,de.VARIANT_2,de.VARIANT_3].filter(v=>M&v);this.canCycleShiny=f&&H||H&&B.length>1;const K=!!(M&de.MALE),Y=!!(M&de.FEMALE);if(this.canCycleGender=K&&Y,this.canCycleForm=a.dexForDevs?A.forms.length>1:A.forms.filter(v=>v.isStarterSelectable).filter(v=>v).length>1,M&&A.malePercent!==null){const v=r?At.FEMALE:At.MALE;this.pokemonGenderText.setText(kI(v)),this.pokemonGenderText.setColor(sn(v)),this.pokemonGenderText.setShadowColor(sn(v,!0))}else this.pokemonGenderText.setText("");if(h||_?this.pokemonNameText.setText(A.name):this.pokemonNameText.setText(A?"???":""),h?(this.species.loadAssets(r,I,n,L,!0).then(()=>{(this.species.forms&&this.species.forms.length>0?this.species.forms[I??this.formIndex]:this.species).cry()}),this.pokemonSprite.clearTint()):_?this.pokemonSprite.setTint(8421504):this.pokemonSprite.setTint(0),h){const v=a.gameData.getDexAttrLuck(this.isCaught());this.pokemonLuckText.setVisible(!!v),this.pokemonLuckText.setText(v.toString()),this.pokemonLuckText.setTint(lE(Math.min(v-1,2))),this.pokemonLuckLabelText.setVisible(this.pokemonLuckText.visible)}else this.pokemonLuckText.setVisible(!1),this.pokemonLuckLabelText.setVisible(!1);if(h){let v=aa(G[A.growthRate]);const Z=v.replace(" ","_");u.exists("growth:"+Z)&&(v=u.t("growth:"+Z)),this.pokemonGrowthRateText.setText(v),this.pokemonGrowthRateText.setColor(FC(A.growthRate)),this.pokemonGrowthRateText.setShadowColor(FC(A.growthRate,!0)),this.pokemonGrowthRateLabelText.setVisible(!0)}else this.pokemonGrowthRateText.setText(""),this.pokemonGrowthRateLabelText.setVisible(!1);if(h){const v=KE[this.starterId];this.pokemonUncaughtText.setVisible(!1),this.pokemonCaughtCountText.setText(`${(U=this.speciesStarterDexEntry)==null?void 0:U.caughtCount}`),A.speciesId===e.MANAPHY||A.speciesId===e.PHIONE?this.pokemonHatchedIcon.setFrame("manaphy"):this.pokemonHatchedIcon.setFrame(Wi(A)),this.pokemonHatchedCountText.setText(`${(D=this.speciesStarterDexEntry)==null?void 0:D.hatchedCount}`);const Z=this.getCurrentDexProps(A.speciesId),q=a.gameData.getSpeciesDexAttrProps(A,Z).variant;for(let J=0;J<3;J++){const Ae=this.pokemonShinyIcons[J];if(J<this.availableVariants){if(!this.unlockedVariants[J])Ae.setTint(0);else if(n&&J===q){const Q=lE(J);Ae.setTint(Q)}else Ae.setTint(8421504);Ae.setVisible(!0)}else Ae.setVisible(!1)}if(this.pokemonCaughtHatchedContainer.setVisible(!0),this.pokemonCaughtHatchedContainer.setY(25),this.pokemonCandyIcon.setTint(Es(bE(v[0]))),this.pokemonCandyOverlayIcon.setTint(Es(bE(v[1]))),this.pokemonCandyCountText.setText(`x${A.speciesId===e.PIKACHU?0:a.gameData.starterData[this.starterId].candyCount}`),this.pokemonCandyContainer.setVisible(!0),IA.hasOwnProperty(A.speciesId))this.pokemonHatchedIcon.setVisible(!1),this.pokemonHatchedCountText.setVisible(!1),this.pokemonFormText.setY(36);else{this.pokemonHatchedIcon.setVisible(!0),this.pokemonHatchedCountText.setVisible(!0),this.pokemonFormText.setY(42);const{currentFriendship:J,friendshipCap:Ae}=this.getFriendship(this.species.speciesId),Q=16-16*(J/Ae);this.pokemonCandyDarknessOverlay.setCrop(0,0,16,Q),this.pokemonCandyContainer.on("pointerover",()=>{a.ui.showTooltip("",`${J}/${Ae}`,!0),this.activeTooltip="CANDY"}),this.pokemonCandyContainer.on("pointerout",()=>{a.ui.hideTooltip(),this.activeTooltip=void 0})}}else{this.pokemonUncaughtText.setVisible(!0),this.pokemonCaughtHatchedContainer.setVisible(!1),this.pokemonCandyContainer.setVisible(!1);for(const v of this.pokemonShinyIcons)v.setVisible(!1)}if(h||_){const v=ms(A.speciesId,I);this.setTypeIcons(v.type1,v.type2),a7.includes(A.speciesId)&&!I?this.pokemonFormText.setText(""):this.pokemonFormText.setText(A.getFormNameToDisplay(I)),this.pokemonFormText.setVisible(!0),h||this.pokemonFormText.setY(18)}else this.setTypeIcons(null,null),this.pokemonFormText.setText(""),this.pokemonFormText.setVisible(!1)}else this.shinyOverlay.setVisible(!1),this.pokemonNumberText.setColor(this.getTextColor(k.SUMMARY)),this.pokemonNumberText.setShadowColor(this.getTextColor(k.SUMMARY,!0)),this.pokemonGenderText.setText(""),this.setTypeIcons(null,null);this.updateInstructions()}setTypeIcons(A,s){A!==null?(this.type1Icon.setVisible(!0),this.type1Icon.setFrame(i[A].toLowerCase())):this.type1Icon.setVisible(!1),s!==null?(this.type2Icon.setVisible(!0),this.type2Icon.setFrame(i[s].toLowerCase())):this.type2Icon.setVisible(!1)}getCurrentDexProps(A){var I,r,L,N,l,C,U;let s=0n;const R=qA.find(D=>D.speciesId===A),n=a.gameData.dexData[A].caughtAttr&a.gameData.dexData[this.getStarterSpeciesId(A)].caughtAttr&((R==null?void 0:R.getFullUnlocksData())??0n);return(I=this.starterAttributes)!=null&&I.female||(n&de.FEMALE)>0n&&(n&de.MALE)===0n?s+=de.FEMALE:s+=de.MALE,(r=this.starterAttributes)!=null&&r.shiny||(n&de.SHINY)>0n&&((L=this.starterAttributes)==null?void 0:L.shiny)!==!1?(s+=de.SHINY,((N=this.starterAttributes)==null?void 0:N.variant)!==void 0?s+=BigInt(Math.pow(2,(l=this.starterAttributes)==null?void 0:l.variant))*de.DEFAULT_VARIANT:(n&de.VARIANT_3)>0?s+=de.VARIANT_3:(n&de.VARIANT_2)>0?s+=de.VARIANT_2:s+=de.DEFAULT_VARIANT):(s+=de.NON_SHINY,s+=de.DEFAULT_VARIANT),(C=this.starterAttributes)!=null&&C.form?s+=BigInt(Math.pow(2,(U=this.starterAttributes)==null?void 0:U.form))*de.DEFAULT_FORM:s+=a.gameData.getFormAttr(a.gameData.getFormIndex(n)),s}toggleStatsMode(A){A===void 0&&(A=!this.statsMode),A?(this.showStats(),this.statsMode=!0,this.pokemonSprite.setVisible(!1)):(this.statsMode=!1,this.statsContainer.setVisible(!1),this.pokemonSprite.setVisible(!0),this.statsContainer.updateIvs(null))}showStats(){this.speciesStarterDexEntry&&(this.statsContainer.setVisible(!0),this.statsContainer.updateIvs(this.speciesStarterDexEntry.ivs))}clearText(){this.starterSelectMessageBoxContainer.setVisible(!1),super.clearText()}hideInstructions(){this.candyUpgradeIconElement.setVisible(!1),this.candyUpgradeLabel.setVisible(!1),this.shinyIconElement.setVisible(!1),this.shinyLabel.setVisible(!1),this.formIconElement.setVisible(!1),this.formLabel.setVisible(!1),this.genderIconElement.setVisible(!1),this.genderLabel.setVisible(!1),this.variantIconElement.setVisible(!1),this.variantLabel.setVisible(!1)}clear(){super.clear(),this.cursor=-1,this.hideInstructions(),this.activeTooltip=void 0,a.ui.hideTooltip(),this.starterSelectContainer.setVisible(!1),this.blockInput=!1,this.showBackSprite=!1,this.showBackSpriteLabel.setText(u.t("pokedexUiHandler:showBackSprite")),this.statsMode&&this.toggleStatsMode(!1)}checkIconId(A,s,R,n,I,r){A.frame.name!==s.getIconId(R,n,I,r)&&(`${s.name}${A.frame.name}${R}${n}${I}${r}`,A.setTexture(s.getIconAtlasKey(n,!1,r)),A.setFrame(s.getIconId(R,n,!1,r)))}};o(yK,"PokedexPageUiHandler");let mS=yK;var te=(E=>(E[E.MESSAGE=0]="MESSAGE",E[E.TITLE=1]="TITLE",E[E.COMMAND=2]="COMMAND",E[E.FIGHT=3]="FIGHT",E[E.BALL=4]="BALL",E[E.TARGET_SELECT=5]="TARGET_SELECT",E[E.MODIFIER_SELECT=6]="MODIFIER_SELECT",E[E.SAVE_SLOT=7]="SAVE_SLOT",E[E.PARTY=8]="PARTY",E[E.SUMMARY=9]="SUMMARY",E[E.STARTER_SELECT=10]="STARTER_SELECT",E[E.EVOLUTION_SCENE=11]="EVOLUTION_SCENE",E[E.EGG_HATCH_SCENE=12]="EGG_HATCH_SCENE",E[E.EGG_HATCH_SUMMARY=13]="EGG_HATCH_SUMMARY",E[E.CONFIRM=14]="CONFIRM",E[E.OPTION_SELECT=15]="OPTION_SELECT",E[E.MENU=16]="MENU",E[E.MENU_OPTION_SELECT=17]="MENU_OPTION_SELECT",E[E.SETTINGS=18]="SETTINGS",E[E.SETTINGS_DISPLAY=19]="SETTINGS_DISPLAY",E[E.SETTINGS_AUDIO=20]="SETTINGS_AUDIO",E[E.SETTINGS_GAMEPAD=21]="SETTINGS_GAMEPAD",E[E.GAMEPAD_BINDING=22]="GAMEPAD_BINDING",E[E.SETTINGS_KEYBOARD=23]="SETTINGS_KEYBOARD",E[E.KEYBOARD_BINDING=24]="KEYBOARD_BINDING",E[E.ACHIEVEMENTS=25]="ACHIEVEMENTS",E[E.GAME_STATS=26]="GAME_STATS",E[E.EGG_LIST=27]="EGG_LIST",E[E.EGG_GACHA=28]="EGG_GACHA",E[E.POKEDEX=29]="POKEDEX",E[E.POKEDEX_SCAN=30]="POKEDEX_SCAN",E[E.POKEDEX_PAGE=31]="POKEDEX_PAGE",E[E.LOGIN_FORM=32]="LOGIN_FORM",E[E.REGISTRATION_FORM=33]="REGISTRATION_FORM",E[E.LOADING=34]="LOADING",E[E.SESSION_RELOAD=35]="SESSION_RELOAD",E[E.UNAVAILABLE=36]="UNAVAILABLE",E[E.CHALLENGE_SELECT=37]="CHALLENGE_SELECT",E[E.RENAME_POKEMON=38]="RENAME_POKEMON",E[E.RUN_HISTORY=39]="RUN_HISTORY",E[E.RUN_INFO=40]="RUN_INFO",E[E.TEST_DIALOGUE=41]="TEST_DIALOGUE",E[E.AUTO_COMPLETE=42]="AUTO_COMPLETE",E[E.ADMIN=43]="ADMIN",E[E.MYSTERY_ENCOUNTER=44]="MYSTERY_ENCOUNTER",E))(te||{});const E8=[7,8,9,10,11,12,27,28,29,31,37,39],ml=[1,14,15,16,17,22,24,18,20,19,21,23,25,26,30,32,33,34,35,36,38,41,42,43,44,40],wK=class wK extends Phaser.GameObjects.Container{constructor(){super(a,0,a.game.canvas.height/6),this.mode=0,this.modeChain=[],this.handlers=[new oh,new V_,new xh,new bh,new kh,new __,new wh,new jh,new kE,new Xh,new HS,new Ku,new p_,new eP,new Cu,new BS,new g_,new BS(17),new wu,new Qu,new $u,new xu,new Z_,new Xu,new Q_,new m_,new v_,new K_,new F_,new gS,new sP(41),new mS,new W_,new y_,new w_,new k_,new b_,new d_,new $_,new J_,new hu,new tP(41),new AP,new B_,new EP]}setup(){this.setName(`ui-${te[this.mode]}`);for(const A of this.handlers)A.setup();this.overlay=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,0),this.overlay.setName("rect-ui-overlay"),this.overlay.setOrigin(0,0),a.uiContainer.add(this.overlay),this.overlay.setVisible(!1),this.setupTooltip(),this.achvBar=new H_,this.achvBar.setup(),a.uiContainer.add(this.achvBar),this.savingIcon=new x_,this.savingIcon.setup(),a.uiContainer.add(this.savingIcon)}setupTooltip(){this.tooltipContainer=a.add.container(0,0),this.tooltipContainer.setName("tooltip"),this.tooltipContainer.setVisible(!1),this.tooltipBg=Gt(0,0,128,31),this.tooltipBg.setName("window-tooltip-bg"),this.tooltipBg.setOrigin(0,0),this.tooltipTitle=Se(64,4,"",k.TOOLTIP_TITLE),this.tooltipTitle.setName("text-tooltip-title"),this.tooltipTitle.setOrigin(.5,0),this.tooltipContent=Se(6,16,"",k.TOOLTIP_CONTENT),this.tooltipContent.setName("text-tooltip-content"),this.tooltipContent.setWordWrapWidth(850),this.tooltipContainer.add(this.tooltipBg),this.tooltipContainer.add(this.tooltipTitle),this.tooltipContainer.add(this.tooltipContent),a.uiContainer.add(this.tooltipContainer)}getHandler(){return this.handlers[this.mode]}getMessageHandler(){return this.handlers[0]}processInfoButton(A){var s,R;return this.overlayActive?!1:[14,2,3,0,5].includes(this.mode)?((s=a)==null||s.processInfoButton(A),!0):((R=a)==null||R.processInfoButton(!1),!0)}processInput(A){if(this.overlayActive)return!1;const s=this.getHandler();return s instanceof ia&&s.tutorialActive?s.processTutorialInput(A):s.processInput(A)}showTextPromise(A,s=0,R=!0,n){return new Promise(I=>{this.showText(A??"",null,()=>I(),s,R,n)})}showText(A,s,R,n,I,r){const L=[],N=["#POKEMON1","#POKEMON2"];for(let l=0;l<a.getPlayerField().length;l++)L.push(a.getPlayerField()[l].getNameToRender()),A=A.split(L[l]).join(N[l]);if(I&&A.indexOf("$")>-1){const l=A.split(/\$/g).map(U=>U.trim());let C=o(()=>R&&R(),"showMessageAndCallback");for(let U=l.length-1;U>=0;U--){const D=C;l[U]=l[U].split(N[0]).join(L[0]),l[U]=l[U].split(N[1]).join(L[1]),C=o(()=>this.showText(l[U],null,D,null,!0),"showMessageAndCallback")}C()}else{const l=this.getHandler();for(let C=0;C<a.getPlayerField().length;C++)A=A.split(N[C]).join(L[C]);l instanceof hs?l.showText(A,s,R,n,I,r):this.getMessageHandler().showText(A,s,R,n,I,r)}}showDialogue(A,s,R=0,n,I,r){let L=!1,N=A;const l=a.gameData.gender??Jt.UNSET,C=Jt[l].toLowerCase();if(u.exists(A)){const D=A;if(L=!0,N=u.t(D,{context:C}),this.shouldSkipDialogue(D)){n();return}}let U=o(()=>{L&&a.gameData.saveSeenDialogue(A),n()},"showMessageAndCallback");if(N.indexOf("$")>-1){const D=N.split(/\$/g).map(M=>M.trim());for(let M=D.length-1;M>=0;M--){const h=U;U=o(()=>this.showDialogue(D[M],s,null,h),"showMessageAndCallback")}U()}else{const D=this.getHandler();D instanceof hs?D.showDialogue(N,s,R,U,I,!0,r):this.getMessageHandler().showDialogue(N,s,R,U,I,!0,r)}}shouldSkipDialogue(A){return!!(u.exists(A)&&a.skipSeenDialogues&&a.gameData.getSeenDialogues()[A]===!0)}getTooltip(){return{visible:this.tooltipContainer.visible,title:this.tooltipTitle.text,content:this.tooltipContent.text}}showTooltip(A,s,R){this.tooltipContainer.setVisible(!0),this.editTooltip(A,s),R?a.uiContainer.moveAbove(this.tooltipContainer,this):a.uiContainer.moveBelow(this.tooltipContainer,this)}editTooltip(A,s){this.tooltipTitle.setText(A||"");const R=this.tooltipContent.runWordWrap(s);this.tooltipContent.setText(R),this.tooltipContent.y=A?16:4,this.tooltipBg.width=Math.min(Math.max(this.tooltipTitle.displayWidth,this.tooltipContent.displayWidth)+12,838),this.tooltipBg.height=(A?31:19)+10.5*(R.split(`
`).length-1),this.tooltipTitle.x=this.tooltipBg.width/2}hideTooltip(){this.tooltipContainer.setVisible(!1),this.tooltipTitle.clearTint()}update(){if(this.tooltipContainer.visible){const A=a.inputMethod==="touch",s=a.game.input.activePointer.x,R=a.game.input.activePointer.y,n=this.tooltipBg.width,I=this.tooltipBg.height,r=2;let L=A?r:s/6+r,N=A?r:R/6+r;A?s<=a.game.canvas.width/2&&R<=a.game.canvas.height/2&&(L=a.game.canvas.width/6-n-r):(L+n+r>a.game.canvas.width/6&&(L=Math.max(r,s/6-n-r)),N+I+r>a.game.canvas.height/6&&(N=Math.max(r,R/6-I-r))),this.tooltipContainer.setPosition(L,N)}}clearText(){const A=this.getHandler();A instanceof hs?A.clearText():this.getMessageHandler().clearText()}setCursor(A){const s=this.getHandler().setCursor(A);return s&&this.playSelect(),s}playSelect(){a.playSound("ui/select")}playError(){a.playSound("ui/error")}fadeOut(A){return new Promise(s=>{if(this.overlayActive)return s();this.overlayActive=!0,this.overlay.setAlpha(0),this.overlay.setVisible(!0),a.tweens.add({targets:this.overlay,alpha:1,duration:A,ease:"Sine.easeOut",onComplete:o(()=>s(),"onComplete")})})}fadeIn(A){return new Promise(s=>{if(!this.overlayActive)return s();a.tweens.add({targets:this.overlay,alpha:0,duration:A,ease:"Sine.easeIn",onComplete:o(()=>{this.overlay.setVisible(!1),s()},"onComplete")}),this.overlayActive=!1})}setModeInternal(A,s,R,n,I){return new Promise(r=>{if(this.mode===A&&!R){r();return}const L=o(()=>{if(this.mode!==A){s&&this.getHandler().clear(),n&&this.mode&&!s&&(this.modeChain.push(this.mode),a.updateGameInfo()),this.mode=A;const N=document==null?void 0:document.getElementById("touchControls");N&&(N.dataset.uiMode=te[A]),this.getHandler().show(I)}r()},"doSetMode");!n&&(E8.indexOf(this.mode)>-1||E8.indexOf(A)>-1)&&ml.indexOf(this.mode)===-1&&ml.indexOf(A)===-1||n&&ml.indexOf(A)===-1?this.fadeOut(250).then(()=>{a.time.delayedCall(100,()=>{L(),this.fadeIn(250)})}):L()})}getMode(){return this.mode}setMode(A,...s){return this.setModeInternal(A,!0,!1,!1,s)}setModeForceTransition(A,...s){return this.setModeInternal(A,!0,!0,!1,s)}setModeWithoutClear(A,...s){return this.setModeInternal(A,!1,!1,!1,s)}setOverlayMode(A,...s){return this.setModeInternal(A,!1,!1,!0,s)}resetModeChain(){this.modeChain=[],a.updateGameInfo()}revertMode(){return new Promise(A=>{var n;if(!((n=this==null?void 0:this.modeChain)!=null&&n.length))return A(!1);const s=this.mode,R=o(()=>{this.getHandler().clear(),this.mode=this.modeChain.pop(),a.updateGameInfo();const I=document.getElementById("touchControls");I&&(I.dataset.uiMode=te[this.mode]),A(!0)},"doRevertMode");ml.indexOf(s)===-1?this.fadeOut(250).then(()=>{a.time.delayedCall(100,()=>{R(),this.fadeIn(250)})}):R()})}revertModes(){return new Promise(A=>{var s;if(!((s=this==null?void 0:this.modeChain)!=null&&s.length))return A();this.revertMode().then(R=>Ak(R,this.revertModes).then(()=>A()))})}getModeChain(){return this.modeChain}getGamepadType(){return a.inputMethod==="gamepad"?a.inputController.getConfig(a.inputController.selectedDevice[oA.GAMEPAD]).padType:a.inputMethod}freeUIData(){this.handlers.forEach(A=>A.destroy()),this.handlers=[],NO.getInstance().clearNavigationMenus()}};o(wK,"UI");let OP=wK;function NJ(){const E=this,A=o(N=>N instanceof x7?N.value:E.gameSpeed===1?N:Math.ceil(N/=E.gameSpeed),"transformValue"),s=this.time.addEvent;this.time.addEvent=function(N){return!(N instanceof Phaser.Time.TimerEvent)&&N.delay&&(N.delay=A(N.delay)),s.apply(this,[N])};const R=this.tweens.add;this.tweens.add=function(N){return N.loopDelay&&(N.loopDelay=A(N.loopDelay)),N instanceof Phaser.Tweens.TweenChain||(N.duration&&(N.duration=A(N.duration)),N instanceof Phaser.Tweens.Tween||(N.delay&&(N.delay=A(N.delay)),N.repeatDelay&&(N.repeatDelay=A(N.repeatDelay)),N.hold&&(N.hold=A(N.hold)))),R.apply(this,[N])};const n=this.tweens.chain;this.tweens.chain=function(N){if(N.tweens)for(const l of N.tweens)l.duration&&(l.duration=A(l.duration)),l.delay&&(l.delay=A(l.delay)),l.repeatDelay&&(l.repeatDelay=A(l.repeatDelay)),l.loopDelay&&(l.loopDelay=A(l.loopDelay)),l.hold&&(l.hold=A(l.hold));return n.apply(this,[N])};const I=this.tweens.addCounter;this.tweens.addCounter=function(N){return N.duration&&(N.duration=A(N.duration)),N.delay&&(N.delay=A(N.delay)),N.repeatDelay&&(N.repeatDelay=A(N.repeatDelay)),N.loopDelay&&(N.loopDelay=A(N.loopDelay)),N.hold&&(N.hold=A(N.hold)),I.apply(this,[N])};const r=oO.fadeOut;oO.fadeOut=(N,l,C,U)=>r(a,l,A(C),U);const L=oO.fadeIn;oO.fadeIn=(N,l,C,U,D)=>L(a,l,A(C),U,D)}o(NJ,"initGameSpeed");const s8=118,lJ=0,R8=-116,vK=class vK extends Phaser.GameObjects.Container{constructor(){super(a,s8,R8),this.abilityBars=[],this.player=!0,this.shown=!1}setup(){for(const A of["ability_bar_right","ability_bar_left"]){const s=a.add.image(0,0,A);s.setOrigin(0,0),s.setVisible(!1),this.add(s),this.abilityBars.push(s)}this.abilityBarText=Se(15,3,"",k.MESSAGE,{fontSize:"72px"}),this.abilityBarText.setOrigin(0,0),this.abilityBarText.setWordWrapWidth(600,!0),this.add(this.abilityBarText),this.bringToTop(this.abilityBarText),this.setVisible(!1),this.setX(-118)}setVisible(A){return this.abilityBars[+this.player].setVisible(A),this.shown=A,this}async startTween(A,s){return this.setVisible(!0),s&&this.abilityBarText.setText(s),new Promise(R=>{a.tweens.add({...A,onComplete:o(()=>{A.onComplete&&A.onComplete(),R()},"onComplete")})})}async showAbility(A,s,R=!1,n=!0){const I=`${u.t("fightUiHandler:abilityFlyInText",{pokemonName:A,passive:R?u.t("fightUiHandler:passive"):"",abilityName:s})}`;this.screenRight=a.scaledCanvas.width,n!==this.player&&(this.setX(n?-118:this.screenRight),this.player=n),a.fieldUI.bringToTop(this);let r=R8;return this.player?r+=a.currentBattle.double?14:0:r-=a.currentBattle.double?28:14,this.setY(r),this.startTween({targets:this,x:this.player?lJ:this.screenRight-s8,duration:500,ease:"Sine.easeOut",hold:1e3},I)}async hide(){return this.startTween({targets:this,x:this.player?-118:this.screenRight,duration:200,ease:"Sine.easeIn",onComplete:o(()=>{this.setVisible(!1)},"onComplete")})}isVisible(){return this.shown}};o(vK,"AbilityBar");let nP=vK;const CJ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform vec3 terrainColor;
uniform float terrainColorRatio;

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

void main() {
    vec4 texture;

    %forloop%

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color = vec4(blendHardLight(color.rgb, dayNightTint), color.a);
    }

    if (terrainColorRatio > 0.0 && (1.0 - terrainColorRatio) < outTexCoord.y) {
        if (color.a > 0.0 && (terrainColor.r > 0.0 || terrainColor.g > 0.0 || terrainColor.b > 0.0)) {
            color.rgb = mix(color.rgb, blendHue(color.rgb, terrainColor), 1.0);
        }
    }

    gl_FragColor = color;
}
`,uJ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main() {
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,VK=class VK extends Phaser.Renderer.WebGL.Pipelines.MultiPipeline{constructor(A,s){super(s||{game:A,name:"field-sprite",fragShader:CJ,vertShader:uJ})}onPreRender(){this.set1f("time",0),this.set1i("ignoreTimeTint",0),this.set1f("terrainColorRatio",0),this.set3fv("terrainColor",[0,0,0])}onBind(A){var L,N;super.onBind();const R=A.pipelineData,n=R.ignoreTimeTint,I=R.terrainColorRatio||0,r=(L=a.currentBattle)!=null&&L.waveIndex?(a.currentBattle.waveIndex+a.waveCycleOffset)%40/40:b7();this.set1f("time",r),this.set1i("ignoreTimeTint",n?1:0),this.set1i("isOutside",a.arena.isOutside()?1:0),this.set3fv("dayTint",a.arena.getDayTint().map(l=>l/255)),this.set3fv("duskTint",a.arena.getDuskTint().map(l=>l/255)),this.set3fv("nightTint",a.arena.getNightTint().map(l=>l/255)),this.set3fv("terrainColor",EX(((N=a.arena.terrain)==null?void 0:N.terrainType)||Nt.NONE).map(l=>l/255)),this.set1f("terrainColorRatio",I)}onBatch(A){A&&this.flush()}};o(VK,"FieldSpritePipeline");let zu=VK;const UJ=`
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif

uniform sampler2D uMainSampler[%count%];

varying vec2 outTexCoord;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

uniform float time;
uniform int ignoreTimeTint;
uniform int isOutside;
uniform vec3 dayTint;
uniform vec3 duskTint;
uniform vec3 nightTint;
uniform float teraTime;
uniform vec3 teraColor;
uniform int hasShadow;
uniform int yCenter;
uniform float fieldScale;
uniform float vCutoff;
uniform vec2 relPosition;
uniform vec2 texFrameUv;
uniform vec2 size;
uniform vec2 texSize;
uniform float yOffset;
uniform float yShadowOffset;
uniform vec4 tone;
uniform ivec4 baseVariantColors[32];
uniform vec4 variantColors[32];
uniform ivec4 spriteColors[32];
uniform ivec4 fusionSpriteColors[32];

const vec3 lumaF = vec3(.299, .587, .114);

float blendOverlay(float base, float blend) {
	return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));
}

vec3 blendOverlay(vec3 base, vec3 blend) {
	return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));
}

vec3 blendHardLight(vec3 base, vec3 blend) {
	return blendOverlay(blend, base);
}

float hue2rgb(float f1, float f2, float hue) {
	if (hue < 0.0)
		hue += 1.0;
	else if (hue > 1.0)
		hue -= 1.0;
	float res;
	if ((6.0 * hue) < 1.0)
		res = f1 + (f2 - f1) * 6.0 * hue;
	else if ((2.0 * hue) < 1.0)
		res = f2;
	else if ((3.0 * hue) < 2.0)
		res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;
	else
		res = f1;
	return res;
}

vec3 rgb2hsl(vec3 color) {
	vec3 hsl;
	
	float fmin = min(min(color.r, color.g), color.b);
	float fmax = max(max(color.r, color.g), color.b);
	float delta = fmax - fmin;

	hsl.z = (fmax + fmin) / 2.0;

	if (delta == 0.0) {
		hsl.x = 0.0;
		hsl.y = 0.0;
	} else {
		if (hsl.z < 0.5)
			hsl.y = delta / (fmax + fmin);
		else
			hsl.y = delta / (2.0 - fmax - fmin);
		
		float deltaR = (((fmax - color.r) / 6.0) + (delta / 2.0)) / delta;
		float deltaG = (((fmax - color.g) / 6.0) + (delta / 2.0)) / delta;
		float deltaB = (((fmax - color.b) / 6.0) + (delta / 2.0)) / delta;

		if (color.r == fmax )
			hsl.x = deltaB - deltaG;
		else if (color.g == fmax)
			hsl.x = (1.0 / 3.0) + deltaR - deltaB;
		else if (color.b == fmax)
			hsl.x = (2.0 / 3.0) + deltaG - deltaR;

		if (hsl.x < 0.0)
			hsl.x += 1.0;
		else if (hsl.x > 1.0)
			hsl.x -= 1.0;
	}

	return hsl;
}

vec3 hsl2rgb(vec3 hsl) {
	vec3 rgb;
	
	if (hsl.y == 0.0)
		rgb = vec3(hsl.z);
	else {
		float f2;
		
		if (hsl.z < 0.5)
			f2 = hsl.z * (1.0 + hsl.y);
		else
			f2 = (hsl.z + hsl.y) - (hsl.y * hsl.z);
			
		float f1 = 2.0 * hsl.z - f2;
		
		rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));
		rgb.g = hue2rgb(f1, f2, hsl.x);
		rgb.b= hue2rgb(f1, f2, hsl.x - (1.0/3.0));
	}
	
	return rgb;
}

vec3 blendHue(vec3 base, vec3 blend) {
	vec3 baseHSL = rgb2hsl(base);
	return hsl2rgb(vec3(rgb2hsl(blend).r, baseHSL.g, baseHSL.b));
}

vec3 rgb2hsv(vec3 c) {
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
    vec4 texture = texture2D(uMainSampler[0], outTexCoord);

    ivec4 colorInt = ivec4(int(texture.r * 255.0), int(texture.g * 255.0), int(texture.b * 255.0), int(texture.a * 255.0));

    for (int i = 0; i < 32; i++) {
        if (baseVariantColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == baseVariantColors[i].r && colorInt.g == baseVariantColors[i].g && colorInt.b == baseVariantColors[i].b) {
            texture.rgb = variantColors[i].rgb;
            break;
        }
    }

    for (int i = 0; i < 32; i++) {
        if (spriteColors[i][3] == 0)
            break;
        if (texture.a > 0.0 && colorInt.r == spriteColors[i].r && colorInt.g == spriteColors[i].g && colorInt.b == spriteColors[i].b) {
            vec3 fusionColor = vec3(float(fusionSpriteColors[i].r) / 255.0, float(fusionSpriteColors[i].g) / 255.0, float(fusionSpriteColors[i].b) / 255.0);
            vec3 bg = vec3(float(spriteColors[i].r) / 255.0, float(spriteColors[i].g) / 255.0, float(spriteColors[i].b) / 255.0);
            float gray = (bg.r + bg.g + bg.b) / 3.0;
            bg = vec3(gray, gray, gray);
            vec3 fg = fusionColor;
            texture.rgb = mix(1.0 - 2.0 * (1.0 - bg) * (1.0 - fg), 2.0 * bg * fg, step(bg, vec3(0.5)));
            break;
        }
    }

    vec4 texel = vec4(outTint.bgr * outTint.a, outTint.a);

    //  Multiply texture tint
    vec4 color = texture * texel;

    if (color.a > 0.0 && teraColor.r > 0.0 && teraColor.g > 0.0 && teraColor.b > 0.0) {
        vec2 relUv = vec2((outTexCoord.x - texFrameUv.x) / (size.x / texSize.x), (outTexCoord.y - texFrameUv.y) / (size.y / texSize.y));
        vec2 teraTexCoord = vec2(relUv.x * (size.x / 200.0), relUv.y * (size.y / 120.0));
        vec4 teraCol = texture2D(uMainSampler[1], teraTexCoord);
        float floorValue = 86.0 / 255.0;
        vec3 teraPatternHsv = rgb2hsv(teraCol.rgb);
        teraCol.rgb = hsv2rgb(vec3((teraPatternHsv.b - floorValue) * 4.0 + teraTexCoord.x * fieldScale / 2.0 + teraTexCoord.y * fieldScale / 2.0 + teraTime * 255.0, teraPatternHsv.b, teraPatternHsv.b));

        color.rgb = mix(color.rgb, blendHue(color.rgb, teraColor), 0.625);
        teraCol.rgb = mix(teraCol.rgb, teraColor, 0.5);
        color.rgb = blendOverlay(color.rgb, teraCol.rgb);

        if (teraColor.r < 1.0 || teraColor.g < 1.0 || teraColor.b < 1.0) {
            vec3 teraColHsv = rgb2hsv(teraColor);
            color.rgb = mix(color.rgb, teraColor, (1.0 - teraColHsv.g) / 2.0);
        }
    }

    if (outTintEffect == 1.0) {
        //  Solid color + texture alpha
        color.rgb = mix(texture.rgb, outTint.bgr * outTint.a, texture.a);
    } else if (outTintEffect == 2.0) {
        //  Solid color, no texture
        color = texel;
    }

    /* Apply gray */
    float luma = dot(color.rgb, lumaF);
    color.rgb = mix(color.rgb, vec3(luma), tone.w);

    /* Apply tone */
    color.rgb += tone.rgb * (color.a / 255.0);

    /* Apply day/night tint */
    if (color.a > 0.0 && ignoreTimeTint == 0) {
        vec3 dayNightTint;

        if (time < 0.25) {
            dayNightTint = dayTint;
        } else if (isOutside == 0 && time < 0.5) {
            dayNightTint = mix(dayTint, nightTint, (time - 0.25) / 0.25);
        } else if (time < 0.375) {
            dayNightTint = mix(dayTint, duskTint, (time - 0.25) / 0.125);
        } else if (time < 0.5) {
            dayNightTint = mix(duskTint, nightTint, (time - 0.375) / 0.125);
        } else if (time < 0.75) {
            dayNightTint = nightTint;
        } else if (isOutside == 0) {
            dayNightTint = mix(nightTint, dayTint, (time - 0.75) / 0.25);
        } else if (time < 0.875) {
            dayNightTint = mix(nightTint, duskTint, (time - 0.75) / 0.125);
        } else {
            dayNightTint = mix(duskTint, dayTint, (time - 0.875) / 0.125);
        }

        color.rgb = blendHardLight(color.rgb, dayNightTint);
    }

    if (hasShadow == 1) {
        float width = size.x - (yOffset / 2.0);

        float spriteX = ((floor(outPosition.x / fieldScale) - relPosition.x) / width) + 0.5;
        float spriteY = ((floor(outPosition.y / fieldScale) - relPosition.y - yShadowOffset) / size.y);

        if (yCenter == 1) {
            spriteY += 0.5;
        } else {
            spriteY += 1.0;
        }

        bool yOverflow = outTexCoord.y >= vCutoff;

        if ((spriteY >= 0.9 && (color.a == 0.0 || yOverflow))) {
            float shadowSpriteY = (spriteY - 0.9) * (1.0 / 0.15);
            if (distance(vec2(spriteX, shadowSpriteY), vec2(0.5, 0.5)) < 0.5) {
                color = vec4(vec3(0.0, 0.0, 0.0), 0.5);
            } else if (yOverflow) {
                discard;
            }
        } else if (yOverflow) {
            discard;
        }
    }

    gl_FragColor = color;
}
`,DJ=`
precision mediump float;

uniform mat4 uProjectionMatrix;
uniform int uRoundPixels;
uniform vec2 uResolution;

attribute vec2 inPosition;
attribute vec2 inTexCoord;
attribute float inTexId;
attribute float inTintEffect;
attribute vec4 inTint;

varying vec2 outTexCoord;
varying vec2 outtexFrameUv;
varying float outTexId;
varying vec2 outPosition;
varying float outTintEffect;
varying vec4 outTint;

void main()
{
    gl_Position = uProjectionMatrix * vec4(inPosition, 1.0, 1.0);
    if (uRoundPixels == 1)
    {
        gl_Position.xy = floor(((gl_Position.xy + 1.0) * 0.5 * uResolution) + 0.5) / uResolution * 2.0 - 1.0;
    }
    outTexCoord = inTexCoord;
    outTexId = inTexId;
    outPosition = inPosition;
    outTint = inTint;
    outTintEffect = inTintEffect;
}
`,xK=class xK extends zu{constructor(A){super(A,{game:A,name:"sprite",fragShader:UJ,vertShader:DJ}),this._tone=[0,0,0,0]}onPreRender(){super.onPreRender(),this.set1f("teraTime",0),this.set3fv("teraColor",[0,0,0]),this.set1i("hasShadow",0),this.set1i("yCenter",0),this.set2f("relPosition",0,0),this.set2f("texFrameUv",0,0),this.set2f("size",0,0),this.set2f("texSize",0,0),this.set1f("yOffset",0),this.set1f("yShadowOffset",0),this.set4fv("tone",this._tone)}onBind(A){super.onBind(A);const s=A,R=s.pipelineData,n=R.tone,I=R.isTerastallized?R.teraColor??[0,0,0]:[0,0,0],r=R.hasShadow,L=R.yShadowOffset,N=R.ignoreFieldPos,l=R.ignoreOverride,C=s.parentContainer instanceof kR||s.parentContainer instanceof ps||s.parentContainer instanceof US,U=C?s.parentContainer.parentContainer:s.parentContainer,D=C?[s.parentContainer.x,s.parentContainer.y]:[s.x,s.y];if(U&&(D[0]+=U.x/U.scale,D[1]+=U.y/U.scale),D[0]+=-(s.width-s.frame.width)/2+s.frame.x+(N?0:s.x-U.x),s.originY===.5&&(D[1]+=s.height/2*((C?s.parentContainer:s).scale-1)+(N?0:s.y-U.y)),this.set1f("teraTime",this.game.getTime()%5e5/5e5),this.set3fv("teraColor",I.map(M=>M/255)),this.set1i("hasShadow",r?1:0),this.set1i("yCenter",s.originY===.5?1:0),this.set1f("fieldScale",(U==null?void 0:U.scale)||1),this.set2f("relPosition",D[0],D[1]),this.set2f("texFrameUv",s.frame.u0,s.frame.v0),this.set2f("size",s.frame.width,s.height),this.set2f("texSize",s.texture.source[0].width,s.texture.source[0].height),this.set1f("yOffset",s.height-s.frame.height*(C?s.parentContainer.scale:s.scale)),this.set1f("yShadowOffset",L??0),this.set4fv("tone",n),this.bindTexture(this.game.textures.get("tera").source[0].glTexture,1),a.fusionPaletteSwaps){const M=l&&R.spriteColorsBase||R.spriteColors||[],h=l&&R.fusionSpriteColorsBase||R.fusionSpriteColors||[],_=[0,0,0,0],d=[],f=[];for(let H=0;H<32;H++)d.splice(d.length,0,...H<M.length?M[H]:_),f.splice(f.length,0,...H<h.length?h[H]:_);this.set4iv("spriteColors",d.flat()),this.set4iv("fusionSpriteColors",f.flat())}}onBatch(A){if(A){const s=A,R=s.pipelineData,n=R.hasOwnProperty("variant")?R.variant:s.parentContainer instanceof kR?s.parentContainer.variant:0;let I;const r=[0,0,0,0],L=[],N=[];if((s.parentContainer instanceof kR?s.parentContainer.shiny:R.shiny)&&(I=mi[s.parentContainer instanceof kR?s.parentContainer.getSprite().texture.key:R.spriteKey])&&I.hasOwnProperty(n)){const l=Object.keys(I[n]);for(let C=0;C<32;C++)if(C<l.length){const U=Array.from(Object.values(bE(l[C]))),D=Array.from(Object.values(bE(I[n][l[C]])));L.splice(L.length,0,...U),N.splice(N.length,0,...D.map(M=>M/255))}else L.splice(L.length,0,...r),N.splice(N.length,0,...r)}else for(let l=0;l<32;l++)L.splice(L.length,0,...r),N.splice(N.length,0,...r);this.set4iv("baseVariantColors",L.flat()),this.set4fv("variantColors",N.flat())}super.onBatch(A)}batchQuad(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K){const Y=A;this.set1f("vCutoff",M);const v=Y.pipelineData.hasShadow,Z=Y.pipelineData.yShadowOffset??0;if(v){const z=Y.parentContainer instanceof kR||Y.parentContainer instanceof ps||Y.parentContainer instanceof US,q=z?Y.parentContainer.parentContainer:Y.parentContainer,J=q.scale/6,Ae=(z?Y.parentContainer.y:Y.y+Y.height)*6/J,Q=Math.ceil(Y.height*.05+Math.max(Z,0))*6/J,Re=(Ae-I)/q.scale;L=I=Ae+Q;const W=(M-U)/(Y.frame.height*(z?Y.parentContainer.scale:Y.scale));M+=(Re+Q/q.scale)*W}return super.batchQuad(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K)}get tone(){return this._tone}set tone(A){this._tone=A}};o(xK,"SpritePipeline");let aP=xK;const bK=class bK extends Phaser.GameObjects.Container{constructor(){super(a,a.game.canvas.width/6,-(a.game.canvas.height/6)+15)}setup(){this.bg=a.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.expText=Se(22,4,"",k.BATTLE_INFO),this.expText.setOrigin(0,0),this.add(this.expText),this.setVisible(!1),this.shown=!1}showPokemonExp(A,s,R,n){return new Promise(I=>{if(this.shown)return I();this.pokemonIcon=a.addPokemonIcon(A,-8,15,0,.5),this.pokemonIcon.setScale(.5),this.add(this.pokemonIcon),R?n>200?this.expText.setText(u.t("battleScene:levelUp")):this.expText.setText(u.t("battleScene:levelUpWithLevel",{level:n})):this.expText.setText(`+${s.toString()}`),this.bg.width=this.expText.displayWidth+28,a.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),this.tween=a.tweens.add({targets:this,x:a.game.canvas.width/6-(this.bg.width-5),duration:500/Math.pow(2,a.expGainsSpeed),ease:"Sine.easeOut",onComplete:o(()=>{this.tween=null,I()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.tween&&this.tween.stop(),this.tween=a.tweens.add({targets:this,x:a.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:o(()=>{var s;this.tween=null,this.shown=!1,this.setVisible(!1),(s=this.pokemonIcon)==null||s.destroy(),A()},"onComplete")})})}};o(bK,"PartyExpBar");let iP=bK;const kK=class kK extends Phaser.GameObjects.Container{constructor(A){super(a,A?a.game.canvas.width/6:0,A?-72:-144),this.player=A}setup(){this.bg=a.add.nineslice(0,0,`pb_tray_overlay_${this.player?"player":"enemy"}`,void 0,104,4,48,8,0,0),this.bg.setOrigin(this.player?1:0,0),this.add(this.bg),this.balls=new Array(6).fill(null).map((A,s)=>a.add.sprite((this.player?-83:76)+a.game.canvas.width/6*(this.player?-1:1)+10*s*(this.player?1:-1),-8,"pb_tray_ball","empty"));for(const A of this.balls)A.setOrigin(0,0),this.add(A);this.setVisible(!1),this.shown=!1}showPbTray(A){return new Promise(s=>{if(this.shown)return s();a.fieldUI.bringToTop(this),this.x+=104*(this.player?1:-1),this.bg.width=104,this.bg.alpha=1,this.balls.forEach((R,n)=>{R.x+=(a.game.canvas.width/6+104)*(this.player?1:-1);let I="ball";n>=A.length?I="empty":A[n].hp?A[n].status&&(I="status"):I="faint",R.setFrame(I)}),a.playSound("se/pb_tray_enter"),a.tweens.add({targets:this,x:`${this.player?"-":"+"}=104`,duration:500,ease:"Sine.easeIn",onComplete:o(()=>{this.balls.forEach((R,n)=>{a.tweens.add({targets:R,x:`${this.player?"-":"+"}=104`,duration:n*100,ease:"Sine.easeIn",onComplete:o(()=>a.playSound(`se/${n<A.length?"pb_tray_ball":"pb_tray_empty"}`),"onComplete")})})},"onComplete")}),this.setVisible(!0),this.shown=!0,a.time.delayedCall(1100,()=>s())})}hide(){return new Promise(A=>{if(!this.shown)return A();this.balls.forEach((s,R)=>{a.tweens.add({targets:s,x:`${this.player?"-":"+"}=${a.game.canvas.width/6}`,duration:250,delay:R*100,ease:"Sine.easeIn"})}),a.tweens.add({targets:this.bg,width:144,alpha:0,duration:500,ease:"Sine.easeIn"}),a.time.delayedCall(850,()=>{this.setVisible(!1),A()}),this.shown=!1})}};o(kK,"PokeballTray");let ju=kK;const ZK=class ZK extends nE{start(){super.start(),a.ui.setModeForceTransition(te.MESSAGE).then(()=>this.end())}};o(ZK,"EndEvolutionPhase");let pS=ZK;const XK=class XK extends nE{constructor(A,s,R){super(),this.pokemon=A,this.evolution=s,this.lastLevel=R,this.fusionSpeciesEvolved=s instanceof Aa}validate(){return!!this.evolution}setMode(){return a.ui.setModeForceTransition(te.EVOLUTION_SCENE)}start(){super.start(),this.setMode().then(()=>{if(!this.validate())return this.end();a.fadeOutBgm(void 0,!1),this.evolutionHandler=a.ui.getHandler(),this.evolutionContainer=this.evolutionHandler.evolutionContainer,this.evolutionBaseBg=a.add.image(0,0,"default_bg"),this.evolutionBaseBg.setOrigin(0,0),this.evolutionContainer.add(this.evolutionBaseBg),this.evolutionBg=a.add.video(0,0,"evo_bg").stop(),this.evolutionBg.setOrigin(0,0),this.evolutionBg.setScale(.4359673025),this.evolutionBg.setVisible(!1),this.evolutionContainer.add(this.evolutionBg),this.evolutionBgOverlay=a.add.rectangle(0,0,a.game.canvas.width/6,a.game.canvas.height/6,2500134),this.evolutionBgOverlay.setOrigin(0,0),this.evolutionBgOverlay.setAlpha(0),this.evolutionContainer.add(this.evolutionBgOverlay);const A=o(()=>{const s=a.addPokemonSprite(this.pokemon,this.evolutionBaseBg.displayWidth/2,this.evolutionBaseBg.displayHeight/2,"pkmn__sub");return s.setPipeline(a.spritePipeline,{tone:[0,0,0,0],ignoreTimeTint:!0}),s},"getPokemonSprite");this.evolutionContainer.add(this.pokemonSprite=A()),this.evolutionContainer.add(this.pokemonTintSprite=A()),this.evolutionContainer.add(this.pokemonEvoSprite=A()),this.evolutionContainer.add(this.pokemonEvoTintSprite=A()),this.pokemonTintSprite.setAlpha(0),this.pokemonTintSprite.setTintFill(16777215),this.pokemonEvoSprite.setVisible(!1),this.pokemonEvoTintSprite.setVisible(!1),this.pokemonEvoTintSprite.setTintFill(16777215),this.evolutionOverlay=a.add.rectangle(0,-a.game.canvas.height/6,a.game.canvas.width/6,a.game.canvas.height/6-48,16777215),this.evolutionOverlay.setOrigin(0,0),this.evolutionOverlay.setAlpha(0),a.ui.add(this.evolutionOverlay),[this.pokemonSprite,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=this.pokemon.getSpriteKey(!0);try{s.play(R)}catch(n){console.error(`Failed to play animation for ${R}`,n)}s.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:BR(this.pokemon.getTeraType()),isTerastallized:this.pokemon.isTerastallized}),s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",this.pokemon.getSpriteKey()),s.setPipelineData("shiny",this.pokemon.shiny),s.setPipelineData("variant",this.pokemon.variant),["spriteColors","fusionSpriteColors"].map(n=>{var I;(I=this.pokemon.summonData)!=null&&I.speciesForm&&(n+="Base"),s.pipelineData[n]=this.pokemon.getSprite().pipelineData[n]})}),this.preEvolvedPokemonName=ee(this.pokemon),this.doEvolution()})}doEvolution(){a.ui.showText(u.t("menu:evolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{this.pokemon.cry(),this.pokemon.getPossibleEvolution(this.evolution).then(A=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(s=>{const R=A.getSpriteKey(!0);try{s.play(R)}catch(n){console.error(`Failed to play animation for ${R}`,n)}s.setPipelineData("ignoreTimeTint",!0),s.setPipelineData("spriteKey",A.getSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),["spriteColors","fusionSpriteColors"].map(n=>{var I;(I=A.summonData)!=null&&I.speciesForm&&(n+="Base"),s.pipelineData[n]=A.getSprite().pipelineData[n]})}),a.time.delayedCall(1e3,()=>{this.evolutionBgm=a.playSoundWithoutBgm("evolution"),a.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:o(()=>{a.time.delayedCall(1e3,()=>{a.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),a.playSound("se/charge"),this.doSpiralUpward(),a.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:o(s=>{this.pokemonTintSprite.setAlpha(s.getValue())},"onUpdate"),onComplete:o(()=>{this.pokemonSprite.setVisible(!1),a.time.delayedCall(1100,()=>{a.playSound("se/beam"),this.doArcDownward(),a.time.delayedCall(1500,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.evolutionHandler.canCancel=!0,this.doCycle(1).then(s=>{s?this.handleSuccessEvolution(A):this.handleFailedEvolution(A)})})})},"onComplete")})},"onComplete")})})})},1e3)}handleFailedEvolution(A){this.pokemonSprite.setVisible(!0),this.pokemonTintSprite.setScale(1),a.tweens.add({targets:[this.evolutionBg,this.pokemonTintSprite,this.pokemonEvoSprite,this.pokemonEvoTintSprite],alpha:0,duration:250,onComplete:o(()=>{this.evolutionBg.setVisible(!1)},"onComplete")}),oO.fadeOut(a,this.evolutionBgm,100),a.unshiftPhase(new pS),a.ui.showText(u.t("menu:stoppedEvolving",{pokemonName:this.preEvolvedPokemonName}),null,()=>{a.ui.showText(u.t("menu:pauseEvolutionsQuestion",{pokemonName:this.preEvolvedPokemonName}),null,()=>{const s=o(()=>{a.ui.showText("",0),a.playBgm(),A.destroy(),this.end()},"end");a.ui.setOverlayMode(te.CONFIRM,()=>{a.ui.revertMode(),this.pokemon.pauseEvolutions=!0,a.ui.showText(u.t("menu:evolutionsPaused",{pokemonName:this.preEvolvedPokemonName}),null,s,3e3)},()=>{a.ui.revertMode(),a.time.delayedCall(3e3,s)})})},null,!0)}handleSuccessEvolution(A){a.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward();const s=o(()=>{oO.fadeOut(a,this.evolutionBgm,100),a.time.delayedCall(250,()=>{this.pokemon.cry(),a.time.delayedCall(1250,()=>{a.playSoundWithoutBgm("evolution_fanfare"),A.destroy(),a.ui.showText(u.t("menu:evolutionDone",{pokemonName:this.preEvolvedPokemonName,evolvedPokemonName:this.pokemon.species.getExpandedSpeciesName()}),null,()=>this.end(),null,!0,Ot(4e3)),a.time.delayedCall(Ot(4250),()=>a.playBgm())})})},"onEvolutionComplete");a.time.delayedCall(900,()=>{this.evolutionHandler.canCancel=!1,this.pokemon.evolve(this.evolution,this.pokemon.species).then(()=>{const R=this.fusionSpeciesEvolved?gC.EVOLUTION_FUSED:this.pokemon.fusionSpecies?gC.EVOLUTION_FUSED_BASE:gC.EVOLUTION,n=this.pokemon.getLevelMoves(this.lastLevel+1,!0,!1,!1,R).filter(I=>I[0]===ne);for(const I of n)a.unshiftPhase(new ra(a.getPlayerParty().indexOf(this.pokemon),I[1]));a.unshiftPhase(new pS),a.playSound("se/shine"),this.doSpray(),a.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:o(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),a.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:o(()=>{a.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:s})},"onComplete")})},"onComplete")})})})}doSpiralUpward(){let A=0;a.tweens.addCounter({repeat:64,duration:UE(1),onRepeat:o(()=>{if(A<64){if(!(A&7))for(let s=0;s<4;s++)this.doSpiralUpwardParticle((A&120)*2+s*64);A++}},"onRepeat")})}doArcDownward(){let A=0;a.tweens.addCounter({repeat:96,duration:UE(1),onRepeat:o(()=>{if(A<96){if(A<6)for(let s=0;s<9;s++)this.doArcDownParticle(s*16);A++}},"onRepeat")})}doCycle(A,s=15){return new Promise(R=>{const n=A===s;a.tweens.add({targets:this.pokemonTintSprite,scale:.25,ease:"Cubic.easeInOut",duration:500/A,yoyo:!n}),a.tweens.add({targets:this.pokemonEvoTintSprite,scale:1,ease:"Cubic.easeInOut",duration:500/A,yoyo:!n,onComplete:o(()=>{if(this.evolutionHandler.cancelled)return R(!1);A<s?this.doCycle(A+.5,s).then(I=>R(I)):(this.pokemonTintSprite.setVisible(!1),R(!0))},"onComplete")})})}doCircleInward(){let A=0;a.tweens.addCounter({repeat:48,duration:UE(1),onRepeat:o(()=>{if(A){if(A===32)for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,8)}else for(let s=0;s<16;s++)this.doCircleInwardParticle(s*16,4);A++},"onRepeat")})}doSpray(){let A=0;a.tweens.addCounter({repeat:48,duration:UE(1),onRepeat:o(()=>{if(A)A<50&&this.doSprayParticle(YA(8));else for(let s=0;s<8;s++)this.doSprayParticle(s);A++},"onRepeat")})}doSpiralUpwardParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=a.add.image(s,0,"evo_sparkle");this.evolutionContainer.add(R);let n=0,I=48;const r=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{L()},"onRepeat")}),L=o(()=>{!n||R.y>8?(R.setPosition(s,88-n*n/80),R.y+=Pn(A,I)/4,R.x+=tI(A,I),R.setScale(1-n/80),A+=4,n&1&&I--,n++):(R.destroy(),r.remove())},"updateParticle");L()}doArcDownParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=a.add.image(s,0,"evo_sparkle");R.setScale(.5),this.evolutionContainer.add(R);let n=0,I=8;const r=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{L()},"onRepeat")}),L=o(()=>{!n||R.y<88?(R.setPosition(s,8+n*n/5),R.y+=Pn(A,I)/4,R.x+=tI(A,I),I=8+Pn(n*4,40),n++):(R.destroy(),r.remove())},"updateParticle");L()}doCircleInwardParticle(A,s){const R=this.evolutionBaseBg.displayWidth/2,n=this.evolutionBaseBg.displayHeight/2,I=a.add.image(R,n,"evo_sparkle");this.evolutionContainer.add(I);let r=120;const L=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{N()},"onRepeat")}),N=o(()=>{r>8?(I.setPosition(R,n),I.y+=Pn(A,r),I.x+=tI(A,r),r-=s,A+=4):(I.destroy(),L.remove())},"updateParticle");N()}doSprayParticle(A){const s=this.evolutionBaseBg.displayWidth/2,R=this.evolutionBaseBg.displayHeight/2,n=a.add.image(s,R,"evo_sparkle");this.evolutionContainer.add(n);let I=0,r=0;const L=3-YA(8),N=48+YA(64),l=a.tweens.addCounter({repeat:-1,duration:UE(1),onRepeat:o(()=>{C()},"onRepeat")}),C=o(()=>{I&3||r++,A<128?(n.setPosition(s+L*I/3,R+r),n.y+=-Pn(A,N),I>108&&n.setScale(1-(I-108)/20),A++,I++):(n.destroy(),l.remove())},"updateParticle");C()}};o(XK,"EvolutionPhase");let KS=XK;const QK=class QK extends KS{constructor(A,s,R){super(A,null,0),this.formChange=s,this.modal=R}validate(){return!!this.formChange}setMode(){return this.modal?a.ui.setOverlayMode(te.EVOLUTION_SCENE):super.setMode()}doEvolution(){const A=ee(this.pokemon);this.pokemon.getPossibleForm(this.formChange).then(s=>{[this.pokemonEvoSprite,this.pokemonEvoTintSprite].map(R=>{const n=s.getSpriteKey(!0);try{R.play(n)}catch(I){console.error(`Failed to play animation for ${n}`,I)}R.setPipelineData("ignoreTimeTint",!0),R.setPipelineData("spriteKey",s.getSpriteKey()),R.setPipelineData("shiny",s.shiny),R.setPipelineData("variant",s.variant),["spriteColors","fusionSpriteColors"].map(I=>{var r;(r=s.summonData)!=null&&r.speciesForm&&(I+="Base"),R.pipelineData[I]=s.getSprite().pipelineData[I]})}),a.time.delayedCall(250,()=>{a.tweens.add({targets:this.evolutionBgOverlay,alpha:1,delay:500,duration:1500,ease:"Sine.easeOut",onComplete:o(()=>{a.time.delayedCall(1e3,()=>{a.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250}),this.evolutionBg.setVisible(!0),this.evolutionBg.play()}),a.playSound("se/charge"),this.doSpiralUpward(),a.tweens.addCounter({from:0,to:1,duration:2e3,onUpdate:o(R=>{this.pokemonTintSprite.setAlpha(R.getValue())},"onUpdate"),onComplete:o(()=>{this.pokemonSprite.setVisible(!1),a.time.delayedCall(1100,()=>{a.playSound("se/beam"),this.doArcDownward(),a.time.delayedCall(1e3,()=>{this.pokemonEvoTintSprite.setScale(.25),this.pokemonEvoTintSprite.setVisible(!0),this.doCycle(1,1).then(R=>{a.playSound("se/sparkle"),this.pokemonEvoSprite.setVisible(!0),this.doCircleInward(),a.time.delayedCall(900,()=>{this.pokemon.changeForm(this.formChange).then(()=>{this.modal||a.unshiftPhase(new pS),a.playSound("se/shine"),this.doSpray(),a.tweens.add({targets:this.evolutionOverlay,alpha:1,duration:250,easing:"Sine.easeIn",onComplete:o(()=>{this.evolutionBgOverlay.setAlpha(1),this.evolutionBg.setVisible(!1),a.tweens.add({targets:[this.evolutionOverlay,this.pokemonEvoTintSprite],alpha:0,duration:2e3,delay:150,easing:"Sine.easeIn",onComplete:o(()=>{a.tweens.add({targets:this.evolutionBgOverlay,alpha:0,duration:250,onComplete:o(()=>{a.time.delayedCall(250,()=>{this.pokemon.cry(),a.time.delayedCall(1250,()=>{let n=!1;this.formChange.formKey.indexOf(Me.MEGA)>-1?(a.validateAchv(ht.MEGA_EVOLVE),n=!0):(this.formChange.formKey.indexOf(Me.GIGANTAMAX)>-1||this.formChange.formKey.indexOf(Me.ETERNAMAX)>-1)&&(a.validateAchv(ht.GIGANTAMAX),n=!0);const I=n?4e3:1750;a.playSoundWithoutBgm(n?"evolution_fanfare":"minor_fanfare"),s.destroy(),a.ui.showText(Nh(this.pokemon,this.formChange,A),null,()=>this.end(),null,!0,Ot(I)),a.time.delayedCall(Ot(I+250),()=>a.playBgm())})})},"onComplete")})},"onComplete")})},"onComplete")})})})})})})},"onComplete")})},"onComplete")})})})}end(){this.pokemon.findAndRemoveTags(A=>A.tagType===w.AUTOTOMIZED),this.modal?a.ui.revertMode().then(()=>{if(a.ui.getMode()===te.PARTY){const A=a.ui.getHandler();A.clearPartySlots(),A.populatePartySlots()}super.end()}):super.end()}};o(QK,"FormChangePhase");let IP=QK;const $K=class $K{setup(){this.sprites=new Set,a.tweens.addCounter({duration:Ot(200),from:0,to:1,yoyo:!0,repeat:-1,onRepeat:o(()=>this.onLapse(),"onRepeat")})}onLapse(){Array.from(this.sprites.values()).filter(A=>!A.scene).map(A=>this.sprites.delete(A));for(const A of this.sprites.values()){if(!A.pipelineData.teraColor||!A.pipelineData.teraColor.find(D=>D)||!A.visible||A.parentContainer instanceof kR&&!A.parentContainer.parentContainer||!(A.parentContainer instanceof kR)||!A.parentContainer.isTerastallized)continue;const s=A.parentContainer instanceof kR?A.parentContainer:null,R=(s||A).parentContainer,n=A.texture,[I,r]=[n.source[0].width,n.source[0].height],[L,N]=[YA(I),YA(r)],l=A.width/I,C=A.height/r,U=n.manager.getPixel(L,N,n.key,"__BASE");if(U!=null&&U.alpha){const[D,M]=[-A.originX*A.width,-A.originY*A.height],h=a.addFieldSprite(((s==null?void 0:s.x)||0)+A.x+L*l+D,((s==null?void 0:s.y)||0)+A.y+N*C+M,"tera_sparkle");h.pipelineData.ignoreTimeTint=A.pipelineData.ignoreTimeTint,h.setName("sprite-tera-sparkle"),h.play("tera_sparkle"),R.add(h),A.scene.time.delayedCall(Ot(Math.floor(1e3/12*13)),()=>h.destroy())}}}add(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.has(s)||this.sprites.add(s)}remove(A){Array.isArray(A)||(A=[A]);for(const s of A)this.sprites.delete(s)}removeAll(){for(const A of this.sprites.values())this.sprites.delete(A)}};o($K,"PokemonSpriteSparkleHandler");let rP=$K;const JK=class JK extends Phaser.GameObjects.Container{constructor(){super(a,a.game.canvas.width/6+32,-42)}setup(){[this.sprite,this.transitionSprite]=new Array(2).fill(null).map(()=>{const A=a.add.sprite(0,0,"","");return A.setOrigin(.5,1),this.add(A),A}),this.transitionSprite.setVisible(!1),this.setVisible(!1),this.shown=!1}showCharacter(A,s){return new Promise(R=>{if(A.startsWith("c_")||(A=`c_${A}`),this.shown){if(A===this.key&&s===this.variant)return R();if(A!==this.key)return this.hide().then(()=>this.showCharacter(A,s));this.setVariant(s).then(()=>R());return}this.sprite.setTexture(A,s),a.fieldUI.bringToTop(this),a.tweens.add({targets:this,x:a.game.canvas.width/6-102,duration:750,ease:"Cubic.easeOut",onComplete:o(()=>{R()},"onComplete")}),this.setVisible(a.textures.get(A).key!==k7),this.shown=!0,this.key=A,this.variant=s})}setVariant(A){return new Promise(s=>{a.fieldUI.bringToTop(this),this.transitionSprite.setTexture(this.key,A),this.transitionSprite.setAlpha(0),this.transitionSprite.setVisible(!0),a.tweens.add({targets:this.transitionSprite,alpha:1,duration:250,ease:"Sine.easeIn",onComplete:o(()=>{this.sprite.setTexture(this.key,A),this.transitionSprite.setVisible(!1),s()},"onComplete")}),this.variant=A})}hide(){return new Promise(A=>{if(!this.shown)return A();a.tweens.add({targets:this,x:a.game.canvas.width/6+32,duration:750,ease:"Cubic.easeIn",onComplete:o(()=>{this.shown||this.setVisible(!1),A()},"onComplete")}),this.shown=!1})}};o(JK,"CharSprite");let LP=JK;const zK=class zK{constructor(){this.damageNumbers=new Map}add(A,s,R=yt.EFFECTIVE,n=!1){var U;if(!((U=a)!=null&&U.damageNumbersMode))return;const I=A.getBattlerIndex(),r=A.getSpriteScale()/6,L=Se(A.x,-(a.game.canvas.height/6)+A.y-A.getSprite().height/2,bl(s,!0),k.SUMMARY);L.setName("text-damage-number"),L.setOrigin(.5,1),L.setScale(r);let[N,l]=[null,null];switch(R){case yt.SUPER_EFFECTIVE:[N,l]=["#f8d030","#b8a038"];break;case yt.NOT_VERY_EFFECTIVE:[N,l]=["#f08030","#c03028"];break;case yt.INDIRECT_KO:case yt.ONE_HIT_KO:[N,l]=["#a040a0","#483850"];break;case yt.HEAL:[N,l]=["#78c850","#588040"];break;default:[N,l]=["#ffffff","#636363"];break}N&&L.setColor(N),l&&(n?(L.setShadowOffset(0,0),L.setStroke(l,12)):L.setShadowColor(l)),a.fieldUI.add(L),this.damageNumbers.has(I)||this.damageNumbers.set(I,[]);const C=this.damageNumbers.get(I).length*-10;if(C&&(L.y+=C),this.damageNumbers.get(I).push(L),a.damageNumbersMode===1){a.tweens.add({targets:L,duration:Ot(750),alpha:1,y:"-=32"}),a.tweens.add({delay:375,targets:L,duration:Ot(625),alpha:0,ease:"Sine.easeIn",onComplete:o(()=>{this.damageNumbers.get(I).splice(this.damageNumbers.get(I).indexOf(L),1),L.destroy(!0)},"onComplete")});return}L.setAlpha(0),a.tweens.chain({targets:L,tweens:[{duration:Ot(250),alpha:1,scaleX:.75*r,scaleY:1.25*r,y:"-=16",ease:"Cubic.easeOut"},{duration:Ot(175),alpha:1,scaleX:.875*r,scaleY:1.125*r,y:"+=16",ease:"Cubic.easeIn"},{duration:Ot(100),scaleX:1.25*r,scaleY:.75*r,ease:"Cubic.easeOut"},{duration:Ot(175),scaleX:.875*r,scaleY:1.125*r,y:"-=8",ease:"Cubic.easeOut"},{duration:Ot(50),scaleX:.925*r,scaleY:1.075*r,y:"+=8",ease:"Cubic.easeIn"},{duration:Ot(100),scaleX:1.125*r,scaleY:.875*r,ease:"Cubic.easeOut"},{duration:Ot(175),scaleX:.925*r,scaleY:1.075*r,y:"-=4",ease:"Cubic.easeOut"},{duration:Ot(50),scaleX:.975*r,scaleY:1.025*r,y:"+=4",ease:"Cubic.easeIn"},{duration:Ot(100),scaleX:1.075*r,scaleY:.925*r,ease:"Cubic.easeOut"},{duration:Ot(25),scaleX:r,scaleY:r,ease:"Cubic.easeOut"},{delay:Ot(500),alpha:0,onComplete:o(()=>{this.damageNumbers.get(I).splice(this.damageNumbers.get(I).indexOf(L),1),L.destroy(!0)},"onComplete")}]})}};o(zK,"DamageNumberHandler");let oP=zK;const jK=class jK extends Phaser.GameObjects.Container{constructor(){super(a,a.game.canvas.width/6,-(a.game.canvas.height/6)+15)}setup(){this.bg=a.add.nineslice(0,0,"party_exp_bar",void 0,8,18,21,5,6,4),this.bg.setOrigin(0,0),this.add(this.bg),this.candyIcon=a.add.sprite(14,0,"items","candy"),this.candyIcon.setOrigin(.5,0),this.candyIcon.setScale(.5),this.add(this.candyIcon),this.candyOverlayIcon=a.add.sprite(14,0,"items","candy_overlay"),this.candyOverlayIcon.setOrigin(.5,0),this.candyOverlayIcon.setScale(.5),this.add(this.candyOverlayIcon),this.countText=Se(22,4,"",k.BATTLE_INFO),this.countText.setOrigin(0,0),this.add(this.countText),this.setVisible(!1),this.shown=!1}showStarterSpeciesCandy(A,s){return new Promise(R=>{if(this.shown)return this.speciesId===A?R():this.hide().then(()=>this.showStarterSpeciesCandy(A,s)).then(()=>R());const n=KE[A];this.candyIcon.setTint(Es(bE(n[0]))),this.candyOverlayIcon.setTint(Es(bE(n[1]))),this.countText.setText(`${a.gameData.starterData[A].candyCount+s} (+${s.toString()})`),this.bg.width=this.countText.displayWidth+28,a.fieldUI.bringToTop(this),this.tween&&this.tween.stop(),a.playSound("se/shing"),this.tween=a.tweens.add({targets:this,x:a.game.canvas.width/6-(this.bg.width-5),duration:500,ease:"Sine.easeOut",onComplete:o(()=>{this.tween=null,this.resetAutoHideTimer(),R()},"onComplete")}),this.setVisible(!0),this.shown=!0})}hide(){return new Promise(A=>{if(!this.shown)return A();this.autoHideTimer&&clearInterval(this.autoHideTimer),this.tween&&this.tween.stop(),this.tween=a.tweens.add({targets:this,x:a.game.canvas.width/6,duration:500,ease:"Sine.easeIn",onComplete:o(()=>{this.tween=null,this.shown=!1,this.setVisible(!1),A()},"onComplete")})})}resetAutoHideTimer(){this.autoHideTimer&&clearInterval(this.autoHideTimer),this.autoHideTimer=setTimeout(()=>{this.hide(),this.autoHideTimer=null},2500)}};o(jK,"CandyBar");let TP=jK;const MJ={padID:"Generic",padType:"xbox",deviceMapping:{RC_S:0,RC_E:1,RC_W:2,RC_N:3,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15},icons:{RC_S:"XB_Letter_A_OL.png",RC_E:"XB_Letter_B_OL.png",RC_W:"XB_Letter_X_OL.png",RC_N:"XB_Letter_Y_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[We.Button_Up]:X.UP,[We.Button_Down]:X.DOWN,[We.Button_Left]:X.LEFT,[We.Button_Right]:X.RIGHT,[We.Button_Action]:X.ACTION,[We.Button_Cancel]:X.CANCEL,[We.Button_Cycle_Nature]:X.CYCLE_NATURE,[We.Button_Cycle_Tera]:X.CYCLE_TERA,[We.Button_Menu]:X.MENU,[We.Button_Stats]:X.STATS,[We.Button_Cycle_Form]:X.CYCLE_FORM,[We.Button_Cycle_Shiny]:X.CYCLE_SHINY,[We.Button_Cycle_Gender]:X.CYCLE_GENDER,[We.Button_Cycle_Ability]:X.CYCLE_ABILITY,[We.Button_Speed_Up]:X.SPEED_UP,[We.Button_Slow_Down]:X.SLOW_DOWN},default:{LC_N:We.Button_Up,LC_S:We.Button_Down,LC_W:We.Button_Left,LC_E:We.Button_Right,RC_S:We.Button_Action,RC_E:We.Button_Cancel,RC_W:We.Button_Cycle_Nature,RC_N:We.Button_Cycle_Tera,START:We.Button_Menu,SELECT:We.Button_Stats,LB:We.Button_Cycle_Form,RB:We.Button_Cycle_Shiny,LT:We.Button_Cycle_Gender,RT:We.Button_Cycle_Ability,LS:We.Button_Speed_Up,RS:We.Button_Slow_Down},blacklist:["LC_N","LC_S","LC_W","LC_E"]},cJ={padID:"Pro Controller",padType:"xbox",deviceMapping:{RC_S:1,RC_E:0,RC_W:3,RC_N:2,START:9,SELECT:8,LB:4,RB:5,LT:6,RT:7,LS:10,RS:11,LC_N:12,LC_S:13,LC_W:14,LC_E:15,MENU:16},icons:{RC_S:"XB_Letter_B_OL.png",RC_E:"XB_Letter_A_OL.png",RC_W:"XB_Letter_Y_OL.png",RC_N:"XB_Letter_X_OL.png",START:"START.png",SELECT:"SELECT.png",LB:"Bumper_L.png",RB:"Bumper_R.png",LT:"Trigger_L.png",RT:"Trigger_R.png",LS:"LS.png",RS:"RS.png",LC_N:"UP.png",LC_S:"DOWN.png",LC_W:"LEFT.png",LC_E:"RIGHT.png"},settings:{[We.Button_Up]:X.UP,[We.Button_Down]:X.DOWN,[We.Button_Left]:X.LEFT,[We.Button_Right]:X.RIGHT,[We.Button_Action]:X.ACTION,[We.Button_Cancel]:X.CANCEL,[We.Button_Cycle_Nature]:X.CYCLE_NATURE,[We.Button_Cycle_Tera]:X.CYCLE_TERA,[We.Button_Menu]:X.MENU,[We.Button_Stats]:X.STATS,[We.Button_Cycle_Form]:X.CYCLE_FORM,[We.Button_Cycle_Shiny]:X.CYCLE_SHINY,[We.Button_Cycle_Gender]:X.CYCLE_GENDER,[We.Button_Cycle_Ability]:X.CYCLE_ABILITY,[We.Button_Speed_Up]:X.SPEED_UP,[We.Button_Slow_Down]:X.SLOW_DOWN},default:{LC_N:We.Button_Up,LC_S:We.Button_Down,LC_W:We.Button_Left,LC_E:We.Button_Right,RC_S:We.Button_Action,RC_E:We.Button_Cancel,RC_W:We.Button_Cycle_Nature,RC_N:We.Button_Cycle_Tera,START:We.Button_Menu,SELECT:We.Button_Stats,LB:We.Button_Cycle_Form,RB:We.Button_Cycle_Shiny,LT:We.Button_Cycle_Gender,RT:We.Button_Cycle_Ability,LS:We.Button_Speed_Up,RS:We.Button_Slow_Down}},hJ="touchControlPositionsLandscape",_J="touchControlPositionsPortrait",qK=class qK{constructor(A){this.draggingElement=null,this.configurationEventListeners={touchstart:[],touchmove:[],touchend:[]},this.isLandscapeMode=this.getScreenSize().width>this.getScreenSize().height,this.isLeft=s=>{var R;return(R=document.querySelector("#touchControls .left"))==null?void 0:R.contains(s)},this.startDrag=s=>{this.draggingElement=s},this.drag=s=>{if(!this.draggingElement)return;const R=this.draggingElement.getBoundingClientRect(),n=this.isLeft(this.draggingElement)?s.clientX-R.width/2:window.innerWidth-s.clientX-R.width/2,I=window.innerHeight-s.clientY-R.height/2;this.setPosition(this.draggingElement,n,I)},this.stopDrag=()=>{this.draggingElement=null},this.touchControls=A,this.inConfigurationMode=!1,this.setPositions(this.getSavedPositionsOfCurrentOrientation()??[]),window.addEventListener("resize",s=>{const R=this.getScreenSize();R.width>R.height!==this.isLandscapeMode&&this.changeOrientation(R.width>R.height)})}async changeOrientation(A){if(this.isLandscapeMode=A,this.inConfigurationMode){const R=document.querySelector("#touchControls #orientation");R&&(R.textContent=this.isLandscapeMode?u.t("settings:landscape"):u.t("settings:portrait"))}const s=this.getSavedPositionsOfCurrentOrientation()??[];this.setPositions(s)}getScreenSize(){return{width:window.screen.width,height:window.screen.height}}createToolbarElement(){const A=document.createElement("div");return A.id="configToolbar",A.innerHTML=`
    <div class="column">
      <div class="button-row">
        <div id="resetButton" class="button">${u.t("settings:touchReset")}</div>
        <div id="saveButton" class="button">${u.t("settings:touchSaveClose")}</div>
        <div id="cancelButton" class="button">${u.t("settings:touchCancel")}</div>
      </div>
      <div class="info-row">
        <div class="orientation-label"> 
          ${u.t("settings:orientation")}
          <span id="orientation">
            ${this.isLandscapeMode?u.t("settings:landscape"):u.t("settings:portrait")}
          </span>
        </div>
      </div>
    </div>
  `,A}createToolbar(){var I;(I=document.querySelector("#touchControls"))==null||I.prepend(this.createToolbarElement());const A=this.getConfigToolbarRefs();if(!A)return;const{saveButton:s,resetButton:R,cancelButton:n}=A;s.addEventListener("click",()=>{this.saveCurrentPositions(),this.disableConfigurationMode()}),R.addEventListener("click",()=>{this.resetPositions()}),n.addEventListener("click",()=>{const r=this.getSavedPositionsOfCurrentOrientation();this.setPositions(r),this.disableConfigurationMode()})}getConfigToolbarRefs(){const A=document.querySelector("#touchControls #configToolbar");if(A)return{toolbar:A,saveButton:A.querySelector("#saveButton"),resetButton:A.querySelector("#resetButton"),cancelButton:A.querySelector("#cancelButton")}}getModifiedCurrentPositions(){return this.getControlGroupElements().filter(A=>A.style.right||A.style.left).map(A=>({id:A.id,x:Number.parseFloat(this.isLeft(A)?A.style.left:A.style.right),y:Number.parseFloat(A.style.bottom)}))}getLocalStorageKey(){return this.isLandscapeMode?hJ:_J}getSavedPositionsOfCurrentOrientation(){const A=localStorage.getItem(this.getLocalStorageKey());return A?JSON.parse(A):[]}saveCurrentPositions(){const A=this.getModifiedCurrentPositions();localStorage.setItem(this.getLocalStorageKey(),JSON.stringify(A))}setPositions(A){return this.resetPositions(),A.forEach(s=>{const R=document.querySelector(`#${s.id}`);this.setPosition(R,s.x,s.y)})}setPosition(A,s,R){const n=A.getBoundingClientRect(),I=o((N,l,C)=>Math.min(Math.max(N,l),C),"checkBound"),{height:r,width:L}=this.getScreenSize();s=I(s,0,L-n.width),R=I(R,0,r-n.height),this.isLeft(A)?A.style.left=`${s}px`:A.style.right=`${s}px`,A.style.bottom=`${R}px`}resetPositions(){this.getControlGroupElements().forEach(A=>{A.style.removeProperty("left"),A.style.removeProperty("right"),A.style.removeProperty("bottom")})}getControlGroupElements(){return[...document.querySelectorAll("#touchControls .control-group")]}createConfigurationEventListeners(A){return{touchstart:A.map(s=>{const R=o(()=>this.startDrag(s),"startDrag");return s.addEventListener("touchstart",R,{passive:!0}),R}),touchmove:A.map(()=>{const s=o(R=>this.drag(R.touches[0]),"drag");return window.addEventListener("touchmove",s,{passive:!0}),s}),touchend:A.map(()=>{const s=o(()=>this.stopDrag(),"stopDrag");return window.addEventListener("touchend",s,{passive:!0}),s})}}createOverlay(A){var n;const s=new Phaser.GameObjects.Container(a,0,0),R=new Phaser.GameObjects.Rectangle(a,0,0,a.game.canvas.width,a.game.canvas.height,0,.5);R.setInteractive(),s.add(R),A.add(s),this.overlay=s,(n=document.querySelector("#touchControls"))==null||n.classList.add("config-mode")}enableConfigurationMode(A){this.inConfigurationMode||(this.inConfigurationMode=!0,this.touchControls.disable(),this.createOverlay(A),this.createToolbar(),setTimeout(()=>{this.configurationEventListeners=this.createConfigurationEventListeners(this.getControlGroupElements())},500))}disableConfigurationMode(){var I,r;this.inConfigurationMode=!1,this.draggingElement=null;const{touchstart:A,touchmove:s,touchend:R}=this.configurationEventListeners;this.getControlGroupElements().forEach((L,N)=>L.removeEventListener("touchstart",A[N])),s.forEach(L=>window.removeEventListener("touchmove",L)),R.forEach(L=>window.removeEventListener("touchend",L));const n=document.querySelector("#touchControls #configToolbar");n==null||n.remove(),(I=this.overlay)==null||I.destroy(),(r=document.querySelector("#touchControls"))==null||r.classList.remove("config-mode"),this.touchControls.enable()}};o(qK,"MoveTouchControlsHandler");let SP=qK;const O8=250,eF=class eF{constructor(){this.gamepads=new Array,this.buttonLock=new Array,this.interactions=new Map,this.configs=new Map,this.gamepadSupport=!0,this.disconnectedGamepads=new Array,this.lastSource="keyboard",this.inputInterval=new Array,this.selectedDevice={[oA.GAMEPAD]:null,[oA.KEYBOARD]:"default"};for(const A of dE(X))this.interactions[A]={pressTime:!1,isPressed:!1,source:null};delete this.interactions[X.MENU],delete this.interactions[X.STATS],this.init()}init(){var A,s,R,n,I,r,L,N;if(this.events=a.game.events,a.game.events.on(TE.Core.Events.BLUR,()=>{this.loseFocus()}),typeof a.input.gamepad<"u"){if((A=a.input.gamepad)==null||A.on("connected",function(l){l&&(this.refreshGamepads(),this.setupGamepad(l),this.onReconnect(l))},this),(s=a.input.gamepad)==null||s.on("disconnected",function(l){this.onDisconnect(l)},this),(R=a.input.gamepad)==null||R.refreshPads(),(n=a.input.gamepad)!=null&&n.total){this.refreshGamepads();for(const l of this.gamepads)a.input.gamepad.emit("connected",l)}(I=a.input.gamepad)==null||I.on("down",this.gamepadButtonDown,this),(r=a.input.gamepad)==null||r.on("up",this.gamepadButtonUp,this),(L=a.input.keyboard)==null||L.on("keydown",this.keyboardKeyDown,this),(N=a.input.keyboard)==null||N.on("keyup",this.keyboardKeyUp,this)}this.touchControls=new Z7,this.moveTouchControlsHandler=new SP(this.touchControls)}loseFocus(){this.deactivatePressedKey(),this.touchControls.deactivatePressedKey()}setGamepadSupport(A){A?this.gamepadSupport=!0:(this.gamepadSupport=!1,this.deactivatePressedKey())}setChosenGamepad(A){this.deactivatePressedKey(),this.initChosenGamepad(A)}setChosenKeyboardLayout(A){this.deactivatePressedKey(),this.initChosenLayoutKeyboard(A)}getGamepadsName(){return this.gamepads.filter(A=>!this.disconnectedGamepads.includes(A.id)).map(A=>A.id)}initChosenGamepad(A){var R;A&&(this.selectedDevice[oA.GAMEPAD]=A.toLowerCase());const s=(R=a.ui)==null?void 0:R.handlers[te.SETTINGS_GAMEPAD];s==null||s.updateChosenGamepadDisplay()}initChosenLayoutKeyboard(A){var R;A&&(this.selectedDevice[oA.KEYBOARD]=A.toLowerCase());const s=(R=a.ui)==null?void 0:R.handlers[te.SETTINGS_KEYBOARD];s==null||s.updateChosenKeyboardDisplay()}onDisconnect(A){this.disconnectedGamepads.push(A.id)}onReconnect(A){this.disconnectedGamepads=this.disconnectedGamepads.filter(s=>s!==A.id)}setupGamepad(A){var n,I,r;const s=this.getGamepadsName();for(const L of s){const N=L.toLowerCase();this.selectedDevice[oA.GAMEPAD]||this.setChosenGamepad(N);const l=vc(this.getConfig(N));l.custom=((n=this.configs[N])==null?void 0:n.custom)||{...l.default},this.configs[N]=l,(I=a.gameData)==null||I.saveMappingConfigs(N,this.configs[N])}this.lastSource="gamepad";const R=(r=a.ui)==null?void 0:r.handlers[te.SETTINGS_GAMEPAD];R==null||R.updateChosenGamepadDisplay()}setupKeyboard(){var A,s;for(const R of["default"]){const n=vc(this.getConfigKeyboard(R));n.custom=((A=this.configs[R])==null?void 0:A.custom)||{...n.default},this.configs[R]=n,(s=a.gameData)==null||s.saveMappingConfigs(this.selectedDevice[oA.KEYBOARD],this.configs[R])}this.initChosenLayoutKeyboard(this.selectedDevice[oA.KEYBOARD])}refreshGamepads(){var A;this.gamepads=((A=a.input.gamepad)==null?void 0:A.gamepads.filter(s=>s!==null))??[];for(const[s,R]of this.gamepads.entries())R.index=s}ensureKeyboardIsInit(){var A;(A=this.getActiveConfig(oA.KEYBOARD))!=null&&A.padID||this.setupKeyboard()}keyboardKeyDown(A){this.lastSource="keyboard",this.ensureKeyboardIsInit();const s=dl(this.getActiveConfig(oA.KEYBOARD),A.keyCode);if(s!==void 0){if(this.buttonLock.includes(s))return;this.events.emit("input_down",{controller_type:"keyboard",button:s}),clearInterval(this.inputInterval[s]),this.inputInterval[s]=setInterval(()=>{this.events.emit("input_down",{controller_type:"keyboard",button:s})},O8),this.buttonLock.push(s)}}keyboardKeyUp(A){this.lastSource="keyboard";const s=dl(this.getActiveConfig(oA.KEYBOARD),A.keyCode);if(s!==void 0){this.events.emit("input_up",{controller_type:"keyboard",button:s});const R=this.buttonLock.indexOf(s);this.buttonLock.splice(R,1),clearInterval(this.inputInterval[s])}}gamepadButtonDown(A,s,R){var r;if((r=this.configs[this.selectedDevice[oA.KEYBOARD]])!=null&&r.padID||this.setupKeyboard(),!A||(this.lastSource="gamepad",(!this.selectedDevice[oA.GAMEPAD]||a.ui.getMode()!==te.GAMEPAD_BINDING&&this.selectedDevice[oA.GAMEPAD]!==A.id.toLowerCase())&&this.setChosenGamepad(A.id),!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[oA.GAMEPAD].toLowerCase()))return;const n=this.getActiveConfig(oA.GAMEPAD),I=n&&dl(n,s.index);if(I!==void 0){if(this.buttonLock.includes(I))return;this.events.emit("input_down",{controller_type:"gamepad",button:I}),clearInterval(this.inputInterval[I]),this.inputInterval[I]=setInterval(()=>{if(!this.buttonLock.includes(I)){clearInterval(this.inputInterval[I]);return}this.events.emit("input_down",{controller_type:"gamepad",button:I})},O8),this.buttonLock.push(I)}}gamepadButtonUp(A,s,R){if(!A||(this.lastSource="gamepad",!this.gamepadSupport||A.id.toLowerCase()!==this.selectedDevice[oA.GAMEPAD]))return;const n=dl(this.getActiveConfig(oA.GAMEPAD),s.index);if(n!==void 0){this.events.emit("input_up",{controller_type:"gamepad",button:n});const I=this.buttonLock.indexOf(n);this.buttonLock.splice(I,1),clearInterval(this.inputInterval[n])}}getConfig(A){return A=A.toLowerCase(),A.includes("081f")&&A.includes("e401")?t7:A.includes("xbox")&&A.includes("360")?qk:A.includes("054c")?e7:A.includes("057e")&&A.includes("2009")?cJ:MJ}getConfigKeyboard(A){return X_}deactivatePressedKey(){for(const A of Object.keys(this.inputInterval))clearInterval(this.inputInterval[A]);this.buttonLock=[]}getActiveConfig(A){var s;return(s=this.configs[this.selectedDevice[A]])!=null&&s.padID?this.configs[this.selectedDevice[A]]:null}getIconForLatestInputRecorded(A){return this.lastSource==="keyboard"&&this.ensureKeyboardIsInit(),b$(this.configs,this.lastSource,this.selectedDevice,A)}getLastSourceDevice(){return this.lastSource==="gamepad"?oA.GAMEPAD:oA.KEYBOARD}getLastSourceConfig(){const A=this.getLastSourceDevice();return A===oA.KEYBOARD&&this.ensureKeyboardIsInit(),this.getActiveConfig(A)}getLastSourceType(){const A=this.getLastSourceConfig();return A==null?void 0:A.padType}injectConfig(A,s){this.configs[A]||(this.configs[A]={});const R={BUTTON_CYCLE_VARIANT:"BUTTON_CYCLE_TERA"};for(const n in s.custom)s.custom[n]in R&&(s.custom[n]=R[s.custom[n]]);this.configs[A].custom=s.custom}resetConfigs(){var A;this.configs=new Map,(A=this.getGamepadsName())!=null&&A.length&&this.setupGamepad(this.selectedDevice[oA.GAMEPAD]),this.setupKeyboard()}assignBinding(A,s,R){return this.deactivatePressedKey(),A.padType==="keyboard"?k$(A,s,R):Z$(A,s,R)}};o(eF,"InputsController");let NP=eF;const tF=class tF{constructor(A){this.inputsController=A,this.init()}init(){this.events=this.inputsController.events,this.listenInputs()}detectInputMethod(A){A.controller_type==="keyboard"?A.hasOwnProperty("isTouch")&&A.isTouch?a.inputMethod="touch":a.inputMethod="keyboard":A.controller_type==="gamepad"&&(a.inputMethod="gamepad")}listenInputs(){this.events.on("input_down",A=>{this.detectInputMethod(A);const s=this.getActionsKeyDown();s.hasOwnProperty(A.button)&&s[A.button]()},this),this.events.on("input_up",A=>{const s=this.getActionsKeyUp();s.hasOwnProperty(A.button)&&s[A.button]()},this)}doVibration(A,s){A&&a.enableVibration&&typeof navigator.vibrate<"u"&&navigator.vibrate(s)}getActionsKeyDown(){return{[X.UP]:()=>this.buttonDirection(X.UP),[X.DOWN]:()=>this.buttonDirection(X.DOWN),[X.LEFT]:()=>this.buttonDirection(X.LEFT),[X.RIGHT]:()=>this.buttonDirection(X.RIGHT),[X.SUBMIT]:()=>this.buttonTouch(),[X.ACTION]:()=>this.buttonAb(X.ACTION),[X.CANCEL]:()=>this.buttonAb(X.CANCEL),[X.MENU]:()=>this.buttonMenu(),[X.STATS]:()=>this.buttonGoToFilter(X.STATS),[X.CYCLE_SHINY]:()=>this.buttonCycleOption(X.CYCLE_SHINY),[X.CYCLE_FORM]:()=>this.buttonCycleOption(X.CYCLE_FORM),[X.CYCLE_GENDER]:()=>this.buttonCycleOption(X.CYCLE_GENDER),[X.CYCLE_ABILITY]:()=>this.buttonCycleOption(X.CYCLE_ABILITY),[X.CYCLE_NATURE]:()=>this.buttonCycleOption(X.CYCLE_NATURE),[X.CYCLE_TERA]:()=>this.buttonCycleOption(X.CYCLE_TERA),[X.SPEED_UP]:()=>this.buttonSpeedChange(),[X.SLOW_DOWN]:()=>this.buttonSpeedChange(!1)}}getActionsKeyUp(){return{[X.UP]:()=>{},[X.DOWN]:()=>{},[X.LEFT]:()=>{},[X.RIGHT]:()=>{},[X.SUBMIT]:()=>{},[X.ACTION]:()=>{},[X.CANCEL]:()=>{},[X.MENU]:()=>{},[X.STATS]:()=>this.buttonStats(!1),[X.CYCLE_SHINY]:()=>{},[X.CYCLE_FORM]:()=>{},[X.CYCLE_GENDER]:()=>{},[X.CYCLE_ABILITY]:()=>{},[X.CYCLE_NATURE]:()=>{},[X.CYCLE_TERA]:()=>this.buttonInfo(!1),[X.SPEED_UP]:()=>{},[X.SLOW_DOWN]:()=>{}}}buttonDirection(A){const s=a.ui.processInput(A);this.doVibration(s,5)}buttonAb(A){a.ui.processInput(A)}buttonTouch(){a.ui.processInput(X.SUBMIT)||a.ui.processInput(X.ACTION)}buttonStats(A=!0){for(const s of a.getInfoToggles(!0))s.toggleInfo(A);for(const s of a.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleStats(A)}buttonGoToFilter(A){var n;const s=[HS,gS,mS],R=(n=a.ui)==null?void 0:n.getHandler();s.some(I=>R instanceof I)?a.ui.processInput(A):this.buttonStats(!0)}buttonInfo(A=!0){if(a.showMovesetFlyout)for(const s of a.getField().filter(R=>R==null?void 0:R.isActive(!0)))s.toggleFlyout(A);a.showArenaFlyout&&a.ui.processInfoButton(A)}buttonMenu(){var A;if(!a.disableMenu)switch((A=a.ui)==null?void 0:A.getMode()){case te.MESSAGE:const s=a.ui.getHandler();if(!s.pendingPrompt||s.isTextAnimationInProgress())return;case te.TITLE:case te.COMMAND:case te.MODIFIER_SELECT:case te.MYSTERY_ENCOUNTER:a.ui.setOverlayMode(te.MENU);break;case te.STARTER_SELECT:case te.POKEDEX_PAGE:this.buttonTouch();break;case te.MENU:a.ui.revertMode(),a.playSound("ui/select");break;default:return}}buttonCycleOption(A){var n;const s=[HS,gS,mS,wu,hu,Qu,$u,xu,Xu],R=(n=a.ui)==null?void 0:n.getHandler();s.some(I=>R instanceof I)?a.ui.processInput(A):A===X.CYCLE_TERA&&this.buttonInfo(!0)}buttonSpeedChange(A=!0){var R,n;const s=kk(St.Game_Speed);A&&a.gameSpeed<5?(a.gameData.saveSetting(St.Game_Speed,FA[s].options.findIndex(I=>I.label===`${a.gameSpeed}x`)+1),((R=a.ui)==null?void 0:R.getMode())===te.SETTINGS&&a.ui.getHandler().show([])):!A&&a.gameSpeed>1&&(a.gameData.saveSetting(St.Game_Speed,Math.max(FA[s].options.findIndex(I=>I.label===`${a.gameSpeed}x`)-1,0)),((n=a.ui)==null?void 0:n.getMode())===te.SETTINGS&&a.ui.getHandler().show([]))}};o(tF,"UiInputs");let lP=tF;var Vn=(E=>(E.WEATHER_CHANGED="onWeatherChanged",E.TERRAIN_CHANGED="onTerrainChanged",E.TAG_ADDED="onTagAdded",E.TAG_REMOVED="onTagRemoved",E))(Vn||{});const AF=class AF extends Event{constructor(A,s){super(A),this.duration=s}};o(AF,"ArenaEvent");let qr=AF;const EF=class EF extends qr{constructor(A,s,R){super("onWeatherChanged",R),this.oldWeatherType=A,this.newWeatherType=s}};o(EF,"WeatherChangedEvent");let ya=EF;const sF=class sF extends qr{constructor(A,s,R){super("onTerrainChanged",R),this.oldTerrainType=A,this.newTerrainType=s}};o(sF,"TerrainChangedEvent");let FS=sF;const RF=class RF extends qr{constructor(A,s,R,n,I){super("onTagAdded",R),this.arenaTagType=A,this.arenaTagSide=s,this.arenaTagLayers=n,this.arenaTagMaxLayers=I}};o(RF,"TagAddedEvent");let UI=RF;const OF=class OF extends qr{constructor(A,s,R){super("onTagRemoved",R),this.arenaTagType=A,this.arenaTagSide=s}};o(OF,"TagRemovedEvent");let yi=OF;const nF=class nF extends Phaser.GameObjects.Container{constructor(A=0,s=0){super(a,A,s),this.timeOfDayIconFgs=new Array(2),this.timeOfDayIconMgs=new Array(2),this.timeOfDayIconBgs=new Array(2),this.timeOfDayIconPairs=new Map([["bg",this.timeOfDayIconBgs],["mg",this.timeOfDayIconMgs],["fg",this.timeOfDayIconFgs]]),this.currentTime=S.ALL,this.previousTime=S.ALL,this.onEncounterPhaseEvent=R=>this.onEncounterPhase(R),this.setVisible(a.showTimeOfDayWidget),a.showTimeOfDayWidget&&(this.timeOfDayIconPairs.forEach((R,n)=>{for(let I=0;I<R.length;I++)R[I]=a.add.sprite(0,0,"dawn_icon_"+n).setOrigin()}),this.timeOfDayIcons=[this.timeOfDayIconBgs,this.timeOfDayIconMgs,this.timeOfDayIconFgs].flat(),this.add(this.timeOfDayIcons),a.eventTarget.addEventListener(en.ENCOUNTER_PHASE,this.onEncounterPhaseEvent))}get parentVisible(){return this._parentVisible}set parentVisible(A){var s;A&&!this._parentVisible&&((s=this.timeOfDayIcons)==null||s.forEach(R=>a.tweens.getTweensOf(R).forEach(n=>n.resume()))),this._parentVisible=A}getBackTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Ot(1500),ease:"Back.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Ot(500),ease:"Linear",paused:!this.parentVisible};return[A,s]}getBounceTween(){const A={targets:[this.timeOfDayIconMgs[0],this.timeOfDayIconMgs[1]],angle:"+=90",duration:Ot(2e3),ease:"Bounce.easeOut",paused:!this.parentVisible},s={targets:[this.timeOfDayIconBgs[1],this.timeOfDayIconMgs[1],this.timeOfDayIconFgs[1]],alpha:0,duration:Ot(800),ease:"Linear",paused:!this.parentVisible};return[A,s]}resetIcons(){this.moveBelow(this.timeOfDayIconBgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconMgs[0],this.timeOfDayIconBgs[1]),this.moveBelow(this.timeOfDayIconFgs[0],this.timeOfDayIconFgs[1]),this.timeOfDayIconPairs.forEach((A,s)=>{A[0].setTexture(S[this.currentTime].toLowerCase()+"_icon_"+s),A[1].setTexture(S[this.previousTime].toLowerCase()+"_icon_"+s)}),this.timeOfDayIconMgs[0].setRotation(-90*(3.14/180)),this.timeOfDayIcons.forEach(A=>A.setAlpha(1))}tweenTimeOfDayIcon(){a.tweens.killTweensOf(this.timeOfDayIcons),this.resetIcons(),(a.timeOfDayAnimation===hS.BACK?this.getBackTween():this.getBounceTween()).forEach(A=>a.tweens.add(A)),this.timeOfDayIconPairs.forEach(A=>{const s=A.shift();s&&A.push(s)})}onEncounterPhase(A){const s=a.arena.getTimeOfDay();this.currentTime!==s&&(this.currentTime=s,this.previousTime=this.currentTime-1,this.previousTime<S.DAWN&&(this.previousTime=S.NIGHT),this.tweenTimeOfDayIcon())}};o(nF,"TimeOfDayWidget");let CP=nF;function fc(E){if(!E||E===Fe.NONE)return E;const s=`arenaFlyout:${X7(E)}`,R=u.t(s);return!R||R===s?pC(E):R}o(fc,"getFieldEffectText");const aF=class aF extends Phaser.GameObjects.Container{constructor(){super(a,0,0),this.flyoutWidth=170,this.flyoutHeight=51,this.fieldEffectInfo=[],this.onNewArenaEvent=A=>this.onNewArena(A),this.onTurnEndEvent=A=>this.onTurnEnd(A),this.onFieldEffectChangedEvent=A=>this.onFieldEffectChanged(A),this.setName("arena-flyout"),this.translationX=this.flyoutWidth,this.anchorX=0,this.anchorY=-98,this.flyoutParent=a.add.container(this.anchorX-this.translationX,this.anchorY),this.flyoutParent.setAlpha(0),this.add(this.flyoutParent),this.flyoutContainer=a.add.container(0,0),this.flyoutParent.add(this.flyoutContainer),this.flyoutWindow=Gt(0,0,this.flyoutWidth,this.flyoutHeight,!1,!1,0,0,dR.THIN),this.flyoutContainer.add(this.flyoutWindow),this.flyoutWindowHeader=Gt(this.flyoutWidth/2,0,this.flyoutWidth/2,14,!1,!1,0,0,dR.XTHIN),this.flyoutWindowHeader.setOrigin(),this.flyoutContainer.add(this.flyoutWindowHeader),this.flyoutTextHeader=Se(this.flyoutWidth/2,0,u.t("arenaFlyout:activeBattleEffects"),k.BATTLE_INFO),this.flyoutTextHeader.setFontSize(54),this.flyoutTextHeader.setAlign("center"),this.flyoutTextHeader.setOrigin(),this.flyoutContainer.add(this.flyoutTextHeader),this.timeOfDayWidget=new CP(this.flyoutWidth/2+this.flyoutWindowHeader.displayWidth/2),this.flyoutContainer.add(this.timeOfDayWidget),this.flyoutTextHeaderPlayer=Se(6,5,u.t("arenaFlyout:player"),k.SUMMARY_BLUE),this.flyoutTextHeaderPlayer.setFontSize(54),this.flyoutTextHeaderPlayer.setAlign("left"),this.flyoutTextHeaderPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextHeaderPlayer),this.flyoutTextHeaderField=Se(this.flyoutWidth/2,5,u.t("arenaFlyout:neutral"),k.SUMMARY_GREEN),this.flyoutTextHeaderField.setFontSize(54),this.flyoutTextHeaderField.setAlign("center"),this.flyoutTextHeaderField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextHeaderField),this.flyoutTextHeaderEnemy=Se(this.flyoutWidth-6,5,u.t("arenaFlyout:enemy"),k.SUMMARY_RED),this.flyoutTextHeaderEnemy.setFontSize(54),this.flyoutTextHeaderEnemy.setAlign("right"),this.flyoutTextHeaderEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextHeaderEnemy),this.flyoutTextPlayer=Se(6,13,"",k.BATTLE_INFO),this.flyoutTextPlayer.setLineSpacing(-1),this.flyoutTextPlayer.setFontSize(48),this.flyoutTextPlayer.setAlign("left"),this.flyoutTextPlayer.setOrigin(0,0),this.flyoutContainer.add(this.flyoutTextPlayer),this.flyoutTextField=Se(this.flyoutWidth/2,13,"",k.BATTLE_INFO),this.flyoutTextField.setLineSpacing(-1),this.flyoutTextField.setFontSize(48),this.flyoutTextField.setAlign("center"),this.flyoutTextField.setOrigin(.5,0),this.flyoutContainer.add(this.flyoutTextField),this.flyoutTextEnemy=Se(this.flyoutWidth-6,13,"",k.BATTLE_INFO),this.flyoutTextEnemy.setLineSpacing(-1),this.flyoutTextEnemy.setFontSize(48),this.flyoutTextEnemy.setAlign("right"),this.flyoutTextEnemy.setOrigin(1,0),this.flyoutContainer.add(this.flyoutTextEnemy),this.name="Fight Flyout",this.flyoutParent.name="Fight Flyout Parent",a.eventTarget.addEventListener(en.NEW_ARENA,this.onNewArenaEvent),a.eventTarget.addEventListener(en.TURN_END,this.onTurnEndEvent)}onNewArena(A){this.fieldEffectInfo.length=0,a.arena.eventTarget.addEventListener(Vn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),a.arena.eventTarget.addEventListener(Vn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),a.arena.eventTarget.addEventListener(Vn.TAG_ADDED,this.onFieldEffectChangedEvent),a.arena.eventTarget.addEventListener(Vn.TAG_REMOVED,this.onFieldEffectChangedEvent)}clearText(){this.flyoutTextPlayer.text="",this.flyoutTextField.text="",this.flyoutTextEnemy.text=""}updateFieldText(){this.clearText(),this.fieldEffectInfo.sort((A,s)=>A.duration-s.duration);for(let A=0;A<this.fieldEffectInfo.length;A++){const s=this.fieldEffectInfo[A];let R;switch(s.effecType){case 0:R=this.flyoutTextPlayer;break;case 1:case 2:case 3:R=this.flyoutTextField;break;case 4:R=this.flyoutTextEnemy;break}R.text+=s.name,s.maxDuration!==0&&(R.text+="  "+s.duration+"/"+s.maxDuration),R.text+=`
`}}onFieldEffectChanged(A){const s=A;if(!s)return;let R;switch(s.constructor){case UI:{const n=s,I=a.arena.getTag(n.arenaTagType)instanceof lO;let r;n.arenaTagSide===Dt.BOTH?r=3:n.arenaTagSide===Dt.PLAYER?r=0:r=4;const L=I?this.fieldEffectInfo.findIndex(l=>n.arenaTagType===l.tagType&&r===l.effecType):-1;let N=fc(Fe[n.arenaTagType]);if(I){if(L!==-1){const l=n.arenaTagMaxLayers>1?` (${n.arenaTagLayers})`:"";this.fieldEffectInfo[L].name=`${N}${l}`;break}n.arenaTagMaxLayers>1&&(N=`${N} (${n.arenaTagLayers})`)}this.fieldEffectInfo.push({name:N,effecType:r,maxDuration:n.duration,duration:n.duration,tagType:n.arenaTagType});break}case yi:{const n=s;R=this.fieldEffectInfo.findIndex(I=>I.tagType===n.arenaTagType),R!==-1&&this.fieldEffectInfo.splice(R,1);break}case ya:case FS:{const n=s,I=fc(n instanceof ya?Oe[n.oldWeatherType]:Nt[n.oldTerrainType]),r={name:fc(n instanceof ya?Oe[n.newWeatherType]:Nt[n.newTerrainType]),effecType:n instanceof ya?1:2,maxDuration:n.duration,duration:n.duration};R=this.fieldEffectInfo.findIndex(L=>[r.name,I].includes(L.name)),R===-1?r.name!==void 0&&this.fieldEffectInfo.push(r):r.name?this.fieldEffectInfo[R]=r:this.fieldEffectInfo.splice(R,1);break}}this.updateFieldText()}onTurnEnd(A){if(!A)return;const R=[];this.fieldEffectInfo.forEach(n=>R.push(n));for(let n=0;n<R.length;n++){const I=R[n];I.maxDuration!==0&&(--I.duration,I.duration<=0&&this.fieldEffectInfo.splice(this.fieldEffectInfo.indexOf(I),1))}this.updateFieldText()}toggleFlyout(A){a.tweens.add({targets:this.flyoutParent,x:A?this.anchorX:this.anchorX-this.translationX,duration:Ot(125),ease:"Sine.easeInOut",alpha:A?1:0,onComplete:o(()=>this.timeOfDayWidget.parentVisible=A,"onComplete")})}destroy(A){a.eventTarget.removeEventListener(en.NEW_ARENA,this.onNewArenaEvent),a.eventTarget.removeEventListener(en.TURN_END,this.onTurnEndEvent),a.arena.eventTarget.removeEventListener(Vn.WEATHER_CHANGED,this.onFieldEffectChangedEvent),a.arena.eventTarget.removeEventListener(Vn.TERRAIN_CHANGED,this.onFieldEffectChangedEvent),a.arena.eventTarget.removeEventListener(Vn.TAG_ADDED,this.onFieldEffectChangedEvent),a.arena.eventTarget.removeEventListener(Vn.TAG_REMOVED,this.onFieldEffectChangedEvent),super.destroy(A)}};o(aF,"ArenaFlyout");let uP=aF;const iF=class iF extends On{start(){super.start(),a.ui.setMode(te.MESSAGE).then(()=>{a.playSound("level_up_fanfare"),a.ui.showText(u.t("battle:levelCapUp",{levelCap:a.getMaxExpLevel()}),null,()=>this.end(),null,!0),this.executeForAll(A=>A.updateInfo(!0))})}};o(iF,"LevelCapPhase");let UP=iF;const IF=class IF extends nE{start(){super.start(),a.ui.showText(u.t("menu:boyOrGirl"),null,()=>{a.ui.setMode(te.OPTION_SELECT,{options:[{label:u.t("settings:boy"),handler:o(()=>(a.gameData.gender=Jt.MALE,a.gameData.saveSetting(St.Player_Gender,0),a.gameData.saveSystem().then(()=>this.end()),!0),"handler")},{label:u.t("settings:girl"),handler:o(()=>(a.gameData.gender=Jt.FEMALE,a.gameData.saveSetting(St.Player_Gender,1),a.gameData.saveSystem().then(()=>this.end()),!0),"handler")}]})})}end(){a.ui.setMode(te.MESSAGE),super.end()}};o(IF,"SelectGenderPhase");let DP=IF;const rF=class rF extends nE{constructor(A=!0){super(),this.showText=A}start(){super.start();{a.gameData.loadSystem().then(()=>this.end());return}}end(){a.ui.setMode(te.MESSAGE),a.gameData.gender||a.unshiftPhase(new DP),Za(LO.Intro).then(()=>super.end())}};o(rF,"LoginPhase");let MP=rF;const P0=class P0 extends nE{constructor(A,s,R,n,I){super(),this.text=A,this.callbackDelay=s,this.prompt=R,this.promptDelay=n,this.speaker=I}start(){if(super.start(),this.text.indexOf("$")>-1){const A=[],s=["#POKEMON1","#POKEMON2"];for(let n=0;n<a.getPlayerField().length;n++)A.push(a.getPlayerField()[n].getNameToRender()),this.text=this.text.split(A[n]).join(s[n]);const R=this.text.indexOf("$");for(let n=0;n<a.getPlayerField().length;n++)this.text=this.text.split(s[n]).join(A[n]);R!==-1&&(a.unshiftPhase(new P0(this.text.slice(R+1),this.callbackDelay,this.prompt,this.promptDelay,this.speaker)),this.text=this.text.slice(0,R).trim())}this.speaker?a.ui.showDialogue(this.text,this.speaker,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.promptDelay??0):a.ui.showText(this.text,null,()=>this.end(),this.callbackDelay||(this.prompt?0:1500),this.prompt,this.promptDelay)}};o(P0,"MessagePhase");let cP=P0;const LF=class LF extends $r{start(){super.start()}doEncounter(){var I,r;a.playBgm(void 0,!0);for(const L of a.getPlayerParty())L&&L.resetBattleData();a.arenaNextEnemy.setBiome(a.arena.biomeType),a.arenaNextEnemy.setVisible(!0);const A=a.getEnemyField(),s=[a.arenaEnemy,a.arenaNextEnemy,a.currentBattle.trainer,A,a.lastEnemyTrainer],R=(I=a.lastMysteryEncounter)==null?void 0:I.introVisuals;R&&s.push(R);const n=(r=a.currentBattle.mysteryEncounter)==null?void 0:r.introVisuals;n&&(n.enterFromRight?(n.x+=500,a.tweens.add({targets:n,x:"-=200",duration:2e3})):s.push(n)),a.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:o(()=>{a.arenaEnemy.setBiome(a.arena.biomeType),a.arenaEnemy.setX(a.arenaNextEnemy.x),a.arenaEnemy.setAlpha(1),a.arenaNextEnemy.setX(a.arenaNextEnemy.x-300),a.arenaNextEnemy.setVisible(!1),a.lastEnemyTrainer&&a.lastEnemyTrainer.destroy(),R&&(a.field.remove(R,!0),a.lastMysteryEncounter.introVisuals=void 0),this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){}};o(LF,"NextEncounterPhase");let qu=LF;const oF=class oF extends qu{doEncounter(){var n,I;a.playBgm(void 0,!0);for(const r of a.getPlayerParty())r&&(r.resetBattleData(),r.customPokemonData.resetHitReceivedCount());for(const r of a.getPlayerParty().filter(L=>L.isOnField()))_t(eN,r,null);const A=a.getEnemyField(),s=[a.arenaEnemy,A],R=(I=(n=a.currentBattle)==null?void 0:n.mysteryEncounter)==null?void 0:I.introVisuals;R&&s.push(R),a.tweens.add({targets:s.flat(),x:"+=300",duration:2e3,onComplete:o(()=>{this.tryOverrideForBattleSpec()||this.doEncounterCommon()},"onComplete")})}trySetWeatherIfNewBiome(){a.arena.trySetWeather(dk(a.arena))}};o(oF,"NewBiomeEncounterPhase");let hP=oF;var xR=(E=>(E[E.SUBSTITUTE_ADD=0]="SUBSTITUTE_ADD",E[E.SUBSTITUTE_PRE_MOVE=1]="SUBSTITUTE_PRE_MOVE",E[E.SUBSTITUTE_POST_MOVE=2]="SUBSTITUTE_POST_MOVE",E[E.SUBSTITUTE_REMOVE=3]="SUBSTITUTE_REMOVE",E[E.COMMANDER_APPLY=4]="COMMANDER_APPLY",E[E.COMMANDER_REMOVE=5]="COMMANDER_REMOVE",E))(xR||{});const TF=class TF extends HE{constructor(A,s,R=[]){super(),this.key=A,this.pokemon=s,this.fieldAssets=R}start(){switch(super.start(),this.key){case xR.SUBSTITUTE_ADD:this.doSubstituteAddAnim();break;case xR.SUBSTITUTE_PRE_MOVE:this.doSubstitutePreMoveAnim();break;case xR.SUBSTITUTE_POST_MOVE:this.doSubstitutePostMoveAnim();break;case xR.SUBSTITUTE_REMOVE:this.doSubstituteRemoveAnim();break;case xR.COMMANDER_APPLY:this.doCommanderApplyAnim();break;case xR.COMMANDER_REMOVE:this.doCommanderRemoveAnim();break;default:this.end()}}doSubstituteAddAnim(){const A=this.pokemon.getTag(xE);if(Pe(A))return this.end();const s=o(()=>{const r=a.addFieldSprite(this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return r.setOrigin(.5,1),a.field.add(r),r},"getSprite"),[R,n]=[s(),s()],I=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setVisible(!1),R.setScale(I),n.setTintFill(16777215),n.setScale(.01),this.pokemon.isPlayer()&&a.field.bringToTop(this.pokemon),a.playSound("PRSFX- Transform"),a.tweens.add({targets:this.pokemon,duration:500,x:this.pokemon.x+this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeIn"}),a.tweens.add({targets:n,delay:250,scale:I,ease:"Cubic.easeInOut",duration:500,onComplete:o(()=>{R.setVisible(!0),a.tweens.add({targets:n,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:o(()=>{n.destroy(),A.sprite=R,this.end()},"onComplete")})},"onComplete")})}doSubstitutePreMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();a.tweens.add({targets:A,alpha:0,ease:"Sine.easeInOut",duration:500}),a.tweens.add({targets:this.pokemon,x:A.x,y:A.y,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:o(()=>this.end(),"onComplete")})}doSubstitutePostMoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();a.tweens.add({targets:this.pokemon,x:A.x+this.pokemon.getSubstituteOffset()[0],y:A.y+this.pokemon.getSubstituteOffset()[1],alpha:.5,ease:"Sine.easeInOut",duration:500}),a.tweens.add({targets:A,alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:o(()=>this.end(),"onComplete")})}doSubstituteRemoveAnim(){if(this.fieldAssets.length!==1)return this.end();const A=this.fieldAssets[0];if(A===void 0)return this.end();const R=o(()=>{const I=a.addFieldSprite(A.x,A.y,`pkmn${this.pokemon.isPlayer()?"__back":""}__sub`);return I.setOrigin(.5,1),a.field.add(I),I},"getSprite")(),n=this.pokemon.getSpriteScale()*(this.pokemon.isPlayer()?.5:1);R.setAlpha(0),R.setTintFill(16777215),R.setScale(n),a.tweens.add({targets:R,alpha:1,ease:"Sine.easeInOut",duration:500,onComplete:o(()=>{A.destroy();const I=a.time.addEvent({delay:100,repeat:7,startAt:200,callback:o(()=>{a.playSound("PRSFX- Substitute2.wav"),R.setVisible(I.repeatCount%2===0),I.repeatCount||(a.tweens.add({targets:R,scale:.01,ease:"Sine.cubicEaseIn",duration:500}),a.tweens.add({targets:this.pokemon,x:this.pokemon.x-this.pokemon.getSubstituteOffset()[0],y:this.pokemon.y-this.pokemon.getSubstituteOffset()[1],alpha:1,ease:"Sine.easeInOut",delay:250,duration:500,onComplete:o(()=>{R.destroy(),this.end()},"onComplete")}))},"callback")})},"onComplete")})}doCommanderApplyAnim(){var N,l;if(!((N=a.currentBattle)!=null&&N.double))return this.end();const A=this.pokemon.getAlly();if(((l=A==null?void 0:A.species)==null?void 0:l.speciesId)!==e.DONDOZO)return this.end();const s=this.pokemon.x+this.pokemon.getSprite().x,R=this.pokemon.y+this.pokemon.getSprite().y,I=o(()=>{const C=a.addPokemonSprite(this.pokemon,s,R,this.pokemon.getSprite().texture,this.pokemon.getSprite().frame.name,!0);return["spriteColors","fusionSpriteColors"].map(U=>C.pipelineData[U]=this.pokemon.getSprite().pipelineData[U]),C.setPipelineData("spriteKey",this.pokemon.getBattleSpriteKey()),C.setPipelineData("shiny",this.pokemon.shiny),C.setPipelineData("variant",this.pokemon.variant),C.setPipelineData("ignoreFieldPos",!0),C.setOrigin(.5,1),this.pokemon.getSprite().on("animationupdate",(U,D)=>C.setFrame(D.textureFrame)),a.field.add(C),C},"getSourceSprite")();this.pokemon.setVisible(!1);const r=this.pokemon.getFieldPositionOffset(),L=A.getFieldPositionOffset();a.playSound("se/pb_throw"),a.tweens.add({targets:I,duration:375,scale:.5,x:{value:s+(L[0]-r[0])/2,ease:"Linear"},y:{value:(this.pokemon.isPlayer()?100:65)+r[1],ease:"Sine.easeOut"},onComplete:o(()=>{a.field.bringToTop(A),a.tweens.add({targets:I,duration:375,scale:.01,x:{value:A.x,ease:"Linear"},y:{value:A.y+A.height/2,ease:"Sine.easeIn"},onComplete:o(()=>{I.destroy(),a.playSound("battle_anims/PRSFX- Liquidation1.wav"),a.tweens.add({targets:A,duration:250,ease:"Sine.easeInOut",scale:.85,yoyo:!0,onComplete:o(()=>this.end(),"onComplete")})},"onComplete")})},"onComplete")})}doCommanderRemoveAnim(){const A=this.pokemon.getAlly();if(Pe(A))return console.warn("Aborting COMMANDER_REMOVE anim: Tatsugiri is undefined"),this.end();const s=a.addPokemonSprite(A,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y+this.pokemon.height/2,A.getSprite().texture,A.getSprite().frame.name,!0);["spriteColors","fusionSpriteColors"].map(R=>s.pipelineData[R]=A.getSprite().pipelineData[R]),s.setPipelineData("spriteKey",A.getBattleSpriteKey()),s.setPipelineData("shiny",A.shiny),s.setPipelineData("variant",A.variant),s.setPipelineData("ignoreFieldPos",!0),this.pokemon.getSprite().on("animationupdate",(R,n)=>s.setFrame(n.textureFrame)),s.setOrigin(.5,1),s.setScale(.01),a.field.add(s),a.field.bringToTop(this.pokemon),s.setVisible(!0),a.tweens.add({targets:this.pokemon,duration:250,ease:"Sine.easeInOut",scale:1.15,yoyo:!0,onComplete:o(()=>{a.playSound("battle_anims/PRSFX- Liquidation4.wav"),a.tweens.add({targets:s,duration:500,scale:1,x:{value:A.x+A.getSprite().x,ease:"Linear"},y:{value:A.y+A.getSprite().y,ease:"Sine.easeIn"},onComplete:o(()=>{A.setVisible(!0),s.destroy(),this.end()},"onComplete")})},"onComplete")})}};o(TF,"PokemonAnimPhase");let _P=TF;const SF=class SF extends Rs{constructor(A,s,R,n,I=!1,r=!1,L=!1,N=!1,l=!1){super(A,void 0,UA.HEALTH_UP),this.hpHealed=s,this.message=R,this.showFullHpMessage=n,this.skipAnim=I,this.revive=r,this.healStatus=L,this.preventFullHeal=N,this.fullRestorePP=l}start(){!this.skipAnim&&(this.revive||this.getPokemon().hp)&&!this.getPokemon().isFullHp()?super.start():this.end()}end(){const A=this.getPokemon();if(!A.isOnField()||!this.revive&&!A.isActive())return super.end();const s=!!this.message,R=!A.isFullHp()||this.hpHealed<0,n=A.getTag(w.HEAL_BLOCK);let I=re.NONE;if(n&&this.hpHealed>0)return a.queueMessage(n.onActivation(A)),this.message=null,super.end();if(R){const r=new je(1);this.revive||a.applyModifiers(wI,this.player,r);const L=new je(Math.floor(this.hpHealed*r.value));if(L.value<0&&(A.damageAndUpdate(L.value*-1,{result:yt.INDIRECT}),L.value=0),this.preventFullHeal&&A.hp+L.value>=A.getMaxHp()&&(L.value=A.getMaxHp()-A.hp-1),L.value=A.heal(L.value),L.value&&a.damageNumberHandler.add(A,L.value,yt.HEAL),A.isPlayer()&&(a.validateAchvs(Yi,L),L.value>a.gameData.gameStats.highestHeal&&(a.gameData.gameStats.highestHeal=L.value)),this.healStatus&&!this.revive&&A.status&&(I=A.status.effect,A.resetStatus()),this.fullRestorePP)for(const N of this.getPokemon().getMoveset())N&&(N.ppUsed=0);A.updateInfo().then(()=>super.end())}else this.healStatus&&!this.revive&&A.status?(I=A.status.effect,A.resetStatus(),A.updateInfo().then(()=>super.end())):this.showFullHpMessage&&(this.message=u.t("battle:hpIsFull",{pokemonName:ee(A)}));this.message&&a.queueMessage(this.message),this.healStatus&&I&&!s&&a.queueMessage(oi(I,ee(A))),!R&&!I&&super.end()}};o(SF,"PokemonHealPhase");let ZE=SF;const NF=class NF extends HE{constructor(A,s){super(),this.pokemon=A,this.formChange=s}start(){if(super.start(),this.pokemon.formIndex===this.pokemon.species.forms.findIndex(I=>I.formKey===this.formChange.formKey))return this.end();const A=ee(this.pokemon);if(!this.pokemon.isOnField()||this.pokemon.getTag(Ra)||this.pokemon.isFainted()){this.pokemon.isPlayer()||this.pokemon.isActive()?this.pokemon.changeForm(this.formChange).then(()=>{a.ui.showText(Nh(this.pokemon,this.formChange,A),null,()=>this.end(),1500)}):this.end();return}const s=o(()=>{const I=a.addPokemonSprite(this.pokemon,this.pokemon.x+this.pokemon.getSprite().x,this.pokemon.y+this.pokemon.getSprite().y,"pkmn__sub");I.setOrigin(.5,1);const r=this.pokemon.getBattleSpriteKey();try{I.play(r).stop()}catch(L){console.error(`Failed to play animation for ${r}`,L)}return I.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!1,teraColor:BR(this.pokemon.getTeraType()),isTerastallized:this.pokemon.isTerastallized}),["spriteColors","fusionSpriteColors"].map(L=>{var N;(N=this.pokemon.summonData)!=null&&N.speciesForm&&(L+="Base"),I.pipelineData[L]=this.pokemon.getSprite().pipelineData[L]}),a.field.add(I),I},"getPokemonSprite"),[R,n]=[s(),s()];this.pokemon.getSprite().on("animationupdate",(I,r)=>{r.textureKey===R.texture.key?R.setFrame(r.textureFrame):n.setFrame(r.textureFrame)}),R.setAlpha(0),R.setTintFill(16777215),n.setVisible(!1),n.setTintFill(16777215),a.playSound("battle_anims/PRSFX- Transform"),a.tweens.add({targets:R,alpha:1,duration:1e3,ease:"Cubic.easeIn",onComplete:o(()=>{this.pokemon.setVisible(!1),this.pokemon.changeForm(this.formChange).then(()=>{n.setScale(.01);const I=this.pokemon.getBattleSpriteKey();try{n.play(I).stop()}catch(r){console.error(`Failed to play animation for ${I}`,r)}n.setVisible(!0),a.tweens.add({targets:R,delay:250,scale:.01,ease:"Cubic.easeInOut",duration:500,onComplete:o(()=>R.destroy(),"onComplete")}),a.tweens.add({targets:n,delay:250,scale:this.pokemon.getSpriteScale(),ease:"Cubic.easeInOut",duration:500,onComplete:o(()=>{this.pokemon.setVisible(!0),a.tweens.add({targets:n,delay:250,alpha:0,ease:"Cubic.easeOut",duration:1e3,onComplete:o(()=>{R.setVisible(!1),a.ui.showText(Nh(this.pokemon,this.formChange,A),null,()=>this.end(),1500)},"onComplete")})},"onComplete")})})},"onComplete")})}end(){var A;if(this.pokemon.findAndRemoveTags(s=>s.tagType===w.AUTOTOMIZED),((A=a)==null?void 0:A.currentBattle.battleSpec)===DE.FINAL_BOSS&&this.pokemon instanceof Fs){a.playBgm(),a.unshiftPhase(new ZE(this.pokemon.getBattlerIndex(),this.pokemon.getMaxHp(),null,!1,!1,!1,!0)),this.pokemon.findAndRemoveTags(()=>!0),this.pokemon.bossSegments=5,this.pokemon.bossSegmentIndex=4,this.pokemon.initBattleInfo(),this.pokemon.cry();const s=a.findPhase(R=>R instanceof _A&&R.pokemon===this.pokemon);s&&s.cancel()}this.formChange.trigger instanceof zn&&(_t(Vi,this.pokemon,null),_t(rU,this.pokemon,null),_t(LU,this.pokemon,null)),super.end()}};o(NF,"QuietFormChangePhase");let PP=NF;const lF=class lF extends HE{constructor(A){super(),this.nextBiome=A}start(){if(super.start(),this.nextBiome===void 0)return this.end();a.tweens.add({targets:[a.arenaEnemy,a.lastEnemyTrainer],x:"+=300",duration:2e3,onComplete:o(()=>{a.arenaEnemy.setX(a.arenaEnemy.x-600),a.newArena(this.nextBiome);const s=`${Sl(this.nextBiome)}_bg`;a.arenaBgTransition.setTexture(s),a.arenaBgTransition.setAlpha(0),a.arenaBgTransition.setVisible(!0),a.arenaPlayerTransition.setBiome(this.nextBiome),a.arenaPlayerTransition.setAlpha(0),a.arenaPlayerTransition.setVisible(!0),a.tweens.add({targets:[a.arenaPlayer,a.arenaBgTransition,a.arenaPlayerTransition],duration:1e3,delay:1e3,ease:"Sine.easeInOut",alpha:o(R=>R===a.arenaPlayer?0:1,"alpha"),onComplete:o(()=>{a.arenaBg.setTexture(s),a.arenaPlayer.setBiome(this.nextBiome),a.arenaPlayer.setAlpha(1),a.arenaEnemy.setBiome(this.nextBiome),a.arenaEnemy.setAlpha(1),a.arenaNextEnemy.setBiome(this.nextBiome),a.arenaBgTransition.setVisible(!1),a.arenaPlayerTransition.setVisible(!1),a.lastEnemyTrainer&&a.lastEnemyTrainer.destroy(),this.end()},"onComplete")})},"onComplete")})}};o(lF,"SwitchBiomePhase");let GP=lF;const CF=class CF extends HE{start(){super.start();const A=a.arena.biomeType,s=o(R=>{a.currentBattle.waveIndex%10===1&&(a.applyModifiers(QN,!0),a.unshiftPhase(new kr(!1))),a.unshiftPhase(new GP(R)),this.end()},"setNextBiome");if(a.gameMode.isClassic&&a.gameMode.isWaveFinal(a.currentBattle.waveIndex+9)||a.gameMode.isDaily&&a.gameMode.isWaveFinal(a.currentBattle.waveIndex)||a.gameMode.hasShortBiomes&&!(a.currentBattle.waveIndex%50))s(T.END);else if(a.gameMode.hasRandomBiomes)s(this.generateNextBiome());else if(Array.isArray(Dn[A])){let R=[];if(a.executeWithSeedOffset(()=>{R=Dn[A].filter(n=>!Array.isArray(n)||!He(n[1])).map(n=>Array.isArray(n)?n[0]:n)},a.currentBattle.waveIndex),R.length>1&&a.findModifier(n=>n instanceof GN)){let n=[];a.executeWithSeedOffset(()=>{n=(Array.isArray(Dn[A])?Dn[A]:[Dn[A]]).filter(r=>!Array.isArray(r)||!He(r[1])).map(r=>Array.isArray(r)?r[0]:r)},a.currentBattle.waveIndex);const I=n.map(r=>({label:GL(r),handler:o(()=>(a.ui.setMode(te.MESSAGE),s(r),!0),"handler")}));a.ui.setMode(te.OPTION_SELECT,{options:I,delay:1e3})}else s(R[He(R.length)])}else Dn.hasOwnProperty(A)?s(Dn[A]):s(this.generateNextBiome())}generateNextBiome(){return a.currentBattle.waveIndex%50?a.generateRandomBiome(a.currentBattle.waveIndex):T.END}};o(CF,"SelectBiomePhase");let dP=CF;const uF=class uF extends On{constructor(A){var s;super(),this.skipTurn=!1,this.fieldIndex=A,(s=a.currentBattle.mysteryEncounter)!=null&&s.skipEnemyBattleTurns&&(this.skipTurn=!0)}start(){var I;super.start();const A=a.getEnemyField()[this.fieldIndex],s=a.currentBattle,R=s.trainer;if(s.double&&A.hasAbility(O.COMMANDER)&&((I=A.getAlly())!=null&&I.getTag(w.COMMANDED))&&(this.skipTurn=!0),R&&!A.getMoveQueue().length){const r=A.getOpponents();if(!A.isTrapped()){const L=R.getPartyMemberMatchupScores(A.trainerSlot,!0);if(L.length){const N=r.map(D=>A.getMatchupScore(D)),l=N.reduce((D,M)=>D+=M,0)/N.length,C=R.getSortedPartyMemberMatchupScores(L),U=1-(s.enemySwitchCounter?Math.pow(.1,1/s.enemySwitchCounter):0);if(C[0][1]*U>=l*(R.config.isBoss?2:3)){const D=R.getNextSummonIndex(A.trainerSlot,L);return s.turnCommands[this.fieldIndex+Wt.ENEMY]={command:OA.POKEMON,cursor:D,args:[!1],skip:this.skipTurn},s.enemySwitchCounter++,this.end()}}}}const n=A.getNextMove();R!=null&&R.shouldTera(A)&&(a.currentBattle.preTurnCommands[this.fieldIndex+Wt.ENEMY]={command:OA.TERA}),a.currentBattle.turnCommands[this.fieldIndex+Wt.ENEMY]={command:OA.FIGHT,move:n,skip:this.skipTurn},a.currentBattle.enemySwitchCounter=Math.max(a.currentBattle.enemySwitchCounter-1,0),this.end()}getFieldIndex(){return this.fieldIndex}};o(uF,"EnemyCommandPhase");let HP=uF;const UF=class UF extends ns{constructor(A,s){super(Wt.ENEMY+A),this.pokeballType=s}start(){super.start();const A=this.getPokemon();if(!(A!=null&&A.hp))return this.end();const s=A.getTag(xE);s&&s.sprite.setVisible(!1),a.pokeballCounts[this.pokeballType]--,this.originalY=A.y;const R=3*A.getMaxHp(),n=2*A.hp,I=A.species.catchRate,r=XC(this.pokeballType),L=A.status?ak(A.status.effect):1,N=Math.round((R-n)*I*r/R*L),l=Math.round(65536/Math.pow(255/N,.1875)),C=FZ(N),U=A.randSeedInt(256)<C,D=A.getFieldPositionOffset(),M=fO(this.pokeballType);this.pokeball=a.addFieldSprite(16,80,"pb",M),this.pokeball.setOrigin(.5,.625),a.field.add(this.pokeball),a.playSound(U?"se/crit_throw":"se/pb_throw"),a.time.delayedCall(300,()=>{a.field.moveBelow(this.pokeball,A)}),a.tweens.add({targets:this.pokeball,x:{value:236+D[0],ease:"Linear"},y:{value:16+D[1],ease:"Cubic.easeOut"},duration:500,onComplete:o(()=>{this.pokeball.setTexture("pb",`${M}_opening`),a.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${M}_open`)),a.playSound("se/pb_rel"),A.tint(Rn(this.pokeballType)),Q0(this.pokeball.x,this.pokeball.y,this.pokeballType),a.tweens.add({targets:A,duration:500,ease:"Sine.easeIn",scale:.25,y:20,onComplete:o(()=>{this.pokeball.setTexture("pb",`${M}_opening`),A.setVisible(!1),a.playSound("se/pb_catch"),a.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${M}`));const h=o(()=>{let _=0;const d=this.pokeball.x,f=a.tweens.addCounter({from:0,to:1,repeat:U?2:4,yoyo:!0,ease:"Cubic.easeOut",duration:250,repeatDelay:500,onUpdate:o(H=>{if(_&&_<(U?2:4)){const B=H.getValue(),K=_%2===1?1:-1;this.pokeball.setX(d+B*4*K),this.pokeball.setAngle(B*27.5*K)}},"onUpdate"),onRepeat:o(()=>{if(!A.species.isObtainable())f.stop(),this.failCatch(_);else if(_++<(U?1:3))r===-1||U||N>=255||A.randSeedInt(65536)<l?a.playSound("se/pb_move"):(f.stop(),this.failCatch(_));else if(U&&A.randSeedInt(65536)>=l)f.stop(),this.failCatch(_);else{a.playSound("se/pb_lock"),Gk(this.pokeball);const H=a.add.sprite(this.pokeball.x,this.pokeball.y,"pb","pb");H.setOrigin(this.pokeball.originX,this.pokeball.originY),H.setTintFill(0),H.setAlpha(0),a.field.add(H),a.tweens.add({targets:H,alpha:.375,duration:200,easing:"Sine.easeOut",onComplete:o(()=>{a.tweens.add({targets:H,alpha:0,duration:200,easing:"Sine.easeIn",onComplete:o(()=>H.destroy(),"onComplete")})},"onComplete")})}},"onRepeat"),onComplete:o(()=>{this.catch()},"onComplete")})},"doShake");a.time.delayedCall(250,()=>Tk(this.pokeball,16,72,350,h,U))},"onComplete")})},"onComplete")})}failCatch(A){var I;const s=this.getPokemon();a.playSound("se/pb_rel"),s.setY(this.originalY),((I=s.status)==null?void 0:I.effect)!==re.SLEEP&&s.cry(s.getHpRatio()>.25?void 0:{rate:.85}),s.tint(Rn(this.pokeballType)),s.setVisible(!0),s.untint(250,"Sine.easeOut");const R=s.getTag(xE);R&&R.sprite.setVisible(!0);const n=fO(this.pokeballType);this.pokeball.setTexture("pb",`${n}_opening`),a.time.delayedCall(17,()=>this.pokeball.setTexture("pb",`${n}_open`)),a.tweens.add({targets:s,duration:250,ease:"Sine.easeOut",scale:1}),a.currentBattle.lastUsedPokeball=this.pokeballType,this.removePb(),this.end()}catch(){const A=this.getPokemon(),s=A.fusionSpecies?A.getFusionSpeciesForm():A.getSpeciesForm();s.abilityHidden&&(A.fusionSpecies?A.fusionAbilityIndex:A.abilityIndex)===s.getAbilityCount()-1&&a.validateAchv(ht.HIDDEN_ABILITY),A.species.subLegendary&&a.validateAchv(ht.CATCH_SUB_LEGENDARY),A.species.legendary&&a.validateAchv(ht.CATCH_LEGENDARY),A.species.mythical&&a.validateAchv(ht.CATCH_MYTHICAL),a.pokemonInfoContainer.show(A,!0),a.gameData.updateSpeciesDexIvs(A.species.getRootSpeciesId(!0),A.ivs),a.ui.showText(u.t("battle:pokemonCaught",{pokemonName:ee(A)}),null,()=>{const R=o(()=>{a.unshiftPhase(new uS(this.battlerIndex)),a.pokemonInfoContainer.hide(),this.removePb(),this.end()},"end"),n=o(()=>{a.addFaintedEnemyScore(A),A.hp=0,A.trySetStatus(re.FAINT),a.clearEnemyHeldItemModifiers(),A.leaveField(!0,!0,!0)},"removePokemon"),I=o(r=>{const L=A.addToParty(this.pokeballType,r),N=a.findModifiers(l=>l instanceof Ft,!1);a.getPlayerParty().filter(l=>l.isShiny()).length===Yr&&a.validateAchv(ht.SHINY_PARTY),Promise.all(N.map(l=>a.addModifier(l,!0))).then(()=>{a.updateModifiers(!0),n(),L?L.loadAssets().then(R):R()})},"addToParty");Promise.all([A.hideInfo(),a.gameData.setPokemonCaught(A)]).then(()=>{if(a.getPlayerParty().length===Yr){const r=o(()=>{a.ui.showText(u.t("battle:partyFull",{pokemonName:A.getNameToRender()}),null,()=>{a.pokemonInfoContainer.makeRoomForConfirmUi(1,!0),a.ui.setMode(te.CONFIRM,()=>{const L=a.addPlayerPokemon(A.species,A.level,A.abilityIndex,A.formIndex,A.gender,A.shiny,A.variant,A.ivs,A.nature,A);a.ui.setMode(te.SUMMARY,L,0,X0.DEFAULT,()=>{a.ui.setMode(te.MESSAGE).then(()=>{r()})},!1)},()=>{const L={shiny:A.shiny,variant:A.variant,form:A.formIndex,female:A.gender===At.FEMALE};a.ui.setOverlayMode(te.POKEDEX_PAGE,A.species,L,null,null,()=>{a.ui.setMode(te.MESSAGE).then(()=>{r()})})},()=>{a.ui.setMode(te.PARTY,gs.RELEASE,this.fieldIndex,(L,N)=>{a.ui.setMode(te.MESSAGE).then(()=>{L<6?I(L):r()})})},()=>{a.ui.setMode(te.MESSAGE).then(()=>{n(),R()})},"fullParty")})},"promptRelease");r()}else I()})},0,!0)}removePb(){a.tweens.add({targets:this.pokeball,duration:250,delay:250,ease:"Sine.easeIn",alpha:0,onComplete:o(()=>this.pokeball.destroy(),"onComplete")})}};o(UF,"AttemptCapturePhase");let fP=UF;const DF=class DF extends ns{constructor(){super(...arguments),this.forceFailEscape=!1}start(){super.start();const A=a.getPlayerField(),s=a.getEnemyField(),R=this.getPokemon(),n=new je(0);this.attemptRunAway(A,s,n),_t(qU,R,null,!1,n),R.randSeedInt(100)<n.value&&!this.forceFailEscape?(s.forEach(I=>o7(hI,I)),a.playSound("se/flee"),a.queueMessage(u.t("battle:runAwaySuccess"),null,!0,500),a.tweens.add({targets:[a.arenaEnemy,s].flat(),alpha:0,duration:250,ease:"Sine.easeIn",onComplete:o(()=>s.forEach(I=>I.destroy()),"onComplete")}),a.clearEnemyHeldItemModifiers(),s.forEach(I=>{I.hideInfo().then(()=>I.destroy()),I.hp=0,I.trySetStatus(re.FAINT)}),a.pushPhase(new Qa(!1)),a.pushPhase(new lI)):(R.turnData.failedRunAway=!0,a.queueMessage(u.t("battle:runAwayCannotEscape"),null,!0,500)),this.end()}attemptRunAway(A,s,R){const n=s.reduce((M,h)=>M+h.getStat(p.SPD),0),I=A.reduce((M,h)=>M+h.getStat(p.SPD),0);let r=!1;for(let M=0;M<s.length;M++)r=r||s[M].isBoss();const L=I/n,N=r?6:4,l=5,C=r?25:95,U=r?2:10,D=(C-l)/N;R.value=Phaser.Math.Clamp(Math.round(D*L+l+U*a.currentBattle.escapeAttempts++),l,C)}};o(DF,"AttemptRunPhase");let BP=DF;const MF=class MF extends On{start(){super.start(),this.executeForAll(A=>{if(!!a.findModifier(R=>R instanceof GE&&R.shouldApply(A),A.isPlayer())){const R=new Pt(!1);if(A.getOpponents().map(n=>_t(mr,n,R)),R.value)a.queueMessage(u.t("abilityTriggers:preventBerryUse",{pokemonNameWithAffix:ee(A)}));else{a.unshiftPhase(new Rs(A.getBattlerIndex(),A.getBattlerIndex(),UA.USE_ITEM));for(const n of a.applyModifiers(GE,A.isPlayer(),A))n.consumed&&(n.consumed=!1,A.loseHeldItem(n)),a.eventTarget.dispatchEvent(new Qc(n));a.updateModifiers(A.isPlayer()),_t(AN,A,new Pt(!1))}}}),this.end()}};o(MF,"BerryPhase");let gP=MF;const cF=class cF extends HE{constructor(A,s){super(),this.pokemon=A,this.move=s}canMove(){return this.pokemon.isActive(!0)&&this.move.isUsable(this.pokemon)}start(){super.start(),this.canMove()&&dA(LL,this.pokemon,null,this.move.getMove()),this.end()}};o(cF,"MoveHeaderPhase");let mP=cF;const hF=class hF extends On{start(){super.start(),a.currentBattle.incrementTurn(),a.eventTarget.dispatchEvent(new zc(a.currentBattle.turn)),a.hideAbilityBar();const A=o(s=>{var R;s.switchOutStatus||(s.lapseTags(As.TURN_END),a.applyModifiers(YI,s.isPlayer(),s),((R=a.arena.terrain)==null?void 0:R.terrainType)===Nt.GRASSY&&s.isGrounded()&&a.unshiftPhase(new ZE(s.getBattlerIndex(),Math.max(s.getMaxHp()>>4,1),u.t("battle:turnEndHpRestore",{pokemonName:ee(s)}),!0)),s.isPlayer()||(a.applyModifiers(tl,!1,s),a.applyModifier(Al,!1,s)),Nj(rn,s)),a.applyModifiers(Oi,s.isPlayer(),s),a.applyModifiers(VI,s.isPlayer(),s),s.battleSummonData.turnCount++,s.battleSummonData.waveTurnCount++},"handlePokemon");this.executeForAll(A),a.arena.lapseTags(),a.arena.weather&&!a.arena.weather.lapse()&&(a.arena.trySetWeather(Oe.NONE),a.arena.triggerWeatherBasedFormChangesToNormal()),a.arena.terrain&&!a.arena.terrain.lapse()&&a.arena.trySetTerrain(Nt.NONE),this.end()}};o(hF,"TurnEndPhase");let pP=hF;const _F=class _F extends Rs{constructor(){var A,s,R,n,I;super(void 0,void 0,UA.SUNNY+((((R=(s=(A=a)==null?void 0:A.arena)==null?void 0:s.weather)==null?void 0:R.weatherType)||Oe.NONE)-1)),this.weather=(I=(n=a)==null?void 0:n.arena)==null?void 0:I.weather}start(){var A,s;if(this.weather=(s=(A=a)==null?void 0:A.arena)==null?void 0:s.weather,!this.weather)return this.end();if(this.setAnimation(UA.SUNNY+(this.weather.weatherType-1)),this.weather.isDamaging()){const R=new Pt(!1);if(this.executeForAll(n=>X8(PI,n,this.weather,R)),!R.value){const n=o(I=>{const r=new Pt(!1);if(X8(bU,I,this.weather,r),_t(fE,I,r),r.value||I.getTag(w.UNDERGROUND)||I.getTag(w.UNDERWATER))return;const L=Qt(I.getMaxHp()/16);a.queueMessage(RX(this.weather.weatherType,I)??""),I.damageAndUpdate(L,{result:yt.INDIRECT,ignoreSegments:!0})},"inflictDamage");this.executeForAll(I=>{!I||!!I.getTypes(!0,!0).filter(L=>{var N;return(N=this.weather)==null?void 0:N.isTypeDamageImmune(L)}).length||I.switchOutStatus||n(I)})}}a.ui.showText(sX(this.weather.weatherType)??"",null,()=>{this.executeForAll(R=>{R.switchOutStatus||Cj(qS,R,this.weather)}),super.start()})}};o(_F,"WeatherEffectPhase");let KP=_F;const PF=class PF extends nE{constructor(A){super(),this.order=A}start(){var s;const A=a.getField();for(const R of this.order)(s=A[R].status)!=null&&s.isPostTurn()&&a.unshiftPhase(new _S(R));this.end()}};o(PF,"CheckStatusEffectPhase");let FP=PF;const GF=class GF extends HE{constructor(A){super(),this.pokemon=A}start(){super.start(),a.queueMessage(u.t("battle:pokemonTerastallized",{pokemonNameWithAffix:ee(this.pokemon),type:u.t(`pokemonInfo:Type.${i[this.pokemon.getTeraType()]}`)})),new ti(UA.TERASTALLIZE,this.pokemon).play(!1,()=>{this.end()})}end(){this.pokemon.isTerastallized=!0,this.pokemon.updateSpritePipelineData(),this.pokemon.isPlayer()&&(a.arena.playerTerasUsed+=1),a.triggerPokemonFormChange(this.pokemon,zn),this.pokemon.isPlayer()&&(a.validateAchv(ht.TERASTALLIZE),this.pokemon.getTeraType()===i.STELLAR&&a.validateAchv(ht.STELLAR_TERASTALLIZE)),super.end()}};o(GF,"TeraPhase");let YP=GF;const dF=class dF extends On{getSpeedOrder(){const A=a.getPlayerField().filter(I=>I.isActive()),s=a.getEnemyField().filter(I=>I.isActive());let R=A.concat(s);a.executeWithSeedOffset(()=>{R=GO(R)},a.currentBattle.turn,a.waveSeed);const n=new Pt(!1);return a.arena.applyTags(aU,!1,n),R.sort((I,r)=>{const L=(I==null?void 0:I.getEffectiveStat(p.SPD))??0,N=(r==null?void 0:r.getEffectiveStat(p.SPD))??0;return n.value?L-N:N-L}),R.map(I=>I.getFieldIndex()+(I.isPlayer()?Wt.PLAYER:Wt.ENEMY))}getCommandOrder(){let A=this.getSpeedOrder();const s={};return a.getField(!0).filter(R=>R.summonData).map(R=>{const n=new Pt(!1),I=new Pt(!0);_t(rD,R,null,!1,n),_t(LD,R,null,!1,n,I),I.value&&a.applyModifiers(FI,R.isPlayer(),R,n),s[R.getBattlerIndex()]=n}),A=A.slice(0),A.sort((R,n)=>{const I=a.currentBattle.turnCommands[R],r=a.currentBattle.turnCommands[n];if((I==null?void 0:I.command)!==(r==null?void 0:r.command)){if((I==null?void 0:I.command)===OA.FIGHT)return 1;if((r==null?void 0:r.command)===OA.FIGHT)return-1}else if((I==null?void 0:I.command)===OA.FIGHT){const l=Ve[I.move.move],C=Ve[r.move.move],U=a.getField(!0).find(d=>d.getBattlerIndex()===R),D=a.getField(!0).find(d=>d.getBattlerIndex()===n),M=l.getPriority(U,!1),h=C.getPriority(D,!1),_=Math.ceil(M)-Math.ceil(h)===0;if(M!==h)return _&&s[R].value!==s[n].value?s[R].value?-1:1:M<h?1:-1}if(s[R].value!==s[n].value)return s[R].value?-1:1;const L=A.indexOf(R),N=A.indexOf(n);return L<N?-1:L>N?1:0}),A}start(){var n;super.start();const A=a.getField(),s=this.getCommandOrder();let R=0;for(const I of this.getSpeedOrder()){const r=A[I],L=a.currentBattle.preTurnCommands[I];if(!(L!=null&&L.skip))switch(L==null?void 0:L.command){case OA.TERA:a.pushPhase(new YP(r))}}for(const I of s){const r=A[I],L=a.currentBattle.turnCommands[I];if(!(L!=null&&L.skip))switch(L==null?void 0:L.command){case OA.FIGHT:const N=L.move;if(r.turnData.order=R++,!N)continue;const l=r.getMoveset().find(D=>D.moveId===N.move&&D.ppUsed<D.getMovePp())||new Lt(N.move);if(l.getMove().hasAttr(LL)&&a.unshiftPhase(new mP(r,l)),r.isPlayer())if(L.cursor===-1)a.pushPhase(new _A(r,L.targets||L.move.targets,l));else{const D=new _A(r,L.targets||L.move.targets,l,!1,N.ignorePP);a.pushPhase(D)}else a.pushPhase(new _A(r,L.targets||L.move.targets,l,!1,N.ignorePP));break;case OA.BALL:a.unshiftPhase(new fP(L.targets[0]%2,L.cursor));break;case OA.POKEMON:const C=(n=L.args)!=null&&n[0]?uA.BATON_PASS:uA.SWITCH;a.unshiftPhase(new HR(C,r.getFieldIndex(),L.cursor,!0,r.isPlayer()));break;case OA.RUN:let U=r;if(a.currentBattle.double){const D=A.filter(M=>{if(M)return M.isPlayer()&&M.isActive()});if(D.length>1){const M=D[0].getStat(p.SPD)>D[1].getStat(p.SPD)?D[0]:D[1],h=D.find(_=>_.hasAbility(O.RUN_AWAY));U=h!==void 0?h:M}}a.unshiftPhase(new BP(U.getFieldIndex()));break}}a.pushPhase(new KP),a.pushPhase(new gP),a.pushPhase(new FP(s)),a.pushPhase(new pP),this.end()}};o(dF,"TurnStartPhase");let WP=dF;const HF=class HF extends On{start(){if(super.start(),a.getPlayerField().forEach(A=>{if(A.isOnField()&&!A.isAllowedInBattle()){a.queueMessage(u.t("challenges:illegalEvolution",{pokemon:A.name}),null,!0);const s=a.getPokemonAllowedInBattle();s.length?s.length>=a.currentBattle.getBattlerCount()||a.currentBattle.double&&!s[0].isActive(!0)?A.switchOut():A.leaveField():(a.clearPhaseQueue(),a.unshiftPhase(new gO)),s.length===1&&a.currentBattle.double&&a.unshiftPhase(new mO(!0))}}),a.eventTarget.dispatchEvent(new Jc),w$(),v$()){this.end();return}a.getField().forEach((A,s)=>{A!=null&&A.isActive()&&(A.isPlayer()&&a.currentBattle.addParticipant(A),A.resetTurnData(),a.pushPhase(A.isPlayer()?new IS(s):new HP(s-Wt.ENEMY)))}),a.pushPhase(new WP),this.end()}};o(HF,"TurnInitPhase");let yP=HF;var dr=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.ONLY_LEVEL_UP=1]="ONLY_LEVEL_UP",E[E.SKIP=2]="SKIP",E))(dr||{});const fF=class fF extends Zr{constructor(A,s,R){super(A),this.pokemon=this.getPlayerPokemon(),this.lastLevel=s,this.level=R}start(){super.start(),this.level>a.gameData.gameStats.highestLevel&&(a.gameData.gameStats.highestLevel=this.level),a.validateAchvs(hr,new je(this.level));const A=this.pokemon.stats.slice(0);this.pokemon.calculateStats(),this.pokemon.updateInfo(),a.expParty===dr.DEFAULT?(a.playSound("level_up_fanfare"),a.ui.showText(u.t("battle:levelUp",{pokemonName:ee(this.pokemon),level:this.level}),null,()=>a.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end()),null,!0)):a.expParty===dr.SKIP?this.end():a.ui.getMessageHandler().promptLevelUpStats(this.partyMemberIndex,A,!1).then(()=>this.end())}end(){if(this.lastLevel<100){const A=this.getPokemon().getLevelMoves(this.lastLevel+1);for(const s of A)a.unshiftPhase(new ra(this.partyMemberIndex,s[1]))}if(!this.pokemon.pauseEvolutions){const A=this.pokemon.getEvolution();A&&a.unshiftPhase(new KS(this.pokemon,A,this.lastLevel))}return super.end()}};o(fF,"LevelUpPhase");let YS=fF;const BF=class BF extends Zr{constructor(A,s){super(A),this.expValue=s}start(){super.start();const A=this.getPokemon(),s=new je(this.expValue);a.applyModifiers(_L,!0,s),s.value=Math.floor(s.value),a.ui.showText(u.t("battle:expGain",{pokemonName:ee(A),exp:s.value}),null,()=>{const R=A.level;A.addExp(s.value);const n=A.level;n>R&&a.unshiftPhase(new YS(this.partyMemberIndex,R,n)),A.updateInfo().then(()=>this.end())},null,!0)}};o(BF,"ExpPhase");let wP=BF;const gF=class gF extends HE{start(){super.start(),a.partyExpBar.hide().then(()=>this.end())}};o(gF,"HidePartyExpBarPhase");let vP=gF;const mF=class mF extends Zr{constructor(A,s){super(A),this.expValue=s}start(){super.start();const A=this.getPokemon(),s=new je(this.expValue);a.applyModifiers(_L,!0,s),s.value=Math.floor(s.value);const R=A.level;A.addExp(s.value);const n=A.level;n>R&&a.unshiftPhase(new YS(this.partyMemberIndex,R,n)),a.unshiftPhase(new vP),A.updateInfo(),a.expParty===dr.SKIP?this.end():a.expParty===dr.ONLY_LEVEL_UP?n>R?a.partyExpBar.showPokemonExp(A,s.value,a.expParty===dr.ONLY_LEVEL_UP,n).then(()=>{setTimeout(()=>this.end(),800/Math.pow(2,a.expGainsSpeed))}):this.end():a.expGainsSpeed<cr.SKIP?a.partyExpBar.showPokemonExp(A,s.value,!1,n).then(()=>{setTimeout(()=>this.end(),500/Math.pow(2,a.expGainsSpeed))}):this.end()}};o(mF,"ShowPartyExpBarPhase");let VP=mF;const pF=class pF extends nE{start(){super.start(),a.abilityBar.hide().then(()=>{this.end()})}};o(pF,"HideAbilityPhase");let eL=pF;const G0=class G0 extends ns{constructor(A,s=!1){super(A),this.passive=s;const R=this.getPokemon();R?(this.pokemonName=ee(R),this.abilityName=(s?this.getPokemon().getPassiveAbility():this.getPokemon().getAbility()).name,this.pokemonOnField=!0):this.pokemonOnField=!1}start(){if(super.start(),!this.pokemonOnField||!this.getPokemon())return this.end();if(a.abilityBar.isVisible())return a.unshiftPhase(new eL),a.unshiftPhase(new G0(this.battlerIndex,this.passive)),this.end();const A=this.getPokemon();A.isPlayer()?a.currentBattle.lastPlayerInvolved=A.getBattlerIndex()%2:a.currentBattle.lastEnemyInvolved=A.getBattlerIndex()%2,a.abilityBar.showAbility(this.pokemonName,this.abilityName,this.passive,this.player).then(()=>{A!=null&&A.battleData&&(A.battleData.abilityRevealed=!0),this.end()})}};o(G0,"ShowAbilityPhase");let eU=G0;const OR=!0,n8=(Array.isArray(xe.OPP_IVS_OVERRIDE)?xe.OPP_IVS_OVERRIDE:new Array(6).fill(xe.OPP_IVS_OVERRIDE)).map(E=>Number.isNaN(E)||E===null||E>31?-1:E),to=xe.STARTING_WAVE_OVERRIDE||1,Bc=[];let KE;const KF=class KF extends YC{constructor(){super("battle"),this.sessionPlayTime=null,this.lastSavePlayTime=null,this.masterVolume=.5,this.bgmVolume=1,this.fieldVolume=1,this.seVolume=1,this.uiVolume=1,this.gameSpeed=1,this.damageNumbersMode=0,this.reroll=!1,this.shopCursorTarget=ea.REWARDS,this.commandCursorMemory=!1,this.dexForDevs=!1,this.showMovesetFlyout=!0,this.showArenaFlyout=!0,this.showTimeOfDayWidget=!0,this.timeOfDayAnimation=hS.NONE,this.showLevelUpStats=!0,this.enableTutorials=!1,this.enableMoveInfo=!0,this.enableRetries=!1,this.hideIvs=!1,this.candyUpgradeNotification=0,this.candyUpgradeDisplay=0,this.moneyFormat=bc.NORMAL,this.uiTheme=HO.DEFAULT,this.windowType=0,this.experimentalSprites=!1,this.musicPreference=Gr.ALLGENS,this.moveAnimations=!0,this.expGainsSpeed=cr.DEFAULT,this.skipSeenDialogues=!1,this.eggSkipPreference=0,this.expParty=0,this.hpBarSpeed=0,this.fusionPaletteSwaps=!0,this.enableTouchControls=!1,this.enableVibration=!1,this.showBgmBar=!0,this.battleStyle=gf.SWITCH,this.typeHints=!1,this.disableMenu=!1,this.mysteryEncounterSaveData=new Qr,this.shopOverlayShown=!1,this.shopOverlayOpacity=.8,this.bgmCache=new Set,this.rngCounter=0,this.rngSeedOverride="",this.rngOffset=0,this.infoToggles=[],this.eventTarget=new EventTarget,this.phaseQueue=[],this.phaseQueuePrepend=[],this.conditionalQueue=[],this.phaseQueuePrependSpliceIndex=-1,this.nextCommandPhaseQueue=[],this.eventManager=new JC,this.updateGameInfo(),$7(this)}loadPokemonAtlas(A,s,R){R===void 0&&(R=this.experimentalSprites);const n=s.includes("variant/")||/_[0-3]$/.test(s);R&&(R=this.hasExpSprite(A)),n&&(s=s.replace("variant/","")),this.load.atlas(A,`images/pokemon/${n?"variant/":""}${R?"exp/":""}${s}.png`,`images/pokemon/${n?"variant/":""}${R?"exp/":""}${s}.json`)}async loadPokemonVariantAssets(A,s,R){this.experimentalSprites&&this.hasExpSprite(A)&&(s=`exp/${s}`);let I=aR;s.split("/").map(L=>I?I=I[L]:null);const r=I;return new Promise(L=>{if(r&&R!==void 0&&r[R]===1){if(mi.hasOwnProperty(A))return L();this.cachedFetch(`./images/pokemon/variant/${s}.json`).then(N=>N.json()).then(N=>{mi[A]=N,L()})}else L()})}async preload(){mj(),await this.initVariantData()}create(){this.scene.remove(a0.KEY),NJ.apply(this),this.inputController=new NP,this.uiInputs=new lP(this.inputController),this.gameData=new sU,LZ(),this.load.setBaseURL(),this.spritePipeline=new aP(this.game),this.renderer.pipelines.add("Sprite",this.spritePipeline),this.fieldSpritePipeline=new zu(this.game),this.renderer.pipelines.add("FieldSprite",this.fieldSpritePipeline),this.launchBattle()}update(){var A;(A=this.ui)==null||A.update()}launchBattle(){this.arenaBg=this.add.sprite(0,0,"plains_bg"),this.arenaBg.setName("sprite-arena-bg"),this.arenaBgTransition=this.add.sprite(0,0,"plains_bg"),this.arenaBgTransition.setName("sprite-arena-bg-transition");for(const U of[this.arenaBgTransition,this.arenaBg])U.setPipeline(this.fieldSpritePipeline),U.setScale(6),U.setOrigin(0),U.setSize(320,240);const A=this.add.container(0,0);A.setName("field"),A.setScale(6),this.field=A;const s=this.add.container(0,this.game.canvas.height);s.setName("field-ui"),s.setDepth(1),s.setScale(6),this.fieldUI=s;const R=this.make.rexTransitionImagePack({x:0,y:0,scale:6,key:"loading_bg",origin:{x:0,y:0}},!0);R.transit({mode:"blinds",ease:"Cubic.easeInOut",duration:1250}),R.once("complete",()=>{R.destroy()}),this.add.existing(R);const n=this.add.container(0,0);n.setName("ui"),n.setDepth(2),n.setScale(6),this.uiContainer=n;const I=this.game.canvas.width/6,r=this.game.canvas.height/6-48;this.fieldOverlay=this.add.rectangle(0,r*-1-48,I,r,4342338),this.fieldOverlay.setName("rect-field-overlay"),this.fieldOverlay.setOrigin(0,0),this.fieldOverlay.setAlpha(0),this.fieldUI.add(this.fieldOverlay),this.shopOverlay=this.add.rectangle(0,r*-1-48,I,r,460551),this.shopOverlay.setName("rect-shop-overlay"),this.shopOverlay.setOrigin(0,0),this.shopOverlay.setAlpha(0),this.fieldUI.add(this.shopOverlay),this.modifiers=[],this.enemyModifiers=[],this.modifierBar=new hN,this.modifierBar.setName("modifier-bar"),this.add.existing(this.modifierBar),n.add(this.modifierBar),this.enemyModifierBar=new hN(!0),this.enemyModifierBar.setName("enemy-modifier-bar"),this.add.existing(this.enemyModifierBar),n.add(this.enemyModifierBar),this.charSprite=new LP,this.charSprite.setName("sprite-char"),this.charSprite.setup(),this.fieldUI.add(this.charSprite),this.pbTray=new ju(!0),this.pbTray.setName("pb-tray"),this.pbTray.setup(),this.pbTrayEnemy=new ju(!1),this.pbTrayEnemy.setName("enemy-pb-tray"),this.pbTrayEnemy.setup(),this.fieldUI.add(this.pbTray),this.fieldUI.add(this.pbTrayEnemy),this.abilityBar=new nP,this.abilityBar.setName("ability-bar"),this.abilityBar.setup(),this.fieldUI.add(this.abilityBar),this.partyExpBar=new iP,this.partyExpBar.setName("party-exp-bar"),this.partyExpBar.setup(),this.fieldUI.add(this.partyExpBar),this.candyBar=new TP,this.candyBar.setName("candy-bar"),this.candyBar.setup(),this.fieldUI.add(this.candyBar),this.biomeWaveText=Se(this.game.canvas.width/6-2,0,to.toString(),k.BATTLE_INFO),this.biomeWaveText.setName("text-biome-wave"),this.biomeWaveText.setOrigin(1,.5),this.fieldUI.add(this.biomeWaveText),this.moneyText=Se(this.game.canvas.width/6-2,0,"",k.MONEY),this.moneyText.setName("text-money"),this.moneyText.setOrigin(1,.5),this.fieldUI.add(this.moneyText),this.scoreText=Se(this.game.canvas.width/6-2,0,"",k.PARTY,{fontSize:"54px"}),this.scoreText.setName("text-score"),this.scoreText.setOrigin(1,.5),this.fieldUI.add(this.scoreText),this.luckText=Se(this.game.canvas.width/6-2,0,"",k.PARTY,{fontSize:"54px"}),this.luckText.setName("text-luck"),this.luckText.setOrigin(1,.5),this.luckText.setVisible(!1),this.fieldUI.add(this.luckText),this.luckLabelText=Se(this.game.canvas.width/6-2,0,u.t("common:luckIndicator"),k.PARTY,{fontSize:"54px"}),this.luckLabelText.setName("text-luck-label"),this.luckLabelText.setOrigin(1,.5),this.luckLabelText.setVisible(!1),this.fieldUI.add(this.luckLabelText),this.arenaFlyout=new uP,this.fieldUI.add(this.arenaFlyout),this.fieldUI.moveBelow(this.arenaFlyout,this.fieldOverlay),this.updateUIPositions(),this.damageNumberHandler=new oP,this.spriteSparkleHandler=new rP,this.spriteSparkleHandler.setup(),this.pokemonInfoContainer=new CS(this.game.canvas.width/6+52,-(this.game.canvas.height/6)+66),this.pokemonInfoContainer.setup(),this.fieldUI.add(this.pokemonInfoContainer),this.party=[];const L=[];this.arenaPlayer=new Cr(!0),this.arenaPlayer.setName("arena-player"),this.arenaPlayerTransition=new Cr(!0),this.arenaPlayerTransition.setName("arena-player-transition"),this.arenaEnemy=new Cr(!1),this.arenaEnemy.setName("arena-enemy"),this.arenaNextEnemy=new Cr(!1),this.arenaNextEnemy.setName("arena-next-enemy"),this.arenaBgTransition.setVisible(!1),this.arenaPlayerTransition.setVisible(!1),this.arenaNextEnemy.setVisible(!1);for(const U of[this.arenaPlayer,this.arenaPlayerTransition,this.arenaEnemy,this.arenaNextEnemy])U instanceof TE.GameObjects.Sprite&&U.setOrigin(0,0),A.add(U);const N=this.addFieldSprite(0,0,`trainer_${this.gameData.gender===Jt.FEMALE?"f":"m"}_back`);N.setOrigin(.5,1),N.setName("sprite-trainer"),A.add(N),this.trainer=N,this.anims.create({key:"prompt",frames:this.anims.generateFrameNumbers("prompt",{start:1,end:4}),frameRate:6,repeat:-1,showOnStart:!0}),this.anims.create({key:"tera_sparkle",frames:this.anims.generateFrameNumbers("tera_sparkle",{start:0,end:12}),frameRate:18,repeat:0,showOnStart:!0,hideOnComplete:!0}),this.reset(!1,!1,!0);const l=new OP;this.uiContainer.add(l),this.ui=l,l.setup();const C=[t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE];Promise.all([Promise.all(L),hj().then(()=>Gj(!0)),Promise.all([t.TACKLE,t.TAIL_WHIP,t.FOCUS_ENERGY,t.STRUGGLE].map(U=>ol(U))).then(()=>Tl(C,!0)),this.initStarterColors()]).then(()=>{this.pushPhase(new MP),this.pushPhase(new NI),this.shiftPhase()})}initSession(){this.sessionPlayTime===null&&(this.sessionPlayTime=0),this.lastSavePlayTime===null&&(this.lastSavePlayTime=0),this.playTimeTimer&&this.playTimeTimer.destroy(),this.playTimeTimer=this.time.addEvent({delay:Ot(1e3),repeat:-1,callback:o(()=>{this.gameData&&this.gameData.gameStats.playTime++,this.sessionPlayTime!==null&&this.sessionPlayTime++,this.lastSavePlayTime!==null&&this.lastSavePlayTime++},"callback")}),this.updateBiomeWaveText(),this.updateMoneyText(),this.updateScoreText()}async initExpSprites(){Bc.length||this.cachedFetch("./exp-sprites.json").then(A=>A.json()).then(A=>{Array.isArray(A)&&Bc.push(...A),Promise.resolve()})}async initVariantData(){for(const A of Object.keys(aR))delete aR[A];await this.cachedFetch("./images/pokemon/variant/_masterlist.json").then(A=>A.json()).then(A=>{for(const s of Object.keys(A))aR[s]=A[s];if(this.experimentalSprites){const s=aR.exp,R=o(n=>{let I=aR,r=s;n.map((L,N)=>{N<n.length-1?(I=I[L],r=r[L]):I.hasOwnProperty(L)&&r.hasOwnProperty(L)&&(["back","female"].includes(L)?R(n.concat(L)):I[L]=r[L])})},"traverseVariantData");for(const n of Object.keys(s))R([n])}Promise.resolve()})}cachedFetch(A,s){const R=this.game.manifest;if(R){const n=R[`/${A.replace("./","")}`];n&&(A+=`?t=${n}`)}return fetch(A,s)}initStarterColors(){return new Promise(A=>{if(KE)return A();this.cachedFetch("./starter-colors.json").then(s=>s.json()).then(s=>{KE={};for(const R of Object.keys(s))KE[R]=s[R];A()})})}hasExpSprite(A){const s=/^pkmn__?(back__)?(shiny__)?(female__)?(\d+)(\-.*?)?(?:_[1-3])?$/g.exec(A);if(!s)return!1;let R=s[4];return s[2]&&(R+="s"),s[1]&&(R+="b"),s[3]&&(R+="f"),s[5]&&(R+=s[5]),!!Bc.includes(R)}getPlayerParty(){return this.party}getPokemonAllowedInBattle(){return this.getPlayerParty().filter(A=>A.isAllowedInBattle())}getPlayerPokemon(A=!0){return this.getPlayerField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getPlayerField(){var s;const A=this.getPlayerParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getEnemyParty(){var A;return((A=this.currentBattle)==null?void 0:A.enemyParty)??[]}getEnemyPokemon(A=!0){return this.getEnemyField().find(s=>s.isActive()&&(A||s.switchOutStatus===!1))}getEnemyField(){var s;const A=this.getEnemyParty();return A.slice(0,Math.min(A.length,(s=this.currentBattle)!=null&&s.double?2:1))}getField(A=!1){const s=new Array(4).fill(null),R=this.getPlayerField(),n=this.getEnemyField();return s.splice(0,R.length,...R),s.splice(2,n.length,...n),A?s.filter(I=>I==null?void 0:I.isActive()):s}redirectPokemonMoves(A,s){if(this.currentBattle.double!==!1&&s!=null&&s.isActive(!0)){let R;do R=this.findPhase(n=>n instanceof _A&&n.targets.length===1&&n.targets[0]===A.getBattlerIndex()&&n.pokemon.isPlayer()!==s.isPlayer()),R&&R.targets[0]!==s.getBattlerIndex()&&(R.targets[0]=s.getBattlerIndex());while(R)}}getModifierBar(A){return A?this.enemyModifierBar:this.modifierBar}addInfoToggle(A){this.infoToggles.push(A)}getInfoToggles(A=!1){return A?this.infoToggles.filter(s=>s==null?void 0:s.isActive()):this.infoToggles}getPokemonById(A){const s=o(R=>R.find(n=>n.id===A),"findInParty");return(s(this.getPlayerParty())||s(this.getEnemyParty()))??null}addPlayerPokemon(A,s,R,n,I,r,L,N,l,C,U){const D=new WE(A,s,R,n,I,r,L,N,l,C);return U&&U(D),D.init(),D}addEnemyPokemon(A,s,R,n=!1,I=!1,r,L){xe.OPP_LEVEL_OVERRIDE>0&&(s=xe.OPP_LEVEL_OVERRIDE),xe.OPP_SPECIES_OVERRIDE&&(A=$e(xe.OPP_SPECIES_OVERRIDE),n=this.getEncounterBossSegments(this.currentBattle.waveIndex,s,A)>1);const N=new Fs(A,s,R,n,I,r);if(xe.OPP_FUSION_OVERRIDE&&N.generateFusionSpecies(),n&&!r){const l=Uf(He(4294967296));for(let C=0;C<N.ivs.length;C++)N.ivs[C]=Math.round(TE.Math.Linear(Math.min(N.ivs[C],l[C]),Math.max(N.ivs[C],l[C]),.75))}L&&L(N);for(let l=0;l<N.ivs.length;l++)n8[l]>-1&&(N.ivs[l]=n8[l]);return N.init(),N}removePokemonFromPlayerParty(A,s=!0){if(!A)return;const R=this.party.indexOf(A);this.party.splice(R,1),s&&(this.field.remove(A,!0),A.destroy()),this.updateModifiers(!0)}addPokemonIcon(A,s,R,n=.5,I=.5,r=!1){const L=this.add.container(s,R);L.setName(`${A.name}-icon`);const N=this.add.sprite(0,0,A.getIconAtlasKey(r));if(N.setName(`sprite-${A.name}-icon`),N.setFrame(A.getIconId(!0)),N.frame.name!==A.getIconId(!0)){`${A.name}`;const l=A.shiny;A.shiny=!1,N.setTexture(A.getIconAtlasKey(r)),N.setFrame(A.getIconId(!0)),A.shiny=l}if(N.setOrigin(.5,0),L.add(N),A.isFusion()){const l=this.add.sprite(0,0,A.getFusionIconAtlasKey(r));l.setName("sprite-fusion-icon"),l.setOrigin(.5,0),l.setFrame(A.getFusionIconId(!0));const C=N.width,U=N.height,D=N.frame,M=(N.frame.cutHeight<=l.frame.cutHeight?Math.ceil:Math.floor)((N.frame.cutHeight+l.frame.cutHeight)/4),h=`${N.frame.name}f${l.frame.name}`;N.frame.texture.has(h)||N.frame.texture.add(h,N.frame.sourceIndex,N.frame.cutX,N.frame.cutY,N.frame.cutWidth,M),N.setFrame(h),l.y=N.frame.cutHeight;const _=l.frame,d=l.frame.cutY+N.frame.cutHeight,f=l.frame.cutHeight-N.frame.cutHeight,H=`${l.frame.name}f${N.frame.name}`;l.frame.texture.has(H)||l.frame.texture.add(H,l.frame.sourceIndex,l.frame.cutX,d,l.frame.cutWidth,f),l.setFrame(H);const B=(D.y+_.y)/2;N.frame.y=l.frame.y=B,L.add(l),n!==.5&&(L.x-=C*(n-.5)),I!==0&&(L.y-=U*I)}else n!==.5&&(L.x-=N.width*(n-.5)),I!==0&&(L.y-=N.height*I);return L}setSeed(A){this.seed=A,this.rngCounter=0,this.waveCycleOffset=this.getGeneratedWaveCycleOffset(),this.offsetGym=this.gameMode.isClassic&&this.getGeneratedOffsetGym()}randBattleSeedInt(A,s=0){var R;return(R=this.currentBattle)==null?void 0:R.randSeedInt(A,s)}reset(A=!1,s=!1,R=!1){var n,I,r;s&&(this.gameData=new sU),this.gameMode=QC(hA.CLASSIC),this.disableMenu=!1,this.score=0,this.money=0,this.lockModifierTiers=!1,this.pokeballCounts=Object.fromEntries(dE(we).filter(L=>L<=we.MASTER_BALL).map(L=>[L,0])),this.pokeballCounts[we.POKEBALL]+=5,xe.POKEBALL_OVERRIDE.active&&(this.pokeballCounts=xe.POKEBALL_OVERRIDE.pokeballs),this.modifiers=[],this.enemyModifiers=[],this.modifierBar.removeAll(!0),this.enemyModifierBar.removeAll(!0);for(const L of this.getPlayerParty())L.destroy();this.party=[];for(const L of this.getEnemyParty())L.destroy();if((I=(n=this.currentBattle)==null?void 0:n.mysteryEncounter)!=null&&I.introVisuals&&this.field.remove((r=this.currentBattle.mysteryEncounter)==null?void 0:r.introVisuals,!0),this.currentBattle=null,this.setSeed(xe.SEED_OVERRIDE||v0(24)),this.seed,this.resetSeed(),this.biomeWaveText.setText(to.toString()),this.biomeWaveText.setVisible(!1),this.updateMoneyText(),this.moneyText.setVisible(!1),this.updateScoreText(),this.scoreText.setVisible(!1),[this.luckLabelText,this.luckText].map(L=>L.setVisible(!1)),this.newArena(xe.STARTING_BIOME_OVERRIDE||T.TOWN),this.field.setVisible(!0),this.arenaBgTransition.setPosition(0,0),this.arenaPlayer.setPosition(300,0),this.arenaPlayerTransition.setPosition(0,0),this.arenaEnemy.setPosition(-280,0),this.arenaNextEnemy.setPosition(-280,0),this.arenaNextEnemy.setVisible(!1),this.arena.init(),this.trainer.setTexture(`trainer_${this.gameData.gender===Jt.FEMALE?"f":"m"}_back`),this.trainer.setPosition(406,186),this.trainer.setVisible(!0),this.mysteryEncounterSaveData=new Qr,this.updateGameInfo(),R){const L=[...qA,...Ve,...nA,...dE(yE).map(N=>aS(N)).flatMap(N=>Object.values(N).flat().map(l=>l.modifierType).filter(l=>"localize"in l).map(l=>l))];for(const N of L)N.localize()}A&&(this.initVariantData(),this.fadeOutBgm(250,!1),this.tweens.add({targets:[this.uiContainer],alpha:0,duration:250,ease:"Sine.easeInOut",onComplete:o(()=>{this.clearPhaseQueue(),this.ui.freeUIData(),this.uiContainer.remove(this.ui,!0),this.uiContainer.destroy(),this.children.removeAll(!0),this.game.domContainer.innerHTML="",this.launchBattle()},"onComplete")}))}getDoubleBattleChance(A,s){const R=new je(A%10===0?32:8);this.applyModifiers(NL,!0,R);for(const n of s)_t(vi,n,null,!1,R);return Math.max(R.value,1)}newBattle(A,s,R,n,I){var _;const r=xe.STARTING_WAVE_OVERRIDE||to,L=A||(((_=this.currentBattle)==null?void 0:_.waveIndex)||r-1)+1;let N,l,C,U=null;this.resetSeed(L);const D=this.getPlayerField();if(this.gameMode.isFixedBattle(L)&&R===void 0)U=this.gameMode.getFixedBattle(L),N=U.double,l=U.battleType,this.executeWithSeedOffset(()=>C=U==null?void 0:U.getTrainer(),(U.seedOffsetWaveIndex||L)<<8),C&&this.field.add(C);else{if(!this.gameMode.hasTrainers||xe.DISABLE_STANDARD_TRAINERS_OVERRIDE&&Pe(R)?l=Ht.WILD:s===void 0?l=this.gameMode.isWaveTrainer(L,this.arena)?Ht.TRAINER:Ht.WILD:l=s,l===Ht.TRAINER){const d=this.arena.randomTrainerType(L);let f=!1;tE[d].doubleOnly?f=!0:tE[d].hasDouble&&(f=!He(this.getDoubleBattleChance(L,D)),tE[d].trainerTypeDouble&&![c.TATE,c.LIZA].includes(d)&&(f=!1));const H=f?LA.DOUBLE:He(2)?LA.FEMALE:LA.DEFAULT;C=R!==void 0?R.toTrainer():new ps(d,H),this.field.add(C)}(this.isWaveMysteryEncounter(l,L)||l===Ht.MYSTERY_ENCOUNTER)&&(l=Ht.MYSTERY_ENCOUNTER,this.mysteryEncounterSaveData.encounterSpawnChance=Qk)}if(n===void 0&&L>1?l===Ht.WILD&&!this.gameMode.isWaveFinal(L)?N=!He(this.getDoubleBattleChance(L,D)):l===Ht.TRAINER&&(N=(C==null?void 0:C.variant)===LA.DOUBLE):U||(N=!!n),this.gameMode.isEndlessBoss(L)&&(N=!1),!Pe(xe.BATTLE_TYPE_OVERRIDE)){let d=null;switch(xe.BATTLE_TYPE_OVERRIDE){case"double":d="double";break;case"single":d="single";break;case"even-doubles":d=L%2?"single":"double";break;case"odd-doubles":d=L%2?"double":"single";break}d==="double"&&(N=!0),l!==Ht.TRAINER&&d==="single"&&(N=!1)}const M=this.currentBattle,h=this.getMaxExpLevel();if(this.lastEnemyTrainer=(M==null?void 0:M.trainer)??null,this.lastMysteryEncounter=M==null?void 0:M.mysteryEncounter,l===Ht.MYSTERY_ENCOUNTER&&(N=!1),M!=null&&M.double&&!N){this.tryRemovePhase(d=>d instanceof Xa);for(const d of this.getPlayerField())d.lapseTag(w.COMMANDED)}if(this.executeWithSeedOffset(()=>{this.currentBattle=new QP(this.gameMode,L,l,C,N)},L<<3,this.waveSeed),this.currentBattle.incrementTurn(),l===Ht.MYSTERY_ENCOUNTER&&(this.currentBattle.mysteryEncounterType=I),!A&&M){const d=!(M.waveIndex%10),f=this.gameMode.hasShortBiomes||this.gameMode.isDaily,H=this.gameMode.hasShortBiomes&&M.waveIndex%5===0,B=M.waveIndex%50===49,K=d||H||f&&B,Y=K||[Ht.TRAINER,Ht.MYSTERY_ENCOUNTER].includes(this.currentBattle.battleType)||this.currentBattle.battleSpec===DE.FINAL_BOSS;for(const v of this.getEnemyParty())v.destroy();if(this.trySpreadPokerus(),!K&&L%10===5&&this.arena.updatePoolsForTimeOfDay(),Y){this.arena.resetArenaEffects();for(const v of D)v.lapseTag(w.COMMANDED);D.forEach((v,Z)=>{v.isOnField()&&this.pushPhase(new Xr(Z))});for(const v of this.getPlayerParty())v.resetBattleData(),v.resetTera(),r7(wS,v),(v.hasSpecies(e.TERAPAGOS)||this.gameMode.isClassic&&this.currentBattle.waveIndex>180&&this.currentBattle.waveIndex<=190)&&(this.arena.playerTerasUsed=0);this.trainer.visible||this.pushPhase(new Yu)}for(const v of this.getPlayerParty())this.triggerPokemonFormChange(v,Th);!this.gameMode.hasRandomBiomes&&!K?this.pushPhase(new qu):(this.pushPhase(new dP),this.pushPhase(new hP),this.getMaxExpLevel()>h&&this.pushPhase(new UP))}return this.currentBattle}newArena(A,s){return this.arena=new n0(A,T[A].toLowerCase(),s),this.eventTarget.dispatchEvent(new jc),this.arenaBg.pipelineData={terrainColorRatio:this.arena.getBgTerrainColorRatioForBiome()},this.arena}updateFieldScale(){return new Promise(A=>{const s=Math.floor(Math.pow(1/this.getField(!0).map(R=>R.getSpriteScale()).reduce((R,n)=>R=Math.max(n,R),0),.7)*40)/40;this.setFieldScale(s).then(()=>A())})}setFieldScale(A,s=!1){return new Promise(R=>{if(A*=6,this.field.scale===A)return R();const n=this.arenaBg.width*6,I=132*6,r=this.arenaBg.width*A,L=132*A;this.tweens.add({targets:this.field,scale:A,x:(n-r)/2,y:I-L,duration:s?0:Ot(Math.abs(this.field.scale-A)*200),ease:"Sine.easeInOut",onComplete:o(()=>R(),"onComplete")})})}getSpeciesFormIndex(A,s,R,n){var r,L,N,l,C,U,D,M;if(!((r=A.forms)!=null&&r.length))return 0;const I=["EggLapsePhase","EggHatchPhase"].includes(((L=this.getCurrentPhase())==null?void 0:L.constructor.name)??"");if(!I&&((N=this.currentBattle)==null?void 0:N.battleType)===Ht.TRAINER&&!Pe(this.currentBattle.trainer)&&this.currentBattle.trainer.config.hasSpecialtyType()){if(A.speciesId===e.WORMADAM)switch(this.currentBattle.trainer.config.specialtyType){case i.GROUND:return 1;case i.STEEL:return 2;case i.GRASS:return 0}if(A.speciesId===e.ROTOM)switch(this.currentBattle.trainer.config.specialtyType){case i.FLYING:return 4;case i.GHOST:return 0;case i.FIRE:return 1;case i.GRASS:return 5;case i.WATER:return 2;case i.ICE:return 3}if(A.speciesId===e.ORICORIO)switch(this.currentBattle.trainer.config.specialtyType){case i.GHOST:return 3;case i.FIRE:return 0;case i.ELECTRIC:return 1;case i.PSYCHIC:return 2}if(A.speciesId===e.PALDEA_TAUROS)switch(this.currentBattle.trainer.config.specialtyType){case i.FIRE:return 1;case i.WATER:return 2}if(A.speciesId===e.SILVALLY||A.speciesId===e.ARCEUS)return this.currentBattle.trainer.config.specialtyType}switch(A.speciesId){case e.UNOWN:case e.SHELLOS:case e.GASTRODON:case e.BASCULIN:case e.DEERLING:case e.SAWSBUCK:case e.SCATTERBUG:case e.SPEWPA:case e.VIVILLON:case e.FLABEBE:case e.FLOETTE:case e.FLORGES:case e.FURFROU:case e.PUMPKABOO:case e.GOURGEIST:case e.ORICORIO:case e.MAGEARNA:case e.ZARUDE:case e.SQUAWKABILLY:case e.TATSUGIRI:case e.PALDEA_TAUROS:return He(A.forms.length);case e.PIKACHU:return((l=this.currentBattle)==null?void 0:l.battleType)===Ht.TRAINER&&((C=this.currentBattle)==null?void 0:C.waveIndex)<30?0:He(8);case e.EEVEE:return((U=this.currentBattle)==null?void 0:U.battleType)===Ht.TRAINER&&((D=this.currentBattle)==null?void 0:D.waveIndex)<30&&!I?0:He(2);case e.FROAKIE:case e.FROGADIER:case e.GRENINJA:return((M=this.currentBattle)==null?void 0:M.battleType)===Ht.TRAINER&&!I?0:He(2);case e.URSHIFU:return He(2);case e.ZYGARDE:return He(4);case e.MINIOR:return He(7);case e.ALCREMIE:return He(9);case e.MEOWSTIC:case e.INDEEDEE:case e.BASCULEGION:case e.OINKOLOGNE:return s===At.FEMALE?1:0;case e.TOXTRICITY:{const h=[rt.LONELY,rt.BOLD,rt.RELAXED,rt.TIMID,rt.SERIOUS,rt.MODEST,rt.MILD,rt.QUIET,rt.BASHFUL,rt.CALM,rt.GENTLE,rt.CAREFUL];return R!==void 0&&h.indexOf(R)>-1?1:0}case e.GIMMIGHOUL:return this.gameMode.hasMysteryEncounters&&!I?1:He(A.forms.length)}if(n){switch(A.speciesId){case e.BURMY:case e.WORMADAM:case e.ROTOM:case e.LYCANROC:return He(A.forms.length)}return 0}return this.arena.getSpeciesFormIndex(A)}getGeneratedOffsetGym(){let A=!1;return this.executeWithSeedOffset(()=>{A=!He(2)},0,this.seed.toString()),A}getGeneratedWaveCycleOffset(){let A=0;return this.executeWithSeedOffset(()=>{A=He(8)*5},0,this.seed.toString()),A}getEncounterBossSegments(A,s,R,n=!1){if(xe.OPP_HEALTH_SEGMENTS_OVERRIDE>1)return xe.OPP_HEALTH_SEGMENTS_OVERRIDE;if(xe.OPP_HEALTH_SEGMENTS_OVERRIDE===1)return 0;if(this.gameMode.isDaily&&this.gameMode.isWaveFinal(A))return 5;let I;if(n||R&&(R.subLegendary||R.legendary||R.mythical)?I=!0:this.executeWithSeedOffset(()=>{I=A%10===0||this.gameMode.hasRandomBosses&&He(100)<Math.min(Math.max(Math.ceil((A-250)/50),0)*2,30)},A<<2),!I)return 0;let r=2;return s>=100&&r++,R&&R.baseTotal>=670&&r++,r+=Math.floor(A/250),r}trySpreadPokerus(){const A=this.getPlayerParty(),s=[],R=o((n,I)=>{const r=A[n+I];!r.pokerus&&!He(10)&&(r.pokerus=!0,s.push(n+I))},"spread");A.forEach((n,I)=>{!n.pokerus||s.indexOf(I)>-1||this.executeWithSeedOffset(()=>{I&&R(I,-1),I<A.length-1&&R(I,1)},this.currentBattle.waveIndex+(I<<8))})}resetSeed(A){var R;const s=A||((R=this.currentBattle)==null?void 0:R.waveIndex)||0;this.waveSeed=kc(this.seed,s),TE.Math.RND.sow([this.waveSeed]),this.waveSeed,this.rngCounter=0}executeWithSeedOffset(A,s,R){if(!A)return;const n=this.rngCounter,I=this.rngOffset,r=this.rngSeedOverride,L=TE.Math.RND.state();TE.Math.RND.sow([kc(R||this.seed,s)]),this.rngCounter=0,this.rngOffset=s,this.rngSeedOverride=R||"",A(),TE.Math.RND.state(L),this.rngCounter=n,this.rngOffset=I,this.rngSeedOverride=r}addFieldSprite(A,s,R,n,I=0){const r=this.add.sprite(A,s,R,n);return r.setPipeline(this.fieldSpritePipeline),I&&(r.pipelineData.terrainColorRatio=I),r}addPokemonSprite(A,s,R,n,I,r=!1,L=!1){const N=this.addFieldSprite(s,R,n,I);return this.initPokemonSprite(N,A,r,L),N}initPokemonSprite(A,s,R=!1,n=!1){return A.setPipeline(this.spritePipeline,{tone:[0,0,0,0],hasShadow:R,ignoreOverride:n,teraColor:s?BR(s.getTeraType()):void 0,isTerastallized:s?s.isTerastallized:!1}),this.spriteSparkleHandler.add(A),A}moveBelowOverlay(A){this.fieldUI.moveBelow(A,this.fieldOverlay)}processInfoButton(A){this.arenaFlyout.toggleFlyout(A)}showFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:.5,ease:"Sine.easeOut",duration:A,onComplete:o(()=>s(),"onComplete")})})}hideFieldOverlay(A){return new Promise(s=>{this.tweens.add({targets:this.fieldOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:o(()=>s(),"onComplete")})})}updateShopOverlayOpacity(A){this.shopOverlayOpacity=A,this.shopOverlayShown&&this.shopOverlay.setAlpha(this.shopOverlayOpacity)}showShopOverlay(A){return this.shopOverlayShown=!0,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:this.shopOverlayOpacity,ease:"Sine.easeOut",duration:A,onComplete:o(()=>s(),"onComplete")})})}hideShopOverlay(A){return this.shopOverlayShown=!1,new Promise(s=>{this.tweens.add({targets:this.shopOverlay,alpha:0,duration:A,ease:"Cubic.easeIn",onComplete:o(()=>s(),"onComplete")})})}showEnemyModifierBar(){this.enemyModifierBar.setVisible(!0)}hideEnemyModifierBar(){this.enemyModifierBar.setVisible(!1)}updateBiomeWaveText(){const A=!(this.currentBattle.waveIndex%10),s=GL(this.arena.biomeType);this.fieldUI.moveAbove(this.biomeWaveText,this.luckText),this.biomeWaveText.setText(s+" - "+this.currentBattle.waveIndex.toString()),this.biomeWaveText.setColor(A?"#f89890":"#ffffff"),this.biomeWaveText.setShadowColor(A?"#984038":"#636363"),this.biomeWaveText.setVisible(!0)}updateMoneyText(A=!0){if(this.money===void 0)return;const s=Ol(this.moneyFormat,this.money);this.moneyText.setText(u.t("battleScene:moneyOwned",{formattedMoney:s})),this.fieldUI.moveAbove(this.moneyText,this.luckText),A&&this.moneyText.setVisible(!0)}animateMoneyChanged(A){if(this.tweens.getTweensOf(this.moneyText).length>0)return;const s=this.moneyText.scale*.14*(A?1:-1);this.moneyText.setShadowColor(A?"#008000":"#FF0000"),this.tweens.add({targets:this.moneyText,duration:250,scale:this.moneyText.scale+s,loop:0,yoyo:!0,onComplete:o(R=>this.moneyText.setShadowColor(eA(k.MONEY,!0)),"onComplete")})}updateScoreText(){this.scoreText.setText(`Score: ${this.score.toString()}`),this.scoreText.setVisible(this.gameMode.isDaily)}updateAndShowText(A){const s=[this.luckLabelText,this.luckText];for(const n of s)n.setAlpha(0);const R=TI(this.getPlayerParty());this.luckText.setText(Dk(R)),R<14?this.luckText.setTint(Mk(R)):this.luckText.setTint(16772956,4718441,7039999,16738665),this.luckLabelText.setX(this.game.canvas.width/6-2-(this.luckText.displayWidth+2)),this.tweens.add({targets:s,duration:A,alpha:1,onComplete:o(()=>{for(const n of s)n.setVisible(!0)},"onComplete")})}hideLuckText(A){if(this.reroll)return;const s=[this.luckLabelText,this.luckText];this.tweens.add({targets:s,duration:A,alpha:0,onComplete:o(()=>{for(const R of s)R.setVisible(!1)},"onComplete")})}updateUIPositions(){var n;const A=this.enemyModifiers.filter(I=>I.isIconVisible()).length,s=this.biomeWaveText.getBottomLeft().y-this.biomeWaveText.getTopLeft().y;this.biomeWaveText.setY(-(this.game.canvas.height/6)+(A?A<=12?15:24:0)+s/2),this.moneyText.setY(this.biomeWaveText.y+10),this.scoreText.setY(this.moneyText.y+10),[this.luckLabelText,this.luckText].map(I=>I.setY((this.scoreText.visible?this.scoreText:this.moneyText).y+10));const R=(this.scoreText.visible?this.scoreText:this.moneyText).y+15;this.partyExpBar.setY(R),this.candyBar.setY(R+15),(n=this.ui)==null||n.achvBar.setY(this.game.canvas.height/6+R)}sendTextToBack(){this.fieldUI.sendToBack(this.biomeWaveText),this.fieldUI.sendToBack(this.moneyText),this.fieldUI.sendToBack(this.scoreText)}addFaintedEnemyScore(A){let s=A.getSpeciesForm().getBaseExp()*(A.level/this.getMaxExpLevel())*(A.ivs.reduce((R,n)=>n+=R,0)/93*.2+.8);this.findModifiers(R=>R instanceof Ft&&R.pokemonId===A.id,!1).map(R=>s*=R.getScoreMultiplier()),A.isBoss()&&(s*=Math.sqrt(A.bossSegments)),this.currentBattle.battleScore+=Math.ceil(s)}getMaxExpLevel(A=!1){var I;if(xe.LEVEL_CAP_OVERRIDE>0)return xe.LEVEL_CAP_OVERRIDE;if(A||xe.LEVEL_CAP_OVERRIDE<0)return Number.MAX_SAFE_INTEGER;const s=Math.ceil((((I=this.currentBattle)==null?void 0:I.waveIndex)||1)/10)*10,R=this.gameMode.getWaveForDifficulty(s),n=(1+R/2+Math.pow(R/25,2))*1.2;return Math.ceil(n/2)*2+2}randomSpecies(A,s,R,n,I){if(R)return this.arena.randomSpecies(A,s,void 0,TI(this.party));const r=n?[...new Set(qA.filter(L=>L.isCatchable()).filter(n).map(L=>{if(!I)for(;IA.hasOwnProperty(L.speciesId);)L=$e(IA[L.speciesId]);return L}))]:qA.filter(L=>L.isCatchable());return r[He(r.length)]}generateRandomBiome(A){const s=A%250,R=dE(T).filter(l=>l!==T.TOWN&&l!==T.END),n=QO[T.END][0]-2,I=new Array(n+1).fill(null).map((l,C)=>(1-Math.min(Math.abs(C/(n-1)-s/250)+.25,1))/.75*250),r=[];let L=0;for(const l of R)L+=Math.ceil(I[QO[l][0]-1]/QO[l][1]),r.push(L);const N=He(L);for(let l=0;l<R.length;l++)if(N<r[l])return R[l];return R[He(R.length)]}isBgmPlaying(){var A;return((A=this.bgm)==null?void 0:A.isPlaying)??!1}playBgm(A,s){var r,L;if(A===void 0&&(A=((r=this.currentBattle)==null?void 0:r.getBgmOverride())||((L=this.arena)==null?void 0:L.bgm)),A=EE.getEventBgmReplacement(A),this.bgm&&A===this.bgm.key){this.bgm.isPlaying||this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}s&&!this.bgm&&(s=!1),this.bgmCache.add(A),this.loadBgm(A);let R=0;R=A===this.arena.bgm?this.arena.getBgmLoopPoint():this.getBgmLoopPoint(A);let n=!1;const I=o(()=>{if(this.ui.bgmBar.setBgmToBgmBar(A),A===null&&this.bgm&&!this.bgm.pendingRemove){this.bgm.play({volume:this.masterVolume*this.bgmVolume});return}this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying&&this.bgm.stop(),this.bgm=this.sound.add(A,{loop:!0}),this.bgm.play({volume:this.masterVolume*this.bgmVolume}),R&&this.bgm.on("looped",()=>this.bgm.play({seek:R}))},"playNewBgm");if(this.load.once(TE.Loader.Events.COMPLETE,()=>{n=!0,(!s||!this.bgm.isPlaying)&&I()}),s){const N=o(()=>{n&&(!this.bgm.isPlaying||this.bgm.pendingRemove)&&I()},"onBgmFaded");this.time.delayedCall(this.fadeOutBgm(500,!0)?750:250,N)}this.load.isLoading()||this.load.start()}pauseBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPlaying?(this.bgm.pause(),!0):!1}resumeBgm(){return this.bgm&&!this.bgm.pendingRemove&&this.bgm.isPaused?(this.bgm.resume(),!0):!1}updateSoundVolume(){if(this.sound)for(const A of this.sound.getAllPlaying())if(this.bgmCache.has(A.key))A.setVolume(this.masterVolume*this.bgmVolume);else{const s=A.key.split("/");switch(s[0]){case"battle_anims":case"cry":s[1].startsWith("PRSFX- ")?A.setVolume(this.masterVolume*this.fieldVolume*.5):A.setVolume(this.masterVolume*this.fieldVolume);break;case"se":case"ui":A.setVolume(this.masterVolume*this.seVolume)}}}fadeOutBgm(A=500,s=!0){return this.bgm&&this.sound.getAllPlaying().find(n=>n.key===this.bgm.key)?(oO.fadeOut(this,this.bgm,A,s),!0):!1}fadeAndSwitchBgm(A,s=!1,R=2e3){this.fadeOutBgm(R,s),this.time.delayedCall(R,()=>{this.playBgm(A)})}playSound(A,s){const R=typeof A=="string"?A:A.key;s=s??{};try{const n=R.split("/");switch(s.volume=s.volume??1,n[0]){case"level_up_fanfare":case"item_fanfare":case"minor_fanfare":case"heal":case"evolution":case"evolution_fanfare":s.volume*=this.masterVolume*this.bgmVolume;break;case"battle_anims":case"cry":s.volume*=this.masterVolume*this.fieldVolume,n[1].startsWith("PRSFX- ")&&(s.volume*=.5);break;case"ui":s.volume*=this.masterVolume*this.uiVolume;break;case"se":s.volume*=this.masterVolume*this.seVolume;break}return this.sound.play(R,s),this.sound.get(R)}catch{return A}}playSoundWithoutBgm(A,s){this.bgmCache.add(A);const R=this.pauseBgm();this.playSound(A);const n=this.sound.get(A);return this.bgmResumeTimer&&this.bgmResumeTimer.destroy(),R&&(this.bgmResumeTimer=this.time.delayedCall(s||Ot(n.totalDuration*1e3),()=>{this.resumeBgm(),this.bgmResumeTimer=null})),n}getBgmLoopPoint(A){switch(A){case"title":return 46.5;case"battle_kanto_champion":return 13.95;case"battle_johto_champion":return 23.498;case"battle_hoenn_champion_g5":return 11.328;case"battle_hoenn_champion_g6":return 11.762;case"battle_sinnoh_champion":return 12.235;case"battle_champion_alder":return 27.653;case"battle_champion_iris":return 10.145;case"battle_kalos_champion":return 10.38;case"battle_champion_kukui":return 15.784;case"battle_alola_champion":return 13.025;case"battle_galar_champion":return 61.635;case"battle_mustard":return 22.442;case"battle_champion_geeta":return 37.447;case"battle_champion_nemona":return 14.914;case"battle_champion_kieran":return 7.206;case"battle_hoenn_elite":return 11.35;case"battle_unova_elite":return 17.73;case"battle_kalos_elite":return 12.34;case"battle_alola_elite":return 19.212;case"battle_galar_elite":return 164.069;case"battle_paldea_elite":return 12.77;case"battle_bb_elite":return 19.434;case"battle_final_encounter":return 19.159;case"battle_final":return 16.453;case"battle_kanto_gym":return 13.857;case"battle_johto_gym":return 12.911;case"battle_hoenn_gym":return 12.379;case"battle_sinnoh_gym":return 13.122;case"battle_unova_gym":return 19.145;case"battle_kalos_gym":return 44.81;case"battle_galar_gym":return 171.262;case"battle_paldea_gym":return 127.489;case"battle_legendary_kanto":return 32.966;case"battle_legendary_raikou":return 12.632;case"battle_legendary_entei":return 2.905;case"battle_legendary_suicune":return 12.636;case"battle_legendary_lugia":return 19.77;case"battle_legendary_ho_oh":return 17.668;case"battle_legendary_regis_g5":return 49.5;case"battle_legendary_regis_g6":return 21.13;case"battle_legendary_gro_kyo":return 10.547;case"battle_legendary_rayquaza":return 10.495;case"battle_legendary_deoxys":return 13.333;case"battle_legendary_lake_trio":return 16.887;case"battle_legendary_sinnoh":return 22.77;case"battle_legendary_dia_pal":return 16.009;case"battle_legendary_origin_forme":return 18.961;case"battle_legendary_giratina":return 10.451;case"battle_legendary_arceus":return 9.595;case"battle_legendary_unova":return 13.855;case"battle_legendary_kyurem":return 18.314;case"battle_legendary_res_zek":return 18.329;case"battle_legendary_xern_yvel":return 26.468;case"battle_legendary_tapu":return 0;case"battle_legendary_sol_lun":return 6.525;case"battle_legendary_ub":return 9.818;case"battle_legendary_dusk_dawn":return 5.211;case"battle_legendary_ultra_nec":return 10.344;case"battle_legendary_zac_zam":return 11.424;case"battle_legendary_glas_spec":return 12.503;case"battle_legendary_calyrex":return 50.641;case"battle_legendary_riders":return 18.155;case"battle_legendary_birds_galar":return .175;case"battle_legendary_ruinous":return 6.333;case"battle_legendary_kor_mir":return 6.442;case"battle_legendary_loyal_three":return 6.5;case"battle_legendary_ogerpon":return 14.335;case"battle_legendary_terapagos":return 24.377;case"battle_legendary_pecharunt":return 6.508;case"battle_rival":return 14.11;case"battle_rival_2":return 17.714;case"battle_rival_3":return 17.586;case"battle_trainer":return 13.686;case"battle_wild":return 12.703;case"battle_wild_strong":return 13.94;case"end_summit":return 30.025;case"battle_rocket_grunt":return 12.707;case"battle_aqua_magma_grunt":return 12.062;case"battle_galactic_grunt":return 13.043;case"battle_plasma_grunt":return 14.758;case"battle_flare_grunt":return 4.228;case"battle_aether_grunt":return 16;case"battle_skull_grunt":return 20.87;case"battle_macro_grunt":return 11.56;case"battle_star_grunt":return 133.362;case"battle_galactic_admin":return 11.997;case"battle_colress":return 12.234;case"battle_skull_admin":return 15.463;case"battle_oleana":return 14.11;case"battle_star_admin":return 9.493;case"battle_rocket_boss":return 9.115;case"battle_aqua_magma_boss":return 14.847;case"battle_galactic_boss":return 106.962;case"battle_plasma_boss":return 25.624;case"battle_flare_boss":return 8.085;case"battle_aether_boss":return 11.33;case"battle_skull_boss":return 13.13;case"battle_macro_boss":return 11.42;case"battle_star_boss":return 25.764;case"mystery_encounter_gen_5_gts":return 8.52;case"mystery_encounter_gen_6_gts":return 9.24;case"mystery_encounter_fun_and_games":return 4.78;case"mystery_encounter_weird_dream":return 41.42;case"mystery_encounter_delibirdy":return 82.28;case"title_afd":return 47.66;case"battle_rival_3_afd":return 49.147}return 0}toggleInvert(A){A?this.cameras.main.setPostPipeline(Q7):this.cameras.main.removePostPipeline("InvertPostFX")}getCurrentPhase(){return this.currentPhase}getStandbyPhase(){return this.standbyPhase}pushConditionalPhase(A,s){this.conditionalQueue.push([s,A])}pushPhase(A,s=!1){(s?this.nextCommandPhaseQueue:this.phaseQueue).push(A)}unshiftPhase(...A){this.phaseQueuePrependSpliceIndex===-1?this.phaseQueuePrepend.push(...A):this.phaseQueuePrepend.splice(this.phaseQueuePrependSpliceIndex,0,...A)}clearPhaseQueue(){this.phaseQueue.splice(0,this.phaseQueue.length)}clearAllPhases(){for(const A of[this.phaseQueue,this.phaseQueuePrepend,this.conditionalQueue,this.nextCommandPhaseQueue])A.splice(0,A.length);this.currentPhase=null,this.standbyPhase=null,this.clearPhaseQueueSplice()}setPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=this.phaseQueuePrepend.length}clearPhaseQueueSplice(){this.phaseQueuePrependSpliceIndex=-1}shiftPhase(){var A;if(this.standbyPhase){this.currentPhase=this.standbyPhase,this.standbyPhase=null;return}if(this.phaseQueuePrependSpliceIndex>-1&&this.clearPhaseQueueSplice(),this.phaseQueuePrepend.length)for(;this.phaseQueuePrepend.length;){const s=this.phaseQueuePrepend.pop();s&&this.phaseQueue.unshift(s)}if(this.phaseQueue.length||(this.populatePhaseQueue(),this.conditionalQueue=[]),this.currentPhase=this.phaseQueue.shift()??null,(A=this.conditionalQueue)!=null&&A.length){const s=this.conditionalQueue.shift();s!=null&&s[0]()?this.pushPhase(s[1]):s?this.conditionalQueue.unshift(s):console.warn("condition phase is undefined/null!",s)}this.currentPhase&&(`${this.currentPhase.constructor.name}`,this.currentPhase.start())}overridePhase(A){return this.standbyPhase?!1:(this.standbyPhase=this.currentPhase,this.currentPhase=A,`${A.constructor.name}`,A.start(),!0)}findPhase(A){return this.phaseQueue.find(A)}tryReplacePhase(A,s){const R=this.phaseQueue.findIndex(A);return R>-1?(this.phaseQueue[R]=s,!0):!1}tryRemovePhase(A){const s=this.phaseQueue.findIndex(A);return s>-1?(this.phaseQueue.splice(s,1),!0):!1}tryRemoveUnshiftedPhase(A){const s=this.phaseQueuePrepend.findIndex(A);return s>-1?(this.phaseQueuePrepend.splice(s,1),!0):!1}prependToPhase(A,s){Array.isArray(A)||(A=[A]);const R=this.phaseQueue.findIndex(n=>n instanceof s);return R!==-1?(this.phaseQueue.splice(R,0,...A),!0):(this.unshiftPhase(...A),!1)}appendToPhase(A,s){Array.isArray(A)||(A=[A]);const R=this.phaseQueue.findIndex(n=>n instanceof s);return R!==-1&&this.phaseQueue.length>R?(this.phaseQueue.splice(R+1,0,...A),!0):(this.unshiftPhase(...A),!1)}queueMessage(A,s,R,n,I){const r=new cP(A,s,R,n);I?this.pushPhase(r):this.unshiftPhase(r)}queueAbilityDisplay(A,s,R){this.unshiftPhase(R?new eU(A.getBattlerIndex(),s):new eL),this.clearPhaseQueueSplice()}hideAbilityBar(){this.abilityBar.isVisible()&&this.unshiftPhase(new eL)}populatePhaseQueue(){this.nextCommandPhaseQueue.length&&(this.phaseQueue.push(...this.nextCommandPhaseQueue),this.nextCommandPhaseQueue.splice(0,this.nextCommandPhaseQueue.length)),this.phaseQueue.push(new yP)}addMoney(A){this.money=Math.min(this.money+A,Number.MAX_SAFE_INTEGER),this.updateMoneyText(),this.animateMoneyChanged(!0),this.validateAchvs(Ki)}getWaveMoneyAmount(A){const s=this.currentBattle.waveIndex,R=Math.ceil(s/10)-1,n=Math.pow((R+1+(.75+((s-1)%10+1)/10))*100,1+.005*R)*A;return Math.floor(n/10)*10}addModifier(A,s,R,n,I,r){if(!A)return!1;let L=!1;const N=A.type.soundName;this.validateAchvs($C,A);const l=[];if(A instanceof $A){if(A.add(this.modifiers,!!n)){if(A instanceof GR){const C=this.getPokemonById(A.pokemonId);C&&(L=A.apply(C,!0))}R&&!this.sound.get(N)&&this.playSound(N)}else if(!n){const C=M9(A.type.tier);return this.queueMessage(u.t("battle:itemStackFull",{fullItemName:A.type.name,itemName:C.name}),void 0,!1,3e3),this.addModifier(C.newModifier(),s,R,!1,I)}for(const C of l)this.removeModifier(C);!s&&!n&&this.updateModifiers(!0,I)}else if(A instanceof si)if(R&&!this.sound.get(N)&&this.playSound(N),A instanceof KR){for(const C in this.party){const U=this.party[C],D=[];if(A instanceof ai)if(A.fainted)D.push(1);else{const M=new je(1);this.applyModifiers(wI,!0,M),D.push(M.value)}else A instanceof wN?D.push(this.getPokemonById(A.fusePokemonId)):A instanceof yN&&!Pe(r)&&D.push(r);if(A.shouldApply(U,...D)){const M=A.apply(U,...D);L||(L=M)}}this.party.map(C=>C.updateInfo(I))}else{const C=[this];if(A.shouldApply(...C)){const U=A.apply(...C);L||(L=U)}}return L}addEnemyModifier(A,s,R){return new Promise(n=>{const I=[];if(A.add(this.enemyModifiers,!1)){if(A instanceof GR){const r=this.getPokemonById(A.pokemonId);r&&A.apply(r,!0)}for(const r of I)this.removeModifier(r,!0)}s||this.updateModifiers(!1,R),n()})}tryTransferHeldItemModifier(A,s,R,n=1,I,r,L=!0){const N=A.pokemonId?A.getPokemon():null,l=new Pt(!1);if(N&&N.isPlayer()!==s.isPlayer()&&_t(MI,N,l),l.value)return!1;const C=A.clone();C.pokemonId=s.id;const U=this.findModifier(M=>M instanceof Ft&&M.matchType(A)&&M.pokemonId===s.id,s.isPlayer());if(U){const M=U.getMaxStackCount();if(U.stackCount>=M)return!1;const h=Math.min(n,A.stackCount,M-U.stackCount);A.stackCount-=h,C.stackCount=U.stackCount+h}else{const M=Math.min(n,A.stackCount);A.stackCount-=M,C.stackCount=M}if(!(A.stackCount===0)||!N||this.removeModifier(A,!N.isPlayer())){const M=o(()=>!U||this.removeModifier(U,!s.isPlayer())?s.isPlayer()?(this.addModifier(C,r,R,!1,I),N&&L&&cn(iO,N,!1),!0):(this.addEnemyModifier(C,r,I),N&&L&&cn(iO,N,!1),!0):!1,"addModifier");return N&&N.isPlayer()!==s.isPlayer()&&!r&&this.updateModifiers(N.isPlayer(),I),M(),!0}return!1}canTransferHeldItemModifier(A,s,R=1){const n=A.clone(),I=n.pokemonId?n.getPokemon():null,r=new Pt(!1);if(I&&I.isPlayer()!==s.isPlayer()&&_t(MI,I,r),r.value)return!1;const L=this.findModifier(l=>l instanceof Ft&&l.matchType(n)&&l.pokemonId===s.id,s.isPlayer());if(L){const l=L.getMaxStackCount();if(L.stackCount>=l)return!1;const C=Math.min(R,n.stackCount,l-L.stackCount);n.stackCount-=C}else{const l=Math.min(R,n.stackCount);n.stackCount-=l}return!(n.stackCount===0)||!I||this.hasModifier(A,!I.isPlayer())}removePartyMemberModifiers(A){return new Promise(s=>{const R=this.getPlayerParty()[A].id,n=this.modifiers.filter(I=>I instanceof Ft&&I.pokemonId===R);for(const I of n)this.modifiers.splice(this.modifiers.indexOf(I),1);this.updateModifiers(),s()})}generateEnemyModifiers(A){return new Promise(s=>{if(this.currentBattle.battleSpec===DE.FINAL_BOSS)return s();const R=this.gameMode.getWaveForDifficulty(this.currentBattle.waveIndex),n=this.gameMode.isWaveFinal(this.currentBattle.waveIndex);let I=Math.ceil(R/10);n&&(I=Math.ceil(I*2.5));const r=this.getEnemyParty();if(this.currentBattle.trainer){const L=this.currentBattle.trainer.genModifiers(r);for(const N of L)this.addEnemyModifier(N,!0,!0)}r.forEach((L,N)=>{var l;if(A&&N<A.length&&A[N])for(const C of A[N]){let U;C.modifier instanceof GA?U=C.modifier.newModifier(L):(U=C.modifier,U.pokemonId=L.id),U.stackCount=C.stackCount??1,U.isTransferable=C.isTransferable??U.isTransferable,this.addEnemyModifier(U,!0)}else{const C=L.isBoss()||this.currentBattle.battleType===Ht.TRAINER&&!!((l=this.currentBattle.trainer)!=null&&l.config.isBoss);let U=32;C&&(U/=2),n&&(U/=8);let D=0;for(let M=0;M<I;M++)He(this.gameMode.getEnemyModifierChance(C))||D++;C&&(D=Math.max(D,Math.floor(I/2))),U9(R,D,[L],this.currentBattle.battleType===Ht.TRAINER?yE.TRAINER:yE.WILD,U).map(M=>M.newModifier(L).add(this.enemyModifiers,!1))}return!0}),this.updateModifiers(!1),s()})}clearEnemyModifiers(){const A=this.enemyModifiers.filter(s=>s instanceof $A);for(const s of A)this.enemyModifiers.splice(this.enemyModifiers.indexOf(s),1);this.updateModifiers(!1),this.updateUIPositions()}clearEnemyHeldItemModifiers(A){const s=this.enemyModifiers.filter(R=>R instanceof Ft&&(!A||R.getPokemon()===A));for(const R of s)this.enemyModifiers.splice(this.enemyModifiers.indexOf(R),1);this.updateModifiers(!1),this.updateUIPositions()}setModifiersVisible(A){[this.modifierBar,this.enemyModifierBar].map(s=>s.setVisible(A))}updateModifiers(A=!0,s){const R=A?this.modifiers:this.enemyModifiers;for(let I=0;I<R.length;I++){const r=R[I];r instanceof Ft&&!this.getPokemonById(r.pokemonId)&&R.splice(I--,1)}for(const I of R)I instanceof $A&&(I.virtualStackCount=0);const n=R.slice(0);for(const I of n)I.getStackCount()||R.splice(R.indexOf(I),1);this.updatePartyForModifiers(A?this.getPlayerParty():this.getEnemyParty(),s),(A?this.modifierBar:this.enemyModifierBar).updateModifiers(R),A||this.updateUIPositions()}updatePartyForModifiers(A,s){return new Promise(R=>{Promise.allSettled(A.map(n=>(n.calculateStats(),n.updateInfo(s)))).then(()=>R())})}hasModifier(A,s=!1){return(s?this.enemyModifiers:this.modifiers).indexOf(A)>-1}removeModifier(A,s=!1){const R=s?this.enemyModifiers:this.modifiers,n=R.indexOf(A);if(n>-1){if(R.splice(n,1),A instanceof GR){const I=this.getPokemonById(A.pokemonId);I&&A.apply(I,!1)}return!0}return!1}getModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(R=>R instanceof A)}findModifiers(A,s=!0){return(s?this.modifiers:this.enemyModifiers).filter(A)}findModifier(A,s=!0){return(s?this.modifiers:this.enemyModifiers).find(A)}applyShuffledModifiers(A,s=!0,...R){let n=(s?this.modifiers:this.enemyModifiers).filter(I=>I instanceof A&&I.shouldApply(...R));return this.executeWithSeedOffset(()=>{const I=o(r=>{if(r.length<1)return r;const L=He(r.length);return[r[L],...I(r.filter((N,l)=>l!==L))]},"shuffleModifiers");n=I(n)},this.currentBattle.turn<<4,this.waveSeed),this.applyModifiersInternal(n,s,R)}applyModifiers(A,s=!0,...R){const n=(s?this.modifiers:this.enemyModifiers).filter(I=>I instanceof A&&I.shouldApply(...R));return this.applyModifiersInternal(n,s,R)}applyModifiersInternal(A,s,R){const n=[];for(const I of A)I.apply(...R)&&(I.type.name,n.push(I));return n}applyModifier(A,s=!0,...R){const n=(s?this.modifiers:this.enemyModifiers).filter(I=>I instanceof A&&I.shouldApply(...R));for(const I of n)if(I.apply(...R))return I.type.name,I;return null}triggerPokemonFormChange(A,s,R=!1,n=!1){if(mR.hasOwnProperty(A.species.speciesId)){const I=mR[A.species.speciesId].filter(L=>L.findTrigger(s)&&L.canChange(A));let r;if(A.species.speciesId===e.NECROZMA&&I.length>1){const L=this.findModifiers(N=>N instanceof GR&&N.pokemonId===A.id).filter(N=>N.active).map(N=>N.formChangeItem);r=L.includes(_R.N_LUNARIZER)?I[0]:L.includes(_R.N_SOLARIZER)?I[1]:null}else r=I[0];if(r){let L;return A instanceof WE&&!r.quiet?L=new IP(A,r,n):L=new PP(A,r),A instanceof WE&&!r.quiet&&n?this.overridePhase(L):R?this.pushPhase(L):this.unshiftPhase(L),!0}}return!1}triggerPokemonBattleAnim(A,s,R,n=!1){const I=new _P(s,A,R);return n?this.pushPhase(I):this.unshiftPhase(I),!0}validateAchvs(A,...s){const R=Object.values(ht).filter(n=>n instanceof A);for(const n of R)this.validateAchv(n,s)}validateAchv(A,s){return(!this.gameData.achvUnlocks.hasOwnProperty(A.id)||xe.ACHIEVEMENTS_REUNLOCK_OVERRIDE)&&A.validate(s)?(this.gameData.achvUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),Us.hasOwnProperty(A.id)&&this.validateVoucher(Us[A.id]),!0):!1}validateVoucher(A,s){return!this.gameData.voucherUnlocks.hasOwnProperty(A.id)&&A.validate(s)?(this.gameData.voucherUnlocks[A.id]=new Date().getTime(),this.ui.achvBar.showAchv(A),this.gameData.voucherCounts[A.voucherType]++,!0):!1}updateGameInfo(){var s,R;const A={playTime:this.sessionPlayTime??0,gameMode:this.currentBattle?this.gameMode.getName():"Title",biome:this.currentBattle?GL(this.arena.biomeType):"",wave:((s=this.currentBattle)==null?void 0:s.waveIndex)??0,party:this.party?this.party.map(n=>{var I;return{name:n.name,form:n.getFormKey(),types:n.getTypes().map(r=>i[r]),teraType:i[n.getTeraType()],isTerastallized:n.isTerastallized,level:n.level,currentHP:n.hp,maxHP:n.getMaxHp(),status:(I=n.status)!=null&&I.effect?re[n.status.effect]:""}}):[],modeChain:((R=this.ui)==null?void 0:R.getModeChain())??[]};window.gameInfo=A}getActiveKeys(){const A=[];let s=this.getPlayerParty();s=s.concat(this.getEnemyParty());for(const R of s)A.push(R.getSpriteKey(!0)),R instanceof WE&&A.push(R.getBattleSpriteKey(!0,!0)),A.push(R.species.getCryKey(R.formIndex)),R.fusionSpecies&&A.push(R.fusionSpecies.getCryKey(R.fusionFormIndex));return A}initFinalBossPhaseTwo(A){if(A instanceof Fs&&A.isBoss()&&!A.formIndex&&A.bossSegmentIndex<1){this.fadeOutBgm(Ot(2e3),!1),this.ui.showDialogue(Sk[DE.FINAL_BOSS].firstStageWin,A.species.name,void 0,()=>{const s=Z0(j.MINI_BLACK_HOLE).newModifier(A);s.setTransferrableFalse(),this.addEnemyModifier(s,!1,!0),A.generateAndPopulateMoveset(1),this.setFieldScale(.75),this.triggerPokemonFormChange(A,wC,!1),this.currentBattle.double=!0;const R=this.getPlayerParty().filter(n=>n.isAllowedInBattle());R.length>1&&(this.pushPhase(new mO(!0)),R[1].isOnField()||this.pushPhase(new ts(1))),this.shiftPhase()});return}this.shiftPhase()}applyPartyExp(A,s,R,n){var M;const I=n??this.currentBattle.playerParticipantIds,r=this.getPlayerParty(),L=this.findModifier(h=>h instanceof xN),N=this.findModifier(h=>h instanceof bN),l=this.findModifier(h=>h instanceof vN),C=r.filter(h=>h.hp),U=C.filter(h=>h.level<this.getMaxExpLevel()),D=[];if(R&&(A=Math.floor(A*this.currentBattle.waveIndex/5+1)),I.size>0){this.currentBattle.battleType===Ht.TRAINER||((M=this.currentBattle.mysteryEncounter)==null?void 0:M.encounterMode)===PE.TRAINER_BATTLE?A=Math.floor(A*1.5):this.currentBattle.isBattleMysteryEncounter()&&this.currentBattle.mysteryEncounter&&(A=Math.floor(A*this.currentBattle.mysteryEncounter.expMultiplier));for(const h of C){const _=h.id,d=I.has(_);if(d&&s){h.addFriendship(fZ);const B=h.getHeldItems().find(K=>K instanceof pI);B&&B.stackCount<B.getMaxStackCount()&&(B.stackCount++,this.updateModifiers(!0,!0),h.updateInfo())}if(!U.includes(h))continue;if(!d&&!L){D.push(0);continue}let f=0;d?(f+=1/I.size,I.size>1&&l&&(f+=l.getStackCount()*.2)):L&&(f+=L.getStackCount()*.2/I.size),h.pokerus&&(f*=1.5),xe.XP_MULTIPLIER_OVERRIDE!==null&&(f=xe.XP_MULTIPLIER_OVERRIDE);const H=new je(A*f);this.applyModifiers(VN,!0,h,H),D.push(Math.floor(H.value))}if(N){let h=0,_=0;U.forEach((B,K)=>{_+=D[K],h+=B.level});const d=Math.floor(h/U.length),f=[];U.forEach((B,K)=>{B.level<=d&&f.push(K)});const H=Math.floor(_/f.length);U.forEach((B,K)=>{D[K]=TE.Math.Linear(D[K],f.indexOf(K)>-1?H:0,.2*N.getStackCount())})}for(let h=0;h<U.length;h++){const _=D[h];if(_){const d=r.indexOf(U[h]);this.unshiftPhase(U[h].isOnField()?new wP(d,_):new VP(d,_))}}}}isMysteryEncounterValidForWave(A,s){const[R,n]=this.gameMode.getMysteryEncounterLegalWaves();return this.gameMode.hasMysteryEncounters&&A===Ht.WILD&&!this.gameMode.isBoss(s)&&s<n&&s>R}isWaveMysteryEncounter(A,s){const[R,n]=this.gameMode.getMysteryEncounterLegalWaves();if(this.isMysteryEncounterValidForWave(A,s)){const I=this.mysteryEncounterSaveData.encounterSpawnChance,r=this.mysteryEncounterSaveData.encounteredEvents,N=_$/(n-R)*(s-R)-r.length,l=I+Math.min(N*P$,Mc/2),C=Pe(xe.MYSTERY_ENCOUNTER_RATE_OVERRIDE)?l:xe.MYSTERY_ENCOUNTER_RATE_OVERRIDE;if(r.length===0||s-r[r.length-1].waveIndex>3||!Pe(xe.MYSTERY_ENCOUNTER_RATE_OVERRIDE)){let D=Mc;return this.executeWithSeedOffset(()=>{D=He(Mc)},s*3*1e3),D<C}}return!1}getMysteryEncounter(A,s){var _,d;let R;if(!Pe(xe.MYSTERY_ENCOUNTER_OVERRIDE)&&SA.hasOwnProperty(xe.MYSTERY_ENCOUNTER_OVERRIDE)){if(R=SA[xe.MYSTERY_ENCOUNTER_OVERRIDE],s)return R}else{if(s)return R=SA[A??-1],R;R=Pe(A)?null:SA[A]}if(!R&&((_=this.mysteryEncounterSaveData)!=null&&_.queuedEncounters)&&this.mysteryEncounterSaveData.queuedEncounters.length>0){let f=0;for(;f<this.mysteryEncounterSaveData.queuedEncounters.length&&R;){const H=this.mysteryEncounterSaveData.queuedEncounters[f],B=H.spawnPercent;He(100)<B&&(R=SA[H.type]),f++}}if(R)return R=new DS(R),R.populateDialogueTokensFromRequirements(),R;const n=[zt.COMMON,zt.GREAT,zt.ULTRA,zt.ROGUE];for(const f of this.mysteryEncounterSaveData.encounteredEvents)f.tier===zt.COMMON?n[0]=n[0]-6:f.tier===zt.GREAT&&(n[1]=n[1]-4);const I=n.reduce((f,H)=>f+H),r=He(I),L=I-n[0],N=I-n[0]-n[1],l=I-n[0]-n[1]-n[2];let C=r>L?zt.COMMON:r>N?zt.GREAT:r>l?zt.ULTRA:zt.ROGUE;Pe(xe.MYSTERY_ENCOUNTER_TIER_OVERRIDE)||(C=xe.MYSTERY_ENCOUNTER_TIER_OVERRIDE);let U=[];const D=this.mysteryEncounterSaveData.encounteredEvents.length>0?this.mysteryEncounterSaveData.encounteredEvents[this.mysteryEncounterSaveData.encounteredEvents.length-1].type:null,M=this.eventManager.getEventMysteryEncountersDisabled(),h=((d=Er.get(this.arena.biomeType))==null?void 0:d.filter(f=>!M.includes(f)))??[];for(;U.length===0&&C!==null;)U=h.filter(f=>{const H=SA[f];if(!H||this.eventManager.getMysteryEncounterTierForEvent(f,H.encounterTier)!==C)return!1;const B=H.disallowedGameModes;if(B&&B.length>0&&B.includes(this.gameMode.modeId))return!1;if(this.gameMode.modeId===hA.CHALLENGE){const K=H.disallowedChallenges;if(K&&K.length>0&&this.gameMode.challenges.some(Y=>K.includes(Y.id)))return!1}return!(!H.meetsRequirements()||D!==null&&f===D||this.mysteryEncounterSaveData.encounteredEvents.length>0&&H.maxAllowedEncounters&&H.maxAllowedEncounters>0&&this.mysteryEncounterSaveData.encounteredEvents.filter(K=>K.type===f).length>=H.maxAllowedEncounters)}).map(f=>SA[f]),C===zt.ROGUE?C=zt.ULTRA:C===zt.ULTRA?C=zt.GREAT:C===zt.GREAT?C=zt.COMMON:C=null;return U.length===0?SA[Et.MYSTERIOUS_CHALLENGERS]:(R=U[He(U.length)],R=new DS(R),R.populateDialogueTokensFromRequirements(),R)}};o(KF,"BattleScene");let xP=KF;const Aq=Object.freeze(Object.defineProperty({__proto__:null,bypassLogin:OR,default:xP,get starterColors(){return KE},startingWave:to},Symbol.toStringTag,{value:"Module"})),FF=class FF{constructor(A){const s=A instanceof sa?A:null;this.id=s?s.id:A.id,this.tier=s?s.tier:A.tier??Math.floor(this.id/eI),A.species===0?this.sourceType=A.gachaType??A.sourceType:this.sourceType=s?s.sourceType:A.sourceType,this.hatchWaves=s?s.hatchWaves:A.hatchWaves,this.timestamp=s?s.timestamp:A.timestamp,this.variantTier=s?s.variantTier:A.variantTier,this.isShiny=s?s.isShiny:A.isShiny,this.species=s?s.species:A.species,this.eggMoveIndex=s?s.eggMoveIndex:A.eggMoveIndex,this.overrideHiddenAbility=s?s.overrideHiddenAbility:A.overrideHiddenAbility}toEgg(){return this.species?new sa({id:this.id,tier:this.tier,sourceType:this.sourceType,hatchWaves:this.hatchWaves,timestamp:this.timestamp,variantTier:this.variantTier,isShiny:this.isShiny,species:this.species,eggMoveIndex:this.eggMoveIndex,overrideHiddenAbility:this.overrideHiddenAbility}):new sa({id:this.id,hatchWaves:this.hatchWaves,sourceType:this.sourceType,timestamp:this.timestamp,tier:Math.floor(this.id/eI)})}};o(FF,"EggData");let tU=FF;var $l={exports:{}},Jl={exports:{}};const PJ={},GJ=Object.freeze(Object.defineProperty({__proto__:null,default:PJ},Symbol.toStringTag,{value:"Module"})),dJ=J7(GJ);var HJ=Jl.exports,a8;function HA(){return a8||(a8=1,function(E,A){(function(s,R){E.exports=R()})(HJ,function(){var s=s||function(R,n){var I;if(typeof window<"u"&&window.crypto&&(I=window.crypto),typeof self<"u"&&self.crypto&&(I=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(I=globalThis.crypto),!I&&typeof window<"u"&&window.msCrypto&&(I=window.msCrypto),!I&&typeof gi<"u"&&gi.crypto&&(I=gi.crypto),!I&&typeof VL=="function")try{I=dJ}catch{}var r=o(function(){if(I){if(typeof I.getRandomValues=="function")try{return I.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof I.randomBytes=="function")try{return I.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},"cryptoSecureRandomInt"),L=Object.create||function(){function H(){}return o(H,"F"),function(B){var K;return H.prototype=B,K=new H,H.prototype=null,K}}(),N={},l=N.lib={},C=l.Base=function(){return{extend:o(function(H){var B=L(this);return H&&B.mixIn(H),(!B.hasOwnProperty("init")||this.init===B.init)&&(B.init=function(){B.$super.init.apply(this,arguments)}),B.init.prototype=B,B.$super=this,B},"extend"),create:o(function(){var H=this.extend();return H.init.apply(H,arguments),H},"create"),init:o(function(){},"init"),mixIn:o(function(H){for(var B in H)H.hasOwnProperty(B)&&(this[B]=H[B]);H.hasOwnProperty("toString")&&(this.toString=H.toString)},"mixIn"),clone:o(function(){return this.init.prototype.extend(this)},"clone")}}(),U=l.WordArray=C.extend({init:o(function(H,B){H=this.words=H||[],B!=n?this.sigBytes=B:this.sigBytes=H.length*4},"init"),toString:o(function(H){return(H||M).stringify(this)},"toString"),concat:o(function(H){var B=this.words,K=H.words,Y=this.sigBytes,v=H.sigBytes;if(this.clamp(),Y%4)for(var Z=0;Z<v;Z++){var z=K[Z>>>2]>>>24-Z%4*8&255;B[Y+Z>>>2]|=z<<24-(Y+Z)%4*8}else for(var q=0;q<v;q+=4)B[Y+q>>>2]=K[q>>>2];return this.sigBytes+=v,this},"concat"),clamp:o(function(){var H=this.words,B=this.sigBytes;H[B>>>2]&=4294967295<<32-B%4*8,H.length=R.ceil(B/4)},"clamp"),clone:o(function(){var H=C.clone.call(this);return H.words=this.words.slice(0),H},"clone"),random:o(function(H){for(var B=[],K=0;K<H;K+=4)B.push(r());return new U.init(B,H)},"random")}),D=N.enc={},M=D.Hex={stringify:o(function(H){for(var B=H.words,K=H.sigBytes,Y=[],v=0;v<K;v++){var Z=B[v>>>2]>>>24-v%4*8&255;Y.push((Z>>>4).toString(16)),Y.push((Z&15).toString(16))}return Y.join("")},"stringify"),parse:o(function(H){for(var B=H.length,K=[],Y=0;Y<B;Y+=2)K[Y>>>3]|=parseInt(H.substr(Y,2),16)<<24-Y%8*4;return new U.init(K,B/2)},"parse")},h=D.Latin1={stringify:o(function(H){for(var B=H.words,K=H.sigBytes,Y=[],v=0;v<K;v++){var Z=B[v>>>2]>>>24-v%4*8&255;Y.push(String.fromCharCode(Z))}return Y.join("")},"stringify"),parse:o(function(H){for(var B=H.length,K=[],Y=0;Y<B;Y++)K[Y>>>2]|=(H.charCodeAt(Y)&255)<<24-Y%4*8;return new U.init(K,B)},"parse")},_=D.Utf8={stringify:o(function(H){try{return decodeURIComponent(escape(h.stringify(H)))}catch{throw new Error("Malformed UTF-8 data")}},"stringify"),parse:o(function(H){return h.parse(unescape(encodeURIComponent(H)))},"parse")},d=l.BufferedBlockAlgorithm=C.extend({reset:o(function(){this._data=new U.init,this._nDataBytes=0},"reset"),_append:o(function(H){typeof H=="string"&&(H=_.parse(H)),this._data.concat(H),this._nDataBytes+=H.sigBytes},"_append"),_process:o(function(H){var B,K=this._data,Y=K.words,v=K.sigBytes,Z=this.blockSize,z=Z*4,q=v/z;H?q=R.ceil(q):q=R.max((q|0)-this._minBufferSize,0);var J=q*Z,Ae=R.min(J*4,v);if(J){for(var Q=0;Q<J;Q+=Z)this._doProcessBlock(Y,Q);B=Y.splice(0,J),K.sigBytes-=Ae}return new U.init(B,Ae)},"_process"),clone:o(function(){var H=C.clone.call(this);return H._data=this._data.clone(),H},"clone"),_minBufferSize:0});l.Hasher=d.extend({cfg:C.extend(),init:o(function(H){this.cfg=this.cfg.extend(H),this.reset()},"init"),reset:o(function(){d.reset.call(this),this._doReset()},"reset"),update:o(function(H){return this._append(H),this._process(),this},"update"),finalize:o(function(H){H&&this._append(H);var B=this._doFinalize();return B},"finalize"),blockSize:16,_createHelper:o(function(H){return function(B,K){return new H.init(K).finalize(B)}},"_createHelper"),_createHmacHelper:o(function(H){return function(B,K){return new f.HMAC.init(H,K).finalize(B)}},"_createHmacHelper")});var f=N.algo={};return N}(Math);return s})}(Jl)),Jl.exports}o(HA,"requireCore");var zl={exports:{}},fJ=zl.exports,i8;function j0(){return i8||(i8=1,function(E,A){(function(s,R){E.exports=R(HA())})(fJ,function(s){return function(R){var n=s,I=n.lib,r=I.Base,L=I.WordArray,N=n.x64={};N.Word=r.extend({init:o(function(l,C){this.high=l,this.low=C},"init")}),N.WordArray=r.extend({init:o(function(l,C){l=this.words=l||[],C!=R?this.sigBytes=C:this.sigBytes=l.length*8},"init"),toX32:o(function(){for(var l=this.words,C=l.length,U=[],D=0;D<C;D++){var M=l[D];U.push(M.high),U.push(M.low)}return L.create(U,this.sigBytes)},"toX32"),clone:o(function(){for(var l=r.clone.call(this),C=l.words=this.words.slice(0),U=C.length,D=0;D<U;D++)C[D]=C[D].clone();return l},"clone")})}(),s})}(zl)),zl.exports}o(j0,"requireX64Core");var jl={exports:{}},BJ=jl.exports,I8;function gJ(){return I8||(I8=1,function(E,A){(function(s,R){E.exports=R(HA())})(BJ,function(s){return function(){if(typeof ArrayBuffer=="function"){var R=s,n=R.lib,I=n.WordArray,r=I.init,L=I.init=function(N){if(N instanceof ArrayBuffer&&(N=new Uint8Array(N)),(N instanceof Int8Array||typeof Uint8ClampedArray<"u"&&N instanceof Uint8ClampedArray||N instanceof Int16Array||N instanceof Uint16Array||N instanceof Int32Array||N instanceof Uint32Array||N instanceof Float32Array||N instanceof Float64Array)&&(N=new Uint8Array(N.buffer,N.byteOffset,N.byteLength)),N instanceof Uint8Array){for(var l=N.byteLength,C=[],U=0;U<l;U++)C[U>>>2]|=N[U]<<24-U%4*8;r.call(this,C,l)}else r.apply(this,arguments)};L.prototype=I}}(),s.lib.WordArray})}(jl)),jl.exports}o(gJ,"requireLibTypedarrays");var ql={exports:{}},mJ=ql.exports,r8;function pJ(){return r8||(r8=1,function(E,A){(function(s,R){E.exports=R(HA())})(mJ,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=R.enc;r.Utf16=r.Utf16BE={stringify:o(function(N){for(var l=N.words,C=N.sigBytes,U=[],D=0;D<C;D+=2){var M=l[D>>>2]>>>16-D%4*8&65535;U.push(String.fromCharCode(M))}return U.join("")},"stringify"),parse:o(function(N){for(var l=N.length,C=[],U=0;U<l;U++)C[U>>>1]|=N.charCodeAt(U)<<16-U%2*16;return I.create(C,l*2)},"parse")},r.Utf16LE={stringify:o(function(N){for(var l=N.words,C=N.sigBytes,U=[],D=0;D<C;D+=2){var M=L(l[D>>>2]>>>16-D%4*8&65535);U.push(String.fromCharCode(M))}return U.join("")},"stringify"),parse:o(function(N){for(var l=N.length,C=[],U=0;U<l;U++)C[U>>>1]|=L(N.charCodeAt(U)<<16-U%2*16);return I.create(C,l*2)},"parse")};function L(N){return N<<8&4278255360|N>>>8&16711935}o(L,"swapEndian")}(),s.enc.Utf16})}(ql)),ql.exports}o(pJ,"requireEncUtf16");var eC={exports:{}},KJ=eC.exports,L8;function ZI(){return L8||(L8=1,function(E,A){(function(s,R){E.exports=R(HA())})(KJ,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=R.enc;r.Base64={stringify:o(function(N){var l=N.words,C=N.sigBytes,U=this._map;N.clamp();for(var D=[],M=0;M<C;M+=3)for(var h=l[M>>>2]>>>24-M%4*8&255,_=l[M+1>>>2]>>>24-(M+1)%4*8&255,d=l[M+2>>>2]>>>24-(M+2)%4*8&255,f=h<<16|_<<8|d,H=0;H<4&&M+H*.75<C;H++)D.push(U.charAt(f>>>6*(3-H)&63));var B=U.charAt(64);if(B)for(;D.length%4;)D.push(B);return D.join("")},"stringify"),parse:o(function(N){var l=N.length,C=this._map,U=this._reverseMap;if(!U){U=this._reverseMap=[];for(var D=0;D<C.length;D++)U[C.charCodeAt(D)]=D}var M=C.charAt(64);if(M){var h=N.indexOf(M);h!==-1&&(l=h)}return L(N,l,U)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function L(N,l,C){for(var U=[],D=0,M=0;M<l;M++)if(M%4){var h=C[N.charCodeAt(M-1)]<<M%4*2,_=C[N.charCodeAt(M)]>>>6-M%4*2,d=h|_;U[D>>>2]|=d<<24-D%4*8,D++}return I.create(U,D)}o(L,"parseLoop")}(),s.enc.Base64})}(eC)),eC.exports}o(ZI,"requireEncBase64");var tC={exports:{}},FJ=tC.exports,o8;function YJ(){return o8||(o8=1,function(E,A){(function(s,R){E.exports=R(HA())})(FJ,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=R.enc;r.Base64url={stringify:o(function(N,l){l===void 0&&(l=!0);var C=N.words,U=N.sigBytes,D=l?this._safe_map:this._map;N.clamp();for(var M=[],h=0;h<U;h+=3)for(var _=C[h>>>2]>>>24-h%4*8&255,d=C[h+1>>>2]>>>24-(h+1)%4*8&255,f=C[h+2>>>2]>>>24-(h+2)%4*8&255,H=_<<16|d<<8|f,B=0;B<4&&h+B*.75<U;B++)M.push(D.charAt(H>>>6*(3-B)&63));var K=D.charAt(64);if(K)for(;M.length%4;)M.push(K);return M.join("")},"stringify"),parse:o(function(N,l){l===void 0&&(l=!0);var C=N.length,U=l?this._safe_map:this._map,D=this._reverseMap;if(!D){D=this._reverseMap=[];for(var M=0;M<U.length;M++)D[U.charCodeAt(M)]=M}var h=U.charAt(64);if(h){var _=N.indexOf(h);_!==-1&&(C=_)}return L(N,C,D)},"parse"),_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function L(N,l,C){for(var U=[],D=0,M=0;M<l;M++)if(M%4){var h=C[N.charCodeAt(M-1)]<<M%4*2,_=C[N.charCodeAt(M)]>>>6-M%4*2,d=h|_;U[D>>>2]|=d<<24-D%4*8,D++}return I.create(U,D)}o(L,"parseLoop")}(),s.enc.Base64url})}(tC)),tC.exports}o(YJ,"requireEncBase64url");var AC={exports:{}},WJ=AC.exports,T8;function XI(){return T8||(T8=1,function(E,A){(function(s,R){E.exports=R(HA())})(WJ,function(s){return function(R){var n=s,I=n.lib,r=I.WordArray,L=I.Hasher,N=n.algo,l=[];(function(){for(var _=0;_<64;_++)l[_]=R.abs(R.sin(_+1))*4294967296|0})();var C=N.MD5=L.extend({_doReset:o(function(){this._hash=new r.init([1732584193,4023233417,2562383102,271733878])},"_doReset"),_doProcessBlock:o(function(_,d){for(var f=0;f<16;f++){var H=d+f,B=_[H];_[H]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360}var K=this._hash.words,Y=_[d+0],v=_[d+1],Z=_[d+2],z=_[d+3],q=_[d+4],J=_[d+5],Ae=_[d+6],Q=_[d+7],Re=_[d+8],W=_[d+9],ie=_[d+10],Be=_[d+11],he=_[d+12],ve=_[d+13],_e=_[d+14],Le=_[d+15],Ee=K[0],se=K[1],Ne=K[2],Ue=K[3];Ee=U(Ee,se,Ne,Ue,Y,7,l[0]),Ue=U(Ue,Ee,se,Ne,v,12,l[1]),Ne=U(Ne,Ue,Ee,se,Z,17,l[2]),se=U(se,Ne,Ue,Ee,z,22,l[3]),Ee=U(Ee,se,Ne,Ue,q,7,l[4]),Ue=U(Ue,Ee,se,Ne,J,12,l[5]),Ne=U(Ne,Ue,Ee,se,Ae,17,l[6]),se=U(se,Ne,Ue,Ee,Q,22,l[7]),Ee=U(Ee,se,Ne,Ue,Re,7,l[8]),Ue=U(Ue,Ee,se,Ne,W,12,l[9]),Ne=U(Ne,Ue,Ee,se,ie,17,l[10]),se=U(se,Ne,Ue,Ee,Be,22,l[11]),Ee=U(Ee,se,Ne,Ue,he,7,l[12]),Ue=U(Ue,Ee,se,Ne,ve,12,l[13]),Ne=U(Ne,Ue,Ee,se,_e,17,l[14]),se=U(se,Ne,Ue,Ee,Le,22,l[15]),Ee=D(Ee,se,Ne,Ue,v,5,l[16]),Ue=D(Ue,Ee,se,Ne,Ae,9,l[17]),Ne=D(Ne,Ue,Ee,se,Be,14,l[18]),se=D(se,Ne,Ue,Ee,Y,20,l[19]),Ee=D(Ee,se,Ne,Ue,J,5,l[20]),Ue=D(Ue,Ee,se,Ne,ie,9,l[21]),Ne=D(Ne,Ue,Ee,se,Le,14,l[22]),se=D(se,Ne,Ue,Ee,q,20,l[23]),Ee=D(Ee,se,Ne,Ue,W,5,l[24]),Ue=D(Ue,Ee,se,Ne,_e,9,l[25]),Ne=D(Ne,Ue,Ee,se,z,14,l[26]),se=D(se,Ne,Ue,Ee,Re,20,l[27]),Ee=D(Ee,se,Ne,Ue,ve,5,l[28]),Ue=D(Ue,Ee,se,Ne,Z,9,l[29]),Ne=D(Ne,Ue,Ee,se,Q,14,l[30]),se=D(se,Ne,Ue,Ee,he,20,l[31]),Ee=M(Ee,se,Ne,Ue,J,4,l[32]),Ue=M(Ue,Ee,se,Ne,Re,11,l[33]),Ne=M(Ne,Ue,Ee,se,Be,16,l[34]),se=M(se,Ne,Ue,Ee,_e,23,l[35]),Ee=M(Ee,se,Ne,Ue,v,4,l[36]),Ue=M(Ue,Ee,se,Ne,q,11,l[37]),Ne=M(Ne,Ue,Ee,se,Q,16,l[38]),se=M(se,Ne,Ue,Ee,ie,23,l[39]),Ee=M(Ee,se,Ne,Ue,ve,4,l[40]),Ue=M(Ue,Ee,se,Ne,Y,11,l[41]),Ne=M(Ne,Ue,Ee,se,z,16,l[42]),se=M(se,Ne,Ue,Ee,Ae,23,l[43]),Ee=M(Ee,se,Ne,Ue,W,4,l[44]),Ue=M(Ue,Ee,se,Ne,he,11,l[45]),Ne=M(Ne,Ue,Ee,se,Le,16,l[46]),se=M(se,Ne,Ue,Ee,Z,23,l[47]),Ee=h(Ee,se,Ne,Ue,Y,6,l[48]),Ue=h(Ue,Ee,se,Ne,Q,10,l[49]),Ne=h(Ne,Ue,Ee,se,_e,15,l[50]),se=h(se,Ne,Ue,Ee,J,21,l[51]),Ee=h(Ee,se,Ne,Ue,he,6,l[52]),Ue=h(Ue,Ee,se,Ne,z,10,l[53]),Ne=h(Ne,Ue,Ee,se,ie,15,l[54]),se=h(se,Ne,Ue,Ee,v,21,l[55]),Ee=h(Ee,se,Ne,Ue,Re,6,l[56]),Ue=h(Ue,Ee,se,Ne,Le,10,l[57]),Ne=h(Ne,Ue,Ee,se,Ae,15,l[58]),se=h(se,Ne,Ue,Ee,ve,21,l[59]),Ee=h(Ee,se,Ne,Ue,q,6,l[60]),Ue=h(Ue,Ee,se,Ne,Be,10,l[61]),Ne=h(Ne,Ue,Ee,se,Z,15,l[62]),se=h(se,Ne,Ue,Ee,W,21,l[63]),K[0]=K[0]+Ee|0,K[1]=K[1]+se|0,K[2]=K[2]+Ne|0,K[3]=K[3]+Ue|0},"_doProcessBlock"),_doFinalize:o(function(){var _=this._data,d=_.words,f=this._nDataBytes*8,H=_.sigBytes*8;d[H>>>5]|=128<<24-H%32;var B=R.floor(f/4294967296),K=f;d[(H+64>>>9<<4)+15]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,d[(H+64>>>9<<4)+14]=(K<<8|K>>>24)&16711935|(K<<24|K>>>8)&4278255360,_.sigBytes=(d.length+1)*4,this._process();for(var Y=this._hash,v=Y.words,Z=0;Z<4;Z++){var z=v[Z];v[Z]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360}return Y},"_doFinalize"),clone:o(function(){var _=L.clone.call(this);return _._hash=this._hash.clone(),_},"clone")});function U(_,d,f,H,B,K,Y){var v=_+(d&f|~d&H)+B+Y;return(v<<K|v>>>32-K)+d}o(U,"FF");function D(_,d,f,H,B,K,Y){var v=_+(d&H|f&~H)+B+Y;return(v<<K|v>>>32-K)+d}o(D,"GG");function M(_,d,f,H,B,K,Y){var v=_+(d^f^H)+B+Y;return(v<<K|v>>>32-K)+d}o(M,"HH");function h(_,d,f,H,B,K,Y){var v=_+(f^(d|~H))+B+Y;return(v<<K|v>>>32-K)+d}o(h,"II"),n.MD5=L._createHelper(C),n.HmacMD5=L._createHmacHelper(C)}(Math),s.MD5})}(AC)),AC.exports}o(XI,"requireMd5");var EC={exports:{}},yJ=EC.exports,S8;function E7(){return S8||(S8=1,function(E,A){(function(s,R){E.exports=R(HA())})(yJ,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=n.Hasher,L=R.algo,N=[],l=L.SHA1=r.extend({_doReset:o(function(){this._hash=new I.init([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:o(function(C,U){for(var D=this._hash.words,M=D[0],h=D[1],_=D[2],d=D[3],f=D[4],H=0;H<80;H++){if(H<16)N[H]=C[U+H]|0;else{var B=N[H-3]^N[H-8]^N[H-14]^N[H-16];N[H]=B<<1|B>>>31}var K=(M<<5|M>>>27)+f+N[H];H<20?K+=(h&_|~h&d)+1518500249:H<40?K+=(h^_^d)+1859775393:H<60?K+=(h&_|h&d|_&d)-1894007588:K+=(h^_^d)-899497514,f=d,d=_,_=h<<30|h>>>2,h=M,M=K}D[0]=D[0]+M|0,D[1]=D[1]+h|0,D[2]=D[2]+_|0,D[3]=D[3]+d|0,D[4]=D[4]+f|0},"_doProcessBlock"),_doFinalize:o(function(){var C=this._data,U=C.words,D=this._nDataBytes*8,M=C.sigBytes*8;return U[M>>>5]|=128<<24-M%32,U[(M+64>>>9<<4)+14]=Math.floor(D/4294967296),U[(M+64>>>9<<4)+15]=D,C.sigBytes=U.length*4,this._process(),this._hash},"_doFinalize"),clone:o(function(){var C=r.clone.call(this);return C._hash=this._hash.clone(),C},"clone")});R.SHA1=r._createHelper(l),R.HmacSHA1=r._createHmacHelper(l)}(),s.SHA1})}(EC)),EC.exports}o(E7,"requireSha1");var sC={exports:{}},wJ=sC.exports,N8;function wf(){return N8||(N8=1,function(E,A){(function(s,R){E.exports=R(HA())})(wJ,function(s){return function(R){var n=s,I=n.lib,r=I.WordArray,L=I.Hasher,N=n.algo,l=[],C=[];(function(){function M(f){for(var H=R.sqrt(f),B=2;B<=H;B++)if(!(f%B))return!1;return!0}o(M,"isPrime");function h(f){return(f-(f|0))*4294967296|0}o(h,"getFractionalBits");for(var _=2,d=0;d<64;)M(_)&&(d<8&&(l[d]=h(R.pow(_,1/2))),C[d]=h(R.pow(_,1/3)),d++),_++})();var U=[],D=N.SHA256=L.extend({_doReset:o(function(){this._hash=new r.init(l.slice(0))},"_doReset"),_doProcessBlock:o(function(M,h){for(var _=this._hash.words,d=_[0],f=_[1],H=_[2],B=_[3],K=_[4],Y=_[5],v=_[6],Z=_[7],z=0;z<64;z++){if(z<16)U[z]=M[h+z]|0;else{var q=U[z-15],J=(q<<25|q>>>7)^(q<<14|q>>>18)^q>>>3,Ae=U[z-2],Q=(Ae<<15|Ae>>>17)^(Ae<<13|Ae>>>19)^Ae>>>10;U[z]=J+U[z-7]+Q+U[z-16]}var Re=K&Y^~K&v,W=d&f^d&H^f&H,ie=(d<<30|d>>>2)^(d<<19|d>>>13)^(d<<10|d>>>22),Be=(K<<26|K>>>6)^(K<<21|K>>>11)^(K<<7|K>>>25),he=Z+Be+Re+C[z]+U[z],ve=ie+W;Z=v,v=Y,Y=K,K=B+he|0,B=H,H=f,f=d,d=he+ve|0}_[0]=_[0]+d|0,_[1]=_[1]+f|0,_[2]=_[2]+H|0,_[3]=_[3]+B|0,_[4]=_[4]+K|0,_[5]=_[5]+Y|0,_[6]=_[6]+v|0,_[7]=_[7]+Z|0},"_doProcessBlock"),_doFinalize:o(function(){var M=this._data,h=M.words,_=this._nDataBytes*8,d=M.sigBytes*8;return h[d>>>5]|=128<<24-d%32,h[(d+64>>>9<<4)+14]=R.floor(_/4294967296),h[(d+64>>>9<<4)+15]=_,M.sigBytes=h.length*4,this._process(),this._hash},"_doFinalize"),clone:o(function(){var M=L.clone.call(this);return M._hash=this._hash.clone(),M},"clone")});n.SHA256=L._createHelper(D),n.HmacSHA256=L._createHmacHelper(D)}(Math),s.SHA256})}(sC)),sC.exports}o(wf,"requireSha256");var RC={exports:{}},vJ=RC.exports,l8;function VJ(){return l8||(l8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),wf())})(vJ,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=R.algo,L=r.SHA256,N=r.SHA224=L.extend({_doReset:o(function(){this._hash=new I.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},"_doReset"),_doFinalize:o(function(){var l=L._doFinalize.call(this);return l.sigBytes-=4,l},"_doFinalize")});R.SHA224=L._createHelper(N),R.HmacSHA224=L._createHmacHelper(N)}(),s.SHA224})}(RC)),RC.exports}o(VJ,"requireSha224");var OC={exports:{}},xJ=OC.exports,C8;function s7(){return C8||(C8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),j0())})(xJ,function(s){return function(){var R=s,n=R.lib,I=n.Hasher,r=R.x64,L=r.Word,N=r.WordArray,l=R.algo;function C(){return L.create.apply(L,arguments)}o(C,"X64Word_create");var U=[C(1116352408,3609767458),C(1899447441,602891725),C(3049323471,3964484399),C(3921009573,2173295548),C(961987163,4081628472),C(1508970993,3053834265),C(2453635748,2937671579),C(2870763221,3664609560),C(3624381080,2734883394),C(310598401,1164996542),C(607225278,1323610764),C(1426881987,3590304994),C(1925078388,4068182383),C(2162078206,991336113),C(2614888103,633803317),C(3248222580,3479774868),C(3835390401,2666613458),C(4022224774,944711139),C(264347078,2341262773),C(604807628,2007800933),C(770255983,1495990901),C(1249150122,1856431235),C(1555081692,3175218132),C(1996064986,2198950837),C(2554220882,3999719339),C(2821834349,766784016),C(2952996808,2566594879),C(3210313671,3203337956),C(3336571891,1034457026),C(3584528711,2466948901),C(113926993,3758326383),C(338241895,168717936),C(666307205,1188179964),C(773529912,1546045734),C(1294757372,1522805485),C(1396182291,2643833823),C(1695183700,2343527390),C(1986661051,1014477480),C(2177026350,1206759142),C(2456956037,344077627),C(2730485921,1290863460),C(2820302411,3158454273),C(3259730800,3505952657),C(3345764771,106217008),C(3516065817,3606008344),C(3600352804,1432725776),C(4094571909,1467031594),C(275423344,851169720),C(430227734,3100823752),C(506948616,1363258195),C(659060556,3750685593),C(883997877,3785050280),C(958139571,3318307427),C(1322822218,3812723403),C(1537002063,2003034995),C(1747873779,3602036899),C(1955562222,1575990012),C(2024104815,1125592928),C(2227730452,2716904306),C(2361852424,442776044),C(2428436474,593698344),C(2756734187,3733110249),C(3204031479,2999351573),C(3329325298,3815920427),C(3391569614,3928383900),C(3515267271,566280711),C(3940187606,3454069534),C(4118630271,4000239992),C(116418474,1914138554),C(174292421,2731055270),C(289380356,3203993006),C(460393269,320620315),C(685471733,587496836),C(852142971,1086792851),C(1017036298,365543100),C(1126000580,2618297676),C(1288033470,3409855158),C(1501505948,4234509866),C(1607167915,987167468),C(1816402316,1246189591)],D=[];(function(){for(var h=0;h<80;h++)D[h]=C()})();var M=l.SHA512=I.extend({_doReset:o(function(){this._hash=new N.init([new L.init(1779033703,4089235720),new L.init(3144134277,2227873595),new L.init(1013904242,4271175723),new L.init(2773480762,1595750129),new L.init(1359893119,2917565137),new L.init(2600822924,725511199),new L.init(528734635,4215389547),new L.init(1541459225,327033209)])},"_doReset"),_doProcessBlock:o(function(h,_){for(var d=this._hash.words,f=d[0],H=d[1],B=d[2],K=d[3],Y=d[4],v=d[5],Z=d[6],z=d[7],q=f.high,J=f.low,Ae=H.high,Q=H.low,Re=B.high,W=B.low,ie=K.high,Be=K.low,he=Y.high,ve=Y.low,_e=v.high,Le=v.low,Ee=Z.high,se=Z.low,Ne=z.high,Ue=z.low,me=q,st=J,Ct=Ae,tt=Q,ft=Re,Xt=W,pt=ie,fA=Be,cA=he,x=ve,be=_e,Ye=Le,le=Ee,Te=se,fe=Ne,qe=Ue,Je=0;Je<80;Je++){var pe,it,Bt=D[Je];if(Je<16)it=Bt.high=h[_+Je*2]|0,pe=Bt.low=h[_+Je*2+1]|0;else{var lt=D[Je-15],xt=lt.high,BA=lt.low,NA=(xt>>>1|BA<<31)^(xt>>>8|BA<<24)^xt>>>7,Ws=(BA>>>1|xt<<31)^(BA>>>8|xt<<24)^(BA>>>7|xt<<25),Ln=D[Je-2],Is=Ln.high,qR=Ln.low,CE=(Is>>>19|qR<<13)^(Is<<3|qR>>>29)^Is>>>6,yn=(qR>>>19|Is<<13)^(qR<<3|Is>>>29)^(qR>>>6|Is<<26),wn=D[Je-7],eO=wn.high,QI=wn.low,Ni=D[Je-16],$I=Ni.high,li=Ni.low;pe=Ws+QI,it=NA+eO+(pe>>>0<Ws>>>0?1:0),pe=pe+yn,it=it+CE+(pe>>>0<yn>>>0?1:0),pe=pe+li,it=it+$I+(pe>>>0<li>>>0?1:0),Bt.high=it,Bt.low=pe}var Ci=cA&be^~cA&le,WO=x&Ye^~x&Te,et=me&Ct^me&ft^Ct&ft,yO=st&tt^st&Xt^tt&Xt,G7=(me>>>28|st<<4)^(me<<30|st>>>2)^(me<<25|st>>>7),Wb=(st>>>28|me<<4)^(st<<30|me>>>2)^(st<<25|me>>>7),d7=(cA>>>14|x<<18)^(cA>>>18|x<<14)^(cA<<23|x>>>9),H7=(x>>>14|cA<<18)^(x>>>18|cA<<14)^(x<<23|cA>>>9),yb=U[Je],f7=yb.high,wb=yb.low,tO=qe+H7,Sa=fe+d7+(tO>>>0<qe>>>0?1:0),tO=tO+WO,Sa=Sa+Ci+(tO>>>0<WO>>>0?1:0),tO=tO+wb,Sa=Sa+f7+(tO>>>0<wb>>>0?1:0),tO=tO+pe,Sa=Sa+it+(tO>>>0<pe>>>0?1:0),vb=Wb+yO,B7=G7+et+(vb>>>0<Wb>>>0?1:0);fe=le,qe=Te,le=be,Te=Ye,be=cA,Ye=x,x=fA+tO|0,cA=pt+Sa+(x>>>0<fA>>>0?1:0)|0,pt=ft,fA=Xt,ft=Ct,Xt=tt,Ct=me,tt=st,st=tO+vb|0,me=Sa+B7+(st>>>0<tO>>>0?1:0)|0}J=f.low=J+st,f.high=q+me+(J>>>0<st>>>0?1:0),Q=H.low=Q+tt,H.high=Ae+Ct+(Q>>>0<tt>>>0?1:0),W=B.low=W+Xt,B.high=Re+ft+(W>>>0<Xt>>>0?1:0),Be=K.low=Be+fA,K.high=ie+pt+(Be>>>0<fA>>>0?1:0),ve=Y.low=ve+x,Y.high=he+cA+(ve>>>0<x>>>0?1:0),Le=v.low=Le+Ye,v.high=_e+be+(Le>>>0<Ye>>>0?1:0),se=Z.low=se+Te,Z.high=Ee+le+(se>>>0<Te>>>0?1:0),Ue=z.low=Ue+qe,z.high=Ne+fe+(Ue>>>0<qe>>>0?1:0)},"_doProcessBlock"),_doFinalize:o(function(){var h=this._data,_=h.words,d=this._nDataBytes*8,f=h.sigBytes*8;_[f>>>5]|=128<<24-f%32,_[(f+128>>>10<<5)+30]=Math.floor(d/4294967296),_[(f+128>>>10<<5)+31]=d,h.sigBytes=_.length*4,this._process();var H=this._hash.toX32();return H},"_doFinalize"),clone:o(function(){var h=I.clone.call(this);return h._hash=this._hash.clone(),h},"clone"),blockSize:1024/32});R.SHA512=I._createHelper(M),R.HmacSHA512=I._createHmacHelper(M)}(),s.SHA512})}(OC)),OC.exports}o(s7,"requireSha512");var nC={exports:{}},bJ=nC.exports,u8;function kJ(){return u8||(u8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),j0(),s7())})(bJ,function(s){return function(){var R=s,n=R.x64,I=n.Word,r=n.WordArray,L=R.algo,N=L.SHA512,l=L.SHA384=N.extend({_doReset:o(function(){this._hash=new r.init([new I.init(3418070365,3238371032),new I.init(1654270250,914150663),new I.init(2438529370,812702999),new I.init(355462360,4144912697),new I.init(1731405415,4290775857),new I.init(2394180231,1750603025),new I.init(3675008525,1694076839),new I.init(1203062813,3204075428)])},"_doReset"),_doFinalize:o(function(){var C=N._doFinalize.call(this);return C.sigBytes-=16,C},"_doFinalize")});R.SHA384=N._createHelper(l),R.HmacSHA384=N._createHmacHelper(l)}(),s.SHA384})}(nC)),nC.exports}o(kJ,"requireSha384");var aC={exports:{}},ZJ=aC.exports,U8;function XJ(){return U8||(U8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),j0())})(ZJ,function(s){return function(R){var n=s,I=n.lib,r=I.WordArray,L=I.Hasher,N=n.x64,l=N.Word,C=n.algo,U=[],D=[],M=[];(function(){for(var d=1,f=0,H=0;H<24;H++){U[d+5*f]=(H+1)*(H+2)/2%64;var B=f%5,K=(2*d+3*f)%5;d=B,f=K}for(var d=0;d<5;d++)for(var f=0;f<5;f++)D[d+5*f]=f+(2*d+3*f)%5*5;for(var Y=1,v=0;v<24;v++){for(var Z=0,z=0,q=0;q<7;q++){if(Y&1){var J=(1<<q)-1;J<32?z^=1<<J:Z^=1<<J-32}Y&128?Y=Y<<1^113:Y<<=1}M[v]=l.create(Z,z)}})();var h=[];(function(){for(var d=0;d<25;d++)h[d]=l.create()})();var _=C.SHA3=L.extend({cfg:L.cfg.extend({outputLength:512}),_doReset:o(function(){for(var d=this._state=[],f=0;f<25;f++)d[f]=new l.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},"_doReset"),_doProcessBlock:o(function(d,f){for(var H=this._state,B=this.blockSize/2,K=0;K<B;K++){var Y=d[f+2*K],v=d[f+2*K+1];Y=(Y<<8|Y>>>24)&16711935|(Y<<24|Y>>>8)&4278255360,v=(v<<8|v>>>24)&16711935|(v<<24|v>>>8)&4278255360;var Z=H[K];Z.high^=v,Z.low^=Y}for(var z=0;z<24;z++){for(var q=0;q<5;q++){for(var J=0,Ae=0,Q=0;Q<5;Q++){var Z=H[q+5*Q];J^=Z.high,Ae^=Z.low}var Re=h[q];Re.high=J,Re.low=Ae}for(var q=0;q<5;q++)for(var W=h[(q+4)%5],ie=h[(q+1)%5],Be=ie.high,he=ie.low,J=W.high^(Be<<1|he>>>31),Ae=W.low^(he<<1|Be>>>31),Q=0;Q<5;Q++){var Z=H[q+5*Q];Z.high^=J,Z.low^=Ae}for(var ve=1;ve<25;ve++){var J,Ae,Z=H[ve],_e=Z.high,Le=Z.low,Ee=U[ve];Ee<32?(J=_e<<Ee|Le>>>32-Ee,Ae=Le<<Ee|_e>>>32-Ee):(J=Le<<Ee-32|_e>>>64-Ee,Ae=_e<<Ee-32|Le>>>64-Ee);var se=h[D[ve]];se.high=J,se.low=Ae}var Ne=h[0],Ue=H[0];Ne.high=Ue.high,Ne.low=Ue.low;for(var q=0;q<5;q++)for(var Q=0;Q<5;Q++){var ve=q+5*Q,Z=H[ve],me=h[ve],st=h[(q+1)%5+5*Q],Ct=h[(q+2)%5+5*Q];Z.high=me.high^~st.high&Ct.high,Z.low=me.low^~st.low&Ct.low}var Z=H[0],tt=M[z];Z.high^=tt.high,Z.low^=tt.low}},"_doProcessBlock"),_doFinalize:o(function(){var d=this._data,f=d.words;this._nDataBytes*8;var H=d.sigBytes*8,B=this.blockSize*32;f[H>>>5]|=1<<24-H%32,f[(R.ceil((H+1)/B)*B>>>5)-1]|=128,d.sigBytes=f.length*4,this._process();for(var K=this._state,Y=this.cfg.outputLength/8,v=Y/8,Z=[],z=0;z<v;z++){var q=K[z],J=q.high,Ae=q.low;J=(J<<8|J>>>24)&16711935|(J<<24|J>>>8)&4278255360,Ae=(Ae<<8|Ae>>>24)&16711935|(Ae<<24|Ae>>>8)&4278255360,Z.push(Ae),Z.push(J)}return new r.init(Z,Y)},"_doFinalize"),clone:o(function(){for(var d=L.clone.call(this),f=d._state=this._state.slice(0),H=0;H<25;H++)f[H]=f[H].clone();return d},"clone")});n.SHA3=L._createHelper(_),n.HmacSHA3=L._createHmacHelper(_)}(Math),s.SHA3})}(aC)),aC.exports}o(XJ,"requireSha3");var iC={exports:{}},QJ=iC.exports,D8;function $J(){return D8||(D8=1,function(E,A){(function(s,R){E.exports=R(HA())})(QJ,function(s){/** @preserve
			(c) 2012 by Cédric Mesnil. All rights reserved.

			Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

			    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
			    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

			THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
			*/return function(R){var n=s,I=n.lib,r=I.WordArray,L=I.Hasher,N=n.algo,l=r.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),C=r.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),U=r.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),D=r.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),M=r.create([0,1518500249,1859775393,2400959708,2840853838]),h=r.create([1352829926,1548603684,1836072691,2053994217,0]),_=N.RIPEMD160=L.extend({_doReset:o(function(){this._hash=r.create([1732584193,4023233417,2562383102,271733878,3285377520])},"_doReset"),_doProcessBlock:o(function(v,Z){for(var z=0;z<16;z++){var q=Z+z,J=v[q];v[q]=(J<<8|J>>>24)&16711935|(J<<24|J>>>8)&4278255360}var Ae=this._hash.words,Q=M.words,Re=h.words,W=l.words,ie=C.words,Be=U.words,he=D.words,ve,_e,Le,Ee,se,Ne,Ue,me,st,Ct;Ne=ve=Ae[0],Ue=_e=Ae[1],me=Le=Ae[2],st=Ee=Ae[3],Ct=se=Ae[4];for(var tt,z=0;z<80;z+=1)tt=ve+v[Z+W[z]]|0,z<16?tt+=d(_e,Le,Ee)+Q[0]:z<32?tt+=f(_e,Le,Ee)+Q[1]:z<48?tt+=H(_e,Le,Ee)+Q[2]:z<64?tt+=B(_e,Le,Ee)+Q[3]:tt+=K(_e,Le,Ee)+Q[4],tt=tt|0,tt=Y(tt,Be[z]),tt=tt+se|0,ve=se,se=Ee,Ee=Y(Le,10),Le=_e,_e=tt,tt=Ne+v[Z+ie[z]]|0,z<16?tt+=K(Ue,me,st)+Re[0]:z<32?tt+=B(Ue,me,st)+Re[1]:z<48?tt+=H(Ue,me,st)+Re[2]:z<64?tt+=f(Ue,me,st)+Re[3]:tt+=d(Ue,me,st)+Re[4],tt=tt|0,tt=Y(tt,he[z]),tt=tt+Ct|0,Ne=Ct,Ct=st,st=Y(me,10),me=Ue,Ue=tt;tt=Ae[1]+Le+st|0,Ae[1]=Ae[2]+Ee+Ct|0,Ae[2]=Ae[3]+se+Ne|0,Ae[3]=Ae[4]+ve+Ue|0,Ae[4]=Ae[0]+_e+me|0,Ae[0]=tt},"_doProcessBlock"),_doFinalize:o(function(){var v=this._data,Z=v.words,z=this._nDataBytes*8,q=v.sigBytes*8;Z[q>>>5]|=128<<24-q%32,Z[(q+64>>>9<<4)+14]=(z<<8|z>>>24)&16711935|(z<<24|z>>>8)&4278255360,v.sigBytes=(Z.length+1)*4,this._process();for(var J=this._hash,Ae=J.words,Q=0;Q<5;Q++){var Re=Ae[Q];Ae[Q]=(Re<<8|Re>>>24)&16711935|(Re<<24|Re>>>8)&4278255360}return J},"_doFinalize"),clone:o(function(){var v=L.clone.call(this);return v._hash=this._hash.clone(),v},"clone")});function d(v,Z,z){return v^Z^z}o(d,"f1");function f(v,Z,z){return v&Z|~v&z}o(f,"f2");function H(v,Z,z){return(v|~Z)^z}o(H,"f3");function B(v,Z,z){return v&z|Z&~z}o(B,"f4");function K(v,Z,z){return v^(Z|~z)}o(K,"f5");function Y(v,Z){return v<<Z|v>>>32-Z}o(Y,"rotl"),n.RIPEMD160=L._createHelper(_),n.HmacRIPEMD160=L._createHmacHelper(_)}(),s.RIPEMD160})}(iC)),iC.exports}o($J,"requireRipemd160");var IC={exports:{}},JJ=IC.exports,M8;function vf(){return M8||(M8=1,function(E,A){(function(s,R){E.exports=R(HA())})(JJ,function(s){(function(){var R=s,n=R.lib,I=n.Base,r=R.enc,L=r.Utf8,N=R.algo;N.HMAC=I.extend({init:o(function(l,C){l=this._hasher=new l.init,typeof C=="string"&&(C=L.parse(C));var U=l.blockSize,D=U*4;C.sigBytes>D&&(C=l.finalize(C)),C.clamp();for(var M=this._oKey=C.clone(),h=this._iKey=C.clone(),_=M.words,d=h.words,f=0;f<U;f++)_[f]^=1549556828,d[f]^=909522486;M.sigBytes=h.sigBytes=D,this.reset()},"init"),reset:o(function(){var l=this._hasher;l.reset(),l.update(this._iKey)},"reset"),update:o(function(l){return this._hasher.update(l),this},"update"),finalize:o(function(l){var C=this._hasher,U=C.finalize(l);C.reset();var D=C.finalize(this._oKey.clone().concat(U));return D},"finalize")})})()})}(IC)),IC.exports}o(vf,"requireHmac");var rC={exports:{}},zJ=rC.exports,c8;function jJ(){return c8||(c8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),wf(),vf())})(zJ,function(s){return function(){var R=s,n=R.lib,I=n.Base,r=n.WordArray,L=R.algo,N=L.SHA256,l=L.HMAC,C=L.PBKDF2=I.extend({cfg:I.extend({keySize:128/32,hasher:N,iterations:25e4}),init:o(function(U){this.cfg=this.cfg.extend(U)},"init"),compute:o(function(U,D){for(var M=this.cfg,h=l.create(M.hasher,U),_=r.create(),d=r.create([1]),f=_.words,H=d.words,B=M.keySize,K=M.iterations;f.length<B;){var Y=h.update(D).finalize(d);h.reset();for(var v=Y.words,Z=v.length,z=Y,q=1;q<K;q++){z=h.finalize(z),h.reset();for(var J=z.words,Ae=0;Ae<Z;Ae++)v[Ae]^=J[Ae]}_.concat(Y),H[0]++}return _.sigBytes=B*4,_},"compute")});R.PBKDF2=function(U,D,M){return C.create(M).compute(U,D)}}(),s.PBKDF2})}(rC)),rC.exports}o(jJ,"requirePbkdf2");var LC={exports:{}},qJ=LC.exports,h8;function Si(){return h8||(h8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),E7(),vf())})(qJ,function(s){return function(){var R=s,n=R.lib,I=n.Base,r=n.WordArray,L=R.algo,N=L.MD5,l=L.EvpKDF=I.extend({cfg:I.extend({keySize:128/32,hasher:N,iterations:1}),init:o(function(C){this.cfg=this.cfg.extend(C)},"init"),compute:o(function(C,U){for(var D,M=this.cfg,h=M.hasher.create(),_=r.create(),d=_.words,f=M.keySize,H=M.iterations;d.length<f;){D&&h.update(D),D=h.update(C).finalize(U),h.reset();for(var B=1;B<H;B++)D=h.finalize(D),h.reset();_.concat(D)}return _.sigBytes=f*4,_},"compute")});R.EvpKDF=function(C,U,D){return l.create(D).compute(C,U)}}(),s.EvpKDF})}(LC)),LC.exports}o(Si,"requireEvpkdf");var oC={exports:{}},ez=oC.exports,_8;function Ys(){return _8||(_8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Si())})(ez,function(s){s.lib.Cipher||function(R){var n=s,I=n.lib,r=I.Base,L=I.WordArray,N=I.BufferedBlockAlgorithm,l=n.enc;l.Utf8;var C=l.Base64,U=n.algo,D=U.EvpKDF,M=I.Cipher=N.extend({cfg:r.extend(),createEncryptor:o(function(J,Ae){return this.create(this._ENC_XFORM_MODE,J,Ae)},"createEncryptor"),createDecryptor:o(function(J,Ae){return this.create(this._DEC_XFORM_MODE,J,Ae)},"createDecryptor"),init:o(function(J,Ae,Q){this.cfg=this.cfg.extend(Q),this._xformMode=J,this._key=Ae,this.reset()},"init"),reset:o(function(){N.reset.call(this),this._doReset()},"reset"),process:o(function(J){return this._append(J),this._process()},"process"),finalize:o(function(J){J&&this._append(J);var Ae=this._doFinalize();return Ae},"finalize"),keySize:128/32,ivSize:128/32,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function J(Ae){return typeof Ae=="string"?q:v}return o(J,"selectCipherStrategy"),function(Ae){return{encrypt:o(function(Q,Re,W){return J(Re).encrypt(Ae,Q,Re,W)},"encrypt"),decrypt:o(function(Q,Re,W){return J(Re).decrypt(Ae,Q,Re,W)},"decrypt")}}}()});I.StreamCipher=M.extend({_doFinalize:o(function(){var J=this._process(!0);return J},"_doFinalize"),blockSize:1});var h=n.mode={},_=I.BlockCipherMode=r.extend({createEncryptor:o(function(J,Ae){return this.Encryptor.create(J,Ae)},"createEncryptor"),createDecryptor:o(function(J,Ae){return this.Decryptor.create(J,Ae)},"createDecryptor"),init:o(function(J,Ae){this._cipher=J,this._iv=Ae},"init")}),d=h.CBC=function(){var J=_.extend();J.Encryptor=J.extend({processBlock:o(function(Q,Re){var W=this._cipher,ie=W.blockSize;Ae.call(this,Q,Re,ie),W.encryptBlock(Q,Re),this._prevBlock=Q.slice(Re,Re+ie)},"processBlock")}),J.Decryptor=J.extend({processBlock:o(function(Q,Re){var W=this._cipher,ie=W.blockSize,Be=Q.slice(Re,Re+ie);W.decryptBlock(Q,Re),Ae.call(this,Q,Re,ie),this._prevBlock=Be},"processBlock")});function Ae(Q,Re,W){var ie,Be=this._iv;Be?(ie=Be,this._iv=R):ie=this._prevBlock;for(var he=0;he<W;he++)Q[Re+he]^=ie[he]}return o(Ae,"xorBlock"),J}(),f=n.pad={},H=f.Pkcs7={pad:o(function(J,Ae){for(var Q=Ae*4,Re=Q-J.sigBytes%Q,W=Re<<24|Re<<16|Re<<8|Re,ie=[],Be=0;Be<Re;Be+=4)ie.push(W);var he=L.create(ie,Re);J.concat(he)},"pad"),unpad:o(function(J){var Ae=J.words[J.sigBytes-1>>>2]&255;J.sigBytes-=Ae},"unpad")};I.BlockCipher=M.extend({cfg:M.cfg.extend({mode:d,padding:H}),reset:o(function(){var J;M.reset.call(this);var Ae=this.cfg,Q=Ae.iv,Re=Ae.mode;this._xformMode==this._ENC_XFORM_MODE?J=Re.createEncryptor:(J=Re.createDecryptor,this._minBufferSize=1),this._mode&&this._mode.__creator==J?this._mode.init(this,Q&&Q.words):(this._mode=J.call(Re,this,Q&&Q.words),this._mode.__creator=J)},"reset"),_doProcessBlock:o(function(J,Ae){this._mode.processBlock(J,Ae)},"_doProcessBlock"),_doFinalize:o(function(){var J,Ae=this.cfg.padding;return this._xformMode==this._ENC_XFORM_MODE?(Ae.pad(this._data,this.blockSize),J=this._process(!0)):(J=this._process(!0),Ae.unpad(J)),J},"_doFinalize"),blockSize:128/32});var B=I.CipherParams=r.extend({init:o(function(J){this.mixIn(J)},"init"),toString:o(function(J){return(J||this.formatter).stringify(this)},"toString")}),K=n.format={},Y=K.OpenSSL={stringify:o(function(J){var Ae,Q=J.ciphertext,Re=J.salt;return Re?Ae=L.create([1398893684,1701076831]).concat(Re).concat(Q):Ae=Q,Ae.toString(C)},"stringify"),parse:o(function(J){var Ae,Q=C.parse(J),Re=Q.words;return Re[0]==1398893684&&Re[1]==1701076831&&(Ae=L.create(Re.slice(2,4)),Re.splice(0,4),Q.sigBytes-=16),B.create({ciphertext:Q,salt:Ae})},"parse")},v=I.SerializableCipher=r.extend({cfg:r.extend({format:Y}),encrypt:o(function(J,Ae,Q,Re){Re=this.cfg.extend(Re);var W=J.createEncryptor(Q,Re),ie=W.finalize(Ae),Be=W.cfg;return B.create({ciphertext:ie,key:Q,iv:Be.iv,algorithm:J,mode:Be.mode,padding:Be.padding,blockSize:J.blockSize,formatter:Re.format})},"encrypt"),decrypt:o(function(J,Ae,Q,Re){Re=this.cfg.extend(Re),Ae=this._parse(Ae,Re.format);var W=J.createDecryptor(Q,Re).finalize(Ae.ciphertext);return W},"decrypt"),_parse:o(function(J,Ae){return typeof J=="string"?Ae.parse(J,this):J},"_parse")}),Z=n.kdf={},z=Z.OpenSSL={execute:o(function(J,Ae,Q,Re,W){if(Re||(Re=L.random(64/8)),W)var ie=D.create({keySize:Ae+Q,hasher:W}).compute(J,Re);else var ie=D.create({keySize:Ae+Q}).compute(J,Re);var Be=L.create(ie.words.slice(Ae),Q*4);return ie.sigBytes=Ae*4,B.create({key:ie,iv:Be,salt:Re})},"execute")},q=I.PasswordBasedCipher=v.extend({cfg:v.cfg.extend({kdf:z}),encrypt:o(function(J,Ae,Q,Re){Re=this.cfg.extend(Re);var W=Re.kdf.execute(Q,J.keySize,J.ivSize,Re.salt,Re.hasher);Re.iv=W.iv;var ie=v.encrypt.call(this,J,Ae,W.key,Re);return ie.mixIn(W),ie},"encrypt"),decrypt:o(function(J,Ae,Q,Re){Re=this.cfg.extend(Re),Ae=this._parse(Ae,Re.format);var W=Re.kdf.execute(Q,J.keySize,J.ivSize,Ae.salt,Re.hasher);Re.iv=W.iv;var ie=v.decrypt.call(this,J,Ae,W.key,Re);return ie},"decrypt")})}()})}(oC)),oC.exports}o(Ys,"requireCipherCore");var TC={exports:{}},tz=TC.exports,P8;function Az(){return P8||(P8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(tz,function(s){return s.mode.CFB=function(){var R=s.lib.BlockCipherMode.extend();R.Encryptor=R.extend({processBlock:o(function(I,r){var L=this._cipher,N=L.blockSize;n.call(this,I,r,N,L),this._prevBlock=I.slice(r,r+N)},"processBlock")}),R.Decryptor=R.extend({processBlock:o(function(I,r){var L=this._cipher,N=L.blockSize,l=I.slice(r,r+N);n.call(this,I,r,N,L),this._prevBlock=l},"processBlock")});function n(I,r,L,N){var l,C=this._iv;C?(l=C.slice(0),this._iv=void 0):l=this._prevBlock,N.encryptBlock(l,0);for(var U=0;U<L;U++)I[r+U]^=l[U]}return o(n,"generateKeystreamAndEncrypt"),R}(),s.mode.CFB})}(TC)),TC.exports}o(Az,"requireModeCfb");var SC={exports:{}},Ez=SC.exports,G8;function sz(){return G8||(G8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(Ez,function(s){return s.mode.CTR=function(){var R=s.lib.BlockCipherMode.extend(),n=R.Encryptor=R.extend({processBlock:o(function(I,r){var L=this._cipher,N=L.blockSize,l=this._iv,C=this._counter;l&&(C=this._counter=l.slice(0),this._iv=void 0);var U=C.slice(0);L.encryptBlock(U,0),C[N-1]=C[N-1]+1|0;for(var D=0;D<N;D++)I[r+D]^=U[D]},"processBlock")});return R.Decryptor=n,R}(),s.mode.CTR})}(SC)),SC.exports}o(sz,"requireModeCtr");var NC={exports:{}},Rz=NC.exports,d8;function Oz(){return d8||(d8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(Rz,function(s){/** @preserve
 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
 * derived from CryptoJS.mode.CTR
 * Jan Hruby jhruby.web@gmail.com
 */return s.mode.CTRGladman=function(){var R=s.lib.BlockCipherMode.extend();function n(L){if((L>>24&255)===255){var N=L>>16&255,l=L>>8&255,C=L&255;N===255?(N=0,l===255?(l=0,C===255?C=0:++C):++l):++N,L=0,L+=N<<16,L+=l<<8,L+=C}else L+=1<<24;return L}o(n,"incWord");function I(L){return(L[0]=n(L[0]))===0&&(L[1]=n(L[1])),L}o(I,"incCounter");var r=R.Encryptor=R.extend({processBlock:o(function(L,N){var l=this._cipher,C=l.blockSize,U=this._iv,D=this._counter;U&&(D=this._counter=U.slice(0),this._iv=void 0),I(D);var M=D.slice(0);l.encryptBlock(M,0);for(var h=0;h<C;h++)L[N+h]^=M[h]},"processBlock")});return R.Decryptor=r,R}(),s.mode.CTRGladman})}(NC)),NC.exports}o(Oz,"requireModeCtrGladman");var lC={exports:{}},nz=lC.exports,H8;function az(){return H8||(H8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(nz,function(s){return s.mode.OFB=function(){var R=s.lib.BlockCipherMode.extend(),n=R.Encryptor=R.extend({processBlock:o(function(I,r){var L=this._cipher,N=L.blockSize,l=this._iv,C=this._keystream;l&&(C=this._keystream=l.slice(0),this._iv=void 0),L.encryptBlock(C,0);for(var U=0;U<N;U++)I[r+U]^=C[U]},"processBlock")});return R.Decryptor=n,R}(),s.mode.OFB})}(lC)),lC.exports}o(az,"requireModeOfb");var CC={exports:{}},iz=CC.exports,f8;function Iz(){return f8||(f8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(iz,function(s){return s.mode.ECB=function(){var R=s.lib.BlockCipherMode.extend();return R.Encryptor=R.extend({processBlock:o(function(n,I){this._cipher.encryptBlock(n,I)},"processBlock")}),R.Decryptor=R.extend({processBlock:o(function(n,I){this._cipher.decryptBlock(n,I)},"processBlock")}),R}(),s.mode.ECB})}(CC)),CC.exports}o(Iz,"requireModeEcb");var uC={exports:{}},rz=uC.exports,B8;function Lz(){return B8||(B8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(rz,function(s){return s.pad.AnsiX923={pad:o(function(R,n){var I=R.sigBytes,r=n*4,L=r-I%r,N=I+L-1;R.clamp(),R.words[N>>>2]|=L<<24-N%4*8,R.sigBytes+=L},"pad"),unpad:o(function(R){var n=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=n},"unpad")},s.pad.Ansix923})}(uC)),uC.exports}o(Lz,"requirePadAnsix923");var UC={exports:{}},oz=UC.exports,g8;function Tz(){return g8||(g8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(oz,function(s){return s.pad.Iso10126={pad:o(function(R,n){var I=n*4,r=I-R.sigBytes%I;R.concat(s.lib.WordArray.random(r-1)).concat(s.lib.WordArray.create([r<<24],1))},"pad"),unpad:o(function(R){var n=R.words[R.sigBytes-1>>>2]&255;R.sigBytes-=n},"unpad")},s.pad.Iso10126})}(UC)),UC.exports}o(Tz,"requirePadIso10126");var DC={exports:{}},Sz=DC.exports,m8;function Nz(){return m8||(m8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(Sz,function(s){return s.pad.Iso97971={pad:o(function(R,n){R.concat(s.lib.WordArray.create([2147483648],1)),s.pad.ZeroPadding.pad(R,n)},"pad"),unpad:o(function(R){s.pad.ZeroPadding.unpad(R),R.sigBytes--},"unpad")},s.pad.Iso97971})}(DC)),DC.exports}o(Nz,"requirePadIso97971");var MC={exports:{}},lz=MC.exports,p8;function Cz(){return p8||(p8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(lz,function(s){return s.pad.ZeroPadding={pad:o(function(R,n){var I=n*4;R.clamp(),R.sigBytes+=I-(R.sigBytes%I||I)},"pad"),unpad:o(function(R){for(var n=R.words,I=R.sigBytes-1,I=R.sigBytes-1;I>=0;I--)if(n[I>>>2]>>>24-I%4*8&255){R.sigBytes=I+1;break}},"unpad")},s.pad.ZeroPadding})}(MC)),MC.exports}o(Cz,"requirePadZeropadding");var cC={exports:{}},uz=cC.exports,K8;function Uz(){return K8||(K8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(uz,function(s){return s.pad.NoPadding={pad:o(function(){},"pad"),unpad:o(function(){},"unpad")},s.pad.NoPadding})}(cC)),cC.exports}o(Uz,"requirePadNopadding");var hC={exports:{}},Dz=hC.exports,F8;function Mz(){return F8||(F8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),Ys())})(Dz,function(s){return function(R){var n=s,I=n.lib,r=I.CipherParams,L=n.enc,N=L.Hex,l=n.format;l.Hex={stringify:o(function(C){return C.ciphertext.toString(N)},"stringify"),parse:o(function(C){var U=N.parse(C);return r.create({ciphertext:U})},"parse")}}(),s.format.Hex})}(hC)),hC.exports}o(Mz,"requireFormatHex");var _C={exports:{}},cz=_C.exports,Y8;function hz(){return Y8||(Y8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(cz,function(s){return function(){var R=s,n=R.lib,I=n.BlockCipher,r=R.algo,L=[],N=[],l=[],C=[],U=[],D=[],M=[],h=[],_=[],d=[];(function(){for(var B=[],K=0;K<256;K++)K<128?B[K]=K<<1:B[K]=K<<1^283;for(var Y=0,v=0,K=0;K<256;K++){var Z=v^v<<1^v<<2^v<<3^v<<4;Z=Z>>>8^Z&255^99,L[Y]=Z,N[Z]=Y;var z=B[Y],q=B[z],J=B[q],Ae=B[Z]*257^Z*16843008;l[Y]=Ae<<24|Ae>>>8,C[Y]=Ae<<16|Ae>>>16,U[Y]=Ae<<8|Ae>>>24,D[Y]=Ae;var Ae=J*16843009^q*65537^z*257^Y*16843008;M[Z]=Ae<<24|Ae>>>8,h[Z]=Ae<<16|Ae>>>16,_[Z]=Ae<<8|Ae>>>24,d[Z]=Ae,Y?(Y=z^B[B[B[J^z]]],v^=B[B[v]]):Y=v=1}})();var f=[0,1,2,4,8,16,32,64,128,27,54],H=r.AES=I.extend({_doReset:o(function(){var B;if(!(this._nRounds&&this._keyPriorReset===this._key)){for(var K=this._keyPriorReset=this._key,Y=K.words,v=K.sigBytes/4,Z=this._nRounds=v+6,z=(Z+1)*4,q=this._keySchedule=[],J=0;J<z;J++)J<v?q[J]=Y[J]:(B=q[J-1],J%v?v>6&&J%v==4&&(B=L[B>>>24]<<24|L[B>>>16&255]<<16|L[B>>>8&255]<<8|L[B&255]):(B=B<<8|B>>>24,B=L[B>>>24]<<24|L[B>>>16&255]<<16|L[B>>>8&255]<<8|L[B&255],B^=f[J/v|0]<<24),q[J]=q[J-v]^B);for(var Ae=this._invKeySchedule=[],Q=0;Q<z;Q++){var J=z-Q;if(Q%4)var B=q[J];else var B=q[J-4];Q<4||J<=4?Ae[Q]=B:Ae[Q]=M[L[B>>>24]]^h[L[B>>>16&255]]^_[L[B>>>8&255]]^d[L[B&255]]}}},"_doReset"),encryptBlock:o(function(B,K){this._doCryptBlock(B,K,this._keySchedule,l,C,U,D,L)},"encryptBlock"),decryptBlock:o(function(B,K){var Y=B[K+1];B[K+1]=B[K+3],B[K+3]=Y,this._doCryptBlock(B,K,this._invKeySchedule,M,h,_,d,N);var Y=B[K+1];B[K+1]=B[K+3],B[K+3]=Y},"decryptBlock"),_doCryptBlock:o(function(B,K,Y,v,Z,z,q,J){for(var Ae=this._nRounds,Q=B[K]^Y[0],Re=B[K+1]^Y[1],W=B[K+2]^Y[2],ie=B[K+3]^Y[3],Be=4,he=1;he<Ae;he++){var ve=v[Q>>>24]^Z[Re>>>16&255]^z[W>>>8&255]^q[ie&255]^Y[Be++],_e=v[Re>>>24]^Z[W>>>16&255]^z[ie>>>8&255]^q[Q&255]^Y[Be++],Le=v[W>>>24]^Z[ie>>>16&255]^z[Q>>>8&255]^q[Re&255]^Y[Be++],Ee=v[ie>>>24]^Z[Q>>>16&255]^z[Re>>>8&255]^q[W&255]^Y[Be++];Q=ve,Re=_e,W=Le,ie=Ee}var ve=(J[Q>>>24]<<24|J[Re>>>16&255]<<16|J[W>>>8&255]<<8|J[ie&255])^Y[Be++],_e=(J[Re>>>24]<<24|J[W>>>16&255]<<16|J[ie>>>8&255]<<8|J[Q&255])^Y[Be++],Le=(J[W>>>24]<<24|J[ie>>>16&255]<<16|J[Q>>>8&255]<<8|J[Re&255])^Y[Be++],Ee=(J[ie>>>24]<<24|J[Q>>>16&255]<<16|J[Re>>>8&255]<<8|J[W&255])^Y[Be++];B[K]=ve,B[K+1]=_e,B[K+2]=Le,B[K+3]=Ee},"_doCryptBlock"),keySize:256/32});R.AES=I._createHelper(H)}(),s.AES})}(_C)),_C.exports}o(hz,"requireAes");var PC={exports:{}},_z=PC.exports,W8;function Pz(){return W8||(W8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(_z,function(s){return function(){var R=s,n=R.lib,I=n.WordArray,r=n.BlockCipher,L=R.algo,N=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],l=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],C=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],U=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],D=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],M=L.DES=r.extend({_doReset:o(function(){for(var f=this._key,H=f.words,B=[],K=0;K<56;K++){var Y=N[K]-1;B[K]=H[Y>>>5]>>>31-Y%32&1}for(var v=this._subKeys=[],Z=0;Z<16;Z++){for(var z=v[Z]=[],q=C[Z],K=0;K<24;K++)z[K/6|0]|=B[(l[K]-1+q)%28]<<31-K%6,z[4+(K/6|0)]|=B[28+(l[K+24]-1+q)%28]<<31-K%6;z[0]=z[0]<<1|z[0]>>>31;for(var K=1;K<7;K++)z[K]=z[K]>>>(K-1)*4+3;z[7]=z[7]<<5|z[7]>>>27}for(var J=this._invSubKeys=[],K=0;K<16;K++)J[K]=v[15-K]},"_doReset"),encryptBlock:o(function(f,H){this._doCryptBlock(f,H,this._subKeys)},"encryptBlock"),decryptBlock:o(function(f,H){this._doCryptBlock(f,H,this._invSubKeys)},"decryptBlock"),_doCryptBlock:o(function(f,H,B){this._lBlock=f[H],this._rBlock=f[H+1],h.call(this,4,252645135),h.call(this,16,65535),_.call(this,2,858993459),_.call(this,8,16711935),h.call(this,1,1431655765);for(var K=0;K<16;K++){for(var Y=B[K],v=this._lBlock,Z=this._rBlock,z=0,q=0;q<8;q++)z|=U[q][((Z^Y[q])&D[q])>>>0];this._lBlock=Z,this._rBlock=v^z}var J=this._lBlock;this._lBlock=this._rBlock,this._rBlock=J,h.call(this,1,1431655765),_.call(this,8,16711935),_.call(this,2,858993459),h.call(this,16,65535),h.call(this,4,252645135),f[H]=this._lBlock,f[H+1]=this._rBlock},"_doCryptBlock"),keySize:64/32,ivSize:64/32,blockSize:64/32});function h(f,H){var B=(this._lBlock>>>f^this._rBlock)&H;this._rBlock^=B,this._lBlock^=B<<f}o(h,"exchangeLR");function _(f,H){var B=(this._rBlock>>>f^this._lBlock)&H;this._lBlock^=B,this._rBlock^=B<<f}o(_,"exchangeRL"),R.DES=r._createHelper(M);var d=L.TripleDES=r.extend({_doReset:o(function(){var f=this._key,H=f.words;if(H.length!==2&&H.length!==4&&H.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var B=H.slice(0,2),K=H.length<4?H.slice(0,2):H.slice(2,4),Y=H.length<6?H.slice(0,2):H.slice(4,6);this._des1=M.createEncryptor(I.create(B)),this._des2=M.createEncryptor(I.create(K)),this._des3=M.createEncryptor(I.create(Y))},"_doReset"),encryptBlock:o(function(f,H){this._des1.encryptBlock(f,H),this._des2.decryptBlock(f,H),this._des3.encryptBlock(f,H)},"encryptBlock"),decryptBlock:o(function(f,H){this._des3.decryptBlock(f,H),this._des2.encryptBlock(f,H),this._des1.decryptBlock(f,H)},"decryptBlock"),keySize:192/32,ivSize:64/32,blockSize:64/32});R.TripleDES=r._createHelper(d)}(),s.TripleDES})}(PC)),PC.exports}o(Pz,"requireTripledes");var GC={exports:{}},Gz=GC.exports,y8;function dz(){return y8||(y8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(Gz,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,r=R.algo,L=r.RC4=I.extend({_doReset:o(function(){for(var C=this._key,U=C.words,D=C.sigBytes,M=this._S=[],h=0;h<256;h++)M[h]=h;for(var h=0,_=0;h<256;h++){var d=h%D,f=U[d>>>2]>>>24-d%4*8&255;_=(_+M[h]+f)%256;var H=M[h];M[h]=M[_],M[_]=H}this._i=this._j=0},"_doReset"),_doProcessBlock:o(function(C,U){C[U]^=N.call(this)},"_doProcessBlock"),keySize:256/32,ivSize:0});function N(){for(var C=this._S,U=this._i,D=this._j,M=0,h=0;h<4;h++){U=(U+1)%256,D=(D+C[U])%256;var _=C[U];C[U]=C[D],C[D]=_,M|=C[(C[U]+C[D])%256]<<24-h*8}return this._i=U,this._j=D,M}o(N,"generateKeystreamWord"),R.RC4=I._createHelper(L);var l=r.RC4Drop=L.extend({cfg:L.cfg.extend({drop:192}),_doReset:o(function(){L._doReset.call(this);for(var C=this.cfg.drop;C>0;C--)N.call(this)},"_doReset")});R.RC4Drop=I._createHelper(l)}(),s.RC4})}(GC)),GC.exports}o(dz,"requireRc4");var dC={exports:{}},Hz=dC.exports,w8;function fz(){return w8||(w8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(Hz,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,r=R.algo,L=[],N=[],l=[],C=r.Rabbit=I.extend({_doReset:o(function(){for(var D=this._key.words,M=this.cfg.iv,h=0;h<4;h++)D[h]=(D[h]<<8|D[h]>>>24)&16711935|(D[h]<<24|D[h]>>>8)&4278255360;var _=this._X=[D[0],D[3]<<16|D[2]>>>16,D[1],D[0]<<16|D[3]>>>16,D[2],D[1]<<16|D[0]>>>16,D[3],D[2]<<16|D[1]>>>16],d=this._C=[D[2]<<16|D[2]>>>16,D[0]&4294901760|D[1]&65535,D[3]<<16|D[3]>>>16,D[1]&4294901760|D[2]&65535,D[0]<<16|D[0]>>>16,D[2]&4294901760|D[3]&65535,D[1]<<16|D[1]>>>16,D[3]&4294901760|D[0]&65535];this._b=0;for(var h=0;h<4;h++)U.call(this);for(var h=0;h<8;h++)d[h]^=_[h+4&7];if(M){var f=M.words,H=f[0],B=f[1],K=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,Y=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,v=K>>>16|Y&4294901760,Z=Y<<16|K&65535;d[0]^=K,d[1]^=v,d[2]^=Y,d[3]^=Z,d[4]^=K,d[5]^=v,d[6]^=Y,d[7]^=Z;for(var h=0;h<4;h++)U.call(this)}},"_doReset"),_doProcessBlock:o(function(D,M){var h=this._X;U.call(this),L[0]=h[0]^h[5]>>>16^h[3]<<16,L[1]=h[2]^h[7]>>>16^h[5]<<16,L[2]=h[4]^h[1]>>>16^h[7]<<16,L[3]=h[6]^h[3]>>>16^h[1]<<16;for(var _=0;_<4;_++)L[_]=(L[_]<<8|L[_]>>>24)&16711935|(L[_]<<24|L[_]>>>8)&4278255360,D[M+_]^=L[_]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function U(){for(var D=this._X,M=this._C,h=0;h<8;h++)N[h]=M[h];M[0]=M[0]+1295307597+this._b|0,M[1]=M[1]+3545052371+(M[0]>>>0<N[0]>>>0?1:0)|0,M[2]=M[2]+886263092+(M[1]>>>0<N[1]>>>0?1:0)|0,M[3]=M[3]+1295307597+(M[2]>>>0<N[2]>>>0?1:0)|0,M[4]=M[4]+3545052371+(M[3]>>>0<N[3]>>>0?1:0)|0,M[5]=M[5]+886263092+(M[4]>>>0<N[4]>>>0?1:0)|0,M[6]=M[6]+1295307597+(M[5]>>>0<N[5]>>>0?1:0)|0,M[7]=M[7]+3545052371+(M[6]>>>0<N[6]>>>0?1:0)|0,this._b=M[7]>>>0<N[7]>>>0?1:0;for(var h=0;h<8;h++){var _=D[h]+M[h],d=_&65535,f=_>>>16,H=((d*d>>>17)+d*f>>>15)+f*f,B=((_&4294901760)*_|0)+((_&65535)*_|0);l[h]=H^B}D[0]=l[0]+(l[7]<<16|l[7]>>>16)+(l[6]<<16|l[6]>>>16)|0,D[1]=l[1]+(l[0]<<8|l[0]>>>24)+l[7]|0,D[2]=l[2]+(l[1]<<16|l[1]>>>16)+(l[0]<<16|l[0]>>>16)|0,D[3]=l[3]+(l[2]<<8|l[2]>>>24)+l[1]|0,D[4]=l[4]+(l[3]<<16|l[3]>>>16)+(l[2]<<16|l[2]>>>16)|0,D[5]=l[5]+(l[4]<<8|l[4]>>>24)+l[3]|0,D[6]=l[6]+(l[5]<<16|l[5]>>>16)+(l[4]<<16|l[4]>>>16)|0,D[7]=l[7]+(l[6]<<8|l[6]>>>24)+l[5]|0}o(U,"nextState"),R.Rabbit=I._createHelper(C)}(),s.Rabbit})}(dC)),dC.exports}o(fz,"requireRabbit");var HC={exports:{}},Bz=HC.exports,v8;function gz(){return v8||(v8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(Bz,function(s){return function(){var R=s,n=R.lib,I=n.StreamCipher,r=R.algo,L=[],N=[],l=[],C=r.RabbitLegacy=I.extend({_doReset:o(function(){var D=this._key.words,M=this.cfg.iv,h=this._X=[D[0],D[3]<<16|D[2]>>>16,D[1],D[0]<<16|D[3]>>>16,D[2],D[1]<<16|D[0]>>>16,D[3],D[2]<<16|D[1]>>>16],_=this._C=[D[2]<<16|D[2]>>>16,D[0]&4294901760|D[1]&65535,D[3]<<16|D[3]>>>16,D[1]&4294901760|D[2]&65535,D[0]<<16|D[0]>>>16,D[2]&4294901760|D[3]&65535,D[1]<<16|D[1]>>>16,D[3]&4294901760|D[0]&65535];this._b=0;for(var d=0;d<4;d++)U.call(this);for(var d=0;d<8;d++)_[d]^=h[d+4&7];if(M){var f=M.words,H=f[0],B=f[1],K=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,Y=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360,v=K>>>16|Y&4294901760,Z=Y<<16|K&65535;_[0]^=K,_[1]^=v,_[2]^=Y,_[3]^=Z,_[4]^=K,_[5]^=v,_[6]^=Y,_[7]^=Z;for(var d=0;d<4;d++)U.call(this)}},"_doReset"),_doProcessBlock:o(function(D,M){var h=this._X;U.call(this),L[0]=h[0]^h[5]>>>16^h[3]<<16,L[1]=h[2]^h[7]>>>16^h[5]<<16,L[2]=h[4]^h[1]>>>16^h[7]<<16,L[3]=h[6]^h[3]>>>16^h[1]<<16;for(var _=0;_<4;_++)L[_]=(L[_]<<8|L[_]>>>24)&16711935|(L[_]<<24|L[_]>>>8)&4278255360,D[M+_]^=L[_]},"_doProcessBlock"),blockSize:128/32,ivSize:64/32});function U(){for(var D=this._X,M=this._C,h=0;h<8;h++)N[h]=M[h];M[0]=M[0]+1295307597+this._b|0,M[1]=M[1]+3545052371+(M[0]>>>0<N[0]>>>0?1:0)|0,M[2]=M[2]+886263092+(M[1]>>>0<N[1]>>>0?1:0)|0,M[3]=M[3]+1295307597+(M[2]>>>0<N[2]>>>0?1:0)|0,M[4]=M[4]+3545052371+(M[3]>>>0<N[3]>>>0?1:0)|0,M[5]=M[5]+886263092+(M[4]>>>0<N[4]>>>0?1:0)|0,M[6]=M[6]+1295307597+(M[5]>>>0<N[5]>>>0?1:0)|0,M[7]=M[7]+3545052371+(M[6]>>>0<N[6]>>>0?1:0)|0,this._b=M[7]>>>0<N[7]>>>0?1:0;for(var h=0;h<8;h++){var _=D[h]+M[h],d=_&65535,f=_>>>16,H=((d*d>>>17)+d*f>>>15)+f*f,B=((_&4294901760)*_|0)+((_&65535)*_|0);l[h]=H^B}D[0]=l[0]+(l[7]<<16|l[7]>>>16)+(l[6]<<16|l[6]>>>16)|0,D[1]=l[1]+(l[0]<<8|l[0]>>>24)+l[7]|0,D[2]=l[2]+(l[1]<<16|l[1]>>>16)+(l[0]<<16|l[0]>>>16)|0,D[3]=l[3]+(l[2]<<8|l[2]>>>24)+l[1]|0,D[4]=l[4]+(l[3]<<16|l[3]>>>16)+(l[2]<<16|l[2]>>>16)|0,D[5]=l[5]+(l[4]<<8|l[4]>>>24)+l[3]|0,D[6]=l[6]+(l[5]<<16|l[5]>>>16)+(l[4]<<16|l[4]>>>16)|0,D[7]=l[7]+(l[6]<<8|l[6]>>>24)+l[5]|0}o(U,"nextState"),R.RabbitLegacy=I._createHelper(C)}(),s.RabbitLegacy})}(HC)),HC.exports}o(gz,"requireRabbitLegacy");var fC={exports:{}},mz=fC.exports,V8;function pz(){return V8||(V8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),ZI(),XI(),Si(),Ys())})(mz,function(s){return function(){var R=s,n=R.lib,I=n.BlockCipher,r=R.algo;const L=16,N=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],l=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var C={pbox:[],sbox:[]};function U(d,f){let H=f>>24&255,B=f>>16&255,K=f>>8&255,Y=f&255,v=d.sbox[0][H]+d.sbox[1][B];return v=v^d.sbox[2][K],v=v+d.sbox[3][Y],v}o(U,"F");function D(d,f,H){let B=f,K=H,Y;for(let v=0;v<L;++v)B=B^d.pbox[v],K=U(d,B)^K,Y=B,B=K,K=Y;return Y=B,B=K,K=Y,K=K^d.pbox[L],B=B^d.pbox[L+1],{left:B,right:K}}o(D,"BlowFish_Encrypt");function M(d,f,H){let B=f,K=H,Y;for(let v=L+1;v>1;--v)B=B^d.pbox[v],K=U(d,B)^K,Y=B,B=K,K=Y;return Y=B,B=K,K=Y,K=K^d.pbox[1],B=B^d.pbox[0],{left:B,right:K}}o(M,"BlowFish_Decrypt");function h(d,f,H){for(let Z=0;Z<4;Z++){d.sbox[Z]=[];for(let z=0;z<256;z++)d.sbox[Z][z]=l[Z][z]}let B=0;for(let Z=0;Z<L+2;Z++)d.pbox[Z]=N[Z]^f[B],B++,B>=H&&(B=0);let K=0,Y=0,v=0;for(let Z=0;Z<L+2;Z+=2)v=D(d,K,Y),K=v.left,Y=v.right,d.pbox[Z]=K,d.pbox[Z+1]=Y;for(let Z=0;Z<4;Z++)for(let z=0;z<256;z+=2)v=D(d,K,Y),K=v.left,Y=v.right,d.sbox[Z][z]=K,d.sbox[Z][z+1]=Y;return!0}o(h,"BlowFishInit");var _=r.Blowfish=I.extend({_doReset:o(function(){if(this._keyPriorReset!==this._key){var d=this._keyPriorReset=this._key,f=d.words,H=d.sigBytes/4;h(C,f,H)}},"_doReset"),encryptBlock:o(function(d,f){var H=D(C,d[f],d[f+1]);d[f]=H.left,d[f+1]=H.right},"encryptBlock"),decryptBlock:o(function(d,f){var H=M(C,d[f],d[f+1]);d[f]=H.left,d[f+1]=H.right},"decryptBlock"),blockSize:64/32,keySize:128/32,ivSize:64/32});R.Blowfish=I._createHelper(_)}(),s.Blowfish})}(fC)),fC.exports}o(pz,"requireBlowfish");var Kz=$l.exports,x8;function Fz(){return x8||(x8=1,function(E,A){(function(s,R,n){E.exports=R(HA(),j0(),gJ(),pJ(),ZI(),YJ(),XI(),E7(),wf(),VJ(),s7(),kJ(),XJ(),$J(),vf(),jJ(),Si(),Ys(),Az(),sz(),Oz(),az(),Iz(),Lz(),Tz(),Nz(),Cz(),Uz(),Mz(),hz(),Pz(),dz(),fz(),gz(),pz())})(Kz,function(s){return s})}($l)),$l.exports}o(Fz,"requireCryptoJs");var Hr=Fz();const YF=class YF{constructor(A){this.playTime=(A==null?void 0:A.playTime)||0,this.battles=(A==null?void 0:A.battles)||0,this.classicSessionsPlayed=(A==null?void 0:A.classicSessionsPlayed)||0,this.sessionsWon=(A==null?void 0:A.sessionsWon)||0,this.ribbonsOwned=(A==null?void 0:A.ribbonsOwned)||0,this.dailyRunSessionsPlayed=(A==null?void 0:A.dailyRunSessionsPlayed)||0,this.dailyRunSessionsWon=(A==null?void 0:A.dailyRunSessionsWon)||0,this.endlessSessionsPlayed=(A==null?void 0:A.endlessSessionsPlayed)||0,this.highestEndlessWave=(A==null?void 0:A.highestEndlessWave)||0,this.highestLevel=(A==null?void 0:A.highestLevel)||0,this.highestMoney=(A==null?void 0:A.highestMoney)||0,this.highestDamage=(A==null?void 0:A.highestDamage)||0,this.highestHeal=(A==null?void 0:A.highestHeal)||0,this.pokemonSeen=(A==null?void 0:A.pokemonSeen)||0,this.pokemonDefeated=(A==null?void 0:A.pokemonDefeated)||0,this.pokemonCaught=(A==null?void 0:A.pokemonCaught)||0,this.pokemonHatched=(A==null?void 0:A.pokemonHatched)||0,this.subLegendaryPokemonSeen=(A==null?void 0:A.subLegendaryPokemonSeen)??0,this.subLegendaryPokemonCaught=(A==null?void 0:A.subLegendaryPokemonCaught)??0,this.subLegendaryPokemonHatched=(A==null?void 0:A.subLegendaryPokemonHatched)??0,this.legendaryPokemonSeen=(A==null?void 0:A.legendaryPokemonSeen)||0,this.legendaryPokemonCaught=(A==null?void 0:A.legendaryPokemonCaught)||0,this.legendaryPokemonHatched=(A==null?void 0:A.legendaryPokemonHatched)||0,this.mythicalPokemonSeen=(A==null?void 0:A.mythicalPokemonSeen)||0,this.mythicalPokemonCaught=(A==null?void 0:A.mythicalPokemonCaught)||0,this.mythicalPokemonHatched=(A==null?void 0:A.mythicalPokemonHatched)||0,this.shinyPokemonSeen=(A==null?void 0:A.shinyPokemonSeen)||0,this.shinyPokemonCaught=(A==null?void 0:A.shinyPokemonCaught)||0,this.shinyPokemonHatched=(A==null?void 0:A.shinyPokemonHatched)||0,this.pokemonFused=(A==null?void 0:A.pokemonFused)||0,this.trainersDefeated=(A==null?void 0:A.trainersDefeated)||0,this.eggsPulled=(A==null?void 0:A.eggsPulled)||0,this.rareEggsPulled=(A==null?void 0:A.rareEggsPulled)||0,this.epicEggsPulled=(A==null?void 0:A.epicEggsPulled)||0,this.legendaryEggsPulled=(A==null?void 0:A.legendaryEggsPulled)||0,this.manaphyEggsPulled=(A==null?void 0:A.manaphyEggsPulled)||0}};o(YF,"GameStats");let AU=YF;const Yz=[o(function(A){A.starterData&&A.dexData&&Object.keys(A.starterData).forEach(s=>{var R;(R=A.dexData[s])!=null&&R.caughtAttr&&A.starterData[s]&&!A.starterData[s].abilityAttr&&(A.starterData[s].abilityAttr=1)})},"migrateAbilityData"),o(function(A){A.gameStats&&A.gameStats.legendaryPokemonCaught!==void 0&&A.gameStats.subLegendaryPokemonCaught===void 0&&(A.gameStats.subLegendaryPokemonSeen=0,A.gameStats.subLegendaryPokemonCaught=0,A.gameStats.subLegendaryPokemonHatched=0,qA.filter(s=>s.subLegendary).forEach(s=>{const R=A.dexData[s.speciesId];A.gameStats.subLegendaryPokemonSeen+=R.seenCount,A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen-R.seenCount,0),A.gameStats.subLegendaryPokemonCaught+=R.caughtCount,A.gameStats.legendaryPokemonCaught=Math.max(A.gameStats.legendaryPokemonCaught-R.caughtCount,0),A.gameStats.subLegendaryPokemonHatched+=R.hatchedCount,A.gameStats.legendaryPokemonHatched=Math.max(A.gameStats.legendaryPokemonHatched-R.hatchedCount,0)}),A.gameStats.subLegendaryPokemonSeen=Math.max(A.gameStats.subLegendaryPokemonSeen,A.gameStats.subLegendaryPokemonCaught),A.gameStats.legendaryPokemonSeen=Math.max(A.gameStats.legendaryPokemonSeen,A.gameStats.legendaryPokemonCaught),A.gameStats.mythicalPokemonSeen=Math.max(A.gameStats.mythicalPokemonSeen,A.gameStats.mythicalPokemonCaught))},"fixLegendaryStats"),o(function(A){var s,R;if(!Pe(A.starterData))for(const n of wi)(s=A.starterData[n])!=null&&s.abilityAttr&&(A.starterData[n].abilityAttr|=hE.ABILITY_1),(R=A.dexData[n])!=null&&R.caughtAttr&&(A.dexData[n].caughtAttr|=de.FEMALE)},"fixStarterData")],Wz=[o(function(A){A.hasOwnProperty("REROLL_TARGET")&&!A.hasOwnProperty(St.Shop_Cursor_Target)&&(A[St.Shop_Cursor_Target]=A.REROLL_TARGET,delete A.REROLL_TARGET,localStorage.setItem("settings",JSON.stringify(A)))},"fixRerollTarget")],yz=[o(function(A){for(const s of A.modifiers)if(s.className==="PokemonBaseStatModifier")s.className="BaseStatModifier";else if(s.className==="PokemonResetNegativeStatStageModifier")s.className="ResetNegativeStatStageModifier";else if(s.className==="TempBattleStatBoosterModifier")if(s.typeId!=="DIRE_HIT"){s.className="TempStatStageBoosterModifier",s.typeId="TEMP_STAT_STAGE_BOOSTER";const n=s.typePregenArgs[0]+1;s.typePregenArgs[0]=n,s.args=[n,5,Math.min(s.args[1],5)]}else s.className="TempCritBoosterModifier",s.typePregenArgs=[],s.args=[5,Math.min(s.args[1],5)];else if(s.className==="DoubleBattleChanceBoosterModifier"&&s.args.length===1){let R;switch(s.typeId){case"MAX_LURE":R=30;break;case"SUPER_LURE":R=15;break;default:R=10;break}s.args=[R,Math.min(s.args[0],R)]}for(const s of A.enemyModifiers)s.className==="PokemonBaseStatModifier"?s.className="BaseStatModifier":s.className==="PokemonResetNegativeStatStageModifier"&&(s.className="ResetNegativeStatStageModifier")},"migrateModifiers"),o(function(A){for(const s of A.party)s.mysteryEncounterPokemonData&&(s.customPokemonData=new Ms(s.mysteryEncounterPokemonData),s.mysteryEncounterPokemonData=null),s.fusionMysteryEncounterPokemonData&&(s.fusionCustomPokemonData=new Ms(s.fusionMysteryEncounterPokemonData),s.fusionMysteryEncounterPokemonData=null),s.customPokemonData=s.customPokemonData??new Ms,!Pe(s.natureOverride)&&s.natureOverride>=0&&(s.customPokemonData.nature=s.natureOverride,s.natureOverride=-1)},"migrateCustomPokemonDataAndNatureOverrides")],wz=[],vz=[],Vz=[],xz=[o(function(A){A.starterData&&A.dexData&&Object.keys(A.starterData).forEach(s=>{var r,L;const R=(r=A.dexData[s])==null?void 0:r.caughtAttr,n=Number(s);if(!n)return;const I=$e(n);R&&((L=I.forms)==null?void 0:L.length)>1&&I.forms.filter((l,C)=>l.isStarterSelectable&&R&a.gameData.getFormAttr(C)).length===0&&(A.dexData[s].caughtAttr+=de.DEFAULT_FORM)})},"migrateUnselectableForms")],bz=[],kz=[o(function(A){for(let s=0;s<A.modifiers.length;)A.modifiers[s].className==="TerastallizeModifier"?(A.party.forEach(R=>{R.id===A.modifiers[s].args[0]&&(R.teraType=A.modifiers[s].args[1])}),A.modifiers.splice(s,1)):s++;for(let s=0;s<A.enemyModifiers.length;)A.enemyModifiers[s].className==="TerastallizeModifier"?(A.enemyParty.forEach(R=>{R.id===A.enemyModifiers[s].args[0]&&(R.teraType=A.enemyModifiers[s].args[1])}),A.enemyModifiers.splice(s,1)):s++;A.party.forEach(s=>{Pe(s.teraType)&&(s.teraType=ms(s.species,s.formIndex).type1)}),A.enemyParty.forEach(s=>{Pe(s.teraType)&&(s.teraType=ms(s.species,s.formIndex).type1)})},"migrateTera")],Zz=[o(function(A){var s;if(A.starterData&&A.dexData){const n=(s=A.dexData[172])==null?void 0:s.caughtAttr,I=$e(172);I.speciesId===e.PICHU&&n&&(A.dexData[172].caughtAttr&=I.getFullUnlocksData(),A.dexData[172].caughtAttr|=de.DEFAULT_FORM)}},"migratePichuForms")],Vf=tk.split(".").map(E=>Number.parseInt(E));function Xz(E){const A=E.gameVersion.split(".").map(s=>Number.parseInt(s));if(!A.every((s,R)=>s===Vf[R])){const s=new kP;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}o(Xz,"applySystemVersionMigration");function Qz(E){const A=E.gameVersion.split(".").map(s=>Number.parseInt(s));if(!A.every((s,R)=>s===Vf[R])){const s=new bP;s.applyStaticPreprocessors(E),s.applyMigration(E,A)}}o(Qz,"applySessionVersionMigration");function $z(E){const s=(E.hasOwnProperty("gameVersion")?E.gameVersion:"1.0.0").split(".").map(R=>Number.parseInt(R));if(!s.every((R,n)=>R===Vf[n])){const R=new ZP;R.applyStaticPreprocessors(E),R.applyMigration(E,s)}}o($z,"applySettingsVersionMigration");const WF=class WF{callMigrators(A,s){for(const R of s)R(A)}applyStaticPreprocessors(A){}};o(WF,"VersionConverter");let WS=WF;const yF=class yF extends WS{applyStaticPreprocessors(A){A.money=Math.floor(A.money)}applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=5&&this.callMigrators(A,yz),n<=1&&this.callMigrators(A,Vz),n<7&&this.callMigrators(A,kz))}};o(yF,"SessionVersionConverter");let bP=yF;const wF=class wF extends WS{applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=4&&this.callMigrators(A,Yz),n<=1&&this.callMigrators(A,wz),n<7&&this.callMigrators(A,xz),n===8&&I<=2&&this.callMigrators(A,Zz))}};o(wF,"SystemVersionConverter");let kP=wF;const vF=class vF extends WS{applyMigration(A,s){const[R,n,I]=s;R===1&&(n===0&&I<=4&&this.callMigrators(A,Wz),n<=1&&this.callMigrators(A,vz),n<7&&this.callMigrators(A,bz))}};o(vF,"SettingsVersionConverter");let ZP=vF;const wi=[e.BULBASAUR,e.CHARMANDER,e.SQUIRTLE,e.CHIKORITA,e.CYNDAQUIL,e.TOTODILE,e.TREECKO,e.TORCHIC,e.MUDKIP,e.TURTWIG,e.CHIMCHAR,e.PIPLUP,e.SNIVY,e.TEPIG,e.OSHAWOTT,e.CHESPIN,e.FENNEKIN,e.FROAKIE,e.ROWLET,e.LITTEN,e.POPPLIO,e.GROOKEY,e.SCORBUNNY,e.SOBBLE,e.SPRIGATITO,e.FUECOCO,e.QUAXLY],EU="x0i2O7WRiANTqPmZ";function er(E,A=0){switch(E){case gE.SYSTEM:return"data";case gE.SESSION:{let s="sessionData";return A&&(s+=A),s}case gE.SETTINGS:return"settings";case gE.TUTORIALS:return"tutorials";case gE.SEEN_DIALOGUES:return"seenDialogues";case gE.RUN_HISTORY:return"runHistoryData"}}o(er,"getDataTypeKey");function tr(E,A){return(A?s=>btoa(s):s=>Hr.AES.encrypt(s,EU))(E)}o(tr,"encrypt");function Di(E,A){return(A?s=>atob(s):s=>Hr.AES.decrypt(s,EU).toString(Hr.enc.Utf8))(E)}o(Di,"decrypt");const de={NON_SHINY:1n,SHINY:2n,MALE:4n,FEMALE:8n,DEFAULT_VARIANT:16n,VARIANT_2:32n,VARIANT_3:64n,DEFAULT_FORM:128n},hE={ABILITY_1:1,ABILITY_2:2,ABILITY_HIDDEN:4},R7="{}";let XP=R7;function O7(){return JSON.parse(XP=localStorage.getItem(`starterPrefs_${Ut==null?void 0:Ut.username}`)||R7)}o(O7,"loadStarterPreferences");function Jz(E){const A=JSON.stringify(E);A!==XP&&(localStorage.setItem(`starterPrefs_${Ut==null?void 0:Ut.username}`,A),XP=A)}o(Jz,"saveStarterPreferences");const pl={seenAttr:"$sa",caughtAttr:"$ca",natureAttr:"$na",seenCount:"$s",caughtCount:"$c",hatchedCount:"$hc",ivs:"$i",moveset:"$m",eggMoves:"$em",candyCount:"$x",friendship:"$f",abilityAttr:"$a",passiveAttr:"$pa",valueReduction:"$vr",classicWinCount:"$wc"},VF=class VF{constructor(){this.loadSettings(),this.loadGamepadSettings(),this.loadMappingConfigs(),this.trainerId=YA(65536),this.secretId=YA(65536),this.starterData={},this.gameStats=new AU,this.runHistory={},this.unlocks={[Qs.ENDLESS_MODE]:!1,[Qs.MINI_BLACK_HOLE]:!1,[Qs.SPLICED_ENDLESS_MODE]:!1,[Qs.EVIOLITE]:!1},this.achvUnlocks={},this.voucherUnlocks={},this.voucherCounts={[uE.REGULAR]:0,[uE.PLUS]:0,[uE.PREMIUM]:0,[uE.GOLDEN]:0},this.eggs=[],this.eggPity=[0,0,0,0],this.unlockPity=[0,0,0,0],this.initDexData(),this.initStarterData()}getSystemSaveData(){return{trainerId:this.trainerId,secretId:this.secretId,gender:this.gender,dexData:this.dexData,starterData:this.starterData,gameStats:this.gameStats,unlocks:this.unlocks,achvUnlocks:this.achvUnlocks,voucherUnlocks:this.voucherUnlocks,voucherCounts:this.voucherCounts,eggs:this.eggs.map(A=>new tU(A)),gameVersion:a.game.config.gameVersion,timestamp:new Date().getTime(),eggPity:this.eggPity.slice(0),unlockPity:this.unlockPity.slice(0)}}isUnlocked(A){return xe.ITEM_UNLOCK_OVERRIDE.includes(A)?!0:this.unlocks[A]}saveSystem(){return new Promise(A=>{a.ui.savingIcon.show();const s=this.getSystemSaveData(),R=2147483648,n=JSON.stringify(s,(I,r)=>typeof r=="bigint"?r<=R?Number(r):r.toString():r);localStorage.setItem(`data_${Ut==null?void 0:Ut.username}`,tr(n,OR)),a.ui.savingIcon.hide(),A(!0)})}loadSystem(){return new Promise(A=>{if(!localStorage.getItem(`data_${Ut==null?void 0:Ut.username}`))return A(!1);this.initSystem(Di(localStorage.getItem(`data_${Ut==null?void 0:Ut.username}`),OR)).then(A)})}initSystem(A,s){return new Promise(R=>{try{let n=this.parseSystemData(A);if(s){const L=this.parseSystemData(s);L.timestamp>n.timestamp?(console.debug("Use cached system"),n=L,A=s):this.clearLocalData()}console.debug(n),localStorage.setItem(`data_${Ut==null?void 0:Ut.username}`,tr(A,OR));const I=`runHistoryData_${Ut==null?void 0:Ut.username}`;if(localStorage.getItem(I)||localStorage.setItem(I,""),Xz(n),this.trainerId=n.trainerId,this.secretId=n.secretId,this.gender=n.gender,this.saveSetting(St.Player_Gender,n.gender===Jt.FEMALE?1:0),n.starterData)this.starterData=n.starterData;else{if(this.initStarterData(),n.starterMoveData){const N=n.starterMoveData;for(const l of Object.keys(N))this.starterData[l].moveset=N[l]}if(n.starterEggMoveData){const N=n.starterEggMoveData;for(const l of Object.keys(N))this.starterData[l].eggMoves=N[l]}this.migrateStarterAbilities(n,this.starterData);const L=Object.keys(this.starterData).map(N=>Number.parseInt(N));for(const N of L)this.starterData[N].candyCount+=n.dexData[N].caughtCount,this.starterData[N].candyCount+=n.dexData[N].hatchedCount*2,n.dexData[N].caughtAttr&de.SHINY&&(this.starterData[N].candyCount+=4)}if(n.gameStats&&(this.gameStats=n.gameStats),n.unlocks)for(const L of Object.keys(n.unlocks))this.unlocks.hasOwnProperty(L)&&(this.unlocks[L]=n.unlocks[L]);if(n.achvUnlocks)for(const L of Object.keys(n.achvUnlocks))ht.hasOwnProperty(L)&&(this.achvUnlocks[L]=n.achvUnlocks[L]);if(n.voucherUnlocks)for(const L of Object.keys(n.voucherUnlocks))Us.hasOwnProperty(L)&&(this.voucherUnlocks[L]=n.voucherUnlocks[L]);n.voucherCounts&&$R(uE).forEach(L=>{const N=uE[L];this.voucherCounts[N]=n.voucherCounts[N]||0}),this.eggs=n.eggs?n.eggs.map(L=>L.toEgg()):[],this.eggPity=n.eggPity?n.eggPity.slice(0):[0,0,0,0],this.unlockPity=n.unlockPity?n.unlockPity.slice(0):[0,0,0,0],this.dexData=Object.assign(this.dexData,n.dexData),this.consolidateDexData(this.dexData),this.defaultDexData=null,R(!0)}catch(n){console.error(n),R(!1)}})}async getRunHistoryData(){if(!ji){const R=`runHistoryData_${Ut==null?void 0:Ut.username}`,n=localStorage.getItem(R);if(n){const I=n;return I?JSON.parse(Di(I,OR)):{}}return localStorage.setItem(`runHistoryData_${Ut==null?void 0:Ut.username}`,""),{}}const A=`runHistoryData_${Ut==null?void 0:Ut.username}`,s=localStorage.getItem(A);if(s){const R=s;return R?JSON.parse(Di(R,OR)):{}}return localStorage.setItem(`runHistoryData_${Ut==null?void 0:Ut.username}`,""),{}}async saveRunHistory(A,s){const R=await this.getRunHistoryData();let n=Object.keys(R).map(Number);for(;n.length>=LJ;){const r=Math.min.apply(Math,n).toString();delete R[r],n=Object.keys(R).map(Number)}const I=A.timestamp.toString();return R[I]={entry:A,isVictory:s,isFavorite:!1},localStorage.setItem(`runHistoryData_${Ut==null?void 0:Ut.username}`,tr(JSON.stringify(R),OR)),!0}parseSystemData(A){return JSON.parse(A,(s,R)=>{if(s==="gameStats")return new AU(R);if(s==="eggs"){const n=[];R===null&&(R=[]);for(const I of R)n.push(new tU(I));return n}return s.endsWith("Attr")&&!["natureAttr","abilityAttr","passiveAttr"].includes(s)?BigInt(R??0):R})}convertSystemDataStr(A,s=!1){s||(A=A.replace(/\$pAttr/g,"$pa")),A=A.replace(/"trainerId":\d+/g,`"trainerId":${this.trainerId}`),A=A.replace(/"secretId":\d+/g,`"secretId":${this.secretId}`);const R=s?Object.keys(pl):Object.values(pl),n=s?Object.values(pl):Object.keys(pl);for(const I in R)A=A.replace(new RegExp(`${R[I].replace("$","\\$")}`,"g"),n[I]);return A}async verify(){return!0}clearLocalData(){}saveSetting(A,s){let R={};return localStorage.hasOwnProperty("settings")&&(R=JSON.parse(localStorage.getItem("settings"))),N_(A,s),R[A]=s,R.gameVersion=a.game.config.gameVersion,localStorage.setItem("settings",JSON.stringify(R)),!0}saveMappingConfigs(A,s){const R=A.toLowerCase();let n={};return localStorage.hasOwnProperty("mappingConfigs")&&(n=JSON.parse(localStorage.getItem("mappingConfigs"))),n[R]||(n[R]={}),n[R].custom=s.custom,localStorage.setItem("mappingConfigs",JSON.stringify(n)),!0}loadMappingConfigs(){if(!localStorage.hasOwnProperty("mappingConfigs"))return!1;const A=JSON.parse(localStorage.getItem("mappingConfigs"));for(const s of Object.keys(A))a.inputController.injectConfig(s,A[s]);return!0}resetMappingToFactory(){return localStorage.hasOwnProperty("mappingConfigs")?(localStorage.removeItem("mappingConfigs"),a.inputController.resetConfigs(),!0):!1}saveControlSetting(A,s,R,n,I){let r={};return localStorage.hasOwnProperty(s)&&(r=JSON.parse(localStorage.getItem(s))),A===oA.GAMEPAD?Ql(R,I):A===oA.KEYBOARD&&_k(R,I),Object.keys(n).forEach(L=>{L===R&&(r[L]=I)}),localStorage.setItem(s,JSON.stringify(r)),!0}loadSettings(){if(I$(),!localStorage.hasOwnProperty("settings"))return!1;const A=JSON.parse(localStorage.getItem("settings"));$z(A);for(const s of Object.keys(A))N_(s,A[s]);return!0}loadGamepadSettings(){if(Object.values(We).map(s=>s).forEach(s=>Ql(s,jk[s])),!localStorage.hasOwnProperty("settingsGamepad"))return!1;const A=JSON.parse(localStorage.getItem("settingsGamepad"));for(const s of Object.keys(A))Ql(s,A[s]);return!0}saveTutorialFlag(A,s){const R=er(gE.TUTORIALS);let n={};return localStorage.hasOwnProperty(R)&&(n=JSON.parse(localStorage.getItem(R))),Object.keys(LO).map(I=>I).forEach(I=>{const r=LO[I];r===A?n[r]=s:n[r]??(n[r]=!1)}),localStorage.setItem(R,JSON.stringify(n)),!0}getTutorialFlags(){const A=er(gE.TUTORIALS),s={};if(Object.values(LO).map(n=>n).forEach(n=>s[LO[n]]=!1),!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const n of Object.keys(R))s[n]=R[n];return s}saveSeenDialogue(A){const s=er(gE.SEEN_DIALOGUES),R=this.getSeenDialogues();return R[A]=!0,localStorage.setItem(s,JSON.stringify(R)),!0}getSeenDialogues(){const A=er(gE.SEEN_DIALOGUES),s={};if(!localStorage.hasOwnProperty(A))return s;const R=JSON.parse(localStorage.getItem(A));for(const n of Object.keys(R))s[n]=R[n];return s}getSessionSaveData(){var A;return{seed:a.seed,playTime:a.sessionPlayTime,gameMode:a.gameMode.modeId,party:a.getPlayerParty().map(s=>new Ks(s)),enemyParty:a.getEnemyParty().map(s=>new Ks(s)),modifiers:a.findModifiers(()=>!0).map(s=>new AI(s,!0)),enemyModifiers:a.findModifiers(()=>!0,!1).map(s=>new AI(s,!1)),arena:new lS(a.arena),pokeballCounts:a.pokeballCounts,money:Math.floor(a.money),score:a.score,waveIndex:a.currentBattle.waveIndex,battleType:a.currentBattle.battleType,trainer:a.currentBattle.battleType===Ht.TRAINER?new SS(a.currentBattle.trainer):null,gameVersion:a.game.config.gameVersion,timestamp:new Date().getTime(),challenges:a.gameMode.challenges.map(s=>new TS(s)),mysteryEncounterType:((A=a.currentBattle.mysteryEncounter)==null?void 0:A.encounterType)??-1,mysteryEncounterSaveData:a.mysteryEncounterSaveData,playerFaints:a.arena.playerFaints}}getSession(A){return new Promise(async(s,R)=>{if(A<0)return s(null);const n=o(async I=>{try{const r=this.parseSessionData(I);s(r)}catch(r){R(r);return}},"handleSessionData");{const I=localStorage.getItem(`sessionData${A||""}_${Ut==null?void 0:Ut.username}`);if(I)await n(Di(I,OR));else return s(null)}})}loadSession(A,s){return new Promise(async(R,n)=>{try{const I=o(async r=>{var M,h,_,d,f;console.debug(r),a.gameMode=QC(r.gameMode||hA.CLASSIC),r.challenges&&(a.gameMode.challenges=r.challenges.map(H=>H.toChallenge())),a.setSeed(r.seed||a.game.config.seed[0]),a.resetSeed(),a.seed,a.sessionPlayTime=r.playTime||0,a.lastSavePlayTime=0;const L=[],N=a.getPlayerParty();N.splice(0,N.length);for(const H of r.party){const B=H.toPokemon();B.setVisible(!1),L.push(B.loadAssets()),N.push(B)}Object.keys(a.pokeballCounts).forEach(H=>{a.pokeballCounts[H]=r.pokeballCounts[H]||0}),xe.POKEBALL_OVERRIDE.active&&(a.pokeballCounts=xe.POKEBALL_OVERRIDE.pokeballs),a.money=Math.floor(r.money||0),a.updateMoneyText(),a.money>this.gameStats.highestMoney&&(this.gameStats.highestMoney=a.money),a.score=r.score,a.updateScoreText(),a.mysteryEncounterSaveData=new Qr(r.mysteryEncounterSaveData),a.newArena(r.arena.biome,r.playerFaints);const l=r.battleType||0,C=r.trainer?tE[r.trainer.trainerType]:null,U=r.mysteryEncounterType!==-1?r.mysteryEncounterType:void 0,D=a.newBattle(r.waveIndex,l,r.trainer,l===Ht.TRAINER?(C==null?void 0:C.doubleOnly)||((M=r.trainer)==null?void 0:M.variant)===LA.DOUBLE:r.enemyParty.length>1,U);if(D.enemyLevels=r.enemyParty.map(H=>H.level),a.arena.init(),r.enemyParty.forEach((H,B)=>{var Y;const K=H.toPokemon(l,B,((Y=r.trainer)==null?void 0:Y.variant)===LA.DOUBLE);D.enemyParty[B]=K,l===Ht.WILD&&D.seenEnemyPartyMemberIds.add(K.id),L.push(K.loadAssets())}),a.arena.weather=r.arena.weather,a.arena.eventTarget.dispatchEvent(new ya(Oe.NONE,(h=a.arena.weather)==null?void 0:h.weatherType,(_=a.arena.weather)==null?void 0:_.turnsLeft)),a.arena.terrain=r.arena.terrain,a.arena.eventTarget.dispatchEvent(new FS(Nt.NONE,(d=a.arena.terrain)==null?void 0:d.terrainType,(f=a.arena.terrain)==null?void 0:f.turnsLeft)),a.arena.playerTerasUsed=r.arena.playerTerasUsed,a.arena.tags=r.arena.tags,a.arena.tags)for(const H of a.arena.tags)if(H instanceof lO){const{tagType:B,side:K,turnCount:Y,layers:v,maxLayers:Z}=H;a.arena.eventTarget.dispatchEvent(new UI(B,K,Y,v,Z))}else a.arena.eventTarget.dispatchEvent(new UI(H.tagType,H.side,H.turnCount));for(const H of r.modifiers){const B=H.toModifier(KC[H.className]);B&&a.addModifier(B,!0)}a.updateModifiers(!0);for(const H of r.enemyModifiers){const B=H.toModifier(KC[H.className]);B&&a.addEnemyModifier(B,!0)}a.updateModifiers(!1),Promise.all(L).then(()=>R(!0))},"initSessionFromData");s?I(s):this.getSession(A).then(r=>r&&I(r)).catch(r=>{n(r)})}catch(I){n(I);return}})}deleteSession(A){return new Promise(s=>(localStorage.removeItem(`sessionData${A||""}_${Ut==null?void 0:Ut.username}`),s(!0)))}offlineNewClear(){return new Promise(A=>{const s=this.getSessionSaveData(),R=s.seed;let n=[];return s.gameMode===hA.DAILY?localStorage.hasOwnProperty("daily")?(n=JSON.parse(atob(localStorage.getItem("daily"))),n.includes(R)?A(!1):(n.push(R),localStorage.setItem("daily",btoa(JSON.stringify(n))),A(!0))):(n.push(R),localStorage.setItem("daily",btoa(JSON.stringify(n))),A(!0)):A(!0)})}async tryClearSession(A){let s=[!1,!1];return localStorage.removeItem(`sessionData${A||""}_${Ut==null?void 0:Ut.username}`),s=[!0,!0],await uu(),s}parseSessionData(A){const s=JSON.parse(A,(R,n)=>{if(R==="party"||R==="enemyParty"){const I=[];n===null&&(n=[]);for(const r of n)I.push(new Ks(r));return I}if(R==="trainer")return n?new SS(n):null;if(R==="modifiers"||R==="enemyModifiers"){const I=R==="modifiers",r=[];n===null&&(n=[]);for(const L of n)(L==null?void 0:L.className)==="ExpBalanceModifier"&&(L.stackCount=Math.min(L.stackCount,4)),!(L instanceof PL&&L.effect===re.FREEZE||L.effect===re.SLEEP)&&r.push(new AI(L,I));return r}if(R==="arena")return new lS(n);if(R==="challenges"){const I=[];n===null&&(n=[]);for(const r of n)I.push(new TS(r));return I}return R==="mysteryEncounterType"?n:R==="mysteryEncounterSaveData"?new Qr(n):n});return Qz(s),s}saveAll(A=!1,s=!1,R=!1,n=!1){return new Promise(I=>{Ak(!A,uu).then(r=>{if(r!==null&&!r)return I(!1);s&&a.ui.savingIcon.show();const L=R?this.parseSessionData(Di(localStorage.getItem(`sessionData${a.sessionSlotId?a.sessionSlotId:""}_${Ut==null?void 0:Ut.username}`),OR)):this.getSessionSaveData(),N=2147483648,l=n?this.parseSystemData(Di(localStorage.getItem(`data_${Ut==null?void 0:Ut.username}`),OR)):this.getSystemSaveData();a.sessionSlotId,localStorage.setItem(`data_${Ut==null?void 0:Ut.username}`,tr(JSON.stringify(l,(C,U)=>typeof U=="bigint"?U<=N?Number(U):U.toString():U),OR)),localStorage.setItem(`sessionData${a.sessionSlotId?a.sessionSlotId:""}_${Ut==null?void 0:Ut.username}`,tr(JSON.stringify(L),OR)),console.debug("Session data saved"),this.verify().then(C=>{a.ui.savingIcon.hide(),I(C)})})})}tryExportData(A,s=0){return new Promise(R=>{const n=`${er(A,s)}_${Ut==null?void 0:Ut.username}`,I=o(r=>{switch(A){case gE.SYSTEM:r=this.convertSystemDataStr(r,!0);break}const L=Hr.AES.encrypt(r,EU),N=new Blob([L.toString()],{type:"text/json"}),l=document.createElement("a");l.href=window.URL.createObjectURL(N),l.download=`${n}.prsv`,l.click(),l.remove()},"handleData");{const r=localStorage.getItem(n);r&&I(Di(r,OR)),R(!!r)}})}importData(A,s=0){const R=`${er(A,s)}_${Ut==null?void 0:Ut.username}`;let n=document.getElementById("saveFile");n&&n.remove(),n=document.createElement("input"),n.id="saveFile",n.type="file",n.accept=".prsv",n.style.display="none",n.addEventListener("change",I=>{const r=new FileReader;r.onload=(L=>N=>{var D,M;let l,C=Hr.AES.decrypt((M=(D=N.target)==null?void 0:D.result)==null?void 0:M.toString(),EU).toString(Hr.enc.Utf8),U=!1;try{switch(l=gE[A].toLowerCase(),A){case gE.SYSTEM:{C=this.convertSystemDataStr(C);const h=this.parseSystemData(C);U=!!h.dexData&&!!h.timestamp;break}case gE.SESSION:{const h=this.parseSessionData(C);U=!!h.party&&!!h.enemyParty&&!!h.timestamp;break}case gE.RUN_HISTORY:{const h=JSON.parse(C),_=Object.keys(h);l=u.t("menuUiHandler:RUN_HISTORY").toLowerCase(),_.forEach(d=>{const f=Object.keys(h[d]);U=["isFavorite","isVictory","entry"].every(H=>f.includes(H))&&f.length===3});break}case gE.SETTINGS:case gE.TUTORIALS:U=!0;break}}catch(h){console.error(h)}if(l=l,!U)return a.ui.showText(`Your ${l} data could not be loaded. It may be corrupted.`,null,()=>a.ui.showText("",0),Ot(1500));a.ui.showText(`Your ${l} data will be overridden and the page will reload. Proceed?`,null,()=>{a.ui.setOverlayMode(te.CONFIRM,()=>{localStorage.setItem(R,tr(C,OR)),window.location.reload()},()=>{a.ui.revertMode(),a.ui.showText("",0)},!1,-98)})})(I.target.files[0]),r.readAsText(I.target.files[0])}),n.click()}initDexData(){const A={};for(const n of qA)A[n.speciesId]={seenAttr:0n,caughtAttr:0n,natureAttr:0,seenCount:0,caughtCount:0,hatchedCount:0,ivs:[0,0,0,0,0,0]};const s=de.NON_SHINY|de.MALE|de.FEMALE|de.DEFAULT_VARIANT|de.DEFAULT_FORM,R=[];a.executeWithSeedOffset(()=>{const n=[rt.HARDY,rt.DOCILE,rt.SERIOUS,rt.BASHFUL,rt.QUIRKY];for(let I=0;I<wi.length;I++)R.push(eE(n))},0,"default");for(let n=0;n<wi.length;n++){const I=A[wi[n]];I.seenAttr=s,I.caughtAttr=s,I.natureAttr=1<<R[n]+1;for(const r in I.ivs)I.ivs[r]=15}this.defaultDexData=Object.assign({},A),this.dexData=A}initStarterData(){const A={},s=Object.keys(tA).map(R=>Number.parseInt(R));for(const R of s)A[R]={moveset:null,eggMoves:0,candyCount:0,friendship:0,abilityAttr:wi.includes(R)?hE.ABILITY_1:0,passiveAttr:0,valueReduction:0,classicWinCount:0};this.starterData=A}setPokemonSeen(A,s=!0,R=!1){var I,r;if((I=a.currentBattle)!=null&&I.isBattleMysteryEncounter()&&((r=a.currentBattle.mysteryEncounter)!=null&&r.preventGameStatsUpdates))return;const n=this.dexData[A.species.speciesId];n.seenAttr|=A.getDexAttr(),s&&(n.seenCount++,this.gameStats.pokemonSeen++,!R&&A.species.subLegendary?this.gameStats.subLegendaryPokemonSeen++:!R&&A.species.legendary?this.gameStats.legendaryPokemonSeen++:!R&&A.species.mythical&&this.gameStats.mythicalPokemonSeen++,!R&&A.isShiny()&&this.gameStats.shinyPokemonSeen++)}setPokemonCaught(A,s=!0,R=!1,n=!0){const I=A.species.getRootSpeciesId();return!s&&!a.gameData.dexData[I].caughtAttr?Promise.resolve(!1):this.setPokemonSpeciesCaught(A,A.species,s,R,n)}setPokemonSpeciesCaught(A,s,R=!0,n=!1,I=!0){return new Promise(r=>{const L=this.dexData[s.speciesId],N=L.caughtAttr,l=A.formIndex,C=A.getDexAttr()&s.getFullUnlocksData();L.caughtAttr|=C;const U=A.getFormKey();l>0&&(A.species.speciesId===e.PIKACHU&&s.speciesId===e.PICHU&&(L.caughtAttr|=a.gameData.getFormAttr(0)),A.species.speciesId===e.URSHIFU?l===2?L.caughtAttr|=a.gameData.getFormAttr(0):l===3&&(L.caughtAttr|=a.gameData.getFormAttr(1)):A.species.speciesId===e.ZYGARDE?l===4?L.caughtAttr|=a.gameData.getFormAttr(2):l===5&&(L.caughtAttr|=a.gameData.getFormAttr(3)):(mR.hasOwnProperty(s.speciesId)?mR[s.speciesId]:[]).filter(H=>H.formKey===U).length>0&&(L.caughtAttr|=a.gameData.getFormAttr(0))),tA.hasOwnProperty(s.speciesId)&&(this.starterData[s.speciesId].abilityAttr|=A.abilityIndex!==1||A.species.ability2?1<<A.abilityIndex:hE.ABILITY_HIDDEN),L.natureAttr|=1<<A.nature+1;const D=IA.hasOwnProperty(s.speciesId),M=!N,h=(N&C)!==C;R&&(n?(L.hatchedCount++,this.gameStats.pokemonHatched++,A.species.subLegendary?this.gameStats.subLegendaryPokemonHatched++:A.species.legendary?this.gameStats.legendaryPokemonHatched++:A.species.mythical&&this.gameStats.mythicalPokemonHatched++,A.isShiny()&&this.gameStats.shinyPokemonHatched++):(L.caughtCount++,this.gameStats.pokemonCaught++,A.species.subLegendary?this.gameStats.subLegendaryPokemonCaught++:A.species.legendary?this.gameStats.legendaryPokemonCaught++:A.species.mythical&&this.gameStats.mythicalPokemonCaught++,A.isShiny()&&this.gameStats.shinyPokemonCaught++),!D&&(!a.gameMode.isDaily||h||n)&&this.addStarterCandy(s,1*(A.isShiny()?5*(1<<(A.variant??0)):1)*(n||A.isBoss()?2:1)));const _=o(d=>{if(D){const f=IA[s.speciesId];this.setPokemonSpeciesCaught(A,$e(f),R,n,I).then(H=>r(H))}else r(d)},"checkPrevolution");if(M&&tA.hasOwnProperty(s.speciesId)){if(!I){r(!0);return}a.playSound("level_up_fanfare"),a.ui.showText(u.t("battle:addedAsAStarter",{pokemonName:s.name}),null,()=>_(!0),null,!0)}else _(!1)})}incrementRibbonCount(A,s=!1){const R=A.getRootSpeciesId(s);this.starterData[R].classicWinCount||(this.starterData[R].classicWinCount=0),this.starterData[R].classicWinCount||a.gameData.gameStats.ribbonsOwned++;const n=a.gameData.gameStats.ribbonsOwned;return n>=100&&a.validateAchv(ht._100_RIBBONS),n>=75&&a.validateAchv(ht._75_RIBBONS),n>=50&&a.validateAchv(ht._50_RIBBONS),n>=25&&a.validateAchv(ht._25_RIBBONS),n>=10&&a.validateAchv(ht._10_RIBBONS),++this.starterData[R].classicWinCount}addStarterCandy(A,s){const R=A.getRootSpeciesId();a.gameData.dexData[R].caughtAttr&&(a.candyBar.showStarterSpeciesCandy(A.speciesId,s),this.starterData[A.speciesId].candyCount+=s)}setEggMoveUnlocked(A,s,R=!0,n=!1){return new Promise(I=>{const r=A.speciesId;if(!_E.hasOwnProperty(r)||!_E[r][s]){I(!1);return}this.starterData[r].eggMoves||(this.starterData[r].eggMoves=0);const L=1<<s;if(this.starterData[r].eggMoves&L){I(!1);return}if(this.starterData[r].eggMoves|=L,!R){I(!0);return}a.playSound("level_up_fanfare");const N=Ve[_E[r][s]].name;let l=n?A.getName()+" ":"";l+=s===3?u.t("egg:rareEggMoveUnlock",{moveName:N}):u.t("egg:eggMoveUnlock",{moveName:N}),a.ui.showText(l,null,()=>I(!0),null,!0)})}isRootSpeciesUnlocked(A){var s;return!!((s=this.dexData[A.getRootSpeciesId()])!=null&&s.caughtAttr)}unlockSpeciesNature(A,s){if(!this.isRootSpeciesUnlocked(A))return;const R=o(n=>{this.dexData[n].natureAttr|=1<<s+1,IA.hasOwnProperty(n)&&R(IA[n])},"_unlockSpeciesNature");R(A.speciesId)}updateSpeciesDexIvs(A,s){let R;do{R=a.gameData.dexData[A];const n=R.ivs;for(let I=0;I<n.length;I++)n[I]<s[I]&&(n[I]=s[I]);n.filter(I=>I===31).length===6&&a.validateAchv(ht.PERFECT_IVS)}while(IA.hasOwnProperty(A)&&(A=IA[A]))}getSpeciesCount(A){const s=Object.keys(this.dexData);let R=0;for(const n of s)A(this.dexData[n])&&R++;return R}getStarterCount(A){const s=Object.keys(tA);let R=0;for(const n of s){const I=this.dexData[n];A(I)&&R++}return R}getSpeciesDefaultDexAttr(A,s=!1,R=!1){let n=0n;const r=this.dexData[A.speciesId].caughtAttr;return R?r&de.SHINY?(n|=de.SHINY,r&de.VARIANT_3?n|=de.VARIANT_3:r&de.VARIANT_2?n|=de.VARIANT_2:n|=de.DEFAULT_VARIANT):(n|=de.NON_SHINY,n|=de.DEFAULT_VARIANT):(n|=r&de.NON_SHINY||!(r&de.SHINY)?de.NON_SHINY:de.SHINY,r&de.DEFAULT_VARIANT?n|=de.DEFAULT_VARIANT:r&de.VARIANT_2?n|=de.VARIANT_2:r&de.VARIANT_3?n|=de.VARIANT_3:n|=de.DEFAULT_VARIANT),n|=r&de.MALE||!(r&de.FEMALE)?de.MALE:de.FEMALE,n|=this.getFormAttr(this.getFormIndex(r)),n}getSpeciesDexAttrProps(A,s){const R=!(s&de.NON_SHINY),n=!(s&de.MALE);let I=0;s&de.DEFAULT_VARIANT?I=0:s&de.VARIANT_2?I=1:s&de.VARIANT_3&&(I=2);const r=this.getFormIndex(s);return{shiny:R,female:n,variant:I,formIndex:r}}getStarterSpeciesDefaultAbilityIndex(A){const s=this.starterData[A.speciesId].abilityAttr;return s&hE.ABILITY_1?0:!A.ability2||s&hE.ABILITY_2?1:2}getSpeciesDefaultNature(A){const s=this.dexData[A.speciesId];for(let R=0;R<25;R++)if(s.natureAttr&1<<R+1)return R;return 0}getSpeciesDefaultNatureAttr(A){return 1<<this.getSpeciesDefaultNature(A)}getDexAttrLuck(A){return A&de.SHINY?A&de.VARIANT_3?3:A&de.VARIANT_2?2:1:0}getNaturesForAttr(A=0){const s=[];for(let R=0;R<25;R++)A&1<<R+1&&s.push(R);return s}getSpeciesStarterValue(A){let R=tA[A];const n=o(r=>(r>1?r--:r/=2,r),"decrementValue");for(let r=0;r<this.starterData[A].valueReduction;r++)R=n(R);const I=new je(R);return PR(rO.STARTER_COST,A,I),I.value}getFormIndex(A){if(!A||A<de.DEFAULT_FORM)return 0;let s=0;for(;!(A&this.getFormAttr(s));)s++;return s}getFormAttr(A){return BigInt(1)<<BigInt(7+A)}consolidateDexData(A){var s;for(const R of Object.keys(A)){const n=A[R];n.hasOwnProperty("hatchedCount")||(n.hatchedCount=0),(!n.hasOwnProperty("natureAttr")||n.caughtAttr&&!n.natureAttr)&&(n.natureAttr=((s=this.defaultDexData)==null?void 0:s[R].natureAttr)||1<<YA(25,1))}}migrateStarterAbilities(A,s){const R=Object.keys(this.starterData).map(r=>Number.parseInt(r)),n=s||A.starterData,I=A.dexData;for(const r of R){const L=I[r].caughtAttr;n[r].abilityAttr=(L&de.DEFAULT_VARIANT?hE.ABILITY_1:0)|(L&de.VARIANT_2?hE.ABILITY_2:0)|(L&de.VARIANT_3?hE.ABILITY_HIDDEN:0),L&&(L&de.DEFAULT_VARIANT||(I[r].caughtAttr^=de.DEFAULT_VARIANT),L&de.VARIANT_2&&(I[r].caughtAttr^=de.VARIANT_2),L&de.VARIANT_3&&(I[r].caughtAttr^=de.VARIANT_3))}}};o(VF,"GameData");let sU=VF;var n7=(E=>(E[E.NORMAL=0]="NORMAL",E[E.ALOLA=1]="ALOLA",E[E.GALAR=2]="GALAR",E[E.HISUI=3]="HISUI",E[E.PALDEA=4]="PALDEA",E))(n7||{});const a7=[e.PIKACHU,e.RAICHU,e.EEVEE,e.JOLTEON,e.FLAREON,e.VAPOREON,e.ESPEON,e.UMBREON,e.LEAFEON,e.GLACEON,e.SYLVEON,e.PICHU,e.ROTOM,e.DIALGA,e.PALKIA,e.KYUREM,e.GENESECT,e.FROAKIE,e.FROGADIER,e.GRENINJA,e.ROCKRUFF,e.NECROZMA,e.MAGEARNA,e.MARSHADOW,e.CRAMORANT,e.ZARUDE,e.CALYREX];function $e(E){return Array.isArray(E)&&(E=E[Math.floor(Math.random()*E.length)]),E>=2e3?qA.find(A=>A.speciesId===E):qA[E-1]}o($e,"getPokemonSpecies");function ms(E,A){var R;const s=E>=2e3?qA.find(n=>n.speciesId===E):qA[E-1];return A<((R=s.forms)==null?void 0:R.length)?s.forms[A]:s}o(ms,"getPokemonSpeciesForm");function zz(E,A){const s=/([a-z]{2}.*?[aeiou(?:y$)\-\']+)(.*?)$/i,R=/([a-z]{2}.*?[aeiou(?:y$)\-\'])(.*?)$/i,[n,I]=[E,A].map(H=>/^(?:[^ ]+) /.exec(H)),[r,L]=[n,I].map(H=>H?H[0]:"");r&&(E=E.slice(r.length)),L&&(A=A.slice(L.length));const[N,l]=[E,A].map(H=>/ (?:[^ ]+)$/.exec(H)),[C,U]=[N,l].map(H=>H?H[0]:"");C&&(E=E.slice(0,-C.length)),U&&(A=A.slice(0,-U.length));const D=E.split(/ /g),M=A.split(/ /g),h=s.exec(E),_=R.exec(A);let d,f;if(d=D.length===1?h?h[1]:E:D[D.length-1],M.length===1)if(_){const H=d.slice(d.length-1),B=_[1].slice(_.length-1);if(f=(/[\-']/.test(B)?B:"")+_[2]||B,H===f[0])if(/[aiu]/.test(H))f=f.slice(1);else{const K=new RegExp(`[^${H}]`).exec(f);(K==null?void 0:K.index)!==void 0&&K.index>0&&(f=f.slice(K.index))}}else f=A;else f=M[M.length-1];return D.length>1&&(d=`${D.slice(0,D.length-1).join(" ")} ${d}`),f=`${f.slice(0,1).toLowerCase()}${f.slice(1)}`,`${r||L}${d}${f}${U||C}`}o(zz,"getFusedSpeciesName");const xF=class xF{constructor(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B){this.type1=A,this.type2=s,this.height=R,this.weight=n,this.ability1=I,this.ability2=r===O.NONE?I:r,this.abilityHidden=L,this.baseTotal=N,this.baseStats=[l,C,U,D,M,h],this.catchRate=_,this.baseFriendship=d,this.baseExp=f,this.genderDiffs=H,this.isStarterSelectable=B}getRootSpeciesId(A=!1){let s=this.speciesId;for(;IA.hasOwnProperty(s)&&(!A||!tA.hasOwnProperty(s));)s=IA[s];return s}get generation(){return this._generation}set generation(A){this._generation=A}get formIndex(){return this._formIndex}set formIndex(A){this._formIndex=A}isOfType(A){return this.type1===A||this.type2!==null&&this.type2===A}getAbilityCount(){return this.abilityHidden!==O.NONE?3:2}getAbility(A){let s;return A===0?s=this.ability1:A===1?s=this.ability2:s=this.abilityHidden,s}getPassiveAbility(A){Pe(A)&&(A=this.formIndex);let s=this.speciesId;for(;!(s in qO)||!(A in qO[s]);)if(IA.hasOwnProperty(s))s=IA[s];else return 0 in qO[s]?qO[s][0]:(this.speciesId,O.RUN_AWAY);return qO[s][A]}getLevelMoves(){return iR.hasOwnProperty(this.speciesId)&&iR[this.speciesId].hasOwnProperty(this.formIndex)?iR[this.speciesId][this.formIndex].slice(0):vr[this.speciesId].slice(0)}getRegion(){return Math.floor(this.speciesId/2e3)}isObtainable(){return this.generation<=9||IA.hasOwnProperty(this.speciesId)}isCatchable(){return this.isObtainable()&&_7.indexOf(this.speciesId)===-1}isRegional(){return this.getRegion()>0}isTrainerForbidden(){return[e.ETERNAL_FLOETTE,e.BLOODMOON_URSALUNA].includes(this.speciesId)}isRareRegional(){switch(this.getRegion()){case 3:return!0}return!1}getBaseStatTotal(){return this.baseStats.reduce((A,s)=>s+A)}getBaseStat(A){return this.baseStats[A]}getBaseExp(){let A=this.baseExp;switch(this.getFormSpriteKey()){case Me.MEGA:case Me.MEGA_X:case Me.MEGA_Y:case Me.PRIMAL:case Me.GIGANTAMAX:case Me.ETERNAMAX:A*=1.5;break}return A}getSpriteAtlasPath(A,s,R,n,I){const r=this.getSpriteId(A,s,R,n,I).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(r)?"variant/":""}${r}`}getSpriteId(A,s,R,n=0,I){(s===void 0||this instanceof y)&&(s=this.formIndex);const r=this.getFormSpriteKey(s),N=`${this.genderDiffs&&A&&![Me.MEGA,Me.GIGANTAMAX].find(U=>r===U)?"female__":""}${this.speciesId}${r?`-${r}`:""}`;let l=aR;`${I?"back__":""}${N}`.split("__").map(U=>l?l=l[U]:null);const C=l;return`${I?"back__":""}${R&&(!C||!n&&!C[n||0])?"shiny__":""}${N}${R&&C&&C[n]===2?`_${n+1}`:""}`}getSpriteKey(A,s,R,n,I){return`pkmn__${this.getSpriteId(A,s,R,n,I)}`}getVariantDataIndex(A){var I;let s=null,R=this.speciesId;const n=$e(this.speciesId);return n.forms.length>0&&A!==void 0&&(s=(I=n.forms[A])==null?void 0:I.getFormSpriteKey(A),s&&(R=`${this.speciesId}-${s}`)),R}getIconAtlasKey(A,s,R){const n=this.getVariantDataIndex(A),I=s&&aR[n]&&R!==void 0&&aR[n][R];return`pokemon_icons_${this.generation}${I?"v":""}`}getIconId(A,s,R,n){s===void 0&&(s=this.formIndex);const I=this.getVariantDataIndex(s);let r=this.speciesId.toString();const L=R&&aR[I]&&n!==void 0&&aR[I][n];switch(R&&!L&&(r+="s"),this.speciesId){case e.DODUO:case e.DODRIO:case e.MEGANIUM:case e.TORCHIC:case e.COMBUSKEN:case e.BLAZIKEN:case e.HIPPOPOTAS:case e.HIPPOWDON:case e.UNFEZANT:case e.FRILLISH:case e.JELLICENT:case e.PYROAR:r+=A?"-f":"";break}let N=this.getFormSpriteKey(s);if(N)switch(this.speciesId){case e.DUDUNSPARCE:break;case e.ZACIAN:case e.ZAMAZENTA:N.startsWith("behemoth")&&(N="crowned");default:r+=`-${N}`;break}return L&&(r+=`_${n+1}`),r}getCryKey(A){let s=this.speciesId;if(this.speciesId>2e3)switch(this.speciesId){case e.GALAR_SLOWPOKE:break;case e.ETERNAL_FLOETTE:break;case e.BLOODMOON_URSALUNA:break;default:s=s%2e3;break}let R=s.toString();const n=$e(s).forms;if(n.length){A!==void 0&&A>=n.length&&(console.warn(`Attempted accessing form with index ${A} of species ${$e(s).getName()} with only ${n.length||0} forms`),A=Math.min(A,n.length-1));const I=n[A||0].formKey;switch(I){case Me.MEGA:case Me.MEGA_X:case Me.MEGA_Y:case Me.GIGANTAMAX:case Me.GIGANTAMAX_SINGLE:case Me.GIGANTAMAX_RAPID:case"white":case"black":case"therian":case"sky":case"gorging":case"gulping":case"no-ice":case"hangry":case"crowned":case"eternamax":case"four":case"droopy":case"stretchy":case"hero":case"roaming":case"complete":case"10-complete":case"10":case"10-pc":case"super":case"unbound":case"pau":case"pompom":case"sensu":case"dusk":case"midnight":case"school":case"dawn-wings":case"dusk-mane":case"ultra":R+=`-${I}`;break}}return`cry/${R}`}validateStarterMoveset(A,s){const R=this.getRootSpeciesId();for(const n of A){if(_E.hasOwnProperty(R)){const I=_E[R].findIndex(r=>r===n);if(I>-1&&s&1<<I)continue}if(iR.hasOwnProperty(this.speciesId)&&iR[this.speciesId].hasOwnProperty(this.formIndex)){if(!iR[this.speciesId][this.formIndex].find(I=>I[0]<=5&&I[1]===n))return!1}else if(!vr[this.speciesId].find(I=>I[0]<=5&&I[1]===n))return!1}return!0}loadAssets(A,s,R,n,I,r){return new Promise(L=>{const N=this.getSpriteKey(A,s,R,n,r);a.loadPokemonAtlas(N,this.getSpriteAtlasPath(A,s,R,n,r)),a.load.audio(`${this.getCryKey(s)}`,`audio/${this.getCryKey(s)}.m4a`),a.load.once(Phaser.Loader.Events.COMPLETE,()=>{const l=console.warn;console.warn=()=>{};const C=a.anims.generateFrameNames(N,{zeroPad:4,suffix:".png",start:1,end:400});console.warn=l,a.anims.exists(N)?a.anims.get(N).frameRate=10:a.anims.create({key:this.getSpriteKey(A,s,R,n,r),frames:C,frameRate:10,repeat:-1});const U=this.getSpriteAtlasPath(A,s,R,n,r).replace("variant/","").replace(/_[1-3]$/,"");a.loadPokemonVariantAssets(N,U,n).then(()=>L())}),I?a.load.isLoading()||a.load.start():L()})}cry(A,s){const R=this.getCryKey(this.formIndex);let n=a.sound.get(R);return n!=null&&n.pendingRemove&&(n=null),n=a.playSound(n??R,A),s&&n.stop(),n}generateCandyColors(){const A=a.textures.get(this.getSpriteKey(!1)),s=A.frames[A.firstFrame],R=A.getSourceImage(),n=document.createElement("canvas"),I=[],r=n.getContext("2d"),L=s;n.width=L.width,n.height=L.height,r==null||r.drawImage(R,L.cutX,L.cutY,L.width,L.height,0,0,L.width,L.height);const N=r==null?void 0:r.getImageData(L.cutX,L.cutY,L.width,L.height),l=N==null?void 0:N.data,C=[];if((l==null?void 0:l.length)!==void 0){for(let M=0;M<l.length;M+=4)if(l[M+3]){const h=l.slice(M,M+4),[_,d,f,H]=h;I.find(B=>B[0]===_&&B[1]===d&&B[2]===f)||I.push([_,d,f,H])}for(let M=0;M<l.length;M+=4)l.slice(M,M+3).reduce((_,d)=>_+d,0)&&C.push(Es({r:l[M],g:l[M+1],b:l[M+2],a:l[M+3]}))}let U=new Map;const D=Math.random;return Math.random=()=>Phaser.Math.RND.realInRange(0,1),a.executeWithSeedOffset(()=>{U=QT.quantize(C,2)},0,"This result should not vary"),Math.random=D,Array.from(U.keys()).map(M=>Object.values(Eh(M)))}};o(xF,"PokemonSpeciesForm");let RU=xF;const bF=class bF extends RU{constructor(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K,Y,v,Z,z,q,J,Ae,...Q){super(L,N,l,C,U,D,M,h,_,d,f,H,B,K,Y,v,Z,J,!1),this.speciesId=A,this.formIndex=0,this.generation=s,this.subLegendary=R,this.legendary=n,this.mythical=I,this.species=r,this.growthRate=z,this.malePercent=q,this.genderDiffs=J,this.canChangeForm=!!Ae,this.forms=Q,this.localize(),Q.forEach((Re,W)=>{Re.speciesId=A,Re.formIndex=W,Re.generation=s})}getName(A){if(A!==void 0&&this.forms.length){const s=this.forms[A];let R;switch(s.formKey){case Me.MEGA:case Me.PRIMAL:case Me.ETERNAMAX:case Me.MEGA_X:case Me.MEGA_Y:R=s.formKey;break;default:s.formKey.indexOf(Me.GIGANTAMAX)>-1?R="gigantamax":R=null}if(R)return u.t(`battlePokemonForm:${R}`,{pokemonName:this.name})}return this.name}getExpandedSpeciesName(){return this.speciesId<2e3?this.name:u.t(`pokemonForm:appendForm.${e[this.speciesId].split("_")[0]}`,{pokemonName:this.name})}getFormNameToDisplay(A=0,s=!1){var N,l;const R=(l=(N=this.forms)==null?void 0:N[A])==null?void 0:l.formKey,n=tc(R,"-",!1,!1)||"",I=tc(e[this.speciesId],"_",!0,!1);let r="";const L=this.getRegion();if(this.speciesId===e.ARCEUS)r=u.t(`pokemonInfo:Type.${n==null?void 0:n.toUpperCase()}`);else{if([Me.MEGA,Me.MEGA_X,Me.MEGA_Y,Me.PRIMAL,Me.GIGANTAMAX,Me.GIGANTAMAX_RAPID,Me.GIGANTAMAX_SINGLE,Me.ETERNAMAX].includes(R))return s?u.t(`battlePokemonForm:${R}`,{pokemonName:this.name}):u.t(`pokemonForm:battleForm.${R}`);if(L===0||this.speciesId===e.GALAR_DARMANITAN&&A>0||this.speciesId===e.PALDEA_TAUROS){const C=`pokemonForm:${I}${n}`;if(u.exists(C))r=u.t(C);else{const D=`pokemonForm:${tc(e[this.getRootSpeciesId()],"_",!0,!1)}${n}`;r=u.exists(D)?u.t(D):n}}else return s?this.getExpandedSpeciesName():this.speciesId===e.ETERNAL_FLOETTE?u.t("pokemonForm:floetteEternalFlower"):this.speciesId===e.BLOODMOON_URSALUNA?u.t("pokemonForm:ursalunaBloodmoon"):u.t(`pokemonForm:regionalForm.${n7[L]}`)}return s?u.t("pokemonForm:appendForm.GENERIC",{pokemonName:this.name,formName:r}):r}localize(){this.name=u.t(`pokemon:${e[this.speciesId].toLowerCase()}`)}getWildSpeciesForLevel(A,s,R,n){return this.getSpeciesForLevel(A,s,!1,(R?Ze.WEAKER:Ze.AVERAGE)+(n!=null&&n.isEndless?1:0))}getTrainerSpeciesForLevel(A,s=!1,R,n=0){return this.getSpeciesForLevel(A,s,!0,R,n)}getStrengthLevelDiff(A){switch(Math.min(A,Ze.STRONGER)){case Ze.WEAKEST:return 60;case Ze.WEAKER:return 40;case Ze.WEAK:return 20;case Ze.AVERAGE:return 8;case Ze.STRONG:return 4;default:return 0}}getSpeciesForLevel(A,s=!1,R=!1,n=Ze.WEAKER,I=0){var h;const r=this.getPrevolutionLevels();if(r.length)for(let _=r.length-1;_>=0;_--){const d=r[_];if(A<d[1])return d[0]}if(!s||!jt.hasOwnProperty(this.speciesId)||((h=a.currentBattle)==null?void 0:h.waveIndex)===20&&a.gameMode.isClassic&&a.currentBattle.trainer)return this.speciesId;const L=jt[this.speciesId],N=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn"),l=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut"),C=new Map;let U=0,D=1;for(const _ of L){if(_.level>A)continue;let d;const f=$e(_.speciesId),H=!this.isRegional()&&f.isRegional();if(!R&&H)d=0;else if(_.wildDelay===h7.NONE)if(n===Ze.STRONGER)d=1;else{const B=this.getStrengthLevelDiff(n),K=.875-.125*n;d=Math.min(K+N(Math.min(A-_.level,B)/B)*(1-K),1)}else{const B=Math.max(_.level-1+_.wildDelay*this.getStrengthLevelDiff(n),1);let K=Math.max(_.level>1?_.level:Math.floor(B/2),1);if(_.level<=1&&IA.hasOwnProperty(this.speciesId)){const Y=jt[IA[this.speciesId]].find(v=>v.speciesId===this.speciesId).level;Y>1&&(K=Y)}d=Math.min(.65*N(Math.min(Math.max(A-K,0),B)/B)+.35*l(Math.min(Math.max(A-K,0),B*2.5)/(B*2.5)),1)}I>=80&&R&&n>Ze.WEAKER&&(d=1,D=0),d>0&&(H&&(d/=f.isRareRegional()?16:4),U+=d,C.set(U,_.speciesId),1-d<D&&(D=1-d))}if(D===1||Phaser.Math.RND.realInRange(0,1)<D)return this.speciesId;const M=C.size===1?0:He(U);for(const _ of C.keys())if(M<_)return $e(C.get(_)).getSpeciesForLevel(A,!0,R,n,I);return this.speciesId}getEvolutionLevels(){const A=[];if(jt.hasOwnProperty(this.speciesId))for(const s of jt[this.speciesId]){const R=s.speciesId,n=s.level;A.push([R,n]);const I=$e(R).getEvolutionLevels();for(const r of I)A.push(r)}return A}getPrevolutionLevels(){const A=[],s=Object.keys(jt);for(const R of s)for(const n of jt[R])if(n.speciesId===this.speciesId&&(!this.forms.length||!n.evoFormKey||n.evoFormKey===this.forms[this.formIndex].formKey)&&A.every(I=>I[0]!==Number.parseInt(R))){const I=Number.parseInt(R),r=n.level;A.push([I,r]);const L=$e(I).getPrevolutionLevels();for(const N of L)A.push(N)}return A}getSimulatedEvolutionChain(A,s=!1,R=!1,n=!1){const I=[];if(IA.hasOwnProperty(this.speciesId)){const r=this.getPrevolutionLevels().reverse(),L=n?0:s||R?s&&R?2.5:5:10;I.push([r[0][0],1]);for(let C=1;C<r.length;C++){const U=jt[r[C-1][0]].find(D=>D.speciesId===r[C][0]);I.push([r[C][0],Math.min(Math.max((U==null?void 0:U.level)+Math.round(Vc(.5,1+L*.2)*Math.max(U==null?void 0:U.wildDelay,.5)*5)-1,2,U==null?void 0:U.level),A-1)])}const N=I[r.length-1][1],l=jt[r[r.length-1][0]].find(C=>C.speciesId===this.speciesId);I.push([this.speciesId,Math.min(Math.max(N+Math.round(Vc(.5,1+L*.2)*Math.max(l==null?void 0:l.wildDelay,.5)*5),N+1,l==null?void 0:l.level),A)])}else I.push([this.speciesId,1]);return I}getCompatibleFusionSpeciesFilter(){const A=jt.hasOwnProperty(this.speciesId),s=IA.hasOwnProperty(this.speciesId),R=this.subLegendary,n=this.legendary,I=this.mythical;return r=>(R||n||I||jt.hasOwnProperty(r.speciesId)===A&&IA.hasOwnProperty(r.speciesId)===s)&&r.subLegendary===R&&r.legendary===n&&r.mythical===I&&(this.isTrainerForbidden()||!r.isTrainerForbidden())&&r.speciesId!==e.DITTO}isObtainable(){return super.isObtainable()}hasVariants(){var s;let A=this.speciesId;if(this.forms.length>0){const R=(s=this.forms[this.formIndex])==null?void 0:s.formKey;R&&(A=`${A}-${R}`)}return aR.hasOwnProperty(A)||aR.hasOwnProperty(this.speciesId)}getFormSpriteKey(A){var s;return this.forms.length&&A!==void 0&&A>=this.forms.length&&(console.warn(`Attempted accessing form with index ${A} of species ${this.getName()} with only ${this.forms.length||0} forms`),A=Math.min(A,this.forms.length-1)),(s=this.forms)!=null&&s.length?this.forms[A||0].getFormSpriteKey():""}getFullUnlocksData(){var s;let A=0n;return A+=de.NON_SHINY,A+=de.SHINY,this.malePercent!==null&&(this.malePercent>0&&(A+=de.MALE),this.malePercent<100&&(A+=de.FEMALE)),A+=de.DEFAULT_VARIANT,this.hasVariants()&&(A+=de.VARIANT_2,A+=de.VARIANT_3),A+=((s=this==null?void 0:this.forms)==null?void 0:s.length)>1?this.forms.map((R,n)=>R.isUnobtainable?0n:128n*2n**BigInt(n)).reduce((R,n)=>R+n,0n):de.DEFAULT_FORM,A}};o(bF,"PokemonSpecies");let P=bF;const kF=class kF extends RU{constructor(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K=!1,Y=null,v=!1,Z=!1){super(R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K,v||!s),this.starterSelectableKeys=["10","50","10-pc","50-pc","red","orange","yellow","green","blue","indigo","violet"],this.formName=A,this.formKey=s,this.formSpriteKey=Y,this.isUnobtainable=Z}getFormSpriteKey(A){return this.formSpriteKey!==null?this.formSpriteKey:this.formKey}};o(kF,"PokemonForm");let y=kF;function i7(){const E=[],A=new Date;return A.setUTCHours(0,0,0,0),a.executeWithSeedOffset(()=>{for(;E.length<Pf;){const s=Number.parseInt(eE(Object.keys(tA)),10),R=$e(s);E.includes(R)||E.push(R)}},0,A.getTime().toString()),E}o(i7,"getPokerusStarters");const qA=[];function jz(){qA.push(new P(e.BULBASAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,.7,6.9,O.OVERGROW,O.NONE,O.CHLOROPHYLL,318,45,49,49,65,65,45,45,50,64,G.MEDIUM_SLOW,87.5,!1),new P(e.IVYSAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,1,13,O.OVERGROW,O.NONE,O.CHLOROPHYLL,405,60,62,63,80,80,60,45,50,142,G.MEDIUM_SLOW,87.5,!1),new P(e.VENUSAUR,1,!1,!1,!1,"Seed Pokémon",i.GRASS,i.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,G.MEDIUM_SLOW,87.5,!0,!0,new y("Normal","",i.GRASS,i.POISON,2,100,O.OVERGROW,O.NONE,O.CHLOROPHYLL,525,80,82,83,100,100,80,45,50,263,!0,null,!0),new y("Mega",Me.MEGA,i.GRASS,i.POISON,2.4,155.5,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,625,80,100,123,122,120,80,45,50,263,!0),new y("G-Max",Me.GIGANTAMAX,i.GRASS,i.POISON,24,999.9,O.EFFECT_SPORE,O.NONE,O.EFFECT_SPORE,625,120,122,90,108,105,80,45,50,263,!0)),new P(e.CHARMANDER,1,!1,!1,!1,"Lizard Pokémon",i.FIRE,null,.6,8.5,O.BLAZE,O.NONE,O.SOLAR_POWER,309,39,52,43,60,50,65,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.CHARMELEON,1,!1,!1,!1,"Flame Pokémon",i.FIRE,null,1.1,19,O.BLAZE,O.NONE,O.SOLAR_POWER,405,58,64,58,80,65,80,45,50,142,G.MEDIUM_SLOW,87.5,!1),new P(e.CHARIZARD,1,!1,!1,!1,"Flame Pokémon",i.FIRE,i.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.FIRE,i.FLYING,1.7,90.5,O.BLAZE,O.NONE,O.SOLAR_POWER,534,78,84,78,109,85,100,45,50,267,!1,null,!0),new y("Mega X",Me.MEGA_X,i.FIRE,i.DRAGON,1.7,110.5,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,634,78,130,111,130,85,100,45,50,267),new y("Mega Y",Me.MEGA_Y,i.FIRE,i.FLYING,1.7,100.5,O.DROUGHT,O.NONE,O.DROUGHT,634,78,104,78,159,115,100,45,50,267),new y("G-Max",Me.GIGANTAMAX,i.FIRE,i.FLYING,28,999.9,O.BERSERK,O.NONE,O.BERSERK,634,118,99,88,134,95,100,45,50,267)),new P(e.SQUIRTLE,1,!1,!1,!1,"Tiny Turtle Pokémon",i.WATER,null,.5,9,O.TORRENT,O.NONE,O.RAIN_DISH,314,44,48,65,50,64,43,45,50,63,G.MEDIUM_SLOW,87.5,!1),new P(e.WARTORTLE,1,!1,!1,!1,"Turtle Pokémon",i.WATER,null,1,22.5,O.TORRENT,O.NONE,O.RAIN_DISH,405,59,63,80,65,80,58,45,50,142,G.MEDIUM_SLOW,87.5,!1),new P(e.BLASTOISE,1,!1,!1,!1,"Shellfish Pokémon",i.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.WATER,null,1.6,85.5,O.TORRENT,O.NONE,O.RAIN_DISH,530,79,83,100,85,105,78,45,50,265,!1,null,!0),new y("Mega",Me.MEGA,i.WATER,null,1.6,101.1,O.MEGA_LAUNCHER,O.NONE,O.MEGA_LAUNCHER,630,79,103,120,135,115,78,45,50,265),new y("G-Max",Me.GIGANTAMAX,i.WATER,i.STEEL,25,999.9,O.SHELL_ARMOR,O.NONE,O.SHELL_ARMOR,630,119,108,125,105,110,63,45,50,265)),new P(e.CATERPIE,1,!1,!1,!1,"Worm Pokémon",i.BUG,null,.3,2.9,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,30,35,20,20,45,255,50,39,G.MEDIUM_FAST,50,!1),new P(e.METAPOD,1,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.7,9.9,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,20,55,25,25,30,120,50,72,G.MEDIUM_FAST,50,!1),new P(e.BUTTERFREE,1,!1,!1,!1,"Butterfly Pokémon",i.BUG,i.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.BUG,i.FLYING,1.1,32,O.COMPOUND_EYES,O.NONE,O.TINTED_LENS,395,60,45,50,90,80,70,45,50,198,!0,null,!0),new y("G-Max",Me.GIGANTAMAX,i.BUG,i.FLYING,17,999.9,O.COMPOUND_EYES,O.NONE,O.COMPOUND_EYES,495,80,40,75,120,95,85,45,50,198,!0)),new P(e.WEEDLE,1,!1,!1,!1,"Hairy Bug Pokémon",i.BUG,i.POISON,.3,3.2,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,40,35,30,20,20,50,255,70,39,G.MEDIUM_FAST,50,!1),new P(e.KAKUNA,1,!1,!1,!1,"Cocoon Pokémon",i.BUG,i.POISON,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,45,25,50,25,25,35,120,70,72,G.MEDIUM_FAST,50,!1),new P(e.BEEDRILL,1,!1,!1,!1,"Poison Bee Pokémon",i.BUG,i.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.BUG,i.POISON,1,29.5,O.SWARM,O.NONE,O.SNIPER,395,65,90,40,45,80,75,45,70,198,!1,null,!0),new y("Mega",Me.MEGA,i.BUG,i.POISON,1.4,40.5,O.ADAPTABILITY,O.NONE,O.ADAPTABILITY,495,65,150,40,15,80,145,45,70,198)),new P(e.PIDGEY,1,!1,!1,!1,"Tiny Bird Pokémon",i.NORMAL,i.FLYING,.3,1.8,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,251,40,45,40,35,35,56,255,70,50,G.MEDIUM_SLOW,50,!1),new P(e.PIDGEOTTO,1,!1,!1,!1,"Bird Pokémon",i.NORMAL,i.FLYING,1.1,30,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,349,63,60,55,50,50,71,120,70,122,G.MEDIUM_SLOW,50,!1),new P(e.PIDGEOT,1,!1,!1,!1,"Bird Pokémon",i.NORMAL,i.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.NORMAL,i.FLYING,1.5,39.5,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,479,83,80,75,70,70,101,45,70,240,!1,null,!0),new y("Mega",Me.MEGA,i.NORMAL,i.FLYING,2.2,50.5,O.NO_GUARD,O.NO_GUARD,O.NO_GUARD,579,83,80,80,135,80,121,45,70,240)),new P(e.RATTATA,1,!1,!1,!1,"Mouse Pokémon",i.NORMAL,null,.3,3.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,253,30,56,35,25,35,72,255,70,51,G.MEDIUM_FAST,50,!0),new P(e.RATICATE,1,!1,!1,!1,"Mouse Pokémon",i.NORMAL,null,.7,18.5,O.RUN_AWAY,O.GUTS,O.HUSTLE,413,55,81,60,50,70,97,127,70,145,G.MEDIUM_FAST,50,!0),new P(e.SPEAROW,1,!1,!1,!1,"Tiny Bird Pokémon",i.NORMAL,i.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.SNIPER,262,40,60,30,31,31,70,255,70,52,G.MEDIUM_FAST,50,!1),new P(e.FEAROW,1,!1,!1,!1,"Beak Pokémon",i.NORMAL,i.FLYING,1.2,38,O.KEEN_EYE,O.NONE,O.SNIPER,442,65,90,65,61,61,100,90,70,155,G.MEDIUM_FAST,50,!1),new P(e.EKANS,1,!1,!1,!1,"Snake Pokémon",i.POISON,null,2,6.9,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,288,35,60,44,40,54,55,255,70,58,G.MEDIUM_FAST,50,!1),new P(e.ARBOK,1,!1,!1,!1,"Cobra Pokémon",i.POISON,null,3.5,65,O.INTIMIDATE,O.SHED_SKIN,O.UNNERVE,448,60,95,69,65,79,80,90,70,157,G.MEDIUM_FAST,50,!1),new P(e.PIKACHU,1,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,320,35,55,40,50,50,90,190,50,112,!0,null,!0),new y("Partner","partner",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Cosplay","cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Cool Cosplay","cool-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Beauty Cosplay","beauty-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Cute Cosplay","cute-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Smart Cosplay","smart-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("Tough Cosplay","tough-cosplay",i.ELECTRIC,null,.4,6,O.STATIC,O.NONE,O.LIGHTNING_ROD,430,45,80,50,75,60,120,190,50,112,!0,null,!0),new y("G-Max",Me.GIGANTAMAX,i.ELECTRIC,null,21,999.9,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,530,125,95,60,90,70,90,190,50,112)),new P(e.RAICHU,1,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.8,30,O.STATIC,O.NONE,O.LIGHTNING_ROD,485,60,90,55,90,80,110,75,50,243,G.MEDIUM_FAST,50,!0),new P(e.SANDSHREW,1,!1,!1,!1,"Mouse Pokémon",i.GROUND,null,.6,12,O.SAND_VEIL,O.NONE,O.SAND_RUSH,300,50,75,85,20,30,40,255,50,60,G.MEDIUM_FAST,50,!1),new P(e.SANDSLASH,1,!1,!1,!1,"Mouse Pokémon",i.GROUND,null,1,29.5,O.SAND_VEIL,O.NONE,O.SAND_RUSH,450,75,100,110,45,55,65,90,50,158,G.MEDIUM_FAST,50,!1),new P(e.NIDORAN_F,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.4,7,O.POISON_POINT,O.RIVALRY,O.HUSTLE,275,55,47,52,40,40,41,235,50,55,G.MEDIUM_SLOW,0,!1),new P(e.NIDORINA,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.8,20,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,70,62,67,55,55,56,120,50,128,G.MEDIUM_SLOW,0,!1),new P(e.NIDOQUEEN,1,!1,!1,!1,"Drill Pokémon",i.POISON,i.GROUND,1.3,60,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,90,92,87,75,85,76,45,50,253,G.MEDIUM_SLOW,0,!1),new P(e.NIDORAN_M,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.5,9,O.POISON_POINT,O.RIVALRY,O.HUSTLE,273,46,57,40,40,40,50,235,50,55,G.MEDIUM_SLOW,100,!1),new P(e.NIDORINO,1,!1,!1,!1,"Poison Pin Pokémon",i.POISON,null,.9,19.5,O.POISON_POINT,O.RIVALRY,O.HUSTLE,365,61,72,57,55,55,65,120,50,128,G.MEDIUM_SLOW,100,!1),new P(e.NIDOKING,1,!1,!1,!1,"Drill Pokémon",i.POISON,i.GROUND,1.4,62,O.POISON_POINT,O.RIVALRY,O.SHEER_FORCE,505,81,102,77,85,75,85,45,50,253,G.MEDIUM_SLOW,100,!1),new P(e.CLEFAIRY,1,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,.6,7.5,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,323,70,45,48,60,65,35,150,140,113,G.FAST,25,!1),new P(e.CLEFABLE,1,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,1.3,40,O.CUTE_CHARM,O.MAGIC_GUARD,O.UNAWARE,483,95,70,73,95,90,60,25,140,242,G.FAST,25,!1),new P(e.VULPIX,1,!1,!1,!1,"Fox Pokémon",i.FIRE,null,.6,9.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,299,38,41,40,50,65,65,190,50,60,G.MEDIUM_FAST,25,!1),new P(e.NINETALES,1,!1,!1,!1,"Fox Pokémon",i.FIRE,null,1.1,19.9,O.FLASH_FIRE,O.NONE,O.DROUGHT,505,73,76,75,81,100,100,75,50,177,G.MEDIUM_FAST,25,!1),new P(e.JIGGLYPUFF,1,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,.5,5.5,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,270,115,45,20,45,25,20,170,50,95,G.FAST,25,!1),new P(e.WIGGLYTUFF,1,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,1,12,O.CUTE_CHARM,O.COMPETITIVE,O.FRISK,435,140,70,45,85,50,45,50,50,218,G.FAST,25,!1),new P(e.ZUBAT,1,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,.8,7.5,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,245,40,45,35,30,40,55,255,50,49,G.MEDIUM_FAST,50,!0),new P(e.GOLBAT,1,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,1.6,55,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,455,75,80,70,65,75,90,90,50,159,G.MEDIUM_FAST,50,!0),new P(e.ODDISH,1,!1,!1,!1,"Weed Pokémon",i.GRASS,i.POISON,.5,5.4,O.CHLOROPHYLL,O.NONE,O.RUN_AWAY,320,45,50,55,75,65,30,255,50,64,G.MEDIUM_SLOW,50,!1),new P(e.GLOOM,1,!1,!1,!1,"Weed Pokémon",i.GRASS,i.POISON,.8,8.6,O.CHLOROPHYLL,O.NONE,O.STENCH,395,60,65,70,85,75,40,120,50,138,G.MEDIUM_SLOW,50,!0),new P(e.VILEPLUME,1,!1,!1,!1,"Flower Pokémon",i.GRASS,i.POISON,1.2,18.6,O.CHLOROPHYLL,O.NONE,O.EFFECT_SPORE,490,75,80,85,110,90,50,45,50,245,G.MEDIUM_SLOW,50,!0),new P(e.PARAS,1,!1,!1,!1,"Mushroom Pokémon",i.BUG,i.GRASS,.3,5.4,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,285,35,70,55,45,55,25,190,70,57,G.MEDIUM_FAST,50,!1),new P(e.PARASECT,1,!1,!1,!1,"Mushroom Pokémon",i.BUG,i.GRASS,1,29.5,O.EFFECT_SPORE,O.DRY_SKIN,O.DAMP,405,60,95,80,60,80,30,75,70,142,G.MEDIUM_FAST,50,!1),new P(e.VENONAT,1,!1,!1,!1,"Insect Pokémon",i.BUG,i.POISON,1,30,O.COMPOUND_EYES,O.TINTED_LENS,O.RUN_AWAY,305,60,55,50,40,55,45,190,70,61,G.MEDIUM_FAST,50,!1),new P(e.VENOMOTH,1,!1,!1,!1,"Poison Moth Pokémon",i.BUG,i.POISON,1.5,12.5,O.SHIELD_DUST,O.TINTED_LENS,O.WONDER_SKIN,450,70,65,60,90,75,90,75,70,158,G.MEDIUM_FAST,50,!1),new P(e.DIGLETT,1,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.2,.8,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,265,10,55,25,35,45,95,255,50,53,G.MEDIUM_FAST,50,!1),new P(e.DUGTRIO,1,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.7,33.3,O.SAND_VEIL,O.ARENA_TRAP,O.SAND_FORCE,425,35,100,50,50,70,120,50,50,149,G.MEDIUM_FAST,50,!1),new P(e.MEOWTH,1,!1,!1,!1,"Scratch Cat Pokémon",i.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.NORMAL,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.UNNERVE,290,40,45,35,40,40,90,255,50,58,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.NORMAL,null,33,999.9,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,540,115,110,65,65,70,115,255,50,58)),new P(e.PERSIAN,1,!1,!1,!1,"Classy Cat Pokémon",i.NORMAL,null,1,32,O.LIMBER,O.TECHNICIAN,O.UNNERVE,440,65,70,60,65,65,115,90,50,154,G.MEDIUM_FAST,50,!1),new P(e.PSYDUCK,1,!1,!1,!1,"Duck Pokémon",i.WATER,null,.8,19.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,320,50,52,48,65,50,55,190,50,64,G.MEDIUM_FAST,50,!1),new P(e.GOLDUCK,1,!1,!1,!1,"Duck Pokémon",i.WATER,null,1.7,76.6,O.DAMP,O.CLOUD_NINE,O.SWIFT_SWIM,500,80,82,78,95,80,85,75,50,175,G.MEDIUM_FAST,50,!1),new P(e.MANKEY,1,!1,!1,!1,"Pig Monkey Pokémon",i.FIGHTING,null,.5,28,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,305,40,80,35,35,45,70,190,70,61,G.MEDIUM_FAST,50,!1),new P(e.PRIMEAPE,1,!1,!1,!1,"Pig Monkey Pokémon",i.FIGHTING,null,1,32,O.VITAL_SPIRIT,O.ANGER_POINT,O.DEFIANT,455,65,105,60,60,70,95,75,70,159,G.MEDIUM_FAST,50,!1),new P(e.GROWLITHE,1,!1,!1,!1,"Puppy Pokémon",i.FIRE,null,.7,19,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,350,55,70,45,70,50,60,190,50,70,G.SLOW,75,!1),new P(e.ARCANINE,1,!1,!1,!1,"Legendary Pokémon",i.FIRE,null,1.9,155,O.INTIMIDATE,O.FLASH_FIRE,O.JUSTIFIED,555,90,110,80,100,80,95,75,50,194,G.SLOW,75,!1),new P(e.POLIWAG,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,.6,12.4,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,300,40,50,40,40,40,90,255,50,60,G.MEDIUM_SLOW,50,!1),new P(e.POLIWHIRL,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,1,20,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,385,65,65,65,50,50,90,120,50,135,G.MEDIUM_SLOW,50,!1),new P(e.POLIWRATH,1,!1,!1,!1,"Tadpole Pokémon",i.WATER,i.FIGHTING,1.3,54,O.WATER_ABSORB,O.DAMP,O.SWIFT_SWIM,510,90,95,95,70,90,70,45,50,255,G.MEDIUM_SLOW,50,!1),new P(e.ABRA,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,.9,19.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,310,25,20,15,105,55,90,200,50,62,G.MEDIUM_SLOW,75,!1),new P(e.KADABRA,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,1.3,56.5,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,400,40,35,30,120,70,105,100,50,140,G.MEDIUM_SLOW,75,!0),new P(e.ALAKAZAM,1,!1,!1,!1,"Psi Pokémon",i.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,G.MEDIUM_SLOW,75,!0,!0,new y("Normal","",i.PSYCHIC,null,1.5,48,O.SYNCHRONIZE,O.INNER_FOCUS,O.MAGIC_GUARD,500,55,50,45,135,95,120,50,50,250,!0,null,!0),new y("Mega",Me.MEGA,i.PSYCHIC,null,1.2,48,O.TRACE,O.TRACE,O.TRACE,600,55,50,65,175,105,150,50,50,250,!0)),new P(e.MACHOP,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,.8,19.5,O.GUTS,O.NO_GUARD,O.STEADFAST,305,70,80,50,35,35,35,180,50,61,G.MEDIUM_SLOW,75,!1),new P(e.MACHOKE,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,1.5,70.5,O.GUTS,O.NO_GUARD,O.STEADFAST,405,80,100,70,50,60,45,90,50,142,G.MEDIUM_SLOW,75,!1),new P(e.MACHAMP,1,!1,!1,!1,"Superpower Pokémon",i.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,G.MEDIUM_SLOW,75,!1,!0,new y("Normal","",i.FIGHTING,null,1.6,130,O.GUTS,O.NO_GUARD,O.STEADFAST,505,90,130,80,65,85,55,45,50,253,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.FIGHTING,null,25,999.9,O.GUTS,O.GUTS,O.GUTS,605,120,170,85,75,90,65,45,50,253)),new P(e.BELLSPROUT,1,!1,!1,!1,"Flower Pokémon",i.GRASS,i.POISON,.7,4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,300,50,75,35,70,30,40,255,70,60,G.MEDIUM_SLOW,50,!1),new P(e.WEEPINBELL,1,!1,!1,!1,"Flycatcher Pokémon",i.GRASS,i.POISON,1,6.4,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,390,65,90,50,85,45,55,120,70,137,G.MEDIUM_SLOW,50,!1),new P(e.VICTREEBEL,1,!1,!1,!1,"Flycatcher Pokémon",i.GRASS,i.POISON,1.7,15.5,O.CHLOROPHYLL,O.NONE,O.GLUTTONY,490,80,105,65,100,70,70,45,70,245,G.MEDIUM_SLOW,50,!1),new P(e.TENTACOOL,1,!1,!1,!1,"Jellyfish Pokémon",i.WATER,i.POISON,.9,45.5,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,335,40,40,35,50,100,70,190,50,67,G.SLOW,50,!1),new P(e.TENTACRUEL,1,!1,!1,!1,"Jellyfish Pokémon",i.WATER,i.POISON,1.6,55,O.CLEAR_BODY,O.LIQUID_OOZE,O.RAIN_DISH,515,80,70,65,80,120,100,60,50,180,G.SLOW,50,!1),new P(e.GEODUDE,1,!1,!1,!1,"Rock Pokémon",i.ROCK,i.GROUND,.4,20,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,300,40,80,100,30,30,20,255,70,60,G.MEDIUM_SLOW,50,!1),new P(e.GRAVELER,1,!1,!1,!1,"Rock Pokémon",i.ROCK,i.GROUND,1,105,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,390,55,95,115,45,45,35,120,70,137,G.MEDIUM_SLOW,50,!1),new P(e.GOLEM,1,!1,!1,!1,"Megaton Pokémon",i.ROCK,i.GROUND,1.4,300,O.ROCK_HEAD,O.STURDY,O.SAND_VEIL,495,80,120,130,55,65,45,45,70,248,G.MEDIUM_SLOW,50,!1),new P(e.PONYTA,1,!1,!1,!1,"Fire Horse Pokémon",i.FIRE,null,1,30,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,410,50,85,55,65,65,90,190,50,82,G.MEDIUM_FAST,50,!1),new P(e.RAPIDASH,1,!1,!1,!1,"Fire Horse Pokémon",i.FIRE,null,1.7,95,O.RUN_AWAY,O.FLASH_FIRE,O.FLAME_BODY,500,65,100,70,80,80,105,60,50,175,G.MEDIUM_FAST,50,!1),new P(e.SLOWPOKE,1,!1,!1,!1,"Dopey Pokémon",i.WATER,i.PSYCHIC,1.2,36,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,G.MEDIUM_FAST,50,!1),new P(e.SLOWBRO,1,!1,!1,!1,"Hermit Crab Pokémon",i.WATER,i.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.WATER,i.PSYCHIC,1.6,78.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,110,100,80,30,75,50,172,!1,null,!0),new y("Mega",Me.MEGA,i.WATER,i.PSYCHIC,2,120,O.SHELL_ARMOR,O.SHELL_ARMOR,O.SHELL_ARMOR,590,95,75,180,130,80,30,75,50,172)),new P(e.MAGNEMITE,1,!1,!1,!1,"Magnet Pokémon",i.ELECTRIC,i.STEEL,.3,6,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,325,25,35,70,95,55,45,190,50,65,G.MEDIUM_FAST,null,!1),new P(e.MAGNETON,1,!1,!1,!1,"Magnet Pokémon",i.ELECTRIC,i.STEEL,1,60,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,465,50,60,95,120,70,70,60,50,163,G.MEDIUM_FAST,null,!1),new P(e.FARFETCHD,1,!1,!1,!1,"Wild Duck Pokémon",i.NORMAL,i.FLYING,.8,15,O.KEEN_EYE,O.INNER_FOCUS,O.DEFIANT,377,52,90,55,58,62,60,45,50,132,G.MEDIUM_FAST,50,!1),new P(e.DODUO,1,!1,!1,!1,"Twin Bird Pokémon",i.NORMAL,i.FLYING,1.4,39.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,310,35,85,45,35,35,75,190,70,62,G.MEDIUM_FAST,50,!0),new P(e.DODRIO,1,!1,!1,!1,"Triple Bird Pokémon",i.NORMAL,i.FLYING,1.8,85.2,O.RUN_AWAY,O.EARLY_BIRD,O.TANGLED_FEET,470,60,110,70,60,60,110,45,70,165,G.MEDIUM_FAST,50,!0),new P(e.SEEL,1,!1,!1,!1,"Sea Lion Pokémon",i.WATER,null,1.1,90,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,325,65,45,55,45,70,45,190,70,65,G.MEDIUM_FAST,50,!1),new P(e.DEWGONG,1,!1,!1,!1,"Sea Lion Pokémon",i.WATER,i.ICE,1.7,120,O.THICK_FAT,O.HYDRATION,O.ICE_BODY,475,90,70,80,70,95,70,75,70,166,G.MEDIUM_FAST,50,!1),new P(e.GRIMER,1,!1,!1,!1,"Sludge Pokémon",i.POISON,null,.9,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,325,80,80,50,40,50,25,190,70,65,G.MEDIUM_FAST,50,!1),new P(e.MUK,1,!1,!1,!1,"Sludge Pokémon",i.POISON,null,1.2,30,O.STENCH,O.STICKY_HOLD,O.POISON_TOUCH,500,105,105,75,65,100,50,75,70,175,G.MEDIUM_FAST,50,!1),new P(e.SHELLDER,1,!1,!1,!1,"Bivalve Pokémon",i.WATER,null,.3,4,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,305,30,65,100,45,25,40,190,50,61,G.SLOW,50,!1),new P(e.CLOYSTER,1,!1,!1,!1,"Bivalve Pokémon",i.WATER,i.ICE,1.5,132.5,O.SHELL_ARMOR,O.SKILL_LINK,O.OVERCOAT,525,50,95,180,85,45,70,60,50,184,G.SLOW,50,!1),new P(e.GASTLY,1,!1,!1,!1,"Gas Pokémon",i.GHOST,i.POISON,1.3,.1,O.LEVITATE,O.NONE,O.NONE,310,30,35,30,100,35,80,190,50,62,G.MEDIUM_SLOW,50,!1),new P(e.HAUNTER,1,!1,!1,!1,"Gas Pokémon",i.GHOST,i.POISON,1.6,.1,O.LEVITATE,O.NONE,O.NONE,405,45,50,45,115,55,95,90,50,142,G.MEDIUM_SLOW,50,!1),new P(e.GENGAR,1,!1,!1,!1,"Shadow Pokémon",i.GHOST,i.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.GHOST,i.POISON,1.5,40.5,O.CURSED_BODY,O.NONE,O.NONE,500,60,65,60,130,75,110,45,50,250,!1,null,!0),new y("Mega",Me.MEGA,i.GHOST,i.POISON,1.4,40.5,O.SHADOW_TAG,O.NONE,O.NONE,600,60,65,80,170,95,130,45,50,250),new y("G-Max",Me.GIGANTAMAX,i.GHOST,i.POISON,20,999.9,O.CURSED_BODY,O.NONE,O.NONE,600,140,65,70,140,85,100,45,50,250)),new P(e.ONIX,1,!1,!1,!1,"Rock Snake Pokémon",i.ROCK,i.GROUND,8.8,210,O.ROCK_HEAD,O.STURDY,O.WEAK_ARMOR,385,35,45,160,30,45,70,45,50,77,G.MEDIUM_FAST,50,!1),new P(e.DROWZEE,1,!1,!1,!1,"Hypnosis Pokémon",i.PSYCHIC,null,1,32.4,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,328,60,48,45,43,90,42,190,70,66,G.MEDIUM_FAST,50,!1),new P(e.HYPNO,1,!1,!1,!1,"Hypnosis Pokémon",i.PSYCHIC,null,1.6,75.6,O.INSOMNIA,O.FOREWARN,O.INNER_FOCUS,483,85,73,70,73,115,67,75,70,169,G.MEDIUM_FAST,50,!0),new P(e.KRABBY,1,!1,!1,!1,"River Crab Pokémon",i.WATER,null,.4,6.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,325,30,105,90,25,25,50,225,50,65,G.MEDIUM_FAST,50,!1),new P(e.KINGLER,1,!1,!1,!1,"Pincer Pokémon",i.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.WATER,null,1.3,60,O.HYPER_CUTTER,O.SHELL_ARMOR,O.SHEER_FORCE,475,55,130,115,50,50,75,60,50,166,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.WATER,null,19,999.9,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,575,92,145,140,60,65,73,60,50,166)),new P(e.VOLTORB,1,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,null,.5,10.4,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,70,66,G.MEDIUM_FAST,null,!1),new P(e.ELECTRODE,1,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,null,1.2,66.6,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,G.MEDIUM_FAST,null,!1),new P(e.EXEGGCUTE,1,!1,!1,!1,"Egg Pokémon",i.GRASS,i.PSYCHIC,.4,2.5,O.CHLOROPHYLL,O.NONE,O.HARVEST,325,60,40,80,60,45,40,90,50,65,G.SLOW,50,!1),new P(e.EXEGGUTOR,1,!1,!1,!1,"Coconut Pokémon",i.GRASS,i.PSYCHIC,2,120,O.CHLOROPHYLL,O.NONE,O.HARVEST,530,95,95,85,125,75,55,45,50,186,G.SLOW,50,!1),new P(e.CUBONE,1,!1,!1,!1,"Lonely Pokémon",i.GROUND,null,.4,6.5,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,320,50,50,95,40,50,35,190,50,64,G.MEDIUM_FAST,50,!1),new P(e.MAROWAK,1,!1,!1,!1,"Bone Keeper Pokémon",i.GROUND,null,1,45,O.ROCK_HEAD,O.LIGHTNING_ROD,O.BATTLE_ARMOR,425,60,80,110,50,80,45,75,50,149,G.MEDIUM_FAST,50,!1),new P(e.HITMONLEE,1,!1,!1,!1,"Kicking Pokémon",i.FIGHTING,null,1.5,49.8,O.LIMBER,O.RECKLESS,O.UNBURDEN,455,50,120,53,35,110,87,45,50,159,G.MEDIUM_FAST,100,!1),new P(e.HITMONCHAN,1,!1,!1,!1,"Punching Pokémon",i.FIGHTING,null,1.4,50.2,O.KEEN_EYE,O.IRON_FIST,O.INNER_FOCUS,455,50,105,79,35,110,76,45,50,159,G.MEDIUM_FAST,100,!1),new P(e.LICKITUNG,1,!1,!1,!1,"Licking Pokémon",i.NORMAL,null,1.2,65.5,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,385,90,55,75,60,75,30,45,50,77,G.MEDIUM_FAST,50,!1),new P(e.KOFFING,1,!1,!1,!1,"Poison Gas Pokémon",i.POISON,null,.6,1,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,340,40,65,95,60,45,35,190,50,68,G.MEDIUM_FAST,50,!1),new P(e.WEEZING,1,!1,!1,!1,"Poison Gas Pokémon",i.POISON,null,1.2,9.5,O.LEVITATE,O.NEUTRALIZING_GAS,O.STENCH,490,65,90,120,85,70,60,60,50,172,G.MEDIUM_FAST,50,!1),new P(e.RHYHORN,1,!1,!1,!1,"Spikes Pokémon",i.GROUND,i.ROCK,1,115,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,345,80,85,95,30,30,25,120,50,69,G.SLOW,50,!0),new P(e.RHYDON,1,!1,!1,!1,"Drill Pokémon",i.GROUND,i.ROCK,1.9,120,O.LIGHTNING_ROD,O.ROCK_HEAD,O.RECKLESS,485,105,130,120,45,45,40,60,50,170,G.SLOW,50,!0),new P(e.CHANSEY,1,!1,!1,!1,"Egg Pokémon",i.NORMAL,null,1.1,34.6,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,450,250,5,5,35,105,50,30,140,395,G.FAST,0,!1),new P(e.TANGELA,1,!1,!1,!1,"Vine Pokémon",i.GRASS,null,1,35,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,435,65,55,115,100,40,60,45,50,87,G.MEDIUM_FAST,50,!1),new P(e.KANGASKHAN,1,!1,!1,!1,"Parent Pokémon",i.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,G.MEDIUM_FAST,0,!1,!0,new y("Normal","",i.NORMAL,null,2.2,80,O.EARLY_BIRD,O.SCRAPPY,O.INNER_FOCUS,490,105,95,80,40,80,90,45,50,172,!1,null,!0),new y("Mega",Me.MEGA,i.NORMAL,null,2.2,100,O.PARENTAL_BOND,O.PARENTAL_BOND,O.PARENTAL_BOND,590,105,125,100,60,100,100,45,50,172)),new P(e.HORSEA,1,!1,!1,!1,"Dragon Pokémon",i.WATER,null,.4,8,O.SWIFT_SWIM,O.SNIPER,O.DAMP,295,30,40,70,70,25,60,225,50,59,G.MEDIUM_FAST,50,!1),new P(e.SEADRA,1,!1,!1,!1,"Dragon Pokémon",i.WATER,null,1.2,25,O.POISON_POINT,O.SNIPER,O.DAMP,440,55,65,95,95,45,85,75,50,154,G.MEDIUM_FAST,50,!1),new P(e.GOLDEEN,1,!1,!1,!1,"Goldfish Pokémon",i.WATER,null,.6,15,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,320,45,67,60,35,50,63,225,50,64,G.MEDIUM_FAST,50,!0),new P(e.SEAKING,1,!1,!1,!1,"Goldfish Pokémon",i.WATER,null,1.3,39,O.SWIFT_SWIM,O.WATER_VEIL,O.LIGHTNING_ROD,450,80,92,65,65,80,68,60,50,158,G.MEDIUM_FAST,50,!0),new P(e.STARYU,1,!1,!1,!1,"Star Shape Pokémon",i.WATER,null,.8,34.5,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,340,30,45,55,70,55,85,225,50,68,G.SLOW,null,!1),new P(e.STARMIE,1,!1,!1,!1,"Mysterious Pokémon",i.WATER,i.PSYCHIC,1.1,80,O.ILLUMINATE,O.NATURAL_CURE,O.ANALYTIC,520,60,75,85,100,85,115,60,50,182,G.SLOW,null,!1),new P(e.MR_MIME,1,!1,!1,!1,"Barrier Pokémon",i.PSYCHIC,i.FAIRY,1.3,54.5,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,460,40,45,65,100,120,90,45,50,161,G.MEDIUM_FAST,50,!1),new P(e.SCYTHER,1,!1,!1,!1,"Mantis Pokémon",i.BUG,i.FLYING,1.5,56,O.SWARM,O.TECHNICIAN,O.STEADFAST,500,70,110,80,55,80,105,45,50,100,G.MEDIUM_FAST,50,!0),new P(e.JYNX,1,!1,!1,!1,"Human Shape Pokémon",i.ICE,i.PSYCHIC,1.4,40.6,O.OBLIVIOUS,O.FOREWARN,O.DRY_SKIN,455,65,50,35,115,95,95,45,50,159,G.MEDIUM_FAST,0,!1),new P(e.ELECTABUZZ,1,!1,!1,!1,"Electric Pokémon",i.ELECTRIC,null,1.1,30,O.STATIC,O.NONE,O.VITAL_SPIRIT,490,65,83,57,95,85,105,45,50,172,G.MEDIUM_FAST,75,!1),new P(e.MAGMAR,1,!1,!1,!1,"Spitfire Pokémon",i.FIRE,null,1.3,44.5,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,495,65,95,57,100,85,93,45,50,173,G.MEDIUM_FAST,75,!1),new P(e.PINSIR,1,!1,!1,!1,"Stag Beetle Pokémon",i.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,G.SLOW,50,!1,!0,new y("Normal","",i.BUG,null,1.5,55,O.HYPER_CUTTER,O.MOLD_BREAKER,O.MOXIE,500,65,125,100,55,70,85,45,50,175,!1,null,!0),new y("Mega",Me.MEGA,i.BUG,i.FLYING,1.7,59,O.AERILATE,O.AERILATE,O.AERILATE,600,65,155,120,65,90,105,45,50,175)),new P(e.TAUROS,1,!1,!1,!1,"Wild Bull Pokémon",i.NORMAL,null,1.4,88.4,O.INTIMIDATE,O.ANGER_POINT,O.SHEER_FORCE,490,75,100,95,40,70,110,45,50,172,G.SLOW,100,!1),new P(e.MAGIKARP,1,!1,!1,!1,"Fish Pokémon",i.WATER,null,.9,10,O.SWIFT_SWIM,O.NONE,O.RATTLED,200,20,10,55,15,20,80,255,50,40,G.SLOW,50,!0),new P(e.GYARADOS,1,!1,!1,!1,"Atrocious Pokémon",i.WATER,i.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,G.SLOW,50,!0,!0,new y("Normal","",i.WATER,i.FLYING,6.5,235,O.INTIMIDATE,O.NONE,O.MOXIE,540,95,125,79,60,100,81,45,50,189,!0,null,!0),new y("Mega",Me.MEGA,i.WATER,i.DARK,6.5,305,O.MOLD_BREAKER,O.MOLD_BREAKER,O.MOLD_BREAKER,640,95,155,109,70,130,81,45,50,189,!0)),new P(e.LAPRAS,1,!1,!1,!1,"Transport Pokémon",i.WATER,i.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,G.SLOW,50,!1,!0,new y("Normal","",i.WATER,i.ICE,2.5,220,O.WATER_ABSORB,O.SHELL_ARMOR,O.HYDRATION,535,130,85,80,85,95,60,45,50,187,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.WATER,i.ICE,24,999.9,O.SHIELD_DUST,O.SHIELD_DUST,O.SHIELD_DUST,635,170,97,85,107,111,65,45,50,187)),new P(e.DITTO,1,!1,!1,!1,"Transform Pokémon",i.NORMAL,null,.3,4,O.LIMBER,O.NONE,O.IMPOSTER,288,48,48,48,48,48,48,35,50,101,G.MEDIUM_FAST,null,!1),new P(e.EEVEE,1,!1,!1,!1,"Evolution Pokémon",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,G.MEDIUM_FAST,87.5,!1,!0,new y("Normal","",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,325,55,55,50,45,65,55,45,50,65,!1,null,!0),new y("Partner","partner",i.NORMAL,null,.3,6.5,O.RUN_AWAY,O.ADAPTABILITY,O.ANTICIPATION,435,65,75,70,65,85,75,45,50,65,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.NORMAL,null,18,999.9,O.PROTEAN,O.PROTEAN,O.PROTEAN,535,110,95,70,90,85,85,45,50,65)),new P(e.VAPOREON,1,!1,!1,!1,"Bubble Jet Pokémon",i.WATER,null,1,29,O.WATER_ABSORB,O.NONE,O.HYDRATION,525,130,65,60,110,95,65,45,50,184,G.MEDIUM_FAST,87.5,!1),new P(e.JOLTEON,1,!1,!1,!1,"Lightning Pokémon",i.ELECTRIC,null,.8,24.5,O.VOLT_ABSORB,O.NONE,O.QUICK_FEET,525,65,65,60,110,95,130,45,50,184,G.MEDIUM_FAST,87.5,!1),new P(e.FLAREON,1,!1,!1,!1,"Flame Pokémon",i.FIRE,null,.9,25,O.FLASH_FIRE,O.NONE,O.GUTS,525,65,130,60,95,110,65,45,50,184,G.MEDIUM_FAST,87.5,!1),new P(e.PORYGON,1,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.8,36.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,395,65,60,70,85,75,40,45,50,79,G.MEDIUM_FAST,null,!1),new P(e.OMANYTE,1,!1,!1,!1,"Spiral Pokémon",i.ROCK,i.WATER,.4,7.5,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,355,35,40,100,90,55,35,45,50,71,G.MEDIUM_FAST,87.5,!1),new P(e.OMASTAR,1,!1,!1,!1,"Spiral Pokémon",i.ROCK,i.WATER,1,35,O.SWIFT_SWIM,O.SHELL_ARMOR,O.WEAK_ARMOR,495,70,60,125,115,70,55,45,50,173,G.MEDIUM_FAST,87.5,!1),new P(e.KABUTO,1,!1,!1,!1,"Shellfish Pokémon",i.ROCK,i.WATER,.5,11.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,355,30,80,90,55,45,55,45,50,71,G.MEDIUM_FAST,87.5,!1),new P(e.KABUTOPS,1,!1,!1,!1,"Shellfish Pokémon",i.ROCK,i.WATER,1.3,40.5,O.SWIFT_SWIM,O.BATTLE_ARMOR,O.WEAK_ARMOR,495,60,115,105,65,70,80,45,50,173,G.MEDIUM_FAST,87.5,!1),new P(e.AERODACTYL,1,!1,!1,!1,"Fossil Pokémon",i.ROCK,i.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,G.SLOW,87.5,!1,!0,new y("Normal","",i.ROCK,i.FLYING,1.8,59,O.ROCK_HEAD,O.PRESSURE,O.UNNERVE,515,80,105,65,60,75,130,45,50,180,!1,null,!0),new y("Mega",Me.MEGA,i.ROCK,i.FLYING,2.1,79,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,615,80,135,85,70,95,150,45,50,180)),new P(e.SNORLAX,1,!1,!1,!1,"Sleeping Pokémon",i.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,G.SLOW,87.5,!1,!0,new y("Normal","",i.NORMAL,null,2.1,460,O.IMMUNITY,O.THICK_FAT,O.GLUTTONY,540,160,110,65,65,110,30,25,50,189,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.NORMAL,null,35,999.9,O.HARVEST,O.HARVEST,O.HARVEST,640,210,135,70,90,115,20,25,50,189)),new P(e.ARTICUNO,1,!0,!1,!1,"Freeze Pokémon",i.ICE,i.FLYING,1.7,55.4,O.PRESSURE,O.NONE,O.SNOW_CLOAK,580,90,85,100,95,125,85,3,35,290,G.SLOW,null,!1),new P(e.ZAPDOS,1,!0,!1,!1,"Electric Pokémon",i.ELECTRIC,i.FLYING,1.6,52.6,O.PRESSURE,O.NONE,O.STATIC,580,90,90,85,125,90,100,3,35,290,G.SLOW,null,!1),new P(e.MOLTRES,1,!0,!1,!1,"Flame Pokémon",i.FIRE,i.FLYING,2,60,O.PRESSURE,O.NONE,O.FLAME_BODY,580,90,100,90,125,85,90,3,35,290,G.SLOW,null,!1),new P(e.DRATINI,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,1.8,3.3,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,300,41,64,45,50,50,50,45,35,60,G.SLOW,50,!1),new P(e.DRAGONAIR,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,4,16.5,O.SHED_SKIN,O.NONE,O.MARVEL_SCALE,420,61,84,65,70,70,70,45,35,147,G.SLOW,50,!1),new P(e.DRAGONITE,1,!1,!1,!1,"Dragon Pokémon",i.DRAGON,i.FLYING,2.2,210,O.INNER_FOCUS,O.NONE,O.MULTISCALE,600,91,134,95,100,100,80,45,35,300,G.SLOW,50,!1),new P(e.MEWTWO,1,!1,!0,!1,"Genetic Pokémon",i.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,G.SLOW,null,!1,!0,new y("Normal","",i.PSYCHIC,null,2,122,O.PRESSURE,O.NONE,O.UNNERVE,680,106,110,90,154,90,130,3,0,340,!1,null,!0),new y("Mega X",Me.MEGA_X,i.PSYCHIC,i.FIGHTING,2.3,127,O.STEADFAST,O.NONE,O.STEADFAST,780,106,190,100,154,100,130,3,0,340),new y("Mega Y",Me.MEGA_Y,i.PSYCHIC,null,1.5,33,O.INSOMNIA,O.NONE,O.INSOMNIA,780,106,150,70,194,120,140,3,0,340)),new P(e.MEW,1,!1,!1,!0,"New Species Pokémon",i.PSYCHIC,null,.4,4,O.SYNCHRONIZE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,G.MEDIUM_SLOW,null,!1),new P(e.CHIKORITA,2,!1,!1,!1,"Leaf Pokémon",i.GRASS,null,.9,6.4,O.OVERGROW,O.NONE,O.LEAF_GUARD,318,45,49,65,49,65,45,45,70,64,G.MEDIUM_SLOW,87.5,!1),new P(e.BAYLEEF,2,!1,!1,!1,"Leaf Pokémon",i.GRASS,null,1.2,15.8,O.OVERGROW,O.NONE,O.LEAF_GUARD,405,60,62,80,63,80,60,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.MEGANIUM,2,!1,!1,!1,"Herb Pokémon",i.GRASS,null,1.8,100.5,O.OVERGROW,O.NONE,O.LEAF_GUARD,525,80,82,100,83,100,80,45,70,263,G.MEDIUM_SLOW,87.5,!0),new P(e.CYNDAQUIL,2,!1,!1,!1,"Fire Mouse Pokémon",i.FIRE,null,.5,7.9,O.BLAZE,O.NONE,O.FLASH_FIRE,309,39,52,43,60,50,65,45,70,62,G.MEDIUM_SLOW,87.5,!1),new P(e.QUILAVA,2,!1,!1,!1,"Volcano Pokémon",i.FIRE,null,.9,19,O.BLAZE,O.NONE,O.FLASH_FIRE,405,58,64,58,80,65,80,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.TYPHLOSION,2,!1,!1,!1,"Volcano Pokémon",i.FIRE,null,1.7,79.5,O.BLAZE,O.NONE,O.FLASH_FIRE,534,78,84,78,109,85,100,45,70,267,G.MEDIUM_SLOW,87.5,!1),new P(e.TOTODILE,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,.6,9.5,O.TORRENT,O.NONE,O.SHEER_FORCE,314,50,65,64,44,48,43,45,70,63,G.MEDIUM_SLOW,87.5,!1),new P(e.CROCONAW,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,1.1,25,O.TORRENT,O.NONE,O.SHEER_FORCE,405,65,80,80,59,63,58,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.FERALIGATR,2,!1,!1,!1,"Big Jaw Pokémon",i.WATER,null,2.3,88.8,O.TORRENT,O.NONE,O.SHEER_FORCE,530,85,105,100,79,83,78,45,70,265,G.MEDIUM_SLOW,87.5,!1),new P(e.SENTRET,2,!1,!1,!1,"Scout Pokémon",i.NORMAL,null,.8,6,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,215,35,46,34,35,45,20,255,70,43,G.MEDIUM_FAST,50,!1),new P(e.FURRET,2,!1,!1,!1,"Long Body Pokémon",i.NORMAL,null,1.8,32.5,O.RUN_AWAY,O.KEEN_EYE,O.FRISK,415,85,76,64,45,55,90,90,70,145,G.MEDIUM_FAST,50,!1),new P(e.HOOTHOOT,2,!1,!1,!1,"Owl Pokémon",i.NORMAL,i.FLYING,.7,21.2,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,262,60,30,30,36,56,50,255,50,52,G.MEDIUM_FAST,50,!1),new P(e.NOCTOWL,2,!1,!1,!1,"Owl Pokémon",i.NORMAL,i.FLYING,1.6,40.8,O.INSOMNIA,O.KEEN_EYE,O.TINTED_LENS,452,100,50,50,86,96,70,90,50,158,G.MEDIUM_FAST,50,!1),new P(e.LEDYBA,2,!1,!1,!1,"Five Star Pokémon",i.BUG,i.FLYING,1,10.8,O.SWARM,O.EARLY_BIRD,O.RATTLED,265,40,20,30,40,80,55,255,70,53,G.FAST,50,!0),new P(e.LEDIAN,2,!1,!1,!1,"Five Star Pokémon",i.BUG,i.FLYING,1.4,35.6,O.SWARM,O.EARLY_BIRD,O.IRON_FIST,390,55,35,50,55,110,85,90,70,137,G.FAST,50,!0),new P(e.SPINARAK,2,!1,!1,!1,"String Spit Pokémon",i.BUG,i.POISON,.5,8.5,O.SWARM,O.INSOMNIA,O.SNIPER,250,40,60,40,40,40,30,255,70,50,G.FAST,50,!1),new P(e.ARIADOS,2,!1,!1,!1,"Long Leg Pokémon",i.BUG,i.POISON,1.1,33.5,O.SWARM,O.INSOMNIA,O.SNIPER,400,70,90,70,60,70,40,90,70,140,G.FAST,50,!1),new P(e.CROBAT,2,!1,!1,!1,"Bat Pokémon",i.POISON,i.FLYING,1.8,75,O.INNER_FOCUS,O.NONE,O.INFILTRATOR,535,85,90,80,70,80,130,90,50,268,G.MEDIUM_FAST,50,!1),new P(e.CHINCHOU,2,!1,!1,!1,"Angler Pokémon",i.WATER,i.ELECTRIC,.5,12,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,330,75,38,38,56,56,67,190,50,66,G.SLOW,50,!1),new P(e.LANTURN,2,!1,!1,!1,"Light Pokémon",i.WATER,i.ELECTRIC,1.2,22.5,O.VOLT_ABSORB,O.ILLUMINATE,O.WATER_ABSORB,460,125,58,58,76,76,67,75,50,161,G.SLOW,50,!1),new P(e.PICHU,2,!1,!1,!1,"Tiny Mouse Pokémon",i.ELECTRIC,null,.3,2,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,G.MEDIUM_FAST,50,!1,!1,new y("Normal","",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0),new y("Spiky-Eared","spiky",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.LIGHTNING_ROD,205,20,40,15,35,35,60,190,70,41,!1,null,!0)),new P(e.CLEFFA,2,!1,!1,!1,"Star Shape Pokémon",i.FAIRY,null,.3,3,O.CUTE_CHARM,O.MAGIC_GUARD,O.FRIEND_GUARD,218,50,25,28,45,55,15,150,140,44,G.FAST,25,!1),new P(e.IGGLYBUFF,2,!1,!1,!1,"Balloon Pokémon",i.NORMAL,i.FAIRY,.3,1,O.CUTE_CHARM,O.COMPETITIVE,O.FRIEND_GUARD,210,90,30,15,40,20,15,170,50,42,G.FAST,25,!1),new P(e.TOGEPI,2,!1,!1,!1,"Spike Ball Pokémon",i.FAIRY,null,.3,1.5,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,245,35,20,65,40,65,20,190,50,49,G.FAST,87.5,!1),new P(e.TOGETIC,2,!1,!1,!1,"Happiness Pokémon",i.FAIRY,i.FLYING,.6,3.2,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,405,55,40,85,80,105,40,75,50,142,G.FAST,87.5,!1),new P(e.NATU,2,!1,!1,!1,"Tiny Bird Pokémon",i.PSYCHIC,i.FLYING,.2,2,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,320,40,50,45,70,45,70,190,50,64,G.MEDIUM_FAST,50,!1),new P(e.XATU,2,!1,!1,!1,"Mystic Pokémon",i.PSYCHIC,i.FLYING,1.5,15,O.SYNCHRONIZE,O.EARLY_BIRD,O.MAGIC_BOUNCE,470,65,75,70,95,70,95,75,50,165,G.MEDIUM_FAST,50,!0),new P(e.MAREEP,2,!1,!1,!1,"Wool Pokémon",i.ELECTRIC,null,.6,7.8,O.STATIC,O.NONE,O.PLUS,280,55,40,40,65,45,35,235,70,56,G.MEDIUM_SLOW,50,!1),new P(e.FLAAFFY,2,!1,!1,!1,"Wool Pokémon",i.ELECTRIC,null,.8,13.3,O.STATIC,O.NONE,O.PLUS,365,70,55,55,80,60,45,120,70,128,G.MEDIUM_SLOW,50,!1),new P(e.AMPHAROS,2,!1,!1,!1,"Light Pokémon",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.ELECTRIC,null,1.4,61.5,O.STATIC,O.NONE,O.PLUS,510,90,75,85,115,90,55,45,70,255,!1,null,!0),new y("Mega",Me.MEGA,i.ELECTRIC,i.DRAGON,1.4,61.5,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,610,90,95,105,165,110,45,45,70,255)),new P(e.BELLOSSOM,2,!1,!1,!1,"Flower Pokémon",i.GRASS,null,.4,5.8,O.CHLOROPHYLL,O.NONE,O.HEALER,490,75,80,95,90,100,50,45,50,245,G.MEDIUM_SLOW,50,!1),new P(e.MARILL,2,!1,!1,!1,"Aqua Mouse Pokémon",i.WATER,i.FAIRY,.4,8.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,250,70,20,50,20,50,40,190,50,88,G.FAST,50,!1),new P(e.AZUMARILL,2,!1,!1,!1,"Aqua Rabbit Pokémon",i.WATER,i.FAIRY,.8,28.5,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,420,100,50,80,60,80,50,75,50,210,G.FAST,50,!1),new P(e.SUDOWOODO,2,!1,!1,!1,"Imitation Pokémon",i.ROCK,null,1.2,38,O.STURDY,O.ROCK_HEAD,O.RATTLED,410,70,100,115,30,65,30,65,50,144,G.MEDIUM_FAST,50,!0),new P(e.POLITOED,2,!1,!1,!1,"Frog Pokémon",i.WATER,null,1.1,33.9,O.WATER_ABSORB,O.DAMP,O.DRIZZLE,500,90,75,75,90,100,70,45,50,250,G.MEDIUM_SLOW,50,!0),new P(e.HOPPIP,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.4,.5,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,250,35,35,40,35,55,50,255,70,50,G.MEDIUM_SLOW,50,!1),new P(e.SKIPLOOM,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.6,1,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,340,55,45,50,45,65,80,120,70,119,G.MEDIUM_SLOW,50,!1),new P(e.JUMPLUFF,2,!1,!1,!1,"Cottonweed Pokémon",i.GRASS,i.FLYING,.8,3,O.CHLOROPHYLL,O.LEAF_GUARD,O.INFILTRATOR,460,75,55,70,55,95,110,45,70,230,G.MEDIUM_SLOW,50,!1),new P(e.AIPOM,2,!1,!1,!1,"Long Tail Pokémon",i.NORMAL,null,.8,11.5,O.RUN_AWAY,O.PICKUP,O.SKILL_LINK,360,55,70,55,40,55,85,45,70,72,G.FAST,50,!0),new P(e.SUNKERN,2,!1,!1,!1,"Seed Pokémon",i.GRASS,null,.3,1.8,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,180,30,30,30,30,30,30,235,70,36,G.MEDIUM_SLOW,50,!1),new P(e.SUNFLORA,2,!1,!1,!1,"Sun Pokémon",i.GRASS,null,.8,8.5,O.CHLOROPHYLL,O.SOLAR_POWER,O.EARLY_BIRD,425,75,75,55,105,85,30,120,70,149,G.MEDIUM_SLOW,50,!1),new P(e.YANMA,2,!1,!1,!1,"Clear Wing Pokémon",i.BUG,i.FLYING,1.2,38,O.SPEED_BOOST,O.COMPOUND_EYES,O.FRISK,390,65,65,45,75,45,95,75,70,78,G.MEDIUM_FAST,50,!1),new P(e.WOOPER,2,!1,!1,!1,"Water Fish Pokémon",i.WATER,i.GROUND,.4,8.5,O.DAMP,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,G.MEDIUM_FAST,50,!0),new P(e.QUAGSIRE,2,!1,!1,!1,"Water Fish Pokémon",i.WATER,i.GROUND,1.4,75,O.DAMP,O.WATER_ABSORB,O.UNAWARE,430,95,85,85,65,65,35,90,50,151,G.MEDIUM_FAST,50,!0),new P(e.ESPEON,2,!1,!1,!1,"Sun Pokémon",i.PSYCHIC,null,.9,26.5,O.SYNCHRONIZE,O.NONE,O.MAGIC_BOUNCE,525,65,65,60,130,95,110,45,50,184,G.MEDIUM_FAST,87.5,!1),new P(e.UMBREON,2,!1,!1,!1,"Moonlight Pokémon",i.DARK,null,1,27,O.SYNCHRONIZE,O.NONE,O.INNER_FOCUS,525,95,65,110,60,130,65,45,35,184,G.MEDIUM_FAST,87.5,!1),new P(e.MURKROW,2,!1,!1,!1,"Darkness Pokémon",i.DARK,i.FLYING,.5,2.1,O.INSOMNIA,O.SUPER_LUCK,O.PRANKSTER,405,60,85,42,85,42,91,30,35,81,G.MEDIUM_SLOW,50,!0),new P(e.SLOWKING,2,!1,!1,!1,"Royal Pokémon",i.WATER,i.PSYCHIC,2,79.5,O.OBLIVIOUS,O.OWN_TEMPO,O.REGENERATOR,490,95,75,80,100,110,30,70,50,172,G.MEDIUM_FAST,50,!1),new P(e.MISDREAVUS,2,!1,!1,!1,"Screech Pokémon",i.GHOST,null,.7,1,O.LEVITATE,O.NONE,O.NONE,435,60,60,60,85,85,85,45,35,87,G.FAST,50,!1),new P(e.UNOWN,2,!1,!1,!1,"Symbol Pokémon",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,G.MEDIUM_FAST,null,!1,!1,new y("A","a",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("B","b",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("C","c",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("D","d",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("E","e",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("F","f",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("G","g",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("H","h",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("I","i",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("J","j",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("K","k",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("L","l",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("M","m",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("N","n",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("O","o",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("P","p",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("Q","q",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("R","r",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("S","s",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("T","t",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("U","u",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("V","v",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("W","w",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("X","x",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("Y","y",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("Z","z",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("!","exclamation",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0),new y("?","question",i.PSYCHIC,null,.5,5,O.LEVITATE,O.NONE,O.NONE,336,48,72,48,72,48,48,225,70,118,!1,null,!0)),new P(e.WOBBUFFET,2,!1,!1,!1,"Patient Pokémon",i.PSYCHIC,null,1.3,28.5,O.SHADOW_TAG,O.NONE,O.TELEPATHY,405,190,33,58,33,58,33,45,50,142,G.MEDIUM_FAST,50,!0),new P(e.GIRAFARIG,2,!1,!1,!1,"Long Neck Pokémon",i.NORMAL,i.PSYCHIC,1.5,41.5,O.INNER_FOCUS,O.EARLY_BIRD,O.SAP_SIPPER,455,70,80,65,90,65,85,60,70,159,G.MEDIUM_FAST,50,!0),new P(e.PINECO,2,!1,!1,!1,"Bagworm Pokémon",i.BUG,null,.6,7.2,O.STURDY,O.NONE,O.OVERCOAT,290,50,65,90,35,35,15,190,70,58,G.MEDIUM_FAST,50,!1),new P(e.FORRETRESS,2,!1,!1,!1,"Bagworm Pokémon",i.BUG,i.STEEL,1.2,125.8,O.STURDY,O.NONE,O.OVERCOAT,465,75,90,140,60,60,40,75,70,163,G.MEDIUM_FAST,50,!1),new P(e.DUNSPARCE,2,!1,!1,!1,"Land Snake Pokémon",i.NORMAL,null,1.5,14,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,415,100,70,70,65,65,45,190,50,145,G.MEDIUM_FAST,50,!1),new P(e.GLIGAR,2,!1,!1,!1,"Fly Scorpion Pokémon",i.GROUND,i.FLYING,1.1,64.8,O.HYPER_CUTTER,O.SAND_VEIL,O.IMMUNITY,430,65,75,105,35,65,85,60,70,86,G.MEDIUM_SLOW,50,!0),new P(e.STEELIX,2,!1,!1,!1,"Iron Snake Pokémon",i.STEEL,i.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.STEEL,i.GROUND,9.2,400,O.ROCK_HEAD,O.STURDY,O.SHEER_FORCE,510,75,85,200,55,65,30,25,50,179,!0,null,!0),new y("Mega",Me.MEGA,i.STEEL,i.GROUND,10.5,740,O.SAND_FORCE,O.SAND_FORCE,O.SAND_FORCE,610,75,125,230,55,95,30,25,50,179,!0)),new P(e.SNUBBULL,2,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,.6,7.8,O.INTIMIDATE,O.RUN_AWAY,O.RATTLED,300,60,80,50,40,40,30,190,70,60,G.FAST,25,!1),new P(e.GRANBULL,2,!1,!1,!1,"Fairy Pokémon",i.FAIRY,null,1.4,48.7,O.INTIMIDATE,O.QUICK_FEET,O.RATTLED,450,90,120,75,60,60,45,75,70,158,G.FAST,25,!1),new P(e.QWILFISH,2,!1,!1,!1,"Balloon Pokémon",i.WATER,i.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,G.MEDIUM_FAST,50,!1),new P(e.SCIZOR,2,!1,!1,!1,"Pincer Pokémon",i.BUG,i.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.BUG,i.STEEL,1.8,118,O.SWARM,O.TECHNICIAN,O.LIGHT_METAL,500,70,130,100,55,80,65,25,50,175,!0,null,!0),new y("Mega",Me.MEGA,i.BUG,i.STEEL,2,125,O.TECHNICIAN,O.TECHNICIAN,O.TECHNICIAN,600,70,150,140,65,100,75,25,50,175,!0)),new P(e.SHUCKLE,2,!1,!1,!1,"Mold Pokémon",i.BUG,i.ROCK,.6,20.5,O.STURDY,O.GLUTTONY,O.CONTRARY,505,20,10,230,10,230,5,190,50,177,G.MEDIUM_SLOW,50,!1),new P(e.HERACROSS,2,!1,!1,!1,"Single Horn Pokémon",i.BUG,i.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,G.SLOW,50,!0,!0,new y("Normal","",i.BUG,i.FIGHTING,1.5,54,O.SWARM,O.GUTS,O.MOXIE,500,80,125,75,40,95,85,45,50,175,!0,null,!0),new y("Mega",Me.MEGA,i.BUG,i.FIGHTING,1.7,62.5,O.SKILL_LINK,O.SKILL_LINK,O.SKILL_LINK,600,80,185,115,40,105,75,45,50,175,!0)),new P(e.SNEASEL,2,!1,!1,!1,"Sharp Claw Pokémon",i.DARK,i.ICE,.9,28,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,G.MEDIUM_SLOW,50,!0),new P(e.TEDDIURSA,2,!1,!1,!1,"Little Bear Pokémon",i.NORMAL,null,.6,8.8,O.PICKUP,O.QUICK_FEET,O.HONEY_GATHER,330,60,80,50,50,50,40,120,70,66,G.MEDIUM_FAST,50,!1),new P(e.URSARING,2,!1,!1,!1,"Hibernator Pokémon",i.NORMAL,null,1.8,125.8,O.GUTS,O.QUICK_FEET,O.UNNERVE,500,90,130,75,75,75,55,60,70,175,G.MEDIUM_FAST,50,!0),new P(e.SLUGMA,2,!1,!1,!1,"Lava Pokémon",i.FIRE,null,.7,35,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,250,40,40,40,70,40,20,190,70,50,G.MEDIUM_FAST,50,!1),new P(e.MAGCARGO,2,!1,!1,!1,"Lava Pokémon",i.FIRE,i.ROCK,.8,55,O.MAGMA_ARMOR,O.FLAME_BODY,O.WEAK_ARMOR,430,60,50,120,90,80,30,75,70,151,G.MEDIUM_FAST,50,!1),new P(e.SWINUB,2,!1,!1,!1,"Pig Pokémon",i.ICE,i.GROUND,.4,6.5,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,250,50,50,40,30,30,50,225,50,50,G.SLOW,50,!1),new P(e.PILOSWINE,2,!1,!1,!1,"Swine Pokémon",i.ICE,i.GROUND,1.1,55.8,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,450,100,100,80,60,60,50,75,50,158,G.SLOW,50,!0),new P(e.CORSOLA,2,!1,!1,!1,"Coral Pokémon",i.WATER,i.ROCK,.6,5,O.HUSTLE,O.NATURAL_CURE,O.REGENERATOR,410,65,55,95,65,95,35,60,50,144,G.FAST,25,!1),new P(e.REMORAID,2,!1,!1,!1,"Jet Pokémon",i.WATER,null,.6,12,O.HUSTLE,O.SNIPER,O.MOODY,300,35,65,35,65,35,65,190,50,60,G.MEDIUM_FAST,50,!1),new P(e.OCTILLERY,2,!1,!1,!1,"Jet Pokémon",i.WATER,null,.9,28.5,O.SUCTION_CUPS,O.SNIPER,O.MOODY,480,75,105,75,105,75,45,75,50,168,G.MEDIUM_FAST,50,!0),new P(e.DELIBIRD,2,!1,!1,!1,"Delivery Pokémon",i.ICE,i.FLYING,.9,16,O.VITAL_SPIRIT,O.HUSTLE,O.INSOMNIA,330,45,55,45,65,45,75,45,50,116,G.FAST,50,!1),new P(e.MANTINE,2,!1,!1,!1,"Kite Pokémon",i.WATER,i.FLYING,2.1,220,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,485,85,40,70,80,140,70,25,50,170,G.SLOW,50,!1),new P(e.SKARMORY,2,!1,!1,!1,"Armor Bird Pokémon",i.STEEL,i.FLYING,1.7,50.5,O.KEEN_EYE,O.STURDY,O.WEAK_ARMOR,465,65,80,140,40,70,70,25,50,163,G.SLOW,50,!1),new P(e.HOUNDOUR,2,!1,!1,!1,"Dark Pokémon",i.DARK,i.FIRE,.6,10.8,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,330,45,60,30,80,50,65,120,35,66,G.SLOW,50,!1),new P(e.HOUNDOOM,2,!1,!1,!1,"Dark Pokémon",i.DARK,i.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,G.SLOW,50,!0,!0,new y("Normal","",i.DARK,i.FIRE,1.4,35,O.EARLY_BIRD,O.FLASH_FIRE,O.UNNERVE,500,75,90,50,110,80,95,45,35,175,!0,null,!0),new y("Mega",Me.MEGA,i.DARK,i.FIRE,1.9,49.5,O.SOLAR_POWER,O.SOLAR_POWER,O.SOLAR_POWER,600,75,90,90,140,90,115,45,35,175,!0)),new P(e.KINGDRA,2,!1,!1,!1,"Dragon Pokémon",i.WATER,i.DRAGON,1.8,152,O.SWIFT_SWIM,O.SNIPER,O.DAMP,540,75,95,95,95,95,85,45,50,270,G.MEDIUM_FAST,50,!1),new P(e.PHANPY,2,!1,!1,!1,"Long Nose Pokémon",i.GROUND,null,.5,33.5,O.PICKUP,O.NONE,O.SAND_VEIL,330,90,60,60,40,40,40,120,70,66,G.MEDIUM_FAST,50,!1),new P(e.DONPHAN,2,!1,!1,!1,"Armor Pokémon",i.GROUND,null,1.1,120,O.STURDY,O.NONE,O.SAND_VEIL,500,90,120,120,60,60,50,60,70,175,G.MEDIUM_FAST,50,!0),new P(e.PORYGON2,2,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.6,32.5,O.TRACE,O.DOWNLOAD,O.ANALYTIC,515,85,80,90,105,95,60,45,50,180,G.MEDIUM_FAST,null,!1),new P(e.STANTLER,2,!1,!1,!1,"Big Horn Pokémon",i.NORMAL,null,1.4,71.2,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,465,73,95,62,85,65,85,45,70,163,G.SLOW,50,!1),new P(e.SMEARGLE,2,!1,!1,!1,"Painter Pokémon",i.NORMAL,null,1.2,58,O.OWN_TEMPO,O.TECHNICIAN,O.MOODY,250,55,20,35,20,45,75,45,70,88,G.FAST,50,!1),new P(e.TYROGUE,2,!1,!1,!1,"Scuffle Pokémon",i.FIGHTING,null,.7,21,O.GUTS,O.STEADFAST,O.VITAL_SPIRIT,210,35,35,35,35,35,35,75,50,42,G.MEDIUM_FAST,100,!1),new P(e.HITMONTOP,2,!1,!1,!1,"Handstand Pokémon",i.FIGHTING,null,1.4,48,O.INTIMIDATE,O.TECHNICIAN,O.STEADFAST,455,50,95,95,35,110,70,45,50,159,G.MEDIUM_FAST,100,!1),new P(e.SMOOCHUM,2,!1,!1,!1,"Kiss Pokémon",i.ICE,i.PSYCHIC,.4,6,O.OBLIVIOUS,O.FOREWARN,O.HYDRATION,305,45,30,15,85,65,65,45,50,61,G.MEDIUM_FAST,0,!1),new P(e.ELEKID,2,!1,!1,!1,"Electric Pokémon",i.ELECTRIC,null,.6,23.5,O.STATIC,O.NONE,O.VITAL_SPIRIT,360,45,63,37,65,55,95,45,50,72,G.MEDIUM_FAST,75,!1),new P(e.MAGBY,2,!1,!1,!1,"Live Coal Pokémon",i.FIRE,null,.7,21.4,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,365,45,75,37,70,55,83,45,50,73,G.MEDIUM_FAST,75,!1),new P(e.MILTANK,2,!1,!1,!1,"Milk Cow Pokémon",i.NORMAL,null,1.2,75.5,O.THICK_FAT,O.SCRAPPY,O.SAP_SIPPER,490,95,80,105,40,70,100,45,50,172,G.SLOW,0,!1),new P(e.BLISSEY,2,!1,!1,!1,"Happiness Pokémon",i.NORMAL,null,1.5,46.8,O.NATURAL_CURE,O.SERENE_GRACE,O.HEALER,540,255,10,10,75,135,55,30,140,608,G.FAST,0,!1),new P(e.RAIKOU,2,!0,!1,!1,"Thunder Pokémon",i.ELECTRIC,null,1.9,178,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,90,85,75,115,100,115,3,35,290,G.SLOW,null,!1),new P(e.ENTEI,2,!0,!1,!1,"Volcano Pokémon",i.FIRE,null,2.1,198,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,115,115,85,90,75,100,3,35,290,G.SLOW,null,!1),new P(e.SUICUNE,2,!0,!1,!1,"Aurora Pokémon",i.WATER,null,2,187,O.PRESSURE,O.NONE,O.INNER_FOCUS,580,100,75,115,90,115,85,3,35,290,G.SLOW,null,!1),new P(e.LARVITAR,2,!1,!1,!1,"Rock Skin Pokémon",i.ROCK,i.GROUND,.6,72,O.GUTS,O.NONE,O.SAND_VEIL,300,50,64,50,45,50,41,45,35,60,G.SLOW,50,!1),new P(e.PUPITAR,2,!1,!1,!1,"Hard Shell Pokémon",i.ROCK,i.GROUND,1.2,152,O.SHED_SKIN,O.NONE,O.SHED_SKIN,410,70,84,70,65,70,51,45,35,144,G.SLOW,50,!1),new P(e.TYRANITAR,2,!1,!1,!1,"Armor Pokémon",i.ROCK,i.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,G.SLOW,50,!1,!0,new y("Normal","",i.ROCK,i.DARK,2,202,O.SAND_STREAM,O.NONE,O.UNNERVE,600,100,134,110,95,100,61,45,35,300,!1,null,!0),new y("Mega",Me.MEGA,i.ROCK,i.DARK,2.5,255,O.SAND_STREAM,O.NONE,O.SAND_STREAM,700,100,164,150,95,120,71,45,35,300)),new P(e.LUGIA,2,!1,!0,!1,"Diving Pokémon",i.PSYCHIC,i.FLYING,5.2,216,O.PRESSURE,O.NONE,O.MULTISCALE,680,106,90,130,90,154,110,3,0,340,G.SLOW,null,!1),new P(e.HO_OH,2,!1,!0,!1,"Rainbow Pokémon",i.FIRE,i.FLYING,3.8,199,O.PRESSURE,O.NONE,O.REGENERATOR,680,106,130,90,110,154,90,3,0,340,G.SLOW,null,!1),new P(e.CELEBI,2,!1,!1,!0,"Time Travel Pokémon",i.PSYCHIC,i.GRASS,.6,5,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,G.MEDIUM_SLOW,null,!1),new P(e.TREECKO,3,!1,!1,!1,"Wood Gecko Pokémon",i.GRASS,null,.5,5,O.OVERGROW,O.NONE,O.UNBURDEN,310,40,45,35,65,55,70,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.GROVYLE,3,!1,!1,!1,"Wood Gecko Pokémon",i.GRASS,null,.9,21.6,O.OVERGROW,O.NONE,O.UNBURDEN,405,50,65,45,85,65,95,45,50,142,G.MEDIUM_SLOW,87.5,!1),new P(e.SCEPTILE,3,!1,!1,!1,"Forest Pokémon",i.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.GRASS,null,1.7,52.2,O.OVERGROW,O.NONE,O.UNBURDEN,530,70,85,65,105,85,120,45,50,265,!1,null,!0),new y("Mega",Me.MEGA,i.GRASS,i.DRAGON,1.9,55.2,O.LIGHTNING_ROD,O.NONE,O.LIGHTNING_ROD,630,70,110,75,145,85,145,45,50,265)),new P(e.TORCHIC,3,!1,!1,!1,"Chick Pokémon",i.FIRE,null,.4,2.5,O.BLAZE,O.NONE,O.SPEED_BOOST,310,45,60,40,70,50,45,45,50,62,G.MEDIUM_SLOW,87.5,!0),new P(e.COMBUSKEN,3,!1,!1,!1,"Young Fowl Pokémon",i.FIRE,i.FIGHTING,.9,19.5,O.BLAZE,O.NONE,O.SPEED_BOOST,405,60,85,60,85,60,55,45,50,142,G.MEDIUM_SLOW,87.5,!0),new P(e.BLAZIKEN,3,!1,!1,!1,"Blaze Pokémon",i.FIRE,i.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,G.MEDIUM_SLOW,87.5,!0,!0,new y("Normal","",i.FIRE,i.FIGHTING,1.9,52,O.BLAZE,O.NONE,O.SPEED_BOOST,530,80,120,70,110,70,80,45,50,265,!0,null,!0),new y("Mega",Me.MEGA,i.FIRE,i.FIGHTING,1.9,52,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,630,80,160,80,130,80,100,45,50,265,!0)),new P(e.MUDKIP,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,null,.4,7.6,O.TORRENT,O.NONE,O.DAMP,310,50,70,50,50,50,40,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.MARSHTOMP,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,i.GROUND,.7,28,O.TORRENT,O.NONE,O.DAMP,405,70,85,70,60,70,50,45,50,142,G.MEDIUM_SLOW,87.5,!1),new P(e.SWAMPERT,3,!1,!1,!1,"Mud Fish Pokémon",i.WATER,i.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.WATER,i.GROUND,1.5,81.9,O.TORRENT,O.NONE,O.DAMP,535,100,110,90,85,90,60,45,50,268,!1,null,!0),new y("Mega",Me.MEGA,i.WATER,i.GROUND,1.9,102,O.SWIFT_SWIM,O.NONE,O.SWIFT_SWIM,635,100,150,110,95,110,70,45,50,268)),new P(e.POOCHYENA,3,!1,!1,!1,"Bite Pokémon",i.DARK,null,.5,13.6,O.RUN_AWAY,O.QUICK_FEET,O.RATTLED,220,35,55,35,30,30,35,255,70,56,G.MEDIUM_FAST,50,!1),new P(e.MIGHTYENA,3,!1,!1,!1,"Bite Pokémon",i.DARK,null,1,37,O.INTIMIDATE,O.QUICK_FEET,O.MOXIE,420,70,90,70,60,60,70,127,70,147,G.MEDIUM_FAST,50,!1),new P(e.ZIGZAGOON,3,!1,!1,!1,"Tiny Raccoon Pokémon",i.NORMAL,null,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,G.MEDIUM_FAST,50,!1),new P(e.LINOONE,3,!1,!1,!1,"Rushing Pokémon",i.NORMAL,null,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,G.MEDIUM_FAST,50,!1),new P(e.WURMPLE,3,!1,!1,!1,"Worm Pokémon",i.BUG,null,.3,3.6,O.SHIELD_DUST,O.NONE,O.RUN_AWAY,195,45,45,35,20,30,20,255,70,56,G.MEDIUM_FAST,50,!1),new P(e.SILCOON,3,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.6,10,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,G.MEDIUM_FAST,50,!1),new P(e.BEAUTIFLY,3,!1,!1,!1,"Butterfly Pokémon",i.BUG,i.FLYING,1,28.4,O.SWARM,O.NONE,O.RIVALRY,395,60,70,50,100,50,65,45,70,198,G.MEDIUM_FAST,50,!0),new P(e.CASCOON,3,!1,!1,!1,"Cocoon Pokémon",i.BUG,null,.7,11.5,O.SHED_SKIN,O.NONE,O.SHED_SKIN,205,50,35,55,25,25,15,120,70,72,G.MEDIUM_FAST,50,!1),new P(e.DUSTOX,3,!1,!1,!1,"Poison Moth Pokémon",i.BUG,i.POISON,1.2,31.6,O.SHIELD_DUST,O.NONE,O.COMPOUND_EYES,385,60,50,70,50,90,65,45,70,193,G.MEDIUM_FAST,50,!0),new P(e.LOTAD,3,!1,!1,!1,"Water Weed Pokémon",i.WATER,i.GRASS,.5,2.6,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,220,40,30,30,40,50,30,255,50,44,G.MEDIUM_SLOW,50,!1),new P(e.LOMBRE,3,!1,!1,!1,"Jolly Pokémon",i.WATER,i.GRASS,1.2,32.5,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,340,60,50,50,60,70,50,120,50,119,G.MEDIUM_SLOW,50,!1),new P(e.LUDICOLO,3,!1,!1,!1,"Carefree Pokémon",i.WATER,i.GRASS,1.5,55,O.SWIFT_SWIM,O.RAIN_DISH,O.OWN_TEMPO,480,80,70,70,90,100,70,45,50,240,G.MEDIUM_SLOW,50,!0),new P(e.SEEDOT,3,!1,!1,!1,"Acorn Pokémon",i.GRASS,null,.5,4,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,220,40,40,50,30,30,30,255,50,44,G.MEDIUM_SLOW,50,!1),new P(e.NUZLEAF,3,!1,!1,!1,"Wily Pokémon",i.GRASS,i.DARK,1,28,O.CHLOROPHYLL,O.EARLY_BIRD,O.PICKPOCKET,340,70,70,40,60,40,60,120,50,119,G.MEDIUM_SLOW,50,!0),new P(e.SHIFTRY,3,!1,!1,!1,"Wicked Pokémon",i.GRASS,i.DARK,1.3,59.6,O.CHLOROPHYLL,O.WIND_RIDER,O.PICKPOCKET,480,90,100,60,90,60,80,45,50,240,G.MEDIUM_SLOW,50,!0),new P(e.TAILLOW,3,!1,!1,!1,"Tiny Swallow Pokémon",i.NORMAL,i.FLYING,.3,2.3,O.GUTS,O.NONE,O.SCRAPPY,270,40,55,30,30,30,85,200,70,54,G.MEDIUM_SLOW,50,!1),new P(e.SWELLOW,3,!1,!1,!1,"Swallow Pokémon",i.NORMAL,i.FLYING,.7,19.8,O.GUTS,O.NONE,O.SCRAPPY,455,60,85,60,75,50,125,45,70,159,G.MEDIUM_SLOW,50,!1),new P(e.WINGULL,3,!1,!1,!1,"Seagull Pokémon",i.WATER,i.FLYING,.6,9.5,O.KEEN_EYE,O.HYDRATION,O.RAIN_DISH,270,40,30,30,55,30,85,190,50,54,G.MEDIUM_FAST,50,!1),new P(e.PELIPPER,3,!1,!1,!1,"Water Bird Pokémon",i.WATER,i.FLYING,1.2,28,O.KEEN_EYE,O.DRIZZLE,O.RAIN_DISH,440,60,50,100,95,70,65,45,50,154,G.MEDIUM_FAST,50,!1),new P(e.RALTS,3,!1,!1,!1,"Feeling Pokémon",i.PSYCHIC,i.FAIRY,.4,6.6,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,198,28,25,25,45,35,40,235,35,40,G.SLOW,50,!1),new P(e.KIRLIA,3,!1,!1,!1,"Emotion Pokémon",i.PSYCHIC,i.FAIRY,.8,20.2,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,278,38,35,35,65,55,50,120,35,97,G.SLOW,50,!1),new P(e.GARDEVOIR,3,!1,!1,!1,"Embrace Pokémon",i.PSYCHIC,i.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,G.SLOW,50,!1,!0,new y("Normal","",i.PSYCHIC,i.FAIRY,1.6,48.4,O.SYNCHRONIZE,O.TRACE,O.TELEPATHY,518,68,65,65,125,115,80,45,35,259,!1,null,!0),new y("Mega",Me.MEGA,i.PSYCHIC,i.FAIRY,1.6,48.4,O.PIXILATE,O.PIXILATE,O.PIXILATE,618,68,85,65,165,135,100,45,35,259)),new P(e.SURSKIT,3,!1,!1,!1,"Pond Skater Pokémon",i.BUG,i.WATER,.5,1.7,O.SWIFT_SWIM,O.NONE,O.RAIN_DISH,269,40,30,32,50,52,65,200,70,54,G.MEDIUM_FAST,50,!1),new P(e.MASQUERAIN,3,!1,!1,!1,"Eyeball Pokémon",i.BUG,i.FLYING,.8,3.6,O.INTIMIDATE,O.NONE,O.UNNERVE,454,70,60,62,100,82,80,75,70,159,G.MEDIUM_FAST,50,!1),new P(e.SHROOMISH,3,!1,!1,!1,"Mushroom Pokémon",i.GRASS,null,.4,4.5,O.EFFECT_SPORE,O.POISON_HEAL,O.QUICK_FEET,295,60,40,60,40,60,35,255,70,59,G.FLUCTUATING,50,!1),new P(e.BRELOOM,3,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.FIGHTING,1.2,39.2,O.EFFECT_SPORE,O.POISON_HEAL,O.TECHNICIAN,460,60,130,80,60,60,70,90,70,161,G.FLUCTUATING,50,!1),new P(e.SLAKOTH,3,!1,!1,!1,"Slacker Pokémon",i.NORMAL,null,.8,24,O.TRUANT,O.NONE,O.STALL,280,60,60,60,35,35,30,255,70,56,G.SLOW,50,!1),new P(e.VIGOROTH,3,!1,!1,!1,"Wild Monkey Pokémon",i.NORMAL,null,1.4,46.5,O.VITAL_SPIRIT,O.NONE,O.INSOMNIA,440,80,80,80,55,55,90,120,70,154,G.SLOW,50,!1),new P(e.SLAKING,3,!1,!1,!1,"Lazy Pokémon",i.NORMAL,null,2,130.5,O.TRUANT,O.NONE,O.STALL,670,150,160,100,95,65,100,45,70,285,G.SLOW,50,!1),new P(e.NINCADA,3,!1,!1,!1,"Trainee Pokémon",i.BUG,i.GROUND,.5,5.5,O.COMPOUND_EYES,O.NONE,O.RUN_AWAY,266,31,45,90,30,30,40,255,50,53,G.ERRATIC,50,!1),new P(e.NINJASK,3,!1,!1,!1,"Ninja Pokémon",i.BUG,i.FLYING,.8,12,O.SPEED_BOOST,O.NONE,O.INFILTRATOR,456,61,90,45,50,50,160,120,50,160,G.ERRATIC,50,!1),new P(e.SHEDINJA,3,!1,!1,!1,"Shed Pokémon",i.BUG,i.GHOST,.8,1.2,O.WONDER_GUARD,O.NONE,O.NONE,236,1,90,45,30,30,40,45,50,83,G.ERRATIC,null,!1),new P(e.WHISMUR,3,!1,!1,!1,"Whisper Pokémon",i.NORMAL,null,.6,16.3,O.SOUNDPROOF,O.NONE,O.RATTLED,240,64,51,23,51,23,28,190,50,48,G.MEDIUM_SLOW,50,!1),new P(e.LOUDRED,3,!1,!1,!1,"Big Voice Pokémon",i.NORMAL,null,1,40.5,O.SOUNDPROOF,O.NONE,O.SCRAPPY,360,84,71,43,71,43,48,120,50,126,G.MEDIUM_SLOW,50,!1),new P(e.EXPLOUD,3,!1,!1,!1,"Loud Noise Pokémon",i.NORMAL,null,1.5,84,O.SOUNDPROOF,O.NONE,O.SCRAPPY,490,104,91,63,91,73,68,45,50,245,G.MEDIUM_SLOW,50,!1),new P(e.MAKUHITA,3,!1,!1,!1,"Guts Pokémon",i.FIGHTING,null,1,86.4,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,237,72,60,30,20,30,25,180,70,47,G.FLUCTUATING,75,!1),new P(e.HARIYAMA,3,!1,!1,!1,"Arm Thrust Pokémon",i.FIGHTING,null,2.3,253.8,O.THICK_FAT,O.GUTS,O.SHEER_FORCE,474,144,120,60,40,60,50,200,70,166,G.FLUCTUATING,75,!1),new P(e.AZURILL,3,!1,!1,!1,"Polka Dot Pokémon",i.NORMAL,i.FAIRY,.2,2,O.THICK_FAT,O.HUGE_POWER,O.SAP_SIPPER,190,50,20,40,20,40,20,150,50,38,G.FAST,25,!1),new P(e.NOSEPASS,3,!1,!1,!1,"Compass Pokémon",i.ROCK,null,1,97,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,375,30,45,135,45,90,30,255,70,75,G.MEDIUM_FAST,50,!1),new P(e.SKITTY,3,!1,!1,!1,"Kitten Pokémon",i.NORMAL,null,.6,11,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,260,50,45,45,35,35,50,255,70,52,G.FAST,25,!1),new P(e.DELCATTY,3,!1,!1,!1,"Prim Pokémon",i.NORMAL,null,1.1,32.6,O.CUTE_CHARM,O.NORMALIZE,O.WONDER_SKIN,400,70,65,65,55,55,90,60,70,140,G.FAST,25,!1),new P(e.SABLEYE,3,!1,!1,!1,"Darkness Pokémon",i.DARK,i.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.DARK,i.GHOST,.5,11,O.KEEN_EYE,O.STALL,O.PRANKSTER,380,50,75,75,65,65,50,45,35,133,!1,null,!0),new y("Mega",Me.MEGA,i.DARK,i.GHOST,.5,161,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,480,50,85,125,85,115,20,45,35,133)),new P(e.MAWILE,3,!1,!1,!1,"Deceiver Pokémon",i.STEEL,i.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,G.FAST,50,!1,!0,new y("Normal","",i.STEEL,i.FAIRY,.6,11.5,O.HYPER_CUTTER,O.INTIMIDATE,O.SHEER_FORCE,380,50,85,85,55,55,50,45,50,133,!1,null,!0),new y("Mega",Me.MEGA,i.STEEL,i.FAIRY,1,23.5,O.HUGE_POWER,O.HUGE_POWER,O.HUGE_POWER,480,50,105,125,55,95,50,45,50,133)),new P(e.ARON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,.4,60,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,330,50,70,100,40,40,30,180,35,66,G.SLOW,50,!1),new P(e.LAIRON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,.9,120,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,430,60,90,140,50,50,40,90,35,151,G.SLOW,50,!1),new P(e.AGGRON,3,!1,!1,!1,"Iron Armor Pokémon",i.STEEL,i.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,G.SLOW,50,!1,!0,new y("Normal","",i.STEEL,i.ROCK,2.1,360,O.STURDY,O.ROCK_HEAD,O.HEAVY_METAL,530,70,110,180,60,60,50,45,35,265,!1,null,!0),new y("Mega",Me.MEGA,i.STEEL,null,2.2,395,O.FILTER,O.FILTER,O.FILTER,630,70,140,230,60,80,50,45,35,265)),new P(e.MEDITITE,3,!1,!1,!1,"Meditate Pokémon",i.FIGHTING,i.PSYCHIC,.6,11.2,O.PURE_POWER,O.NONE,O.TELEPATHY,280,30,40,55,40,55,60,180,70,56,G.MEDIUM_FAST,50,!0),new P(e.MEDICHAM,3,!1,!1,!1,"Meditate Pokémon",i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.TELEPATHY,410,60,60,75,60,75,80,90,70,144,!0,null,!0),new y("Mega",Me.MEGA,i.FIGHTING,i.PSYCHIC,1.3,31.5,O.PURE_POWER,O.NONE,O.PURE_POWER,510,60,100,85,80,85,100,90,70,144,!0)),new P(e.ELECTRIKE,3,!1,!1,!1,"Lightning Pokémon",i.ELECTRIC,null,.6,15.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,295,40,45,40,65,40,65,120,50,59,G.SLOW,50,!1),new P(e.MANECTRIC,3,!1,!1,!1,"Discharge Pokémon",i.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,G.SLOW,50,!1,!0,new y("Normal","",i.ELECTRIC,null,1.5,40.2,O.STATIC,O.LIGHTNING_ROD,O.MINUS,475,70,75,60,105,60,105,45,50,166,!1,null,!0),new y("Mega",Me.MEGA,i.ELECTRIC,null,1.8,44,O.INTIMIDATE,O.INTIMIDATE,O.INTIMIDATE,575,70,75,80,135,80,135,45,50,166)),new P(e.PLUSLE,3,!1,!1,!1,"Cheering Pokémon",i.ELECTRIC,null,.4,4.2,O.PLUS,O.NONE,O.LIGHTNING_ROD,405,60,50,40,85,75,95,200,70,142,G.MEDIUM_FAST,50,!1),new P(e.MINUN,3,!1,!1,!1,"Cheering Pokémon",i.ELECTRIC,null,.4,4.2,O.MINUS,O.NONE,O.VOLT_ABSORB,405,60,40,50,75,85,95,200,70,142,G.MEDIUM_FAST,50,!1),new P(e.VOLBEAT,3,!1,!1,!1,"Firefly Pokémon",i.BUG,null,.7,17.7,O.ILLUMINATE,O.SWARM,O.PRANKSTER,430,65,73,75,47,85,85,150,70,151,G.ERRATIC,100,!1),new P(e.ILLUMISE,3,!1,!1,!1,"Firefly Pokémon",i.BUG,null,.6,17.7,O.OBLIVIOUS,O.TINTED_LENS,O.PRANKSTER,430,65,47,75,73,85,85,150,70,151,G.FLUCTUATING,0,!1),new P(e.ROSELIA,3,!1,!1,!1,"Thorn Pokémon",i.GRASS,i.POISON,.3,2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,400,50,60,45,100,80,65,150,50,140,G.MEDIUM_SLOW,50,!0),new P(e.GULPIN,3,!1,!1,!1,"Stomach Pokémon",i.POISON,null,.4,10.3,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,302,70,43,53,43,53,40,225,70,60,G.FLUCTUATING,50,!0),new P(e.SWALOT,3,!1,!1,!1,"Poison Bag Pokémon",i.POISON,null,1.7,80,O.LIQUID_OOZE,O.STICKY_HOLD,O.GLUTTONY,467,100,73,83,73,83,55,75,70,163,G.FLUCTUATING,50,!0),new P(e.CARVANHA,3,!1,!1,!1,"Savage Pokémon",i.WATER,i.DARK,.8,20.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,305,45,90,20,65,20,65,225,35,61,G.SLOW,50,!1),new P(e.SHARPEDO,3,!1,!1,!1,"Brutal Pokémon",i.WATER,i.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,G.SLOW,50,!1,!0,new y("Normal","",i.WATER,i.DARK,1.8,88.8,O.ROUGH_SKIN,O.NONE,O.SPEED_BOOST,460,70,120,40,95,40,95,60,35,161,!1,null,!0),new y("Mega",Me.MEGA,i.WATER,i.DARK,2.5,130.3,O.STRONG_JAW,O.NONE,O.STRONG_JAW,560,70,140,70,110,65,105,60,35,161)),new P(e.WAILMER,3,!1,!1,!1,"Ball Whale Pokémon",i.WATER,null,2,130,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,400,130,70,35,70,35,60,125,50,80,G.FLUCTUATING,50,!1),new P(e.WAILORD,3,!1,!1,!1,"Float Whale Pokémon",i.WATER,null,14.5,398,O.WATER_VEIL,O.OBLIVIOUS,O.PRESSURE,500,170,90,45,90,45,60,60,50,175,G.FLUCTUATING,50,!1),new P(e.NUMEL,3,!1,!1,!1,"Numb Pokémon",i.FIRE,i.GROUND,.7,24,O.OBLIVIOUS,O.SIMPLE,O.OWN_TEMPO,305,60,60,40,65,45,35,255,70,61,G.MEDIUM_FAST,50,!0),new P(e.CAMERUPT,3,!1,!1,!1,"Eruption Pokémon",i.FIRE,i.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,G.MEDIUM_FAST,50,!0,!0,new y("Normal","",i.FIRE,i.GROUND,1.9,220,O.MAGMA_ARMOR,O.SOLID_ROCK,O.ANGER_POINT,460,70,100,70,105,75,40,150,70,161,!0,null,!0),new y("Mega",Me.MEGA,i.FIRE,i.GROUND,2.5,320.5,O.SHEER_FORCE,O.SHEER_FORCE,O.SHEER_FORCE,560,70,120,100,145,105,20,150,70,161)),new P(e.TORKOAL,3,!1,!1,!1,"Coal Pokémon",i.FIRE,null,.5,80.4,O.WHITE_SMOKE,O.DROUGHT,O.SHELL_ARMOR,470,70,85,140,85,70,20,90,50,165,G.MEDIUM_FAST,50,!1),new P(e.SPOINK,3,!1,!1,!1,"Bounce Pokémon",i.PSYCHIC,null,.7,30.6,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,330,60,25,35,70,80,60,255,70,66,G.FAST,50,!1),new P(e.GRUMPIG,3,!1,!1,!1,"Manipulate Pokémon",i.PSYCHIC,null,.9,71.5,O.THICK_FAT,O.OWN_TEMPO,O.GLUTTONY,470,80,45,65,90,110,80,60,70,165,G.FAST,50,!1),new P(e.SPINDA,3,!1,!1,!1,"Spot Panda Pokémon",i.NORMAL,null,1.1,5,O.OWN_TEMPO,O.TANGLED_FEET,O.CONTRARY,360,60,60,60,60,60,60,255,70,126,G.FAST,50,!1),new P(e.TRAPINCH,3,!1,!1,!1,"Ant Pit Pokémon",i.GROUND,null,.7,15,O.HYPER_CUTTER,O.ARENA_TRAP,O.SHEER_FORCE,290,45,100,45,45,45,10,255,50,58,G.MEDIUM_SLOW,50,!1),new P(e.VIBRAVA,3,!1,!1,!1,"Vibration Pokémon",i.GROUND,i.DRAGON,1.1,15.3,O.LEVITATE,O.NONE,O.NONE,340,50,70,50,50,50,70,120,50,119,G.MEDIUM_SLOW,50,!1),new P(e.FLYGON,3,!1,!1,!1,"Mystic Pokémon",i.GROUND,i.DRAGON,2,82,O.LEVITATE,O.NONE,O.NONE,520,80,100,80,80,80,100,45,50,260,G.MEDIUM_SLOW,50,!1),new P(e.CACNEA,3,!1,!1,!1,"Cactus Pokémon",i.GRASS,null,.4,51.3,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,335,50,85,40,85,40,35,190,35,67,G.MEDIUM_SLOW,50,!1),new P(e.CACTURNE,3,!1,!1,!1,"Scarecrow Pokémon",i.GRASS,i.DARK,1.3,77.4,O.SAND_VEIL,O.NONE,O.WATER_ABSORB,475,70,115,60,115,60,55,60,35,166,G.MEDIUM_SLOW,50,!0),new P(e.SWABLU,3,!1,!1,!1,"Cotton Bird Pokémon",i.NORMAL,i.FLYING,.4,1.2,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,310,45,40,60,40,75,50,255,50,62,G.ERRATIC,50,!1),new P(e.ALTARIA,3,!1,!1,!1,"Humming Pokémon",i.DRAGON,i.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,G.ERRATIC,50,!1,!0,new y("Normal","",i.DRAGON,i.FLYING,1.1,20.6,O.NATURAL_CURE,O.NONE,O.CLOUD_NINE,490,75,70,90,70,105,80,45,50,172,!1,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.FAIRY,1.5,20.6,O.PIXILATE,O.NONE,O.PIXILATE,590,75,110,110,110,105,80,45,50,172)),new P(e.ZANGOOSE,3,!1,!1,!1,"Cat Ferret Pokémon",i.NORMAL,null,1.3,40.3,O.IMMUNITY,O.NONE,O.TOXIC_BOOST,458,73,115,60,60,60,90,90,70,160,G.ERRATIC,50,!1),new P(e.SEVIPER,3,!1,!1,!1,"Fang Snake Pokémon",i.POISON,null,2.7,52.5,O.SHED_SKIN,O.NONE,O.INFILTRATOR,458,73,100,60,100,60,65,90,70,160,G.FLUCTUATING,50,!1),new P(e.LUNATONE,3,!1,!1,!1,"Meteorite Pokémon",i.ROCK,i.PSYCHIC,1,168,O.LEVITATE,O.NONE,O.NONE,460,90,55,65,95,85,70,45,50,161,G.FAST,null,!1),new P(e.SOLROCK,3,!1,!1,!1,"Meteorite Pokémon",i.ROCK,i.PSYCHIC,1.2,154,O.LEVITATE,O.NONE,O.NONE,460,90,95,85,55,65,70,45,50,161,G.FAST,null,!1),new P(e.BARBOACH,3,!1,!1,!1,"Whiskers Pokémon",i.WATER,i.GROUND,.4,1.9,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,288,50,48,43,46,41,60,190,50,58,G.MEDIUM_FAST,50,!1),new P(e.WHISCASH,3,!1,!1,!1,"Whiskers Pokémon",i.WATER,i.GROUND,.9,23.6,O.OBLIVIOUS,O.ANTICIPATION,O.HYDRATION,468,110,78,73,76,71,60,75,50,164,G.MEDIUM_FAST,50,!1),new P(e.CORPHISH,3,!1,!1,!1,"Ruffian Pokémon",i.WATER,null,.6,11.5,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,308,43,80,65,50,35,35,205,50,62,G.FLUCTUATING,50,!1),new P(e.CRAWDAUNT,3,!1,!1,!1,"Rogue Pokémon",i.WATER,i.DARK,1.1,32.8,O.HYPER_CUTTER,O.SHELL_ARMOR,O.ADAPTABILITY,468,63,120,85,90,55,55,155,50,164,G.FLUCTUATING,50,!1),new P(e.BALTOY,3,!1,!1,!1,"Clay Doll Pokémon",i.GROUND,i.PSYCHIC,.5,21.5,O.LEVITATE,O.NONE,O.NONE,300,40,40,55,40,70,55,255,50,60,G.MEDIUM_FAST,null,!1),new P(e.CLAYDOL,3,!1,!1,!1,"Clay Doll Pokémon",i.GROUND,i.PSYCHIC,1.5,108,O.LEVITATE,O.NONE,O.NONE,500,60,70,105,70,120,75,90,50,175,G.MEDIUM_FAST,null,!1),new P(e.LILEEP,3,!1,!1,!1,"Sea Lily Pokémon",i.ROCK,i.GRASS,1,23.8,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,355,66,41,77,61,87,23,45,50,71,G.ERRATIC,87.5,!1),new P(e.CRADILY,3,!1,!1,!1,"Barnacle Pokémon",i.ROCK,i.GRASS,1.5,60.4,O.SUCTION_CUPS,O.NONE,O.STORM_DRAIN,495,86,81,97,81,107,43,45,50,173,G.ERRATIC,87.5,!1),new P(e.ANORITH,3,!1,!1,!1,"Old Shrimp Pokémon",i.ROCK,i.BUG,.7,12.5,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,355,45,95,50,40,50,75,45,50,71,G.ERRATIC,87.5,!1),new P(e.ARMALDO,3,!1,!1,!1,"Plate Pokémon",i.ROCK,i.BUG,1.5,68.2,O.BATTLE_ARMOR,O.NONE,O.SWIFT_SWIM,495,75,125,100,70,80,45,45,50,173,G.ERRATIC,87.5,!1),new P(e.FEEBAS,3,!1,!1,!1,"Fish Pokémon",i.WATER,null,.6,7.4,O.SWIFT_SWIM,O.OBLIVIOUS,O.ADAPTABILITY,200,20,15,20,10,55,80,255,50,40,G.ERRATIC,50,!1),new P(e.MILOTIC,3,!1,!1,!1,"Tender Pokémon",i.WATER,null,6.2,162,O.MARVEL_SCALE,O.COMPETITIVE,O.CUTE_CHARM,540,95,60,79,100,125,81,60,50,189,G.ERRATIC,50,!0),new P(e.CASTFORM,3,!1,!1,!1,"Weather Pokémon",i.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,G.MEDIUM_FAST,50,!1,!0,new y("Normal Form","",i.NORMAL,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147,!1,null,!0),new y("Sunny Form","sunny",i.FIRE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new y("Rainy Form","rainy",i.WATER,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147),new y("Snowy Form","snowy",i.ICE,null,.3,.8,O.FORECAST,O.NONE,O.NONE,420,70,70,70,70,70,70,45,70,147)),new P(e.KECLEON,3,!1,!1,!1,"Color Swap Pokémon",i.NORMAL,null,1,22,O.COLOR_CHANGE,O.NONE,O.PROTEAN,440,60,90,70,60,120,40,200,70,154,G.MEDIUM_SLOW,50,!1),new P(e.SHUPPET,3,!1,!1,!1,"Puppet Pokémon",i.GHOST,null,.6,2.3,O.INSOMNIA,O.FRISK,O.CURSED_BODY,295,44,75,35,63,33,45,225,35,59,G.FAST,50,!1),new P(e.BANETTE,3,!1,!1,!1,"Marionette Pokémon",i.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,G.FAST,50,!1,!0,new y("Normal","",i.GHOST,null,1.1,12.5,O.INSOMNIA,O.FRISK,O.CURSED_BODY,455,64,115,65,83,63,65,45,35,159,!1,null,!0),new y("Mega",Me.MEGA,i.GHOST,null,1.2,13,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,555,64,165,75,93,83,75,45,35,159)),new P(e.DUSKULL,3,!1,!1,!1,"Requiem Pokémon",i.GHOST,null,.8,15,O.LEVITATE,O.NONE,O.FRISK,295,20,40,90,30,90,25,190,35,59,G.FAST,50,!1),new P(e.DUSCLOPS,3,!1,!1,!1,"Beckon Pokémon",i.GHOST,null,1.6,30.6,O.PRESSURE,O.NONE,O.FRISK,455,40,70,130,60,130,25,90,35,159,G.FAST,50,!1),new P(e.TROPIUS,3,!1,!1,!1,"Fruit Pokémon",i.GRASS,i.FLYING,2,100,O.CHLOROPHYLL,O.SOLAR_POWER,O.HARVEST,460,99,68,83,72,87,51,200,70,161,G.SLOW,50,!1),new P(e.CHIMECHO,3,!1,!1,!1,"Wind Chime Pokémon",i.PSYCHIC,null,.6,1,O.LEVITATE,O.NONE,O.NONE,455,75,50,80,95,90,65,45,70,159,G.FAST,50,!1),new P(e.ABSOL,3,!1,!1,!1,"Disaster Pokémon",i.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.DARK,null,1.2,47,O.PRESSURE,O.SUPER_LUCK,O.JUSTIFIED,465,65,130,60,75,60,75,30,35,163,!1,null,!0),new y("Mega",Me.MEGA,i.DARK,null,1.2,49,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,565,65,150,60,115,60,115,30,35,163)),new P(e.WYNAUT,3,!1,!1,!1,"Bright Pokémon",i.PSYCHIC,null,.6,14,O.SHADOW_TAG,O.NONE,O.TELEPATHY,260,95,23,48,23,48,23,125,50,52,G.MEDIUM_FAST,50,!1),new P(e.SNORUNT,3,!1,!1,!1,"Snow Hat Pokémon",i.ICE,null,.7,16.8,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,300,50,50,50,50,50,50,190,50,60,G.MEDIUM_FAST,50,!1),new P(e.GLALIE,3,!1,!1,!1,"Face Pokémon",i.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.ICE,null,1.5,256.5,O.INNER_FOCUS,O.ICE_BODY,O.MOODY,480,80,80,80,80,80,80,75,50,168,!1,null,!0),new y("Mega",Me.MEGA,i.ICE,null,2.1,350.2,O.REFRIGERATE,O.REFRIGERATE,O.REFRIGERATE,580,80,120,80,120,80,100,75,50,168)),new P(e.SPHEAL,3,!1,!1,!1,"Clap Pokémon",i.ICE,i.WATER,.8,39.5,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,290,70,40,50,55,50,25,255,50,58,G.MEDIUM_SLOW,50,!1),new P(e.SEALEO,3,!1,!1,!1,"Ball Roll Pokémon",i.ICE,i.WATER,1.1,87.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,410,90,60,70,75,70,45,120,50,144,G.MEDIUM_SLOW,50,!1),new P(e.WALREIN,3,!1,!1,!1,"Ice Break Pokémon",i.ICE,i.WATER,1.4,150.6,O.THICK_FAT,O.ICE_BODY,O.OBLIVIOUS,530,110,80,90,95,90,65,45,50,265,G.MEDIUM_SLOW,50,!1),new P(e.CLAMPERL,3,!1,!1,!1,"Bivalve Pokémon",i.WATER,null,.4,52.5,O.SHELL_ARMOR,O.NONE,O.RATTLED,345,35,64,85,74,55,32,255,70,69,G.ERRATIC,50,!1),new P(e.HUNTAIL,3,!1,!1,!1,"Deep Sea Pokémon",i.WATER,null,1.7,27,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,485,55,104,105,94,75,52,60,70,170,G.ERRATIC,50,!1),new P(e.GOREBYSS,3,!1,!1,!1,"South Sea Pokémon",i.WATER,null,1.8,22.6,O.SWIFT_SWIM,O.NONE,O.HYDRATION,485,55,84,105,114,75,52,60,70,170,G.ERRATIC,50,!1),new P(e.RELICANTH,3,!1,!1,!1,"Longevity Pokémon",i.WATER,i.ROCK,1,23.4,O.SWIFT_SWIM,O.ROCK_HEAD,O.STURDY,485,100,90,130,45,65,55,25,50,170,G.SLOW,87.5,!0),new P(e.LUVDISC,3,!1,!1,!1,"Rendezvous Pokémon",i.WATER,null,.6,8.7,O.SWIFT_SWIM,O.NONE,O.HYDRATION,330,43,30,55,40,65,97,225,70,116,G.FAST,25,!1),new P(e.BAGON,3,!1,!1,!1,"Rock Head Pokémon",i.DRAGON,null,.6,42.1,O.ROCK_HEAD,O.NONE,O.SHEER_FORCE,300,45,75,60,40,30,50,45,35,60,G.SLOW,50,!1),new P(e.SHELGON,3,!1,!1,!1,"Endurance Pokémon",i.DRAGON,null,1.1,110.5,O.ROCK_HEAD,O.NONE,O.OVERCOAT,420,65,95,100,60,50,50,45,35,147,G.SLOW,50,!1),new P(e.SALAMENCE,3,!1,!1,!1,"Dragon Pokémon",i.DRAGON,i.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,G.SLOW,50,!1,!0,new y("Normal","",i.DRAGON,i.FLYING,1.5,102.6,O.INTIMIDATE,O.NONE,O.MOXIE,600,95,135,80,110,80,100,45,35,300,!1,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.FLYING,1.8,112.6,O.AERILATE,O.NONE,O.AERILATE,700,95,145,130,120,90,120,45,35,300)),new P(e.BELDUM,3,!1,!1,!1,"Iron Ball Pokémon",i.STEEL,i.PSYCHIC,.6,95.2,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,300,40,55,80,35,60,30,45,35,60,G.SLOW,null,!1),new P(e.METANG,3,!1,!1,!1,"Iron Claw Pokémon",i.STEEL,i.PSYCHIC,1.2,202.5,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,420,60,75,100,55,80,50,25,35,147,G.SLOW,null,!1),new P(e.METAGROSS,3,!1,!1,!1,"Iron Leg Pokémon",i.STEEL,i.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,10,35,300,G.SLOW,null,!1,!0,new y("Normal","",i.STEEL,i.PSYCHIC,1.6,550,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,600,80,135,130,95,90,70,3,35,300,!1,null,!0),new y("Mega",Me.MEGA,i.STEEL,i.PSYCHIC,2.5,942.9,O.TOUGH_CLAWS,O.NONE,O.TOUGH_CLAWS,700,80,145,150,105,110,110,3,35,300)),new P(e.REGIROCK,3,!0,!1,!1,"Rock Peak Pokémon",i.ROCK,null,1.7,230,O.CLEAR_BODY,O.NONE,O.STURDY,580,80,100,200,50,100,50,3,35,290,G.SLOW,null,!1),new P(e.REGICE,3,!0,!1,!1,"Iceberg Pokémon",i.ICE,null,1.8,175,O.CLEAR_BODY,O.NONE,O.ICE_BODY,580,80,50,100,100,200,50,3,35,290,G.SLOW,null,!1),new P(e.REGISTEEL,3,!0,!1,!1,"Iron Pokémon",i.STEEL,null,1.9,205,O.CLEAR_BODY,O.NONE,O.LIGHT_METAL,580,80,75,150,75,150,50,3,35,290,G.SLOW,null,!1),new P(e.LATIAS,3,!0,!1,!1,"Eon Pokémon",i.DRAGON,i.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,G.SLOW,0,!1,!0,new y("Normal","",i.DRAGON,i.PSYCHIC,1.4,40,O.LEVITATE,O.NONE,O.NONE,600,80,80,90,110,130,110,3,90,300,!1,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.PSYCHIC,1.8,52,O.LEVITATE,O.NONE,O.NONE,700,80,100,120,140,150,110,3,90,300)),new P(e.LATIOS,3,!0,!1,!1,"Eon Pokémon",i.DRAGON,i.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,G.SLOW,100,!1,!0,new y("Normal","",i.DRAGON,i.PSYCHIC,2,60,O.LEVITATE,O.NONE,O.NONE,600,80,90,80,130,110,110,3,90,300,!1,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.PSYCHIC,2.3,70,O.LEVITATE,O.NONE,O.NONE,700,80,130,100,160,120,110,3,90,300)),new P(e.KYOGRE,3,!1,!0,!1,"Sea Basin Pokémon",i.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,G.SLOW,null,!1,!0,new y("Normal","",i.WATER,null,4.5,352,O.DRIZZLE,O.NONE,O.NONE,670,100,100,90,150,140,90,3,0,335,!1,null,!0),new y("Primal","primal",i.WATER,null,9.8,430,O.PRIMORDIAL_SEA,O.NONE,O.NONE,770,100,150,90,180,160,90,3,0,335)),new P(e.GROUDON,3,!1,!0,!1,"Continent Pokémon",i.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,G.SLOW,null,!1,!0,new y("Normal","",i.GROUND,null,3.5,950,O.DROUGHT,O.NONE,O.NONE,670,100,150,140,100,90,90,3,0,335,!1,null,!0),new y("Primal","primal",i.GROUND,i.FIRE,5,999.7,O.DESOLATE_LAND,O.NONE,O.NONE,770,100,180,160,150,90,90,3,0,335)),new P(e.RAYQUAZA,3,!1,!0,!1,"Sky High Pokémon",i.DRAGON,i.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,G.SLOW,null,!1,!0,new y("Normal","",i.DRAGON,i.FLYING,7,206.5,O.AIR_LOCK,O.NONE,O.NONE,680,105,150,90,150,90,95,45,0,340,!1,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.FLYING,10.8,392,O.DELTA_STREAM,O.NONE,O.NONE,780,105,180,100,180,100,115,45,0,340)),new P(e.JIRACHI,3,!1,!1,!0,"Wish Pokémon",i.STEEL,i.PSYCHIC,.3,1.1,O.SERENE_GRACE,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,G.SLOW,null,!1),new P(e.DEOXYS,3,!1,!1,!0,"DNA Pokémon",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,G.SLOW,null,!1,!0,new y("Normal Forme","normal",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,150,50,150,50,150,3,0,300,!1,"",!0),new y("Attack Forme","attack",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,180,20,180,20,150,3,0,300),new y("Defense Forme","defense",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,70,160,70,160,90,3,0,300),new y("Speed Forme","speed",i.PSYCHIC,null,1.7,60.8,O.PRESSURE,O.NONE,O.NONE,600,50,95,90,95,90,180,3,0,300)),new P(e.TURTWIG,4,!1,!1,!1,"Tiny Leaf Pokémon",i.GRASS,null,.4,10.2,O.OVERGROW,O.NONE,O.SHELL_ARMOR,318,55,68,64,45,55,31,45,70,64,G.MEDIUM_SLOW,87.5,!1),new P(e.GROTLE,4,!1,!1,!1,"Grove Pokémon",i.GRASS,null,1.1,97,O.OVERGROW,O.NONE,O.SHELL_ARMOR,405,75,89,85,55,65,36,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.TORTERRA,4,!1,!1,!1,"Continent Pokémon",i.GRASS,i.GROUND,2.2,310,O.OVERGROW,O.NONE,O.SHELL_ARMOR,525,95,109,105,75,85,56,45,70,263,G.MEDIUM_SLOW,87.5,!1),new P(e.CHIMCHAR,4,!1,!1,!1,"Chimp Pokémon",i.FIRE,null,.5,6.2,O.BLAZE,O.NONE,O.IRON_FIST,309,44,58,44,58,44,61,45,70,62,G.MEDIUM_SLOW,87.5,!1),new P(e.MONFERNO,4,!1,!1,!1,"Playful Pokémon",i.FIRE,i.FIGHTING,.9,22,O.BLAZE,O.NONE,O.IRON_FIST,405,64,78,52,78,52,81,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.INFERNAPE,4,!1,!1,!1,"Flame Pokémon",i.FIRE,i.FIGHTING,1.2,55,O.BLAZE,O.NONE,O.IRON_FIST,534,76,104,71,104,71,108,45,70,267,G.MEDIUM_SLOW,87.5,!1),new P(e.PIPLUP,4,!1,!1,!1,"Penguin Pokémon",i.WATER,null,.4,5.2,O.TORRENT,O.NONE,O.COMPETITIVE,314,53,51,53,61,56,40,45,70,63,G.MEDIUM_SLOW,87.5,!1),new P(e.PRINPLUP,4,!1,!1,!1,"Penguin Pokémon",i.WATER,null,.8,23,O.TORRENT,O.NONE,O.COMPETITIVE,405,64,66,68,81,76,50,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.EMPOLEON,4,!1,!1,!1,"Emperor Pokémon",i.WATER,i.STEEL,1.7,84.5,O.TORRENT,O.NONE,O.COMPETITIVE,530,84,86,88,111,101,60,45,70,265,G.MEDIUM_SLOW,87.5,!1),new P(e.STARLY,4,!1,!1,!1,"Starling Pokémon",i.NORMAL,i.FLYING,.3,2,O.KEEN_EYE,O.NONE,O.RECKLESS,245,40,55,30,30,30,60,255,70,49,G.MEDIUM_SLOW,50,!0),new P(e.STARAVIA,4,!1,!1,!1,"Starling Pokémon",i.NORMAL,i.FLYING,.6,15.5,O.INTIMIDATE,O.NONE,O.RECKLESS,340,55,75,50,40,40,80,120,70,119,G.MEDIUM_SLOW,50,!0),new P(e.STARAPTOR,4,!1,!1,!1,"Predator Pokémon",i.NORMAL,i.FLYING,1.2,24.9,O.INTIMIDATE,O.NONE,O.RECKLESS,485,85,120,70,50,60,100,45,70,243,G.MEDIUM_SLOW,50,!0),new P(e.BIDOOF,4,!1,!1,!1,"Plump Mouse Pokémon",i.NORMAL,null,.5,20,O.SIMPLE,O.UNAWARE,O.MOODY,250,59,45,40,35,40,31,255,70,50,G.MEDIUM_FAST,50,!0),new P(e.BIBAREL,4,!1,!1,!1,"Beaver Pokémon",i.NORMAL,i.WATER,1,31.5,O.SIMPLE,O.UNAWARE,O.MOODY,410,79,85,60,55,60,71,127,70,144,G.MEDIUM_FAST,50,!0),new P(e.KRICKETOT,4,!1,!1,!1,"Cricket Pokémon",i.BUG,null,.3,2.2,O.SHED_SKIN,O.NONE,O.RUN_AWAY,194,37,25,41,25,41,25,255,70,39,G.MEDIUM_SLOW,50,!0),new P(e.KRICKETUNE,4,!1,!1,!1,"Cricket Pokémon",i.BUG,null,1,25.5,O.SWARM,O.NONE,O.TECHNICIAN,384,77,85,51,55,51,65,45,70,134,G.MEDIUM_SLOW,50,!0),new P(e.SHINX,4,!1,!1,!1,"Flash Pokémon",i.ELECTRIC,null,.5,9.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,263,45,65,34,40,34,45,235,50,53,G.MEDIUM_SLOW,50,!0),new P(e.LUXIO,4,!1,!1,!1,"Spark Pokémon",i.ELECTRIC,null,.9,30.5,O.RIVALRY,O.INTIMIDATE,O.GUTS,363,60,85,49,60,49,60,120,100,127,G.MEDIUM_SLOW,50,!0),new P(e.LUXRAY,4,!1,!1,!1,"Gleam Eyes Pokémon",i.ELECTRIC,null,1.4,42,O.RIVALRY,O.INTIMIDATE,O.GUTS,523,80,120,79,95,79,70,45,50,262,G.MEDIUM_SLOW,50,!0),new P(e.BUDEW,4,!1,!1,!1,"Bud Pokémon",i.GRASS,i.POISON,.2,1.2,O.NATURAL_CURE,O.POISON_POINT,O.LEAF_GUARD,280,40,30,35,50,70,55,255,50,56,G.MEDIUM_SLOW,50,!1),new P(e.ROSERADE,4,!1,!1,!1,"Bouquet Pokémon",i.GRASS,i.POISON,.9,14.5,O.NATURAL_CURE,O.POISON_POINT,O.TECHNICIAN,515,60,70,65,125,105,90,75,50,258,G.MEDIUM_SLOW,50,!0),new P(e.CRANIDOS,4,!1,!1,!1,"Head Butt Pokémon",i.ROCK,null,.9,31.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,350,67,125,40,30,30,58,45,70,70,G.ERRATIC,87.5,!1),new P(e.RAMPARDOS,4,!1,!1,!1,"Head Butt Pokémon",i.ROCK,null,1.6,102.5,O.MOLD_BREAKER,O.NONE,O.SHEER_FORCE,495,97,165,60,65,50,58,45,70,173,G.ERRATIC,87.5,!1),new P(e.SHIELDON,4,!1,!1,!1,"Shield Pokémon",i.ROCK,i.STEEL,.5,57,O.STURDY,O.NONE,O.SOUNDPROOF,350,30,42,118,42,88,30,45,70,70,G.ERRATIC,87.5,!1),new P(e.BASTIODON,4,!1,!1,!1,"Shield Pokémon",i.ROCK,i.STEEL,1.3,149.5,O.STURDY,O.NONE,O.SOUNDPROOF,495,60,52,168,47,138,30,45,70,173,G.ERRATIC,87.5,!1),new P(e.BURMY,4,!1,!1,!1,"Bagworm Pokémon",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,G.MEDIUM_FAST,50,!1,!0,new y("Plant Cloak","plant",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new y("Sandy Cloak","sandy",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0),new y("Trash Cloak","trash",i.BUG,null,.2,3.4,O.SHED_SKIN,O.NONE,O.OVERCOAT,224,40,29,45,29,45,36,120,70,45,!1,null,!0)),new P(e.WORMADAM,4,!1,!1,!1,"Bagworm Pokémon",i.BUG,i.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,G.MEDIUM_FAST,0,!1,!1,new y("Plant Cloak","plant",i.BUG,i.GRASS,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,59,85,79,105,36,45,70,148,!1,null,!0),new y("Sandy Cloak","sandy",i.BUG,i.GROUND,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,79,105,59,85,36,45,70,148,!1,null,!0),new y("Trash Cloak","trash",i.BUG,i.STEEL,.5,6.5,O.ANTICIPATION,O.NONE,O.OVERCOAT,424,60,69,95,69,95,36,45,70,148,!1,null,!0)),new P(e.MOTHIM,4,!1,!1,!1,"Moth Pokémon",i.BUG,i.FLYING,.9,23.3,O.SWARM,O.NONE,O.TINTED_LENS,424,70,94,50,94,50,66,45,70,148,G.MEDIUM_FAST,100,!1),new P(e.COMBEE,4,!1,!1,!1,"Tiny Bee Pokémon",i.BUG,i.FLYING,.3,5.5,O.HONEY_GATHER,O.NONE,O.HUSTLE,244,30,30,42,30,42,70,120,50,49,G.MEDIUM_SLOW,87.5,!0),new P(e.VESPIQUEN,4,!1,!1,!1,"Beehive Pokémon",i.BUG,i.FLYING,1.2,38.5,O.PRESSURE,O.NONE,O.UNNERVE,474,70,80,102,80,102,40,45,50,166,G.MEDIUM_SLOW,0,!1),new P(e.PACHIRISU,4,!1,!1,!1,"EleSquirrel Pokémon",i.ELECTRIC,null,.4,3.9,O.RUN_AWAY,O.PICKUP,O.VOLT_ABSORB,405,60,45,70,45,90,95,200,100,142,G.MEDIUM_FAST,50,!0),new P(e.BUIZEL,4,!1,!1,!1,"Sea Weasel Pokémon",i.WATER,null,.7,29.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,330,55,65,35,60,30,85,190,70,66,G.MEDIUM_FAST,50,!0),new P(e.FLOATZEL,4,!1,!1,!1,"Sea Weasel Pokémon",i.WATER,null,1.1,33.5,O.SWIFT_SWIM,O.NONE,O.WATER_VEIL,495,85,105,55,85,50,115,75,70,173,G.MEDIUM_FAST,50,!0),new P(e.CHERUBI,4,!1,!1,!1,"Cherry Pokémon",i.GRASS,null,.4,3.3,O.CHLOROPHYLL,O.NONE,O.NONE,275,45,35,45,62,53,35,190,50,55,G.MEDIUM_FAST,50,!1),new P(e.CHERRIM,4,!1,!1,!1,"Blossom Pokémon",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,G.MEDIUM_FAST,50,!1,!0,new y("Overcast Form","overcast",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158,!1,null,!0),new y("Sunshine Form","sunshine",i.GRASS,null,.5,9.3,O.FLOWER_GIFT,O.NONE,O.NONE,450,70,60,70,87,78,85,75,50,158)),new P(e.SHELLOS,4,!1,!1,!1,"Sea Slug Pokémon",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,G.MEDIUM_FAST,50,!1,!1,new y("East Sea","east",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0),new y("West Sea","west",i.WATER,null,.3,6.3,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,325,76,48,48,57,62,34,190,50,65,!1,null,!0)),new P(e.GASTRODON,4,!1,!1,!1,"Sea Slug Pokémon",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,G.MEDIUM_FAST,50,!1,!1,new y("East Sea","east",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0),new y("West Sea","west",i.WATER,i.GROUND,.9,29.9,O.STICKY_HOLD,O.STORM_DRAIN,O.SAND_FORCE,475,111,83,68,92,82,39,75,50,166,!1,null,!0)),new P(e.AMBIPOM,4,!1,!1,!1,"Long Tail Pokémon",i.NORMAL,null,1.2,20.3,O.TECHNICIAN,O.PICKUP,O.SKILL_LINK,482,75,100,66,60,66,115,45,100,169,G.FAST,50,!0),new P(e.DRIFLOON,4,!1,!1,!1,"Balloon Pokémon",i.GHOST,i.FLYING,.4,1.2,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,348,90,50,34,60,44,70,125,50,70,G.FLUCTUATING,50,!1),new P(e.DRIFBLIM,4,!1,!1,!1,"Blimp Pokémon",i.GHOST,i.FLYING,1.2,15,O.AFTERMATH,O.UNBURDEN,O.FLARE_BOOST,498,150,80,44,90,54,80,60,50,174,G.FLUCTUATING,50,!1),new P(e.BUNEARY,4,!1,!1,!1,"Rabbit Pokémon",i.NORMAL,null,.4,5.5,O.RUN_AWAY,O.KLUTZ,O.LIMBER,350,55,66,44,44,56,85,190,0,70,G.MEDIUM_FAST,50,!1),new P(e.LOPUNNY,4,!1,!1,!1,"Rabbit Pokémon",i.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.NORMAL,null,1.2,33.3,O.CUTE_CHARM,O.KLUTZ,O.LIMBER,480,65,76,84,54,96,105,60,140,168,!1,null,!0),new y("Mega",Me.MEGA,i.NORMAL,i.FIGHTING,1.3,28.3,O.SCRAPPY,O.SCRAPPY,O.SCRAPPY,580,65,136,94,54,96,135,60,140,168)),new P(e.MISMAGIUS,4,!1,!1,!1,"Magical Pokémon",i.GHOST,null,.9,4.4,O.LEVITATE,O.NONE,O.NONE,495,60,60,60,105,105,105,45,35,173,G.FAST,50,!1),new P(e.HONCHKROW,4,!1,!1,!1,"Big Boss Pokémon",i.DARK,i.FLYING,.9,27.3,O.INSOMNIA,O.SUPER_LUCK,O.MOXIE,505,100,125,52,105,52,71,30,35,177,G.MEDIUM_SLOW,50,!1),new P(e.GLAMEOW,4,!1,!1,!1,"Catty Pokémon",i.NORMAL,null,.5,3.9,O.LIMBER,O.OWN_TEMPO,O.KEEN_EYE,310,49,55,42,42,37,85,190,70,62,G.FAST,25,!1),new P(e.PURUGLY,4,!1,!1,!1,"Tiger Cat Pokémon",i.NORMAL,null,1,43.8,O.THICK_FAT,O.OWN_TEMPO,O.DEFIANT,452,71,82,64,64,59,112,75,70,158,G.FAST,25,!1),new P(e.CHINGLING,4,!1,!1,!1,"Bell Pokémon",i.PSYCHIC,null,.2,.6,O.LEVITATE,O.NONE,O.NONE,285,45,30,50,65,50,45,120,70,57,G.FAST,50,!1),new P(e.STUNKY,4,!1,!1,!1,"Skunk Pokémon",i.POISON,i.DARK,.4,19.2,O.STENCH,O.AFTERMATH,O.KEEN_EYE,329,63,63,47,41,41,74,225,50,66,G.MEDIUM_FAST,50,!1),new P(e.SKUNTANK,4,!1,!1,!1,"Skunk Pokémon",i.POISON,i.DARK,1,38,O.STENCH,O.AFTERMATH,O.KEEN_EYE,479,103,93,67,71,61,84,60,50,168,G.MEDIUM_FAST,50,!1),new P(e.BRONZOR,4,!1,!1,!1,"Bronze Pokémon",i.STEEL,i.PSYCHIC,.5,60.5,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,300,57,24,86,24,86,23,255,50,60,G.MEDIUM_FAST,null,!1),new P(e.BRONZONG,4,!1,!1,!1,"Bronze Bell Pokémon",i.STEEL,i.PSYCHIC,1.3,187,O.LEVITATE,O.HEATPROOF,O.HEAVY_METAL,500,67,89,116,79,116,33,90,50,175,G.MEDIUM_FAST,null,!1),new P(e.BONSLY,4,!1,!1,!1,"Bonsai Pokémon",i.ROCK,null,.5,15,O.STURDY,O.ROCK_HEAD,O.RATTLED,290,50,80,95,10,45,10,255,50,58,G.MEDIUM_FAST,50,!1),new P(e.MIME_JR,4,!1,!1,!1,"Mime Pokémon",i.PSYCHIC,i.FAIRY,.6,13,O.SOUNDPROOF,O.FILTER,O.TECHNICIAN,310,20,25,45,70,90,60,145,50,62,G.MEDIUM_FAST,50,!1),new P(e.HAPPINY,4,!1,!1,!1,"Playhouse Pokémon",i.NORMAL,null,.6,24.4,O.NATURAL_CURE,O.SERENE_GRACE,O.FRIEND_GUARD,220,100,5,5,15,65,30,130,140,110,G.FAST,0,!1),new P(e.CHATOT,4,!1,!1,!1,"Music Note Pokémon",i.NORMAL,i.FLYING,.5,1.9,O.KEEN_EYE,O.TANGLED_FEET,O.BIG_PECKS,411,76,65,45,92,42,91,30,35,144,G.MEDIUM_SLOW,50,!1),new P(e.SPIRITOMB,4,!1,!1,!1,"Forbidden Pokémon",i.GHOST,i.DARK,1,108,O.PRESSURE,O.NONE,O.INFILTRATOR,485,50,92,108,92,108,35,100,50,170,G.MEDIUM_FAST,50,!1),new P(e.GIBLE,4,!1,!1,!1,"Land Shark Pokémon",i.DRAGON,i.GROUND,.7,20.5,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,300,58,70,45,40,45,42,45,50,60,G.SLOW,50,!0),new P(e.GABITE,4,!1,!1,!1,"Cave Pokémon",i.DRAGON,i.GROUND,1.4,56,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,410,68,90,65,50,55,82,45,50,144,G.SLOW,50,!0),new P(e.GARCHOMP,4,!1,!1,!1,"Mach Pokémon",i.DRAGON,i.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,G.SLOW,50,!0,!0,new y("Normal","",i.DRAGON,i.GROUND,1.9,95,O.SAND_VEIL,O.NONE,O.ROUGH_SKIN,600,108,130,95,80,85,102,45,50,300,!0,null,!0),new y("Mega",Me.MEGA,i.DRAGON,i.GROUND,1.9,95,O.SAND_FORCE,O.NONE,O.SAND_FORCE,700,108,170,115,120,95,92,45,50,300,!0)),new P(e.MUNCHLAX,4,!1,!1,!1,"Big Eater Pokémon",i.NORMAL,null,.6,105,O.PICKUP,O.THICK_FAT,O.GLUTTONY,390,135,85,40,40,85,5,50,50,78,G.SLOW,87.5,!1),new P(e.RIOLU,4,!1,!1,!1,"Emanation Pokémon",i.FIGHTING,null,.7,20.2,O.STEADFAST,O.INNER_FOCUS,O.PRANKSTER,285,40,70,40,35,40,60,75,50,57,G.MEDIUM_SLOW,87.5,!1),new P(e.LUCARIO,4,!1,!1,!1,"Aura Pokémon",i.FIGHTING,i.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.FIGHTING,i.STEEL,1.2,54,O.STEADFAST,O.INNER_FOCUS,O.JUSTIFIED,525,70,110,70,115,70,90,45,50,184,!1,null,!0),new y("Mega",Me.MEGA,i.FIGHTING,i.STEEL,1.3,57.5,O.ADAPTABILITY,O.ADAPTABILITY,O.ADAPTABILITY,625,70,145,88,140,70,112,45,50,184)),new P(e.HIPPOPOTAS,4,!1,!1,!1,"Hippo Pokémon",i.GROUND,null,.8,49.5,O.SAND_STREAM,O.NONE,O.SAND_FORCE,330,68,72,78,38,42,32,140,50,66,G.SLOW,50,!0),new P(e.HIPPOWDON,4,!1,!1,!1,"Heavyweight Pokémon",i.GROUND,null,2,300,O.SAND_STREAM,O.NONE,O.SAND_FORCE,525,108,112,118,68,72,47,60,50,184,G.SLOW,50,!0),new P(e.SKORUPI,4,!1,!1,!1,"Scorpion Pokémon",i.POISON,i.BUG,.8,12,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,330,40,50,90,30,55,65,120,50,66,G.SLOW,50,!1),new P(e.DRAPION,4,!1,!1,!1,"Ogre Scorpion Pokémon",i.POISON,i.DARK,1.3,61.5,O.BATTLE_ARMOR,O.SNIPER,O.KEEN_EYE,500,70,90,110,60,75,95,45,50,175,G.SLOW,50,!1),new P(e.CROAGUNK,4,!1,!1,!1,"Toxic Mouth Pokémon",i.POISON,i.FIGHTING,.7,23,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,300,48,61,40,61,40,50,140,100,60,G.MEDIUM_FAST,50,!0),new P(e.TOXICROAK,4,!1,!1,!1,"Toxic Mouth Pokémon",i.POISON,i.FIGHTING,1.3,44.4,O.ANTICIPATION,O.DRY_SKIN,O.POISON_TOUCH,490,83,106,65,86,65,85,75,50,172,G.MEDIUM_FAST,50,!0),new P(e.CARNIVINE,4,!1,!1,!1,"Bug Catcher Pokémon",i.GRASS,null,1.4,27,O.LEVITATE,O.NONE,O.NONE,454,74,100,72,90,72,46,200,70,159,G.SLOW,50,!1),new P(e.FINNEON,4,!1,!1,!1,"Wing Fish Pokémon",i.WATER,null,.4,7,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,330,49,49,56,49,61,66,190,70,66,G.ERRATIC,50,!0),new P(e.LUMINEON,4,!1,!1,!1,"Neon Pokémon",i.WATER,null,1.2,24,O.SWIFT_SWIM,O.STORM_DRAIN,O.WATER_VEIL,460,69,69,76,69,86,91,75,70,161,G.ERRATIC,50,!0),new P(e.MANTYKE,4,!1,!1,!1,"Kite Pokémon",i.WATER,i.FLYING,1,65,O.SWIFT_SWIM,O.WATER_ABSORB,O.WATER_VEIL,345,45,20,50,60,120,50,25,50,69,G.SLOW,50,!1),new P(e.SNOVER,4,!1,!1,!1,"Frost Tree Pokémon",i.GRASS,i.ICE,1,50.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,334,60,62,50,62,60,40,120,50,67,G.SLOW,50,!0),new P(e.ABOMASNOW,4,!1,!1,!1,"Frost Tree Pokémon",i.GRASS,i.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,G.SLOW,50,!0,!0,new y("Normal","",i.GRASS,i.ICE,2.2,135.5,O.SNOW_WARNING,O.NONE,O.SOUNDPROOF,494,90,92,75,92,85,60,60,50,173,!0,null,!0),new y("Mega",Me.MEGA,i.GRASS,i.ICE,2.7,185,O.SNOW_WARNING,O.NONE,O.SNOW_WARNING,594,90,132,105,132,105,30,60,50,173,!0)),new P(e.WEAVILE,4,!1,!1,!1,"Sharp Claw Pokémon",i.DARK,i.ICE,1.1,34,O.PRESSURE,O.NONE,O.PICKPOCKET,510,70,120,65,45,85,125,45,35,179,G.MEDIUM_SLOW,50,!0),new P(e.MAGNEZONE,4,!1,!1,!1,"Magnet Area Pokémon",i.ELECTRIC,i.STEEL,1.2,180,O.MAGNET_PULL,O.STURDY,O.ANALYTIC,535,70,70,115,130,90,60,30,50,268,G.MEDIUM_FAST,null,!1),new P(e.LICKILICKY,4,!1,!1,!1,"Licking Pokémon",i.NORMAL,null,1.7,140,O.OWN_TEMPO,O.OBLIVIOUS,O.CLOUD_NINE,515,110,85,95,80,95,50,30,50,180,G.MEDIUM_FAST,50,!1),new P(e.RHYPERIOR,4,!1,!1,!1,"Drill Pokémon",i.GROUND,i.ROCK,2.4,282.8,O.LIGHTNING_ROD,O.SOLID_ROCK,O.RECKLESS,535,115,140,130,55,55,40,30,50,268,G.SLOW,50,!0),new P(e.TANGROWTH,4,!1,!1,!1,"Vine Pokémon",i.GRASS,null,2,128.6,O.CHLOROPHYLL,O.LEAF_GUARD,O.REGENERATOR,535,100,100,125,110,50,50,30,50,187,G.MEDIUM_FAST,50,!0),new P(e.ELECTIVIRE,4,!1,!1,!1,"Thunderbolt Pokémon",i.ELECTRIC,null,1.8,138.6,O.MOTOR_DRIVE,O.NONE,O.VITAL_SPIRIT,540,75,123,67,95,85,95,30,50,270,G.MEDIUM_FAST,75,!1),new P(e.MAGMORTAR,4,!1,!1,!1,"Blast Pokémon",i.FIRE,null,1.6,68,O.FLAME_BODY,O.NONE,O.VITAL_SPIRIT,540,75,95,67,125,95,83,30,50,270,G.MEDIUM_FAST,75,!1),new P(e.TOGEKISS,4,!1,!1,!1,"Jubilee Pokémon",i.FAIRY,i.FLYING,1.5,38,O.HUSTLE,O.SERENE_GRACE,O.SUPER_LUCK,545,85,50,95,120,115,80,30,50,273,G.FAST,87.5,!1),new P(e.YANMEGA,4,!1,!1,!1,"Ogre Darner Pokémon",i.BUG,i.FLYING,1.9,51.5,O.SPEED_BOOST,O.TINTED_LENS,O.FRISK,515,86,76,86,116,56,95,30,70,180,G.MEDIUM_FAST,50,!1),new P(e.LEAFEON,4,!1,!1,!1,"Verdant Pokémon",i.GRASS,null,1,25.5,O.LEAF_GUARD,O.NONE,O.CHLOROPHYLL,525,65,110,130,60,65,95,45,35,184,G.MEDIUM_FAST,87.5,!1),new P(e.GLACEON,4,!1,!1,!1,"Fresh Snow Pokémon",i.ICE,null,.8,25.9,O.SNOW_CLOAK,O.NONE,O.ICE_BODY,525,65,60,110,130,95,65,45,35,184,G.MEDIUM_FAST,87.5,!1),new P(e.GLISCOR,4,!1,!1,!1,"Fang Scorpion Pokémon",i.GROUND,i.FLYING,2,42.5,O.HYPER_CUTTER,O.SAND_VEIL,O.POISON_HEAL,510,75,95,125,45,75,95,30,70,179,G.MEDIUM_SLOW,50,!1),new P(e.MAMOSWINE,4,!1,!1,!1,"Twin Tusk Pokémon",i.ICE,i.GROUND,2.5,291,O.OBLIVIOUS,O.SNOW_CLOAK,O.THICK_FAT,530,110,130,80,70,60,80,50,50,265,G.SLOW,50,!0),new P(e.PORYGON_Z,4,!1,!1,!1,"Virtual Pokémon",i.NORMAL,null,.9,34,O.ADAPTABILITY,O.DOWNLOAD,O.ANALYTIC,535,85,80,70,135,75,90,30,50,268,G.MEDIUM_FAST,null,!1),new P(e.GALLADE,4,!1,!1,!1,"Blade Pokémon",i.PSYCHIC,i.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,G.SLOW,100,!1,!0,new y("Normal","",i.PSYCHIC,i.FIGHTING,1.6,52,O.STEADFAST,O.SHARPNESS,O.JUSTIFIED,518,68,125,65,65,115,80,45,35,259,!1,null,!0),new y("Mega",Me.MEGA,i.PSYCHIC,i.FIGHTING,1.6,56.4,O.INNER_FOCUS,O.INNER_FOCUS,O.INNER_FOCUS,618,68,165,95,65,115,110,45,35,259)),new P(e.PROBOPASS,4,!1,!1,!1,"Compass Pokémon",i.ROCK,i.STEEL,1.4,340,O.STURDY,O.MAGNET_PULL,O.SAND_FORCE,525,60,55,145,75,150,40,60,70,184,G.MEDIUM_FAST,50,!1),new P(e.DUSKNOIR,4,!1,!1,!1,"Gripper Pokémon",i.GHOST,null,2.2,106.6,O.PRESSURE,O.NONE,O.FRISK,525,45,100,135,65,135,45,45,35,263,G.FAST,50,!1),new P(e.FROSLASS,4,!1,!1,!1,"Snow Land Pokémon",i.ICE,i.GHOST,1.3,26.6,O.SNOW_CLOAK,O.NONE,O.CURSED_BODY,480,70,80,70,80,70,110,75,50,168,G.MEDIUM_FAST,0,!1),new P(e.ROTOM,4,!1,!1,!1,"Plasma Pokémon",i.ELECTRIC,i.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,G.MEDIUM_FAST,null,!1,!1,new y("Normal","",i.ELECTRIC,i.GHOST,.3,.3,O.LEVITATE,O.NONE,O.NONE,440,50,50,77,95,77,91,45,50,154,!1,null,!0),new y("Heat","heat",i.ELECTRIC,i.FIRE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new y("Wash","wash",i.ELECTRIC,i.WATER,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new y("Frost","frost",i.ELECTRIC,i.ICE,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new y("Fan","fan",i.ELECTRIC,i.FLYING,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0),new y("Mow","mow",i.ELECTRIC,i.GRASS,.3,.3,O.LEVITATE,O.NONE,O.NONE,520,50,65,107,105,107,86,45,50,182,!1,null,!0)),new P(e.UXIE,4,!0,!1,!1,"Knowledge Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,75,130,75,130,95,3,140,290,G.SLOW,null,!1),new P(e.MESPRIT,4,!0,!1,!1,"Emotion Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,80,105,105,105,105,80,3,140,290,G.SLOW,null,!1),new P(e.AZELF,4,!0,!1,!1,"Willpower Pokémon",i.PSYCHIC,null,.3,.3,O.LEVITATE,O.NONE,O.NONE,580,75,125,70,125,70,115,3,140,290,G.SLOW,null,!1),new P(e.DIALGA,4,!1,!0,!1,"Temporal Pokémon",i.STEEL,i.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,G.SLOW,null,!1,!1,new y("Normal","",i.STEEL,i.DRAGON,5.4,683,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,120,120,150,100,90,3,0,340,!1,null,!0),new y("Origin Forme","origin",i.STEEL,i.DRAGON,7,848.7,O.PRESSURE,O.NONE,O.TELEPATHY,680,100,100,120,150,120,90,3,0,340)),new P(e.PALKIA,4,!1,!0,!1,"Spatial Pokémon",i.WATER,i.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,G.SLOW,null,!1,!1,new y("Normal","",i.WATER,i.DRAGON,4.2,336,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,120,100,150,120,100,3,0,340,!1,null,!0),new y("Origin Forme","origin",i.WATER,i.DRAGON,6.3,659,O.PRESSURE,O.NONE,O.TELEPATHY,680,90,100,100,150,120,120,3,0,340)),new P(e.HEATRAN,4,!0,!1,!1,"Lava Dome Pokémon",i.FIRE,i.STEEL,1.7,430,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,600,91,90,106,130,106,77,3,100,300,G.SLOW,50,!1),new P(e.REGIGIGAS,4,!0,!1,!1,"Colossal Pokémon",i.NORMAL,null,3.7,420,O.SLOW_START,O.NONE,O.NORMALIZE,670,110,160,110,80,110,100,3,0,335,G.SLOW,null,!1),new P(e.GIRATINA,4,!1,!0,!1,"Renegade Pokémon",i.GHOST,i.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,G.SLOW,null,!1,!0,new y("Altered Forme","altered",i.GHOST,i.DRAGON,4.5,750,O.PRESSURE,O.NONE,O.TELEPATHY,680,150,100,120,100,120,90,3,0,340,!1,null,!0),new y("Origin Forme","origin",i.GHOST,i.DRAGON,6.9,650,O.LEVITATE,O.NONE,O.LEVITATE,680,150,120,100,120,100,90,3,0,340)),new P(e.CRESSELIA,4,!0,!1,!1,"Lunar Pokémon",i.PSYCHIC,null,1.5,85.6,O.LEVITATE,O.NONE,O.NONE,580,120,70,110,75,120,85,3,100,300,G.SLOW,0,!1),new P(e.PHIONE,4,!1,!1,!0,"Sea Drifter Pokémon",i.WATER,null,.4,3.1,O.HYDRATION,O.NONE,O.NONE,480,80,80,80,80,80,80,30,70,240,G.SLOW,null,!1),new P(e.MANAPHY,4,!1,!1,!0,"Seafaring Pokémon",i.WATER,null,.3,1.4,O.HYDRATION,O.NONE,O.NONE,600,100,100,100,100,100,100,3,70,300,G.SLOW,null,!1),new P(e.DARKRAI,4,!1,!1,!0,"Pitch-Black Pokémon",i.DARK,null,1.5,50.5,O.BAD_DREAMS,O.NONE,O.NONE,600,70,90,90,135,90,125,3,0,300,G.SLOW,null,!1),new P(e.SHAYMIN,4,!1,!1,!0,"Gratitude Pokémon",i.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,G.MEDIUM_SLOW,null,!1,!0,new y("Land Forme","land",i.GRASS,null,.2,2.1,O.NATURAL_CURE,O.NONE,O.NONE,600,100,100,100,100,100,100,45,100,300,!1,null,!0),new y("Sky Forme","sky",i.GRASS,i.FLYING,.4,5.2,O.SERENE_GRACE,O.NONE,O.NONE,600,100,103,75,120,75,127,45,100,300)),new P(e.ARCEUS,4,!1,!1,!0,"Alpha Pokémon",i.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,G.SLOW,null,!1,!0,new y("Normal","normal",i.NORMAL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!0),new y("Fighting","fighting",i.FIGHTING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Flying","flying",i.FLYING,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Poison","poison",i.POISON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Ground","ground",i.GROUND,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Rock","rock",i.ROCK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Bug","bug",i.BUG,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Ghost","ghost",i.GHOST,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Steel","steel",i.STEEL,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Fire","fire",i.FIRE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Water","water",i.WATER,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Grass","grass",i.GRASS,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Electric","electric",i.ELECTRIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Psychic","psychic",i.PSYCHIC,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Ice","ice",i.ICE,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Dragon","dragon",i.DRAGON,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Dark","dark",i.DARK,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("Fairy","fairy",i.FAIRY,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360),new y("???","unknown",i.UNKNOWN,null,3.2,320,O.MULTITYPE,O.NONE,O.NONE,720,120,120,120,120,120,120,3,0,360,!1,null,!1,!0)),new P(e.VICTINI,5,!1,!1,!0,"Victory Pokémon",i.PSYCHIC,i.FIRE,.4,4,O.VICTORY_STAR,O.NONE,O.NONE,600,100,100,100,100,100,100,3,100,300,G.SLOW,null,!1),new P(e.SNIVY,5,!1,!1,!1,"Grass Snake Pokémon",i.GRASS,null,.6,8.1,O.OVERGROW,O.NONE,O.CONTRARY,308,45,45,55,45,55,63,45,70,62,G.MEDIUM_SLOW,87.5,!1),new P(e.SERVINE,5,!1,!1,!1,"Grass Snake Pokémon",i.GRASS,null,.8,16,O.OVERGROW,O.NONE,O.CONTRARY,413,60,60,75,60,75,83,45,70,145,G.MEDIUM_SLOW,87.5,!1),new P(e.SERPERIOR,5,!1,!1,!1,"Regal Pokémon",i.GRASS,null,3.3,63,O.OVERGROW,O.NONE,O.CONTRARY,528,75,75,95,75,95,113,45,70,264,G.MEDIUM_SLOW,87.5,!1),new P(e.TEPIG,5,!1,!1,!1,"Fire Pig Pokémon",i.FIRE,null,.5,9.9,O.BLAZE,O.NONE,O.THICK_FAT,308,65,63,45,45,45,45,45,70,62,G.MEDIUM_SLOW,87.5,!1),new P(e.PIGNITE,5,!1,!1,!1,"Fire Pig Pokémon",i.FIRE,i.FIGHTING,1,55.5,O.BLAZE,O.NONE,O.THICK_FAT,418,90,93,55,70,55,55,45,70,146,G.MEDIUM_SLOW,87.5,!1),new P(e.EMBOAR,5,!1,!1,!1,"Mega Fire Pig Pokémon",i.FIRE,i.FIGHTING,1.6,150,O.BLAZE,O.NONE,O.RECKLESS,528,110,123,65,100,65,65,45,70,264,G.MEDIUM_SLOW,87.5,!1),new P(e.OSHAWOTT,5,!1,!1,!1,"Sea Otter Pokémon",i.WATER,null,.5,5.9,O.TORRENT,O.NONE,O.SHELL_ARMOR,308,55,55,45,63,45,45,45,70,62,G.MEDIUM_SLOW,87.5,!1),new P(e.DEWOTT,5,!1,!1,!1,"Discipline Pokémon",i.WATER,null,.8,24.5,O.TORRENT,O.NONE,O.SHELL_ARMOR,413,75,75,60,83,60,60,45,70,145,G.MEDIUM_SLOW,87.5,!1),new P(e.SAMUROTT,5,!1,!1,!1,"Formidable Pokémon",i.WATER,null,1.5,94.6,O.TORRENT,O.NONE,O.SHELL_ARMOR,528,95,100,85,108,70,70,45,70,264,G.MEDIUM_SLOW,87.5,!1),new P(e.PATRAT,5,!1,!1,!1,"Scout Pokémon",i.NORMAL,null,.5,11.6,O.RUN_AWAY,O.KEEN_EYE,O.ANALYTIC,255,45,55,39,35,39,42,255,70,51,G.MEDIUM_FAST,50,!1),new P(e.WATCHOG,5,!1,!1,!1,"Lookout Pokémon",i.NORMAL,null,1.1,27,O.ILLUMINATE,O.KEEN_EYE,O.ANALYTIC,420,60,85,69,60,69,77,255,70,147,G.MEDIUM_FAST,50,!1),new P(e.LILLIPUP,5,!1,!1,!1,"Puppy Pokémon",i.NORMAL,null,.4,4.1,O.VITAL_SPIRIT,O.PICKUP,O.RUN_AWAY,275,45,60,45,25,45,55,255,50,55,G.MEDIUM_SLOW,50,!1),new P(e.HERDIER,5,!1,!1,!1,"Loyal Dog Pokémon",i.NORMAL,null,.9,14.7,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,370,65,80,65,35,65,60,120,50,130,G.MEDIUM_SLOW,50,!1),new P(e.STOUTLAND,5,!1,!1,!1,"Big-Hearted Pokémon",i.NORMAL,null,1.2,61,O.INTIMIDATE,O.SAND_RUSH,O.SCRAPPY,500,85,110,90,45,90,80,45,50,250,G.MEDIUM_SLOW,50,!1),new P(e.PURRLOIN,5,!1,!1,!1,"Devious Pokémon",i.DARK,null,.4,10.1,O.LIMBER,O.UNBURDEN,O.PRANKSTER,281,41,50,37,50,37,66,255,50,56,G.MEDIUM_FAST,50,!1),new P(e.LIEPARD,5,!1,!1,!1,"Cruel Pokémon",i.DARK,null,1.1,37.5,O.LIMBER,O.UNBURDEN,O.PRANKSTER,446,64,88,50,88,50,106,90,50,156,G.MEDIUM_FAST,50,!1),new P(e.PANSAGE,5,!1,!1,!1,"Grass Monkey Pokémon",i.GRASS,null,.6,10.5,O.GLUTTONY,O.NONE,O.OVERGROW,316,50,53,48,53,48,64,190,70,63,G.MEDIUM_FAST,87.5,!1),new P(e.SIMISAGE,5,!1,!1,!1,"Thorn Monkey Pokémon",i.GRASS,null,1.1,30.5,O.GLUTTONY,O.NONE,O.OVERGROW,498,75,98,63,98,63,101,75,70,174,G.MEDIUM_FAST,87.5,!1),new P(e.PANSEAR,5,!1,!1,!1,"High Temp Pokémon",i.FIRE,null,.6,11,O.GLUTTONY,O.NONE,O.BLAZE,316,50,53,48,53,48,64,190,70,63,G.MEDIUM_FAST,87.5,!1),new P(e.SIMISEAR,5,!1,!1,!1,"Ember Pokémon",i.FIRE,null,1,28,O.GLUTTONY,O.NONE,O.BLAZE,498,75,98,63,98,63,101,75,70,174,G.MEDIUM_FAST,87.5,!1),new P(e.PANPOUR,5,!1,!1,!1,"Spray Pokémon",i.WATER,null,.6,13.5,O.GLUTTONY,O.NONE,O.TORRENT,316,50,53,48,53,48,64,190,70,63,G.MEDIUM_FAST,87.5,!1),new P(e.SIMIPOUR,5,!1,!1,!1,"Geyser Pokémon",i.WATER,null,1,29,O.GLUTTONY,O.NONE,O.TORRENT,498,75,98,63,98,63,101,75,70,174,G.MEDIUM_FAST,87.5,!1),new P(e.MUNNA,5,!1,!1,!1,"Dream Eater Pokémon",i.PSYCHIC,null,.6,23.3,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,292,76,25,45,67,55,24,190,50,58,G.FAST,50,!1),new P(e.MUSHARNA,5,!1,!1,!1,"Drowsing Pokémon",i.PSYCHIC,null,1.1,60.5,O.FOREWARN,O.SYNCHRONIZE,O.TELEPATHY,487,116,55,85,107,95,29,75,50,170,G.FAST,50,!1),new P(e.PIDOVE,5,!1,!1,!1,"Tiny Pigeon Pokémon",i.NORMAL,i.FLYING,.3,2.1,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,264,50,55,50,36,30,43,255,50,53,G.MEDIUM_SLOW,50,!1),new P(e.TRANQUILL,5,!1,!1,!1,"Wild Pigeon Pokémon",i.NORMAL,i.FLYING,.6,15,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,358,62,77,62,50,42,65,120,50,125,G.MEDIUM_SLOW,50,!1),new P(e.UNFEZANT,5,!1,!1,!1,"Proud Pokémon",i.NORMAL,i.FLYING,1.2,29,O.BIG_PECKS,O.SUPER_LUCK,O.RIVALRY,488,80,115,80,65,55,93,45,50,244,G.MEDIUM_SLOW,50,!0),new P(e.BLITZLE,5,!1,!1,!1,"Electrified Pokémon",i.ELECTRIC,null,.8,29.8,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,295,45,60,32,50,32,76,190,70,59,G.MEDIUM_FAST,50,!1),new P(e.ZEBSTRIKA,5,!1,!1,!1,"Thunderbolt Pokémon",i.ELECTRIC,null,1.6,79.5,O.LIGHTNING_ROD,O.MOTOR_DRIVE,O.SAP_SIPPER,497,75,100,63,80,63,116,75,70,174,G.MEDIUM_FAST,50,!1),new P(e.ROGGENROLA,5,!1,!1,!1,"Mantle Pokémon",i.ROCK,null,.4,18,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,280,55,75,85,25,25,15,255,50,56,G.MEDIUM_SLOW,50,!1),new P(e.BOLDORE,5,!1,!1,!1,"Ore Pokémon",i.ROCK,null,.9,102,O.STURDY,O.WEAK_ARMOR,O.SAND_FORCE,390,70,105,105,50,40,20,120,50,137,G.MEDIUM_SLOW,50,!1),new P(e.GIGALITH,5,!1,!1,!1,"Compressed Pokémon",i.ROCK,null,1.7,260,O.STURDY,O.SAND_STREAM,O.SAND_FORCE,515,85,135,130,60,80,25,45,50,258,G.MEDIUM_SLOW,50,!1),new P(e.WOOBAT,5,!1,!1,!1,"Bat Pokémon",i.PSYCHIC,i.FLYING,.4,2.1,O.UNAWARE,O.KLUTZ,O.SIMPLE,323,65,45,43,55,43,72,190,50,65,G.MEDIUM_FAST,50,!1),new P(e.SWOOBAT,5,!1,!1,!1,"Courting Pokémon",i.PSYCHIC,i.FLYING,.9,10.5,O.UNAWARE,O.KLUTZ,O.SIMPLE,425,67,57,55,77,55,114,45,50,149,G.MEDIUM_FAST,50,!1),new P(e.DRILBUR,5,!1,!1,!1,"Mole Pokémon",i.GROUND,null,.3,8.5,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,328,60,85,40,30,45,68,120,50,66,G.MEDIUM_FAST,50,!1),new P(e.EXCADRILL,5,!1,!1,!1,"Subterrene Pokémon",i.GROUND,i.STEEL,.7,40.4,O.SAND_RUSH,O.SAND_FORCE,O.MOLD_BREAKER,508,110,135,60,50,65,88,60,50,178,G.MEDIUM_FAST,50,!1),new P(e.AUDINO,5,!1,!1,!1,"Hearing Pokémon",i.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,G.FAST,50,!1,!0,new y("Normal","",i.NORMAL,null,1.1,31,O.HEALER,O.REGENERATOR,O.KLUTZ,445,103,60,86,60,86,50,255,50,390,!1,null,!0),new y("Mega",Me.MEGA,i.NORMAL,i.FAIRY,1.5,32,O.REGENERATOR,O.REGENERATOR,O.REGENERATOR,545,103,60,126,80,126,50,255,50,390)),new P(e.TIMBURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,.6,12.5,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,305,75,80,55,25,35,35,180,70,61,G.MEDIUM_SLOW,75,!1),new P(e.GURDURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,1.2,40,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,405,85,105,85,40,50,40,90,50,142,G.MEDIUM_SLOW,75,!1),new P(e.CONKELDURR,5,!1,!1,!1,"Muscular Pokémon",i.FIGHTING,null,1.4,87,O.GUTS,O.SHEER_FORCE,O.IRON_FIST,505,105,140,95,55,65,45,45,50,253,G.MEDIUM_SLOW,75,!1),new P(e.TYMPOLE,5,!1,!1,!1,"Tadpole Pokémon",i.WATER,null,.5,4.5,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,294,50,50,40,50,40,64,255,50,59,G.MEDIUM_SLOW,50,!1),new P(e.PALPITOAD,5,!1,!1,!1,"Vibration Pokémon",i.WATER,i.GROUND,.8,17,O.SWIFT_SWIM,O.HYDRATION,O.WATER_ABSORB,384,75,65,55,65,55,69,120,50,134,G.MEDIUM_SLOW,50,!1),new P(e.SEISMITOAD,5,!1,!1,!1,"Vibration Pokémon",i.WATER,i.GROUND,1.5,62,O.SWIFT_SWIM,O.POISON_TOUCH,O.WATER_ABSORB,509,105,95,75,85,75,74,45,50,255,G.MEDIUM_SLOW,50,!1),new P(e.THROH,5,!1,!1,!1,"Judo Pokémon",i.FIGHTING,null,1.3,55.5,O.GUTS,O.INNER_FOCUS,O.MOLD_BREAKER,465,120,100,85,30,85,45,45,50,163,G.MEDIUM_FAST,100,!1),new P(e.SAWK,5,!1,!1,!1,"Karate Pokémon",i.FIGHTING,null,1.4,51,O.STURDY,O.INNER_FOCUS,O.MOLD_BREAKER,465,75,125,75,30,75,85,45,50,163,G.MEDIUM_FAST,100,!1),new P(e.SEWADDLE,5,!1,!1,!1,"Sewing Pokémon",i.BUG,i.GRASS,.3,2.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,310,45,53,70,40,60,42,255,70,62,G.MEDIUM_SLOW,50,!1),new P(e.SWADLOON,5,!1,!1,!1,"Leaf-Wrapped Pokémon",i.BUG,i.GRASS,.5,7.3,O.LEAF_GUARD,O.CHLOROPHYLL,O.OVERCOAT,380,55,63,90,50,80,42,120,70,133,G.MEDIUM_SLOW,50,!1),new P(e.LEAVANNY,5,!1,!1,!1,"Nurturing Pokémon",i.BUG,i.GRASS,1.2,20.5,O.SWARM,O.CHLOROPHYLL,O.OVERCOAT,500,75,103,80,70,80,92,45,70,250,G.MEDIUM_SLOW,50,!1),new P(e.VENIPEDE,5,!1,!1,!1,"Centipede Pokémon",i.BUG,i.POISON,.4,5.3,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,260,30,45,59,30,39,57,255,50,52,G.MEDIUM_SLOW,50,!1),new P(e.WHIRLIPEDE,5,!1,!1,!1,"Curlipede Pokémon",i.BUG,i.POISON,1.2,58.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,360,40,55,99,40,79,47,120,50,126,G.MEDIUM_SLOW,50,!1),new P(e.SCOLIPEDE,5,!1,!1,!1,"Megapede Pokémon",i.BUG,i.POISON,2.5,200.5,O.POISON_POINT,O.SWARM,O.SPEED_BOOST,485,60,100,89,55,69,112,45,50,243,G.MEDIUM_SLOW,50,!1),new P(e.COTTONEE,5,!1,!1,!1,"Cotton Puff Pokémon",i.GRASS,i.FAIRY,.3,.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,280,40,27,60,37,50,66,190,50,56,G.MEDIUM_FAST,50,!1),new P(e.WHIMSICOTT,5,!1,!1,!1,"Windveiled Pokémon",i.GRASS,i.FAIRY,.7,6.6,O.PRANKSTER,O.INFILTRATOR,O.CHLOROPHYLL,480,60,67,85,77,75,116,75,50,168,G.MEDIUM_FAST,50,!1),new P(e.PETILIL,5,!1,!1,!1,"Bulb Pokémon",i.GRASS,null,.5,6.6,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,280,45,35,50,70,50,30,190,50,56,G.MEDIUM_FAST,0,!1),new P(e.LILLIGANT,5,!1,!1,!1,"Flowering Pokémon",i.GRASS,null,1.1,16.3,O.CHLOROPHYLL,O.OWN_TEMPO,O.LEAF_GUARD,480,70,60,75,110,75,90,75,50,168,G.MEDIUM_FAST,0,!1),new P(e.BASCULIN,5,!1,!1,!1,"Hostile Pokémon",i.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,G.MEDIUM_FAST,50,!1,!1,new y("Red-Striped Form","red-striped",i.WATER,null,1,18,O.RECKLESS,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new y("Blue-Striped Form","blue-striped",i.WATER,null,1,18,O.ROCK_HEAD,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0),new y("White-Striped Form","white-striped",i.WATER,null,1,18,O.RATTLED,O.ADAPTABILITY,O.MOLD_BREAKER,460,70,92,65,80,55,98,25,50,161,!1,null,!0)),new P(e.SANDILE,5,!1,!1,!1,"Desert Croc Pokémon",i.GROUND,i.DARK,.7,15.2,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,292,50,72,35,35,35,65,180,50,58,G.MEDIUM_SLOW,50,!1),new P(e.KROKOROK,5,!1,!1,!1,"Desert Croc Pokémon",i.GROUND,i.DARK,1,33.4,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,351,60,82,45,45,45,74,90,50,123,G.MEDIUM_SLOW,50,!1),new P(e.KROOKODILE,5,!1,!1,!1,"Intimidation Pokémon",i.GROUND,i.DARK,1.5,96.3,O.INTIMIDATE,O.MOXIE,O.ANGER_POINT,519,95,117,80,65,70,92,45,50,260,G.MEDIUM_SLOW,50,!1),new P(e.DARUMAKA,5,!1,!1,!1,"Zen Charm Pokémon",i.FIRE,null,.6,37.5,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,G.MEDIUM_SLOW,50,!1),new P(e.DARMANITAN,5,!1,!1,!1,"Blazing Pokémon",i.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,G.MEDIUM_SLOW,50,!1,!0,new y("Standard Mode","",i.FIRE,null,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new y("Zen Mode","zen",i.FIRE,i.PSYCHIC,1.3,92.9,O.SHEER_FORCE,O.NONE,O.ZEN_MODE,540,105,30,105,140,105,55,60,50,189)),new P(e.MARACTUS,5,!1,!1,!1,"Cactus Pokémon",i.GRASS,null,1,28,O.WATER_ABSORB,O.CHLOROPHYLL,O.STORM_DRAIN,461,75,86,67,106,67,60,255,50,161,G.MEDIUM_FAST,50,!1),new P(e.DWEBBLE,5,!1,!1,!1,"Rock Inn Pokémon",i.BUG,i.ROCK,.3,14.5,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,325,50,65,85,35,35,55,190,50,65,G.MEDIUM_FAST,50,!1),new P(e.CRUSTLE,5,!1,!1,!1,"Stone Home Pokémon",i.BUG,i.ROCK,1.4,200,O.STURDY,O.SHELL_ARMOR,O.WEAK_ARMOR,485,70,105,125,65,75,45,75,50,170,G.MEDIUM_FAST,50,!1),new P(e.SCRAGGY,5,!1,!1,!1,"Shedding Pokémon",i.DARK,i.FIGHTING,.6,11.8,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,348,50,75,70,35,70,48,180,35,70,G.MEDIUM_FAST,50,!1),new P(e.SCRAFTY,5,!1,!1,!1,"Hoodlum Pokémon",i.DARK,i.FIGHTING,1.1,30,O.SHED_SKIN,O.MOXIE,O.INTIMIDATE,488,65,90,115,45,115,58,90,50,171,G.MEDIUM_FAST,50,!1),new P(e.SIGILYPH,5,!1,!1,!1,"Avianoid Pokémon",i.PSYCHIC,i.FLYING,1.4,14,O.WONDER_SKIN,O.MAGIC_GUARD,O.TINTED_LENS,490,72,58,80,103,80,97,45,50,172,G.MEDIUM_FAST,50,!1),new P(e.YAMASK,5,!1,!1,!1,"Spirit Pokémon",i.GHOST,null,.5,1.5,O.MUMMY,O.NONE,O.NONE,303,38,30,85,55,65,30,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.COFAGRIGUS,5,!1,!1,!1,"Coffin Pokémon",i.GHOST,null,1.7,76.5,O.MUMMY,O.NONE,O.NONE,483,58,50,145,95,105,30,90,50,169,G.MEDIUM_FAST,50,!1),new P(e.TIRTOUGA,5,!1,!1,!1,"Prototurtle Pokémon",i.WATER,i.ROCK,.7,16.5,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,355,54,78,103,53,45,22,45,50,71,G.MEDIUM_FAST,87.5,!1),new P(e.CARRACOSTA,5,!1,!1,!1,"Prototurtle Pokémon",i.WATER,i.ROCK,1.2,81,O.SOLID_ROCK,O.STURDY,O.SWIFT_SWIM,495,74,108,133,83,65,32,45,50,173,G.MEDIUM_FAST,87.5,!1),new P(e.ARCHEN,5,!1,!1,!1,"First Bird Pokémon",i.ROCK,i.FLYING,.5,9.5,O.DEFEATIST,O.NONE,O.WIMP_OUT,401,55,112,45,74,45,70,45,50,71,G.MEDIUM_FAST,87.5,!1),new P(e.ARCHEOPS,5,!1,!1,!1,"First Bird Pokémon",i.ROCK,i.FLYING,1.4,32,O.DEFEATIST,O.NONE,O.EMERGENCY_EXIT,567,75,140,65,112,65,110,45,50,177,G.MEDIUM_FAST,87.5,!1),new P(e.TRUBBISH,5,!1,!1,!1,"Trash Bag Pokémon",i.POISON,null,.6,31,O.STENCH,O.STICKY_HOLD,O.AFTERMATH,329,50,50,62,40,62,65,190,50,66,G.MEDIUM_FAST,50,!1),new P(e.GARBODOR,5,!1,!1,!1,"Trash Heap Pokémon",i.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.POISON,null,1.9,107.3,O.STENCH,O.WEAK_ARMOR,O.AFTERMATH,474,80,95,82,60,82,75,60,50,166,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.POISON,i.STEEL,21,999.9,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,O.TOXIC_DEBRIS,574,115,121,102,81,102,53,60,50,166)),new P(e.ZORUA,5,!1,!1,!1,"Tricky Fox Pokémon",i.DARK,null,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,40,65,40,80,40,65,75,50,66,G.MEDIUM_SLOW,87.5,!1),new P(e.ZOROARK,5,!1,!1,!1,"Illusion Fox Pokémon",i.DARK,null,1.6,81.1,O.ILLUSION,O.NONE,O.NONE,510,60,105,60,120,60,105,45,50,179,G.MEDIUM_SLOW,87.5,!1),new P(e.MINCCINO,5,!1,!1,!1,"Chinchilla Pokémon",i.NORMAL,null,.4,5.8,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,300,55,50,40,40,40,75,255,50,60,G.FAST,25,!1),new P(e.CINCCINO,5,!1,!1,!1,"Scarf Pokémon",i.NORMAL,null,.5,7.5,O.CUTE_CHARM,O.TECHNICIAN,O.SKILL_LINK,470,75,95,60,65,60,115,60,50,165,G.FAST,25,!1),new P(e.GOTHITA,5,!1,!1,!1,"Fixation Pokémon",i.PSYCHIC,null,.4,5.8,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,290,45,30,50,55,65,45,200,50,58,G.MEDIUM_SLOW,25,!1),new P(e.GOTHORITA,5,!1,!1,!1,"Manipulate Pokémon",i.PSYCHIC,null,.7,18,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,390,60,45,70,75,85,55,100,50,137,G.MEDIUM_SLOW,25,!1),new P(e.GOTHITELLE,5,!1,!1,!1,"Astral Body Pokémon",i.PSYCHIC,null,1.5,44,O.FRISK,O.COMPETITIVE,O.SHADOW_TAG,490,70,55,95,95,110,65,50,50,245,G.MEDIUM_SLOW,25,!1),new P(e.SOLOSIS,5,!1,!1,!1,"Cell Pokémon",i.PSYCHIC,null,.3,1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,290,45,30,40,105,50,20,200,50,58,G.MEDIUM_SLOW,50,!1),new P(e.DUOSION,5,!1,!1,!1,"Mitosis Pokémon",i.PSYCHIC,null,.6,8,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,370,65,40,50,125,60,30,100,50,130,G.MEDIUM_SLOW,50,!1),new P(e.REUNICLUS,5,!1,!1,!1,"Multiplying Pokémon",i.PSYCHIC,null,1,20.1,O.OVERCOAT,O.MAGIC_GUARD,O.REGENERATOR,490,110,65,75,125,85,30,50,50,245,G.MEDIUM_SLOW,50,!1),new P(e.DUCKLETT,5,!1,!1,!1,"Water Bird Pokémon",i.WATER,i.FLYING,.5,5.5,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,305,62,44,50,44,50,55,190,70,61,G.MEDIUM_FAST,50,!1),new P(e.SWANNA,5,!1,!1,!1,"White Bird Pokémon",i.WATER,i.FLYING,1.3,24.2,O.KEEN_EYE,O.BIG_PECKS,O.HYDRATION,473,75,87,63,87,63,98,45,70,166,G.MEDIUM_FAST,50,!1),new P(e.VANILLITE,5,!1,!1,!1,"Fresh Snow Pokémon",i.ICE,null,.4,5.7,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,305,36,50,50,65,60,44,255,50,61,G.SLOW,50,!1),new P(e.VANILLISH,5,!1,!1,!1,"Icy Snow Pokémon",i.ICE,null,1.1,41,O.ICE_BODY,O.SNOW_CLOAK,O.WEAK_ARMOR,395,51,65,65,80,75,59,120,50,138,G.SLOW,50,!1),new P(e.VANILLUXE,5,!1,!1,!1,"Snowstorm Pokémon",i.ICE,null,1.3,57.5,O.ICE_BODY,O.SNOW_WARNING,O.WEAK_ARMOR,535,71,95,85,110,95,79,45,50,268,G.SLOW,50,!1),new P(e.DEERLING,5,!1,!1,!1,"Season Pokémon",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,G.MEDIUM_FAST,50,!1,!0,new y("Spring Form","spring",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new y("Summer Form","summer",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new y("Autumn Form","autumn",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0),new y("Winter Form","winter",i.NORMAL,i.GRASS,.6,19.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,335,60,60,50,40,50,75,190,70,67,!1,null,!0)),new P(e.SAWSBUCK,5,!1,!1,!1,"Season Pokémon",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,G.MEDIUM_FAST,50,!1,!0,new y("Spring Form","spring",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new y("Summer Form","summer",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new y("Autumn Form","autumn",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0),new y("Winter Form","winter",i.NORMAL,i.GRASS,1.9,92.5,O.CHLOROPHYLL,O.SAP_SIPPER,O.SERENE_GRACE,475,80,100,70,60,70,95,75,70,166,!1,null,!0)),new P(e.EMOLGA,5,!1,!1,!1,"Sky Squirrel Pokémon",i.ELECTRIC,i.FLYING,.4,5,O.STATIC,O.NONE,O.MOTOR_DRIVE,428,55,75,60,75,60,103,200,50,150,G.MEDIUM_FAST,50,!1),new P(e.KARRABLAST,5,!1,!1,!1,"Clamping Pokémon",i.BUG,null,.5,5.9,O.SWARM,O.SHED_SKIN,O.NO_GUARD,315,50,75,45,40,45,60,200,50,63,G.MEDIUM_FAST,50,!1),new P(e.ESCAVALIER,5,!1,!1,!1,"Cavalry Pokémon",i.BUG,i.STEEL,1,33,O.SWARM,O.SHELL_ARMOR,O.OVERCOAT,495,70,135,105,60,105,20,75,50,173,G.MEDIUM_FAST,50,!1),new P(e.FOONGUS,5,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.POISON,.2,1,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,294,69,55,45,55,55,15,190,50,59,G.MEDIUM_FAST,50,!1),new P(e.AMOONGUSS,5,!1,!1,!1,"Mushroom Pokémon",i.GRASS,i.POISON,.6,10.5,O.EFFECT_SPORE,O.NONE,O.REGENERATOR,464,114,85,70,85,80,30,75,50,162,G.MEDIUM_FAST,50,!1),new P(e.FRILLISH,5,!1,!1,!1,"Floating Pokémon",i.WATER,i.GHOST,1.2,33,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,335,55,40,50,65,85,40,190,50,67,G.MEDIUM_FAST,50,!0),new P(e.JELLICENT,5,!1,!1,!1,"Floating Pokémon",i.WATER,i.GHOST,2.2,135,O.WATER_ABSORB,O.CURSED_BODY,O.DAMP,480,100,60,70,85,105,60,60,50,168,G.MEDIUM_FAST,50,!0),new P(e.ALOMOMOLA,5,!1,!1,!1,"Caring Pokémon",i.WATER,null,1.2,31.6,O.HEALER,O.HYDRATION,O.REGENERATOR,470,165,75,80,40,45,65,75,70,165,G.FAST,50,!1),new P(e.JOLTIK,5,!1,!1,!1,"Attaching Pokémon",i.BUG,i.ELECTRIC,.1,.6,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,319,50,47,50,57,50,65,190,50,64,G.MEDIUM_FAST,50,!1),new P(e.GALVANTULA,5,!1,!1,!1,"EleSpider Pokémon",i.BUG,i.ELECTRIC,.8,14.3,O.COMPOUND_EYES,O.UNNERVE,O.SWARM,472,70,77,60,97,60,108,75,50,165,G.MEDIUM_FAST,50,!1),new P(e.FERROSEED,5,!1,!1,!1,"Thorn Seed Pokémon",i.GRASS,i.STEEL,.6,18.8,O.IRON_BARBS,O.NONE,O.ANTICIPATION,305,44,50,91,24,86,10,255,50,61,G.MEDIUM_FAST,50,!1),new P(e.FERROTHORN,5,!1,!1,!1,"Thorn Pod Pokémon",i.GRASS,i.STEEL,1,110,O.IRON_BARBS,O.NONE,O.ANTICIPATION,489,74,94,131,54,116,20,90,50,171,G.MEDIUM_FAST,50,!1),new P(e.KLINK,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.3,21,O.PLUS,O.MINUS,O.CLEAR_BODY,300,40,55,70,45,60,30,130,50,60,G.MEDIUM_SLOW,null,!1),new P(e.KLANG,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.6,51,O.PLUS,O.MINUS,O.CLEAR_BODY,440,60,80,95,70,85,50,60,50,154,G.MEDIUM_SLOW,null,!1),new P(e.KLINKLANG,5,!1,!1,!1,"Gear Pokémon",i.STEEL,null,.6,81,O.PLUS,O.MINUS,O.CLEAR_BODY,520,60,100,115,70,85,90,30,50,260,G.MEDIUM_SLOW,null,!1),new P(e.TYNAMO,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,.2,.3,O.LEVITATE,O.NONE,O.NONE,275,35,55,40,45,40,60,190,70,55,G.SLOW,50,!1),new P(e.EELEKTRIK,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,1.2,22,O.LEVITATE,O.NONE,O.NONE,405,65,85,70,75,70,40,60,70,142,G.SLOW,50,!1),new P(e.EELEKTROSS,5,!1,!1,!1,"EleFish Pokémon",i.ELECTRIC,null,2.1,80.5,O.LEVITATE,O.NONE,O.NONE,515,85,115,80,105,80,50,30,70,258,G.SLOW,50,!1),new P(e.ELGYEM,5,!1,!1,!1,"Cerebral Pokémon",i.PSYCHIC,null,.5,9,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,335,55,55,55,85,55,30,255,50,67,G.MEDIUM_FAST,50,!1),new P(e.BEHEEYEM,5,!1,!1,!1,"Cerebral Pokémon",i.PSYCHIC,null,1,34.5,O.TELEPATHY,O.SYNCHRONIZE,O.ANALYTIC,485,75,75,75,125,95,40,90,50,170,G.MEDIUM_FAST,50,!1),new P(e.LITWICK,5,!1,!1,!1,"Candle Pokémon",i.GHOST,i.FIRE,.3,3.1,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,275,50,30,55,65,55,20,190,50,55,G.MEDIUM_SLOW,50,!1),new P(e.LAMPENT,5,!1,!1,!1,"Lamp Pokémon",i.GHOST,i.FIRE,.6,13,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,370,60,40,60,95,60,55,90,50,130,G.MEDIUM_SLOW,50,!1),new P(e.CHANDELURE,5,!1,!1,!1,"Luring Pokémon",i.GHOST,i.FIRE,1,34.3,O.FLASH_FIRE,O.FLAME_BODY,O.INFILTRATOR,520,60,55,90,145,90,80,45,50,260,G.MEDIUM_SLOW,50,!1),new P(e.AXEW,5,!1,!1,!1,"Tusk Pokémon",i.DRAGON,null,.6,18,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,320,46,87,60,30,40,57,75,35,64,G.SLOW,50,!1),new P(e.FRAXURE,5,!1,!1,!1,"Axe Jaw Pokémon",i.DRAGON,null,1,36,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,410,66,117,70,40,50,67,60,35,144,G.SLOW,50,!1),new P(e.HAXORUS,5,!1,!1,!1,"Axe Jaw Pokémon",i.DRAGON,null,1.8,105.5,O.RIVALRY,O.MOLD_BREAKER,O.UNNERVE,540,76,147,90,60,70,97,45,35,270,G.SLOW,50,!1),new P(e.CUBCHOO,5,!1,!1,!1,"Chill Pokémon",i.ICE,null,.5,8.5,O.SNOW_CLOAK,O.SLUSH_RUSH,O.RATTLED,305,55,70,40,60,40,40,120,50,61,G.MEDIUM_FAST,50,!1),new P(e.BEARTIC,5,!1,!1,!1,"Freezing Pokémon",i.ICE,null,2.6,260,O.SNOW_CLOAK,O.SLUSH_RUSH,O.SWIFT_SWIM,505,95,130,80,70,80,50,60,50,177,G.MEDIUM_FAST,50,!1),new P(e.CRYOGONAL,5,!1,!1,!1,"Crystallizing Pokémon",i.ICE,null,1.1,148,O.LEVITATE,O.NONE,O.NONE,515,80,50,50,95,135,105,25,50,180,G.MEDIUM_FAST,null,!1),new P(e.SHELMET,5,!1,!1,!1,"Snail Pokémon",i.BUG,null,.4,7.7,O.HYDRATION,O.SHELL_ARMOR,O.OVERCOAT,305,50,40,85,40,65,25,200,50,61,G.MEDIUM_FAST,50,!1),new P(e.ACCELGOR,5,!1,!1,!1,"Shell Out Pokémon",i.BUG,null,.8,25.3,O.HYDRATION,O.STICKY_HOLD,O.UNBURDEN,495,80,70,40,100,60,145,75,50,173,G.MEDIUM_FAST,50,!1),new P(e.STUNFISK,5,!1,!1,!1,"Trap Pokémon",i.GROUND,i.ELECTRIC,.7,11,O.STATIC,O.LIMBER,O.SAND_VEIL,471,109,66,84,81,99,32,75,70,165,G.MEDIUM_FAST,50,!1),new P(e.MIENFOO,5,!1,!1,!1,"Martial Arts Pokémon",i.FIGHTING,null,.9,20,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,350,45,85,50,55,50,65,180,50,70,G.MEDIUM_SLOW,50,!1),new P(e.MIENSHAO,5,!1,!1,!1,"Martial Arts Pokémon",i.FIGHTING,null,1.4,35.5,O.INNER_FOCUS,O.REGENERATOR,O.RECKLESS,510,65,125,60,95,60,105,45,50,179,G.MEDIUM_SLOW,50,!1),new P(e.DRUDDIGON,5,!1,!1,!1,"Cave Pokémon",i.DRAGON,null,1.6,139,O.ROUGH_SKIN,O.SHEER_FORCE,O.MOLD_BREAKER,485,77,120,90,60,90,48,45,50,170,G.MEDIUM_FAST,50,!1),new P(e.GOLETT,5,!1,!1,!1,"Automaton Pokémon",i.GROUND,i.GHOST,1,92,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,303,59,74,50,35,50,35,190,50,61,G.MEDIUM_FAST,null,!1),new P(e.GOLURK,5,!1,!1,!1,"Automaton Pokémon",i.GROUND,i.GHOST,2.8,330,O.IRON_FIST,O.KLUTZ,O.NO_GUARD,483,89,124,80,55,80,55,90,50,169,G.MEDIUM_FAST,null,!1),new P(e.PAWNIARD,5,!1,!1,!1,"Sharp Blade Pokémon",i.DARK,i.STEEL,.5,10.2,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,340,45,85,70,40,40,60,120,35,68,G.MEDIUM_FAST,50,!1),new P(e.BISHARP,5,!1,!1,!1,"Sword Blade Pokémon",i.DARK,i.STEEL,1.6,70,O.DEFIANT,O.INNER_FOCUS,O.PRESSURE,490,65,125,100,60,70,70,45,35,172,G.MEDIUM_FAST,50,!1),new P(e.BOUFFALANT,5,!1,!1,!1,"Bash Buffalo Pokémon",i.NORMAL,null,1.6,94.6,O.RECKLESS,O.SAP_SIPPER,O.SOUNDPROOF,490,95,110,95,40,95,55,45,50,172,G.MEDIUM_FAST,50,!1),new P(e.RUFFLET,5,!1,!1,!1,"Eaglet Pokémon",i.NORMAL,i.FLYING,.5,10.5,O.KEEN_EYE,O.SHEER_FORCE,O.HUSTLE,350,70,83,50,37,50,60,190,50,70,G.SLOW,100,!1),new P(e.BRAVIARY,5,!1,!1,!1,"Valiant Pokémon",i.NORMAL,i.FLYING,1.5,41,O.KEEN_EYE,O.SHEER_FORCE,O.DEFIANT,510,100,123,75,57,75,80,60,50,179,G.SLOW,100,!1),new P(e.VULLABY,5,!1,!1,!1,"Diapered Pokémon",i.DARK,i.FLYING,.5,9,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,370,70,55,75,45,65,60,190,35,74,G.SLOW,0,!1),new P(e.MANDIBUZZ,5,!1,!1,!1,"Bone Vulture Pokémon",i.DARK,i.FLYING,1.2,39.5,O.BIG_PECKS,O.OVERCOAT,O.WEAK_ARMOR,510,110,65,105,55,95,80,60,35,179,G.SLOW,0,!1),new P(e.HEATMOR,5,!1,!1,!1,"Anteater Pokémon",i.FIRE,null,1.4,58,O.GLUTTONY,O.FLASH_FIRE,O.WHITE_SMOKE,484,85,97,66,105,66,65,90,50,169,G.MEDIUM_FAST,50,!1),new P(e.DURANT,5,!1,!1,!1,"Iron Ant Pokémon",i.BUG,i.STEEL,.3,33,O.SWARM,O.HUSTLE,O.TRUANT,484,58,109,112,48,48,109,90,50,169,G.MEDIUM_FAST,50,!1),new P(e.DEINO,5,!1,!1,!1,"Irate Pokémon",i.DARK,i.DRAGON,.8,17.3,O.HUSTLE,O.NONE,O.NONE,300,52,65,50,45,50,38,45,35,60,G.SLOW,50,!1),new P(e.ZWEILOUS,5,!1,!1,!1,"Hostile Pokémon",i.DARK,i.DRAGON,1.4,50,O.HUSTLE,O.NONE,O.NONE,420,72,85,70,65,70,58,45,35,147,G.SLOW,50,!1),new P(e.HYDREIGON,5,!1,!1,!1,"Brutal Pokémon",i.DARK,i.DRAGON,1.8,160,O.LEVITATE,O.NONE,O.NONE,600,92,105,90,125,90,98,45,35,300,G.SLOW,50,!1),new P(e.LARVESTA,5,!1,!1,!1,"Torch Pokémon",i.BUG,i.FIRE,1.1,28.8,O.FLAME_BODY,O.NONE,O.SWARM,360,55,85,55,50,55,60,45,50,72,G.SLOW,50,!1),new P(e.VOLCARONA,5,!1,!1,!1,"Sun Pokémon",i.BUG,i.FIRE,1.6,46,O.FLAME_BODY,O.NONE,O.SWARM,550,85,60,65,135,105,100,15,50,275,G.SLOW,50,!1),new P(e.COBALION,5,!0,!1,!1,"Iron Will Pokémon",i.STEEL,i.FIGHTING,2.1,250,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,129,90,72,108,3,35,290,G.SLOW,null,!1),new P(e.TERRAKION,5,!0,!1,!1,"Cavern Pokémon",i.ROCK,i.FIGHTING,1.9,260,O.JUSTIFIED,O.NONE,O.NONE,580,91,129,90,72,90,108,3,35,290,G.SLOW,null,!1),new P(e.VIRIZION,5,!0,!1,!1,"Grassland Pokémon",i.GRASS,i.FIGHTING,2,200,O.JUSTIFIED,O.NONE,O.NONE,580,91,90,72,90,129,108,3,35,290,G.SLOW,null,!1),new P(e.TORNADUS,5,!0,!1,!1,"Cyclone Pokémon",i.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,G.SLOW,100,!1,!0,new y("Incarnate Forme","incarnate",i.FLYING,null,1.5,63,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new y("Therian Forme","therian",i.FLYING,null,1.4,63,O.REGENERATOR,O.NONE,O.REGENERATOR,580,79,100,80,110,90,121,3,90,290)),new P(e.THUNDURUS,5,!0,!1,!1,"Bolt Strike Pokémon",i.ELECTRIC,i.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,G.SLOW,100,!1,!0,new y("Incarnate Forme","incarnate",i.ELECTRIC,i.FLYING,1.5,61,O.PRANKSTER,O.NONE,O.DEFIANT,580,79,115,70,125,80,111,3,90,290,!1,null,!0),new y("Therian Forme","therian",i.ELECTRIC,i.FLYING,3,61,O.VOLT_ABSORB,O.NONE,O.VOLT_ABSORB,580,79,105,70,145,80,101,3,90,290)),new P(e.RESHIRAM,5,!1,!0,!1,"Vast White Pokémon",i.DRAGON,i.FIRE,3.2,330,O.TURBOBLAZE,O.NONE,O.NONE,680,100,120,100,150,120,90,3,0,340,G.SLOW,null,!1),new P(e.ZEKROM,5,!1,!0,!1,"Deep Black Pokémon",i.DRAGON,i.ELECTRIC,2.9,345,O.TERAVOLT,O.NONE,O.NONE,680,100,150,120,120,100,90,3,0,340,G.SLOW,null,!1),new P(e.LANDORUS,5,!0,!1,!1,"Abundance Pokémon",i.GROUND,i.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,G.SLOW,100,!1,!0,new y("Incarnate Forme","incarnate",i.GROUND,i.FLYING,1.5,68,O.SAND_FORCE,O.NONE,O.SHEER_FORCE,600,89,125,90,115,80,101,3,90,300,!1,null,!0),new y("Therian Forme","therian",i.GROUND,i.FLYING,1.3,68,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,89,145,90,105,80,91,3,90,300)),new P(e.KYUREM,5,!1,!0,!1,"Boundary Pokémon",i.DRAGON,i.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,G.SLOW,null,!1,!0,new y("Normal","",i.DRAGON,i.ICE,3,325,O.PRESSURE,O.NONE,O.NONE,660,125,130,90,130,90,95,3,0,330,!1,null,!0),new y("Black","black",i.DRAGON,i.ICE,3.3,325,O.TERAVOLT,O.NONE,O.NONE,700,125,170,100,120,90,95,3,0,350),new y("White","white",i.DRAGON,i.ICE,3.6,325,O.TURBOBLAZE,O.NONE,O.NONE,700,125,120,90,170,100,95,3,0,350)),new P(e.KELDEO,5,!1,!1,!0,"Colt Pokémon",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,G.SLOW,null,!1,!0,new y("Ordinary Form","ordinary",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290,!1,null,!0),new y("Resolute","resolute",i.WATER,i.FIGHTING,1.4,48.5,O.JUSTIFIED,O.NONE,O.NONE,580,91,72,90,129,90,108,3,35,290)),new P(e.MELOETTA,5,!1,!1,!0,"Melody Pokémon",i.NORMAL,i.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,G.SLOW,null,!1,!0,new y("Aria Forme","aria",i.NORMAL,i.PSYCHIC,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,77,77,128,128,90,3,100,300,!1,null,!0),new y("Pirouette Forme","pirouette",i.NORMAL,i.FIGHTING,.6,6.5,O.SERENE_GRACE,O.NONE,O.NONE,600,100,128,90,77,77,128,3,100,300,!1,null,!0)),new P(e.GENESECT,5,!1,!1,!0,"Paleozoic Pokémon",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,G.SLOW,null,!1,!0,new y("Normal","",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300,!1,null,!0),new y("Shock Drive","shock",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new y("Burn Drive","burn",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new y("Chill Drive","chill",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300),new y("Douse Drive","douse",i.BUG,i.STEEL,1.5,82.5,O.DOWNLOAD,O.NONE,O.NONE,600,71,120,95,120,95,99,3,0,300)),new P(e.CHESPIN,6,!1,!1,!1,"Spiny Nut Pokémon",i.GRASS,null,.4,9,O.OVERGROW,O.NONE,O.BULLETPROOF,313,56,61,65,48,45,38,45,70,63,G.MEDIUM_SLOW,87.5,!1),new P(e.QUILLADIN,6,!1,!1,!1,"Spiny Armor Pokémon",i.GRASS,null,.7,29,O.OVERGROW,O.NONE,O.BULLETPROOF,405,61,78,95,56,58,57,45,70,142,G.MEDIUM_SLOW,87.5,!1),new P(e.CHESNAUGHT,6,!1,!1,!1,"Spiny Armor Pokémon",i.GRASS,i.FIGHTING,1.6,90,O.OVERGROW,O.NONE,O.BULLETPROOF,530,88,107,122,74,75,64,45,70,265,G.MEDIUM_SLOW,87.5,!1),new P(e.FENNEKIN,6,!1,!1,!1,"Fox Pokémon",i.FIRE,null,.4,9.4,O.BLAZE,O.NONE,O.MAGICIAN,307,40,45,40,62,60,60,45,70,61,G.MEDIUM_SLOW,87.5,!1),new P(e.BRAIXEN,6,!1,!1,!1,"Fox Pokémon",i.FIRE,null,1,14.5,O.BLAZE,O.NONE,O.MAGICIAN,409,59,59,58,90,70,73,45,70,143,G.MEDIUM_SLOW,87.5,!1),new P(e.DELPHOX,6,!1,!1,!1,"Fox Pokémon",i.FIRE,i.PSYCHIC,1.5,39,O.BLAZE,O.NONE,O.MAGICIAN,534,75,69,72,114,100,104,45,70,267,G.MEDIUM_SLOW,87.5,!1),new P(e.FROAKIE,6,!1,!1,!1,"Bubble Frog Pokémon",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,G.MEDIUM_SLOW,87.5,!1,!1,new y("Normal","",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.PROTEAN,314,41,56,40,62,44,71,45,70,63,!1,null,!0),new y("Battle Bond","battle-bond",i.WATER,null,.3,7,O.TORRENT,O.NONE,O.TORRENT,314,41,56,40,62,44,71,45,70,63,!1,"",!0)),new P(e.FROGADIER,6,!1,!1,!1,"Bubble Frog Pokémon",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,G.MEDIUM_SLOW,87.5,!1,!1,new y("Normal","",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.PROTEAN,405,54,63,52,83,56,97,45,70,142,!1,null,!0),new y("Battle Bond","battle-bond",i.WATER,null,.6,10.9,O.TORRENT,O.NONE,O.NONE,405,54,63,52,83,56,97,45,70,142,!1,"",!0)),new P(e.GRENINJA,6,!1,!1,!1,"Ninja Pokémon",i.WATER,i.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,G.MEDIUM_SLOW,87.5,!1,!1,new y("Normal","",i.WATER,i.DARK,1.5,40,O.TORRENT,O.NONE,O.PROTEAN,530,72,95,67,103,71,122,45,70,265,!1,null,!0),new y("Battle Bond","battle-bond",i.WATER,i.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.BATTLE_BOND,530,72,95,67,103,71,122,45,70,265,!1,"",!0),new y("Ash","ash",i.WATER,i.DARK,1.5,40,O.BATTLE_BOND,O.NONE,O.NONE,640,72,145,67,153,71,132,45,70,265)),new P(e.BUNNELBY,6,!1,!1,!1,"Digging Pokémon",i.NORMAL,null,.4,5,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,237,38,36,38,32,36,57,255,50,47,G.MEDIUM_FAST,50,!1),new P(e.DIGGERSBY,6,!1,!1,!1,"Digging Pokémon",i.NORMAL,i.GROUND,1,42.4,O.PICKUP,O.CHEEK_POUCH,O.HUGE_POWER,423,85,56,77,50,77,78,127,50,148,G.MEDIUM_FAST,50,!1),new P(e.FLETCHLING,6,!1,!1,!1,"Tiny Robin Pokémon",i.NORMAL,i.FLYING,.3,1.7,O.BIG_PECKS,O.NONE,O.GALE_WINGS,278,45,50,43,40,38,62,255,50,56,G.MEDIUM_SLOW,50,!1),new P(e.FLETCHINDER,6,!1,!1,!1,"Ember Pokémon",i.FIRE,i.FLYING,.7,16,O.FLAME_BODY,O.NONE,O.GALE_WINGS,382,62,73,55,56,52,84,120,50,134,G.MEDIUM_SLOW,50,!1),new P(e.TALONFLAME,6,!1,!1,!1,"Scorching Pokémon",i.FIRE,i.FLYING,1.2,24.5,O.FLAME_BODY,O.NONE,O.GALE_WINGS,499,78,81,71,74,69,126,45,50,175,G.MEDIUM_SLOW,50,!1),new P(e.SCATTERBUG,6,!1,!1,!1,"Scatterdust Pokémon",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,G.MEDIUM_FAST,50,!1,!1,new y("Meadow Pattern","meadow",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Icy Snow Pattern","icy-snow",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Polar Pattern","polar",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Tundra Pattern","tundra",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Continental Pattern","continental",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Garden Pattern","garden",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Elegant Pattern","elegant",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Modern Pattern","modern",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Marine Pattern","marine",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Archipelago Pattern","archipelago",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("High Plains Pattern","high-plains",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Sandstorm Pattern","sandstorm",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("River Pattern","river",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Monsoon Pattern","monsoon",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Savanna Pattern","savanna",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Sun Pattern","sun",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Ocean Pattern","ocean",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Jungle Pattern","jungle",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Fancy Pattern","fancy",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0),new y("Poké Ball Pattern","poke-ball",i.BUG,null,.3,2.5,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,200,38,35,40,27,25,35,255,70,40,!1,"",!0)),new P(e.SPEWPA,6,!1,!1,!1,"Scatterdust Pokémon",i.BUG,null,.3,8.4,O.SHED_SKIN,O.SHED_SKIN,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,G.MEDIUM_FAST,50,!1,!1,new y("Meadow Pattern","meadow",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Icy Snow Pattern","icy-snow",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Polar Pattern","polar",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Tundra Pattern","tundra",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Continental Pattern","continental",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Garden Pattern","garden",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Elegant Pattern","elegant",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Modern Pattern","modern",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Marine Pattern","marine",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Archipelago Pattern","archipelago",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("High Plains Pattern","high-plains",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Sandstorm Pattern","sandstorm",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("River Pattern","river",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Monsoon Pattern","monsoon",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Savanna Pattern","savanna",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Sun Pattern","sun",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Ocean Pattern","ocean",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Jungle Pattern","jungle",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Fancy Pattern","fancy",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0),new y("Poké Ball Pattern","poke-ball",i.BUG,null,.3,8.4,O.SHED_SKIN,O.NONE,O.FRIEND_GUARD,213,45,22,60,27,30,29,120,70,75,!1,"",!0)),new P(e.VIVILLON,6,!1,!1,!1,"Scale Pokémon",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,G.MEDIUM_FAST,50,!1,!1,new y("Meadow Pattern","meadow",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Icy Snow Pattern","icy-snow",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Polar Pattern","polar",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Tundra Pattern","tundra",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Continental Pattern","continental",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Garden Pattern","garden",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Elegant Pattern","elegant",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Modern Pattern","modern",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Marine Pattern","marine",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Archipelago Pattern","archipelago",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("High Plains Pattern","high-plains",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Sandstorm Pattern","sandstorm",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("River Pattern","river",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Monsoon Pattern","monsoon",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Savanna Pattern","savanna",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Sun Pattern","sun",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Ocean Pattern","ocean",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Jungle Pattern","jungle",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Fancy Pattern","fancy",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0),new y("Poké Ball Pattern","poke-ball",i.BUG,i.FLYING,1.2,17,O.SHIELD_DUST,O.COMPOUND_EYES,O.FRIEND_GUARD,411,80,52,50,90,50,89,45,70,206,!1,null,!0)),new P(e.LITLEO,6,!1,!1,!1,"Lion Cub Pokémon",i.FIRE,i.NORMAL,.6,13.5,O.RIVALRY,O.UNNERVE,O.MOXIE,369,62,50,58,73,54,72,220,70,74,G.MEDIUM_SLOW,12.5,!1),new P(e.PYROAR,6,!1,!1,!1,"Royal Pokémon",i.FIRE,i.NORMAL,1.5,81.5,O.RIVALRY,O.UNNERVE,O.MOXIE,507,86,68,72,109,66,106,65,70,177,G.MEDIUM_SLOW,12.5,!0),new P(e.FLABEBE,6,!1,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,G.MEDIUM_FAST,0,!1,!1,new y("Red Flower","red",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new y("Yellow Flower","yellow",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new y("Orange Flower","orange",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new y("Blue Flower","blue",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0),new y("White Flower","white",i.FAIRY,null,.1,.1,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,303,44,38,39,61,79,42,225,70,61,!1,null,!0)),new P(e.FLOETTE,6,!1,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,G.MEDIUM_FAST,0,!1,!1,new y("Red Flower","red",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new y("Yellow Flower","yellow",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new y("Orange Flower","orange",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new y("Blue Flower","blue",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0),new y("White Flower","white",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,371,54,45,47,75,98,52,120,70,130,!1,null,!0)),new P(e.FLORGES,6,!1,!1,!1,"Garden Pokémon",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,G.MEDIUM_FAST,0,!1,!1,new y("Red Flower","red",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new y("Yellow Flower","yellow",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new y("Orange Flower","orange",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new y("Blue Flower","blue",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0),new y("White Flower","white",i.FAIRY,null,1.1,10,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,552,78,65,68,112,154,75,45,70,276,!1,null,!0)),new P(e.SKIDDO,6,!1,!1,!1,"Mount Pokémon",i.GRASS,null,.9,31,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,350,66,65,48,62,57,52,200,70,70,G.MEDIUM_FAST,50,!1),new P(e.GOGOAT,6,!1,!1,!1,"Mount Pokémon",i.GRASS,null,1.7,91,O.SAP_SIPPER,O.NONE,O.GRASS_PELT,531,123,100,62,97,81,68,45,70,186,G.MEDIUM_FAST,50,!1),new P(e.PANCHAM,6,!1,!1,!1,"Playful Pokémon",i.FIGHTING,null,.6,8,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,348,67,82,62,46,48,43,220,50,70,G.MEDIUM_FAST,50,!1),new P(e.PANGORO,6,!1,!1,!1,"Daunting Pokémon",i.FIGHTING,i.DARK,2.1,136,O.IRON_FIST,O.MOLD_BREAKER,O.SCRAPPY,495,95,124,78,69,71,58,65,50,173,G.MEDIUM_FAST,50,!1),new P(e.FURFROU,6,!1,!1,!1,"Poodle Pokémon",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,G.MEDIUM_FAST,50,!1,!0,new y("Natural Form","",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Heart Trim","heart",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Star Trim","star",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Diamond Trim","diamond",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Debutante Trim","debutante",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Matron Trim","matron",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Dandy Trim","dandy",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("La Reine Trim","la-reine",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Kabuki Trim","kabuki",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0),new y("Pharaoh Trim","pharaoh",i.NORMAL,null,1.2,28,O.FUR_COAT,O.NONE,O.NONE,472,75,80,60,65,90,102,160,70,165,!1,null,!0)),new P(e.ESPURR,6,!1,!1,!1,"Restraint Pokémon",i.PSYCHIC,null,.3,3.5,O.KEEN_EYE,O.INFILTRATOR,O.OWN_TEMPO,355,62,48,54,63,60,68,190,50,71,G.MEDIUM_FAST,50,!1),new P(e.MEOWSTIC,6,!1,!1,!1,"Constraint Pokémon",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,G.MEDIUM_FAST,50,!1,!1,new y("Male","male",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.PRANKSTER,466,74,48,76,83,81,104,75,50,163,!1,"",!0),new y("Female","female",i.PSYCHIC,null,.6,8.5,O.KEEN_EYE,O.INFILTRATOR,O.COMPETITIVE,466,74,48,76,83,81,104,75,50,163,!1,null,!0)),new P(e.HONEDGE,6,!1,!1,!1,"Sword Pokémon",i.STEEL,i.GHOST,.8,2,O.NO_GUARD,O.NONE,O.NONE,325,45,80,100,35,37,28,180,50,65,G.MEDIUM_FAST,50,!1),new P(e.DOUBLADE,6,!1,!1,!1,"Sword Pokémon",i.STEEL,i.GHOST,.8,4.5,O.NO_GUARD,O.NONE,O.NONE,448,59,110,150,45,49,35,90,50,157,G.MEDIUM_FAST,50,!1),new P(e.AEGISLASH,6,!1,!1,!1,"Royal Sword Pokémon",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,G.MEDIUM_FAST,50,!1,!0,new y("Shield Forme","shield",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,50,140,50,140,60,45,50,250,!1,"",!0),new y("Blade Forme","blade",i.STEEL,i.GHOST,1.7,53,O.STANCE_CHANGE,O.NONE,O.NONE,500,60,140,50,140,50,60,45,50,250)),new P(e.SPRITZEE,6,!1,!1,!1,"Perfume Pokémon",i.FAIRY,null,.2,.5,O.HEALER,O.NONE,O.AROMA_VEIL,341,78,52,60,63,65,23,200,50,68,G.MEDIUM_FAST,50,!1),new P(e.AROMATISSE,6,!1,!1,!1,"Fragrance Pokémon",i.FAIRY,null,.8,15.5,O.HEALER,O.NONE,O.AROMA_VEIL,462,101,72,72,99,89,29,140,50,162,G.MEDIUM_FAST,50,!1),new P(e.SWIRLIX,6,!1,!1,!1,"Cotton Candy Pokémon",i.FAIRY,null,.4,3.5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,341,62,48,66,59,57,49,200,50,68,G.MEDIUM_FAST,50,!1),new P(e.SLURPUFF,6,!1,!1,!1,"Meringue Pokémon",i.FAIRY,null,.8,5,O.SWEET_VEIL,O.NONE,O.UNBURDEN,480,82,80,86,85,75,72,140,50,168,G.MEDIUM_FAST,50,!1),new P(e.INKAY,6,!1,!1,!1,"Revolving Pokémon",i.DARK,i.PSYCHIC,.4,3.5,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,288,53,54,53,37,46,45,190,50,58,G.MEDIUM_FAST,50,!1),new P(e.MALAMAR,6,!1,!1,!1,"Overturning Pokémon",i.DARK,i.PSYCHIC,1.5,47,O.CONTRARY,O.SUCTION_CUPS,O.INFILTRATOR,482,86,92,88,68,75,73,80,50,169,G.MEDIUM_FAST,50,!1),new P(e.BINACLE,6,!1,!1,!1,"Two-Handed Pokémon",i.ROCK,i.WATER,.5,31,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,306,42,52,67,39,56,50,120,50,61,G.MEDIUM_FAST,50,!1),new P(e.BARBARACLE,6,!1,!1,!1,"Collective Pokémon",i.ROCK,i.WATER,1.3,96,O.TOUGH_CLAWS,O.SNIPER,O.PICKPOCKET,500,72,105,115,54,86,68,45,50,175,G.MEDIUM_FAST,50,!1),new P(e.SKRELP,6,!1,!1,!1,"Mock Kelp Pokémon",i.POISON,i.WATER,.5,7.3,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,320,50,60,60,60,60,30,225,50,64,G.MEDIUM_FAST,50,!1),new P(e.DRAGALGE,6,!1,!1,!1,"Mock Kelp Pokémon",i.POISON,i.DRAGON,1.8,81.5,O.POISON_POINT,O.POISON_TOUCH,O.ADAPTABILITY,494,65,75,90,97,123,44,55,50,173,G.MEDIUM_FAST,50,!1),new P(e.CLAUNCHER,6,!1,!1,!1,"Water Gun Pokémon",i.WATER,null,.5,8.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,330,50,53,62,58,63,44,225,50,66,G.SLOW,50,!1),new P(e.CLAWITZER,6,!1,!1,!1,"Howitzer Pokémon",i.WATER,null,1.3,35.3,O.MEGA_LAUNCHER,O.NONE,O.NONE,500,71,73,88,120,89,59,55,50,100,G.SLOW,50,!1),new P(e.HELIOPTILE,6,!1,!1,!1,"Generator Pokémon",i.ELECTRIC,i.NORMAL,.5,6,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,289,44,38,33,61,43,70,190,50,58,G.MEDIUM_FAST,50,!1),new P(e.HELIOLISK,6,!1,!1,!1,"Generator Pokémon",i.ELECTRIC,i.NORMAL,1,21,O.DRY_SKIN,O.SAND_VEIL,O.SOLAR_POWER,481,62,55,52,109,94,109,75,50,168,G.MEDIUM_FAST,50,!1),new P(e.TYRUNT,6,!1,!1,!1,"Royal Heir Pokémon",i.ROCK,i.DRAGON,.8,26,O.STRONG_JAW,O.NONE,O.STURDY,362,58,89,77,45,45,48,45,50,72,G.MEDIUM_FAST,87.5,!1),new P(e.TYRANTRUM,6,!1,!1,!1,"Despot Pokémon",i.ROCK,i.DRAGON,2.5,270,O.STRONG_JAW,O.NONE,O.ROCK_HEAD,521,82,121,119,69,59,71,45,50,182,G.MEDIUM_FAST,87.5,!1),new P(e.AMAURA,6,!1,!1,!1,"Tundra Pokémon",i.ROCK,i.ICE,1.3,25.2,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,362,77,59,50,67,63,46,45,50,72,G.MEDIUM_FAST,87.5,!1),new P(e.AURORUS,6,!1,!1,!1,"Tundra Pokémon",i.ROCK,i.ICE,2.7,225,O.REFRIGERATE,O.NONE,O.SNOW_WARNING,521,123,77,72,99,92,58,45,50,104,G.MEDIUM_FAST,87.5,!1),new P(e.SYLVEON,6,!1,!1,!1,"Intertwining Pokémon",i.FAIRY,null,1,23.5,O.CUTE_CHARM,O.NONE,O.PIXILATE,525,95,65,65,110,130,60,45,50,184,G.MEDIUM_FAST,87.5,!1),new P(e.HAWLUCHA,6,!1,!1,!1,"Wrestling Pokémon",i.FIGHTING,i.FLYING,.8,21.5,O.LIMBER,O.UNBURDEN,O.MOLD_BREAKER,500,78,92,75,74,63,118,100,50,175,G.MEDIUM_FAST,50,!1),new P(e.DEDENNE,6,!1,!1,!1,"Antenna Pokémon",i.ELECTRIC,i.FAIRY,.2,2.2,O.CHEEK_POUCH,O.PICKUP,O.PLUS,431,67,58,57,81,67,101,180,50,151,G.MEDIUM_FAST,50,!1),new P(e.CARBINK,6,!1,!1,!1,"Jewel Pokémon",i.ROCK,i.FAIRY,.3,5.7,O.CLEAR_BODY,O.NONE,O.STURDY,500,50,50,150,50,150,50,60,50,100,G.SLOW,null,!1),new P(e.GOOMY,6,!1,!1,!1,"Soft Tissue Pokémon",i.DRAGON,null,.3,2.8,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,300,45,50,35,55,75,40,45,35,60,G.SLOW,50,!1),new P(e.SLIGGOO,6,!1,!1,!1,"Soft Tissue Pokémon",i.DRAGON,null,.8,17.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,452,68,75,53,83,113,60,45,35,158,G.SLOW,50,!1),new P(e.GOODRA,6,!1,!1,!1,"Dragon Pokémon",i.DRAGON,null,2,150.5,O.SAP_SIPPER,O.HYDRATION,O.GOOEY,600,90,100,70,110,150,80,45,35,300,G.SLOW,50,!1),new P(e.KLEFKI,6,!1,!1,!1,"Key Ring Pokémon",i.STEEL,i.FAIRY,.2,3,O.PRANKSTER,O.NONE,O.MAGICIAN,470,57,80,91,80,87,75,75,50,165,G.FAST,50,!1),new P(e.PHANTUMP,6,!1,!1,!1,"Stump Pokémon",i.GHOST,i.GRASS,.4,7,O.NATURAL_CURE,O.FRISK,O.HARVEST,309,43,70,48,50,60,38,120,50,62,G.MEDIUM_FAST,50,!1),new P(e.TREVENANT,6,!1,!1,!1,"Elder Tree Pokémon",i.GHOST,i.GRASS,1.5,71,O.NATURAL_CURE,O.FRISK,O.HARVEST,474,85,110,76,65,82,56,60,50,166,G.MEDIUM_FAST,50,!1),new P(e.PUMPKABOO,6,!1,!1,!1,"Pumpkin Pokémon",i.GHOST,i.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,G.MEDIUM_FAST,50,!1,!1,new y("Average Size","",i.GHOST,i.GRASS,.4,5,O.PICKUP,O.FRISK,O.INSOMNIA,335,49,66,70,44,55,51,120,50,67,!1,null,!0),new y("Small Size","small",i.GHOST,i.GRASS,.3,3.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,44,66,70,44,55,56,120,50,67,!1,"",!0),new y("Large Size","large",i.GHOST,i.GRASS,.5,7.5,O.PICKUP,O.FRISK,O.INSOMNIA,335,54,66,70,44,55,46,120,50,67,!1,"",!0),new y("Super Size","super",i.GHOST,i.GRASS,.8,15,O.PICKUP,O.FRISK,O.INSOMNIA,335,59,66,70,44,55,41,120,50,67,!1,"",!0)),new P(e.GOURGEIST,6,!1,!1,!1,"Pumpkin Pokémon",i.GHOST,i.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,G.MEDIUM_FAST,50,!1,!1,new y("Average Size","",i.GHOST,i.GRASS,.9,12.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,65,90,122,58,75,84,60,50,173,!1,null,!0),new y("Small Size","small",i.GHOST,i.GRASS,.7,9.5,O.PICKUP,O.FRISK,O.INSOMNIA,494,55,85,122,58,75,99,60,50,173,!1,"",!0),new y("Large Size","large",i.GHOST,i.GRASS,1.1,14,O.PICKUP,O.FRISK,O.INSOMNIA,494,75,95,122,58,75,69,60,50,173,!1,"",!0),new y("Super Size","super",i.GHOST,i.GRASS,1.7,39,O.PICKUP,O.FRISK,O.INSOMNIA,494,85,100,122,58,75,54,60,50,173,!1,"",!0)),new P(e.BERGMITE,6,!1,!1,!1,"Ice Chunk Pokémon",i.ICE,null,1,99.5,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,304,55,69,85,32,35,28,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.AVALUGG,6,!1,!1,!1,"Iceberg Pokémon",i.ICE,null,2,505,O.OWN_TEMPO,O.ICE_BODY,O.STURDY,514,95,117,184,44,46,28,55,50,180,G.MEDIUM_FAST,50,!1),new P(e.NOIBAT,6,!1,!1,!1,"Sound Wave Pokémon",i.FLYING,i.DRAGON,.5,8,O.FRISK,O.INFILTRATOR,O.TELEPATHY,245,40,30,35,45,40,55,190,50,49,G.MEDIUM_FAST,50,!1),new P(e.NOIVERN,6,!1,!1,!1,"Sound Wave Pokémon",i.FLYING,i.DRAGON,1.5,85,O.FRISK,O.INFILTRATOR,O.TELEPATHY,535,85,70,80,97,80,123,45,50,187,G.MEDIUM_FAST,50,!1),new P(e.XERNEAS,6,!1,!0,!1,"Life Pokémon",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,G.SLOW,null,!1,!0,new y("Neutral Mode","neutral",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,!1,null,!0),new y("Active Mode","active",i.FAIRY,null,3,215,O.FAIRY_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340)),new P(e.YVELTAL,6,!1,!0,!1,"Destruction Pokémon",i.DARK,i.FLYING,5.8,203,O.DARK_AURA,O.NONE,O.NONE,680,126,131,95,131,98,99,45,0,340,G.SLOW,null,!1),new P(e.ZYGARDE,6,!1,!0,!1,"Order Pokémon",i.DRAGON,i.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,G.SLOW,null,!1,!1,new y("50% Forme","50",i.DRAGON,i.GROUND,5,305,O.AURA_BREAK,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new y("10% Forme","10",i.DRAGON,i.GROUND,1.2,33.5,O.AURA_BREAK,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,null,!0),new y("50% Forme Power Construct","50-pc",i.DRAGON,i.GROUND,5,305,O.POWER_CONSTRUCT,O.NONE,O.NONE,600,108,100,121,81,95,95,3,0,300,!1,"",!0),new y("10% Forme Power Construct","10-pc",i.DRAGON,i.GROUND,1.2,33.5,O.POWER_CONSTRUCT,O.NONE,O.NONE,486,54,100,71,61,85,115,3,0,243,!1,"10",!0),new y("Complete Forme (50% PC)","complete",i.DRAGON,i.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354),new y("Complete Forme (10% PC)","10-complete",i.DRAGON,i.GROUND,4.5,610,O.POWER_CONSTRUCT,O.NONE,O.NONE,708,216,100,121,91,95,85,3,0,354,!1,"complete")),new P(e.DIANCIE,6,!1,!1,!0,"Jewel Pokémon",i.ROCK,i.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,G.SLOW,null,!1,!0,new y("Normal","",i.ROCK,i.FAIRY,.7,8.8,O.CLEAR_BODY,O.NONE,O.NONE,600,50,100,150,100,150,50,3,50,300,!1,null,!0),new y("Mega",Me.MEGA,i.ROCK,i.FAIRY,1.1,27.8,O.MAGIC_BOUNCE,O.NONE,O.NONE,700,50,160,110,160,110,110,3,50,300)),new P(e.HOOPA,6,!1,!1,!0,"Mischief Pokémon",i.PSYCHIC,i.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,G.SLOW,null,!1,!1,new y("Hoopa Confined","",i.PSYCHIC,i.GHOST,.5,9,O.MAGICIAN,O.NONE,O.NONE,600,80,110,60,150,130,70,3,100,300,!1,null,!0),new y("Hoopa Unbound","unbound",i.PSYCHIC,i.DARK,6.5,490,O.MAGICIAN,O.NONE,O.NONE,680,80,160,60,170,130,80,3,100,340)),new P(e.VOLCANION,6,!1,!1,!0,"Steam Pokémon",i.FIRE,i.WATER,1.7,195,O.WATER_ABSORB,O.NONE,O.NONE,600,80,110,120,130,90,70,3,100,300,G.SLOW,null,!1),new P(e.ROWLET,7,!1,!1,!1,"Grass Quill Pokémon",i.GRASS,i.FLYING,.3,1.5,O.OVERGROW,O.NONE,O.LONG_REACH,320,68,55,55,50,50,42,45,50,64,G.MEDIUM_SLOW,87.5,!1),new P(e.DARTRIX,7,!1,!1,!1,"Blade Quill Pokémon",i.GRASS,i.FLYING,.7,16,O.OVERGROW,O.NONE,O.LONG_REACH,420,78,75,75,70,70,52,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.DECIDUEYE,7,!1,!1,!1,"Arrow Quill Pokémon",i.GRASS,i.GHOST,1.6,36.6,O.OVERGROW,O.NONE,O.LONG_REACH,530,78,107,75,100,100,70,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.LITTEN,7,!1,!1,!1,"Fire Cat Pokémon",i.FIRE,null,.4,4.3,O.BLAZE,O.NONE,O.INTIMIDATE,320,45,65,40,60,40,70,45,50,64,G.MEDIUM_SLOW,87.5,!1),new P(e.TORRACAT,7,!1,!1,!1,"Fire Cat Pokémon",i.FIRE,null,.7,25,O.BLAZE,O.NONE,O.INTIMIDATE,420,65,85,50,80,50,90,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.INCINEROAR,7,!1,!1,!1,"Heel Pokémon",i.FIRE,i.DARK,1.8,83,O.BLAZE,O.NONE,O.INTIMIDATE,530,95,115,90,80,90,60,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.POPPLIO,7,!1,!1,!1,"Sea Lion Pokémon",i.WATER,null,.4,7.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,320,50,54,54,66,56,40,45,50,64,G.MEDIUM_SLOW,87.5,!1),new P(e.BRIONNE,7,!1,!1,!1,"Pop Star Pokémon",i.WATER,null,.6,17.5,O.TORRENT,O.NONE,O.LIQUID_VOICE,420,60,69,69,91,81,50,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.PRIMARINA,7,!1,!1,!1,"Soloist Pokémon",i.WATER,i.FAIRY,1.8,44,O.TORRENT,O.NONE,O.LIQUID_VOICE,530,80,74,74,126,116,60,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.PIKIPEK,7,!1,!1,!1,"Woodpecker Pokémon",i.NORMAL,i.FLYING,.3,1.2,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,265,35,75,30,30,30,65,255,70,53,G.MEDIUM_FAST,50,!1),new P(e.TRUMBEAK,7,!1,!1,!1,"Bugle Beak Pokémon",i.NORMAL,i.FLYING,.6,14.8,O.KEEN_EYE,O.SKILL_LINK,O.PICKUP,355,55,85,50,40,50,75,120,70,124,G.MEDIUM_FAST,50,!1),new P(e.TOUCANNON,7,!1,!1,!1,"Cannon Pokémon",i.NORMAL,i.FLYING,1.1,26,O.KEEN_EYE,O.SKILL_LINK,O.SHEER_FORCE,485,80,120,75,75,75,60,45,70,243,G.MEDIUM_FAST,50,!1),new P(e.YUNGOOS,7,!1,!1,!1,"Loitering Pokémon",i.NORMAL,null,.4,6,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,253,48,70,30,30,30,45,255,70,51,G.MEDIUM_FAST,50,!1),new P(e.GUMSHOOS,7,!1,!1,!1,"Stakeout Pokémon",i.NORMAL,null,.7,14.2,O.STAKEOUT,O.STRONG_JAW,O.ADAPTABILITY,418,88,110,60,55,60,45,127,70,146,G.MEDIUM_FAST,50,!1),new P(e.GRUBBIN,7,!1,!1,!1,"Larva Pokémon",i.BUG,null,.4,4.4,O.SWARM,O.NONE,O.NONE,300,47,62,45,55,45,46,255,50,60,G.MEDIUM_FAST,50,!1),new P(e.CHARJABUG,7,!1,!1,!1,"Battery Pokémon",i.BUG,i.ELECTRIC,.5,10.5,O.BATTERY,O.NONE,O.NONE,400,57,82,95,55,75,36,120,50,140,G.MEDIUM_FAST,50,!1),new P(e.VIKAVOLT,7,!1,!1,!1,"Stag Beetle Pokémon",i.BUG,i.ELECTRIC,1.5,45,O.LEVITATE,O.NONE,O.NONE,500,77,70,90,145,75,43,45,50,250,G.MEDIUM_FAST,50,!1),new P(e.CRABRAWLER,7,!1,!1,!1,"Boxing Pokémon",i.FIGHTING,null,.6,7,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,338,47,82,57,42,47,63,225,70,68,G.MEDIUM_FAST,50,!1),new P(e.CRABOMINABLE,7,!1,!1,!1,"Woolly Crab Pokémon",i.FIGHTING,i.ICE,1.7,180,O.HYPER_CUTTER,O.IRON_FIST,O.ANGER_POINT,478,97,132,77,62,67,43,60,70,167,G.MEDIUM_FAST,50,!1),new P(e.ORICORIO,7,!1,!1,!1,"Dancing Pokémon",i.FIRE,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,G.MEDIUM_FAST,25,!1,!1,new y("Baile Style","baile",i.FIRE,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,"",!0),new y("Pom-Pom Style","pompom",i.ELECTRIC,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new y("Pau Style","pau",i.PSYCHIC,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0),new y("Sensu Style","sensu",i.GHOST,i.FLYING,.6,3.4,O.DANCER,O.NONE,O.NONE,476,75,70,70,98,70,93,45,70,167,!1,null,!0)),new P(e.CUTIEFLY,7,!1,!1,!1,"Bee Fly Pokémon",i.BUG,i.FAIRY,.1,.2,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,304,40,45,40,55,40,84,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.RIBOMBEE,7,!1,!1,!1,"Bee Fly Pokémon",i.BUG,i.FAIRY,.2,.5,O.HONEY_GATHER,O.SHIELD_DUST,O.SWEET_VEIL,464,60,55,60,95,70,124,75,50,162,G.MEDIUM_FAST,50,!1),new P(e.ROCKRUFF,7,!1,!1,!1,"Puppy Pokémon",i.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,G.MEDIUM_FAST,50,!1,!1,new y("Normal","",i.ROCK,null,.5,9.2,O.KEEN_EYE,O.VITAL_SPIRIT,O.STEADFAST,280,45,65,40,30,40,60,190,50,56,!1,null,!0),new y("Own Tempo","own-tempo",i.ROCK,null,.5,9.2,O.OWN_TEMPO,O.NONE,O.OWN_TEMPO,280,45,65,40,30,40,60,190,50,56,!1,"",!0)),new P(e.LYCANROC,7,!1,!1,!1,"Wolf Pokémon",i.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,G.MEDIUM_FAST,50,!1,!1,new y("Midday Form","midday",i.ROCK,null,.8,25,O.KEEN_EYE,O.SAND_RUSH,O.STEADFAST,487,75,115,65,55,65,112,90,50,170,!1,"",!0),new y("Midnight Form","midnight",i.ROCK,null,1.1,25,O.KEEN_EYE,O.VITAL_SPIRIT,O.NO_GUARD,487,85,115,75,55,75,82,90,50,170,!1,null,!0),new y("Dusk Form","dusk",i.ROCK,null,.8,25,O.TOUGH_CLAWS,O.TOUGH_CLAWS,O.TOUGH_CLAWS,487,75,117,65,55,65,110,90,50,170,!1,null,!0)),new P(e.WISHIWASHI,7,!1,!1,!1,"Small Fry Pokémon",i.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,G.FAST,50,!1,!1,new y("Solo Form","",i.WATER,null,.2,.3,O.SCHOOLING,O.NONE,O.NONE,175,45,20,20,25,25,40,60,50,61,!1,null,!0),new y("School","school",i.WATER,null,8.2,78.6,O.SCHOOLING,O.NONE,O.NONE,620,45,140,130,140,135,30,60,50,217)),new P(e.MAREANIE,7,!1,!1,!1,"Brutal Star Pokémon",i.POISON,i.WATER,.4,8,O.MERCILESS,O.LIMBER,O.REGENERATOR,305,50,53,62,43,52,45,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.TOXAPEX,7,!1,!1,!1,"Brutal Star Pokémon",i.POISON,i.WATER,.7,14.5,O.MERCILESS,O.LIMBER,O.REGENERATOR,495,50,63,152,53,142,35,75,50,173,G.MEDIUM_FAST,50,!1),new P(e.MUDBRAY,7,!1,!1,!1,"Donkey Pokémon",i.GROUND,null,1,110,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,385,70,100,70,45,55,45,190,50,77,G.MEDIUM_FAST,50,!1),new P(e.MUDSDALE,7,!1,!1,!1,"Draft Horse Pokémon",i.GROUND,null,2.5,920,O.OWN_TEMPO,O.STAMINA,O.INNER_FOCUS,500,100,125,100,55,85,35,60,50,175,G.MEDIUM_FAST,50,!1),new P(e.DEWPIDER,7,!1,!1,!1,"Water Bubble Pokémon",i.WATER,i.BUG,.3,4,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,269,38,40,52,40,72,27,200,50,54,G.MEDIUM_FAST,50,!1),new P(e.ARAQUANID,7,!1,!1,!1,"Water Bubble Pokémon",i.WATER,i.BUG,1.8,82,O.WATER_BUBBLE,O.NONE,O.WATER_ABSORB,454,68,70,92,50,132,42,100,50,159,G.MEDIUM_FAST,50,!1),new P(e.FOMANTIS,7,!1,!1,!1,"Sickle Grass Pokémon",i.GRASS,null,.3,1.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,250,40,55,35,50,35,35,190,50,50,G.MEDIUM_FAST,50,!1),new P(e.LURANTIS,7,!1,!1,!1,"Bloom Sickle Pokémon",i.GRASS,null,.9,18.5,O.LEAF_GUARD,O.NONE,O.CONTRARY,480,70,105,90,80,90,45,75,50,168,G.MEDIUM_FAST,50,!1),new P(e.MORELULL,7,!1,!1,!1,"Illuminating Pokémon",i.GRASS,i.FAIRY,.2,1.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,285,40,35,55,65,75,15,190,50,57,G.MEDIUM_FAST,50,!1),new P(e.SHIINOTIC,7,!1,!1,!1,"Illuminating Pokémon",i.GRASS,i.FAIRY,1,11.5,O.ILLUMINATE,O.EFFECT_SPORE,O.RAIN_DISH,405,60,45,80,90,100,30,75,50,142,G.MEDIUM_FAST,50,!1),new P(e.SALANDIT,7,!1,!1,!1,"Toxic Lizard Pokémon",i.POISON,i.FIRE,.6,4.8,O.CORROSION,O.NONE,O.OBLIVIOUS,320,48,44,40,71,40,77,120,50,64,G.MEDIUM_FAST,87.5,!1),new P(e.SALAZZLE,7,!1,!1,!1,"Toxic Lizard Pokémon",i.POISON,i.FIRE,1.2,22.2,O.CORROSION,O.NONE,O.OBLIVIOUS,480,68,64,60,111,60,117,45,50,168,G.MEDIUM_FAST,0,!1),new P(e.STUFFUL,7,!1,!1,!1,"Flailing Pokémon",i.NORMAL,i.FIGHTING,.5,6.8,O.FLUFFY,O.KLUTZ,O.CUTE_CHARM,340,70,75,50,45,50,50,140,50,68,G.MEDIUM_FAST,50,!1),new P(e.BEWEAR,7,!1,!1,!1,"Strong Arm Pokémon",i.NORMAL,i.FIGHTING,2.1,135,O.FLUFFY,O.KLUTZ,O.UNNERVE,500,120,125,80,55,60,60,70,50,175,G.MEDIUM_FAST,50,!1),new P(e.BOUNSWEET,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,.3,3.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,210,42,30,38,30,38,32,235,50,42,G.MEDIUM_SLOW,0,!1),new P(e.STEENEE,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,.7,8.2,O.LEAF_GUARD,O.OBLIVIOUS,O.SWEET_VEIL,290,52,40,48,40,48,62,120,50,102,G.MEDIUM_SLOW,0,!1),new P(e.TSAREENA,7,!1,!1,!1,"Fruit Pokémon",i.GRASS,null,1.2,21.4,O.LEAF_GUARD,O.QUEENLY_MAJESTY,O.SWEET_VEIL,510,72,120,98,50,98,72,45,50,255,G.MEDIUM_SLOW,0,!1),new P(e.COMFEY,7,!1,!1,!1,"Posy Picker Pokémon",i.FAIRY,null,.1,.3,O.FLOWER_VEIL,O.TRIAGE,O.NATURAL_CURE,485,51,52,90,82,110,100,60,50,170,G.FAST,25,!1),new P(e.ORANGURU,7,!1,!1,!1,"Sage Pokémon",i.NORMAL,i.PSYCHIC,1.5,76,O.INNER_FOCUS,O.TELEPATHY,O.SYMBIOSIS,490,90,60,80,90,110,60,45,50,172,G.SLOW,50,!1),new P(e.PASSIMIAN,7,!1,!1,!1,"Teamwork Pokémon",i.FIGHTING,null,2,82.8,O.RECEIVER,O.NONE,O.DEFIANT,490,100,120,90,40,60,80,45,50,172,G.SLOW,50,!1),new P(e.WIMPOD,7,!1,!1,!1,"Turn Tail Pokémon",i.BUG,i.WATER,.5,12,O.WIMP_OUT,O.NONE,O.RUN_AWAY,230,25,35,40,20,30,80,90,50,46,G.MEDIUM_FAST,50,!1),new P(e.GOLISOPOD,7,!1,!1,!1,"Hard Scale Pokémon",i.BUG,i.WATER,2,108,O.EMERGENCY_EXIT,O.NONE,O.ANTICIPATION,530,75,125,140,60,90,40,45,50,186,G.MEDIUM_FAST,50,!1),new P(e.SANDYGAST,7,!1,!1,!1,"Sand Heap Pokémon",i.GHOST,i.GROUND,.5,70,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,320,55,55,80,70,45,15,140,50,64,G.MEDIUM_FAST,50,!1),new P(e.PALOSSAND,7,!1,!1,!1,"Sand Castle Pokémon",i.GHOST,i.GROUND,1.3,250,O.WATER_COMPACTION,O.NONE,O.SAND_VEIL,480,85,75,110,100,75,35,60,50,168,G.MEDIUM_FAST,50,!1),new P(e.PYUKUMUKU,7,!1,!1,!1,"Sea Cucumber Pokémon",i.WATER,null,.3,1.2,O.INNARDS_OUT,O.NONE,O.UNAWARE,410,55,60,130,30,130,5,60,50,144,G.FAST,50,!1),new P(e.TYPE_NULL,7,!0,!1,!1,"Synthetic Pokémon",i.NORMAL,null,1.9,120.5,O.BATTLE_ARMOR,O.NONE,O.NONE,534,95,95,95,95,95,59,3,0,107,G.SLOW,null,!1),new P(e.SILVALLY,7,!0,!1,!1,"Synthetic Pokémon",i.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,G.SLOW,null,!1,!1,new y("Type: Normal","normal",i.NORMAL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285,!1,"",!0),new y("Type: Fighting","fighting",i.FIGHTING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Flying","flying",i.FLYING,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Poison","poison",i.POISON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Ground","ground",i.GROUND,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Rock","rock",i.ROCK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Bug","bug",i.BUG,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Ghost","ghost",i.GHOST,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Steel","steel",i.STEEL,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Fire","fire",i.FIRE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Water","water",i.WATER,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Grass","grass",i.GRASS,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Electric","electric",i.ELECTRIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Psychic","psychic",i.PSYCHIC,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Ice","ice",i.ICE,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Dragon","dragon",i.DRAGON,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Dark","dark",i.DARK,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285),new y("Type: Fairy","fairy",i.FAIRY,null,2.3,100.5,O.RKS_SYSTEM,O.NONE,O.NONE,570,95,95,95,95,95,95,3,0,285)),new P(e.MINIOR,7,!1,!1,!1,"Meteor Pokémon",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,G.MEDIUM_SLOW,null,!1,!1,new y("Red Meteor Form","red-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Orange Meteor Form","orange-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Yellow Meteor Form","yellow-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Green Meteor Form","green-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Blue Meteor Form","blue-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Indigo Meteor Form","indigo-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Violet Meteor Form","violet-meteor",i.ROCK,i.FLYING,.3,40,O.SHIELDS_DOWN,O.NONE,O.NONE,440,60,60,100,60,100,60,30,70,154,!1,"",!0),new y("Red Core Form","red",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Orange Core Form","orange",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Yellow Core Form","yellow",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Green Core Form","green",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Blue Core Form","blue",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Indigo Core Form","indigo",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0),new y("Violet Core Form","violet",i.ROCK,i.FLYING,.3,.3,O.SHIELDS_DOWN,O.NONE,O.NONE,500,60,100,60,100,60,120,30,70,175,!1,null,!0)),new P(e.KOMALA,7,!1,!1,!1,"Drowsing Pokémon",i.NORMAL,null,.4,19.9,O.COMATOSE,O.NONE,O.NONE,480,65,115,65,75,95,65,45,70,168,G.SLOW,50,!1),new P(e.TURTONATOR,7,!1,!1,!1,"Blast Turtle Pokémon",i.FIRE,i.DRAGON,2,212,O.SHELL_ARMOR,O.NONE,O.NONE,485,60,78,135,91,85,36,70,50,170,G.MEDIUM_FAST,50,!1),new P(e.TOGEDEMARU,7,!1,!1,!1,"Roly-Poly Pokémon",i.ELECTRIC,i.STEEL,.3,3.3,O.IRON_BARBS,O.LIGHTNING_ROD,O.STURDY,435,65,98,63,40,73,96,180,50,152,G.MEDIUM_FAST,50,!1),new P(e.MIMIKYU,7,!1,!1,!1,"Disguise Pokémon",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,G.MEDIUM_FAST,50,!1,!1,new y("Disguised Form","disguised",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167,!1,null,!0),new y("Busted Form","busted",i.GHOST,i.FAIRY,.2,.7,O.DISGUISE,O.NONE,O.NONE,476,55,90,80,50,105,96,45,50,167)),new P(e.BRUXISH,7,!1,!1,!1,"Gnash Teeth Pokémon",i.WATER,i.PSYCHIC,.9,19,O.DAZZLING,O.STRONG_JAW,O.WONDER_SKIN,475,68,105,70,70,70,92,80,70,166,G.MEDIUM_FAST,50,!1),new P(e.DRAMPA,7,!1,!1,!1,"Placid Pokémon",i.NORMAL,i.DRAGON,3,185,O.BERSERK,O.SAP_SIPPER,O.CLOUD_NINE,485,78,60,85,135,91,36,70,50,170,G.MEDIUM_FAST,50,!1),new P(e.DHELMISE,7,!1,!1,!1,"Sea Creeper Pokémon",i.GHOST,i.GRASS,3.9,210,O.STEELWORKER,O.NONE,O.NONE,517,70,131,100,86,90,40,25,50,181,G.MEDIUM_FAST,null,!1),new P(e.JANGMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,null,.6,29.7,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,300,45,55,65,45,45,45,45,50,60,G.SLOW,50,!1),new P(e.HAKAMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,i.FIGHTING,1.2,47,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,420,55,75,90,65,70,65,45,50,147,G.SLOW,50,!1),new P(e.KOMMO_O,7,!1,!1,!1,"Scaly Pokémon",i.DRAGON,i.FIGHTING,1.6,78.2,O.BULLETPROOF,O.SOUNDPROOF,O.OVERCOAT,600,75,110,125,100,105,85,45,50,300,G.SLOW,50,!1),new P(e.TAPU_KOKO,7,!0,!1,!1,"Land Spirit Pokémon",i.ELECTRIC,i.FAIRY,1.8,20.5,O.ELECTRIC_SURGE,O.NONE,O.TELEPATHY,570,70,115,85,95,75,130,3,50,285,G.SLOW,null,!1),new P(e.TAPU_LELE,7,!0,!1,!1,"Land Spirit Pokémon",i.PSYCHIC,i.FAIRY,1.2,18.6,O.PSYCHIC_SURGE,O.NONE,O.TELEPATHY,570,70,85,75,130,115,95,3,50,285,G.SLOW,null,!1),new P(e.TAPU_BULU,7,!0,!1,!1,"Land Spirit Pokémon",i.GRASS,i.FAIRY,1.9,45.5,O.GRASSY_SURGE,O.NONE,O.TELEPATHY,570,70,130,115,85,95,75,3,50,285,G.SLOW,null,!1),new P(e.TAPU_FINI,7,!0,!1,!1,"Land Spirit Pokémon",i.WATER,i.FAIRY,1.3,21.2,O.MISTY_SURGE,O.NONE,O.TELEPATHY,570,70,75,115,95,130,85,3,50,285,G.SLOW,null,!1),new P(e.COSMOG,7,!0,!1,!1,"Nebula Pokémon",i.PSYCHIC,null,.2,.1,O.UNAWARE,O.NONE,O.NONE,200,43,29,31,29,31,37,45,0,40,G.SLOW,null,!1),new P(e.COSMOEM,7,!0,!1,!1,"Protostar Pokémon",i.PSYCHIC,null,.1,999.9,O.STURDY,O.NONE,O.NONE,400,43,29,131,29,131,37,45,0,140,G.SLOW,null,!1),new P(e.SOLGALEO,7,!1,!0,!1,"Sunne Pokémon",i.PSYCHIC,i.STEEL,3.4,230,O.FULL_METAL_BODY,O.NONE,O.NONE,680,137,137,107,113,89,97,45,0,340,G.SLOW,null,!1),new P(e.LUNALA,7,!1,!0,!1,"Moone Pokémon",i.PSYCHIC,i.GHOST,4,120,O.SHADOW_SHIELD,O.NONE,O.NONE,680,137,113,89,137,107,97,45,0,340,G.SLOW,null,!1),new P(e.NIHILEGO,7,!0,!1,!1,"Parasite Pokémon",i.ROCK,i.POISON,1.2,55.5,O.BEAST_BOOST,O.NONE,O.NONE,570,109,53,47,127,131,103,45,0,285,G.SLOW,null,!1),new P(e.BUZZWOLE,7,!0,!1,!1,"Swollen Pokémon",i.BUG,i.FIGHTING,2.4,333.6,O.BEAST_BOOST,O.NONE,O.NONE,570,107,139,139,53,53,79,45,0,285,G.SLOW,null,!1),new P(e.PHEROMOSA,7,!0,!1,!1,"Lissome Pokémon",i.BUG,i.FIGHTING,1.8,25,O.BEAST_BOOST,O.NONE,O.NONE,570,71,137,37,137,37,151,45,0,285,G.SLOW,null,!1),new P(e.XURKITREE,7,!0,!1,!1,"Glowing Pokémon",i.ELECTRIC,null,3.8,100,O.BEAST_BOOST,O.NONE,O.NONE,570,83,89,71,173,71,83,45,0,285,G.SLOW,null,!1),new P(e.CELESTEELA,7,!0,!1,!1,"Launch Pokémon",i.STEEL,i.FLYING,9.2,999.9,O.BEAST_BOOST,O.NONE,O.NONE,570,97,101,103,107,101,61,45,0,285,G.SLOW,null,!1),new P(e.KARTANA,7,!0,!1,!1,"Drawn Sword Pokémon",i.GRASS,i.STEEL,.3,.1,O.BEAST_BOOST,O.NONE,O.NONE,570,59,181,131,59,31,109,45,0,285,G.SLOW,null,!1),new P(e.GUZZLORD,7,!0,!1,!1,"Junkivore Pokémon",i.DARK,i.DRAGON,5.5,888,O.BEAST_BOOST,O.NONE,O.NONE,570,223,101,53,97,53,43,45,0,285,G.SLOW,null,!1),new P(e.NECROZMA,7,!1,!0,!1,"Prism Pokémon",i.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,G.SLOW,null,!1,!1,new y("Normal","",i.PSYCHIC,null,2.4,230,O.PRISM_ARMOR,O.NONE,O.NONE,600,97,107,101,127,89,79,255,0,300,!1,null,!0),new y("Dusk Mane","dusk-mane",i.PSYCHIC,i.STEEL,3.8,460,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,157,127,113,109,77,255,0,340),new y("Dawn Wings","dawn-wings",i.PSYCHIC,i.GHOST,4.2,350,O.PRISM_ARMOR,O.NONE,O.NONE,680,97,113,109,157,127,77,255,0,340),new y("Ultra","ultra",i.PSYCHIC,i.DRAGON,7.5,230,O.NEUROFORCE,O.NONE,O.NONE,754,97,167,97,167,97,129,255,0,377)),new P(e.MAGEARNA,7,!1,!1,!0,"Artificial Pokémon",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,G.SLOW,null,!1,!1,new y("Normal","",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0),new y("Original","original",i.STEEL,i.FAIRY,1,80.5,O.SOUL_HEART,O.NONE,O.NONE,600,80,95,115,130,115,65,3,0,300,!1,null,!0)),new P(e.MARSHADOW,7,!1,!1,!0,"Gloomdweller Pokémon",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,G.SLOW,null,!1,!0,new y("Normal","",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!0),new y("Zenith","zenith",i.FIGHTING,i.GHOST,.7,22.2,O.TECHNICIAN,O.NONE,O.NONE,600,90,125,80,90,90,125,3,0,300,!1,null,!1,!0)),new P(e.POIPOLE,7,!0,!1,!1,"Poison Pin Pokémon",i.POISON,null,.6,1.8,O.BEAST_BOOST,O.NONE,O.NONE,420,67,73,67,73,67,73,45,0,210,G.SLOW,null,!1),new P(e.NAGANADEL,7,!0,!1,!1,"Poison Pin Pokémon",i.POISON,i.DRAGON,3.6,150,O.BEAST_BOOST,O.NONE,O.NONE,540,73,73,73,127,73,121,45,0,270,G.SLOW,null,!1),new P(e.STAKATAKA,7,!0,!1,!1,"Rampart Pokémon",i.ROCK,i.STEEL,5.5,820,O.BEAST_BOOST,O.NONE,O.NONE,570,61,131,211,53,101,13,30,0,285,G.SLOW,null,!1),new P(e.BLACEPHALON,7,!0,!1,!1,"Fireworks Pokémon",i.FIRE,i.GHOST,1.8,13,O.BEAST_BOOST,O.NONE,O.NONE,570,53,127,53,151,79,107,30,0,285,G.SLOW,null,!1),new P(e.ZERAORA,7,!1,!1,!0,"Thunderclap Pokémon",i.ELECTRIC,null,1.5,44.5,O.VOLT_ABSORB,O.NONE,O.NONE,600,88,112,75,102,80,143,3,0,300,G.SLOW,null,!1),new P(e.MELTAN,7,!1,!1,!0,"Hex Nut Pokémon",i.STEEL,null,.2,8,O.MAGNET_PULL,O.NONE,O.NONE,300,46,65,65,55,35,34,3,0,150,G.SLOW,null,!1),new P(e.MELMETAL,7,!1,!1,!0,"Hex Nut Pokémon",i.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,G.SLOW,null,!1,!0,new y("Normal","",i.STEEL,null,2.5,800,O.IRON_FIST,O.NONE,O.NONE,600,135,143,143,80,65,34,3,0,300,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.STEEL,null,25,999.9,O.IRON_FIST,O.NONE,O.NONE,700,170,158,158,95,75,44,3,0,300)),new P(e.GROOKEY,8,!1,!1,!1,"Chimp Pokémon",i.GRASS,null,.3,5,O.OVERGROW,O.NONE,O.GRASSY_SURGE,310,50,65,50,40,40,65,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.THWACKEY,8,!1,!1,!1,"Beat Pokémon",i.GRASS,null,.7,14,O.OVERGROW,O.NONE,O.GRASSY_SURGE,420,70,85,70,55,60,80,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.RILLABOOM,8,!1,!1,!1,"Drummer Pokémon",i.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.GRASS,null,2.1,90,O.OVERGROW,O.NONE,O.GRASSY_SURGE,530,100,125,90,60,70,85,45,50,265,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.GRASS,null,28,999.9,O.GRASSY_SURGE,O.NONE,O.GRASSY_SURGE,630,125,140,105,90,85,85,45,50,265)),new P(e.SCORBUNNY,8,!1,!1,!1,"Rabbit Pokémon",i.FIRE,null,.3,4.5,O.BLAZE,O.NONE,O.LIBERO,310,50,71,40,40,40,69,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.RABOOT,8,!1,!1,!1,"Rabbit Pokémon",i.FIRE,null,.6,9,O.BLAZE,O.NONE,O.LIBERO,420,65,86,60,55,60,94,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.CINDERACE,8,!1,!1,!1,"Striker Pokémon",i.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.FIRE,null,1.4,33,O.BLAZE,O.NONE,O.LIBERO,530,80,116,75,65,75,119,45,50,265,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.FIRE,null,27,999.9,O.LIBERO,O.NONE,O.LIBERO,630,100,141,80,95,80,134,45,50,265)),new P(e.SOBBLE,8,!1,!1,!1,"Water Lizard Pokémon",i.WATER,null,.3,4,O.TORRENT,O.NONE,O.SNIPER,310,50,40,40,70,40,70,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.DRIZZILE,8,!1,!1,!1,"Water Lizard Pokémon",i.WATER,null,.7,11.5,O.TORRENT,O.NONE,O.SNIPER,420,65,60,55,95,55,90,45,50,147,G.MEDIUM_SLOW,87.5,!1),new P(e.INTELEON,8,!1,!1,!1,"Secret Agent Pokémon",i.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,G.MEDIUM_SLOW,87.5,!1,!0,new y("Normal","",i.WATER,null,1.9,45.2,O.TORRENT,O.NONE,O.SNIPER,530,70,85,65,125,65,120,45,50,265,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.WATER,null,40,999.9,O.SNIPER,O.NONE,O.SNIPER,630,95,117,67,147,67,137,45,50,265)),new P(e.SKWOVET,8,!1,!1,!1,"Cheeky Pokémon",i.NORMAL,null,.3,2.5,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,275,70,55,55,35,35,25,255,50,55,G.MEDIUM_FAST,50,!1),new P(e.GREEDENT,8,!1,!1,!1,"Greedy Pokémon",i.NORMAL,null,.6,6,O.CHEEK_POUCH,O.NONE,O.GLUTTONY,460,120,95,95,55,75,20,90,50,161,G.MEDIUM_FAST,50,!1),new P(e.ROOKIDEE,8,!1,!1,!1,"Tiny Bird Pokémon",i.FLYING,null,.2,1.8,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,245,38,47,35,33,35,57,255,50,49,G.MEDIUM_SLOW,50,!1),new P(e.CORVISQUIRE,8,!1,!1,!1,"Raven Pokémon",i.FLYING,null,.8,16,O.KEEN_EYE,O.UNNERVE,O.BIG_PECKS,365,68,67,55,43,55,77,120,50,128,G.MEDIUM_SLOW,50,!1),new P(e.CORVIKNIGHT,8,!1,!1,!1,"Raven Pokémon",i.FLYING,i.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.FLYING,i.STEEL,2.2,75,O.PRESSURE,O.UNNERVE,O.MIRROR_ARMOR,495,98,87,105,53,85,67,45,50,248,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.FLYING,i.STEEL,14,999.9,O.MIRROR_ARMOR,O.MIRROR_ARMOR,O.MIRROR_ARMOR,595,118,112,135,63,90,77,45,50,248)),new P(e.BLIPBUG,8,!1,!1,!1,"Larva Pokémon",i.BUG,null,.4,8,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,180,25,20,20,25,45,45,255,50,36,G.MEDIUM_FAST,50,!1),new P(e.DOTTLER,8,!1,!1,!1,"Radome Pokémon",i.BUG,i.PSYCHIC,.4,19.5,O.SWARM,O.COMPOUND_EYES,O.TELEPATHY,335,50,35,80,50,90,30,120,50,117,G.MEDIUM_FAST,50,!1),new P(e.ORBEETLE,8,!1,!1,!1,"Seven Spot Pokémon",i.BUG,i.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.BUG,i.PSYCHIC,.4,40.8,O.SWARM,O.FRISK,O.TELEPATHY,505,60,45,110,80,120,90,45,50,253,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.BUG,i.PSYCHIC,14,999.9,O.TRACE,O.TRACE,O.TRACE,605,75,50,140,100,150,90,45,50,253)),new P(e.NICKIT,8,!1,!1,!1,"Fox Pokémon",i.DARK,null,.6,8.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,245,40,28,28,47,52,50,255,50,49,G.FAST,50,!1),new P(e.THIEVUL,8,!1,!1,!1,"Fox Pokémon",i.DARK,null,1.2,19.9,O.RUN_AWAY,O.UNBURDEN,O.STAKEOUT,455,70,58,58,87,92,90,127,50,159,G.FAST,50,!1),new P(e.GOSSIFLEUR,8,!1,!1,!1,"Flowering Pokémon",i.GRASS,null,.4,2.2,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,250,40,40,60,40,60,10,190,50,50,G.MEDIUM_FAST,50,!1),new P(e.ELDEGOSS,8,!1,!1,!1,"Cotton Bloom Pokémon",i.GRASS,null,.5,2.5,O.COTTON_DOWN,O.REGENERATOR,O.EFFECT_SPORE,460,60,50,90,80,120,60,75,50,161,G.MEDIUM_FAST,50,!1),new P(e.WOOLOO,8,!1,!1,!1,"Sheep Pokémon",i.NORMAL,null,.6,6,O.FLUFFY,O.RUN_AWAY,O.BULLETPROOF,270,42,40,55,40,45,48,255,50,122,G.MEDIUM_FAST,50,!1),new P(e.DUBWOOL,8,!1,!1,!1,"Sheep Pokémon",i.NORMAL,null,1.3,43,O.FLUFFY,O.STEADFAST,O.BULLETPROOF,490,72,80,100,60,90,88,127,50,172,G.MEDIUM_FAST,50,!1),new P(e.CHEWTLE,8,!1,!1,!1,"Snapping Pokémon",i.WATER,null,.3,8.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,284,50,64,50,38,38,44,255,50,57,G.MEDIUM_FAST,50,!1),new P(e.DREDNAW,8,!1,!1,!1,"Bite Pokémon",i.WATER,i.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.WATER,i.ROCK,1,115.5,O.STRONG_JAW,O.SHELL_ARMOR,O.SWIFT_SWIM,485,90,115,90,48,68,74,75,50,170,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.WATER,i.ROCK,24,999.9,O.STRONG_JAW,O.STRONG_JAW,O.STRONG_JAW,585,115,137,115,61,83,74,75,50,170)),new P(e.YAMPER,8,!1,!1,!1,"Puppy Pokémon",i.ELECTRIC,null,.3,13.5,O.BALL_FETCH,O.NONE,O.RATTLED,270,59,45,50,40,50,26,255,50,54,G.FAST,50,!1),new P(e.BOLTUND,8,!1,!1,!1,"Dog Pokémon",i.ELECTRIC,null,1,34,O.STRONG_JAW,O.NONE,O.COMPETITIVE,490,69,90,60,90,60,121,45,50,172,G.FAST,50,!1),new P(e.ROLYCOLY,8,!1,!1,!1,"Coal Pokémon",i.ROCK,null,.3,12,O.STEAM_ENGINE,O.HEATPROOF,O.FLASH_FIRE,240,30,40,50,40,50,30,255,50,48,G.MEDIUM_SLOW,50,!1),new P(e.CARKOL,8,!1,!1,!1,"Coal Pokémon",i.ROCK,i.FIRE,1.1,78,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,410,80,60,90,60,70,50,120,50,144,G.MEDIUM_SLOW,50,!1),new P(e.COALOSSAL,8,!1,!1,!1,"Coal Pokémon",i.ROCK,i.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,G.MEDIUM_SLOW,50,!1,!0,new y("Normal","",i.ROCK,i.FIRE,2.8,310.5,O.STEAM_ENGINE,O.FLAME_BODY,O.FLASH_FIRE,510,110,80,120,80,90,30,45,50,255,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.ROCK,i.FIRE,42,999.9,O.STEAM_ENGINE,O.STEAM_ENGINE,O.STEAM_ENGINE,610,140,100,132,95,100,43,45,50,255)),new P(e.APPLIN,8,!1,!1,!1,"Apple Core Pokémon",i.GRASS,i.DRAGON,.2,.5,O.RIPEN,O.GLUTTONY,O.BULLETPROOF,260,40,40,80,40,40,20,255,50,52,G.ERRATIC,50,!1),new P(e.FLAPPLE,8,!1,!1,!1,"Apple Wing Pokémon",i.GRASS,i.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,G.ERRATIC,50,!1,!0,new y("Normal","",i.GRASS,i.DRAGON,.3,1,O.RIPEN,O.GLUTTONY,O.HUSTLE,485,70,110,80,95,60,70,45,50,170,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.GRASS,i.DRAGON,24,999.9,O.HUSTLE,O.HUSTLE,O.HUSTLE,585,100,125,90,105,70,95,45,50,170)),new P(e.APPLETUN,8,!1,!1,!1,"Apple Nectar Pokémon",i.GRASS,i.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,G.ERRATIC,50,!1,!0,new y("Normal","",i.GRASS,i.DRAGON,.4,13,O.RIPEN,O.GLUTTONY,O.THICK_FAT,485,110,85,80,100,80,30,45,50,170,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.GRASS,i.DRAGON,24,999.9,O.THICK_FAT,O.THICK_FAT,O.THICK_FAT,585,150,100,95,115,95,30,45,50,170)),new P(e.SILICOBRA,8,!1,!1,!1,"Sand Snake Pokémon",i.GROUND,null,2.2,7.6,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,315,52,57,75,35,50,46,255,50,63,G.MEDIUM_FAST,50,!1),new P(e.SANDACONDA,8,!1,!1,!1,"Sand Snake Pokémon",i.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.GROUND,null,3.8,65.5,O.SAND_SPIT,O.SHED_SKIN,O.SAND_VEIL,510,72,107,125,65,70,71,120,50,179,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.GROUND,null,22,999.9,O.SAND_SPIT,O.SAND_SPIT,O.SAND_SPIT,610,102,137,140,70,80,81,120,50,179)),new P(e.CRAMORANT,8,!1,!1,!1,"Gulp Pokémon",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,G.MEDIUM_FAST,50,!1,!1,new y("Normal","",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166,!1,null,!0),new y("Gulping Form","gulping",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166),new y("Gorging Form","gorging",i.FLYING,i.WATER,.8,18,O.GULP_MISSILE,O.NONE,O.NONE,475,70,85,55,85,95,85,45,50,166)),new P(e.ARROKUDA,8,!1,!1,!1,"Rush Pokémon",i.WATER,null,.5,1,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,280,41,63,40,40,30,66,255,50,56,G.SLOW,50,!1),new P(e.BARRASKEWDA,8,!1,!1,!1,"Skewer Pokémon",i.WATER,null,1.3,30,O.SWIFT_SWIM,O.NONE,O.PROPELLER_TAIL,490,61,123,60,60,50,136,60,50,172,G.SLOW,50,!1),new P(e.TOXEL,8,!1,!1,!1,"Baby Pokémon",i.ELECTRIC,i.POISON,.4,11,O.RATTLED,O.STATIC,O.KLUTZ,242,40,38,35,54,35,40,75,50,48,G.MEDIUM_SLOW,50,!1),new P(e.TOXTRICITY,8,!1,!1,!1,"Punk Pokémon",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,G.MEDIUM_SLOW,50,!1,!0,new y("Amped Form","amped",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.PLUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"",!0),new y("Low-Key Form","lowkey",i.ELECTRIC,i.POISON,1.6,40,O.PUNK_ROCK,O.MINUS,O.TECHNICIAN,502,75,98,70,114,70,75,45,50,176,!1,"lowkey",!0),new y("G-Max",Me.GIGANTAMAX,i.ELECTRIC,i.POISON,24,999.9,O.PUNK_ROCK,O.PUNK_ROCK,O.PUNK_ROCK,602,114,105,82,137,82,82,45,50,176)),new P(e.SIZZLIPEDE,8,!1,!1,!1,"Radiator Pokémon",i.FIRE,i.BUG,.7,1,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,305,50,65,45,50,50,45,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.CENTISKORCH,8,!1,!1,!1,"Radiator Pokémon",i.FIRE,i.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.FIRE,i.BUG,3,120,O.FLASH_FIRE,O.WHITE_SMOKE,O.FLAME_BODY,525,100,115,65,90,90,65,75,50,184,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.FIRE,i.BUG,75,999.9,O.FLASH_FIRE,O.FLASH_FIRE,O.FLASH_FIRE,625,130,125,75,94,100,101,75,50,184)),new P(e.CLOBBOPUS,8,!1,!1,!1,"Tantrum Pokémon",i.FIGHTING,null,.6,4,O.LIMBER,O.NONE,O.TECHNICIAN,310,50,68,60,50,50,32,180,50,62,G.MEDIUM_SLOW,50,!1),new P(e.GRAPPLOCT,8,!1,!1,!1,"Jujitsu Pokémon",i.FIGHTING,null,1.6,39,O.LIMBER,O.NONE,O.TECHNICIAN,480,80,118,90,70,80,42,45,50,168,G.MEDIUM_SLOW,50,!1),new P(e.SINISTEA,8,!1,!1,!1,"Black Tea Pokémon",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,G.MEDIUM_FAST,null,!1,!1,new y("Phony Form","phony",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0),new y("Antique Form","antique",i.GHOST,null,.1,.2,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,308,40,45,45,74,54,50,120,50,62,!1,"",!0,!0)),new P(e.POLTEAGEIST,8,!1,!1,!1,"Black Tea Pokémon",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,G.MEDIUM_FAST,null,!1,!1,new y("Phony Form","phony",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0),new y("Antique Form","antique",i.GHOST,null,.2,.4,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,508,60,65,65,134,114,70,60,50,178,!1,"",!0,!0)),new P(e.HATENNA,8,!1,!1,!1,"Calm Pokémon",i.PSYCHIC,null,.4,3.4,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,265,42,30,45,56,53,39,235,50,53,G.SLOW,0,!1),new P(e.HATTREM,8,!1,!1,!1,"Serene Pokémon",i.PSYCHIC,null,.6,4.8,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,370,57,40,65,86,73,49,120,50,130,G.SLOW,0,!1),new P(e.HATTERENE,8,!1,!1,!1,"Silent Pokémon",i.PSYCHIC,i.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,G.SLOW,0,!1,!0,new y("Normal","",i.PSYCHIC,i.FAIRY,2.1,5.1,O.HEALER,O.ANTICIPATION,O.MAGIC_BOUNCE,510,57,90,95,136,103,29,45,50,255,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.PSYCHIC,i.FAIRY,26,999.9,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,O.MAGIC_BOUNCE,610,87,100,110,146,118,49,45,50,255)),new P(e.IMPIDIMP,8,!1,!1,!1,"Wily Pokémon",i.DARK,i.FAIRY,.4,5.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,265,45,45,30,55,40,50,255,50,53,G.MEDIUM_FAST,100,!1),new P(e.MORGREM,8,!1,!1,!1,"Devious Pokémon",i.DARK,i.FAIRY,.8,12.5,O.PRANKSTER,O.FRISK,O.PICKPOCKET,370,65,60,45,75,55,70,120,50,130,G.MEDIUM_FAST,100,!1),new P(e.GRIMMSNARL,8,!1,!1,!1,"Bulk Up Pokémon",i.DARK,i.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,G.MEDIUM_FAST,100,!1,!0,new y("Normal","",i.DARK,i.FAIRY,1.5,61,O.PRANKSTER,O.FRISK,O.PICKPOCKET,510,95,120,65,95,75,60,45,50,255,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.DARK,i.FAIRY,32,999.9,O.PRANKSTER,O.PRANKSTER,O.PRANKSTER,610,130,138,75,110,92,65,45,50,255)),new P(e.OBSTAGOON,8,!1,!1,!1,"Blocking Pokémon",i.DARK,i.NORMAL,1.6,46,O.RECKLESS,O.GUTS,O.DEFIANT,520,93,90,101,60,81,95,45,50,260,G.MEDIUM_FAST,50,!1),new P(e.PERRSERKER,8,!1,!1,!1,"Viking Pokémon",i.STEEL,null,.8,28,O.BATTLE_ARMOR,O.TOUGH_CLAWS,O.STEELY_SPIRIT,440,70,110,100,50,60,50,90,50,154,G.MEDIUM_FAST,50,!1),new P(e.CURSOLA,8,!1,!1,!1,"Coral Pokémon",i.GHOST,null,1,.4,O.WEAK_ARMOR,O.NONE,O.PERISH_BODY,510,60,95,50,145,130,30,30,50,179,G.FAST,25,!1),new P(e.SIRFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",i.FIGHTING,null,.8,117,O.STEADFAST,O.NONE,O.SCRAPPY,507,62,135,95,68,82,65,45,50,177,G.MEDIUM_FAST,50,!1),new P(e.MR_RIME,8,!1,!1,!1,"Comedian Pokémon",i.ICE,i.PSYCHIC,1.5,58.2,O.TANGLED_FEET,O.SCREEN_CLEANER,O.ICE_BODY,520,80,85,75,110,100,70,45,50,182,G.MEDIUM_FAST,50,!1),new P(e.RUNERIGUS,8,!1,!1,!1,"Grudge Pokémon",i.GROUND,i.GHOST,1.6,66.6,O.WANDERING_SPIRIT,O.NONE,O.NONE,483,58,95,145,50,105,30,90,50,169,G.MEDIUM_FAST,50,!1),new P(e.MILCERY,8,!1,!1,!1,"Cream Pokémon",i.FAIRY,null,.2,.3,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,270,45,40,40,50,61,34,200,50,54,G.MEDIUM_FAST,0,!1),new P(e.ALCREMIE,8,!1,!1,!1,"Cream Pokémon",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,G.MEDIUM_FAST,0,!1,!0,new y("Vanilla Cream","vanilla-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,"",!0),new y("Ruby Cream","ruby-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Matcha Cream","matcha-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Mint Cream","mint-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Lemon Cream","lemon-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Salted Cream","salted-cream",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Ruby Swirl","ruby-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Caramel Swirl","caramel-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("Rainbow Swirl","rainbow-swirl",i.FAIRY,null,.3,.5,O.SWEET_VEIL,O.NONE,O.AROMA_VEIL,495,65,60,75,110,121,64,100,50,173,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.FAIRY,null,30,999.9,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,595,105,70,85,130,141,64,100,50,173)),new P(e.FALINKS,8,!1,!1,!1,"Formation Pokémon",i.FIGHTING,null,3,62,O.BATTLE_ARMOR,O.NONE,O.DEFIANT,470,65,100,100,70,60,75,45,50,165,G.MEDIUM_FAST,null,!1),new P(e.PINCURCHIN,8,!1,!1,!1,"Sea Urchin Pokémon",i.ELECTRIC,null,.3,1,O.LIGHTNING_ROD,O.NONE,O.ELECTRIC_SURGE,435,48,101,95,91,85,15,75,50,152,G.MEDIUM_FAST,50,!1),new P(e.SNOM,8,!1,!1,!1,"Worm Pokémon",i.ICE,i.BUG,.3,3.8,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,185,30,25,35,45,30,20,190,50,37,G.MEDIUM_FAST,50,!1),new P(e.FROSMOTH,8,!1,!1,!1,"Frost Moth Pokémon",i.ICE,i.BUG,1.3,42,O.SHIELD_DUST,O.NONE,O.ICE_SCALES,475,70,65,60,125,90,65,75,50,166,G.MEDIUM_FAST,50,!1),new P(e.STONJOURNER,8,!1,!1,!1,"Big Rock Pokémon",i.ROCK,null,2.5,520,O.POWER_SPOT,O.NONE,O.NONE,470,100,125,135,20,20,70,60,50,165,G.SLOW,50,!1),new P(e.EISCUE,8,!1,!1,!1,"Penguin Pokémon",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,G.SLOW,50,!1,!1,new y("Ice Face","",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,110,65,90,50,60,50,165,!1,null,!0),new y("No Ice","no-ice",i.ICE,null,1.4,89,O.ICE_FACE,O.NONE,O.NONE,470,75,80,70,65,50,130,60,50,165)),new P(e.INDEEDEE,8,!1,!1,!1,"Emotion Pokémon",i.PSYCHIC,i.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,G.FAST,50,!1,!1,new y("Male","male",i.PSYCHIC,i.NORMAL,.9,28,O.INNER_FOCUS,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,60,65,55,105,95,95,30,140,166,!1,"",!0),new y("Female","female",i.PSYCHIC,i.NORMAL,.9,28,O.OWN_TEMPO,O.SYNCHRONIZE,O.PSYCHIC_SURGE,475,70,55,65,95,105,85,30,140,166,!1,null,!0)),new P(e.MORPEKO,8,!1,!1,!1,"Two-Sided Pokémon",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,G.MEDIUM_FAST,50,!1,!1,new y("Full Belly Mode","full-belly",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153,!1,"",!0),new y("Hangry Mode","hangry",i.ELECTRIC,i.DARK,.3,3,O.HUNGER_SWITCH,O.NONE,O.NONE,436,58,95,58,70,58,97,180,50,153)),new P(e.CUFANT,8,!1,!1,!1,"Copperderm Pokémon",i.STEEL,null,1.2,100,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,330,72,80,49,40,49,40,190,50,66,G.MEDIUM_FAST,50,!1),new P(e.COPPERAJAH,8,!1,!1,!1,"Copperderm Pokémon",i.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.STEEL,null,3,650,O.SHEER_FORCE,O.NONE,O.HEAVY_METAL,500,122,130,69,80,69,30,90,50,175,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.STEEL,i.GROUND,23,999.9,O.MOLD_BREAKER,O.NONE,O.MOLD_BREAKER,600,177,155,79,90,79,20,90,50,175)),new P(e.DRACOZOLT,8,!1,!1,!1,"Fossil Pokémon",i.ELECTRIC,i.DRAGON,1.8,190,O.VOLT_ABSORB,O.HUSTLE,O.SAND_RUSH,505,90,100,90,80,70,75,45,50,177,G.SLOW,null,!1),new P(e.ARCTOZOLT,8,!1,!1,!1,"Fossil Pokémon",i.ELECTRIC,i.ICE,2.3,150,O.VOLT_ABSORB,O.STATIC,O.SLUSH_RUSH,505,90,100,90,90,80,55,45,50,177,G.SLOW,null,!1),new P(e.DRACOVISH,8,!1,!1,!1,"Fossil Pokémon",i.WATER,i.DRAGON,2.3,215,O.WATER_ABSORB,O.STRONG_JAW,O.SAND_RUSH,505,90,90,100,70,80,75,45,50,177,G.SLOW,null,!1),new P(e.ARCTOVISH,8,!1,!1,!1,"Fossil Pokémon",i.WATER,i.ICE,2,175,O.WATER_ABSORB,O.ICE_BODY,O.SLUSH_RUSH,505,90,90,100,80,90,55,45,50,177,G.SLOW,null,!1),new P(e.DURALUDON,8,!1,!1,!1,"Alloy Pokémon",i.STEEL,i.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,G.MEDIUM_FAST,50,!1,!0,new y("Normal","",i.STEEL,i.DRAGON,1.8,40,O.LIGHT_METAL,O.HEAVY_METAL,O.STALWART,535,70,95,115,120,50,85,45,50,187,!1,null,!0),new y("G-Max",Me.GIGANTAMAX,i.STEEL,i.DRAGON,43,999.9,O.LIGHTNING_ROD,O.LIGHTNING_ROD,O.LIGHTNING_ROD,635,100,110,120,175,60,70,45,50,187)),new P(e.DREEPY,8,!1,!1,!1,"Lingering Pokémon",i.DRAGON,i.GHOST,.5,2,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,270,28,60,30,40,30,82,45,50,54,G.SLOW,50,!1),new P(e.DRAKLOAK,8,!1,!1,!1,"Caretaker Pokémon",i.DRAGON,i.GHOST,1.4,11,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,410,68,80,50,60,50,102,45,50,144,G.SLOW,50,!1),new P(e.DRAGAPULT,8,!1,!1,!1,"Stealth Pokémon",i.DRAGON,i.GHOST,3,50,O.CLEAR_BODY,O.INFILTRATOR,O.CURSED_BODY,600,88,120,75,100,75,142,45,50,300,G.SLOW,50,!1),new P(e.ZACIAN,8,!1,!0,!1,"Warrior Pokémon",i.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,G.SLOW,null,!1,!1,new y("Hero of Many Battles","hero-of-many-battles",i.FAIRY,null,2.8,110,O.INTREPID_SWORD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new y("Crowned","crowned",i.FAIRY,i.STEEL,2.8,355,O.INTREPID_SWORD,O.NONE,O.NONE,700,92,150,115,80,115,148,10,0,360)),new P(e.ZAMAZENTA,8,!1,!0,!1,"Warrior Pokémon",i.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,G.SLOW,null,!1,!1,new y("Hero of Many Battles","hero-of-many-battles",i.FIGHTING,null,2.9,210,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,660,92,120,115,80,115,138,10,0,335,!1,"",!0),new y("Crowned","crowned",i.FIGHTING,i.STEEL,2.9,785,O.DAUNTLESS_SHIELD,O.NONE,O.NONE,700,92,120,140,80,140,128,10,0,360)),new P(e.ETERNATUS,8,!1,!0,!1,"Gigantic Pokémon",i.POISON,i.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,G.SLOW,null,!1,!0,new y("Normal","",i.POISON,i.DRAGON,20,950,O.PRESSURE,O.NONE,O.NONE,690,140,85,95,145,95,130,255,0,345,!1,null,!0),new y("E-Max","eternamax",i.POISON,i.DRAGON,100,999.9,O.PRESSURE,O.NONE,O.NONE,1125,255,115,250,125,250,130,255,0,345)),new P(e.KUBFU,8,!0,!1,!1,"Wushu Pokémon",i.FIGHTING,null,.6,12,O.INNER_FOCUS,O.NONE,O.NONE,385,60,90,60,53,50,72,3,50,77,G.SLOW,87.5,!1),new P(e.URSHIFU,8,!0,!1,!1,"Wushu Pokémon",i.FIGHTING,i.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,G.SLOW,87.5,!1,!0,new y("Single Strike Style","single-strike",i.FIGHTING,i.DARK,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,"",!0),new y("Rapid Strike Style","rapid-strike",i.FIGHTING,i.WATER,1.9,105,O.UNSEEN_FIST,O.NONE,O.NONE,550,100,130,100,63,60,97,3,50,275,!1,null,!0),new y("G-Max Single Strike Style",Me.GIGANTAMAX_SINGLE,i.FIGHTING,i.DARK,29,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275),new y("G-Max Rapid Strike Style",Me.GIGANTAMAX_RAPID,i.FIGHTING,i.WATER,26,999.9,O.UNSEEN_FIST,O.NONE,O.NONE,650,125,145,115,83,70,112,3,50,275)),new P(e.ZARUDE,8,!1,!1,!0,"Rogue Monkey Pokémon",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,G.SLOW,null,!1,!1,new y("Normal","",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0),new y("Dada","dada",i.DARK,i.GRASS,1.8,70,O.LEAF_GUARD,O.NONE,O.NONE,600,105,120,105,70,95,105,3,0,300,!1,null,!0)),new P(e.REGIELEKI,8,!0,!1,!1,"Electron Pokémon",i.ELECTRIC,null,1.2,145,O.TRANSISTOR,O.NONE,O.NONE,580,80,100,50,100,50,200,3,35,290,G.SLOW,null,!1),new P(e.REGIDRAGO,8,!0,!1,!1,"Dragon Orb Pokémon",i.DRAGON,null,2.1,200,O.DRAGONS_MAW,O.NONE,O.NONE,580,200,100,50,100,50,80,3,35,290,G.SLOW,null,!1),new P(e.GLASTRIER,8,!0,!1,!1,"Wild Horse Pokémon",i.ICE,null,2.2,800,O.CHILLING_NEIGH,O.NONE,O.NONE,580,100,145,130,65,110,30,3,35,290,G.SLOW,null,!1),new P(e.SPECTRIER,8,!0,!1,!1,"Swift Horse Pokémon",i.GHOST,null,2,44.5,O.GRIM_NEIGH,O.NONE,O.NONE,580,100,65,60,145,80,130,3,35,290,G.SLOW,null,!1),new P(e.CALYREX,8,!1,!0,!1,"King Pokémon",i.PSYCHIC,i.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,G.SLOW,null,!1,!0,new y("Normal","",i.PSYCHIC,i.GRASS,1.1,7.7,O.UNNERVE,O.NONE,O.NONE,500,100,80,80,80,80,80,3,100,250,!1,null,!0),new y("Ice","ice",i.PSYCHIC,i.ICE,2.4,809.1,O.AS_ONE_GLASTRIER,O.NONE,O.NONE,680,100,165,150,85,130,50,3,100,340),new y("Shadow","shadow",i.PSYCHIC,i.GHOST,2.4,53.6,O.AS_ONE_SPECTRIER,O.NONE,O.NONE,680,100,85,80,165,100,150,3,100,340)),new P(e.WYRDEER,8,!1,!1,!1,"Big Horn Pokémon",i.NORMAL,i.PSYCHIC,1.8,95.1,O.INTIMIDATE,O.FRISK,O.SAP_SIPPER,525,103,105,72,105,75,65,135,50,263,G.SLOW,50,!1),new P(e.KLEAVOR,8,!1,!1,!1,"Axe Pokémon",i.BUG,i.ROCK,1.8,89,O.SWARM,O.SHEER_FORCE,O.SHARPNESS,500,70,135,95,45,70,85,115,50,175,G.MEDIUM_FAST,50,!1),new P(e.URSALUNA,8,!1,!1,!1,"Peat Pokémon",i.GROUND,i.NORMAL,2.4,290,O.GUTS,O.BULLETPROOF,O.UNNERVE,550,130,140,105,45,80,50,75,50,275,G.MEDIUM_FAST,50,!1),new P(e.BASCULEGION,8,!1,!1,!1,"Big Fish Pokémon",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,G.MEDIUM_FAST,50,!1,!1,new y("Male","male",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,112,65,80,75,78,135,50,265,!1,"",!0),new y("Female","female",i.WATER,i.GHOST,3,110,O.SWIFT_SWIM,O.ADAPTABILITY,O.MOLD_BREAKER,530,120,92,65,100,75,78,135,50,265,!1,null,!0)),new P(e.SNEASLER,8,!1,!1,!1,"Free Climb Pokémon",i.FIGHTING,i.POISON,1.3,43,O.PRESSURE,O.UNBURDEN,O.POISON_TOUCH,510,80,130,60,40,80,120,135,50,102,G.MEDIUM_SLOW,50,!1),new P(e.OVERQWIL,8,!1,!1,!1,"Pin Cluster Pokémon",i.DARK,i.POISON,2.5,60.5,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,510,85,115,95,65,65,85,135,50,179,G.MEDIUM_FAST,50,!1),new P(e.ENAMORUS,8,!0,!1,!1,"Love-Hate Pokémon",i.FAIRY,i.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,G.SLOW,0,!1,!0,new y("Incarnate Forme","incarnate",i.FAIRY,i.FLYING,1.6,48,O.CUTE_CHARM,O.NONE,O.CONTRARY,580,74,115,70,135,80,106,3,50,116,!1,null,!0),new y("Therian Forme","therian",i.FAIRY,i.FLYING,1.6,48,O.OVERCOAT,O.NONE,O.OVERCOAT,580,74,115,110,135,100,46,3,50,116)),new P(e.SPRIGATITO,9,!1,!1,!1,"Grass Cat Pokémon",i.GRASS,null,.4,4.1,O.OVERGROW,O.NONE,O.PROTEAN,310,40,61,54,45,45,65,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.FLORAGATO,9,!1,!1,!1,"Grass Cat Pokémon",i.GRASS,null,.9,12.2,O.OVERGROW,O.NONE,O.PROTEAN,410,61,80,63,60,63,83,45,50,144,G.MEDIUM_SLOW,87.5,!1),new P(e.MEOWSCARADA,9,!1,!1,!1,"Magician Pokémon",i.GRASS,i.DARK,1.5,31.2,O.OVERGROW,O.NONE,O.PROTEAN,530,76,110,70,81,70,123,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.FUECOCO,9,!1,!1,!1,"Fire Croc Pokémon",i.FIRE,null,.4,9.8,O.BLAZE,O.NONE,O.UNAWARE,310,67,45,59,63,40,36,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.CROCALOR,9,!1,!1,!1,"Fire Croc Pokémon",i.FIRE,null,1,30.7,O.BLAZE,O.NONE,O.UNAWARE,411,81,55,78,90,58,49,45,50,144,G.MEDIUM_SLOW,87.5,!1),new P(e.SKELEDIRGE,9,!1,!1,!1,"Singer Pokémon",i.FIRE,i.GHOST,1.6,326.5,O.BLAZE,O.NONE,O.UNAWARE,530,104,75,100,110,75,66,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.QUAXLY,9,!1,!1,!1,"Duckling Pokémon",i.WATER,null,.5,6.1,O.TORRENT,O.NONE,O.MOXIE,310,55,65,45,50,45,50,45,50,62,G.MEDIUM_SLOW,87.5,!1),new P(e.QUAXWELL,9,!1,!1,!1,"Practicing Pokémon",i.WATER,null,1.2,21.5,O.TORRENT,O.NONE,O.MOXIE,410,70,85,65,65,60,65,45,50,144,G.MEDIUM_SLOW,87.5,!1),new P(e.QUAQUAVAL,9,!1,!1,!1,"Dancer Pokémon",i.WATER,i.FIGHTING,1.8,61.9,O.TORRENT,O.NONE,O.MOXIE,530,85,120,80,85,75,85,45,50,265,G.MEDIUM_SLOW,87.5,!1),new P(e.LECHONK,9,!1,!1,!1,"Hog Pokémon",i.NORMAL,null,.5,10.2,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,254,54,45,40,35,45,35,255,50,51,G.MEDIUM_FAST,50,!1),new P(e.OINKOLOGNE,9,!1,!1,!1,"Hog Pokémon",i.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,G.MEDIUM_FAST,50,!1,!1,new y("Male","male",i.NORMAL,null,1,120,O.LINGERING_AROMA,O.GLUTTONY,O.THICK_FAT,489,110,100,75,59,80,65,100,50,171,!1,"",!0),new y("Female","female",i.NORMAL,null,1,120,O.AROMA_VEIL,O.GLUTTONY,O.THICK_FAT,489,115,90,70,59,90,65,100,50,171,!1,null,!0)),new P(e.TAROUNTULA,9,!1,!1,!1,"String Ball Pokémon",i.BUG,null,.3,4,O.INSOMNIA,O.NONE,O.STAKEOUT,210,35,41,45,29,40,20,255,50,42,G.ERRATIC,50,!1),new P(e.SPIDOPS,9,!1,!1,!1,"Trap Pokémon",i.BUG,null,1,16.5,O.INSOMNIA,O.NONE,O.STAKEOUT,404,60,79,92,52,86,35,120,50,141,G.ERRATIC,50,!1),new P(e.NYMBLE,9,!1,!1,!1,"Grasshopper Pokémon",i.BUG,null,.2,1,O.SWARM,O.NONE,O.TINTED_LENS,210,33,46,40,21,25,45,190,20,42,G.MEDIUM_FAST,50,!1),new P(e.LOKIX,9,!1,!1,!1,"Grasshopper Pokémon",i.BUG,i.DARK,1,17.5,O.SWARM,O.NONE,O.TINTED_LENS,450,71,102,78,52,55,92,30,0,158,G.MEDIUM_FAST,50,!1),new P(e.PAWMI,9,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,null,.3,2.5,O.STATIC,O.NATURAL_CURE,O.IRON_FIST,240,45,50,20,40,25,60,190,50,48,G.MEDIUM_FAST,50,!1),new P(e.PAWMO,9,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,i.FIGHTING,.4,6.5,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,350,60,75,40,50,40,85,80,50,123,G.MEDIUM_FAST,50,!1),new P(e.PAWMOT,9,!1,!1,!1,"Hands-On Pokémon",i.ELECTRIC,i.FIGHTING,.9,41,O.VOLT_ABSORB,O.NATURAL_CURE,O.IRON_FIST,490,70,115,70,70,60,105,45,50,245,G.MEDIUM_FAST,50,!1),new P(e.TANDEMAUS,9,!1,!1,!1,"Couple Pokémon",i.NORMAL,null,.3,1.8,O.RUN_AWAY,O.PICKUP,O.OWN_TEMPO,305,50,50,45,40,45,75,150,50,61,G.FAST,null,!1),new P(e.MAUSHOLD,9,!1,!1,!1,"Family Pokémon",i.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165,G.FAST,null,!1,!1,new y("Family of Four","four",i.NORMAL,null,.3,2.8,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165),new y("Family of Three","three",i.NORMAL,null,.3,2.3,O.FRIEND_GUARD,O.CHEEK_POUCH,O.TECHNICIAN,470,74,75,70,65,75,111,75,50,165)),new P(e.FIDOUGH,9,!1,!1,!1,"Puppy Pokémon",i.FAIRY,null,.3,10.9,O.OWN_TEMPO,O.NONE,O.KLUTZ,312,37,55,70,30,55,65,190,50,62,G.MEDIUM_SLOW,50,!1),new P(e.DACHSBUN,9,!1,!1,!1,"Dog Pokémon",i.FAIRY,null,.5,14.9,O.WELL_BAKED_BODY,O.NONE,O.AROMA_VEIL,477,57,80,115,50,80,95,90,50,167,G.MEDIUM_SLOW,50,!1),new P(e.SMOLIV,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,.3,6.5,O.EARLY_BIRD,O.NONE,O.HARVEST,260,41,35,45,58,51,30,255,50,52,G.MEDIUM_SLOW,50,!1),new P(e.DOLLIV,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,.6,11.9,O.EARLY_BIRD,O.NONE,O.HARVEST,354,52,53,60,78,78,33,120,50,124,G.MEDIUM_SLOW,50,!1),new P(e.ARBOLIVA,9,!1,!1,!1,"Olive Pokémon",i.GRASS,i.NORMAL,1.4,48.2,O.SEED_SOWER,O.NONE,O.HARVEST,510,78,69,90,125,109,39,45,50,255,G.MEDIUM_SLOW,50,!1),new P(e.SQUAWKABILLY,9,!1,!1,!1,"Parrot Pokémon",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,G.ERRATIC,50,!1,!1,new y("Green Plumage","green-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new y("Blue Plumage","blue-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.GUTS,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new y("Yellow Plumage","yellow-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0),new y("White Plumage","white-plumage",i.NORMAL,i.FLYING,.6,2.4,O.INTIMIDATE,O.HUSTLE,O.SHEER_FORCE,417,82,96,51,45,51,92,190,50,146,!1,null,!0)),new P(e.NACLI,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,.4,16,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,280,55,55,75,35,35,25,255,50,56,G.MEDIUM_SLOW,50,!1),new P(e.NACLSTACK,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,.6,105,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,355,60,60,100,35,65,35,120,50,124,G.MEDIUM_SLOW,50,!1),new P(e.GARGANACL,9,!1,!1,!1,"Rock Salt Pokémon",i.ROCK,null,2.3,240,O.PURIFYING_SALT,O.STURDY,O.CLEAR_BODY,500,100,100,130,45,90,35,45,50,250,G.MEDIUM_SLOW,50,!1),new P(e.CHARCADET,9,!1,!1,!1,"Fire Child Pokémon",i.FIRE,null,.6,10.5,O.FLASH_FIRE,O.NONE,O.FLAME_BODY,255,40,50,40,50,40,35,90,50,51,G.SLOW,50,!1),new P(e.ARMAROUGE,9,!1,!1,!1,"Fire Warrior Pokémon",i.FIRE,i.PSYCHIC,1.5,85,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,85,60,100,125,80,75,25,20,263,G.SLOW,50,!1),new P(e.CERULEDGE,9,!1,!1,!1,"Fire Blades Pokémon",i.FIRE,i.GHOST,1.6,62,O.FLASH_FIRE,O.NONE,O.WEAK_ARMOR,525,75,125,80,60,100,85,25,20,263,G.SLOW,50,!1),new P(e.TADBULB,9,!1,!1,!1,"EleTadpole Pokémon",i.ELECTRIC,null,.3,.4,O.OWN_TEMPO,O.STATIC,O.DAMP,272,61,31,41,59,35,45,190,50,54,G.MEDIUM_FAST,50,!1),new P(e.BELLIBOLT,9,!1,!1,!1,"EleFrog Pokémon",i.ELECTRIC,null,1.2,113,O.ELECTROMORPHOSIS,O.STATIC,O.DAMP,495,109,64,91,103,83,45,50,50,173,G.MEDIUM_FAST,50,!1),new P(e.WATTREL,9,!1,!1,!1,"Storm Petrel Pokémon",i.ELECTRIC,i.FLYING,.4,3.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,280,40,40,35,55,40,70,180,50,56,G.MEDIUM_SLOW,50,!1),new P(e.KILOWATTREL,9,!1,!1,!1,"Frigatebird Pokémon",i.ELECTRIC,i.FLYING,1.4,38.6,O.WIND_POWER,O.VOLT_ABSORB,O.COMPETITIVE,490,70,70,60,105,60,125,90,50,172,G.MEDIUM_SLOW,50,!1),new P(e.MASCHIFF,9,!1,!1,!1,"Rascal Pokémon",i.DARK,null,.5,16,O.INTIMIDATE,O.RUN_AWAY,O.STAKEOUT,340,60,78,60,40,51,51,150,50,68,G.MEDIUM_SLOW,50,!1),new P(e.MABOSSTIFF,9,!1,!1,!1,"Boss Pokémon",i.DARK,null,1.1,61,O.INTIMIDATE,O.GUARD_DOG,O.STAKEOUT,505,80,120,90,60,70,85,75,50,177,G.MEDIUM_SLOW,50,!1),new P(e.SHROODLE,9,!1,!1,!1,"Toxic Mouse Pokémon",i.POISON,i.NORMAL,.2,.7,O.UNBURDEN,O.PICKPOCKET,O.PRANKSTER,290,40,65,35,40,35,75,190,50,58,G.MEDIUM_SLOW,50,!1),new P(e.GRAFAIAI,9,!1,!1,!1,"Toxic Monkey Pokémon",i.POISON,i.NORMAL,.7,27.2,O.UNBURDEN,O.POISON_TOUCH,O.PRANKSTER,485,63,95,65,80,72,110,90,50,170,G.MEDIUM_SLOW,50,!1),new P(e.BRAMBLIN,9,!1,!1,!1,"Tumbleweed Pokémon",i.GRASS,i.GHOST,.6,.6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,275,40,65,30,45,35,60,190,50,55,G.MEDIUM_FAST,50,!1),new P(e.BRAMBLEGHAST,9,!1,!1,!1,"Tumbleweed Pokémon",i.GRASS,i.GHOST,1.2,6,O.WIND_RIDER,O.NONE,O.INFILTRATOR,480,55,115,70,80,70,90,45,50,168,G.MEDIUM_FAST,50,!1),new P(e.TOEDSCOOL,9,!1,!1,!1,"Woodear Pokémon",i.GROUND,i.GRASS,.9,33,O.MYCELIUM_MIGHT,O.NONE,O.NONE,335,40,40,35,50,100,70,190,50,67,G.MEDIUM_SLOW,50,!1),new P(e.TOEDSCRUEL,9,!1,!1,!1,"Woodear Pokémon",i.GROUND,i.GRASS,1.9,58,O.MYCELIUM_MIGHT,O.NONE,O.NONE,515,80,70,65,80,120,100,90,50,180,G.MEDIUM_SLOW,50,!1),new P(e.KLAWF,9,!1,!1,!1,"Ambush Pokémon",i.ROCK,null,1.3,79,O.ANGER_SHELL,O.SHELL_ARMOR,O.REGENERATOR,450,70,100,115,35,55,75,120,50,158,G.MEDIUM_FAST,50,!1),new P(e.CAPSAKID,9,!1,!1,!1,"Spicy Pepper Pokémon",i.GRASS,null,.3,3,O.CHLOROPHYLL,O.INSOMNIA,O.KLUTZ,304,50,62,40,62,40,50,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.SCOVILLAIN,9,!1,!1,!1,"Spicy Pepper Pokémon",i.GRASS,i.FIRE,.9,15,O.CHLOROPHYLL,O.INSOMNIA,O.MOODY,486,65,108,65,108,65,75,75,50,170,G.MEDIUM_FAST,50,!1),new P(e.RELLOR,9,!1,!1,!1,"Rolling Pokémon",i.BUG,null,.2,1,O.COMPOUND_EYES,O.NONE,O.SHED_SKIN,270,41,50,60,31,58,30,190,50,54,G.FAST,50,!1),new P(e.RABSCA,9,!1,!1,!1,"Rolling Pokémon",i.BUG,i.PSYCHIC,.3,3.5,O.SYNCHRONIZE,O.NONE,O.TELEPATHY,470,75,50,85,115,100,45,45,50,165,G.FAST,50,!1),new P(e.FLITTLE,9,!1,!1,!1,"Frill Pokémon",i.PSYCHIC,null,.2,1.5,O.ANTICIPATION,O.FRISK,O.SPEED_BOOST,255,30,35,30,55,30,75,120,50,51,G.MEDIUM_SLOW,50,!1),new P(e.ESPATHRA,9,!1,!1,!1,"Ostrich Pokémon",i.PSYCHIC,null,1.9,90,O.OPPORTUNIST,O.FRISK,O.SPEED_BOOST,481,95,60,60,101,60,105,60,50,168,G.MEDIUM_SLOW,50,!1),new P(e.TINKATINK,9,!1,!1,!1,"Metalsmith Pokémon",i.FAIRY,i.STEEL,.4,8.9,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,297,50,45,45,35,64,58,190,50,59,G.MEDIUM_SLOW,0,!1),new P(e.TINKATUFF,9,!1,!1,!1,"Hammer Pokémon",i.FAIRY,i.STEEL,.7,59.1,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,380,65,55,55,45,82,78,90,50,133,G.MEDIUM_SLOW,0,!1),new P(e.TINKATON,9,!1,!1,!1,"Hammer Pokémon",i.FAIRY,i.STEEL,.7,112.8,O.MOLD_BREAKER,O.OWN_TEMPO,O.PICKPOCKET,506,85,75,77,70,105,94,45,50,253,G.MEDIUM_SLOW,0,!1),new P(e.WIGLETT,9,!1,!1,!1,"Garden Eel Pokémon",i.WATER,null,1.2,1.8,O.GOOEY,O.RATTLED,O.SAND_VEIL,245,10,55,25,35,25,95,255,50,49,G.MEDIUM_FAST,50,!1),new P(e.WUGTRIO,9,!1,!1,!1,"Garden Eel Pokémon",i.WATER,null,1.2,5.4,O.GOOEY,O.RATTLED,O.SAND_VEIL,425,35,100,50,50,70,120,50,50,149,G.MEDIUM_FAST,50,!1),new P(e.BOMBIRDIER,9,!1,!1,!1,"Item Drop Pokémon",i.FLYING,i.DARK,1.5,42.9,O.BIG_PECKS,O.KEEN_EYE,O.ROCKY_PAYLOAD,485,70,103,85,60,85,82,25,50,243,G.SLOW,50,!1),new P(e.FINIZEN,9,!1,!1,!1,"Dolphin Pokémon",i.WATER,null,1.3,60.2,O.WATER_VEIL,O.NONE,O.NONE,315,70,45,40,45,40,75,200,50,63,G.SLOW,50,!1),new P(e.PALAFIN,9,!1,!1,!1,"Dolphin Pokémon",i.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.NONE,457,100,70,72,53,62,100,45,50,160,G.SLOW,50,!1,!0,new y("Zero Form","zero",i.WATER,null,1.3,60.2,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,457,100,70,72,53,62,100,45,50,160,!1,null,!0),new y("Hero Form","hero",i.WATER,null,1.8,97.4,O.ZERO_TO_HERO,O.NONE,O.ZERO_TO_HERO,650,100,160,97,106,87,100,45,50,160)),new P(e.VAROOM,9,!1,!1,!1,"Single-Cyl Pokémon",i.STEEL,i.POISON,1,35,O.OVERCOAT,O.NONE,O.SLOW_START,300,45,70,63,30,45,47,190,50,60,G.MEDIUM_FAST,50,!1),new P(e.REVAVROOM,9,!1,!1,!1,"Multi-Cyl Pokémon",i.STEEL,i.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,G.MEDIUM_FAST,50,!1,!1,new y("Normal","",i.STEEL,i.POISON,1.8,120,O.OVERCOAT,O.NONE,O.FILTER,500,80,119,90,54,67,90,75,50,175,!1,null,!0),new y("Segin Starmobile","segin-starmobile",i.STEEL,i.DARK,1.8,240,O.INTIMIDATE,O.NONE,O.INTIMIDATE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new y("Schedar Starmobile","schedar-starmobile",i.STEEL,i.FIRE,1.8,240,O.SPEED_BOOST,O.NONE,O.SPEED_BOOST,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new y("Navi Starmobile","navi-starmobile",i.STEEL,i.POISON,1.8,240,O.TOXIC_DEBRIS,O.NONE,O.TOXIC_DEBRIS,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new y("Ruchbah Starmobile","ruchbah-starmobile",i.STEEL,i.FAIRY,1.8,240,O.MISTY_SURGE,O.NONE,O.MISTY_SURGE,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0),new y("Caph Starmobile","caph-starmobile",i.STEEL,i.FIGHTING,1.8,240,O.STAMINA,O.NONE,O.STAMINA,600,110,129,100,77,79,105,75,50,175,!1,null,!1,!0)),new P(e.CYCLIZAR,9,!1,!1,!1,"Mount Pokémon",i.DRAGON,i.NORMAL,1.6,63,O.SHED_SKIN,O.NONE,O.REGENERATOR,501,70,95,65,85,65,121,190,50,175,G.MEDIUM_SLOW,50,!1),new P(e.ORTHWORM,9,!1,!1,!1,"Earthworm Pokémon",i.STEEL,null,2.5,310,O.EARTH_EATER,O.NONE,O.SAND_VEIL,480,70,85,145,60,55,65,25,50,240,G.SLOW,50,!1),new P(e.GLIMMET,9,!1,!1,!1,"Ore Pokémon",i.ROCK,i.POISON,.7,8,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,350,48,35,42,105,60,60,70,50,70,G.MEDIUM_SLOW,50,!1),new P(e.GLIMMORA,9,!1,!1,!1,"Ore Pokémon",i.ROCK,i.POISON,1.5,45,O.TOXIC_DEBRIS,O.NONE,O.CORROSION,525,83,55,90,130,81,86,25,50,184,G.MEDIUM_SLOW,50,!1),new P(e.GREAVARD,9,!1,!1,!1,"Ghost Dog Pokémon",i.GHOST,null,.6,35,O.PICKUP,O.NONE,O.FLUFFY,290,50,61,60,30,55,34,120,50,58,G.MEDIUM_SLOW,50,!1),new P(e.HOUNDSTONE,9,!1,!1,!1,"Ghost Dog Pokémon",i.GHOST,null,2,15,O.SAND_RUSH,O.NONE,O.FLUFFY,488,72,101,100,50,97,68,60,50,171,G.MEDIUM_SLOW,50,!1),new P(e.FLAMIGO,9,!1,!1,!1,"Synchronize Pokémon",i.FLYING,i.FIGHTING,1.6,37,O.SCRAPPY,O.TANGLED_FEET,O.COSTAR,500,82,115,74,75,64,90,100,50,175,G.MEDIUM_SLOW,50,!1),new P(e.CETODDLE,9,!1,!1,!1,"Terra Whale Pokémon",i.ICE,null,1.2,45,O.THICK_FAT,O.SNOW_CLOAK,O.SHEER_FORCE,334,108,68,45,30,40,43,150,50,67,G.MEDIUM_SLOW,50,!1),new P(e.CETITAN,9,!1,!1,!1,"Terra Whale Pokémon",i.ICE,null,4.5,700,O.THICK_FAT,O.SLUSH_RUSH,O.SHEER_FORCE,521,170,113,65,45,55,73,50,50,182,G.MEDIUM_SLOW,50,!1),new P(e.VELUZA,9,!1,!1,!1,"Jettison Pokémon",i.WATER,i.PSYCHIC,2.5,90,O.MOLD_BREAKER,O.NONE,O.SHARPNESS,478,90,102,73,78,65,70,100,50,167,G.FAST,50,!1),new P(e.DONDOZO,9,!1,!1,!1,"Big Catfish Pokémon",i.WATER,null,12,220,O.UNAWARE,O.OBLIVIOUS,O.WATER_VEIL,530,150,100,115,65,65,35,25,50,265,G.SLOW,50,!1),new P(e.TATSUGIRI,9,!1,!1,!1,"Mimicry Pokémon",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,G.MEDIUM_SLOW,50,!1,!1,new y("Curly Form","curly",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new y("Droopy Form","droopy",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0),new y("Stretchy Form","stretchy",i.DRAGON,i.WATER,.3,8,O.COMMANDER,O.NONE,O.STORM_DRAIN,475,68,50,60,120,95,82,100,50,166,!1,null,!0)),new P(e.ANNIHILAPE,9,!1,!1,!1,"Rage Monkey Pokémon",i.FIGHTING,i.GHOST,1.2,56,O.VITAL_SPIRIT,O.INNER_FOCUS,O.DEFIANT,535,110,115,80,50,90,90,45,50,268,G.MEDIUM_FAST,50,!1),new P(e.CLODSIRE,9,!1,!1,!1,"Spiny Fish Pokémon",i.POISON,i.GROUND,1.8,223,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,430,130,75,60,45,100,20,90,50,151,G.MEDIUM_FAST,50,!1),new P(e.FARIGIRAF,9,!1,!1,!1,"Long Neck Pokémon",i.NORMAL,i.PSYCHIC,3.2,160,O.CUD_CHEW,O.ARMOR_TAIL,O.SAP_SIPPER,520,120,90,70,110,70,60,45,50,260,G.MEDIUM_FAST,50,!1),new P(e.DUDUNSPARCE,9,!1,!1,!1,"Land Snake Pokémon",i.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,G.MEDIUM_FAST,50,!1,!1,new y("Two-Segment Form","two-segment",i.NORMAL,null,3.6,39.2,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182,!1,""),new y("Three-Segment Form","three-segment",i.NORMAL,null,4.5,47.4,O.SERENE_GRACE,O.RUN_AWAY,O.RATTLED,520,125,100,80,85,75,55,45,50,182)),new P(e.KINGAMBIT,9,!1,!1,!1,"Big Blade Pokémon",i.DARK,i.STEEL,2,120,O.DEFIANT,O.SUPREME_OVERLORD,O.PRESSURE,550,100,135,120,60,85,50,25,50,275,G.MEDIUM_FAST,50,!1),new P(e.GREAT_TUSK,9,!1,!1,!1,"Paradox Pokémon",i.GROUND,i.FIGHTING,2.2,320,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,131,131,53,53,87,30,0,285,G.SLOW,null,!1),new P(e.SCREAM_TAIL,9,!1,!1,!1,"Paradox Pokémon",i.FAIRY,i.PSYCHIC,1.2,8,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,115,65,99,65,115,111,50,0,285,G.SLOW,null,!1),new P(e.BRUTE_BONNET,9,!1,!1,!1,"Paradox Pokémon",i.GRASS,i.DARK,1.2,21,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,111,127,99,79,99,55,50,0,285,G.SLOW,null,!1),new P(e.FLUTTER_MANE,9,!1,!1,!1,"Paradox Pokémon",i.GHOST,i.FAIRY,1.4,4,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,55,55,55,135,135,135,30,0,285,G.SLOW,null,!1),new P(e.SLITHER_WING,9,!1,!1,!1,"Paradox Pokémon",i.BUG,i.FIGHTING,3.2,92,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,135,79,85,105,81,30,0,285,G.SLOW,null,!1),new P(e.SANDY_SHOCKS,9,!1,!1,!1,"Paradox Pokémon",i.ELECTRIC,i.GROUND,2.3,60,O.PROTOSYNTHESIS,O.NONE,O.NONE,570,85,81,97,121,85,101,30,0,285,G.SLOW,null,!1),new P(e.IRON_TREADS,9,!1,!1,!1,"Paradox Pokémon",i.GROUND,i.STEEL,.9,240,O.QUARK_DRIVE,O.NONE,O.NONE,570,90,112,120,72,70,106,30,0,285,G.SLOW,null,!1),new P(e.IRON_BUNDLE,9,!1,!1,!1,"Paradox Pokémon",i.ICE,i.WATER,.6,11,O.QUARK_DRIVE,O.NONE,O.NONE,570,56,80,114,124,60,136,50,0,285,G.SLOW,null,!1),new P(e.IRON_HANDS,9,!1,!1,!1,"Paradox Pokémon",i.FIGHTING,i.ELECTRIC,1.8,380.7,O.QUARK_DRIVE,O.NONE,O.NONE,570,154,140,108,50,68,50,50,0,285,G.SLOW,null,!1),new P(e.IRON_JUGULIS,9,!1,!1,!1,"Paradox Pokémon",i.DARK,i.FLYING,1.3,111,O.QUARK_DRIVE,O.NONE,O.NONE,570,94,80,86,122,80,108,30,0,285,G.SLOW,null,!1),new P(e.IRON_MOTH,9,!1,!1,!1,"Paradox Pokémon",i.FIRE,i.POISON,1.2,36,O.QUARK_DRIVE,O.NONE,O.NONE,570,80,70,60,140,110,110,30,0,285,G.SLOW,null,!1),new P(e.IRON_THORNS,9,!1,!1,!1,"Paradox Pokémon",i.ROCK,i.ELECTRIC,1.6,303,O.QUARK_DRIVE,O.NONE,O.NONE,570,100,134,110,70,84,72,30,0,285,G.SLOW,null,!1),new P(e.FRIGIBAX,9,!1,!1,!1,"Ice Fin Pokémon",i.DRAGON,i.ICE,.5,17,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,320,65,75,45,35,45,55,45,50,64,G.SLOW,50,!1),new P(e.ARCTIBAX,9,!1,!1,!1,"Ice Fin Pokémon",i.DRAGON,i.ICE,.8,30,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,423,90,95,66,45,65,62,25,50,148,G.SLOW,50,!1),new P(e.BAXCALIBUR,9,!1,!1,!1,"Ice Dragon Pokémon",i.DRAGON,i.ICE,2.1,210,O.THERMAL_EXCHANGE,O.NONE,O.ICE_BODY,600,115,145,92,75,86,87,10,50,300,G.SLOW,50,!1),new P(e.GIMMIGHOUL,9,!1,!1,!1,"Coin Chest Pokémon",i.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,G.SLOW,null,!1,!1,new y("Chest Form","chest",i.GHOST,null,.3,5,O.RATTLED,O.NONE,O.NONE,300,45,30,70,75,70,10,45,50,60,!1,"",!0),new y("Roaming Form","roaming",i.GHOST,null,.1,1,O.RUN_AWAY,O.NONE,O.NONE,300,45,30,25,75,45,80,45,50,60,!1,null,!0)),new P(e.GHOLDENGO,9,!1,!1,!1,"Coin Entity Pokémon",i.STEEL,i.GHOST,1.2,30,O.GOOD_AS_GOLD,O.NONE,O.NONE,550,87,60,95,133,91,84,45,50,275,G.SLOW,null,!1),new P(e.WO_CHIEN,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.GRASS,1.5,74.2,O.TABLETS_OF_RUIN,O.NONE,O.NONE,570,85,85,100,95,135,70,6,0,285,G.SLOW,null,!1),new P(e.CHIEN_PAO,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.ICE,1.9,152.2,O.SWORD_OF_RUIN,O.NONE,O.NONE,570,80,120,80,90,65,135,6,0,285,G.SLOW,null,!1),new P(e.TING_LU,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.GROUND,2.7,699.7,O.VESSEL_OF_RUIN,O.NONE,O.NONE,570,155,110,125,55,80,45,6,0,285,G.SLOW,null,!1),new P(e.CHI_YU,9,!0,!1,!1,"Ruinous Pokémon",i.DARK,i.FIRE,.4,4.9,O.BEADS_OF_RUIN,O.NONE,O.NONE,570,55,80,80,135,120,100,6,0,285,G.SLOW,null,!1),new P(e.ROARING_MOON,9,!1,!1,!1,"Paradox Pokémon",i.DRAGON,i.DARK,2,380,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,139,71,55,101,119,10,0,295,G.SLOW,null,!1),new P(e.IRON_VALIANT,9,!1,!1,!1,"Paradox Pokémon",i.FAIRY,i.FIGHTING,1.4,35,O.QUARK_DRIVE,O.NONE,O.NONE,590,74,130,90,120,60,116,10,0,295,G.SLOW,null,!1),new P(e.KORAIDON,9,!1,!0,!1,"Paradox Pokémon",i.FIGHTING,i.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,G.SLOW,null,!1,!1,new y("Apex Build","apex-build",i.FIGHTING,i.DRAGON,2.5,303,O.ORICHALCUM_PULSE,O.NONE,O.NONE,670,100,135,115,85,100,135,3,0,335,!1,null,!0)),new P(e.MIRAIDON,9,!1,!0,!1,"Paradox Pokémon",i.ELECTRIC,i.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,G.SLOW,null,!1,!1,new y("Ultimate Mode","ultimate-mode",i.ELECTRIC,i.DRAGON,3.5,240,O.HADRON_ENGINE,O.NONE,O.NONE,670,100,85,100,135,115,135,3,0,335,!1,null,!0)),new P(e.WALKING_WAKE,9,!1,!1,!1,"Paradox Pokémon",i.WATER,i.DRAGON,3.5,280,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,99,83,91,125,83,109,10,0,295,G.SLOW,null,!1),new P(e.IRON_LEAVES,9,!1,!1,!1,"Paradox Pokémon",i.GRASS,i.PSYCHIC,1.5,125,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,130,88,70,108,104,10,0,295,G.SLOW,null,!1),new P(e.DIPPLIN,9,!1,!1,!1,"Candy Apple Pokémon",i.GRASS,i.DRAGON,.4,9.7,O.SUPERSWEET_SYRUP,O.GLUTTONY,O.STICKY_HOLD,485,80,80,110,95,80,40,45,50,170,G.ERRATIC,50,!1),new P(e.POLTCHAGEIST,9,!1,!1,!1,"Matcha Pokémon",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,G.SLOW,null,!1,!1,new y("Counterfeit Form","counterfeit",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!0),new y("Artisan Form","artisan",i.GRASS,i.GHOST,.1,1.1,O.HOSPITALITY,O.NONE,O.HEATPROOF,308,40,45,45,74,54,50,120,50,62,!1,null,!1,!0)),new P(e.SINISTCHA,9,!1,!1,!1,"Matcha Pokémon",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,G.SLOW,null,!1,!1,new y("Unremarkable Form","unremarkable",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178),new y("Masterpiece Form","masterpiece",i.GRASS,i.GHOST,.2,2.2,O.HOSPITALITY,O.NONE,O.HEATPROOF,508,71,60,106,121,80,70,60,50,178,!1,null,!1,!0)),new P(e.OKIDOGI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.FIGHTING,1.8,92.2,O.TOXIC_CHAIN,O.NONE,O.GUARD_DOG,555,88,128,115,58,86,80,3,0,276,G.SLOW,100,!1),new P(e.MUNKIDORI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.PSYCHIC,1,12.2,O.TOXIC_CHAIN,O.NONE,O.FRISK,555,88,75,66,130,90,106,3,0,276,G.SLOW,100,!1),new P(e.FEZANDIPITI,9,!0,!1,!1,"Retainer Pokémon",i.POISON,i.FAIRY,1.4,30.1,O.TOXIC_CHAIN,O.NONE,O.TECHNICIAN,555,88,91,82,70,125,99,3,0,276,G.SLOW,100,!1),new P(e.OGERPON,9,!0,!1,!1,"Mask Pokémon",i.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,G.SLOW,0,!1,!1,new y("Teal Mask","teal-mask",i.GRASS,null,1.2,39.8,O.DEFIANT,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275,!1,null,!0),new y("Wellspring Mask","wellspring-mask",i.GRASS,i.WATER,1.2,39.8,O.WATER_ABSORB,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Hearthflame Mask","hearthflame-mask",i.GRASS,i.FIRE,1.2,39.8,O.MOLD_BREAKER,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Cornerstone Mask","cornerstone-mask",i.GRASS,i.ROCK,1.2,39.8,O.STURDY,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Teal Mask Terastallized","teal-mask-tera",i.GRASS,null,1.2,39.8,O.EMBODY_ASPECT_TEAL,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Wellspring Mask Terastallized","wellspring-mask-tera",i.GRASS,i.WATER,1.2,39.8,O.EMBODY_ASPECT_WELLSPRING,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Hearthflame Mask Terastallized","hearthflame-mask-tera",i.GRASS,i.FIRE,1.2,39.8,O.EMBODY_ASPECT_HEARTHFLAME,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275),new y("Cornerstone Mask Terastallized","cornerstone-mask-tera",i.GRASS,i.ROCK,1.2,39.8,O.EMBODY_ASPECT_CORNERSTONE,O.NONE,O.NONE,550,80,120,84,60,96,110,5,50,275)),new P(e.ARCHALUDON,9,!1,!1,!1,"Alloy Pokémon",i.STEEL,i.DRAGON,2,60,O.STAMINA,O.STURDY,O.STALWART,600,90,105,130,125,65,85,10,50,300,G.MEDIUM_FAST,50,!1),new P(e.HYDRAPPLE,9,!1,!1,!1,"Apple Hydra Pokémon",i.GRASS,i.DRAGON,1.8,93,O.SUPERSWEET_SYRUP,O.REGENERATOR,O.STICKY_HOLD,540,106,80,110,120,80,44,10,50,270,G.ERRATIC,50,!1),new P(e.GOUGING_FIRE,9,!1,!1,!1,"Paradox Pokémon",i.FIRE,i.DRAGON,3.5,590,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,105,115,121,65,93,91,10,0,295,G.SLOW,null,!1),new P(e.RAGING_BOLT,9,!1,!1,!1,"Paradox Pokémon",i.ELECTRIC,i.DRAGON,5.2,480,O.PROTOSYNTHESIS,O.NONE,O.NONE,590,125,73,91,137,89,75,10,0,295,G.SLOW,null,!1),new P(e.IRON_BOULDER,9,!1,!1,!1,"Paradox Pokémon",i.ROCK,i.PSYCHIC,1.5,162.5,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,120,80,68,108,124,10,0,295,G.SLOW,null,!1),new P(e.IRON_CROWN,9,!1,!1,!1,"Paradox Pokémon",i.STEEL,i.PSYCHIC,1.6,156,O.QUARK_DRIVE,O.NONE,O.NONE,590,90,72,100,122,108,98,10,0,295,G.SLOW,null,!1),new P(e.TERAPAGOS,9,!1,!0,!1,"Tera Pokémon",i.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,G.SLOW,50,!1,!1,new y("Normal Form","",i.NORMAL,null,.2,6.5,O.TERA_SHIFT,O.NONE,O.NONE,450,90,65,85,65,85,60,5,50,90,!1,null,!0),new y("Terastal Form","terastal",i.NORMAL,null,.3,16,O.TERA_SHELL,O.NONE,O.NONE,600,95,95,110,105,110,85,5,50,120),new y("Stellar Form","stellar",i.NORMAL,null,1.7,77,O.TERAFORM_ZERO,O.NONE,O.NONE,700,160,105,110,130,110,85,5,50,140)),new P(e.PECHARUNT,9,!1,!1,!0,"Subjugation Pokémon",i.POISON,i.GHOST,.3,.3,O.POISON_PUPPETEER,O.NONE,O.NONE,600,88,88,160,88,88,88,3,0,300,G.SLOW,null,!1),new P(e.ALOLA_RATTATA,7,!1,!1,!1,"Mouse Pokémon",i.DARK,i.NORMAL,.3,3.8,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,253,30,56,35,25,35,72,255,70,51,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_RATICATE,7,!1,!1,!1,"Mouse Pokémon",i.DARK,i.NORMAL,.7,25.5,O.GLUTTONY,O.HUSTLE,O.THICK_FAT,413,75,71,70,40,80,77,127,70,145,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_RAICHU,7,!1,!1,!1,"Mouse Pokémon",i.ELECTRIC,i.PSYCHIC,.7,21,O.SURGE_SURFER,O.NONE,O.NONE,485,60,85,50,95,85,110,75,50,243,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_SANDSHREW,7,!1,!1,!1,"Mouse Pokémon",i.ICE,i.STEEL,.7,40,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,300,50,75,90,10,35,40,255,50,60,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_SANDSLASH,7,!1,!1,!1,"Mouse Pokémon",i.ICE,i.STEEL,1.2,55,O.SNOW_CLOAK,O.NONE,O.SLUSH_RUSH,450,75,100,120,25,65,65,90,50,158,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_VULPIX,7,!1,!1,!1,"Fox Pokémon",i.ICE,null,.6,9.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,299,38,41,40,50,65,65,190,50,60,G.MEDIUM_FAST,25,!1),new P(e.ALOLA_NINETALES,7,!1,!1,!1,"Fox Pokémon",i.ICE,i.FAIRY,1.1,19.9,O.SNOW_CLOAK,O.NONE,O.SNOW_WARNING,505,73,67,75,81,100,109,75,50,177,G.MEDIUM_FAST,25,!1),new P(e.ALOLA_DIGLETT,7,!1,!1,!1,"Mole Pokémon",i.GROUND,i.STEEL,.2,1,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,265,10,55,30,35,45,90,255,50,53,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_DUGTRIO,7,!1,!1,!1,"Mole Pokémon",i.GROUND,i.STEEL,.7,66.6,O.SAND_VEIL,O.TANGLING_HAIR,O.SAND_FORCE,425,35,100,60,50,70,110,50,50,149,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_MEOWTH,7,!1,!1,!1,"Scratch Cat Pokémon",i.DARK,null,.4,4.2,O.PICKUP,O.TECHNICIAN,O.RATTLED,290,40,35,35,50,40,90,255,50,58,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_PERSIAN,7,!1,!1,!1,"Classy Cat Pokémon",i.DARK,null,1.1,33,O.FUR_COAT,O.TECHNICIAN,O.RATTLED,440,65,60,60,75,65,115,90,50,154,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_GEODUDE,7,!1,!1,!1,"Rock Pokémon",i.ROCK,i.ELECTRIC,.4,20.3,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,300,40,80,100,30,30,20,255,70,60,G.MEDIUM_SLOW,50,!1),new P(e.ALOLA_GRAVELER,7,!1,!1,!1,"Rock Pokémon",i.ROCK,i.ELECTRIC,1,110,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,390,55,95,115,45,45,35,120,70,137,G.MEDIUM_SLOW,50,!1),new P(e.ALOLA_GOLEM,7,!1,!1,!1,"Megaton Pokémon",i.ROCK,i.ELECTRIC,1.7,316,O.MAGNET_PULL,O.STURDY,O.GALVANIZE,495,80,120,130,55,65,45,45,70,223,G.MEDIUM_SLOW,50,!1),new P(e.ALOLA_GRIMER,7,!1,!1,!1,"Sludge Pokémon",i.POISON,i.DARK,.7,42,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,325,80,80,50,40,50,25,190,70,65,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_MUK,7,!1,!1,!1,"Sludge Pokémon",i.POISON,i.DARK,1,52,O.POISON_TOUCH,O.GLUTTONY,O.POWER_OF_ALCHEMY,500,105,105,75,65,100,50,75,70,175,G.MEDIUM_FAST,50,!1),new P(e.ALOLA_EXEGGUTOR,7,!1,!1,!1,"Coconut Pokémon",i.GRASS,i.DRAGON,10.9,415.6,O.FRISK,O.NONE,O.HARVEST,530,95,105,85,125,75,45,45,50,186,G.SLOW,50,!1),new P(e.ALOLA_MAROWAK,7,!1,!1,!1,"Bone Keeper Pokémon",i.FIRE,i.GHOST,1,34,O.CURSED_BODY,O.LIGHTNING_ROD,O.ROCK_HEAD,425,60,80,110,50,80,45,75,50,149,G.MEDIUM_FAST,50,!1),new P(e.ETERNAL_FLOETTE,6,!0,!1,!1,"Single Bloom Pokémon",i.FAIRY,null,.2,.9,O.FLOWER_VEIL,O.NONE,O.SYMBIOSIS,551,74,65,67,125,128,92,120,70,243,G.MEDIUM_FAST,0,!1),new P(e.GALAR_MEOWTH,8,!1,!1,!1,"Scratch Cat Pokémon",i.STEEL,null,.4,7.5,O.PICKUP,O.TOUGH_CLAWS,O.UNNERVE,290,50,65,55,40,40,40,255,50,58,G.MEDIUM_FAST,50,!1),new P(e.GALAR_PONYTA,8,!1,!1,!1,"Fire Horse Pokémon",i.PSYCHIC,null,.8,24,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,410,50,85,55,65,65,90,190,50,82,G.MEDIUM_FAST,50,!1),new P(e.GALAR_RAPIDASH,8,!1,!1,!1,"Fire Horse Pokémon",i.PSYCHIC,i.FAIRY,1.7,80,O.RUN_AWAY,O.PASTEL_VEIL,O.ANTICIPATION,500,65,100,70,80,80,105,60,50,175,G.MEDIUM_FAST,50,!1),new P(e.GALAR_SLOWPOKE,8,!1,!1,!1,"Dopey Pokémon",i.PSYCHIC,null,1.2,36,O.GLUTTONY,O.OWN_TEMPO,O.REGENERATOR,315,90,65,65,40,40,15,190,50,63,G.MEDIUM_FAST,50,!1),new P(e.GALAR_SLOWBRO,8,!1,!1,!1,"Hermit Crab Pokémon",i.POISON,i.PSYCHIC,1.6,70.5,O.QUICK_DRAW,O.OWN_TEMPO,O.REGENERATOR,490,95,100,95,100,70,30,75,50,172,G.MEDIUM_FAST,50,!1),new P(e.GALAR_FARFETCHD,8,!1,!1,!1,"Wild Duck Pokémon",i.FIGHTING,null,.8,42,O.STEADFAST,O.NONE,O.SCRAPPY,377,52,95,55,58,62,55,45,50,132,G.MEDIUM_FAST,50,!1),new P(e.GALAR_WEEZING,8,!1,!1,!1,"Poison Gas Pokémon",i.POISON,i.FAIRY,3,16,O.LEVITATE,O.NEUTRALIZING_GAS,O.MISTY_SURGE,490,65,90,120,85,70,60,60,50,172,G.MEDIUM_FAST,50,!1),new P(e.GALAR_MR_MIME,8,!1,!1,!1,"Barrier Pokémon",i.ICE,i.PSYCHIC,1.4,56.8,O.VITAL_SPIRIT,O.SCREEN_CLEANER,O.ICE_BODY,460,50,65,65,90,90,100,45,50,161,G.MEDIUM_FAST,50,!1),new P(e.GALAR_ARTICUNO,8,!0,!1,!1,"Freeze Pokémon",i.PSYCHIC,i.FLYING,1.7,50.9,O.COMPETITIVE,O.NONE,O.NONE,580,90,85,85,125,100,95,3,35,290,G.SLOW,null,!1),new P(e.GALAR_ZAPDOS,8,!0,!1,!1,"Electric Pokémon",i.FIGHTING,i.FLYING,1.6,58.2,O.DEFIANT,O.NONE,O.NONE,580,90,125,90,85,90,100,3,35,290,G.SLOW,null,!1),new P(e.GALAR_MOLTRES,8,!0,!1,!1,"Flame Pokémon",i.DARK,i.FLYING,2,66,O.BERSERK,O.NONE,O.NONE,580,90,85,90,100,125,90,3,35,290,G.SLOW,null,!1),new P(e.GALAR_SLOWKING,8,!1,!1,!1,"Royal Pokémon",i.POISON,i.PSYCHIC,1.8,79.5,O.CURIOUS_MEDICINE,O.OWN_TEMPO,O.REGENERATOR,490,95,65,80,110,110,30,70,50,172,G.MEDIUM_FAST,50,!1),new P(e.GALAR_CORSOLA,8,!1,!1,!1,"Coral Pokémon",i.GHOST,null,.6,.5,O.WEAK_ARMOR,O.NONE,O.CURSED_BODY,410,60,55,100,65,100,30,60,50,144,G.FAST,25,!1),new P(e.GALAR_ZIGZAGOON,8,!1,!1,!1,"Tiny Raccoon Pokémon",i.DARK,i.NORMAL,.4,17.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,240,38,30,41,30,41,60,255,50,56,G.MEDIUM_FAST,50,!1),new P(e.GALAR_LINOONE,8,!1,!1,!1,"Rushing Pokémon",i.DARK,i.NORMAL,.5,32.5,O.PICKUP,O.GLUTTONY,O.QUICK_FEET,420,78,70,61,50,61,100,90,50,147,G.MEDIUM_FAST,50,!1),new P(e.GALAR_DARUMAKA,8,!1,!1,!1,"Zen Charm Pokémon",i.ICE,null,.7,40,O.HUSTLE,O.NONE,O.INNER_FOCUS,315,70,90,45,15,45,50,120,50,63,G.MEDIUM_SLOW,50,!1),new P(e.GALAR_DARMANITAN,8,!1,!1,!1,"Blazing Pokémon",i.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,G.MEDIUM_SLOW,50,!1,!0,new y("Standard Mode","",i.ICE,null,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,480,105,140,55,30,55,95,60,50,168,!1,null,!0),new y("Zen Mode","zen",i.ICE,i.FIRE,1.7,120,O.GORILLA_TACTICS,O.NONE,O.ZEN_MODE,540,105,160,55,30,55,135,60,50,189)),new P(e.GALAR_YAMASK,8,!1,!1,!1,"Spirit Pokémon",i.GROUND,i.GHOST,.5,1.5,O.WANDERING_SPIRIT,O.NONE,O.NONE,303,38,55,85,30,65,30,190,50,61,G.MEDIUM_FAST,50,!1),new P(e.GALAR_STUNFISK,8,!1,!1,!1,"Trap Pokémon",i.GROUND,i.STEEL,.7,20.5,O.MIMICRY,O.NONE,O.NONE,471,109,81,99,66,84,32,75,70,165,G.MEDIUM_FAST,50,!1),new P(e.HISUI_GROWLITHE,8,!1,!1,!1,"Puppy Pokémon",i.FIRE,i.ROCK,.8,22.7,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,350,60,75,45,65,50,55,190,50,70,G.SLOW,75,!1),new P(e.HISUI_ARCANINE,8,!1,!1,!1,"Legendary Pokémon",i.FIRE,i.ROCK,2,168,O.INTIMIDATE,O.FLASH_FIRE,O.ROCK_HEAD,555,95,115,80,95,80,90,85,50,194,G.SLOW,75,!1),new P(e.HISUI_VOLTORB,8,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,i.GRASS,.5,13,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,330,40,30,50,55,55,100,190,80,66,G.MEDIUM_FAST,null,!1),new P(e.HISUI_ELECTRODE,8,!1,!1,!1,"Ball Pokémon",i.ELECTRIC,i.GRASS,1.2,81,O.SOUNDPROOF,O.STATIC,O.AFTERMATH,490,60,50,70,80,80,150,60,70,172,G.MEDIUM_FAST,null,!1),new P(e.HISUI_TYPHLOSION,8,!1,!1,!1,"Volcano Pokémon",i.FIRE,i.GHOST,1.6,69.8,O.BLAZE,O.NONE,O.FRISK,534,73,84,78,119,85,95,45,70,240,G.MEDIUM_SLOW,87.5,!1),new P(e.HISUI_QWILFISH,8,!1,!1,!1,"Balloon Pokémon",i.DARK,i.POISON,.5,3.9,O.POISON_POINT,O.SWIFT_SWIM,O.INTIMIDATE,440,65,95,85,55,55,85,45,50,88,G.MEDIUM_FAST,50,!1),new P(e.HISUI_SNEASEL,8,!1,!1,!1,"Sharp Claw Pokémon",i.FIGHTING,i.POISON,.9,27,O.INNER_FOCUS,O.KEEN_EYE,O.PICKPOCKET,430,55,95,55,35,75,115,60,35,86,G.MEDIUM_SLOW,50,!0),new P(e.HISUI_SAMUROTT,8,!1,!1,!1,"Formidable Pokémon",i.WATER,i.DARK,1.5,58.2,O.TORRENT,O.NONE,O.SHARPNESS,528,90,108,80,100,65,85,45,80,238,G.MEDIUM_SLOW,87.5,!1),new P(e.HISUI_LILLIGANT,8,!1,!1,!1,"Flowering Pokémon",i.GRASS,i.FIGHTING,1.2,19.2,O.CHLOROPHYLL,O.HUSTLE,O.LEAF_GUARD,480,70,105,75,50,75,105,75,50,168,G.MEDIUM_FAST,0,!1),new P(e.HISUI_ZORUA,8,!1,!1,!1,"Tricky Fox Pokémon",i.NORMAL,i.GHOST,.7,12.5,O.ILLUSION,O.NONE,O.NONE,330,35,60,40,85,40,70,75,50,66,G.MEDIUM_SLOW,87.5,!1),new P(e.HISUI_ZOROARK,8,!1,!1,!1,"Illusion Fox Pokémon",i.NORMAL,i.GHOST,1.6,83,O.ILLUSION,O.NONE,O.NONE,510,55,100,60,125,60,110,45,50,179,G.MEDIUM_SLOW,87.5,!1),new P(e.HISUI_BRAVIARY,8,!1,!1,!1,"Valiant Pokémon",i.PSYCHIC,i.FLYING,1.7,43.4,O.KEEN_EYE,O.SHEER_FORCE,O.TINTED_LENS,510,110,83,70,112,70,65,60,50,179,G.SLOW,100,!1),new P(e.HISUI_SLIGGOO,8,!1,!1,!1,"Soft Tissue Pokémon",i.STEEL,i.DRAGON,.7,68.5,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,452,58,75,83,83,113,40,45,35,158,G.SLOW,50,!1),new P(e.HISUI_GOODRA,8,!1,!1,!1,"Dragon Pokémon",i.STEEL,i.DRAGON,1.7,334.1,O.SAP_SIPPER,O.SHELL_ARMOR,O.GOOEY,600,80,100,100,110,150,60,45,35,270,G.SLOW,50,!1),new P(e.HISUI_AVALUGG,8,!1,!1,!1,"Iceberg Pokémon",i.ICE,i.ROCK,1.4,262.4,O.STRONG_JAW,O.ICE_BODY,O.STURDY,514,95,127,184,34,36,38,55,50,180,G.MEDIUM_FAST,50,!1),new P(e.HISUI_DECIDUEYE,8,!1,!1,!1,"Arrow Quill Pokémon",i.GRASS,i.FIGHTING,1.6,37,O.OVERGROW,O.NONE,O.SCRAPPY,530,88,112,80,95,95,60,45,50,239,G.MEDIUM_SLOW,87.5,!1),new P(e.PALDEA_TAUROS,9,!1,!1,!1,"Wild Bull Pokémon",i.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,G.SLOW,100,!1,!1,new y("Combat Breed","combat",i.FIGHTING,null,1.4,115,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,"",!0),new y("Blaze Breed","blaze",i.FIGHTING,i.FIRE,1.4,85,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0),new y("Aqua Breed","aqua",i.FIGHTING,i.WATER,1.4,110,O.INTIMIDATE,O.ANGER_POINT,O.CUD_CHEW,490,75,110,105,30,70,100,45,50,172,!1,null,!0)),new P(e.PALDEA_WOOPER,9,!1,!1,!1,"Water Fish Pokémon",i.POISON,i.GROUND,.4,11,O.POISON_POINT,O.WATER_ABSORB,O.UNAWARE,210,55,45,45,25,25,15,255,50,42,G.MEDIUM_FAST,50,!1),new P(e.BLOODMOON_URSALUNA,9,!0,!1,!1,"Peat Pokémon",i.GROUND,i.NORMAL,2.7,333,O.MINDS_EYE,O.NONE,O.NONE,555,113,70,120,135,65,52,75,50,278,G.MEDIUM_FAST,50,!1))}o(jz,"initSpecies");var LA=(E=>(E[E.DEFAULT=0]="DEFAULT",E[E.FEMALE=1]="FEMALE",E[E.DOUBLE=2]="DOUBLE",E))(LA||{});const ZF=class ZF extends Phaser.GameObjects.Container{constructor(A,s,R,n,I,r){super(a,-72,80),this.originalIndexes={},this.config=tE.hasOwnProperty(A)?tE[A]:tE[c.ACE_TRAINER],r&&(this.config=r),this.variant=s,this.partyTemplateIndex=Math.min(R!==void 0?R:z7(this.config.partyTemplates.map((U,D)=>D)),this.config.partyTemplates.length-1);const L=`trainersCommon:${c[A]}`;if(u.exists(L,{returnObjects:!0})){if(n)this.nameKey=n;else{const U=u.exists(`${L}.MALE`)?s===1?".FEMALE":".MALE":"",D=eE(Object.keys(u.t(`${L}${U}`,{returnObjects:!0})));this.nameKey=`${L}${U}.${D}`}if(this.name=u.t(this.nameKey),s===2)if(this.config.doubleOnly)I?(this.partnerNameKey=I,this.partnerName=u.t(this.partnerNameKey)):[this.name,this.partnerName]=this.name.split(" & ");else{const U=u.exists(`${L}.FEMALE`)?".FEMALE":"",D=eE(Object.keys(u.t(`${L}${U}`,{returnObjects:!0})));this.partnerNameKey=`${L}${U}.${D}`,this.partnerName=u.t(this.partnerNameKey)}}switch(this.variant){case 1:this.config.hasGenders||(s=0);break;case 2:this.config.hasDouble||(s=0);break}Object.keys(Xe)[Object.values(Xe).indexOf(this.getPartyTemplate())];const N=o((U,D)=>{const M=a.addFieldSprite(0,0,this.config.getSpriteKey(s===1||D,this.isDouble()));return M.setOrigin(.5,1),M.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!!U}),M},"getSprite"),l=N(!0),C=N();if(C.setVisible(!1),this.add(l),this.add(C),s===2&&!this.config.doubleOnly){const U=N(!0,!0),D=N(!1,!0);D.setVisible(!1),l.x=-4,C.x=-4,U.x=28,D.x=28,this.add(U),this.add(D)}}getKey(A){return this.config.getSpriteKey(this.variant===1||A,this.isDouble())}getName(A=oe.NONE,s=!1){let R=this.config.getTitle(A,this.variant),n=s&&this.config.title?this.config.title:null;const I=["grunt"];return this.name===""&&I.some(r=>R.toLocaleLowerCase().includes(r))?(n=u.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`),n):(this.name&&(s&&(EO()||sO(),n=u.t(`trainerClasses:${R.toLowerCase().replace(/\s/g,"_")}`)),A?R=A===oe.TRAINER?this.name:this.partnerName||this.name:(R=this.name,this.partnerName&&(R=`${R} & ${this.partnerName}`))),this.config.titleDouble&&this.variant===2&&!this.config.doubleOnly&&(n=this.config.titleDouble,R=u.t(`trainerNames:${this.config.nameDouble.toLowerCase().replace(/\s/g,"_")}`)),n?`${n} ${R}`:R)}isDouble(){return this.config.doubleOnly||this.variant===2}getMixedBattleBgm(){return this.config.mixedBattleBgm}getBattleBgm(){return this.config.battleBgm}getEncounterBgm(){return this.variant?(this.variant===2?this.config.doubleEncounterBgm:this.config.femaleEncounterBgm)||this.config.encounterBgm:this.config.encounterBgm}getEncounterMessages(){return this.variant?(this.variant===2?this.config.doubleEncounterMessages:this.config.femaleEncounterMessages)||this.config.encounterMessages:this.config.encounterMessages}getVictoryMessages(){return this.variant?(this.variant===2?this.config.doubleVictoryMessages:this.config.femaleVictoryMessages)||this.config.victoryMessages:this.config.victoryMessages}getDefeatMessages(){return this.variant?(this.variant===2?this.config.doubleDefeatMessages:this.config.femaleDefeatMessages)||this.config.defeatMessages:this.config.defeatMessages}getPartyTemplate(){return this.config.partyTemplateFunc?this.config.partyTemplateFunc():this.config.partyTemplates[this.partyTemplateIndex]}getPartyLevels(A){const s=[],R=this.getPartyTemplate(),n=a.gameMode.getWaveForDifficulty(A),I=1+n/2+Math.pow(n/25,2);this.isDouble()&&R.size<2&&(R.size=2);for(let r=0;r<R.size;r++){let L=1;const N=R.getStrength(r);switch(N){case Ze.WEAKER:L=.95;break;case Ze.WEAK:L=1;break;case Ze.AVERAGE:L=1.1;break;case Ze.STRONG:L=1.2;break;case Ze.STRONGER:L=1.25;break}let l=0;N<Ze.STRONG&&(L=Math.min(L+.025*Math.floor(n/25),1.2),l=-Math.floor(n/50*(Ze.STRONG-N)));const C=Math.ceil(I*L)+l;s.push(C)}return s}genPartyMember(A){var I;const s=a.currentBattle,R=(I=s.enemyLevels)==null?void 0:I[A];let n;return a.executeWithSeedOffset(()=>{const r=this.getPartyTemplate(),L=r.getStrength(A);if(!(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly)){if(this.config.partyMemberFuncs.hasOwnProperty(A)){n=this.config.partyMemberFuncs[A](R,L);return}if(this.config.partyMemberFuncs.hasOwnProperty(A-r.size)){n=this.config.partyMemberFuncs[A-r.size](R,r.getStrength(A));return}}let N=0;if(r instanceof QA)for(const D of r.templates){if(N+D.size>A)break;N+=D.size}let l=[],C=!1;if(this.config.trainerTypeDouble&&this.isDouble()&&!this.config.doubleOnly){C=!0;const D=ze[c[this.config.trainerTypeDouble]],M=ze[c[this.config.trainerType]],h=s.enemyParty.map(f=>f.species.speciesId),_=M.filter(f=>Array.isArray(f)?!f.some(H=>h.includes(H)):!h.includes(f)).flat(),d=D.filter(f=>Array.isArray(f)?!f.some(H=>h.includes(H)):!h.includes(f)).flat();A%2?A===1&&c[this.config.trainerTypeDouble]===c[c.TATE]?l=[e.SOLROCK]:A===1&&c[this.config.trainerTypeDouble]===c[c.LIZA]?l=[e.LUNATONE]:l=d:A===0&&c[this.config.trainerType]===c[c.TATE]?l=[e.SOLROCK]:A===0&&c[this.config.trainerType]===c[c.LIZA]?l=[e.LUNATONE]:l=_,l.length===0&&(C=!1)}let U=C?$e(l[Math.floor(He(l.length))]):r.isSameSpecies(A)&&A>N?$e(s.enemyParty[N].species.getTrainerSpeciesForLevel(R,!1,r.getStrength(N),a.currentBattle.waveIndex)):this.genNewPartyMemberSpecies(R,L);l&&(U=$e(U.getSpeciesForLevel(R,!0,!0,L,a.currentBattle.waveIndex))),n=a.addEnemyPokemon(U,R,!this.isDouble()||!(A%2)?oe.TRAINER:oe.TRAINER_PARTNER)},this.config.hasStaticParty?this.config.getDerivedType()+(A+1<<8):a.currentBattle.waveIndex+(this.config.getDerivedType()<<10)+((this.config.useSameSeedForAllMembers?0:A)+1<<8)),n}genNewPartyMemberSpecies(A,s,R){const n=a.currentBattle,I=this.getPartyTemplate();let r;if(this.config.speciesPools){const l=He(512);let C=l>=156?ye.COMMON:l>=32?ye.UNCOMMON:l>=6?ye.RARE:l>=1?ye.SUPER_RARE:ye.ULTRA_RARE;for(ye[C];!this.config.speciesPools.hasOwnProperty(C)||!this.config.speciesPools[C].length;)`${ye[C]}${ye[C-1]}`,C--;const U=this.config.speciesPools[C];r=$e(eE(U))}else r=a.randomSpecies(n.waveIndex,A,!1,this.config.speciesFilter);let L=$e(r.getTrainerSpeciesForLevel(A,!0,s,a.currentBattle.waveIndex)),N=!1;if(L.getName(),IA.hasOwnProperty(r.speciesId)&&L.speciesId!==r.speciesId)N=!0;else if(I.isBalanced(n.enemyParty.length)){const l=n.enemyParty.flatMap(C=>C.getTypes(!0));(l.indexOf(L.type1)>-1||L.type2!==null&&l.indexOf(L.type2)>-1)&&(N=!0)}if(!N&&this.config.hasSpecialtyType()&&!L.isOfType(this.config.specialtyType)){N=!0;let l=0;for(;N&&l++<10;)L=$e(r.getTrainerSpeciesForLevel(A,!0,s,a.currentBattle.waveIndex)),L.name,L.isOfType(this.config.specialtyType)&&(N=!1)}return this.checkDuplicateSpecies(r.speciesId)&&(N=!0),N&&(R??0)<10&&(L=this.genNewPartyMemberSpecies(A,s,(R??0)+1)),L}checkDuplicateSpecies(A){const s=(ze[c[this.config.trainerType]]??[]).flat(1).map(n=>{let I=n;for(;IA.hasOwnProperty(I);)I=IA[I];return I});return a.getEnemyParty().map(n=>n.species.getRootSpeciesId()).includes(A)||s.includes(A)}getPartyMemberMatchupScores(A=oe.NONE,s=!1){A&&!this.isDouble()&&(A=oe.NONE);const R=a.getEnemyParty();return R.slice(a.currentBattle.getBattlerCount()).filter(r=>r.isAllowedInBattle()).filter(r=>!A||r.trainerSlot===A).map(r=>{const L=a.getPlayerField().filter(l=>l.isAllowedInBattle());let N=0;if(L.length>0){for(const l of L)N+=r.getMatchupScore(l),l.species.legendary&&(N/=2);N/=L.length,s&&!r.isOnField()&&a.arena.findTagsOnSide(l=>l instanceof lO,Dt.ENEMY).map(l=>N*=l.getMatchupScoreMultiplier(r))}return[R.indexOf(r),N]})}getSortedPartyMemberMatchupScores(A=this.getPartyMemberMatchupScores()){const s=A.slice(0);return s.sort((R,n)=>{const I=R[1],r=n[1];return I<r?1:I>r?-1:0}),s}getNextSummonIndex(A=oe.NONE,s=this.getPartyMemberMatchupScores(A)){A&&!this.isDouble()&&(A=oe.NONE);const R=this.getSortedPartyMemberMatchupScores(s),n=s.filter(I=>I[1]===R[0][1]).map(I=>I[0]);if(n.length>1){let I;return a.executeWithSeedOffset(()=>I=He(n.length),a.currentBattle.turn<<2),n[I]}return n[0]}getPartyMemberModifierChanceMultiplier(A){switch(this.getPartyTemplate().getStrength(A)){case Ze.WEAKER:return .75;case Ze.WEAK:return .675;case Ze.AVERAGE:return .5625;case Ze.STRONG:return .45;case Ze.STRONGER:return .375;default:return console.warn("getPartyMemberModifierChanceMultiplier not defined. Using default 0"),0}}genModifiers(A){return this.config.genModifiersFunc?this.config.genModifiersFunc(A):[]}genAI(A){this.config.genAIFuncs&&this.config.genAIFuncs.forEach(s=>s(A))}loadAssets(){return this.config.loadAssets(this.variant)}initSprite(){this.getSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0)),this.getTintSprites().map((A,s)=>A.setTexture(this.getKey(!!s)).setFrame(0))}tryPlaySprite(A,s,R){return A.texture.key==="__MISSING"?(console.error(`No texture found for '${R.key}'!`),!1):A.texture.frameTotal<=1?(console.warn(`No animation found for '${R.key}'. Is this intentional?`),!1):(A.play(R),s.play(R),!0)}playAnim(){const A={key:this.getKey(),repeat:0,startFrame:0},s=this.getSprites(),R=this.getTintSprites();if(this.tryPlaySprite(s[0],R[0],A),this.variant===2&&!this.config.doubleOnly){const n={key:this.getKey(!0),repeat:0,startFrame:0};this.tryPlaySprite(s[1],R[1],n)}}getSprites(){const A=[this.getAt(0)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(2)),A}getTintSprites(){const A=[this.getAt(1)];return this.variant===2&&!this.config.doubleOnly&&A.push(this.getAt(3)),A}tint(A,s,R,n){this.getTintSprites().map(r=>{r.setTintFill(A),r.setVisible(!0),R?(r.setAlpha(0),a.tweens.add({targets:r,alpha:s||1,duration:R,ease:n||"Linear"})):r.setAlpha(s)})}untint(A,s){this.getTintSprites().map(n=>{A?a.tweens.add({targets:n,alpha:0,duration:A,ease:s||"Linear",onComplete:o(()=>{n.setVisible(!1),n.setAlpha(1)},"onComplete")}):(n.setVisible(!1),n.setAlpha(1))})}shouldTera(A){return!!(this.config.trainerAI.teraMode===nr.INSTANT_TERA&&!A.isTerastallized&&this.config.trainerAI.instantTeras.includes(A.initialTeamIndex))}};o(ZF,"Trainer");let ps=ZF;var aE=(E=>(E[E.TOWN_YOUNGSTER=5]="TOWN_YOUNGSTER",E[E.RIVAL_1=8]="RIVAL_1",E[E.RIVAL_2=25]="RIVAL_2",E[E.EVIL_GRUNT_1=35]="EVIL_GRUNT_1",E[E.RIVAL_3=55]="RIVAL_3",E[E.EVIL_GRUNT_2=62]="EVIL_GRUNT_2",E[E.EVIL_GRUNT_3=64]="EVIL_GRUNT_3",E[E.EVIL_ADMIN_1=66]="EVIL_ADMIN_1",E[E.RIVAL_4=95]="RIVAL_4",E[E.EVIL_GRUNT_4=112]="EVIL_GRUNT_4",E[E.EVIL_ADMIN_2=114]="EVIL_ADMIN_2",E[E.EVIL_BOSS_1=115]="EVIL_BOSS_1",E[E.RIVAL_5=145]="RIVAL_5",E[E.EVIL_BOSS_2=165]="EVIL_BOSS_2",E[E.ELITE_FOUR_1=182]="ELITE_FOUR_1",E[E.ELITE_FOUR_2=184]="ELITE_FOUR_2",E[E.ELITE_FOUR_3=186]="ELITE_FOUR_3",E[E.ELITE_FOUR_4=188]="ELITE_FOUR_4",E[E.CHAMPION=190]="CHAMPION",E[E.RIVAL_6=195]="RIVAL_6",E))(aE||{}),Ht=(E=>(E[E.WILD=0]="WILD",E[E.TRAINER=1]="TRAINER",E[E.CLEAR=2]="CLEAR",E[E.MYSTERY_ENCOUNTER=3]="MYSTERY_ENCOUNTER",E))(Ht||{}),Wt=(E=>(E[E.ATTACKER=-1]="ATTACKER",E[E.PLAYER=0]="PLAYER",E[E.PLAYER_2=1]="PLAYER_2",E[E.ENEMY=2]="ENEMY",E[E.ENEMY_2=3]="ENEMY_2",E))(Wt||{});const XF=class XF{constructor(A,s,R,n,I=!1){this.enemyParty=[],this.seenEnemyPartyMemberIds=new Set,this.started=!1,this.enemySwitchCounter=0,this.turn=0,this.playerParticipantIds=new Set,this.battleScore=0,this.postBattleLoot=[],this.escapeAttempts=0,this.battleSeed=v0(16,!0),this.battleSeedState=null,this.moneyScattered=0,this.lastUsedPokeball=null,this.enemyFaints=0,this.playerFaintsHistory=[],this.enemyFaintsHistory=[],this.rngCounter=0,this.gameMode=A,this.waveIndex=s,this.battleType=R,this.trainer=n??null,this.initBattleSpec(),this.enemyLevels=R!==1?new Array(I?2:1).fill(null).map(()=>this.getLevelForWave()):n==null?void 0:n.getPartyLevels(this.waveIndex),this.double=I}initBattleSpec(){let A=DE.DEFAULT;this.gameMode.isWaveFinal(this.waveIndex)&&this.gameMode.isClassic&&(A=DE.FINAL_BOSS),this.battleSpec=A}getLevelForWave(){const A=this.gameMode.getWaveForDifficulty(this.waveIndex),s=1+A/2+Math.pow(A/25,2),R=1.2;if(this.gameMode.isBoss(this.waveIndex)){const r=Math.floor(s*R);if(this.battleSpec===DE.FINAL_BOSS||!(this.waveIndex%250))return Math.ceil(r/25)*25;let L=0;return this.gameMode.isWaveFinal(this.waveIndex)||(L=Math.round(Phaser.Math.RND.realInRange(-1,1)*Math.floor(A/10))),r+L}let n=0;const I=10/A;return n=Math.abs(this.randSeedGaussForLevel(I)),Math.max(Math.round(s+n),1)}randSeedGaussForLevel(A){let s=0;for(let R=A;R>0;R--)s+=Phaser.Math.RND.realInRange(0,1);return s/A}getBattlerCount(){return this.double?2:1}incrementTurn(){this.turn++,this.turnCommands=Object.fromEntries(dE(Wt).map(A=>[A,null])),this.preTurnCommands=Object.fromEntries(dE(Wt).map(A=>[A,null])),this.battleSeedState=null}addParticipant(A){this.playerParticipantIds.add(A.id)}removeFaintedParticipant(A){this.playerParticipantIds.delete(A.id)}addPostBattleLoot(A){this.postBattleLoot.push(...a.findModifiers(s=>s instanceof Ft&&s.pokemonId===A.id&&s.isTransferable,!1).map(s=>{const R=s;return R.pokemonId=null,R}))}pickUpScatteredMoney(){const A=new je(a.currentBattle.moneyScattered);a.applyModifiers(CO,!0,A),a.arena.getTag(Fe.HAPPY_HOUR)&&(A.value*=2),a.addMoney(A.value);const s=navigator.language||"en-US",R=A.value.toLocaleString(s),n=u.t("battle:moneyPickedUp",{moneyAmount:R});a.queueMessage(n,void 0,!0),a.currentBattle.moneyScattered=0}addBattleScore(){let A=a.getEnemyParty().length/2+.5;this.double&&(A/=1.5);for(const n of a.getEnemyParty())n.isBoss()&&(A*=n.bossSegments/1.5/a.getEnemyParty().length);const s=Phaser.Tweens.Builders.GetEaseFunction("Sine.easeIn")(1-Math.min(this.turn-2,10*A)/(10*A)),R=Math.ceil(this.battleScore*s);a.score+=R,`${R}`,this.turn-1,Math.floor(s*100)/100,`${a.score}`,a.updateScoreText()}getBgmOverride(){var s,R,n,I,r,L,N,l;if(this.isBattleMysteryEncounter()&&((s=this.mysteryEncounter)==null?void 0:s.encounterMode)===PE.DEFAULT)return null;if(this.battleType===1||((R=this.mysteryEncounter)==null?void 0:R.encounterMode)===PE.TRAINER_BATTLE)return!this.started&&((n=this.trainer)!=null&&n.config.encounterBgm)&&((r=(I=this.trainer)==null?void 0:I.getEncounterMessages())!=null&&r.length)?`encounter_${(L=this.trainer)==null?void 0:L.getEncounterBgm()}`:a.musicPreference===Gr.GENFIVE?((N=this.trainer)==null?void 0:N.getBattleBgm())??null:((l=this.trainer)==null?void 0:l.getMixedBattleBgm())??null;if(this.gameMode.isClassic&&this.waveIndex>195&&this.battleSpec!==DE.FINAL_BOSS)return"end_summit";const A=a.getEnemyParty();for(const C of A){if(this.battleSpec===DE.FINAL_BOSS)return C.species.getFormSpriteKey(C.formIndex)===Me.ETERNAMAX?"battle_final":"battle_final_encounter";if(C.species.legendary||C.species.subLegendary||C.species.mythical){if(a.musicPreference===Gr.GENFIVE)switch(C.species.speciesId){case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g5";case e.KYUREM:return"battle_legendary_kyurem";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}if(a.musicPreference===Gr.ALLGENS)switch(C.species.speciesId){case e.ARTICUNO:case e.ZAPDOS:case e.MOLTRES:case e.MEWTWO:case e.MEW:return"battle_legendary_kanto";case e.RAIKOU:return"battle_legendary_raikou";case e.ENTEI:return"battle_legendary_entei";case e.SUICUNE:return"battle_legendary_suicune";case e.LUGIA:return"battle_legendary_lugia";case e.HO_OH:return"battle_legendary_ho_oh";case e.REGIROCK:case e.REGICE:case e.REGISTEEL:case e.REGIGIGAS:case e.REGIDRAGO:case e.REGIELEKI:return"battle_legendary_regis_g6";case e.GROUDON:case e.KYOGRE:return"battle_legendary_gro_kyo";case e.RAYQUAZA:return"battle_legendary_rayquaza";case e.DEOXYS:return"battle_legendary_deoxys";case e.UXIE:case e.MESPRIT:case e.AZELF:return"battle_legendary_lake_trio";case e.HEATRAN:case e.CRESSELIA:case e.DARKRAI:case e.SHAYMIN:return"battle_legendary_sinnoh";case e.DIALGA:case e.PALKIA:return C.species.getFormSpriteKey(C.formIndex)===Me.ORIGIN?"battle_legendary_origin_forme":"battle_legendary_dia_pal";case e.GIRATINA:return"battle_legendary_giratina";case e.ARCEUS:return"battle_legendary_arceus";case e.COBALION:case e.TERRAKION:case e.VIRIZION:case e.KELDEO:case e.TORNADUS:case e.LANDORUS:case e.THUNDURUS:case e.MELOETTA:case e.GENESECT:return"battle_legendary_unova";case e.KYUREM:return"battle_legendary_kyurem";case e.XERNEAS:case e.YVELTAL:case e.ZYGARDE:return"battle_legendary_xern_yvel";case e.TAPU_KOKO:case e.TAPU_LELE:case e.TAPU_BULU:case e.TAPU_FINI:return"battle_legendary_tapu";case e.SOLGALEO:case e.LUNALA:return"battle_legendary_sol_lun";case e.NECROZMA:switch(C.getFormKey()){case"dusk-mane":case"dawn-wings":return"battle_legendary_dusk_dawn";case"ultra":return"battle_legendary_ultra_nec";default:return"battle_legendary_sol_lun"}case e.NIHILEGO:case e.PHEROMOSA:case e.BUZZWOLE:case e.XURKITREE:case e.CELESTEELA:case e.KARTANA:case e.GUZZLORD:case e.POIPOLE:case e.NAGANADEL:case e.STAKATAKA:case e.BLACEPHALON:return"battle_legendary_ub";case e.ZACIAN:case e.ZAMAZENTA:return"battle_legendary_zac_zam";case e.GLASTRIER:case e.SPECTRIER:return"battle_legendary_glas_spec";case e.CALYREX:return C.getFormKey()==="ice"||C.getFormKey()==="shadow"?"battle_legendary_riders":"battle_legendary_calyrex";case e.GALAR_ARTICUNO:case e.GALAR_ZAPDOS:case e.GALAR_MOLTRES:return"battle_legendary_birds_galar";case e.WO_CHIEN:case e.CHIEN_PAO:case e.TING_LU:case e.CHI_YU:return"battle_legendary_ruinous";case e.KORAIDON:case e.MIRAIDON:return"battle_legendary_kor_mir";case e.OKIDOGI:case e.MUNKIDORI:case e.FEZANDIPITI:return"battle_legendary_loyal_three";case e.OGERPON:return"battle_legendary_ogerpon";case e.TERAPAGOS:return"battle_legendary_terapagos";case e.PECHARUNT:return"battle_legendary_pecharunt";default:return C.species.legendary?"battle_legendary_res_zek":"battle_legendary_unova"}}}return a.gameMode.isClassic&&this.waveIndex<=4?"battle_wild":null}randSeedInt(A,s=0){if(A<=1)return s;const R=a.rngCounter,n=a.rngSeedOverride,I=Phaser.Math.RND.state();this.battleSeedState?Phaser.Math.RND.state(this.battleSeedState):(Phaser.Math.RND.sow([kc(this.battleSeed,this.turn<<6)]),this.battleSeed),a.rngCounter=this.rngCounter++,a.rngSeedOverride=this.battleSeed;const r=He(A,s);return this.battleSeedState=Phaser.Math.RND.state(),Phaser.Math.RND.state(I),a.rngCounter=R,a.rngSeedOverride=n,r}isBattleMysteryEncounter(){return this.battleType===3}};o(XF,"Battle");let QP=XF;const QF=class QF{setBattleType(A){return this.battleType=A,this}setDouble(A){return this.double=A,this}setGetTrainerFunc(A){return this.getTrainer=A,this}setGetEnemyPartyFunc(A){return this.getEnemyParty=A,this}setSeedOffsetWave(A){return this.seedOffsetWaveIndex=A,this}setCustomModifierRewards(A){return this.customModifierRewardSettings=A,this}};o(QF,"FixedBattleConfig");let BE=QF;function Xs(E,A=!1,s=0){return()=>{const R=He(E.length),n=[];a.executeWithSeedOffset(()=>{for(const N of E){const l=Array.isArray(N)?eE(N):N;n.push(l)}},s);let I=LA.DEFAULT;A&&(I=YA(2)===0?LA.FEMALE:LA.DEFAULT);const L=[c.ROCKET_GRUNT,c.MAGMA_GRUNT,c.AQUA_GRUNT,c.GALACTIC_GRUNT,c.PLASMA_GRUNT,c.FLARE_GRUNT,c.AETHER_GRUNT,c.SKULL_GRUNT,c.MACRO_GRUNT,c.STAR_GRUNT].includes(n[R]);return tE[n[R]].hasDouble&&L?new ps(n[R],YA(3)===0?LA.DOUBLE:I):new ps(n[R],I)}}o(Xs,"getRandomTrainerFunc");const b8={5:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.YOUNGSTER,He(2)?LA.FEMALE:LA.DEFAULT)),8:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)),25:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL_2,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[V.ULTRA,V.GREAT,V.GREAT],allowLuckUpgrades:!1}),35:new BE().setBattleType(1).setGetTrainerFunc(Xs([c.ROCKET_GRUNT,c.MAGMA_GRUNT,c.AQUA_GRUNT,c.GALACTIC_GRUNT,c.PLASMA_GRUNT,c.FLARE_GRUNT,c.AETHER_GRUNT,c.SKULL_GRUNT,c.MACRO_GRUNT,c.STAR_GRUNT],!0)),55:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL_3,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[V.ULTRA,V.ULTRA,V.GREAT,V.GREAT],allowLuckUpgrades:!1}),62:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([c.ROCKET_GRUNT,c.MAGMA_GRUNT,c.AQUA_GRUNT,c.GALACTIC_GRUNT,c.PLASMA_GRUNT,c.FLARE_GRUNT,c.AETHER_GRUNT,c.SKULL_GRUNT,c.MACRO_GRUNT,c.STAR_GRUNT],!0)),64:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([c.ROCKET_GRUNT,c.MAGMA_GRUNT,c.AQUA_GRUNT,c.GALACTIC_GRUNT,c.PLASMA_GRUNT,c.FLARE_GRUNT,c.AETHER_GRUNT,c.SKULL_GRUNT,c.MACRO_GRUNT,c.STAR_GRUNT],!0)),66:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([[c.ARCHER,c.ARIANA,c.PROTON,c.PETREL],[c.TABITHA,c.COURTNEY],[c.MATT,c.SHELLY],[c.JUPITER,c.MARS,c.SATURN],[c.ZINZOLIN,c.COLRESS],[c.XEROSIC,c.BRYONY],c.FABA,c.PLUMERIA,c.OLEANA,[c.GIACOMO,c.MELA,c.ATTICUS,c.ORTEGA,c.ERI]],!0)),95:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL_4,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[V.ULTRA,V.ULTRA,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),112:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([c.ROCKET_GRUNT,c.MAGMA_GRUNT,c.AQUA_GRUNT,c.GALACTIC_GRUNT,c.PLASMA_GRUNT,c.FLARE_GRUNT,c.AETHER_GRUNT,c.SKULL_GRUNT,c.MACRO_GRUNT,c.STAR_GRUNT],!0)),114:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([[c.ARCHER,c.ARIANA,c.PROTON,c.PETREL],[c.TABITHA,c.COURTNEY],[c.MATT,c.SHELLY],[c.JUPITER,c.MARS,c.SATURN],[c.ZINZOLIN,c.COLRESS],[c.XEROSIC,c.BRYONY],c.FABA,c.PLUMERIA,c.OLEANA,[c.GIACOMO,c.MELA,c.ATTICUS,c.ORTEGA,c.ERI]],!0,1)),115:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([c.ROCKET_BOSS_GIOVANNI_1,c.MAXIE,c.ARCHIE,c.CYRUS,c.GHETSIS,c.LYSANDRE,c.LUSAMINE,c.GUZMA,c.ROSE,c.PENNY])).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),145:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL_5,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),165:new BE().setBattleType(1).setSeedOffsetWave(35).setGetTrainerFunc(Xs([c.ROCKET_BOSS_GIOVANNI_2,c.MAXIE_2,c.ARCHIE_2,c.CYRUS_2,c.GHETSIS_2,c.LYSANDRE_2,c.LUSAMINE_2,c.GUZMA_2,c.ROSE_2,c.PENNY_2])).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.ULTRA,V.ULTRA],allowLuckUpgrades:!1}),182:new BE().setBattleType(1).setGetTrainerFunc(Xs([c.LORELEI,c.WILL,c.SIDNEY,c.AARON,c.SHAUNTAL,c.MALVA,[c.HALA,c.MOLAYNE],c.MARNIE_ELITE,c.RIKA,c.CRISPIN])),184:new BE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(Xs([c.BRUNO,c.KOGA,c.PHOEBE,c.BERTHA,c.MARSHAL,c.SIEBOLD,c.OLIVIA,c.NESSA_ELITE,c.POPPY,c.AMARYS])),186:new BE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(Xs([c.AGATHA,c.BRUNO,c.GLACIA,c.FLINT,c.GRIMSLEY,c.WIKSTROM,c.ACEROLA,[c.BEA_ELITE,c.ALLISTER_ELITE],c.LARRY_ELITE,c.LACEY])),188:new BE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(Xs([c.LANCE,c.KAREN,c.DRAKE,c.LUCIAN,c.CAITLIN,c.DRASNA,c.KAHILI,c.RAIHAN_ELITE,c.HASSEL,c.DRAYTON])),190:new BE().setBattleType(1).setSeedOffsetWave(182).setGetTrainerFunc(Xs([c.BLUE,[c.RED,c.LANCE_CHAMPION],[c.STEVEN,c.WALLACE],c.CYNTHIA,[c.ALDER,c.IRIS],c.DIANTHA,[c.KUKUI,c.HAU],[c.LEON,c.MUSTARD],[c.GEETA,c.NEMONA],c.KIERAN])),195:new BE().setBattleType(1).setGetTrainerFunc(()=>new ps(c.RIVAL_6,a.gameData.gender===Jt.MALE?LA.FEMALE:LA.DEFAULT)).setCustomModifierRewards({guaranteedModifierTiers:[V.ROGUE,V.ROGUE,V.ULTRA,V.ULTRA,V.GREAT,V.GREAT],allowLuckUpgrades:!1})};var kA=(E=>(E[E.PRE_APPLY=0]="PRE_APPLY",E[E.POST_APPLY=1]="POST_APPLY",E[E.HIT=2]="HIT",E[E.POST_TARGET=3]="POST_TARGET",E))(kA||{});const d0=class d0 extends ns{constructor(A,s,R,n=!1){if(super(A),this.reflected=!1,this.move=R,this.reflected=n,s.includes(A)&&this.move.getMove().moveTarget===De.ALL_NEAR_OTHERS){const I=s.indexOf(A);s.splice(I,I+1)}this.targets=s}start(){var D,M,h,_,d,f,H,B;super.start();const A=this.getUserPokemon(),s=this.getTargets();if(!A)return super.end();A.isPlayer()?a.currentBattle.lastPlayerInvolved=this.fieldIndex:a.currentBattle.lastEnemyInvolved=this.fieldIndex;const R=this.move.getMove().hasAttr(Kn);if(!A.isOnField())if(R){if(!A.scene)return super.end();Pe(A.turnData)&&A.resetTurnData()}else return super.end();const n=new Pt(!1),I=this.move.getMove();if(dA(Ai,A,this.getFirstTarget()??null,I,n,this.move.virtual),n.value)return this.end();if(A.lapseTags(As.MOVE_EFFECT),A.turnData.hitsLeft===0&&A.turnData.hitCount>0&&A.turnData.extraTurns>0&&(A.turnData.hitsLeft=-1,A.turnData.hitCount=0,A.turnData.extraTurns--),A.turnData.hitsLeft===-1){const K=new je(1);dA(CA,A,this.getFirstTarget()??null,I,K),An(kS,A,null,I,!1,K,null),a.applyModifiers(Ta,A.isPlayer(),A,I.id,K),A.turnData.hitCount=K.value,A.turnData.hitsLeft=K.value}const r={move:this.move.moveId,targets:this.targets,result:DA.PENDING,virtual:this.move.virtual},L=Object.fromEntries(s.map(K=>[K.getBattlerIndex(),this.hitCheck(K)])),N=s.some(K=>K.isActive(!0)),l=((D=s[0])==null?void 0:D.hasAbilityWithAttr(PO))&&((d=(_=(h=(M=s[0])==null?void 0:M.getAbility())==null?void 0:h.getAttrs(PO))==null?void 0:_[0])==null?void 0:d.getImmuneType())===A.getMoveType(I)&&!((f=s[0])!=null&&f.getTag(Ra)),C=I.hasFlag(ct.REFLECTABLE)&&!this.reflected&&s.some(K=>K.hasAbilityWithAttr(Qi)||!!K.getTag(w.MAGIC_COAT));if(!N||!C&&!I.hasAttr(mI)&&!I.isMultiTarget()&&!L[this.targets[0]]&&!s[0].getTag(ei)&&!l)return this.stopMultiHit(),N?(a.queueMessage(u.t("battle:attackMissed",{pokemonNameWithAffix:this.getFirstTarget()?ee(this.getFirstTarget()):""})),r.result=DA.MISS,dA(cO,A,null,this.move.getMove())):(a.queueMessage(u.t("battle:attackFailed")),r.result=DA.FAIL),A.pushMoveHistory(r),this.end();const U=((B=(H=a.currentBattle)==null?void 0:H.mysteryEncounter)==null?void 0:B.hasBattleAnimationsWithoutTargets)??!1;new mD(I.id,A,this.getFirstTarget().getBattlerIndex(),U).play(I.hitsSubstitute(A,this.getFirstTarget()),()=>{var z,q,J,Ae,Q,Re,W;let K=!1;const Y=I.moveTarget!==De.ENEMY_SIDE?s:(()=>{const ie=s.filter(Be=>Be.getTag(w.MAGIC_COAT)||Be.hasAbilityWithAttr(Qi));return!C||ie.length===0?[s[0]]:[ie[0]]})(),v=[];for(const ie of Y){const Be=ie.isPlayer()?Dt.PLAYER:Dt.ENEMY,he=new Pt(!1),ve=new Pt(!1);this.move.getMove().isAllyTarget()||a.arena.applyTagsForSide(DI,Be,!1,he,A,ie,I.id,ve);const _e=![De.ENEMY_SIDE,De.BOTH_SIDES].includes(this.move.getMove().moveTarget)&&(ve.value||!this.move.getMove().doesFlagEffectApply({flag:ct.IGNORE_PROTECT,user:A,target:ie}))&&(he.value||!ie.findTags(pt=>pt instanceof aL).length&&ie.findTags(pt=>pt instanceof ei).find(pt=>ie.lapseTag(pt.tagType))||this.move.getMove().category!==g.STATUS&&ie.findTags(pt=>pt instanceof aL).find(pt=>ie.lapseTag(pt.tagType))),Le=a.currentBattle.double&&((q=(z=ie.getAlly())==null?void 0:z.getTag(w.COMMANDED))==null?void 0:q.getSourcePokemon())===ie,Ee=!!ie.getTag(w.MAGIC_COAT),se=!Ee&&!I.doesFlagEffectApply({flag:ct.IGNORE_ABILITIES,user:A,target:ie})&&ie.hasAbilityWithAttr(Qi),Ne=ie.getTag(Ra),Ue=!_e&&!this.reflected&&!Le&&I.hasFlag(ct.REFLECTABLE)&&(Ee||se)&&!Ne;if(!ie.switchOutStatus&&Ue){const pt=I.isMultiTarget()?Fn(ie,I.id).targets:[A.getBattlerIndex()];Ee||(v.push(new eU(ie.getBattlerIndex(),ie.getPassiveAbility().hasAttr(Qi))),v.push(new eL)),v.push(new _A(ie,pt,new Lt(I.id,0,0,!0),!0,!0,!0));continue}const me=ie.hasAbilityWithAttr(PO)&&((Q=(Ae=(J=ie.getAbility())==null?void 0:J.getAttrs(PO))==null?void 0:Ae[0])==null?void 0:Q.getImmuneType())===A.getMoveType(I)&&!Ne;if(ie.switchOutStatus||Le||!me&&!_e&&!L[ie.getBattlerIndex()]){this.stopMultiHit(ie),ie.switchOutStatus||a.queueMessage(u.t("battle:attackMissed",{pokemonNameWithAffix:ee(ie)})),r.result===DA.PENDING&&(r.result=DA.MISS),A.pushMoveHistory(r),dA(cO,A,null,I);continue}const st=A.turnData.hitsLeft===A.turnData.hitCount;st&&A.pushMoveHistory(r),r.result=DA.SUCCESS;const Ct=_e?yt.NO_EFFECT:ie.apply(A,I),tt=[yt.EFFECTIVE,yt.SUPER_EFFECTIVE,yt.NOT_VERY_EFFECTIVE,yt.ONE_HIT_KO].includes(Ct),ft=tt&&!K;ft&&(K=!0),Ct===yt.NO_EFFECT&&(r.result=DA.FAIL);const Xt=A.turnData.hitsLeft===1||!((Re=this.getFirstTarget())!=null&&Re.isActive());Xt&&(a.triggerPokemonFormChange(A,zT),A.turnData.hitCount>1&&bf(nL,ie,0,ie.hasPassive(),!1,[],A)),yL(pt=>pt instanceof dt&&pt.trigger===kA.PRE_APPLY&&(!pt.firstHitOnly||st)&&(!pt.lastHitOnly||Xt)&&Ct!==yt.NO_EFFECT,A,ie,I),Ct!==yt.FAIL&&(this.applySelfTargetEffects(A,ie,st,Xt),Ct!==yt.NO_EFFECT?(this.applyPostApplyEffects(A,ie,st,Xt),this.applyHeldItemFlinchCheck(A,ie,tt),this.applySuccessfulAttackEffects(A,ie,st,Xt,!!_e,Ct,ft)):dA(XO,A,null,I))}v.length&&a.appendToPhase(v,QR),(A.turnData.hitsLeft===1||!((W=this.getFirstTarget())!=null&&W.isActive()))&&yL(ie=>ie instanceof dt&&ie.trigger===kA.POST_TARGET,A,null,I),s.forEach(ie=>{const Be=ie.getTag(xE);Be&&Be.hp<=0&&ie.lapseTag(w.SUBSTITUTE)});const Z=A.getMoveType(I,!0);I.category!==g.STATUS&&!A.stellarTypesBoosted.includes(Z)&&A.stellarTypesBoosted.push(Z),this.end()})}end(){var s;const A=this.getUserPokemon();if(A)if(A.turnData.hitsLeft&&--A.turnData.hitsLeft>=1&&((s=this.getFirstTarget())!=null&&s.isActive()))a.unshiftPhase(this.getNewHitPhase());else{const R=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0);(R>1||A.turnData.hitsLeft&&A.turnData.hitsLeft>0)&&a.queueMessage(u.t("battle:attackHitsCount",{count:R})),a.applyModifiers(WI,this.player,A),this.getTargets().forEach(n=>n.turnData.moveEffectiveness=null)}super.end()}applySelfTargetEffects(A,s,R,n){yL(I=>I instanceof dt&&I.trigger===kA.POST_APPLY&&I.selfTarget&&(!I.firstHitOnly||R)&&(!I.lastHitOnly||n),A,s,this.move.getMove())}applyPostApplyEffects(A,s,R,n){yL(I=>I instanceof dt&&I.trigger===kA.POST_APPLY&&!I.selfTarget&&(!I.firstHitOnly||R)&&(!I.lastHitOnly||n),A,s,this.move.getMove())}applyOnHitEffects(A,s,R,n,I){yL(r=>r instanceof dt&&r.trigger===kA.HIT&&(!r.firstHitOnly||R)&&(!r.lastHitOnly||n)&&(!r.firstTargetOnly||I),A,s,this.move.getMove())}applyOnGetHitAbEffects(A,s,R){(!s.isFainted()||s.canApplyAbility())&&(nj(as,s,A,this.move.getMove(),R),this.move.getMove().hitsSubstitute(A,s)||(!A.isPlayer()&&this.move.getMove()instanceof m&&a.applyShuffledModifiers(PL,!1,s),s.lapseTags(As.AFTER_HIT)))}applySuccessfulAttackEffects(A,s,R,n,I,r,L){I||(this.applyOnHitEffects(A,s,R,n,L),this.applyOnGetHitAbEffects(A,s,r),L7(ja,A,s,this.move.getMove(),r),this.move.getMove()instanceof m&&r!==yt.STATUS&&a.applyModifiers(xI,this.player,A,s))}applyHeldItemFlinchCheck(A,s,R){if(!this.move.getMove().hasAttr(lA)&&R&&!s.hasAbilityWithAttr(za)&&!this.move.getMove().hitsSubstitute(A,s)){const n=new Pt(!1);a.applyModifiers(KN,A.isPlayer(),A,n),n.value&&s.addTag(w.FLINCHED,void 0,this.move.moveId,A.id)}}hitCheck(A){if([De.USER,De.ENEMY_SIDE].includes(this.move.getMove().moveTarget))return!0;const s=this.getUserPokemon();if(!s)return!1;if(s.turnData.hitsLeft<s.turnData.hitCount&&(!this.move.getMove().hasFlag(ct.CHECK_ALL_HITS)||s.hasAbilityWithAttr(EN))||this.checkBypassAccAndInvuln(A)||A.getTag(w.ALWAYS_GET_HIT))return!0;const R=A.getTag(Ra);if(A.getTag(w.TELEKINESIS)&&!R&&!this.move.getMove().hasAttr(En))return!0;if(R&&!this.checkBypassSemiInvuln(R))return!1;const n=this.move.getMove().calculateBattleAccuracy(s,A);if(n===-1)return!0;const I=s.getAccuracyMultiplier(A,this.move.getMove());return s.randSeedInt(100)<n*I}checkBypassAccAndInvuln(A){var R;const s=this.getUserPokemon();if(!s)return!1;if(s.hasAbilityWithAttr(ON)||A.hasAbilityWithAttr(ON)||this.move.getMove().hasAttr(lM)&&s.isOfType(i.POISON)||s.getTag(w.IGNORE_ACCURACY)&&(((R=s.getLastXMoves().find(()=>!0))==null?void 0:R.targets)||[]).indexOf(A.getBattlerIndex())!==-1)return!0}checkBypassSemiInvuln(A){return A?this.move.getMove().getAttrs(VR).some(R=>R.tagType===A.tagType):!1}getUserPokemon(){return this.battlerIndex>Wt.ENEMY_2?a.getPokemonById(this.battlerIndex):(this.player?a.getPlayerField():a.getEnemyField())[this.fieldIndex]}getTargets(){return a.getField(!0).filter(A=>this.targets.indexOf(A.getBattlerIndex())>-1)}getFirstTarget(){return this.getTargets()[0]}removeTarget(A){this.targets.findIndex(R=>R===A.getBattlerIndex())!==-1&&this.targets.splice(this.targets.findIndex(R=>R===A.getBattlerIndex()),1)}stopMultiHit(A){A&&this.removeTarget(A);const s=this.getUserPokemon();s&&(!A||this.targets.length===0)&&(s.turnData.hitCount=1,s.turnData.hitsLeft=1)}getNewHitPhase(){return new d0(this.battlerIndex,this.targets,this.move)}};o(d0,"MoveEffectPhase");let pR=d0;var Dt=(E=>(E[E.BOTH=0]="BOTH",E[E.PLAYER=1]="PLAYER",E[E.ENEMY=2]="ENEMY",E))(Dt||{});const $F=class $F{constructor(A,s,R,n,I=0){this.tagType=A,this.turnCount=s,this.sourceMove=R,this.sourceId=n,this.side=I}apply(A,s,...R){return!0}onAdd(A,s=!1){}onRemove(A,s=!1){s||a.queueMessage(u.t(`arenaTag:arenaOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:this.getMoveName()}))}onOverlap(A,s){}lapse(A){return this.turnCount<1||!!--this.turnCount}getMoveName(){return this.sourceMove?Ve[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId,this.side=A.side}getSourcePokemon(){return this.sourceId?a.getPokemonById(this.sourceId):null}getAffectedPokemon(){switch(this.side){case 1:return a.getPlayerField()??[];case 2:return a.getEnemyField()??[];case 0:default:return a.getField(!0)??[]}}};o($F,"ArenaTag");let XE=$F;const JF=class JF extends XE{constructor(A,s,R){super(Fe.MIST,A,t.MIST,s,R)}onAdd(A,s=!1){if(super.onAdd(A),this.sourceId){const R=a.getPokemonById(this.sourceId);!s&&R?a.queueMessage(u.t("arenaTag:mistOnAdd",{pokemonNameWithAffix:ee(R)})):s||console.warn("Failed to get source for MistTag onAdd")}}apply(A,s,R,n){if(R){const I=new Pt(!1);if(_t(dI,R,null,!1,I),I.value)return!1}return n.value=!0,s||a.queueMessage(u.t("arenaTag:mistApply")),!0}};o(JF,"MistTag");let OU=JF;const zF=class zF extends XE{constructor(A,s,R,n,I,r){super(A,s,R,n,I),this.weakenedCategories=r}apply(A,s,R,n,I){if(this.weakenedCategories.includes(n)){const r=new Pt(!1);return _t(dI,R,null,!1,r),r.value?!1:(I.value=a.currentBattle.double?2732/4096:.5,!0)}return!1}};o(zF,"WeakenMoveScreenTag");let tL=zF;const jF=class jF extends tL{constructor(A,s,R){super(Fe.REFLECT,A,t.REFLECT,s,R,[g.PHYSICAL])}onAdd(A,s=!1){s||a.queueMessage(u.t(`arenaTag:reflectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(jF,"ReflectTag");let $P=jF;const qF=class qF extends tL{constructor(A,s,R){super(Fe.LIGHT_SCREEN,A,t.LIGHT_SCREEN,s,R,[g.SPECIAL])}onAdd(A,s=!1){s||a.queueMessage(u.t(`arenaTag:lightScreenOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(qF,"LightScreenTag");let JP=qF;const eY=class eY extends tL{constructor(A,s,R){super(Fe.AURORA_VEIL,A,t.AURORA_VEIL,s,R,[g.SPECIAL,g.PHYSICAL])}onAdd(A,s=!1){s||a.queueMessage(u.t(`arenaTag:auroraVeilOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(eY,"AuroraVeilTag");let zP=eY;const tY=class tY extends XE{constructor(A,s,R,n,I,r=!1){super(A,1,s,R,n),this.protectConditionFunc=I,this.ignoresBypass=r}onAdd(A){a.queueMessage(u.t(`arenaTag:conditionalProtectOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`,{moveName:super.getMoveName()}))}onRemove(A){}apply(A,s,R,n,I,r,L){return this.side===1===I.isPlayer()&&this.protectConditionFunc(A,r)?(R.value||(R.value=!0,s||(n.stopMultiHit(I),new ti(UA.PROTECT,I).play(),a.queueMessage(u.t("arenaTag:conditionalProtectApply",{moveName:super.getMoveName(),pokemonNameWithAffix:ee(I)})))),L.value=L.value||this.ignoresBypass,!0):!1}};o(tY,"ConditionalProtectTag");let DI=tY;const qz=o((E,A)=>{const s=Ve[A],R=a.getCurrentPhase();if(R instanceof pR){const n=R.getUserPokemon();if(n)return s.getPriority(n)>0}return s.priority>0},"QuickGuardConditionFunc"),AY=class AY extends DI{constructor(A,s){super(Fe.QUICK_GUARD,t.QUICK_GUARD,A,s,qz)}};o(AY,"QuickGuardTag");let jP=AY;const ej=o((E,A)=>{switch(Ve[A].moveTarget){case De.ALL_ENEMIES:case De.ALL_NEAR_ENEMIES:case De.ALL_OTHERS:case De.ALL_NEAR_OTHERS:return!0}return!1},"WideGuardConditionFunc"),EY=class EY extends DI{constructor(A,s){super(Fe.WIDE_GUARD,t.WIDE_GUARD,A,s,ej)}};o(EY,"WideGuardTag");let qP=EY;const tj=o((E,A)=>Ve[A].category!==g.STATUS,"MatBlockConditionFunc"),sY=class sY extends DI{constructor(A,s){super(Fe.MAT_BLOCK,t.MAT_BLOCK,A,s,tj)}onAdd(A){if(this.sourceId){const s=a.getPokemonById(this.sourceId);s?a.queueMessage(u.t("arenaTag:matBlockOnAdd",{pokemonNameWithAffix:ee(s)})):console.warn("Failed to get source for MatBlockTag onAdd")}}};o(sY,"MatBlockTag");let eG=sY;const Aj=o((E,A)=>{const s=Ve[A];return s.category===g.STATUS&&s.moveTarget!==De.ENEMY_SIDE&&s.moveTarget!==De.BOTH_SIDES&&s.moveTarget!==De.ALL},"CraftyShieldConditionFunc"),RY=class RY extends DI{constructor(A,s){super(Fe.CRAFTY_SHIELD,t.CRAFTY_SHIELD,A,s,Aj,!0)}};o(RY,"CraftyShieldTag");let tG=RY;const OY=class OY extends XE{constructor(A,s,R,n){super(Fe.NO_CRIT,A,s,R,n)}onAdd(A){a.queueMessage(u.t(`arenaTag:noCritOnAdd${this.side===1?"Player":"Enemy"}`,{moveName:this.getMoveName()}))}onRemove(A){const s=a.getPokemonById(this.sourceId);a.queueMessage(u.t("arenaTag:noCritOnRemove",{pokemonNameWithAffix:ee(s??void 0),moveName:this.getMoveName()}))}};o(OY,"NoCritTag");let nU=OY;const nY=class nY extends XE{constructor(A,s,R){super(Fe.WISH,A,t.WISH,s,R)}onAdd(A){if(this.sourceId){const s=a.getPokemonById(this.sourceId);s?(this.battlerIndex=s.getBattlerIndex(),this.triggerMessage=u.t("arenaTag:wishTagOnAdd",{pokemonNameWithAffix:ee(s)}),this.healHp=Qt(s.getMaxHp()/2)):console.warn("Failed to get source for WishTag onAdd")}}onRemove(A){const s=a.getField()[this.battlerIndex];s!=null&&s.isActive(!0)&&(a.queueMessage(this.triggerMessage),a.unshiftPhase(new ZE(s.getBattlerIndex(),this.healHp,null,!0,!1)))}};o(nY,"WishTag");let AG=nY;const aY=class aY extends XE{constructor(A,s,R,n,I){super(A,s,n,I),this.weakenedType=R}apply(A,s,R,n){return R===this.weakenedType?(n.value*=.33,!0):!1}};o(aY,"WeakenMoveTypeTag");let yS=aY;const iY=class iY extends yS{constructor(A,s){super(Fe.MUD_SPORT,A,i.ELECTRIC,t.MUD_SPORT,s)}onAdd(A){a.queueMessage(u.t("arenaTag:mudSportOnAdd"))}onRemove(A){a.queueMessage(u.t("arenaTag:mudSportOnRemove"))}};o(iY,"MudSportTag");let EG=iY;const IY=class IY extends yS{constructor(A,s){super(Fe.WATER_SPORT,A,i.FIRE,t.WATER_SPORT,s)}onAdd(A){a.queueMessage(u.t("arenaTag:waterSportOnAdd"))}onRemove(A){a.queueMessage(u.t("arenaTag:waterSportOnRemove"))}};o(IY,"WaterSportTag");let sG=IY;const rY=class rY extends XE{constructor(A){super(Fe.ION_DELUGE,1,A)}onAdd(A){a.queueMessage(u.t("arenaTag:plasmaFistsOnAdd"))}onRemove(A){}apply(A,s,R){return R.value===i.NORMAL?(R.value=i.ELECTRIC,!0):!1}};o(rY,"IonDelugeTag");let RG=rY;const LY=class LY extends XE{constructor(A,s,R,n,I){super(A,0,s,R,n),this.layers=1,this.maxLayers=I}onOverlap(A,s){this.layers<this.maxLayers&&(this.layers++,this.onAdd(A))}apply(A,s,R){return this.side===1!==R.isPlayer()?!1:this.activateTrap(R,s)}activateTrap(A,s){return!1}getMatchupScoreMultiplier(A){return A.isGrounded()?1:Phaser.Math.Linear(0,1/Math.pow(2,this.layers),Math.min(A.getHpRatio(),.5)*2)}loadTag(A){super.loadTag(A),this.layers=A.layers,this.maxLayers=A.maxLayers}};o(LY,"ArenaTrapTag");let lO=LY;const oY=class oY extends lO{constructor(A,s){super(Fe.SPIKES,t.SPIKES,A,s,3)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?a.getPokemonById(this.sourceId):null;!s&&R&&a.queueMessage(u.t("arenaTag:spikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Pt(!1);if(_t(fE,A,R),s)return!R.value;if(!R.value){const n=1/(10-2*this.layers),I=Qt(A.getMaxHp()*n);return a.queueMessage(u.t("arenaTag:spikesActivateTrap",{pokemonNameWithAffix:ee(A)})),A.damageAndUpdate(I,{result:yt.INDIRECT}),A.turnData&&(A.turnData.damageTaken+=I),!0}}return!1}};o(oY,"SpikesTag");let OG=oY;const TY=class TY extends lO{constructor(A,s){super(Fe.TOXIC_SPIKES,t.TOXIC_SPIKES,A,s,2),this.neutralized=!1}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?a.getPokemonById(this.sourceId):null;!s&&R&&a.queueMessage(u.t("arenaTag:toxicSpikesOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}onRemove(A){this.neutralized||super.onRemove(A)}activateTrap(A,s){if(A.isGrounded()){if(s)return!0;if(A.isOfType(i.POISON)){if(this.neutralized=!0,a.arena.removeTag(this.tagType))return a.queueMessage(u.t("arenaTag:toxicSpikesActivateTrapPoison",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})),!0}else if(!A.status){const R=this.layers>1;if(A.trySetStatus(R?re.TOXIC:re.POISON,!0,null,0,this.getMoveName()))return!0}}return!1}getMatchupScoreMultiplier(A){return A.isGrounded()||!A.canSetStatus(re.POISON,!0)?1:A.isOfType(i.POISON)?1.25:super.getMatchupScoreMultiplier(A)}};o(TY,"ToxicSpikesTag");let nG=TY;const SY=class SY extends XE{constructor(A,s,R,n,I=0){super(A,3,s,R,I),this.targetIndex=n,this.side=I}lapse(A){const s=super.lapse(A);return s||a.unshiftPhase(new pR(this.sourceId,[this.targetIndex],new Lt(this.sourceMove,0,0,!0))),s}onRemove(A){}};o(SY,"DelayedAttackTag");let aG=SY;const NY=class NY extends lO{constructor(A,s){super(Fe.STEALTH_ROCK,t.STEALTH_ROCK,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?a.getPokemonById(this.sourceId):null;!s&&R&&a.queueMessage(u.t("arenaTag:stealthRockOnAdd",{opponentDesc:R.getOpponentDescriptor()}))}getDamageHpRatio(A){const s=A.getAttackTypeEffectiveness(i.ROCK,void 0,!0);let R=0;switch(s){case 0:R=0;break;case .25:R=.03125;break;case .5:R=.0625;break;case 1:R=.125;break;case 2:R=.25;break;case 4:R=.5;break}return R}activateTrap(A,s){const R=new Pt(!1);if(_t(fE,A,R),R.value)return!1;const n=this.getDamageHpRatio(A);if(n){if(s)return!0;const I=Qt(A.getMaxHp()*n);return a.queueMessage(u.t("arenaTag:stealthRockActivateTrap",{pokemonNameWithAffix:ee(A)})),A.damageAndUpdate(I,{result:yt.INDIRECT}),A.turnData&&(A.turnData.damageTaken+=I),!0}return!1}getMatchupScoreMultiplier(A){const s=this.getDamageHpRatio(A);return Phaser.Math.Linear(super.getMatchupScoreMultiplier(A),1,1-Math.pow(s,s))}};o(NY,"StealthRockTag");let iG=NY;const lY=class lY extends lO{constructor(A,s){super(Fe.STICKY_WEB,t.STICKY_WEB,A,s,1)}onAdd(A,s=!1){super.onAdd(A);const R=this.sourceId?a.getPokemonById(this.sourceId):null;!s&&R&&a.queueMessage(u.t("arenaTag:stickyWebOnAdd",{moveName:this.getMoveName(),opponentDesc:R.getOpponentDescriptor()}))}activateTrap(A,s){if(A.isGrounded()){const R=new Pt(!1);if(_t(aO,A,R),s)return!R.value;if(!R.value){a.queueMessage(u.t("arenaTag:stickyWebActivateTrap",{pokemonName:A.getNameToRender()}));const n=new je(-1);return a.unshiftPhase(new AA(A.getBattlerIndex(),!1,[p.SPD],n.value,!0,!1,!0,null,!1,!0)),!0}}return!1}};o(lY,"StickyWebTag");let IG=lY;const CY=class CY extends XE{constructor(A,s){super(Fe.TRICK_ROOM,A,t.TRICK_ROOM,s)}apply(A,s,R){return R.value=!R.value,!0}onAdd(A){const s=this.sourceId?a.getPokemonById(this.sourceId):null;s&&a.queueMessage(u.t("arenaTag:trickRoomOnAdd",{pokemonNameWithAffix:ee(s)}))}onRemove(A){a.queueMessage(u.t("arenaTag:trickRoomOnRemove"))}};o(CY,"TrickRoomTag");let aU=CY;const uY=class uY extends XE{constructor(A){super(Fe.GRAVITY,A,t.GRAVITY)}onAdd(A){a.queueMessage(u.t("arenaTag:gravityOnAdd")),a.getField(!0).forEach(s=>{s!==null&&(s.removeTag(w.FLOATING),s.removeTag(w.TELEKINESIS),s.getTag(w.FLYING)&&s.addTag(w.INTERRUPTED))})}onRemove(A){a.queueMessage(u.t("arenaTag:gravityOnRemove"))}};o(uY,"GravityTag");let rG=uY;const UY=class UY extends XE{constructor(A,s,R){super(Fe.TAILWIND,A,t.TAILWIND,s,R)}onAdd(A,s=!1){s||a.queueMessage(u.t(`arenaTag:tailwindOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`));const R=a.getPokemonById(this.sourceId),n=(R!=null&&R.isPlayer()?a.getPlayerField():a.getEnemyField())??[];for(const I of n)I.hasAbility(O.WIND_POWER)&&!I.getTag(w.CHARGED)&&(I.addTag(w.CHARGED),a.queueMessage(u.t("abilityTriggers:windPowerCharged",{pokemonName:ee(I),moveName:this.getMoveName()}))),I.hasAbility(O.WIND_RIDER)&&(a.queueAbilityDisplay(I,!1,!0),a.unshiftPhase(new AA(I.getBattlerIndex(),!0,[p.ATK],1,!0)),a.queueAbilityDisplay(I,!1,!1))}onRemove(A,s=!1){s||a.queueMessage(u.t(`arenaTag:tailwindOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(UY,"TailwindTag");let LG=UY;const DY=class DY extends XE{constructor(A,s,R){super(Fe.HAPPY_HOUR,A,t.HAPPY_HOUR,s,R)}onAdd(A){a.queueMessage(u.t("arenaTag:happyHourOnAdd"))}onRemove(A){a.queueMessage(u.t("arenaTag:happyHourOnRemove"))}};o(DY,"HappyHourTag");let oG=DY;const MY=class MY extends XE{constructor(A,s,R){super(Fe.SAFEGUARD,A,t.SAFEGUARD,s,R)}onAdd(A){a.queueMessage(u.t(`arenaTag:safeguardOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}onRemove(A){a.queueMessage(u.t(`arenaTag:safeguardOnRemove${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(MY,"SafeguardTag");let TG=MY;const cY=class cY extends XE{constructor(){super(Fe.NONE,0)}};o(cY,"NoneTag");let SG=cY;var Fr;let Ej=(Fr=class extends lO{constructor(A,s){super(Fe.IMPRISON,t.IMPRISON,A,s,1)}onAdd(){const A=this.getSourcePokemon();if(A){const s=this.getAffectedPokemon();s==null||s.forEach(R=>{R.isAllowedInBattle()&&R.addTag(w.IMPRISON,1,t.IMPRISON,this.sourceId)}),a.queueMessage(u.t("battlerTags:imprisonOnAdd",{pokemonNameWithAffix:ee(A)}))}}lapse(){const A=this.getSourcePokemon();return A?A.isActive(!0):!1}activateTrap(A){const s=this.getSourcePokemon();return s!=null&&s.isActive(!0)&&A.isAllowedInBattle()&&A.addTag(w.IMPRISON,1,t.IMPRISON,this.sourceId),!0}onRemove(){const A=this.getAffectedPokemon();A==null||A.forEach(s=>{s.removeTag(w.IMPRISON)})}},o(Fr,"ImprisonTag"),Fr);const hY=class hY extends XE{constructor(A,s){super(Fe.FIRE_GRASS_PLEDGE,4,t.FIRE_PLEDGE,A,s)}onAdd(A){a.queueMessage(u.t(`arenaTag:fireGrassPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}lapse(A){return(this.side===1?a.getPlayerField():a.getEnemyField()).filter(R=>!R.isOfType(i.FIRE)&&!R.switchOutStatus).forEach(R=>{a.queueMessage(u.t("arenaTag:fireGrassPledgeLapse",{pokemonNameWithAffix:ee(R)})),a.unshiftPhase(new Rs(R.getBattlerIndex(),R.getBattlerIndex(),UA.MAGMA_STORM)),R.damageAndUpdate(Qt(R.getMaxHp()/8),{result:yt.INDIRECT})}),super.lapse(A)}};o(hY,"FireGrassPledgeTag");let NG=hY;const _Y=class _Y extends XE{constructor(A,s){super(Fe.WATER_FIRE_PLEDGE,4,t.WATER_PLEDGE,A,s)}onAdd(A){a.queueMessage(u.t(`arenaTag:waterFirePledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}apply(A,s,R){return R.value*=2,!0}};o(_Y,"WaterFirePledgeTag");let lG=_Y;const PY=class PY extends XE{constructor(A,s){super(Fe.GRASS_WATER_PLEDGE,4,t.GRASS_PLEDGE,A,s)}onAdd(A){a.queueMessage(u.t(`arenaTag:grassWaterPledgeOnAdd${this.side===1?"Player":this.side===2?"Enemy":""}`))}};o(PY,"GrassWaterPledgeTag");let CG=PY;const GY=class GY extends XE{constructor(A,s){super(Fe.FAIRY_LOCK,A,t.FAIRY_LOCK,s)}onAdd(A){a.queueMessage(u.t("arenaTag:fairyLockOnAdd"))}};o(GY,"FairyLockTag");let uG=GY;const dY=class dY extends XE{constructor(A){super(Fe.NEUTRALIZING_GAS,0,void 0,A),this.sourceCount=1,this.beingRemoved=!1}onAdd(A){const s=this.getSourcePokemon();if(s){this.playActivationMessage(s);for(const R of a.getField(!0))R&&R.id!==s.id&&[!0,!1].forEach(n=>_d(R,n))}}onOverlap(A,s){this.sourceCount++,this.playActivationMessage(s)}onSourceLeave(A){if(this.sourceCount--,this.sourceCount<=0)A.removeTag(Fe.NEUTRALIZING_GAS);else if(this.sourceCount===1){const s=a.getField().filter(R=>R==null?void 0:R.hasAbilityWithAttr(Va,!1))[0];hd(s,s.getAbility().hasAttr(Va))}}onRemove(A,s=!1){this.beingRemoved=!0,s||a.queueMessage(u.t("arenaTag:neutralizingGasOnRemove"));for(const R of a.getField(!0))R&&!R.hasAbilityWithAttr(Va,!1)&&[!0,!1].forEach(n=>hd(R,n))}shouldApplyToSelf(){return this.sourceCount>1}isBeingRemoved(){return this.beingRemoved}playActivationMessage(A){A&&a.queueMessage(u.t("arenaTag:neutralizingGasOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(dY,"SuppressAbilitiesTag");let UG=dY;function I7(E,A,s,R,n,I=0){switch(E){case Fe.MIST:return new OU(A,R,I);case Fe.QUICK_GUARD:return new jP(R,I);case Fe.WIDE_GUARD:return new qP(R,I);case Fe.MAT_BLOCK:return new eG(R,I);case Fe.CRAFTY_SHIELD:return new tG(R,I);case Fe.NO_CRIT:return new nU(A,s,R,I);case Fe.MUD_SPORT:return new EG(A,R);case Fe.WATER_SPORT:return new sG(A,R);case Fe.ION_DELUGE:return new RG(s);case Fe.SPIKES:return new OG(R,I);case Fe.TOXIC_SPIKES:return new nG(R,I);case Fe.FUTURE_SIGHT:case Fe.DOOM_DESIRE:return new aG(E,s,R,n,I);case Fe.WISH:return new AG(A,R,I);case Fe.STEALTH_ROCK:return new iG(R,I);case Fe.STICKY_WEB:return new IG(R,I);case Fe.TRICK_ROOM:return new aU(A,R);case Fe.GRAVITY:return new rG(A);case Fe.REFLECT:return new $P(A,R,I);case Fe.LIGHT_SCREEN:return new JP(A,R,I);case Fe.AURORA_VEIL:return new zP(A,R,I);case Fe.TAILWIND:return new LG(A,R,I);case Fe.HAPPY_HOUR:return new oG(A,R,I);case Fe.SAFEGUARD:return new TG(A,R,I);case Fe.IMPRISON:return new Ej(R,I);case Fe.FIRE_GRASS_PLEDGE:return new NG(R,I);case Fe.WATER_FIRE_PLEDGE:return new lG(R,I);case Fe.GRASS_WATER_PLEDGE:return new CG(R,I);case Fe.FAIRY_LOCK:return new uG(A,R);case Fe.NEUTRALIZING_GAS:return new UG(R);default:return null}}o(I7,"getArenaTag");function sj(E){const A=I7(E.tagType,E.turnCount,E.sourceMove,E.sourceId,E.targetIndex,E.side)??new SG;return A.loadTag(E),A}o(sj,"loadArenaTag");const HY=class HY extends ns{constructor(A,s,R=!1){super(A),this.targetIndex=s,this.playSound=R}start(){const A=this.getPokemon(),s=a.getField(!0).find(n=>n.getBattlerIndex()===this.targetIndex);if(!s)return this.end();A.summonData.speciesForm=s.getSpeciesForm(),A.summonData.ability=s.getAbility().id,A.summonData.gender=s.getGender(),A.removeTag(w.POWER_TRICK);for(const n of ka)A.setStat(n,s.getStat(n,!1),!1);for(const n of YO)A.setStatStage(n,s.getStatStage(n));A.summonData.moveset=s.getMoveset().map(n=>n?new Lt(n.moveId,0,0,!1,Math.min(n.getMove().pp,5)):(console.warn(`Transform: somehow iterating over a ${n} value when copying moveset!`),new Lt(t.NONE))),A.summonData.types=s.getTypes();const R=[A.updateInfo()];this.playSound&&a.playSound("battle_anims/PRSFX- Transform"),a.queueMessage(u.t("abilityTriggers:postSummonTransform",{pokemonNameWithAffix:ee(A),targetName:s.name})),R.push(A.loadAssets(!1).then(()=>{A.playAnim(),A.updateInfo(),A.setTempAbility(s.getAbility())})),Promise.allSettled(R).then(()=>this.end())}};o(HY,"PokemonTransformPhase");let iU=HY;const fY=class fY{constructor(A,s){this.isSuppressable=!0,this.isCopiable=!0,this.isReplaceable=!0,this.id=A,this.nameAppend="",this.generation=s,this.attrs=[],this.conditions=[],this.isSuppressable=!0,this.isCopiable=!0,this.isReplaceable=!0,this.localize()}get isSwappable(){return this.isCopiable&&this.isReplaceable}localize(){const A=O[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${u.t(`ability:${A}.name`)}${this.nameAppend}`:"",this.description=this.id?u.t(`ability:${A}.description`):""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}attr(A,...s){const R=new A(...s);return this.attrs.push(R),this}conditionalAttr(A,s,...R){const n=new s(...R);return n.addCondition(A),this.attrs.push(n),this}bypassFaint(){return this.isBypassFaint=!0,this}ignorable(){return this.isIgnorable=!0,this}unsuppressable(){return this.isSuppressable=!1,this}uncopiable(){return this.isCopiable=!1,this}unreplaceable(){return this.isReplaceable=!1,this}condition(A){return this.conditions.push(A),this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}edgeCase(){return this}};o(fY,"Ability");let ae=fY;const BY=class BY{constructor(A=!0){this.showAbility=A}apply(A,s,R,n,I){}getTriggerMessage(A,s,...R){return null}getCondition(){return this.extraCondition||null}addCondition(A){return this.extraCondition=A,this}canApply(A,s,R,n){return!0}};o(BY,"AbAttr");let Mt=BY;const gY=class gY extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){n.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:blockRecoilDamage",{pokemonName:ee(A),abilityName:s})}};o(gY,"BlockRecoilDamageAttr");let IU=gY;const mY=class mY extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){const r=I[0];r.value=r.value/4}};o(mY,"DoubleBattleChanceAbAttr");let vi=mY;const pY=class pY extends Mt{canApplyPostBattleInit(A,s,R,n){return!0}applyPostBattleInit(A,s,R,n){}};o(pY,"PostBattleInitAbAttr");let wS=pY;const KY=class KY extends wS{constructor(A){super(!1),this.formFunc=A}canApplyPostBattleInit(A,s,R,n){return this.formFunc(A)!==A.formIndex&&!R}applyPostBattleInit(A,s,R,n){a.triggerPokemonFormChange(A,qt,!1)}};o(KY,"PostBattleInitFormChangeAbAttr");let vO=KY;const FY=class FY extends Mt{constructor(A,s){super(),this.stats=A,this.stages=s}apply(A,s,R,n,I){const r=[];if(!R){r.push(new AA(A.getBattlerIndex(),!0,this.stats,this.stages));for(const L of r)a.unshiftPhase(L)}}};o(FY,"PostTeraFormChangeStatChangeAbAttr");let Vi=FY;const YY=class YY extends Mt{constructor(A){super(!0),this.weather=A}canApply(A,s,R,n){return a.arena.canSetWeather(Oe.NONE)}apply(A,s,R,n,I){R||a.arena.trySetWeather(Oe.NONE,A)}};o(YY,"ClearWeatherAbAttr");let rU=YY;const WY=class WY extends Mt{constructor(A){super(!0),this.terrain=A}canApply(A,s,R,n){return a.arena.canSetTerrain(Nt.NONE)}apply(A,s,R,n,I){R||a.arena.trySetTerrain(Nt.NONE,!0,A)}};o(WY,"ClearTerrainAbAttr");let LU=WY;const yY=class yY extends Mt{canApplyPreDefend(A,s,R,n,I,r,L){return!0}applyPreDefend(A,s,R,n,I,r,L){}};o(yY,"PreDefendAbAttr");let In=yY;const wY=class wY extends In{canApplyPreDefend(A,s,R,n,I,r,L){return A.isFullHp()&&A.getMaxHp()>1&&L[0].value>=A.hp}applyPreDefend(A,s,R,n,I,r,L){R||A.addTag(w.STURDY,1)}};o(wY,"PreDefendFullHpEndureAbAttr");let oU=wY;const vY=class vY extends Mt{apply(A,s,R,n,I){n.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:blockItemTheft",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(vY,"BlockItemTheftAbAttr");let MI=vY;const VY=class VY extends Mt{constructor(){super(!1)}canApply(A,s,R,n){return n[0].value>1}apply(A,s,R,n,I){I[0].value+=.5}};o(VY,"StabBoostAbAttr");let TU=VY;const xY=class xY extends In{constructor(A,s,R=!1){super(R),this.condition=A,this.damageMultiplier=s}canApplyPreDefend(A,s,R,n,I,r,L){return this.condition(A,n,I)}applyPreDefend(A,s,R,n,I,r,L){L[0].value=Qt(L[0].value*this.damageMultiplier)}};o(xY,"ReceivedMoveDamageMultiplierAbAttr");let MR=xY;const bY=class bY extends In{constructor(A){super(),this.damageMultiplier=A}applyPreDefend(A,s,R,n,I,r,L){const N=L[0];N.value=Qt(N.value*this.damageMultiplier)}};o(bY,"AlliedFieldDamageReductionAbAttr");let SU=bY;const kY=class kY extends MR{constructor(A,s){super((R,n,I)=>n.getMoveType(I)===A,s,!1)}};o(kY,"ReceivedTypeDamageMultiplierAbAttr");let Ga=kY;const ZY=class ZY extends In{constructor(A,s){super(!0),this.immuneType=A,this.condition=s??null}canApplyPreDefend(A,s,R,n,I,r,L){return![De.BOTH_SIDES,De.ENEMY_SIDE,De.USER_SIDE].includes(I.moveTarget)&&n!==A&&n.getMoveType(I)===this.immuneType}applyPreDefend(A,s,R,n,I,r,L){L[0].value=0}getImmuneType(){return this.immuneType}getCondition(){return this.condition}};o(ZY,"TypeImmunityAbAttr");let PO=ZY;const XY=class XY extends PO{constructor(A,s){super(A,s)}canApplyPreDefend(A,s,R,n,I,r,L){return I.category!==g.STATUS&&!I.hasAttr(MM)&&super.canApplyPreDefend(A,s,R,n,I,r,L)}applyPreDefend(A,s,R,n,I,r,L){super.applyPreDefend(A,s,R,n,I,r,L)}};o(XY,"AttackTypeImmunityAbAttr");let DG=XY;const QY=class QY extends PO{constructor(A){super(A)}canApplyPreDefend(A,s,R,n,I,r,L){return super.canApplyPreDefend(A,s,R,n,I,r,L)}applyPreDefend(A,s,R,n,I,r,L){if(super.applyPreDefend(A,s,R,n,I,r,L),!A.isFullHp()&&!R){const N=(s?A.getPassiveAbility():A.getAbility()).name;a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/4),u.t("abilityTriggers:typeImmunityHeal",{pokemonNameWithAffix:ee(A),abilityName:N}),!0)),r.value=!0}}};o(QY,"TypeImmunityHealAbAttr");let Ir=QY;const $Y=class $Y extends PO{constructor(A,s,R,n){super(A,n),this.stat=s,this.stages=R}canApplyPreDefend(A,s,R,n,I,r,L){return super.canApplyPreDefend(A,s,R,n,I,r,L)}applyPreDefend(A,s,R,n,I,r,L){super.applyPreDefend(A,s,R,n,I,r,L),r.value=!0,R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[this.stat],this.stages))}};o($Y,"TypeImmunityStatStageChangeAbAttr");let _i=$Y;const JY=class JY extends PO{constructor(A,s,R,n){super(A,n),this.tagType=s,this.turnCount=R}canApplyPreDefend(A,s,R,n,I,r,L){return super.canApplyPreDefend(A,s,R,n,I,r,L)}applyPreDefend(A,s,R,n,I,r,L){super.applyPreDefend(A,s,R,n,I,r,L),r.value=!0,R||A.addTag(this.tagType,this.turnCount,void 0,A.id)}};o(JY,"TypeImmunityAddBattlerTagAbAttr");let MG=JY;const zY=class zY extends PO{constructor(A){super(null,A)}canApplyPreDefend(A,s,R,n,I,r,L){const N=L.length>0?L[0].value:A.getAttackTypeEffectiveness(n.getMoveType(I),n,void 0,void 0,I);return I instanceof m&&N<2}applyPreDefend(A,s,R,n,I,r,L){r.value=!0,L[0].value=0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:nonSuperEffectiveImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(zY,"NonSuperEffectiveImmunityAbAttr");let cG=zY;const jY=class jY extends In{canApplyPreDefend(A,s,R,n,I,r,L){const N=L[0];return N&&N instanceof je&&!(I&&I.hasAttr(FO))&&A.isFullHp()&&N.value>.5}applyPreDefend(A,s,R,n,I,r,L){const N=L[0];N.value=.5,A.turnData.moveEffectiveness=.5}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:fullHpResistType",{pokemonNameWithAffix:ee(A)})}};o(jY,"FullHpResistTypeAbAttr");let NU=jY;const qY=class qY extends Mt{canApplyPostDefend(A,s,R,n,I,r,L){return!0}applyPostDefend(A,s,R,n,I,r,L){}};o(qY,"PostDefendAbAttr");let as=qY;const eW=class eW extends In{canApplyPreDefend(A,s,R,n,I,r,L){return!(I.moveTarget===De.USER||I.moveTarget===De.NEAR_ALLY)&&I.getPriority(n)>0&&!I.isMultiTarget()}applyPreDefend(A,s,R,n,I,r,L){r.value=!0}};o(eW,"FieldPriorityMoveImmunityAbAttr");let fr=eW;const tW=class tW extends Mt{canApplyPostStatStageChange(A,s,R,n,I,r){return!0}applyPostStatStageChange(A,s,R,n,I,r){}};o(tW,"PostStatStageChangeAbAttr");let lU=tW;const AW=class AW extends In{constructor(A){super(!0),this.immuneCondition=A}canApplyPreDefend(A,s,R,n,I,r,L){return this.immuneCondition(A,n,I)}applyPreDefend(A,s,R,n,I,r,L){r.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:ee(A)})}};o(AW,"MoveImmunityAbAttr");let jn=AW;const EW=class EW extends In{constructor(){super(!1)}canApplyPreDefend(A,s,R,n,I,r,L){const N=L[0];return I.category===g.STATUS&&N.value>=50}applyPreDefend(A,s,R,n,I,r,L){const N=L[0];N.value=50}};o(EW,"WonderSkinAbAttr");let CU=EW;const sW=class sW extends jn{constructor(A,s,R){super(A),this.stat=s,this.stages=R}canApplyPreDefend(A,s,R,n,I,r,L){return!R&&super.canApplyPreDefend(A,s,R,n,I,r,L)}applyPreDefend(A,s,R,n,I,r,L){super.applyPreDefend(A,s,R,n,I,r,L),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[this.stat],this.stages))}};o(sW,"MoveImmunityStatStageChangeAbAttr");let hG=sW;const RW=class RW extends as{canApplyPostDefend(A,s,R,n,I,r,L){return I.hasAttr(Zs)&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){R||a.queueMessage(u.t("abilityTriggers:reverseDrain",{pokemonNameWithAffix:ee(n)}))}};o(RW,"ReverseDrainAbAttr");let vS=RW;const OW=class OW extends as{constructor(A,s,R,n=!0,I=!1){super(!0),this.condition=A,this.stat=s,this.stages=R,this.selfTarget=n,this.allOthers=I}canApplyPostDefend(A,s,R,n,I,r,L){return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){if(!R)if(this.allOthers){const N=A.getAlly(),l=Pe(N)?A.getOpponents():A.getOpponents().concat([N]);for(const C of l)a.unshiftPhase(new AA(C.getBattlerIndex(),!1,[this.stat],this.stages))}else a.unshiftPhase(new AA((this.selfTarget?A:n).getBattlerIndex(),this.selfTarget,[this.stat],this.stages))}};o(OW,"PostDefendStatStageChangeAbAttr");let RO=OW;const nW=class nW extends as{constructor(A,s,R,n,I=!0){super(!0),this.condition=A,this.hpGate=s,this.stats=R,this.stages=n,this.selfTarget=I}canApplyPostDefend(A,s,R,n,I,r,L){const N=Math.ceil(A.getMaxHp()*this.hpGate),l=A.turnData.attacksReceived[A.turnData.attacksReceived.length-1],C=(l==null?void 0:l.damage)||0;return this.condition(A,n,I)&&A.hp<=N&&A.hp+C>N&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){R||a.unshiftPhase(new AA((this.selfTarget?A:n).getBattlerIndex(),!0,this.stats,this.stages))}};o(nW,"PostDefendHpGatedStatStageChangeAbAttr");let Ao=nW;const aW=class aW extends as{constructor(A,s){super(!0),this.condition=A,this.tagType=s}canApplyPostDefend(A,s,R,n,I,r,L){const N=a.arena.getTag(this.tagType);return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)&&(!a.arena.getTag(this.tagType)||N.layers<N.maxLayers)}applyPostDefend(A,s,R,n,I,r,L){R||a.arena.addTag(this.tagType,0,void 0,A.id,A.isPlayer()?Dt.ENEMY:Dt.PLAYER)}};o(aW,"PostDefendApplyArenaTrapTagAbAttr");let _G=aW;const iW=class iW extends as{constructor(A,s){super(!0),this.condition=A,this.tagType=s}canApplyPostDefend(A,s,R,n,I,r,L){return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){!A.getTag(this.tagType)&&!R&&(A.addTag(this.tagType,void 0,void 0,A.id),a.queueMessage(u.t("abilityTriggers:windPowerCharged",{pokemonName:ee(A),moveName:I.name})))}};o(iW,"PostDefendApplyBattlerTagAbAttr");let uU=iW;const IW=class IW extends as{canApplyPostDefend(A,s,R,n,I,r,L){this.type=n.getMoveType(I);const N=A.getTypes(!0);return r<yt.NO_EFFECT&&!I.hitsSubstitute(n,A)&&(R||N.length!==1||N[0]!==this.type)}applyPostDefend(A,s,R,n,I,r,L){const N=n.getMoveType(I);A.summonData.types=[N]}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendTypeChange",{pokemonNameWithAffix:ee(A),abilityName:s,typeName:u.t(`pokemonInfo:Type.${i[this.type]}`)})}};o(IW,"PostDefendTypeChangeAbAttr");let PG=IW;const rW=class rW extends as{constructor(A){super(),this.terrainType=A}canApplyPostDefend(A,s,R,n,I,r,L){return r<yt.NO_EFFECT&&!I.hitsSubstitute(n,A)&&a.arena.canSetTerrain(this.terrainType)}applyPostDefend(A,s,R,n,I,r,L){R||a.arena.trySetTerrain(this.terrainType,!1,A)}};o(rW,"PostDefendTerrainChangeAbAttr");let GG=rW;const LW=class LW extends as{constructor(A,...s){super(!0),this.chance=A,this.effects=s}canApplyPostDefend(A,s,R,n,I,r,L){const N=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&!n.status&&(this.chance===-1||A.randSeedInt(100)<this.chance)&&!I.hitsSubstitute(n,A)&&n.canSetStatus(N,!0,!1,A)}applyPostDefend(A,s,R,n,I,r,L){const N=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];n.trySetStatus(N,!0,A)}};o(LW,"PostDefendContactApplyStatusEffectAbAttr");let Br=LW;const oW=class oW extends Br{constructor(){super(10,re.POISON,re.PARALYSIS,re.SLEEP)}canApplyPostDefend(A,s,R,n,I,r,L){return!(n.hasAbility(O.OVERCOAT)||n.isOfType(i.GRASS))&&super.canApplyPostDefend(A,s,R,n,I,r,L)}applyPostDefend(A,s,R,n,I,r,L){super.applyPostDefend(A,s,R,n,I,r,L)}};o(oW,"EffectSporeAbAttr");let dG=oW;const TW=class TW extends as{constructor(A,s,R){super(),this.tagType=s,this.chance=A,this.turnCount=R}canApplyPostDefend(A,s,R,n,I,r,L){return I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&A.randSeedInt(100)<this.chance&&!I.hitsSubstitute(n,A)&&n.canAddTag(this.tagType)}applyPostDefend(A,s,R,n,I,r,L){R||n.addTag(this.tagType,this.turnCount,I.id,n.id)}};o(TW,"PostDefendContactApplyTagChanceAbAttr");let HG=TW;const SW=class SW extends as{constructor(A,s){super(),this.stat=A,this.stages=s}canApplyPostDefend(A,s,R,n,I,r,L){return!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[this.stat],this.stages))}getCondition(){return A=>A.turnData.attacksReceived.length!==0&&A.turnData.attacksReceived[A.turnData.attacksReceived.length-1].critical}};o(SW,"PostDefendCritStatStageChangeAbAttr");let fG=SW;const NW=class NW extends as{constructor(A){super(),this.damageRatio=A}canApplyPostDefend(A,s,R,n,I,r,L){return!R&&I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&!n.hasAbilityWithAttr(fE)&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){n.damageAndUpdate(Qt(n.getMaxHp()*(1/this.damageRatio)),{result:yt.INDIRECT}),n.turnData.damageTaken+=Qt(n.getMaxHp()*(1/this.damageRatio))}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendContactDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(NW,"PostDefendContactDamageAbAttr");let UU=NW;const lW=class lW extends as{constructor(A){super(),this.turns=A}canApplyPostDefend(A,s,R,n,I,r,L){return I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&!n.getTag(w.PERISH_SONG)}applyPostDefend(A,s,R,n,I,r,L){R||(n.addTag(w.PERISH_SONG,this.turns),A.addTag(w.PERISH_SONG,this.turns))}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:perishBody",{pokemonName:ee(A),abilityName:s})}};o(lW,"PostDefendPerishSongAbAttr");let BG=lW;const CW=class CW extends as{constructor(A,s){super(),this.weatherType=A,this.condition=s}canApplyPostDefend(A,s,R,n,I,r,L){var N;return!(this.condition&&!this.condition(A,n,I)||I.hitsSubstitute(n,A))&&!((N=a.arena.weather)!=null&&N.isImmutable())&&a.arena.canSetWeather(this.weatherType)}applyPostDefend(A,s,R,n,I,r,L){R||a.arena.trySetWeather(this.weatherType,A)}};o(CW,"PostDefendWeatherChangeAbAttr");let gG=CW;const uW=class uW extends as{constructor(){super()}canApplyPostDefend(A,s,R,n,I,r,L){return I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&n.getAbility().isSwappable&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){if(!R){const N=n.getAbility();n.setTempAbility(A.getAbility()),A.setTempAbility(N)}}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendAbilitySwap",{pokemonNameWithAffix:ee(A)})}};o(uW,"PostDefendAbilitySwapAbAttr");let mG=uW;const H0=class H0 extends as{constructor(A){super(),this.ability=A}canApplyPostDefend(A,s,R,n,I,r,L){return I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&n.getAbility().isSuppressable&&!n.getAbility().hasAttr(H0)&&!I.hitsSubstitute(n,A)}applyPostDefend(A,s,R,n,I,r,L){R||n.setTempAbility(nA[this.ability])}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postDefendAbilityGive",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(H0,"PostDefendAbilityGiveAbAttr");let DU=H0;const UW=class UW extends as{constructor(A){super(),this.chance=A}canApplyPostDefend(A,s,R,n,I,r,L){return n.getTag(w.DISABLED)===null&&!I.hitsSubstitute(n,A)&&I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A})&&(this.chance===-1||A.randSeedInt(100)<this.chance)}applyPostDefend(A,s,R,n,I,r,L){R||(this.attacker=n,this.move=I,this.attacker.addTag(w.DISABLED,4,0,A.id))}};o(UW,"PostDefendMoveDisableAbAttr");let pG=UW;const DW=class DW extends lU{constructor(A,s,R){super(!0),this.condition=A,this.statsToChange=s,this.stages=R}canApplyPostStatStageChange(A,s,R,n,I,r){return this.condition(A,R,n)&&!I}applyPostStatStageChange(A,s,R,n,I,r){s||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,this.statsToChange,this.stages))}};o(DW,"PostStatStageChangeStatStageChangeAbAttr");let MU=DW;const MW=class MW extends Mt{canApplyPreAttack(A,s,R,n,I,r){return!0}applyPreAttack(A,s,R,n,I,r){}};o(MW,"PreAttackAbAttr");let cI=MW;const cW=class cW extends Mt{constructor(A){super(!1),this.chanceMultiplier=A}canApply(A,s,R,n){const I=[t.ORDER_UP,t.ELECTRO_SHOT];return!(n[0].value<=0||I.includes(n[1].id))}apply(A,s,R,n,I){I[0].value*=this.chanceMultiplier,I[0].value=Math.min(I[0].value,100)}};o(cW,"MoveEffectChanceMultiplierAbAttr");let VS=cW;const hW=class hW extends In{constructor(A=!1){super(A)}canApplyPreDefend(A,s,R,n,I,r,L){return L[0].value>0}applyPreDefend(A,s,R,n,I,r,L){L[0].value=0}};o(hW,"IgnoreMoveEffectsAbAttr");let za=hW;const _W=class _W extends cI{canApplyPreAttack(A,s,R,n,I,r){return!0}};o(_W,"VariableMovePowerAbAttr");let xS=_W;const PW=class PW extends Mt{apply(A,s,R,n,I){n.value=!0}};o(PW,"FieldPreventExplosiveMovesAbAttr");let bS=PW;const f0=class f0 extends Mt{constructor(A,s,R=!1){super(!1),this.stat=A,this.multiplier=s,this.canStack=R}canApplyFieldStat(A,s,R,n,I,r,L,N){return this.canStack||!L.value&&this.stat===n&&r.getAbilityAttrs(f0).every(l=>l.stat!==n)}applyFieldStat(A,s,R,n,I,r,L,N){I.value*=this.multiplier,L.value=!0}};o(f0,"FieldMultiplyStatAbAttr");let xi=f0;const GW=class GW extends cI{constructor(A,s,R){super(!1),this.newType=A,this.powerMultiplier=s,this.condition=R}canApplyPreAttack(A,s,R,n,I,r){return(this.condition&&this.condition(A,n,I))??!1}applyPreAttack(A,s,R,n,I,r){r[0]&&r[0]instanceof je&&(r[0].value=this.newType),r[1]&&r[1]instanceof je&&(r[1].value*=this.powerMultiplier)}};o(GW,"MoveTypeChangeAbAttr");let Mn=GW;const dW=class dW extends cI{constructor(){super(!0)}canApplyPreAttack(A,s,R,n,I,r){if(!A.isTerastallized&&I.id!==t.STRUGGLE&&!I.findAttr(L=>L instanceof DN||L instanceof mM||L instanceof pM||L instanceof SL)){const L=A.getMoveType(I);if(A.getTypes().some(N=>N!==L))return this.moveType=L,!0}return!1}applyPreAttack(A,s,R,n,I,r){const L=A.getMoveType(I);R||(this.moveType=L,A.summonData.types=[L],A.updateInfo())}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:ee(A),moveType:u.t(`pokemonInfo:Type.${i[this.moveType]}`)})}};o(dW,"PokemonTypeChangeAbAttr");let sI=dW;const HW=class HW extends cI{constructor(A){super(!1),this.damageMultiplier=A}canApplyPreAttack(A,s,R,n,I,r){return I.canBeMultiStrikeEnhanced(A,!0)}applyPreAttack(A,s,R,n,I,r){const L=r[0],N=r[1];L!=null&&L.value&&(L.value+=1),N!=null&&N.value&&A.turnData.hitsLeft===1&&(N.value=this.damageMultiplier)}};o(HW,"AddSecondStrikeAbAttr");let kS=HW;const fW=class fW extends cI{constructor(A,s){super(!1),this.damageMultiplier=A,this.condition=s}canApplyPreAttack(A,s,R,n,I,r){return this.condition(A,n,I)}applyPreAttack(A,s,R,n,I,r){const L=r[0];L.value=Qt(L.value*this.damageMultiplier)}};o(fW,"DamageBoostAbAttr");let cU=fW;const BW=class BW extends xS{constructor(A,s,R=!1){super(R),this.condition=A,this.powerMultiplier=s}canApplyPreAttack(A,s,R,n,I,r){return this.condition(A,n,I)}applyPreAttack(A,s,R,n,I,r){r[0].value*=this.powerMultiplier}};o(BW,"MovePowerBoostAbAttr");let Ns=BW;const gW=class gW extends Ns{constructor(A,s){super((R,n,I)=>(R==null?void 0:R.getMoveType(I))===A,s||1.5,!1)}};o(gW,"MoveTypePowerBoostAbAttr");let ZO=gW;const mW=class mW extends ZO{constructor(A){super(A)}getCondition(){return A=>A.getHpRatio()<=.33}};o(mW,"LowHpMoveTypePowerBoostAbAttr");let rr=mW;const pW=class pW extends xS{constructor(A,s=!0){super(s),this.mult=A}canApplyPreAttack(A,s,R,n,I,r){return this.mult(A,n,I)!==1}applyPreAttack(A,s,R,n,I,r){const L=this.mult(A,n,I);r[0].value*=L}};o(pW,"VariableMovePowerBoostAbAttr");let KG=pW;const KW=class KW extends Mt{constructor(A,s){super(!1),this.condition=A,this.powerMultiplier=s}canApplyPreAttack(A,s,R,n,I,r){return!0}applyPreAttack(A,s,R,n,I,r){this.condition(A,n,I)&&(r[0].value*=this.powerMultiplier)}};o(KW,"FieldMovePowerBoostAbAttr");let hU=KW;const FW=class FW extends hU{constructor(A,s){super((R,n,I)=>(R==null?void 0:R.getMoveType(I))===A,s||1.5)}};o(FW,"PreAttackFieldMoveTypePowerBoostAbAttr");let _U=FW;const YW=class YW extends _U{};o(YW,"FieldMoveTypePowerBoostAbAttr");let bi=YW;const WW=class WW extends _U{};o(WW,"UserFieldMoveTypePowerBoostAbAttr");let PU=WW;const yW=class yW extends hU{constructor(A,s){super((R,n,I)=>A.includes(I.category),s)}};o(yW,"AllyMoveCategoryPowerBoostAbAttr");let ZS=yW;const wW=class wW extends Mt{constructor(A,s,R){super(!1),this.stat=A,this.multiplier=s,this.condition=R??null}canApplyStatStage(A,s,R,n,I,r){const L=r[0];return n===this.stat&&(!this.condition||this.condition(A,null,L))}applyStatStage(A,s,R,n,I,r){I.value*=this.multiplier}};o(wW,"StatMultiplierAbAttr");let yA=wW;const vW=class vW extends Mt{constructor(A=(R,n,I)=>I.category!==g.STATUS,s=!0){super(s),this.attackCondition=A}canApplyPostAttack(A,s,R,n,I,r,L){return this.attackCondition(A,n,I)}applyPostAttack(A,s,R,n,I,r,L){}};o(vW,"PostAttackAbAttr");let ja=vW;const VW=class VW extends Mt{constructor(A,s,R=!0){super(!1),this.stat=A,this.multiplier=s,this.ignorable=R}applyAllyStat(A,s,R,n,I,r,L,N){I.value*=this.multiplier}canApplyAllyStat(A,s,R,n,I,r,L,N){return n===this.stat&&!(L&&this.ignorable)}};o(VW,"AllyStatMultiplierAbAttr");let wa=VW;const xW=class xW extends ja{constructor(){super((A,s,R)=>!0,!1)}canApplyPostAttack(A,s,R,n,I,r,L){return super.canApplyPostAttack(A,s,R,n,I,r,L)&&R||!A.getTag(w.GORILLA_TACTICS)}applyPostAttack(A,s,R,n,I,r,L){R||A.addTag(w.GORILLA_TACTICS)}};o(xW,"GorillaTacticsAbAttr");let FG=xW;const bW=class bW extends ja{constructor(A){super(),this.stealCondition=A??null}canApplyPostAttack(A,s,R,n,I,r,L){if(super.canApplyPostAttack(A,s,R,n,I,r,L)&&!R&&r<yt.NO_EFFECT&&(!this.stealCondition||this.stealCondition(A,n,I))){const N=this.getTargetHeldItems(n).filter(l=>l.isTransferable);if(N.length&&(this.stolenItem=N[A.randSeedInt(N.length)],a.canTransferHeldItemModifier(this.stolenItem,A)))return!0}return this.stolenItem=void 0,!1}applyPostAttack(A,s,R,n,I,r,L){const N=this.getTargetHeldItems(n).filter(l=>l.isTransferable);this.stolenItem||(this.stolenItem=N[A.randSeedInt(N.length)]),a.tryTransferHeldItemModifier(this.stolenItem,A,!1)&&a.queueMessage(u.t("abilityTriggers:postAttackStealHeldItem",{pokemonNameWithAffix:ee(A),defenderName:n.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(A){return a.findModifiers(s=>s instanceof Ft&&s.pokemonId===A.id,A.isPlayer())}};o(bW,"PostAttackStealHeldItemAbAttr");let YG=bW;const kW=class kW extends ja{constructor(A,s,...R){super(),this.contactRequired=A,this.chance=s,this.effects=R}canApplyPostAttack(A,s,R,n,I,r,L){if(super.canApplyPostAttack(A,s,R,n,I,r,L)&&!(A!==n&&I.hitsSubstitute(n,A))&&(R||!n.hasAbilityWithAttr(za)&&A!==n&&(!this.contactRequired||I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A}))&&A.randSeedInt(100)<this.chance&&!A.status)){const N=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];return R||n.canSetStatus(N,!0,!1,A)}return!1}applyPostAttack(A,s,R,n,I,r,L){const N=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];n.trySetStatus(N,!0,A)}};o(kW,"PostAttackApplyStatusEffectAbAttr");let GU=kW;const ZW=class ZW extends GU{constructor(A,...s){super(!0,A,...s)}};o(ZW,"PostAttackContactApplyStatusEffectAbAttr");let WG=ZW;const XW=class XW extends ja{constructor(A,s,...R){super(void 0,!1),this.contactRequired=A,this.chance=s,this.effects=R}canApplyPostAttack(A,s,R,n,I,r,L){return super.canApplyPostAttack(A,s,R,n,I,r,L)&&!n.hasAbilityWithAttr(za)&&A!==n&&(!this.contactRequired||I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A}))&&A.randSeedInt(100)<this.chance(n,A,I)&&!A.status}applyPostAttack(A,s,R,n,I,r,L){if(!R){const N=this.effects.length===1?this.effects[0]:this.effects[A.randSeedInt(this.effects.length)];n.addTag(N)}}};o(XW,"PostAttackApplyBattlerTagAbAttr");let yG=XW;const QW=class QW extends as{constructor(A){super(),this.condition=A}canApplyPostDefend(A,s,R,n,I,r,L){if(!R&&r<yt.NO_EFFECT&&(!this.condition||this.condition(A,n,I))&&!I.hitsSubstitute(n,A)){const N=this.getTargetHeldItems(n).filter(l=>l.isTransferable);if(N.length&&(this.stolenItem=N[A.randSeedInt(N.length)],a.canTransferHeldItemModifier(this.stolenItem,A)))return!0}return!1}applyPostDefend(A,s,R,n,I,r,L){const N=this.getTargetHeldItems(n).filter(l=>l.isTransferable);this.stolenItem||(this.stolenItem=N[A.randSeedInt(N.length)]),a.tryTransferHeldItemModifier(this.stolenItem,A,!1)&&a.queueMessage(u.t("abilityTriggers:postDefendStealHeldItem",{pokemonNameWithAffix:ee(A),attackerName:n.name,stolenItemType:this.stolenItem.type.name})),this.stolenItem=void 0}getTargetHeldItems(A){return a.findModifiers(s=>s instanceof Ft&&s.pokemonId===A.id,A.isPlayer())}};o(QW,"PostDefendStealHeldItemAbAttr");let wG=QW;const $W=class $W extends Mt{canApplyPostSetStatus(A,s=null,R,n,I,r){return!0}applyPostSetStatus(A,s=null,R,n,I,r){}};o($W,"PostSetStatusAbAttr");let dU=$W;const JW=class JW extends dU{canApplyPostSetStatus(A,s,R,n,I,r){const L=new Set([re.BURN,re.PARALYSIS,re.POISON,re.TOXIC]);return(s??!1)&&L.has(n)}applyPostSetStatus(A,s=null,R,n,I,r){!I&&s&&s.trySetStatus(n,!0,A)}};o(JW,"SynchronizeStatusAbAttr");let vG=JW;const zW=class zW extends Mt{canApplyPostVictory(A,s,R,n){return!0}applyPostVictory(A,s,R,n){}};o(zW,"PostVictoryAbAttr");let XS=zW;const jW=class jW extends XS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostVictory(A,s,R,n){const I=typeof this.stat=="function"?this.stat(A):this.stat;R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[I],this.stages))}};o(jW,"PostVictoryStatStageChangeAbAttr");let da=jW;const qW=class qW extends XS{constructor(A){super(!0),this.formFunc=A}canApplyPostVictory(A,s,R,n){return this.formFunc(A)!==A.formIndex}applyPostVictory(A,s,R,n){R||a.triggerPokemonFormChange(A,qt,!1)}};o(qW,"PostVictoryFormChangeAbAttr");let VG=qW;const e5=class e5 extends Mt{canApplyPostKnockOut(A,s,R,n,I){return!0}applyPostKnockOut(A,s,R,n,I){}};o(e5,"PostKnockOutAbAttr");let QS=e5;const t5=class t5 extends QS{constructor(A,s){super(),this.stat=A,this.stages=s}applyPostKnockOut(A,s,R,n,I){const r=typeof this.stat=="function"?this.stat(A):this.stat;R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[r],this.stages))}};o(t5,"PostKnockOutStatStageChangeAbAttr");let xG=t5;const A5=class A5 extends QS{constructor(){super()}canApplyPostKnockOut(A,s,R,n,I){return A.isPlayer()===n.isPlayer()&&n.getAbility().isCopiable}applyPostKnockOut(A,s,R,n,I){R||(A.setTempAbility(n.getAbility()),a.queueMessage(u.t("abilityTriggers:copyFaintedAllyAbility",{pokemonNameWithAffix:ee(n),abilityName:nA[n.getAbility().id].name})))}};o(A5,"CopyFaintedAllyAbilityAbAttr");let HU=A5;const E5=class E5 extends Mt{constructor(A){super(!1),this.stats=A??YO}canApply(A,s,R,n){return this.stats.includes(n[0])}apply(A,s,R,n,I){I[1].value=!0}};o(E5,"IgnoreOpponentStatStagesAbAttr");let va=E5;const s5=class s5 extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){n.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:intimidateImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(s5,"IntimidateImmunityAbAttr");let ki=s5;const R5=class R5 extends Mt{constructor(A,s,R){super(!0),this.stats=A,this.stages=s,this.overwrites=!!R}apply(A,s,R,n,I){R||a.pushPhase(new AA(A.getBattlerIndex(),!1,this.stats,this.stages)),n.value=this.overwrites}};o(R5,"PostIntimidateStatStageChangeAbAttr");let $S=R5;const O5=class O5 extends Mt{constructor(A=!0,s=!0){super(A),this.activateOnGain=s}shouldActivateOnGain(){return this.activateOnGain}canApplyPostSummon(A,s,R,n){return!0}applyPostSummon(A,s,R,n){}};o(O5,"PostSummonAbAttr");let ME=O5;const n5=class n5 extends ME{constructor(A){super(!0),this.arenaTags=A}canApplyPostSummon(A,s,R,n){return a.arena.tags.some(I=>this.arenaTags.includes(I.tagType))}applyPostSummon(A,s,R,n){if(!R)for(const I of this.arenaTags)a.arena.removeTag(I)}};o(n5,"PostSummonRemoveArenaTagAbAttr");let bG=n5;const a5=class a5 extends ME{constructor(A,s,R,n,I){super(A),this.tagType=s,this.turnCount=R,this.side=n,this.quiet=I}applyPostSummon(A,s,R,n){this.sourceId=A.id,R||a.arena.addTag(this.tagType,this.turnCount,void 0,this.sourceId,this.side,this.quiet)}};o(a5,"PostSummonAddArenaTagAbAttr");let kG=a5;const i5=class i5 extends ME{constructor(A){super(!0),this.messageFunc=A}applyPostSummon(A,s,R,n){R||a.queueMessage(this.messageFunc(A))}};o(i5,"PostSummonMessageAbAttr");let ER=i5;const I5=class I5 extends ME{constructor(A){super(!0),this.message=A}applyPostSummon(A,s,R,n){R||a.queueMessage(this.message)}};o(I5,"PostSummonUnnamedMessageAbAttr");let fU=I5;const r5=class r5 extends ME{constructor(A,s,R){super(R),this.tagType=A,this.turnCount=s}canApplyPostSummon(A,s,R,n){return A.canAddTag(this.tagType)}applyPostSummon(A,s,R,n){R||A.addTag(this.tagType,this.turnCount)}};o(r5,"PostSummonAddBattlerTagAbAttr");let kn=r5;const L5=class L5 extends ME{constructor(A,s,R,n){super(!0),this.stats=A,this.stages=s,this.selfTarget=!!R,this.intimidate=!!n}applyPostSummon(A,s,R,n){if(!R)if(this.selfTarget)a.unshiftPhase(new AA(A.getBattlerIndex(),!0,this.stats,this.stages));else for(const I of A.getOpponents()){const r=new Pt(!1);this.intimidate&&(_t(ki,I,r,R),_t($S,I,r,R),I.getTag(w.SUBSTITUTE)&&(r.value=!0)),r.value||a.unshiftPhase(new AA(I.getBattlerIndex(),!1,this.stats,this.stages))}}};o(L5,"PostSummonStatStageChangeAbAttr");let Zi=L5;const o5=class o5 extends ME{constructor(A,s=!1){super(),this.healRatio=A||4,this.showAnim=s}canApplyPostSummon(A,s,R,n){var I;return((I=A.getAlly())==null?void 0:I.isActive(!0))??!1}applyPostSummon(A,s,R,n){const I=A.getAlly();!R&&!Pe(I)&&a.unshiftPhase(new ZE(I.getBattlerIndex(),Qt(A.getMaxHp()/this.healRatio),u.t("abilityTriggers:postSummonAllyHeal",{pokemonNameWithAffix:ee(I),pokemonName:A.name}),!0,!this.showAnim))}};o(o5,"PostSummonAllyHealAbAttr");let ZG=o5;const T5=class T5 extends ME{constructor(){super()}canApplyPostSummon(A,s,R,n){var I;return((I=A.getAlly())==null?void 0:I.isActive(!0))??!1}applyPostSummon(A,s,R,n){const I=A.getAlly();if(!R&&!Pe(I)){for(const r of YO)I.setStatStage(r,0);a.queueMessage(u.t("abilityTriggers:postSummonClearAllyStats",{pokemonNameWithAffix:ee(I)}))}}};o(T5,"PostSummonClearAllyStatStagesAbAttr");let XG=T5;const S5=class S5 extends ME{canApplyPostSummon(A,s,R,n){this.enemyDef=0,this.enemySpDef=0,this.enemyCountTally=0;for(const I of A.getOpponents())this.enemyCountTally++,this.enemyDef+=I.getEffectiveStat(p.DEF),this.enemySpDef+=I.getEffectiveStat(p.SPDEF);return this.enemyDef=Math.round(this.enemyDef/this.enemyCountTally),this.enemySpDef=Math.round(this.enemySpDef/this.enemyCountTally),this.enemyDef>0&&this.enemySpDef>0}applyPostSummon(A,s,R,n){this.enemyDef<this.enemySpDef?this.stats=[p.ATK]:this.stats=[p.SPATK],R||a.unshiftPhase(new AA(A.getBattlerIndex(),!1,this.stats,1))}};o(S5,"DownloadAbAttr");let QG=S5;const N5=class N5 extends ME{constructor(A){super(),this.weatherType=A}canApplyPostSummon(A,s,R,n){var r;return(this.weatherType===Oe.HEAVY_RAIN||this.weatherType===Oe.HARSH_SUN||this.weatherType===Oe.STRONG_WINDS||!((r=a.arena.weather)!=null&&r.isImmutable()))&&a.arena.canSetWeather(this.weatherType)}applyPostSummon(A,s,R,n){R||a.arena.trySetWeather(this.weatherType,A)}};o(N5,"PostSummonWeatherChangeAbAttr");let Nn=N5;const l5=class l5 extends ME{constructor(A){super(),this.terrainType=A}canApplyPostSummon(A,s,R,n){return a.arena.canSetTerrain(this.terrainType)}applyPostSummon(A,s,R,n){R||a.arena.trySetTerrain(this.terrainType,!1,A)}};o(l5,"PostSummonTerrainChangeAbAttr");let Pi=l5;const C5=class C5 extends ME{constructor(A){super(!0),this.formFunc=A}canApplyPostSummon(A,s,R,n){return this.formFunc(A)!==A.formIndex}applyPostSummon(A,s,R,n){R||a.triggerPokemonFormChange(A,qt,!1)}};o(C5,"PostSummonFormChangeAbAttr");let Ha=C5;const u5=class u5 extends ME{canApplyPostSummon(A,s,R,n){const I=A.getOpponents();if(!I.length)return!1;let r;return I.length>1?a.executeWithSeedOffset(()=>r=eE(I),a.currentBattle.waveIndex):r=I[0],!r.getAbility().isCopiable&&!(A.hasAbility(O.TRACE)&&r.getAbility().id===O.WONDER_GUARD)?!1:(this.target=r,this.targetAbilityName=nA[r.getAbility().id].name,!0)}applyPostSummon(A,s,R,n){R||(A.setTempAbility(this.target.getAbility()),T7(this.target),A.updateInfo())}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:trace",{pokemonName:ee(A),targetName:ee(this.target),abilityName:this.targetAbilityName})}};o(u5,"PostSummonCopyAbilityAbAttr");let $G=u5;const U5=class U5 extends ME{constructor(...A){super(!1),this.statusEffect=A}canApplyPostSummon(A,s,R,n){return(A instanceof WE?a.getPlayerField():a.getEnemyField()).filter(r=>r.isAllowedInBattle()).length>0}applyPostSummon(A,s,R,n){const r=(A instanceof WE?a.getPlayerField():a.getEnemyField()).filter(L=>L.isAllowedInBattle());if(!R)for(const L of r)L.status&&this.statusEffect.includes(L.status.effect)&&(a.queueMessage(oi(L.status.effect,ee(L))),L.resetStatus(!1),L.updateInfo())}};o(U5,"PostSummonUserFieldRemoveStatusEffectAbAttr");let JG=U5;const D5=class D5 extends ME{canApplyPostSummon(A,s,R,n){if(!a.currentBattle.double)return!1;const I=A.getAlly();return!(Pe(I)||I.getStatStages().every(r=>r===0))}applyPostSummon(A,s,R,n){const I=A.getAlly();if(!R&&!Pe(I)){for(const r of YO)A.setStatStage(r,I.getStatStage(r));A.updateInfo()}}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:costar",{pokemonName:ee(A),allyName:ee(A.getAlly())})}};o(D5,"PostSummonCopyAllyStatsAbAttr");let zG=D5;const M5=class M5 extends ME{constructor(){super(!0,!1)}getTarget(A){let s;return A.length>1?a.executeWithSeedOffset(()=>{if(A[0].fusionSpecies){s=A[1];return}else if(A[1].fusionSpecies){s=A[0];return}s=eE(A)},a.currentBattle.waveIndex):s=A[0],s=s,s}canApplyPostSummon(A,s,R,n){const I=A.getOpponents();return R||!I.length?R:!(this.getTarget(I).fusionSpecies||A.fusionSpecies)}applyPostSummon(A,s,R,n){const I=this.getTarget(A.getOpponents());a.unshiftPhase(new iU(A.getBattlerIndex(),I.getBattlerIndex(),!0))}};o(M5,"PostSummonTransformAbAttr");let jG=M5;const c5=class c5 extends ME{canApplyPostSummon(A,s,R,n){return S7().length>0}applyPostSummon(A,s,R,n){R||a.arena.triggerWeatherBasedFormChangesToNormal()}};o(c5,"PostSummonWeatherSuppressedFormChangeAbAttr");let BU=c5;const h5=class h5 extends ME{constructor(A){super(!0),this.ability=A}canApplyPostSummon(A,s,R,n){const I=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,r=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return I||r}applyPostSummon(A,s,R,n){R||(a.triggerPokemonFormChange(A,wR),a.triggerPokemonFormChange(A,qn))}};o(h5,"PostSummonFormChangeByWeatherAbAttr");let gU=h5;const _5=class _5 extends Mt{constructor(){super(!0)}canApply(A,s,R,n){var r;const I=A.getAlly();return((r=a.currentBattle)==null?void 0:r.double)&&!Pe(I)&&I.species.speciesId===e.DONDOZO&&!(I.isFainted()||I.getTag(w.COMMANDED))}apply(A,s,R,n,I){var r;R||(A.lapseTags(As.MOVE_EFFECT),a.triggerPokemonBattleAnim(A,xR.COMMANDER_APPLY),(r=A.getAlly())==null||r.addTag(w.COMMANDED,0,t.NONE,A.id),a.tryRemovePhase(L=>L instanceof _A&&L.pokemon===A))}};o(_5,"CommanderAbAttr");let AL=_5;const P5=class P5 extends Mt{constructor(A=!0){super(A)}canApplyPreSwitchOut(A,s,R,n){return!0}applyPreSwitchOut(A,s,R,n){}};o(P5,"PreSwitchOutAbAttr");let EL=P5;const G5=class G5 extends EL{constructor(){super(!1)}canApplyPreSwitchOut(A,s,R,n){return!Pe(A.status)}applyPreSwitchOut(A,s,R,n){R||(A.resetStatus(),A.updateInfo())}};o(G5,"PreSwitchOutResetStatusAbAttr");let qG=G5;const d5=class d5 extends EL{canApplyPreSwitchOut(A,s,R,n){return!A.isFullHp()}applyPreSwitchOut(A,s,R,n){if(!R){const I=Qt(A.getMaxHp()*.33);A.heal(I),A.updateInfo()}}};o(d5,"PreSwitchOutHealAbAttr");let ed=d5;const H5=class H5 extends EL{constructor(A){super(),this.formFunc=A}canApplyPreSwitchOut(A,s,R,n){return this.formFunc(A)!==A.formIndex}applyPreSwitchOut(A,s,R,n){R||a.triggerPokemonFormChange(A,qt,!1)}};o(H5,"PreSwitchOutFormChangeAbAttr");let td=H5;const f5=class f5 extends Mt{canApplyPreLeaveField(A,s,R,n){return!0}applyPreLeaveField(A,s,R,n){}};o(f5,"PreLeaveFieldAbAttr");let hI=f5;const B5=class B5 extends hI{canApplyPreLeaveField(A,s,R,n){var r;switch((r=a.arena.weather)==null?void 0:r.weatherType){case Oe.HARSH_SUN:if(A.hasAbility(O.DESOLATE_LAND)&&a.getField(!0).filter(L=>L!==A).filter(L=>L.hasAbility(O.DESOLATE_LAND)).length===0)return!0;break;case Oe.HEAVY_RAIN:if(A.hasAbility(O.PRIMORDIAL_SEA)&&a.getField(!0).filter(L=>L!==A).filter(L=>L.hasAbility(O.PRIMORDIAL_SEA)).length===0)return!0;break;case Oe.STRONG_WINDS:if(A.hasAbility(O.DELTA_STREAM)&&a.getField(!0).filter(L=>L!==A).filter(L=>L.hasAbility(O.DELTA_STREAM)).length===0)return!0;break}return!1}applyPreLeaveField(A,s,R,n){R||a.arena.trySetWeather(Oe.NONE)}};o(B5,"PreLeaveFieldClearWeatherAbAttr");let Eo=B5;const g5=class g5 extends hI{constructor(){super(!1)}canApplyPreLeaveField(A,s,R,n){return!!a.arena.getTag(Fe.NEUTRALIZING_GAS)}applyPreLeaveField(A,s,R,n){a.arena.getTag(Fe.NEUTRALIZING_GAS).onSourceLeave(a.arena)}};o(g5,"PreLeaveFieldRemoveSuppressAbilitiesSourceAbAttr");let Va=g5;const m5=class m5 extends Mt{canApplyPreStatStageChange(A,s,R,n,I,r){return!0}applyPreStatStageChange(A,s,R,n,I,r){}};o(m5,"PreStatStageChangeAbAttr");let JS=m5;const p5=class p5 extends JS{applyPreStatStageChange(A,s,R,n,I,r){const L=r[0],N=r[1];this.reflectedStat=n,R||a.unshiftPhase(new AA(L.getBattlerIndex(),!1,[n],N,!0,!1,!0,null,!0)),I.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:protectStat",{pokemonNameWithAffix:ee(A),abilityName:s,statName:this.reflectedStat?u.t(mE(this.reflectedStat)):u.t("battle:stats")})}};o(p5,"ReflectStatStageChangeAbAttr");let mU=p5;const K5=class K5 extends JS{constructor(A){super(),this.protectedStat=A}canApplyPreStatStageChange(A,s,R,n,I,r){return Pe(this.protectedStat)||n===this.protectedStat}applyPreStatStageChange(A,s,R,n,I,r){I.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:protectStat",{pokemonNameWithAffix:ee(A),abilityName:s,statName:this.protectedStat?u.t(mE(this.protectedStat)):u.t("battle:stats")})}};o(K5,"ProtectStatAbAttr");let aO=K5;const F5=class F5 extends ja{constructor(...A){super((s,R,n)=>!0),this.effects=A}canApplyPostAttack(A,s,R,n,I,r,L){return super.canApplyPostAttack(A,s,R,n,I,r,L)&&this.effects.indexOf(L[0])>-1&&!n.isFainted()&&n.canAddTag(w.CONFUSED)}applyPostAttack(A,s,R,n,I,r,L){R||n.addTag(w.CONFUSED,A.randSeedIntRange(2,5),I.id,n.id)}};o(F5,"ConfusionOnStatusEffectAbAttr");let pU=F5;const Y5=class Y5 extends Mt{canApplyPreSetStatus(A,s,R,n,I,r){return!0}applyPreSetStatus(A,s,R,n,I,r){}};o(Y5,"PreSetStatusAbAttr");let Ad=Y5;const W5=class W5 extends Ad{constructor(...A){super(),this.immuneEffects=A}canApplyPreSetStatus(A,s,R,n,I,r){return n!==re.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(n)}applyPreSetStatus(A,s,R,n,I,r){I.value=!0}getTriggerMessage(A,s,...R){return this.immuneEffects.length?u.t("abilityTriggers:statusEffectImmunityWithName",{pokemonNameWithAffix:ee(A),abilityName:s,statusEffectName:nk(R[0])}):u.t("abilityTriggers:statusEffectImmunity",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(W5,"PreSetStatusEffectImmunityAbAttr");let KU=W5;const y5=class y5 extends KU{};o(y5,"StatusEffectImmunityAbAttr");let DR=y5;const w5=class w5 extends KU{};o(w5,"UserFieldStatusEffectImmunityAbAttr");let sL=w5;const v5=class v5 extends sL{canApplyPreSetStatus(A,s,R,n,I,r){return(!I.value&&n!==re.FAINT&&this.immuneEffects.length<1||this.immuneEffects.includes(n))&&this.condition(r[0],r[1])}constructor(A,...s){super(...s),this.condition=A}};o(v5,"ConditionalUserFieldStatusEffectImmunityAbAttr");let Ed=v5;const V5=class V5 extends JS{constructor(A,s){super(),this.condition=A}canApplyPreStatStageChange(A,s,R,n,I,r){const L=r[0];return L?!I.value&&(Pe(this.protectedStat)||n===this.protectedStat)&&this.condition(L):!1}applyPreStatStageChange(A,s,R,n,I,r){I.value=!0}};o(V5,"ConditionalUserFieldProtectStatAbAttr");let RL=V5;const x5=class x5 extends Mt{canApplyPreApplyBattlerTag(A,s,R,n,I,r){return!0}applyPreApplyBattlerTag(A,s,R,n,I,r){}};o(x5,"PreApplyBattlerTagAbAttr");let sd=x5;const b5=class b5 extends sd{constructor(A){super(!0),this.immuneTagTypes=Array.isArray(A)?A:[A]}canApplyPreApplyBattlerTag(A,s,R,n,I,r){return this.battlerTag=n,!I.value&&this.immuneTagTypes.includes(n.tagType)}applyPreApplyBattlerTag(A,s,R,n,I,r){I.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:battlerTagImmunity",{pokemonNameWithAffix:ee(A),abilityName:s,battlerTagName:this.battlerTag.getDescriptor()})}};o(b5,"PreApplyBattlerTagImmunityAbAttr");let FU=b5;const k5=class k5 extends FU{};o(k5,"BattlerTagImmunityAbAttr");let JO=k5;const Z5=class Z5 extends FU{};o(Z5,"UserFieldBattlerTagImmunityAbAttr");let _I=Z5;const X5=class X5 extends _I{canApplyPreApplyBattlerTag(A,s,R,n,I,r){return super.canApplyPreApplyBattlerTag(A,s,R,n,I,r)&&this.condition(r[0])}constructor(A,s){super(s),this.condition=A}};o(X5,"ConditionalUserFieldBattlerTagImmunityAbAttr");let Rd=X5;const Q5=class Q5 extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){I[0].value=!0}};o(Q5,"BlockCritAbAttr");let zS=Q5;const $5=class $5 extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){I[0].value+=1}};o($5,"BonusCritAbAttr");let YU=$5;const J5=class J5 extends Mt{constructor(A){super(!1),this.multAmount=A}canApply(A,s,R,n){return n[0].value>1}apply(A,s,R,n,I){const r=I[0];r.value*=this.multAmount}};o(J5,"MultCritAbAttr");let WU=J5;const z5=class z5 extends Mt{constructor(A,s){super(!1),this.condition=A}canApply(A,s,R,n){const I=n[1],r=n[2];return this.condition(A,I,r)}apply(A,s,R,n,I){I[0].value=!0}};o(z5,"ConditionalCritAbAttr");let yU=z5;const j5=class j5 extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){n.value=!0}};o(j5,"BlockNonDirectDamageAbAttr");let fE=j5;const q5=class q5 extends Mt{constructor(...A){super(!1),this.effects=A}canApply(A,s,R,n){return!!(A.status&&this.effects.includes(A.status.effect))}apply(A,s,R,n,I){n.value=!0}};o(q5,"BlockStatusDamageAbAttr");let wU=q5;const ey=class ey extends Mt{apply(A,s,R,n,I){n.value=!0}};o(ey,"BlockOneHitKOAbAttr");let vU=ey;const ty=class ty extends Mt{constructor(A,s){super(!1),this.moveFunc=A,this.changeAmount=s}canApply(A,s,R,n){return this.moveFunc(A,n[0])}apply(A,s,R,n,I){I[1].value+=this.changeAmount}};o(ty,"ChangeMovePriorityAbAttr");let Fa=ty;const Ay=class Ay extends Mt{};o(Ay,"IgnoreContactAbAttr");let VU=Ay;const Ey=class Ey extends Mt{canApplyPreWeatherEffect(A,s,R,n,I,r){return!0}applyPreWeatherEffect(A,s,R,n,I,r){}};o(Ey,"PreWeatherEffectAbAttr");let xU=Ey;const sy=class sy extends xU{};o(sy,"PreWeatherDamageAbAttr");let bU=sy;const Ry=class Ry extends bU{constructor(...A){super(!1),this.weatherTypes=A}canApplyPreWeatherEffect(A,s,R,n,I,r){return!this.weatherTypes.length||this.weatherTypes.indexOf(n==null?void 0:n.weatherType)>-1}applyPreWeatherEffect(A,s,R,n,I,r){I.value=!0}};o(Ry,"BlockWeatherDamageAttr");let fa=Ry;const Oy=class Oy extends xU{constructor(A){super(!0),this.affectsImmutable=!!A}canApplyPreWeatherEffect(A,s,R,n,I,r){return this.affectsImmutable||n.isImmutable()}applyPreWeatherEffect(A,s,R,n,I,r){I.value=!0}};o(Oy,"SuppressWeatherEffectAbAttr");let PI=Oy;function Kl(){return E=>{if(!E.turnData)return!0;const A=E.turnData.attacksReceived[0];if(!A)return!0;const s=E.getOpponents().find(n=>n.id===A.sourceId);return s?!(Ve[A.move].chance>=0&&s.hasAbility(O.SHEER_FORCE)):!0}}o(Kl,"getSheerForceHitDisableAbCondition");function Ss(...E){return()=>{var s,R,n;if(!((s=a)!=null&&s.arena)||(R=a.arena.weather)!=null&&R.isEffectSuppressed())return!1;const A=(n=a.arena.weather)==null?void 0:n.weatherType;return!!A&&E.indexOf(A)>-1}}o(Ss,"getWeatherCondition");function Rj(){return E=>{for(const A of E.getOpponents())for(const s of A.moveset)if(s){if(s.getMove()instanceof m&&E.getAttackTypeEffectiveness(s.getMove().type,A,!0,void 0,s.getMove())>=2||s.getMove().hasAttr(En))return!0;if(s.getMove().id===t.HIDDEN_POWER){const R=Math.floor(((A.ivs[p.HP]&1)+(A.ivs[p.ATK]&1)*2+(A.ivs[p.DEF]&1)*4+(A.ivs[p.SPD]&1)*8+(A.ivs[p.SPATK]&1)*16+(A.ivs[p.SPDEF]&1)*32)*15/63),n=[i.FIGHTING,i.FLYING,i.POISON,i.GROUND,i.ROCK,i.BUG,i.GHOST,i.STEEL,i.FIRE,i.WATER,i.GRASS,i.ELECTRIC,i.PSYCHIC,i.ICE,i.DRAGON,i.DARK][R];if(E.getAttackTypeEffectiveness(n,A)>=2)return!0}}return!1}}o(Rj,"getAnticipationCondition");function k8(E){return A=>{var s;return!((s=A.battleData)!=null&&s.abilitiesApplied.includes(E))}}o(k8,"getOncePerBattleCondition");const ny=class ny extends ME{constructor(){super(!0)}applyPostSummon(A,s,R,n){let I=0,r="",L=0;for(const N of A.getOpponents())for(const l of N.moveset)(l==null?void 0:l.getMove())instanceof ge?L=1:l!=null&&l.getMove().hasAttr(En)?L=150:(l==null?void 0:l.getMove().id)===t.COUNTER||(l==null?void 0:l.getMove().id)===t.MIRROR_COAT||(l==null?void 0:l.getMove().id)===t.METAL_BURST?L=120:(l==null?void 0:l.getMove().power)===-1?L=80:L=(l==null?void 0:l.getMove().power)??0,L>I&&(I=L,r=(l==null?void 0:l.getName())??"");R||a.queueMessage(u.t("abilityTriggers:forewarn",{pokemonNameWithAffix:ee(A),moveName:r}))}};o(ny,"ForewarnAbAttr");let Od=ny;const ay=class ay extends ME{constructor(){super(!0)}applyPostSummon(A,s,R,n){if(!R)for(const I of A.getOpponents())a.queueMessage(u.t("abilityTriggers:frisk",{pokemonNameWithAffix:ee(A),opponentName:I.name,opponentAbilityName:I.getAbility().name})),T7(I)}};o(ay,"FriskAbAttr");let nd=ay;const iy=class iy extends Mt{canApplyPostWeatherChange(A,s,R,n,I){return!0}applyPostWeatherChange(A,s,R,n,I){}};o(iy,"PostWeatherChangeAbAttr");let jS=iy;const Iy=class Iy extends jS{constructor(A,s){super(!1),this.ability=A,this.formRevertingWeathers=s}canApplyPostWeatherChange(A,s,R,n,I){const r=A.species.speciesId===e.CASTFORM&&this.ability===O.FORECAST,L=A.species.speciesId===e.CHERRIM&&this.ability===O.FLOWER_GIFT;return r||L}applyPostWeatherChange(A,s,R,n,I){var L;if(R)return;const r=(L=a.arena.weather)==null?void 0:L.weatherType;r&&this.formRevertingWeathers.includes(r)?a.arena.triggerWeatherBasedFormChangesToNormal():a.arena.triggerWeatherBasedFormChanges()}};o(Iy,"PostWeatherChangeFormChangeAbAttr");let kU=Iy;const ry=class ry extends jS{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.weatherTypes=R}canApplyPostWeatherChange(A,s,R,n,I){return!!this.weatherTypes.find(r=>n===r)&&A.canAddTag(this.tagType)}applyPostWeatherChange(A,s,R,n,I){R||A.addTag(this.tagType,this.turnCount)}};o(ry,"PostWeatherChangeAddBattlerTagAttr");let ZU=ry;const Ly=class Ly extends Mt{constructor(...A){super(),this.weatherTypes=A}canApplyPostWeatherLapse(A,s,R,n,I){return!0}applyPostWeatherLapse(A,s,R,n,I){}getCondition(){return Ss(...this.weatherTypes)}};o(Ly,"PostWeatherLapseAbAttr");let qS=Ly;const oy=class oy extends qS{constructor(A,...s){super(...s),this.healFactor=A}canApplyPostWeatherLapse(A,s,R,n,I){return!A.isFullHp()}applyPostWeatherLapse(A,s,R,n,I){const r=(s?A.getPassiveAbility():A.getAbility()).name;R||a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/(16/this.healFactor)),u.t("abilityTriggers:postWeatherLapseHeal",{pokemonNameWithAffix:ee(A),abilityName:r}),!0))}};o(oy,"PostWeatherLapseHealAbAttr");let so=oy;const Ty=class Ty extends qS{constructor(A,...s){super(...s),this.damageFactor=A}canApplyPostWeatherLapse(A,s,R,n,I){return!A.hasAbilityWithAttr(fE)}applyPostWeatherLapse(A,s,R,n,I){if(!R){const r=(s?A.getPassiveAbility():A.getAbility()).name;a.queueMessage(u.t("abilityTriggers:postWeatherLapseDamage",{pokemonNameWithAffix:ee(A),abilityName:r})),A.damageAndUpdate(Qt(A.getMaxHp()/(16/this.damageFactor)),{result:yt.INDIRECT})}}};o(Ty,"PostWeatherLapseDamageAbAttr");let XU=Ty;const Sy=class Sy extends Mt{canApplyPostTerrainChange(A,s,R,n,I){return!0}applyPostTerrainChange(A,s,R,n,I){}};o(Sy,"PostTerrainChangeAbAttr");let QU=Sy;const Ny=class Ny extends QU{constructor(A,s,...R){super(),this.tagType=A,this.turnCount=s,this.terrainTypes=R}canApplyPostTerrainChange(A,s,R,n,I){return!!this.terrainTypes.find(r=>r===n)&&A.canAddTag(this.tagType)}applyPostTerrainChange(A,s,R,n,I){R||A.addTag(this.tagType,this.turnCount)}};o(Ny,"PostTerrainChangeAddBattlerTagAttr");let ad=Ny;function Fl(...E){return A=>{var R;const s=(R=a.arena.terrain)==null?void 0:R.terrainType;return!!s&&E.indexOf(s)>-1}}o(Fl,"getTerrainCondition");const ly=class ly extends Mt{canApplyPostTurn(A,s,R,n){return!0}applyPostTurn(A,s,R,n){}};o(ly,"PostTurnAbAttr");let rn=ly;const Cy=class Cy extends rn{constructor(...A){super(!1),this.effects=A}canApplyPostTurn(A,s,R,n){return!Pe(A.status)&&this.effects.includes(A.status.effect)&&!A.isFullHp()}applyPostTurn(A,s,R,n){if(!R){const I=(s?A.getPassiveAbility():A.getAbility()).name;a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/8),u.t("abilityTriggers:poisonHeal",{pokemonName:ee(A),abilityName:I}),!0))}}};o(Cy,"PostTurnStatusHealAbAttr");let id=Cy;const uy=class uy extends rn{constructor(A=!1){super(!0),this.allyTarget=A}canApplyPostTurn(A,s,R,n){var I;return this.allyTarget?this.target=A.getAlly():this.target=A,!Pe((I=this.target)==null?void 0:I.status)}applyPostTurn(A,s,R,n){var I,r;!R&&((I=this.target)!=null&&I.status)&&(a.queueMessage(oi((r=this.target.status)==null?void 0:r.effect,ee(this.target))),this.target.resetStatus(!1),this.target.updateInfo())}};o(uy,"PostTurnResetStatusAbAttr");let Ro=uy;const Uy=class Uy extends rn{constructor(A,s){super(),this.itemType=A,this.procChance=s}canApplyPostTurn(A,s,R,n){const I=Phaser.Math.RND.realInRange(0,1);return!(Math.max(Math.min(this.procChance(A),1),0)<I)&&this.itemType==="EATEN_BERRIES"&&!!A.battleData.berriesEaten}applyPostTurn(A,s,R,n){this.createEatenBerry(A,R)}createEatenBerry(A,s){const R=A.battleData.berriesEaten;if(!R.length)return!1;if(s)return!0;const n=He(R.length),I=R[n],r=new OS(I);R.splice(n);const L=a.findModifier(N=>N instanceof GE&&N.berryType===I,A.isPlayer());if(L)L.stackCount<L.getMaxHeldItemCount(A)&&L.stackCount++;else{const N=new GE(r,A.id,I,1);A.isPlayer()?a.addModifier(N):a.addEnemyModifier(N)}return a.queueMessage(u.t("abilityTriggers:postTurnLootCreateEatenBerry",{pokemonNameWithAffix:ee(A),berryName:r.name})),a.updateModifiers(A.isPlayer()),!0}};o(Uy,"PostTurnLootAbAttr");let Id=Uy;const Dy=class Dy extends rn{constructor(){super(!0)}applyPostTurn(A,s,R,n){const I=ka.filter(L=>A.getStatStage(L)<6);let r=ka.filter(L=>A.getStatStage(L)>-6);if(!R){if(I.length>0){const L=I[A.randSeedInt(I.length)];r=I.filter(N=>N!==L),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[L],2))}if(r.length>0){const L=r[A.randSeedInt(r.length)];a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[L],-1))}}}};o(Dy,"MoodyAbAttr");let rd=Dy;const My=class My extends rn{constructor(){super(!0)}canApplyPostTurn(A,s,R,n){return R||!A.turnData.switchedInThisTurn&&!A.turnData.failedRunAway}applyPostTurn(A,s,R,n){a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.SPD],1))}};o(My,"SpeedBoostAbAttr");let Ld=My;const cy=class cy extends rn{constructor(A){super(!0),this.formFunc=A}canApplyPostTurn(A,s,R,n){return this.formFunc(A)!==A.formIndex}applyPostTurn(A,s,R,n){R||a.triggerPokemonFormChange(A,qt,!1)}};o(cy,"PostTurnFormChangeAbAttr");let Zn=cy;const hy=class hy extends rn{canApplyPostTurn(A,s,R,n){return A.getOpponents().some(I=>{var r;return(((r=I.status)==null?void 0:r.effect)===re.SLEEP||I.hasAbility(O.COMATOSE))&&!I.hasAbilityWithAttr(fE)&&!I.switchOutStatus})}applyPostTurn(A,s,R,n){var I;for(const r of A.getOpponents())(((I=r.status)==null?void 0:I.effect)===re.SLEEP||r.hasAbility(O.COMATOSE))&&!r.hasAbilityWithAttr(fE)&&!r.switchOutStatus&&(R||(r.damageAndUpdate(Qt(r.getMaxHp()/8),{result:yt.INDIRECT}),a.queueMessage(u.t("abilityTriggers:badDreams",{pokemonName:ee(r)}))))}};o(hy,"PostTurnHurtIfSleepingAbAttr");let od=hy;const _y=class _y extends rn{constructor(){super()}canApplyPostTurn(A,s,R,n){return!R&&!Pe(a.currentBattle.lastUsedPokeball)&&!!A.isPlayer}applyPostTurn(A,s,R,n){const I=a.currentBattle.lastUsedPokeball;a.pokeballCounts[I]++,a.currentBattle.lastUsedPokeball=null,a.queueMessage(u.t("abilityTriggers:fetchBall",{pokemonNameWithAffix:ee(A),pokeballName:ZC(I)}))}};o(_y,"FetchBallAbAttr");let Td=_y;const Py=class Py extends Mt{};o(Py,"PostBiomeChangeAbAttr");let eN=Py;const Gy=class Gy extends eN{constructor(A){super(),this.weatherType=A}canApply(A,s,R,n){var I;return(((I=a.arena.weather)==null?void 0:I.isImmutable())??!1)&&a.arena.canSetWeather(this.weatherType)}apply(A,s,R,n,I){R||a.arena.trySetWeather(this.weatherType,A)}};o(Gy,"PostBiomeChangeWeatherChangeAbAttr");let ln=Gy;const dy=class dy extends eN{constructor(A){super(),this.terrainType=A}canApply(A,s,R,n){return a.arena.canSetTerrain(this.terrainType)}apply(A,s,R,n,I){R||a.arena.trySetTerrain(this.terrainType,!1,A)}};o(dy,"PostBiomeChangeTerrainChangeAbAttr");let Gi=dy;const Hy=class Hy extends Mt{canApplyPostMoveUsed(A,s,R,n,I,r){return!0}applyPostMoveUsed(A,s,R,n,I,r){}};o(Hy,"PostMoveUsedAbAttr");let $U=Hy;const fy=class fy extends $U{canApplyPostMoveUsed(A,s,R,n,I,r){const L=[w.FLYING,w.UNDERWATER,w.UNDERGROUND,w.HIDDEN];return R.getBattlerIndex()!==A.getBattlerIndex()&&!A.summonData.tags.some(N=>L.includes(N.tagType))}applyPostMoveUsed(A,s,R,n,I,r){if(!I)if(s.getMove()instanceof m||s.getMove()instanceof ge){const L=this.getTarget(A,R,n);a.unshiftPhase(new _A(A,L,s,!0,!0))}else s.getMove()instanceof at&&a.unshiftPhase(new _A(A,[A.getBattlerIndex()],s,!0,!0))}getTarget(A,s,R){return A.isPlayer()?s.isPlayer()?R:[s.getBattlerIndex()]:s.isPlayer()?[s.getBattlerIndex()]:R}};o(fy,"PostDancingMoveAbAttr");let Sd=fy;const By=class By extends Mt{canApplyPostItemLost(A,s,R){return!0}applyPostItemLost(A,s,R){}};o(By,"PostItemLostAbAttr");let iO=By;const gy=class gy extends iO{constructor(A){super(!1),this.tagType=A}canApplyPostItemLost(A,s,R){return!A.getTag(this.tagType)&&!s}applyPostItemLost(A,s,R){A.addTag(this.tagType)}};o(gy,"PostItemLostApplyBattlerTagAbAttr");let Nd=gy;const my=class my extends Mt{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,n,I){I[0].value*=this.multiplier}};o(my,"StatStageChangeMultiplierAbAttr");let tN=my;const py=class py extends Mt{apply(A,s,R,n,I){R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,I[0],I[1],!0,!1,!1))}};o(py,"StatStageChangeCopyAbAttr");let JU=py;const Ky=class Ky extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){n.value=!0}};o(Ky,"BypassBurnDamageReductionAbAttr");let zU=Ky;const Fy=class Fy extends Mt{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,n,I){I[0].value=Qt(I[0].value*this.multiplier)}};o(Fy,"ReduceBurnDamageAbAttr");let jU=Fy;const Yy=class Yy extends Mt{apply(A,s,R,n,I){I[0].value*=2}};o(Yy,"DoubleBerryEffectAbAttr");let gr=Yy;const Wy=class Wy extends Mt{apply(A,s,R,n,I){n.value=!0}};o(Wy,"PreventBerryUseAbAttr");let mr=Wy;const yy=class yy extends Mt{constructor(A){super(),this.healPercent=Math.max(Math.min(A,1),0)}apply(A,s,R,...n){const{name:I}=s?A.getPassiveAbility():A.getAbility();R||a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()*this.healPercent),u.t("abilityTriggers:healFromBerryUse",{pokemonNameWithAffix:ee(A),abilityName:I}),!0))}};o(yy,"HealFromBerryUseAbAttr");let AN=yy;const wy=class wy extends Mt{apply(A,s,R,n,I){I[0].value=256}};o(wy,"RunSuccessAbAttr");let qU=wy;const vy=class vy extends Mt{constructor(A){super(!1),this.arenaTrapCondition=A}canApplyCheckTrapped(A,s,R,n,I,r){return!0}applyCheckTrapped(A,s,R,n,I,r){}};o(vy,"CheckTrappedAbAttr");let eD=vy;const Vy=class Vy extends eD{canApplyCheckTrapped(A,s,R,n,I,r){return this.arenaTrapCondition(A,I)&&!(I.getTypes(!0).includes(i.GHOST)||I.getTypes(!0).includes(i.STELLAR)&&I.getTypes().includes(i.GHOST))&&!I.hasAbility(O.RUN_AWAY)}applyCheckTrapped(A,s,R,n,I,r){n.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:arenaTrap",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(Vy,"ArenaTrapAbAttr");let Oo=Vy;const xy=class xy extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){I[0].value=0}};o(xy,"MaxMultiHitAbAttr");let EN=xy;const by=class by extends Mt{constructor(){super(!0)}canApplyPostBattle(A,s,R,n){return!0}applyPostBattle(A,s,R,n){}};o(by,"PostBattleAbAttr");let sN=by;const ky=class ky extends sN{canApplyPostBattle(A,s,R,n){const I=a.currentBattle.postBattleLoot;return!R&&I.length&&n[0]?(this.randItem=eE(I),a.canTransferHeldItemModifier(this.randItem,A,1)):!1}applyPostBattle(A,s,R,n){const I=a.currentBattle.postBattleLoot;this.randItem||(this.randItem=eE(I)),a.tryTransferHeldItemModifier(this.randItem,A,!0,1,!0,void 0,!1)&&(I.splice(I.indexOf(this.randItem),1),a.queueMessage(u.t("abilityTriggers:postBattleLoot",{pokemonNameWithAffix:ee(A),itemName:this.randItem.type.name}))),this.randItem=void 0}};o(ky,"PostBattleLootAbAttr");let ld=ky;const Zy=class Zy extends Mt{canApplyPostFaint(A,s,R,n,I,r,...L){return!0}applyPostFaint(A,s,R,n,I,r,...L){}};o(Zy,"PostFaintAbAttr");let GI=Zy;const Xy=class Xy extends GI{canApplyPostFaint(A,s,R,n,I,r,...L){return S7().length>0}applyPostFaint(A,s,R,n,I,r,L){R||a.arena.triggerWeatherBasedFormChanges()}};o(Xy,"PostFaintUnsuppressedWeatherFormChangeAbAttr");let tD=Xy;const Qy=class Qy extends GI{constructor(A){super(!0),this.damageRatio=A}canApplyPostFaint(A,s,R,n,I,r,...L){const N=I!==void 0&&n!==void 0&&I.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:n,target:A}),l=new Pt(!1);return a.getField(!0).map(C=>_t(bS,C,l,R)),!(!N||l.value||n.hasAbilityWithAttr(fE))}applyPostFaint(A,s,R,n,I,r,...L){R||(n.damageAndUpdate(Qt(n.getMaxHp()*(1/this.damageRatio)),{result:yt.INDIRECT}),n.turnData.damageTaken+=Qt(n.getMaxHp()*(1/this.damageRatio)))}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postFaintContactDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};o(Qy,"PostFaintContactDamageAbAttr");let Cd=Qy;const $y=class $y extends GI{constructor(){super()}applyPostFaint(A,s,R,n,I,r,...L){if(I!==void 0&&n!==void 0&&!R){const N=A.turnData.attacksReceived[0].damage;n.damageAndUpdate(N,{result:yt.INDIRECT}),n.turnData.damageTaken+=N}}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:postFaintHpDamage",{pokemonNameWithAffix:ee(A),abilityName:s})}};o($y,"PostFaintHPDamageAbAttr");let ud=$y;const Jy=class Jy extends Mt{canApply(A,s,R,n){if(!this.canRedirect(n[0],n[2]))return!1;const I=n[1],r=A.getBattlerIndex();return I.value!==r}apply(A,s,R,n,I){const r=I[1],L=A.getBattlerIndex();r.value=L}canRedirect(A,s){const R=Ve[A];return!![De.NEAR_OTHER,De.OTHER].find(n=>R.moveTarget===n)}};o(Jy,"RedirectMoveAbAttr");let AD=Jy;const zy=class zy extends AD{constructor(A){super(),this.type=A}canRedirect(A,s){return super.canRedirect(A,s)&&s.getMoveType(Ve[A])===this.type}};o(zy,"RedirectTypeMoveAbAttr");let ED=zy;const jy=class jy extends Mt{};o(jy,"BlockRedirectAbAttr");let RI=jy;const qy=class qy extends Mt{constructor(A){super(!1),this.statusEffect=A}canApply(A,s,R,n){return n[1]instanceof je&&n[0]===this.statusEffect}apply(A,s,R,n,I){I[1].value-=1}};o(qy,"ReduceStatusEffectDurationAbAttr");let sD=qy;const ew=class ew extends Mt{constructor(){super(!0)}};o(ew,"FlinchEffectAbAttr");let RD=ew;const tw=class tw extends RD{constructor(A,s){super(),this.stats=Array.isArray(A)?A:[A],this.stages=s}apply(A,s,R,n,I){R||a.unshiftPhase(new AA(A.getBattlerIndex(),!0,this.stats,this.stages))}};o(tw,"FlinchStatStageChangeAbAttr");let Ud=tw;const Aw=class Aw extends Mt{};o(Aw,"IncreasePpAbAttr");let OD=Aw;const Ew=class Ew extends Mt{apply(A,s,R,n,I){n.value=!0}};o(Ew,"ForceSwitchOutImmunityAbAttr");let qa=Ew;const sw=class sw extends Mt{constructor(){super(!1)}canApply(A,s,R,n){const I=A.getHpRatio();return n[0].value<I}apply(A,s,R,n,I){I[0].value*=2}};o(sw,"ReduceBerryUseThresholdAbAttr");let Xi=sw;const Rw=class Rw extends Mt{constructor(A){super(!1),this.multiplier=A}apply(A,s,R,n,I){I[0].value*=this.multiplier}};o(Rw,"WeightMultiplierAbAttr");let RN=Rw;const Ow=class Ow extends Mt{constructor(){super(!1)}apply(A,s,R,n,I){I[0].setNature(A.getNature())}};o(Ow,"SyncEncounterNatureAbAttr");let nD=Ow;const nw=class nw extends Mt{constructor(A){super(!1),this.moveIgnoreFunc=A||((s,R)=>!0)}canApply(A,s,R,n){return this.moveIgnoreFunc(A,n[0])}apply(A,s,R,n,I){n.value=!0}};o(nw,"MoveAbilityBypassAbAttr");let ta=nw;const aw=class aw extends Mt{};o(aw,"AlwaysHitAbAttr");let ON=aw;const iw=class iw extends Mt{};o(iw,"IgnoreProtectOnContactAbAttr");let aD=iw;const Iw=class Iw extends Mt{constructor(){super(!1)}canApply(A,s,R,n){return n[0]instanceof Pt}apply(A,s,R,n,I){const r=I[0];r.value=!0}};o(Iw,"InfiltratorAbAttr");let dI=Iw;const rw=class rw extends Mt{};o(rw,"ReflectStatusMoveAbAttr");let Qi=rw;const Lw=class Lw extends Mt{constructor(){super(!1)}};o(Lw,"NoTransformAbilityAbAttr");let sR=Lw;const ow=class ow extends Mt{constructor(){super(!1)}};o(ow,"NoFusionAbilityAbAttr");let ls=ow;const Tw=class Tw extends Mt{constructor(A,s){super(!1),this.defenderType=A,this.allowedMoveTypes=s}canApply(A,s,R,n){return this.defenderType===n[1]&&this.allowedMoveTypes.includes(n[0])}apply(A,s,R,n,I){n.value=!0}};o(Tw,"IgnoreTypeImmunityAbAttr");let OL=Tw;const Sw=class Sw extends Mt{constructor(A,s){super(!1),this.statusEffect=A,this.defenderType=s}canApply(A,s,R,n){return this.statusEffect.includes(n[0])&&this.defenderType.includes(n[1])}apply(A,s,R,n,I){n.value=!0}};o(Sw,"IgnoreTypeStatusEffectImmunityAbAttr");let iD=Sw;const Nw=class Nw extends sN{constructor(){super()}canApplyPostBattle(A,s,R,n){return!R&&n[0]}applyPostBattle(A,s,R,n){a.currentBattle.moneyScattered+=a.getWaveMoneyAmount(.2)}};o(Nw,"MoneyAbAttr");let Dd=Nw;const lw=class lw extends Zi{constructor(A){super([p.ATK],1,!0,!1),this.tagType=A}canApplyPostSummon(A,s,R,n){const I=A.isPlayer()?Dt.PLAYER:Dt.ENEMY;return(a.arena.getTagOnSide(this.tagType,I)??!1)&&super.canApplyPostSummon(A,s,R,n)}applyPostSummon(A,s,R,n){super.applyPostSummon(A,s,R,n)}};o(lw,"PostSummonStatStageChangeOnArenaAbAttr");let Md=lw;const Cw=class Cw extends MR{constructor(A,s,R,n,I){super(A,s),this.multiplier=s,this.tagType=R,this.recoilDamageFunc=I,this.triggerMessageFunc=n}canApplyPreDefend(A,s,R,n,I,r,L){return this.condition(A,n,I)&&!I.hitsSubstitute(n,A)}applyPreDefend(A,s,R,n,I,r,L){R||(L[0].value=this.multiplier,A.removeTag(this.tagType),this.recoilDamageFunc&&A.damageAndUpdate(this.recoilDamageFunc(A),{result:yt.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}))}getTriggerMessage(A,s,...R){return this.triggerMessageFunc(A,s)}};o(Cw,"FormBlockDamageAbAttr");let ID=Cw;const uw=class uw extends Mt{constructor(A){super(!0),this.chance=A}canApply(A,s,R,n){var C;const I=n[0],r=a.currentBattle.turnCommands[A.getBattlerIndex()],L=(r==null?void 0:r.command)===OA.FIGHT,N=(C=r==null?void 0:r.move)!=null&&C.move?Ve[r.move.move]:null,l=(N==null?void 0:N.category)===g.PHYSICAL||(N==null?void 0:N.category)===g.SPECIAL;return!R&&!I.value&&A.randSeedInt(100)<this.chance&&L&&l}apply(A,s,R,n,I){const r=I[0];r.value=!0}getTriggerMessage(A,s,...R){return u.t("abilityTriggers:quickDraw",{pokemonName:ee(A)})}};o(uw,"BypassSpeedChanceAbAttr");let rD=uw;const Uw=class Uw extends Mt{constructor(A){super(!0),this.condition=A}canApply(A,s,R,n){var N;const I=a.currentBattle.turnCommands[A.getBattlerIndex()],r=(I==null?void 0:I.command)===OA.FIGHT,L=(N=I==null?void 0:I.move)!=null&&N.move?Ve[I.move.move]:null;return r&&this.condition(A,L)}apply(A,s,R,n,I){const r=I[0],L=I[1];r.value=!1,L.value=!1}};o(Uw,"PreventBypassSpeedChanceAbAttr");let LD=Uw;const Dw=class Dw extends ME{constructor(){super(!0)}canApply(A,s,R,n){return!A.isTerastallized}apply(A,s,R,n,I){const r=a.arena.getTerrainType(),L=this.determineTypeChange(A,r);L.length!==0&&(A.summonData.addedType&&L.includes(A.summonData.addedType)&&(A.summonData.addedType=null),A.summonData.types=L,A.updateInfo())}determineTypeChange(A,s){const R=[];switch(s){case Nt.ELECTRIC:R.push(i.ELECTRIC);break;case Nt.MISTY:R.push(i.FAIRY);break;case Nt.GRASSY:R.push(i.GRASS);break;case Nt.PSYCHIC:R.push(i.PSYCHIC);break;default:A.getTypes(!1,!1,!0).forEach(n=>{R.push(n)});break}return R}canApplyPostSummon(A,s,R,n){return a.arena.getTerrainType()!==Nt.NONE&&this.canApply(A,s,R,n)}applyPostSummon(A,s,R,n){this.apply(A,s,R,new Pt(!1),[])}getTriggerMessage(A,s,...R){const n=a.arena.getTerrainType(),I=ee(A);if(n===Nt.NONE)return u.t("abilityTriggers:pokemonTypeChangeRevert",{pokemonNameWithAffix:I});{const r=u.t(`pokemonInfo:Type.${i[this.determineTypeChange(A,n)[0]]}`);return u.t("abilityTriggers:pokemonTypeChange",{pokemonNameWithAffix:I,moveType:r})}}};o(Dw,"TerrainEventTypeChangeAbAttr");let oD=Dw;function xf(E,A,s,R,n,I,r=!1,L=!1,N=[]){if(!(E!=null&&E.canApplyAbility(A))||A&&E.getPassiveAbility().id===E.getAbility().id)return;const l=A?E.getPassiveAbility():E.getAbility();if(!(r&&l.getAttrs(s).some(C=>C instanceof ME&&!C.shouldActivateOnGain())))for(const C of l.getAttrs(s)){const U=C.getCondition();let D=!1;if(U&&!U(E)||!n(C,A))continue;a.setPhaseQueueSplice(),C.showAbility&&!L&&(a.queueAbilityDisplay(E,A,!0),D=!0);const M=C.getTriggerMessage(E,l.name,I);M&&(L||a.queueMessage(M),N.push(M)),R(C,A),D&&a.queueAbilityDisplay(E,A,!1),E.summonData&&!E.summonData.abilitiesApplied.includes(l.id)&&E.summonData.abilitiesApplied.push(l.id),E.battleData&&!L&&!E.battleData.abilitiesApplied.includes(l.id)&&E.battleData.abilitiesApplied.push(l.id),a.clearPhaseQueueSplice()}}o(xf,"applySingleAbAttrs");const Mw=class Mw{constructor(A){this.switchType=A}switchOutLogic(A){const s=A;if(s instanceof WE){if(a.getPlayerParty().filter(R=>R.isAllowedInBattle()&&!R.isOnField()).length<1)return!1;if(s.hp>0)return s.leaveField(this.switchType===uA.SWITCH),a.prependToPhase(new Xa(this.switchType,s.getFieldIndex(),!0,!0),QR),!0}else if(a.currentBattle.battleType!==Ht.WILD){if(a.getEnemyParty().filter(R=>R.isAllowedInBattle()&&!R.isOnField()).length<1)return!1;if(s.hp>0){s.leaveField(this.switchType===uA.SWITCH);const R=a.currentBattle.trainer?a.currentBattle.trainer.getNextSummonIndex(s.trainerSlot):0;return a.prependToPhase(new HR(this.switchType,s.getFieldIndex(),R,!1,!1),QR),!0}}else{const R=s.getAlly();if(!a.currentBattle.waveIndex||a.currentBattle.waveIndex%10===0)return!1;s.hp>0&&(s.leaveField(!1),a.queueMessage(u.t("moveTriggers:fled",{pokemonName:ee(s)}),null,!0,500),a.currentBattle.double&&!Pe(R)&&a.redirectPokemonMoves(s,R)),R!=null&&R.isActive(!0)||(a.clearEnemyHeldItemModifiers(),s.hp&&(a.pushPhase(new Qa(!1)),a.pushPhase(new lI)))}return!1}getSwitchOutCondition(A,s){var r;const R=A,n=R instanceof WE;if(n){const L=new Pt(!1);return _t(qa,s,L),!L.value}if(!n&&a.currentBattle.battleType===Ht.WILD&&!a.currentBattle.waveIndex&&a.currentBattle.waveIndex%10===0||!n&&a.currentBattle.isBattleMysteryEncounter()&&!((r=a.currentBattle.mysteryEncounter)!=null&&r.fleeAllowed))return!1;const I=n?a.getPlayerParty():a.getEnemyParty();return!n&&a.currentBattle.battleType===Ht.WILD||I.filter(L=>L.isAllowedInBattle()&&(n||L.trainerSlot===R.trainerSlot)).length>a.currentBattle.getBattlerCount()}getFailedText(A){const s=new Pt(!1);return _t(qa,A,s),s.value?u.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:ee(A)}):null}};o(Mw,"ForceSwitchOutHelper");let cd=Mw;function Oj(E){const A=E.getHeldItems().find(s=>s instanceof WI);return A?Qt(E.turnData.totalDamageDealt/8)*A.stackCount:0}o(Oj,"calculateShellBellRecovery");const cw=class cw extends Mt{canApplyPostDamage(A,s,R,n,I,r){return!0}applyPostDamage(A,s,R,n,I,r){}};o(cw,"PostDamageAbAttr");let nL=cw;const hw=class hw extends nL{constructor(A=.5){super(),this.helper=new cd(uA.SWITCH),this.hpRatio=A}canApplyPostDamage(A,s,R,n,I,r){const L=A.getMoveHistory(),N=[t.BELLY_DRUM,t.SUBSTITUTE,t.CURSE,t.PAIN_SPLIT];if(L.length>0){const C=L[L.length-1];if(N.includes(C.move))return!1}const l=[t.DRAGON_TAIL,t.CIRCLE_THROW];if(r){const C=r.getMoveHistory();if(C.length>0){const U=C[C.length-1];if(l.includes(U.move)||U.move===t.SKY_DROP&&U.result===DA.OTHER)return!1;if(Ve[U.move].chance>=0&&r.hasAbility(O.SHEER_FORCE))return!1;if(r.turnData.hitsLeft>1)return!1;r.turnData.hitCount>1&&(s=A.turnData.damageTaken)}}if(A.hp+s>=A.getMaxHp()*this.hpRatio){const C=Oj(A);if(A.hp-C<A.getMaxHp()*this.hpRatio){for(const U of A.getOpponents())if(!this.helper.getSwitchOutCondition(A,U))return!1;return!0}}return!1}applyPostDamage(A,s,R,n,I,r){this.helper.switchOutLogic(A)}};o(hw,"PostDamageForceSwitchAbAttr");let HI=hw;function sE(E,A,s,R,n,I=!1,r=[],L=!1){for(const N of[!1,!0])A&&(xf(A,N,E,s,R,n,L,I,r),a.clearPhaseQueueSplice())}o(sE,"applyAbAttrsInternal");function _t(E,A,s,R=!1,...n){sE(E,A,(I,r)=>I.apply(A,r,R,s,n),(I,r)=>I.canApply(A,r,R,n),n,R)}o(_t,"applyAbAttrs");function r7(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostBattleInit(A,I,s,R),(n,I)=>n.canApplyPostBattleInit(A,I,s,R),R,s)}o(r7,"applyPostBattleInitAbAttrs");function Xn(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPreDefend(A,N,I,s,R,n,r),(L,N)=>L.canApplyPreDefend(A,N,I,s,R,n,r),r,I)}o(Xn,"applyPreDefendAbAttrs");function nj(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPostDefend(A,N,I,s,R,n,r),(L,N)=>L.canApplyPostDefend(A,N,I,s,R,n,r),r,I)}o(nj,"applyPostDefendAbAttrs");function aj(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPostMoveUsed(A,s,R,n,I,r),(L,N)=>L.canApplyPostMoveUsed(A,s,R,n,I,r),r,I)}o(aj,"applyPostMoveUsedAbAttrs");function gc(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyStatStage(A,L,n,s,R,I),(r,L)=>r.canApplyStatStage(A,L,n,s,R,I),I)}o(gc,"applyStatMultiplierAbAttrs");function mc(E,A,s,R,n=!1,I,r,...L){return sE(E,A,(N,l)=>N.applyAllyStat(A,l,n,s,R,I,r,L),(N,l)=>N.canApplyAllyStat(A,l,n,s,R,I,r,L),L,n)}o(mc,"applyAllyStatMultiplierAbAttrs");function ij(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPostSetStatus(A,R,L,s,n,I),(r,L)=>r.canApplyPostSetStatus(A,R,L,s,n,I),I,n)}o(ij,"applyPostSetStatusAbAttrs");function bf(E,A,s,R,n=!1,I,r){sE(E,A,(L,N)=>L.applyPostDamage(A,s,N,n,I,r),(L,N)=>L.canApplyPostDamage(A,s,N,n,I,r),I)}o(bf,"applyPostDamageAbAttrs");function Ij(E,A,s,R,n,I,r=!1,...L){sE(E,A,(N,l)=>N.applyFieldStat(A,l,r,s,R,n,I,L),(N,l)=>N.canApplyFieldStat(A,l,r,s,R,n,I,L),L)}o(Ij,"applyFieldStatMultiplierAbAttrs");function An(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPreAttack(A,L,n,s,R,I),(r,L)=>r.canApplyPreAttack(A,L,n,s,R,I),I,n)}o(An,"applyPreAttackAbAttrs");function L7(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPostAttack(A,N,I,s,R,n,r),(L,N)=>L.canApplyPostAttack(A,N,I,s,R,n,r),r,I)}o(L7,"applyPostAttackAbAttrs");function rj(E,A,s,R=!1,...n){sE(E,A,(I,r)=>I.applyPostKnockOut(A,r,R,s,n),(I,r)=>I.canApplyPostKnockOut(A,r,R,s,n),n,R)}o(rj,"applyPostKnockOutAbAttrs");function Lj(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostVictory(A,I,s,R),(n,I)=>n.canApplyPostVictory(A,I,s,R),R,s)}o(Lj,"applyPostVictoryAbAttrs");function oj(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostSummon(A,I,s,R),(n,I)=>n.canApplyPostSummon(A,I,s,R),R,s)}o(oj,"applyPostSummonAbAttrs");function Tj(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPreSwitchOut(A,I,s,R),(n,I)=>n.canApplyPreSwitchOut(A,I,s,R),R,s)}o(Tj,"applyPreSwitchOutAbAttrs");function o7(E,A,s=!1,...R){return sE(E,A,(n,I)=>n.applyPreLeaveField(A,I,s,R),(n,I)=>n.canApplyPreLeaveField(A,I,s,R),R,s)}o(o7,"applyPreLeaveFieldAbAttrs");function Yl(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPreStatStageChange(A,L,n,s,R,I),(r,L)=>r.canApplyPreStatStageChange(A,L,n,s,R,I),I,n)}o(Yl,"applyPreStatStageChangeAbAttrs");function Sj(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPostStatStageChange(A,I,s,R,n,r),(L,N)=>L.canApplyPostStatStageChange(A,I,s,R,n,r),r,I)}o(Sj,"applyPostStatStageChangeAbAttrs");function Z8(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPreSetStatus(A,L,n,s,R,I),(r,L)=>r.canApplyPreSetStatus(A,L,n,s,R,I),I,n)}o(Z8,"applyPreSetStatusAbAttrs");function Wl(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPreApplyBattlerTag(A,L,n,s,R,I),(r,L)=>r.canApplyPreApplyBattlerTag(A,L,n,s,R,I),I,n)}o(Wl,"applyPreApplyBattlerTagAbAttrs");function X8(E,A,s,R,n=!1,...I){sE(E,A,(r,L)=>r.applyPreWeatherEffect(A,L,n,s,R,I),(r,L)=>r.canApplyPreWeatherEffect(A,L,n,s,R,I),I,n)}o(X8,"applyPreWeatherEffectAbAttrs");function Nj(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostTurn(A,I,s,R),(n,I)=>n.canApplyPostTurn(A,I,s,R),R,s)}o(Nj,"applyPostTurnAbAttrs");function lj(E,A,s,R=!1,...n){sE(E,A,(I,r)=>I.applyPostWeatherChange(A,r,R,s,n),(I,r)=>I.canApplyPostWeatherChange(A,r,R,s,n),n,R)}o(lj,"applyPostWeatherChangeAbAttrs");function Cj(E,A,s,R=!1,...n){sE(E,A,(I,r)=>I.applyPostWeatherLapse(A,r,R,s,n),(I,r)=>I.canApplyPostWeatherLapse(A,r,R,s,n),n,R)}o(Cj,"applyPostWeatherLapseAbAttrs");function uj(E,A,s,R=!1,...n){sE(E,A,(I,r)=>I.applyPostTerrainChange(A,r,R,s,n),(I,r)=>I.canApplyPostTerrainChange(A,r,R,s,n),n,R)}o(uj,"applyPostTerrainChangeAbAttrs");function Uj(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyCheckTrapped(A,N,I,s,R,r),(L,N)=>L.canApplyCheckTrapped(A,N,I,s,R,r),r,I,n)}o(Uj,"applyCheckTrappedAbAttrs");function Dj(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostBattle(A,I,s,R),(n,I)=>n.canApplyPostBattle(A,I,s,R),R,s)}o(Dj,"applyPostBattleAbAttrs");function Q8(E,A,s,R,n,I=!1,...r){sE(E,A,(L,N)=>L.applyPostFaint(A,N,I,s,R,n,r),(L,N)=>L.canApplyPostFaint(A,N,I,s,R,n,r),r,I)}o(Q8,"applyPostFaintAbAttrs");function cn(E,A,s=!1,...R){sE(E,A,(n,I)=>n.applyPostItemLost(A,s,R),(n,I)=>n.canApplyPostItemLost(A,s,R),R)}o(cn,"applyPostItemLostAbAttrs");function hd(E,A=!1,s=!1,...R){xf(E,A,ME,(n,I)=>n.applyPostSummon(E,I,s,R),(n,I)=>n.canApplyPostSummon(E,I,s,R),R,!0,s)}o(hd,"applyOnGainAbAttrs");function _d(E,A=!1,s=!1,...R){xf(E,A,hI,(n,I)=>n.applyPreLeaveField(E,I,s,[...R,!0]),(n,I)=>n.canApplyPreLeaveField(E,I,s,[...R,!0]),R,!0,s)}o(_d,"applyOnLoseAbAttrs");function T7(E){E.battleData&&(E.battleData.abilityRevealed=!0)}o(T7,"setAbilityRevealed");function S7(){return a.getField(!0).filter(E=>E.hasAbility(O.FORECAST)&&E.species.speciesId===e.CASTFORM||E.hasAbility(O.FLOWER_GIFT)&&E.species.speciesId===e.CHERRIM)}o(S7,"getPokemonWithWeatherBasedForms");const nA=[new ae(O.NONE,3)];function Mj(){nA.push(new ae(O.STENCH,3).attr(yG,!1,(E,A,s)=>!s.hasAttr(lA)&&!s.hitsSubstitute(E,A)?10:0,w.FLINCHED),new ae(O.DRIZZLE,3).attr(Nn,Oe.RAIN).attr(ln,Oe.RAIN),new ae(O.SPEED_BOOST,3).attr(Ld),new ae(O.BATTLE_ARMOR,3).attr(zS).ignorable(),new ae(O.STURDY,3).attr(oU).attr(vU).ignorable(),new ae(O.DAMP,3).attr(bS).ignorable(),new ae(O.LIMBER,3).attr(DR,re.PARALYSIS).ignorable(),new ae(O.SAND_VEIL,3).attr(yA,p.EVA,1.2).attr(fa,Oe.SANDSTORM).condition(Ss(Oe.SANDSTORM)).ignorable(),new ae(O.STATIC,3).attr(Br,30,re.PARALYSIS).bypassFaint(),new ae(O.VOLT_ABSORB,3).attr(Ir,i.ELECTRIC).ignorable(),new ae(O.WATER_ABSORB,3).attr(Ir,i.WATER).ignorable(),new ae(O.OBLIVIOUS,3).attr(JO,[w.INFATUATED,w.TAUNT]).attr(ki).ignorable(),new ae(O.CLOUD_NINE,3).attr(PI,!0).attr(fU,u.t("abilityTriggers:weatherEffectDisappeared")).attr(BU).attr(tD).bypassFaint(),new ae(O.COMPOUND_EYES,3).attr(yA,p.ACC,1.3),new ae(O.INSOMNIA,3).attr(DR,re.SLEEP).attr(JO,w.DROWSY).ignorable(),new ae(O.COLOR_CHANGE,3).attr(PG).condition(Kl()),new ae(O.IMMUNITY,3).attr(DR,re.POISON,re.TOXIC).ignorable(),new ae(O.FLASH_FIRE,3).attr(MG,i.FIRE,w.FIRE_BOOST,1).ignorable(),new ae(O.SHIELD_DUST,3).attr(za).ignorable(),new ae(O.OWN_TEMPO,3).attr(JO,w.CONFUSED).attr(ki).ignorable(),new ae(O.SUCTION_CUPS,3).attr(qa).ignorable(),new ae(O.INTIMIDATE,3).attr(Zi,[p.ATK],-1,!1,!0),new ae(O.SHADOW_TAG,3).attr(Oo,(E,A)=>!A.hasAbility(O.SHADOW_TAG)),new ae(O.ROUGH_SKIN,3).attr(UU,8).bypassFaint(),new ae(O.WONDER_GUARD,3).attr(cG).uncopiable().ignorable(),new ae(O.LEVITATE,3).attr(DG,i.GROUND,E=>!E.getTag(rN)&&!a.arena.getTag(Fe.GRAVITY)).ignorable(),new ae(O.EFFECT_SPORE,3).attr(dG),new ae(O.SYNCHRONIZE,3).attr(nD).attr(vG),new ae(O.CLEAR_BODY,3).attr(aO).ignorable(),new ae(O.NATURAL_CURE,3).attr(qG),new ae(O.LIGHTNING_ROD,3).attr(ED,i.ELECTRIC).attr(_i,i.ELECTRIC,p.SPATK,1).ignorable(),new ae(O.SERENE_GRACE,3).attr(VS,2),new ae(O.SWIFT_SWIM,3).attr(yA,p.SPD,2).condition(Ss(Oe.RAIN,Oe.HEAVY_RAIN)),new ae(O.CHLOROPHYLL,3).attr(yA,p.SPD,2).condition(Ss(Oe.SUNNY,Oe.HARSH_SUN)),new ae(O.ILLUMINATE,3).attr(aO,p.ACC).attr(vi).attr(va,[p.EVA]).ignorable(),new ae(O.TRACE,3).attr($G).uncopiable(),new ae(O.HUGE_POWER,3).attr(yA,p.ATK,2),new ae(O.POISON_POINT,3).attr(Br,30,re.POISON).bypassFaint(),new ae(O.INNER_FOCUS,3).attr(JO,w.FLINCHED).attr(ki).ignorable(),new ae(O.MAGMA_ARMOR,3).attr(DR,re.FREEZE).ignorable(),new ae(O.WATER_VEIL,3).attr(DR,re.BURN).ignorable(),new ae(O.MAGNET_PULL,3).attr(Oo,(E,A)=>!!(A.getTypes(!0).includes(i.STEEL)||A.getTypes(!0).includes(i.STELLAR)&&A.getTypes().includes(i.STEEL))),new ae(O.SOUNDPROOF,3).attr(jn,(E,A,s)=>E!==A&&s.hasFlag(ct.SOUND_BASED)).ignorable(),new ae(O.RAIN_DISH,3).attr(so,1,Oe.RAIN,Oe.HEAVY_RAIN),new ae(O.SAND_STREAM,3).attr(Nn,Oe.SANDSTORM).attr(ln,Oe.SANDSTORM),new ae(O.PRESSURE,3).attr(OD).attr(ER,E=>u.t("abilityTriggers:postSummonPressure",{pokemonNameWithAffix:ee(E)})),new ae(O.THICK_FAT,3).attr(Ga,i.FIRE,.5).attr(Ga,i.ICE,.5).ignorable(),new ae(O.EARLY_BIRD,3).attr(sD,re.SLEEP),new ae(O.FLAME_BODY,3).attr(Br,30,re.BURN).bypassFaint(),new ae(O.RUN_AWAY,3).attr(qU),new ae(O.KEEN_EYE,3).attr(aO,p.ACC).ignorable(),new ae(O.HYPER_CUTTER,3).attr(aO,p.ATK).ignorable(),new ae(O.PICKUP,3).attr(ld).unsuppressable(),new ae(O.TRUANT,3).attr(kn,w.TRUANT,1,!1),new ae(O.HUSTLE,3).attr(yA,p.ATK,1.5).attr(yA,p.ACC,.8,(E,A,s)=>s.category===g.PHYSICAL),new ae(O.CUTE_CHARM,3).attr(HG,30,w.INFATUATED),new ae(O.PLUS,3).conditionalAttr(E=>a.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>{var s;return((s=E.getAlly())==null?void 0:s.hasAbility(A))??!1}),yA,p.SPATK,1.5),new ae(O.MINUS,3).conditionalAttr(E=>a.currentBattle.double&&[O.PLUS,O.MINUS].some(A=>{var s;return((s=E.getAlly())==null?void 0:s.hasAbility(A))??!1}),yA,p.SPATK,1.5),new ae(O.FORECAST,3).uncopiable().unreplaceable().attr(ls).attr(gU,O.FORECAST).attr(kU,O.FORECAST,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG]),new ae(O.STICKY_HOLD,3).attr(MI).bypassFaint().ignorable(),new ae(O.SHED_SKIN,3).conditionalAttr(E=>!He(3),Ro),new ae(O.GUTS,3).attr(zU).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),yA,p.ATK,1.5),new ae(O.MARVEL_SCALE,3).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),yA,p.DEF,1.5).ignorable(),new ae(O.LIQUID_OOZE,3).attr(vS),new ae(O.OVERGROW,3).attr(rr,i.GRASS),new ae(O.BLAZE,3).attr(rr,i.FIRE),new ae(O.TORRENT,3).attr(rr,i.WATER),new ae(O.SWARM,3).attr(rr,i.BUG),new ae(O.ROCK_HEAD,3).attr(IU),new ae(O.DROUGHT,3).attr(Nn,Oe.SUNNY).attr(ln,Oe.SUNNY),new ae(O.ARENA_TRAP,3).attr(Oo,(E,A)=>!!A.isGrounded()).attr(vi),new ae(O.VITAL_SPIRIT,3).attr(DR,re.SLEEP).attr(JO,w.DROWSY).ignorable(),new ae(O.WHITE_SMOKE,3).attr(aO).ignorable(),new ae(O.PURE_POWER,3).attr(yA,p.ATK,2),new ae(O.SHELL_ARMOR,3).attr(zS).ignorable(),new ae(O.AIR_LOCK,3).attr(PI,!0).attr(fU,u.t("abilityTriggers:weatherEffectDisappeared")).attr(BU).attr(tD).bypassFaint(),new ae(O.TANGLED_FEET,4).conditionalAttr(E=>!!E.getTag(w.CONFUSED),yA,p.EVA,2).ignorable(),new ae(O.MOTOR_DRIVE,4).attr(_i,i.ELECTRIC,p.SPD,1).ignorable(),new ae(O.RIVALRY,4).attr(Ns,(E,A,s)=>(E==null?void 0:E.gender)!==At.GENDERLESS&&(A==null?void 0:A.gender)!==At.GENDERLESS&&(E==null?void 0:E.gender)===(A==null?void 0:A.gender),1.25,!0).attr(Ns,(E,A,s)=>(E==null?void 0:E.gender)!==At.GENDERLESS&&(A==null?void 0:A.gender)!==At.GENDERLESS&&(E==null?void 0:E.gender)!==(A==null?void 0:A.gender),.75),new ae(O.STEADFAST,4).attr(Ud,[p.SPD],1),new ae(O.SNOW_CLOAK,4).attr(yA,p.EVA,1.2).attr(fa,Oe.HAIL).condition(Ss(Oe.HAIL,Oe.SNOW)).ignorable(),new ae(O.GLUTTONY,4).attr(Xi),new ae(O.ANGER_POINT,4).attr(fG,p.ATK,6),new ae(O.UNBURDEN,4).attr(Nd,w.UNBURDEN).bypassFaint().edgeCase(),new ae(O.HEATPROOF,4).attr(Ga,i.FIRE,.5).attr(jU,.5).ignorable(),new ae(O.SIMPLE,4).attr(tN,2).ignorable(),new ae(O.DRY_SKIN,4).attr(XU,2,Oe.SUNNY,Oe.HARSH_SUN).attr(so,2,Oe.RAIN,Oe.HEAVY_RAIN).attr(Ga,i.FIRE,1.25).attr(Ir,i.WATER).ignorable(),new ae(O.DOWNLOAD,4).attr(QG),new ae(O.IRON_FIST,4).attr(Ns,(E,A,s)=>s.hasFlag(ct.PUNCHING_MOVE),1.2),new ae(O.POISON_HEAL,4).attr(id,re.TOXIC,re.POISON).attr(wU,re.TOXIC,re.POISON),new ae(O.ADAPTABILITY,4).attr(TU),new ae(O.SKILL_LINK,4).attr(EN),new ae(O.HYDRATION,4).attr(Ro).condition(Ss(Oe.RAIN,Oe.HEAVY_RAIN)),new ae(O.SOLAR_POWER,4).attr(XU,2,Oe.SUNNY,Oe.HARSH_SUN).attr(yA,p.SPATK,1.5).condition(Ss(Oe.SUNNY,Oe.HARSH_SUN)),new ae(O.QUICK_FEET,4).conditionalAttr(E=>E.status?E.status.effect===re.PARALYSIS:!1,yA,p.SPD,2).conditionalAttr(E=>!!E.status||E.hasAbility(O.COMATOSE),yA,p.SPD,1.5),new ae(O.NORMALIZE,4).attr(Mn,i.NORMAL,1.2,(E,A,s)=>![t.MULTI_ATTACK,t.REVELATION_DANCE,t.TERRAIN_PULSE,t.HIDDEN_POWER,t.WEATHER_BALL,t.NATURAL_GIFT,t.JUDGMENT,t.TECHNO_BLAST].includes(s.id)),new ae(O.SNIPER,4).attr(WU,1.5),new ae(O.MAGIC_GUARD,4).attr(fE),new ae(O.NO_GUARD,4).attr(ON).attr(vi),new ae(O.STALL,4).attr(Fa,(E,A)=>!0,-.2),new ae(O.TECHNICIAN,4).attr(Ns,(E,A,s)=>{const R=new je(s.power);return dA(ZA,E,A,s,R),R.value<=60},1.5),new ae(O.LEAF_GUARD,4).attr(DR).condition(Ss(Oe.SUNNY,Oe.HARSH_SUN)).ignorable(),new ae(O.KLUTZ,4).unimplemented(),new ae(O.MOLD_BREAKER,4).attr(ER,E=>u.t("abilityTriggers:postSummonMoldBreaker",{pokemonNameWithAffix:ee(E)})).attr(ta),new ae(O.SUPER_LUCK,4).attr(YU),new ae(O.AFTERMATH,4).attr(Cd,4).bypassFaint(),new ae(O.ANTICIPATION,4).conditionalAttr(Rj(),ER,E=>u.t("abilityTriggers:postSummonAnticipation",{pokemonNameWithAffix:ee(E)})),new ae(O.FOREWARN,4).attr(Od),new ae(O.UNAWARE,4).attr(va,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.ACC,p.EVA]).ignorable(),new ae(O.TINTED_LENS,4).attr(cU,2,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)<=.5),new ae(O.FILTER,4).attr(MR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new ae(O.SLOW_START,4).attr(kn,w.SLOW_START,5),new ae(O.SCRAPPY,4).attr(OL,i.GHOST,[i.NORMAL,i.FIGHTING]).attr(ki),new ae(O.STORM_DRAIN,4).attr(ED,i.WATER).attr(_i,i.WATER,p.SPATK,1).ignorable(),new ae(O.ICE_BODY,4).attr(fa,Oe.HAIL).attr(so,1,Oe.HAIL,Oe.SNOW),new ae(O.SOLID_ROCK,4).attr(MR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75).ignorable(),new ae(O.SNOW_WARNING,4).attr(Nn,Oe.SNOW).attr(ln,Oe.SNOW),new ae(O.HONEY_GATHER,4).attr(Dd).unsuppressable(),new ae(O.FRISK,4).attr(nd),new ae(O.RECKLESS,4).attr(Ns,(E,A,s)=>s.hasFlag(ct.RECKLESS_MOVE),1.2),new ae(O.MULTITYPE,4).attr(ls).uncopiable().unsuppressable().unreplaceable(),new ae(O.FLOWER_GIFT,4).conditionalAttr(Ss(Oe.SUNNY||Oe.HARSH_SUN),yA,p.ATK,1.5).conditionalAttr(Ss(Oe.SUNNY||Oe.HARSH_SUN),yA,p.SPDEF,1.5).conditionalAttr(Ss(Oe.SUNNY||Oe.HARSH_SUN),wa,p.ATK,1.5).conditionalAttr(Ss(Oe.SUNNY||Oe.HARSH_SUN),wa,p.SPDEF,1.5).attr(ls).attr(gU,O.FLOWER_GIFT).attr(kU,O.FLOWER_GIFT,[Oe.NONE,Oe.SANDSTORM,Oe.STRONG_WINDS,Oe.FOG,Oe.HAIL,Oe.HEAVY_RAIN,Oe.SNOW,Oe.RAIN]).uncopiable().unreplaceable().ignorable(),new ae(O.BAD_DREAMS,4).attr(od),new ae(O.PICKPOCKET,5).attr(wG,(E,A,s)=>s.hasFlag(ct.MAKES_CONTACT)).condition(Kl()),new ae(O.SHEER_FORCE,5).attr(Ns,(E,A,s)=>s.chance>=1,5461/4096).attr(VS,0),new ae(O.CONTRARY,5).attr(tN,-1).ignorable(),new ae(O.UNNERVE,5).attr(mr),new ae(O.DEFIANT,5).attr(MU,(E,A,s)=>s<0,[p.ATK],2),new ae(O.DEFEATIST,5).attr(yA,p.ATK,.5).attr(yA,p.SPATK,.5).condition(E=>E.getHpRatio()<=.5),new ae(O.CURSED_BODY,5).attr(pG,30).bypassFaint(),new ae(O.HEALER,5).conditionalAttr(E=>!Pe(E.getAlly())&&He(10)<3,Ro,!0),new ae(O.FRIEND_GUARD,5).attr(SU,.75).ignorable(),new ae(O.WEAK_ARMOR,5).attr(RO,(E,A,s)=>s.category===g.PHYSICAL,p.DEF,-1).attr(RO,(E,A,s)=>s.category===g.PHYSICAL,p.SPD,2),new ae(O.HEAVY_METAL,5).attr(RN,2).ignorable(),new ae(O.LIGHT_METAL,5).attr(RN,.5).ignorable(),new ae(O.MULTISCALE,5).attr(MR,(E,A,s)=>E.isFullHp(),.5).ignorable(),new ae(O.TOXIC_BOOST,5).attr(Ns,(E,A,s)=>{var R,n;return s.category===g.PHYSICAL&&(((R=E==null?void 0:E.status)==null?void 0:R.effect)===re.POISON||((n=E==null?void 0:E.status)==null?void 0:n.effect)===re.TOXIC)},1.5),new ae(O.FLARE_BOOST,5).attr(Ns,(E,A,s)=>{var R;return s.category===g.SPECIAL&&((R=E==null?void 0:E.status)==null?void 0:R.effect)===re.BURN},1.5),new ae(O.HARVEST,5).attr(Id,"EATEN_BERRIES",E=>.5*(Ss(Oe.SUNNY,Oe.HARSH_SUN)(E)?2:1)).edgeCase(),new ae(O.TELEPATHY,5).attr(jn,(E,A,s)=>E.getAlly()===A&&s instanceof m).ignorable(),new ae(O.MOODY,5).attr(rd),new ae(O.OVERCOAT,5).attr(fa).attr(jn,(E,A,s)=>E!==A&&s.hasFlag(ct.POWDER_MOVE)).ignorable(),new ae(O.POISON_TOUCH,5).attr(WG,30,re.POISON),new ae(O.REGENERATOR,5).attr(ed),new ae(O.BIG_PECKS,5).attr(aO,p.DEF).ignorable(),new ae(O.SAND_RUSH,5).attr(yA,p.SPD,2).attr(fa,Oe.SANDSTORM).condition(Ss(Oe.SANDSTORM)),new ae(O.WONDER_SKIN,5).attr(CU).ignorable(),new ae(O.ANALYTIC,5).attr(Ns,(E,A,s)=>{const R=a.findPhase(n=>n instanceof _A&&n.pokemon.id!==(E==null?void 0:E.id));return Pe(R)},1.3),new ae(O.ILLUSION,5).uncopiable().unimplemented(),new ae(O.IMPOSTER,5).attr(jG).uncopiable(),new ae(O.INFILTRATOR,5).attr(dI).partial(),new ae(O.MUMMY,5).attr(DU,O.MUMMY).bypassFaint(),new ae(O.MOXIE,5).attr(da,p.ATK,1),new ae(O.JUSTIFIED,5).attr(RO,(E,A,s)=>A.getMoveType(s)===i.DARK&&s.category!==g.STATUS,p.ATK,1),new ae(O.RATTLED,5).attr(RO,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==g.STATUS&&(R===i.DARK||R===i.BUG||R===i.GHOST)},p.SPD,1).attr($S,[p.SPD],1),new ae(O.MAGIC_BOUNCE,5).attr(Qi).ignorable().edgeCase(),new ae(O.SAP_SIPPER,5).attr(_i,i.GRASS,p.ATK,1).ignorable(),new ae(O.PRANKSTER,5).attr(Fa,(E,A)=>A.category===g.STATUS,1),new ae(O.SAND_FORCE,5).attr(ZO,i.ROCK,1.3).attr(ZO,i.GROUND,1.3).attr(ZO,i.STEEL,1.3).attr(fa,Oe.SANDSTORM).condition(Ss(Oe.SANDSTORM)),new ae(O.IRON_BARBS,5).attr(UU,8).bypassFaint(),new ae(O.ZEN_MODE,5).attr(vO,()=>0).attr(Ha,E=>E.getHpRatio()<=.5?1:0).attr(Zn,E=>E.getHpRatio()<=.5?1:0).attr(ls).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new ae(O.VICTORY_STAR,5).attr(yA,p.ACC,1.1).attr(wa,p.ACC,1.1,!1),new ae(O.TURBOBLAZE,5).attr(ER,E=>u.t("abilityTriggers:postSummonTurboblaze",{pokemonNameWithAffix:ee(E)})).attr(ta),new ae(O.TERAVOLT,5).attr(ER,E=>u.t("abilityTriggers:postSummonTeravolt",{pokemonNameWithAffix:ee(E)})).attr(ta),new ae(O.AROMA_VEIL,6).attr(_I,[w.INFATUATED,w.TAUNT,w.DISABLED,w.TORMENT,w.HEAL_BLOCK]).ignorable(),new ae(O.FLOWER_VEIL,6).attr(Ed,(E,A)=>A?E.getTypes().includes(i.GRASS)&&E.id!==A.id:!1).attr(Rd,E=>E.getTypes().includes(i.GRASS),[w.DROWSY]).attr(RL,E=>E.getTypes().includes(i.GRASS)).ignorable(),new ae(O.CHEEK_POUCH,6).attr(AN,1/3),new ae(O.PROTEAN,6).attr(sI),new ae(O.FUR_COAT,6).attr(MR,(E,A,s)=>s.category===g.PHYSICAL,.5).ignorable(),new ae(O.MAGICIAN,6).attr(YG),new ae(O.BULLETPROOF,6).attr(jn,(E,A,s)=>E!==A&&s.hasFlag(ct.BALLBOMB_MOVE)).ignorable(),new ae(O.COMPETITIVE,6).attr(MU,(E,A,s)=>s<0,[p.SPATK],2),new ae(O.STRONG_JAW,6).attr(Ns,(E,A,s)=>s.hasFlag(ct.BITING_MOVE),1.5),new ae(O.REFRIGERATE,6).attr(Mn,i.ICE,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(cs)),new ae(O.SWEET_VEIL,6).attr(sL,re.SLEEP).attr(_I,w.DROWSY).ignorable().partial(),new ae(O.STANCE_CHANGE,6).attr(ls).uncopiable().unreplaceable().unsuppressable(),new ae(O.GALE_WINGS,6).attr(Fa,(E,A)=>E.isFullHp()&&E.getMoveType(A)===i.FLYING,1),new ae(O.MEGA_LAUNCHER,6).attr(Ns,(E,A,s)=>s.hasFlag(ct.PULSE_MOVE),1.5),new ae(O.GRASS_PELT,6).conditionalAttr(Fl(Nt.GRASSY),yA,p.DEF,1.5).ignorable(),new ae(O.SYMBIOSIS,6).unimplemented(),new ae(O.TOUGH_CLAWS,6).attr(Ns,(E,A,s)=>s.hasFlag(ct.MAKES_CONTACT),1.3),new ae(O.PIXILATE,6).attr(Mn,i.FAIRY,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(cs)),new ae(O.GOOEY,6).attr(RO,(E,A,s)=>s.hasFlag(ct.MAKES_CONTACT),p.SPD,-1,!1),new ae(O.AERILATE,6).attr(Mn,i.FLYING,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(cs)),new ae(O.PARENTAL_BOND,6).attr(kS,.25),new ae(O.DARK_AURA,6).attr(ER,E=>u.t("abilityTriggers:postSummonDarkAura",{pokemonNameWithAffix:ee(E)})).attr(bi,i.DARK,4/3),new ae(O.FAIRY_AURA,6).attr(ER,E=>u.t("abilityTriggers:postSummonFairyAura",{pokemonNameWithAffix:ee(E)})).attr(bi,i.FAIRY,4/3),new ae(O.AURA_BREAK,6).ignorable().conditionalAttr(E=>a.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)),bi,i.DARK,9/16).conditionalAttr(E=>a.getField(!0).some(A=>A.hasAbility(O.FAIRY_AURA)),bi,i.FAIRY,9/16).conditionalAttr(E=>a.getField(!0).some(A=>A.hasAbility(O.DARK_AURA)||A.hasAbility(O.FAIRY_AURA)),ER,E=>u.t("abilityTriggers:postSummonAuraBreak",{pokemonNameWithAffix:ee(E)})),new ae(O.PRIMORDIAL_SEA,6).attr(Nn,Oe.HEAVY_RAIN).attr(ln,Oe.HEAVY_RAIN).attr(Eo).bypassFaint(),new ae(O.DESOLATE_LAND,6).attr(Nn,Oe.HARSH_SUN).attr(ln,Oe.HARSH_SUN).attr(Eo).bypassFaint(),new ae(O.DELTA_STREAM,6).attr(Nn,Oe.STRONG_WINDS).attr(ln,Oe.STRONG_WINDS).attr(Eo).bypassFaint(),new ae(O.STAMINA,7).attr(RO,(E,A,s)=>s.category!==g.STATUS,p.DEF,1),new ae(O.WIMP_OUT,7).attr(HI).edgeCase(),new ae(O.EMERGENCY_EXIT,7).attr(HI).edgeCase(),new ae(O.WATER_COMPACTION,7).attr(RO,(E,A,s)=>A.getMoveType(s)===i.WATER&&s.category!==g.STATUS,p.DEF,2),new ae(O.MERCILESS,7).attr(yU,(E,A,s)=>{var R,n;return((R=A==null?void 0:A.status)==null?void 0:R.effect)===re.TOXIC||((n=A==null?void 0:A.status)==null?void 0:n.effect)===re.POISON}),new ae(O.SHIELDS_DOWN,7).attr(vO,()=>0).attr(Ha,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).attr(Zn,E=>E.formIndex%7+(E.getHpRatio()<=.5?7:0)).conditionalAttr(E=>E.formIndex!==7,DR).conditionalAttr(E=>E.formIndex!==7,JO,w.DROWSY).attr(ls).attr(sR).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new ae(O.STAKEOUT,7).attr(Ns,(E,A,s)=>!!(A!=null&&A.turnData.switchedInThisTurn),2),new ae(O.WATER_BUBBLE,7).attr(Ga,i.FIRE,.5).attr(ZO,i.WATER,2).attr(DR,re.BURN).ignorable(),new ae(O.STEELWORKER,7).attr(ZO,i.STEEL),new ae(O.BERSERK,7).attr(Ao,(E,A,s)=>s.category!==g.STATUS,.5,[p.SPATK],1).condition(Kl()),new ae(O.SLUSH_RUSH,7).attr(yA,p.SPD,2).condition(Ss(Oe.HAIL,Oe.SNOW)),new ae(O.LONG_REACH,7).attr(VU),new ae(O.LIQUID_VOICE,7).attr(Mn,i.WATER,1,(E,A,s)=>s.hasFlag(ct.SOUND_BASED)),new ae(O.TRIAGE,7).attr(Fa,(E,A)=>A.hasFlag(ct.TRIAGE_MOVE),3),new ae(O.GALVANIZE,7).attr(Mn,i.ELECTRIC,1.2,(E,A,s)=>s.type===i.NORMAL&&!s.hasAttr(cs)),new ae(O.SURGE_SURFER,7).conditionalAttr(Fl(Nt.ELECTRIC),yA,p.SPD,2),new ae(O.SCHOOLING,7).attr(vO,()=>0).attr(Ha,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(Zn,E=>E.level<20||E.getHpRatio()<=.25?0:1).attr(ls).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new ae(O.DISGUISE,7).attr(sR).attr(ls).conditionalAttr(E=>E.formIndex===0,kn,w.DISGUISE,0,!1).attr(ID,(E,A,s)=>!!E.getTag(w.DISGUISE)&&E.getMoveEffectiveness(A,s)>0,0,w.DISGUISE,(E,A)=>u.t("abilityTriggers:disguiseAvoidedDamage",{pokemonNameWithAffix:ee(E),abilityName:A}),E=>Qt(E.getMaxHp()/8)).attr(vO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new ae(O.BATTLE_BOND,7).attr(VG,()=>2).attr(vO,()=>1).attr(ls).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new ae(O.POWER_CONSTRUCT,7).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,vO,()=>2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,vO,()=>3).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,Ha,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===2||E.formIndex===4,Zn,E=>E.getHpRatio()<=.5||E.getFormKey()==="complete"?4:2).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,Ha,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).conditionalAttr(E=>E.formIndex===3||E.formIndex===5,Zn,E=>E.getHpRatio()<=.5||E.getFormKey()==="10-complete"?5:3).attr(ls).uncopiable().unreplaceable().unsuppressable().bypassFaint(),new ae(O.CORROSION,7).attr(iD,[re.POISON,re.TOXIC],[i.STEEL,i.POISON]).edgeCase(),new ae(O.COMATOSE,7).attr(DR,...bL()).attr(JO,w.DROWSY).uncopiable().unreplaceable().unsuppressable(),new ae(O.QUEENLY_MAJESTY,7).attr(fr).ignorable(),new ae(O.INNARDS_OUT,7).attr(ud).bypassFaint(),new ae(O.DANCER,7).attr(Sd),new ae(O.BATTERY,7).attr(ZS,[g.SPECIAL],1.3),new ae(O.FLUFFY,7).attr(MR,(E,A,s)=>s.hasFlag(ct.MAKES_CONTACT),.5).attr(MR,(E,A,s)=>A.getMoveType(s)===i.FIRE,2).ignorable(),new ae(O.DAZZLING,7).attr(fr).ignorable(),new ae(O.SOUL_HEART,7).attr(xG,p.SPATK,1),new ae(O.TANGLING_HAIR,7).attr(RO,(E,A,s)=>s.hasFlag(ct.MAKES_CONTACT),p.SPD,-1,!1),new ae(O.RECEIVER,7).attr(HU).uncopiable(),new ae(O.POWER_OF_ALCHEMY,7).attr(HU).uncopiable(),new ae(O.BEAST_BOOST,7).attr(da,E=>{let A,s=0;for(const R of ka){const n=E.getStat(R,!1);n>s&&(A=R,s=n)}return A},1),new ae(O.RKS_SYSTEM,7).attr(ls).uncopiable().unreplaceable().unsuppressable(),new ae(O.ELECTRIC_SURGE,7).attr(Pi,Nt.ELECTRIC).attr(Gi,Nt.ELECTRIC),new ae(O.PSYCHIC_SURGE,7).attr(Pi,Nt.PSYCHIC).attr(Gi,Nt.PSYCHIC),new ae(O.MISTY_SURGE,7).attr(Pi,Nt.MISTY).attr(Gi,Nt.MISTY),new ae(O.GRASSY_SURGE,7).attr(Pi,Nt.GRASSY).attr(Gi,Nt.GRASSY),new ae(O.FULL_METAL_BODY,7).attr(aO),new ae(O.SHADOW_SHIELD,7).attr(MR,(E,A,s)=>E.isFullHp(),.5),new ae(O.PRISM_ARMOR,7).attr(MR,(E,A,s)=>E.getMoveEffectiveness(A,s)>=2,.75),new ae(O.NEUROFORCE,7).attr(Ns,(E,A,s)=>((A==null?void 0:A.getMoveEffectiveness(E,s))??1)>=2,1.25),new ae(O.INTREPID_SWORD,8).attr(Zi,[p.ATK],1,!0),new ae(O.DAUNTLESS_SHIELD,8).attr(Zi,[p.DEF],1,!0),new ae(O.LIBERO,8).attr(sI),new ae(O.BALL_FETCH,8).attr(Td).condition(k8(O.BALL_FETCH)),new ae(O.COTTON_DOWN,8).attr(RO,(E,A,s)=>s.category!==g.STATUS,p.SPD,-1,!1,!0).bypassFaint(),new ae(O.PROPELLER_TAIL,8).attr(RI),new ae(O.MIRROR_ARMOR,8).attr(mU).ignorable(),new ae(O.GULP_MISSILE,8).attr(sR).attr(ls).unsuppressable().uncopiable().unreplaceable().bypassFaint(),new ae(O.STALWART,8).attr(RI),new ae(O.STEAM_ENGINE,8).attr(RO,(E,A,s)=>{const R=A.getMoveType(s);return s.category!==g.STATUS&&(R===i.FIRE||R===i.WATER)},p.SPD,6),new ae(O.PUNK_ROCK,8).attr(Ns,(E,A,s)=>s.hasFlag(ct.SOUND_BASED),1.3).attr(MR,(E,A,s)=>s.hasFlag(ct.SOUND_BASED),.5).ignorable(),new ae(O.SAND_SPIT,8).attr(gG,Oe.SANDSTORM,(E,A,s)=>s.category!==g.STATUS).bypassFaint(),new ae(O.ICE_SCALES,8).attr(MR,(E,A,s)=>s.category===g.SPECIAL,.5).ignorable(),new ae(O.RIPEN,8).attr(gr),new ae(O.ICE_FACE,8).attr(sR).attr(ls).conditionalAttr(E=>E.formIndex===0,kn,w.ICE_FACE,0,!1).conditionalAttr(Ss(Oe.HAIL,Oe.SNOW),kn,w.ICE_FACE,0).attr(ZU,w.ICE_FACE,0,Oe.HAIL,Oe.SNOW).attr(ID,(E,A,s)=>s.category===g.PHYSICAL&&!!E.getTag(w.ICE_FACE),0,w.ICE_FACE,(E,A)=>u.t("abilityTriggers:iceFaceAvoidedDamage",{pokemonNameWithAffix:ee(E),abilityName:A})).attr(vO,()=>0).uncopiable().unreplaceable().unsuppressable().bypassFaint().ignorable(),new ae(O.POWER_SPOT,8).attr(ZS,[g.SPECIAL,g.PHYSICAL],1.3),new ae(O.MIMICRY,8).attr(oD),new ae(O.SCREEN_CLEANER,8).attr(bG,[Fe.AURORA_VEIL,Fe.LIGHT_SCREEN,Fe.REFLECT]),new ae(O.STEELY_SPIRIT,8).attr(PU,i.STEEL),new ae(O.PERISH_BODY,8).attr(BG,4).bypassFaint(),new ae(O.WANDERING_SPIRIT,8).attr(mG).bypassFaint().edgeCase(),new ae(O.GORILLA_TACTICS,8).attr(FG),new ae(O.NEUTRALIZING_GAS,8).attr(kG,!0,Fe.NEUTRALIZING_GAS,0).attr(Va).uncopiable().attr(sR).bypassFaint(),new ae(O.PASTEL_VEIL,8).attr(JG,re.POISON,re.TOXIC).attr(sL,re.POISON,re.TOXIC).ignorable(),new ae(O.HUNGER_SWITCH,8).attr(Zn,E=>E.getFormKey()?0:1).attr(Zn,E=>E.getFormKey()?1:0).attr(sR).attr(ls).condition(E=>!E.isTerastallized).uncopiable().unreplaceable(),new ae(O.QUICK_DRAW,8).attr(rD,30),new ae(O.UNSEEN_FIST,8).attr(aD),new ae(O.CURIOUS_MEDICINE,8).attr(XG),new ae(O.TRANSISTOR,8).attr(ZO,i.ELECTRIC),new ae(O.DRAGONS_MAW,8).attr(ZO,i.DRAGON),new ae(O.CHILLING_NEIGH,8).attr(da,p.ATK,1),new ae(O.GRIM_NEIGH,8).attr(da,p.SPATK,1),new ae(O.AS_ONE_GLASTRIER,8).attr(ER,E=>u.t("abilityTriggers:postSummonAsOneGlastrier",{pokemonNameWithAffix:ee(E)})).attr(mr).attr(da,p.ATK,1).uncopiable().unreplaceable().unsuppressable(),new ae(O.AS_ONE_SPECTRIER,8).attr(ER,E=>u.t("abilityTriggers:postSummonAsOneSpectrier",{pokemonNameWithAffix:ee(E)})).attr(mr).attr(da,p.SPATK,1).uncopiable().unreplaceable().unsuppressable(),new ae(O.LINGERING_AROMA,9).attr(DU,O.LINGERING_AROMA).bypassFaint(),new ae(O.SEED_SOWER,9).attr(GG,Nt.GRASSY).bypassFaint(),new ae(O.THERMAL_EXCHANGE,9).attr(RO,(E,A,s)=>A.getMoveType(s)===i.FIRE&&s.category!==g.STATUS,p.ATK,1).attr(DR,re.BURN).ignorable(),new ae(O.ANGER_SHELL,9).attr(Ao,(E,A,s)=>s.category!==g.STATUS,.5,[p.ATK,p.SPATK,p.SPD],1).attr(Ao,(E,A,s)=>s.category!==g.STATUS,.5,[p.DEF,p.SPDEF],-1).condition(Kl()),new ae(O.PURIFYING_SALT,9).attr(DR).attr(Ga,i.GHOST,.5).ignorable(),new ae(O.WELL_BAKED_BODY,9).attr(_i,i.FIRE,p.DEF,2).ignorable(),new ae(O.WIND_RIDER,9).attr(hG,(E,A,s)=>E!==A&&s.hasFlag(ct.WIND_MOVE)&&s.category!==g.STATUS,p.ATK,1).attr(Md,Fe.TAILWIND).ignorable(),new ae(O.GUARD_DOG,9).attr($S,[p.ATK],1,!0).attr(qa).ignorable(),new ae(O.ROCKY_PAYLOAD,9).attr(ZO,i.ROCK),new ae(O.WIND_POWER,9).attr(uU,(E,A,s)=>s.hasFlag(ct.WIND_MOVE),w.CHARGED),new ae(O.ZERO_TO_HERO,9).uncopiable().unreplaceable().unsuppressable().attr(sR).attr(ls).attr(vO,()=>0).attr(td,E=>E.isFainted()?E.formIndex:1).bypassFaint(),new ae(O.COMMANDER,9).attr(AL).attr(vi).uncopiable().unreplaceable().edgeCase(),new ae(O.ELECTROMORPHOSIS,9).attr(uU,(E,A,s)=>s.category!==g.STATUS,w.CHARGED),new ae(O.PROTOSYNTHESIS,9).conditionalAttr(Ss(Oe.SUNNY,Oe.HARSH_SUN),kn,w.PROTOSYNTHESIS,0,!0).attr(ZU,w.PROTOSYNTHESIS,0,Oe.SUNNY,Oe.HARSH_SUN).uncopiable().attr(sR),new ae(O.QUARK_DRIVE,9).conditionalAttr(Fl(Nt.ELECTRIC),kn,w.QUARK_DRIVE,0,!0).attr(ad,w.QUARK_DRIVE,0,Nt.ELECTRIC).uncopiable().attr(sR),new ae(O.GOOD_AS_GOLD,9).attr(jn,(E,A,s)=>E!==A&&s.category===g.STATUS&&![De.ENEMY_SIDE,De.BOTH_SIDES,De.USER_SIDE].includes(s.moveTarget)).ignorable(),new ae(O.VESSEL_OF_RUIN,9).attr(xi,p.SPATK,.75).attr(ER,E=>u.t("abilityTriggers:postSummonVesselOfRuin",{pokemonNameWithAffix:ee(E),statName:u.t(mE(p.SPATK))})).ignorable(),new ae(O.SWORD_OF_RUIN,9).attr(xi,p.DEF,.75).attr(ER,E=>u.t("abilityTriggers:postSummonSwordOfRuin",{pokemonNameWithAffix:ee(E),statName:u.t(mE(p.DEF))})),new ae(O.TABLETS_OF_RUIN,9).attr(xi,p.ATK,.75).attr(ER,E=>u.t("abilityTriggers:postSummonTabletsOfRuin",{pokemonNameWithAffix:ee(E),statName:u.t(mE(p.ATK))})).ignorable(),new ae(O.BEADS_OF_RUIN,9).attr(xi,p.SPDEF,.75).attr(ER,E=>u.t("abilityTriggers:postSummonBeadsOfRuin",{pokemonNameWithAffix:ee(E),statName:u.t(mE(p.SPDEF))})),new ae(O.ORICHALCUM_PULSE,9).attr(Nn,Oe.SUNNY).attr(ln,Oe.SUNNY).conditionalAttr(Ss(Oe.SUNNY,Oe.HARSH_SUN),yA,p.ATK,4/3),new ae(O.HADRON_ENGINE,9).attr(Pi,Nt.ELECTRIC).attr(Gi,Nt.ELECTRIC).conditionalAttr(Fl(Nt.ELECTRIC),yA,p.SPATK,4/3),new ae(O.OPPORTUNIST,9).attr(JU),new ae(O.CUD_CHEW,9).unimplemented(),new ae(O.SHARPNESS,9).attr(Ns,(E,A,s)=>s.hasFlag(ct.SLICING_MOVE),1.5),new ae(O.SUPREME_OVERLORD,9).attr(KG,(E,A,s)=>1+.1*Math.min(E.isPlayer()?a.arena.playerFaints:a.currentBattle.enemyFaints,5)).partial(),new ae(O.COSTAR,9).attr(zG),new ae(O.TOXIC_DEBRIS,9).attr(_G,(E,A,s)=>s.category===g.PHYSICAL,Fe.TOXIC_SPIKES).bypassFaint(),new ae(O.ARMOR_TAIL,9).attr(fr).ignorable(),new ae(O.EARTH_EATER,9).attr(Ir,i.GROUND).ignorable(),new ae(O.MYCELIUM_MIGHT,9).attr(Fa,(E,A)=>A.category===g.STATUS,-.2).attr(LD,(E,A)=>A.category===g.STATUS).attr(ta,(E,A)=>A.category===g.STATUS),new ae(O.MINDS_EYE,9).attr(OL,i.GHOST,[i.NORMAL,i.FIGHTING]).attr(aO,p.ACC).attr(va,[p.EVA]).ignorable(),new ae(O.SUPERSWEET_SYRUP,9).attr(Zi,[p.EVA],-1),new ae(O.HOSPITALITY,9).attr(ZG,4,!0),new ae(O.TOXIC_CHAIN,9).attr(GU,!1,30,re.TOXIC),new ae(O.EMBODY_ASPECT_TEAL,9).attr(Vi,[p.SPD],1).uncopiable().unreplaceable().attr(sR),new ae(O.EMBODY_ASPECT_WELLSPRING,9).attr(Vi,[p.SPDEF],1).uncopiable().unreplaceable().attr(sR),new ae(O.EMBODY_ASPECT_HEARTHFLAME,9).attr(Vi,[p.ATK],1).uncopiable().unreplaceable().attr(sR),new ae(O.EMBODY_ASPECT_CORNERSTONE,9).attr(Vi,[p.DEF],1).uncopiable().unreplaceable().attr(sR),new ae(O.TERA_SHIFT,9).attr(Ha,E=>E.getFormKey()?0:1).uncopiable().unreplaceable().unsuppressable().attr(sR).attr(ls),new ae(O.TERA_SHELL,9).attr(NU).uncopiable().unreplaceable().ignorable(),new ae(O.TERAFORM_ZERO,9).attr(rU,[Oe.SUNNY,Oe.RAIN,Oe.SANDSTORM,Oe.HAIL,Oe.SNOW,Oe.FOG,Oe.HEAVY_RAIN,Oe.HARSH_SUN,Oe.STRONG_WINDS]).attr(LU,[Nt.MISTY,Nt.ELECTRIC,Nt.GRASSY,Nt.PSYCHIC]).uncopiable().unreplaceable().condition(k8(O.TERAFORM_ZERO)),new ae(O.POISON_PUPPETEER,9).uncopiable().unreplaceable().attr(pU,re.POISON,re.TOXIC))}o(Mj,"initAbilities");var As=(E=>(E[E.FAINT=0]="FAINT",E[E.MOVE=1]="MOVE",E[E.PRE_MOVE=2]="PRE_MOVE",E[E.AFTER_MOVE=3]="AFTER_MOVE",E[E.MOVE_EFFECT=4]="MOVE_EFFECT",E[E.TURN_END=5]="TURN_END",E[E.HIT=6]="HIT",E[E.AFTER_HIT=7]="AFTER_HIT",E[E.CUSTOM=8]="CUSTOM",E))(As||{});const _w=class _w{constructor(A,s,R,n,I,r=!1){this.tagType=A,this.lapseTypes=Array.isArray(s)?s:[s],this.turnCount=R,this.sourceMove=n,this.sourceId=I,this.isBatonPassable=r}canAdd(A){return!0}onAdd(A){}onRemove(A){}onOverlap(A){}lapse(A,s){return--this.turnCount>0}getDescriptor(){return""}isSourceLinked(){return!1}getMoveName(){return this.sourceMove?Ve[this.sourceMove].name:null}loadTag(A){this.turnCount=A.turnCount,this.sourceMove=A.sourceMove,this.sourceId=A.sourceId}getSourcePokemon(){return this.sourceId?a.getPokemonById(this.sourceId):null}};o(_w,"BattlerTag");let $t=_w;const Pw=class Pw extends $t{constructor(A,s,R,n,I){super(A,s,R,n,I)}lapse(A,s){if(s===2){const R=a.getCurrentPhase(),n=R.move;return this.isMoveRestricted(n.moveId,A)&&(this.interruptedText(A,n.moveId)&&a.queueMessage(this.interruptedText(A,n.moveId)),R.cancel()),!0}return super.lapse(A,s)}isMoveTargetRestricted(A,s,R){return!1}interruptedText(A,s){return""}};o(Pw,"MoveRestrictionBattlerTag");let pO=Pw;const Gw=class Gw extends pO{constructor(){super(w.THROAT_CHOPPED,[5,2],2,t.THROAT_CHOP)}isMoveRestricted(A){return Ve[A].hasFlag(ct.SOUND_BASED)}selectionDeniedText(A,s){return u.t("battle:moveCannotBeSelected",{moveName:Ve[s].name})}interruptedText(A,s){return u.t("battle:throatChopInterruptedMove",{pokemonName:ee(A)})}};o(Gw,"ThroatChoppedTag");let Pd=Gw;const dw=class dw extends pO{constructor(A){super(w.DISABLED,[2,5],4,t.DISABLE,A),this.moveId=t.NONE}isMoveRestricted(A){return A===this.moveId}onAdd(A){super.onAdd(A);const s=A.getLastXMoves(-1).find(R=>!R.virtual);Pe(s)||s.move===t.STRUGGLE||s.move===t.NONE||(this.moveId=s.move,a.queueMessage(u.t("battlerTags:disabledOnAdd",{pokemonNameWithAffix:ee(A),moveName:Ve[this.moveId].name})))}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:disabledLapse",{pokemonNameWithAffix:ee(A),moveName:Ve[this.moveId].name}))}selectionDeniedText(A,s){return u.t("battle:moveDisabled",{moveName:Ve[s].name})}interruptedText(A,s){return u.t("battle:disableInterruptedMove",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name})}loadTag(A){super.loadTag(A),this.moveId=A.moveId}};o(dw,"DisabledTag");let Gd=dw;const B0=class B0 extends pO{constructor(){super(w.GORILLA_TACTICS,8,0),this.moveId=t.NONE}isMoveRestricted(A){return A!==this.moveId}canAdd(A){return this.getLastValidMove(A)!==void 0&&!A.getTag(B0)}onAdd(A){const s=this.getLastValidMove(A);s&&(this.moveId=s,A.setStat(p.ATK,A.getStat(p.ATK,!1)*1.5,!1))}loadTag(A){super.loadTag(A),this.moveId=A.moveId}selectionDeniedText(A,s){return u.t("battle:canOnlyUseMove",{moveName:Ve[this.moveId].name,pokemonName:ee(A)})}getLastValidMove(A){const s=A.getLastXMoves().find(R=>R.move!==t.NONE&&R.move!==t.STRUGGLE&&!R.virtual);return s==null?void 0:s.move}};o(B0,"GorillaTacticsTag");let dd=B0;const Hw=class Hw extends $t{constructor(A){super(w.RECHARGING,[2,5],2,A)}onAdd(A){super.onAdd(A),A.getMoveQueue().push({move:t.NONE,targets:[]})}lapse(A,s){return s===2&&(a.queueMessage(u.t("battlerTags:rechargingLapse",{pokemonNameWithAffix:ee(A)})),a.getCurrentPhase().cancel(),A.getMoveQueue().shift()),super.lapse(A,s)}};o(Hw,"RechargingTag");let Hd=Hw;const fw=class fw extends $t{constructor(){super(w.BEAK_BLAST_CHARGING,[2,5,7],1,t.BEAK_BLAST)}onAdd(A){new SN(La.BEAK_BLAST_CHARGING,this.sourceMove,A).play(),a.queueMessage(u.t("moveTriggers:startedHeatingUpBeak",{pokemonName:ee(A)}))}lapse(A,s){if(s===7){const R=l7();return R!=null&&R.move.hasFlag(ct.MAKES_CONTACT)&&R.attacker.trySetStatus(re.BURN,!0,A),!0}return super.lapse(A,s)}};o(fw,"BeakBlastChargingTag");let fd=fw;const Bw=class Bw extends $t{constructor(){super(w.SHELL_TRAP,[5,7],1),this.activated=!1}onAdd(A){a.queueMessage(u.t("moveTriggers:setUpShellTrap",{pokemonName:ee(A)}))}lapse(A,s){if(s===7){const R=l7();if((R==null?void 0:R.move.category)===g.PHYSICAL&&A.isOpponent(R.attacker)){const n=a.phaseQueue.findIndex(r=>r instanceof _A&&r.pokemon===A),I=a.phaseQueue.findIndex(r=>r instanceof _A);if(n!==-1&&n!==I){const r=a.phaseQueue.splice(n,1)[0];a.prependToPhase(r,_A)}this.activated=!0}return!0}return super.lapse(A,s)}};o(Bw,"ShellTrapTag");let TD=Bw;const g0=class g0 extends $t{constructor(A,s,R,n,I){super(A,s,R,n,I,!0)}canAdd(A){const s=a.getPokemonById(this.sourceId),R=Ve[this.sourceMove],n=A.isOfType(i.GHOST),I=A.getTag(g0),r=R.hitsSubstitute(s,A);return!I&&!n&&!r}onAdd(A){super.onAdd(A),a.queueMessage(this.getTrapMessage(A))}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:trappedOnRemove",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()}))}getDescriptor(){return u.t("battlerTags:trappedDesc")}isSourceLinked(){return!0}getTrapMessage(A){return u.t("battlerTags:trappedOnAdd",{pokemonNameWithAffix:ee(A)})}};o(g0,"TrappedTag");let jR=g0;const gw=class gw extends jR{constructor(A){super(w.NO_RETREAT,8,0,t.NO_RETREAT,A)}canAdd(A){return!A.getTag(jR)}};o(gw,"NoRetreatTag");let Bd=gw;const mw=class mw extends $t{constructor(A){super(w.FLINCHED,[2,5],0,A)}onAdd(A){super.onAdd(A),_t(RD,A,null)}lapse(A,s){return s===2&&(a.getCurrentPhase().cancel(),a.queueMessage(u.t("battlerTags:flinchedLapse",{pokemonNameWithAffix:ee(A)}))),super.lapse(A,s)}getDescriptor(){return u.t("battlerTags:flinchedDesc")}};o(mw,"FlinchedTag");let gd=mw;const pw=class pw extends $t{constructor(A){super(w.INTERRUPTED,2,0,A)}canAdd(A){return!!A.getTag(w.FLYING)}onAdd(A){super.onAdd(A),A.getMoveQueue().shift(),A.pushMoveHistory({move:t.NONE,result:DA.OTHER,targets:[]})}lapse(A,s){return a.getCurrentPhase().cancel(),super.lapse(A,s)}};o(pw,"InterruptedTag");let md=pw;const Kw=class Kw extends $t{constructor(A,s){super(w.CONFUSED,1,A,s,void 0,!0)}canAdd(A){var s;return((s=a.arena.terrain)==null?void 0:s.terrainType)!==Nt.MISTY||!A.isGrounded()}onAdd(A){super.onAdd(A),a.unshiftPhase(new Rs(A.getBattlerIndex(),void 0,UA.CONFUSION)),a.queueMessage(u.t("battlerTags:confusedOnAdd",{pokemonNameWithAffix:ee(A)}))}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:confusedOnRemove",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){super.onOverlap(A),a.queueMessage(u.t("battlerTags:confusedOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8&&super.lapse(A,s);if(R&&(a.queueMessage(u.t("battlerTags:confusedLapse",{pokemonNameWithAffix:ee(A)})),a.unshiftPhase(new Rs(A.getBattlerIndex(),void 0,UA.CONFUSION)),A.randSeedInt(3)===0)){const n=A.getEffectiveStat(p.ATK),I=A.getEffectiveStat(p.DEF),r=Qt(((2*A.level/5+2)*40*n/I/50+2)*(A.randSeedIntRange(85,100)/100));a.queueMessage(u.t("battlerTags:confusedLapseHurtItself")),A.damageAndUpdate(r,{result:yt.CONFUSION}),A.battleData.hitCount++,a.getCurrentPhase().cancel()}return R}getDescriptor(){return u.t("battlerTags:confusedDesc")}};o(Kw,"ConfusedTag");let pd=Kw;const Fw=class Fw extends $t{constructor(A,s){super(w.DESTINY_BOND,2,1,A,s,!0)}lapse(A,s){if(s!==8)return super.lapse(A,s);const R=this.sourceId?a.getPokemonById(this.sourceId):null;return R!=null&&R.isFainted()?(R==null?void 0:R.getAlly())===A?!1:A.isBossImmune()?(a.queueMessage(u.t("battlerTags:destinyBondLapseIsBoss",{pokemonNameWithAffix:ee(A)})),!1):(a.queueMessage(u.t("battlerTags:destinyBondLapse",{pokemonNameWithAffix:ee(R),pokemonNameWithAffix2:ee(A)})),A.damageAndUpdate(A.hp,{result:yt.INDIRECT_KO,ignoreSegments:!0}),!1):!0}};o(Fw,"DestinyBondTag");let Kd=Fw;const Yw=class Yw extends $t{constructor(A,s){super(w.INFATUATED,1,1,A,s)}canAdd(A){if(this.sourceId){const s=a.getPokemonById(this.sourceId);return s?A.isOppositeGender(s):(console.warn("canAdd: this.sourceId is not a valid pokemon id!",this.sourceId),!1)}return console.warn("canAdd: this.sourceId is undefined"),!1}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:infatuatedOnAdd",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(a.getPokemonById(this.sourceId)??void 0)}))}onOverlap(A){super.onOverlap(A),a.queueMessage(u.t("battlerTags:infatuatedOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&(a.queueMessage(u.t("battlerTags:infatuatedLapse",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(a.getPokemonById(this.sourceId)??void 0)})),a.unshiftPhase(new Rs(A.getBattlerIndex(),void 0,UA.ATTRACT)),A.randSeedInt(2)&&(a.queueMessage(u.t("battlerTags:infatuatedLapseImmobilize",{pokemonNameWithAffix:ee(A)})),a.getCurrentPhase().cancel())),R}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:infatuatedOnRemove",{pokemonNameWithAffix:ee(A)}))}isSourceLinked(){return!0}getDescriptor(){return u.t("battlerTags:infatuatedDesc")}};o(Yw,"InfatuatedTag");let Fd=Yw;const Ww=class Ww extends $t{constructor(A){super(w.SEEDED,5,1,t.LEECH_SEED,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}canAdd(A){return!A.isOfType(i.GRASS)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:seededOnAdd",{pokemonNameWithAffix:ee(A)})),this.sourceIndex=a.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){const n=A.getOpponents().find(I=>I.getBattlerIndex()===this.sourceIndex);if(n){const I=new Pt(!1);if(_t(fE,A,I),!I.value){a.unshiftPhase(new Rs(n.getBattlerIndex(),A.getBattlerIndex(),UA.LEECH_SEED));const r=A.damageAndUpdate(Qt(A.getMaxHp()/8),{result:yt.INDIRECT}),L=A.hasAbilityWithAttr(vS,!1);a.unshiftPhase(new ZE(n.getBattlerIndex(),L?r*-1:r,L?u.t("battlerTags:seededLapseShed",{pokemonNameWithAffix:ee(A)}):u.t("battlerTags:seededLapse",{pokemonNameWithAffix:ee(A)}),!1,!0))}}}return R}getDescriptor(){return u.t("battlerTags:seedDesc")}};o(Ww,"SeedTag");let Yd=Ww;const yw=class yw extends $t{constructor(){super(w.POWDER,[2,5],1)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:powderOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){if(s===2){const R=a.getCurrentPhase();if(R instanceof _A){const n=R.move.getMove(),I=a.arena.weather;if(A.getMoveType(n)===i.FIRE&&!(I&&I.weatherType===Oe.HEAVY_RAIN&&!I.isEffectSuppressed())){R.fail(),R.showMoveText(),a.unshiftPhase(new Rs(A.getBattlerIndex(),A.getBattlerIndex(),UA.POWDER));const r=new Pt(!1);_t(fE,A,r),r.value||A.damageAndUpdate(Math.floor(A.getMaxHp()/4),{result:yt.INDIRECT}),a.queueMessage(u.t("battlerTags:powderLapse",{moveName:n.name}))}}return!0}return super.lapse(A,s)}};o(yw,"PowderTag");let Wd=yw;const ww=class ww extends $t{constructor(){super(w.NIGHTMARE,5,1,t.NIGHTMARE)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:nightmareOnAdd",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){super.onOverlap(A),a.queueMessage(u.t("battlerTags:nightmareOnOverlap",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){a.queueMessage(u.t("battlerTags:nightmareLapse",{pokemonNameWithAffix:ee(A)})),a.unshiftPhase(new Rs(A.getBattlerIndex(),void 0,UA.CURSE));const n=new Pt(!1);_t(fE,A,n),n.value||A.damageAndUpdate(Qt(A.getMaxHp()/4),{result:yt.INDIRECT})}return R}getDescriptor(){return u.t("battlerTags:nightmareDesc")}};o(ww,"NightmareTag");let yd=ww;const vw=class vw extends $t{constructor(A,s,R){super(w.FRENZY,8,A,s,R)}onRemove(A){super.onRemove(A),this.turnCount<2&&A.addTag(w.CONFUSED,A.randSeedIntRange(2,4))}};o(vw,"FrenzyTag");let wd=vw;const Vw=class Vw extends pO{constructor(A){super(w.ENCORE,[8,3],3,t.ENCORE,A)}loadTag(A){super.loadTag(A),this.moveId=A.moveId}canAdd(A){const s=A.getLastXMoves(1);if(!s.length)return!1;const R=s[0];if(!R.move||R.virtual)return!1;switch(R.move){case t.MIMIC:case t.MIRROR_MOVE:case t.TRANSFORM:case t.STRUGGLE:case t.SKETCH:case t.SLEEP_TALK:case t.ENCORE:return!1}return this.moveId=R.move,!0}onAdd(A){if(super.onRemove(A),a.queueMessage(u.t("battlerTags:encoreOnAdd",{pokemonNameWithAffix:ee(A)})),a.findPhase(R=>R instanceof _A&&R.pokemon===A)){const R=A.getMoveset().find(n=>n.moveId===this.moveId);if(R){const n=A.getLastXMoves(1)[0];a.tryReplacePhase(I=>I instanceof _A&&I.pokemon===A,new _A(A,n.targets??[],R))}}}lapse(A,s){if(s===8){const R=A.getMoveset().find(n=>n.moveId===this.moveId);return!!(R&&(R==null?void 0:R.getPpRatio())>0)}return super.lapse(A,s)}isMoveRestricted(A,s){return A!==this.moveId}selectionDeniedText(A,s){return u.t("battle:moveDisabled",{moveName:Ve[s].name})}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:encoreOnRemove",{pokemonNameWithAffix:ee(A)}))}};o(Vw,"EncoreTag");let nN=Vw;const xw=class xw extends $t{constructor(A){super(w.HELPING_HAND,5,1,t.HELPING_HAND,A)}onAdd(A){a.queueMessage(u.t("battlerTags:helpingHandOnAdd",{pokemonNameWithAffix:ee(a.getPokemonById(this.sourceId)??void 0),pokemonName:ee(A)}))}};o(xw,"HelpingHandTag");let SD=xw;const bw=class bw extends jR{constructor(A){super(w.INGRAIN,5,1,t.INGRAIN,A)}canAdd(A){return!A.getTag(w.TRAPPED)}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/16),u.t("battlerTags:ingrainLapse",{pokemonNameWithAffix:ee(A)}),!0)),R}getTrapMessage(A){return u.t("battlerTags:ingrainOnTrap",{pokemonNameWithAffix:ee(A)})}getDescriptor(){return u.t("battlerTags:ingrainDesc")}};o(bw,"IngrainTag");let vd=bw;const kw=class kw extends jR{constructor(A){super(w.OCTOLOCK,5,1,t.OCTOLOCK,A)}lapse(A,s){return s!==8||super.lapse(A,s)?(a.unshiftPhase(new AA(A.getBattlerIndex(),!1,[p.DEF,p.SPDEF],-1)),!0):!1}};o(kw,"OctolockTag");let ND=kw;const Zw=class Zw extends $t{constructor(){super(w.AQUA_RING,5,1,t.AQUA_RING,void 0,!0)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:aquaRingOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){const R=s!==8||super.lapse(A,s);return R&&a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/16),u.t("battlerTags:aquaRingLapse",{moveName:this.getMoveName(),pokemonName:ee(A)}),!0)),R}};o(Zw,"AquaRingTag");let Vd=Zw;const Xw=class Xw extends $t{constructor(){super(w.MINIMIZED,5,1,t.MINIMIZE)}onAdd(A){super.onAdd(A)}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A)}};o(Xw,"MinimizeTag");let xd=Xw;const Qw=class Qw extends $t{constructor(){super(w.DROWSY,5,2,t.YAWN)}canAdd(A){var s;return((s=a.arena.terrain)==null?void 0:s.terrainType)!==Nt.ELECTRIC||!A.isGrounded()}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:drowsyOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return super.lapse(A,s)?!0:(A.trySetStatus(re.SLEEP,!0),!1)}getDescriptor(){return u.t("battlerTags:drowsyDesc")}};o(Qw,"DrowsyTag");let bd=Qw;const $w=class $w extends jR{constructor(A,s,R,n,I){super(A,5,R,n,I),this.commonAnim=s}loadTag(A){super.loadTag(A),this.commonAnim=A.commonAnim}canAdd(A){return!A.getTag(jR)&&!A.getTag(w.SUBSTITUTE)}lapse(A,s){const R=super.lapse(A,s);if(R){a.queueMessage(u.t("battlerTags:damagingTrapLapse",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})),a.unshiftPhase(new Rs(A.getBattlerIndex(),void 0,this.commonAnim));const n=new Pt(!1);_t(fE,A,n),n.value||A.damageAndUpdate(Qt(A.getMaxHp()/8),{result:yt.INDIRECT})}return R}};o($w,"DamagingTrapTag");let KO=$w;const Jw=class Jw extends KO{constructor(A,s){super(w.BIND,UA.BIND,A,t.BIND,s)}getTrapMessage(A){return u.t("battlerTags:bindOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(a.getPokemonById(this.sourceId)??void 0),moveName:this.getMoveName()})}};o(Jw,"BindTag");let kd=Jw;const zw=class zw extends KO{constructor(A,s){super(w.WRAP,UA.WRAP,A,t.WRAP,s)}getTrapMessage(A){return u.t("battlerTags:wrapOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonName:ee(a.getPokemonById(this.sourceId)??void 0)})}};o(zw,"WrapTag");let Zd=zw;const jw=class jw extends KO{constructor(A,s,R,n,I){super(A,s,R,n,I)}getTrapMessage(A){return u.t("battlerTags:vortexOnTrap",{pokemonNameWithAffix:ee(A)})}};o(jw,"VortexTrapTag");let lD=jw;const qw=class qw extends lD{constructor(A,s){super(w.FIRE_SPIN,UA.FIRE_SPIN,A,t.FIRE_SPIN,s)}};o(qw,"FireSpinTag");let Xd=qw;const ev=class ev extends lD{constructor(A,s){super(w.WHIRLPOOL,UA.WHIRLPOOL,A,t.WHIRLPOOL,s)}};o(ev,"WhirlpoolTag");let Qd=ev;const tv=class tv extends KO{constructor(A,s){super(w.CLAMP,UA.CLAMP,A,t.CLAMP,s)}getTrapMessage(A){return u.t("battlerTags:clampOnTrap",{sourcePokemonNameWithAffix:ee(a.getPokemonById(this.sourceId)??void 0),pokemonName:ee(A)})}};o(tv,"ClampTag");let $d=tv;const Av=class Av extends KO{constructor(A,s){super(w.SAND_TOMB,UA.SAND_TOMB,A,t.SAND_TOMB,s)}getTrapMessage(A){return u.t("battlerTags:sandTombOnTrap",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()})}};o(Av,"SandTombTag");let Jd=Av;const Ev=class Ev extends KO{constructor(A,s){super(w.MAGMA_STORM,UA.MAGMA_STORM,A,t.MAGMA_STORM,s)}getTrapMessage(A){return u.t("battlerTags:magmaStormOnTrap",{pokemonNameWithAffix:ee(A)})}};o(Ev,"MagmaStormTag");let zd=Ev;const sv=class sv extends KO{constructor(A,s){super(w.SNAP_TRAP,UA.SNAP_TRAP,A,t.SNAP_TRAP,s)}getTrapMessage(A){return u.t("battlerTags:snapTrapOnTrap",{pokemonNameWithAffix:ee(A)})}};o(sv,"SnapTrapTag");let jd=sv;const Rv=class Rv extends KO{constructor(A,s){super(w.THUNDER_CAGE,UA.THUNDER_CAGE,A,t.THUNDER_CAGE,s)}getTrapMessage(A){return u.t("battlerTags:thunderCageOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonNameWithAffix:ee(a.getPokemonById(this.sourceId)??void 0)})}};o(Rv,"ThunderCageTag");let qd=Rv;const Ov=class Ov extends KO{constructor(A,s){super(w.INFESTATION,UA.INFESTATION,A,t.INFESTATION,s)}getTrapMessage(A){return u.t("battlerTags:infestationOnTrap",{pokemonNameWithAffix:ee(A),sourcePokemonNameWithAffix:ee(a.getPokemonById(this.sourceId)??void 0)})}};o(Ov,"InfestationTag");let eH=Ov;const nv=class nv extends $t{constructor(A,s=w.PROTECTED){super(s,5,0,A)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:protectedOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){if(s===8){new ti(UA.PROTECT,A).play(),a.queueMessage(u.t("battlerTags:protectedLapse",{pokemonNameWithAffix:ee(A)}));const R=a.getCurrentPhase();return R instanceof pR&&R.stopMultiHit(A),!0}return super.lapse(A,s)}};o(nv,"ProtectedTag");let ei=nv;const av=class av extends ei{};o(av,"DamageProtectedTag");let aL=av;const iv=class iv extends ei{constructor(A,s){super(A,w.SPIKY_SHIELD),this.damageRatio=s}loadTag(A){super.loadTag(A),this.damageRatio=A.damageRatio}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=a.getCurrentPhase();if(n instanceof pR&&n.move.getMove().hasFlag(ct.MAKES_CONTACT)){const I=n.getPokemon();I.hasAbilityWithAttr(fE)||I.damageAndUpdate(Qt(I.getMaxHp()*(1/this.damageRatio)),{result:yt.INDIRECT})}}return R}};o(iv,"ContactDamageProtectedTag");let tH=iv;const Iv=class Iv extends aL{constructor(A,s,R,n){super(A,s),this.stat=R,this.levels=n}loadTag(A){super.loadTag(A),this.stat=A.stat,this.levels=A.levels}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=a.getCurrentPhase();if(n instanceof pR&&n.move.getMove().hasFlag(ct.MAKES_CONTACT)){const I=n.getPokemon();a.unshiftPhase(new AA(I.getBattlerIndex(),!1,[this.stat],this.levels))}}return R}};o(Iv,"ContactStatStageChangeProtectedTag");let no=Iv;const rv=class rv extends ei{constructor(A){super(A,w.BANEFUL_BUNKER)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=a.getCurrentPhase();n instanceof pR&&n.move.getMove().hasFlag(ct.MAKES_CONTACT)&&n.getPokemon().trySetStatus(re.POISON,!0,A)}return R}};o(rv,"ContactPoisonProtectedTag");let AH=rv;const Lv=class Lv extends aL{constructor(A){super(A,w.BURNING_BULWARK)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=a.getCurrentPhase();n instanceof pR&&n.move.getMove().hasFlag(ct.MAKES_CONTACT)&&n.getPokemon().trySetStatus(re.BURN,!0)}return R}};o(Lv,"ContactBurnProtectedTag");let EH=Lv;const ov=class ov extends $t{constructor(A,s,R){super(A,s,0,R)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:enduringOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return s===8?(a.queueMessage(u.t("battlerTags:enduringLapse",{pokemonNameWithAffix:ee(A)})),!0):super.lapse(A,s)}};o(ov,"EnduringTag");let CD=ov;const Tv=class Tv extends $t{constructor(A){super(w.STURDY,5,0,A)}lapse(A,s){return s===8?(a.queueMessage(u.t("battlerTags:sturdyLapse",{pokemonNameWithAffix:ee(A)})),!0):super.lapse(A,s)}};o(Tv,"SturdyTag");let sH=Tv;const Sv=class Sv extends $t{constructor(A){super(w.PERISH_SONG,5,A,t.PERISH_SONG,void 0,!0)}canAdd(A){return!A.isBossImmune()}lapse(A,s){const R=super.lapse(A,s);return R?a.queueMessage(u.t("battlerTags:perishSongLapse",{pokemonNameWithAffix:ee(A),turnCount:this.turnCount})):A.damageAndUpdate(A.hp,{result:yt.INDIRECT_KO,ignoreSegments:!0}),R}};o(Sv,"PerishSongTag");let RH=Sv;const Nv=class Nv extends $t{constructor(A){super(w.CENTER_OF_ATTENTION,5,1,A),this.powder=this.sourceMove===t.RAGE_POWDER}canAdd(A){return!(A.isPlayer()?a.getPlayerField():a.getEnemyField()).find(R=>R.getTag(w.CENTER_OF_ATTENTION))}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:centerOfAttentionOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(Nv,"CenterOfAttentionTag");let uD=Nv;const lv=class lv extends $t{constructor(A,s,R,n){super(A,R,n),this.ability=s}loadTag(A){super.loadTag(A),this.ability=A.ability}};o(lv,"AbilityBattlerTag");let iL=lv;const Cv=class Cv extends iL{constructor(){super(w.UNBURDEN,O.UNBURDEN,8,1)}onAdd(A){super.onAdd(A)}onRemove(A){super.onRemove(A)}};o(Cv,"UnburdenTag");let OH=Cv;const uv=class uv extends iL{constructor(){super(w.TRUANT,O.TRUANT,1,1)}lapse(A,s){if(!A.hasAbility(O.TRUANT))return super.lapse(A,s);const R=A.getAbility().id!==O.TRUANT,n=A.getLastXMoves().find(()=>!0);return n&&n.move!==t.NONE&&(a.getCurrentPhase().cancel(),a.queueAbilityDisplay(A,R,!0),a.queueMessage(u.t("battlerTags:truantLapse",{pokemonNameWithAffix:ee(A)})),a.queueAbilityDisplay(A,R,!1)),!0}};o(uv,"TruantTag");let nH=uv;const Uv=class Uv extends iL{constructor(){super(w.SLOW_START,O.SLOW_START,5,5)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:slowStartOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return A.hasAbility(this.ability)||(this.turnCount=1),super.lapse(A,s)}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:slowStartOnRemove",{pokemonNameWithAffix:ee(A)}),null,!1,null)}};o(Uv,"SlowStartTag");let aH=Uv;const Dv=class Dv extends iL{constructor(A,s){super(A,s,8,1)}loadTag(A){super.loadTag(A),this.stat=A.stat,this.multiplier=A.multiplier}onAdd(A){super.onAdd(A);let s;ka.map(R=>A.getEffectiveStat(R,void 0,void 0,void 0,void 0,void 0,void 0,void 0,!0)).reduce((R,n,I)=>n>R?(s=ka[I],n):R,0),s=s,this.stat=s,this.multiplier=this.stat===p.SPD?1.5:1.3,a.queueMessage(u.t("battlerTags:highestStatBoostOnAdd",{pokemonNameWithAffix:ee(A),statName:u.t(mE(s))}),null,!1,null,!0)}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:highestStatBoostOnRemove",{pokemonNameWithAffix:ee(A),abilityName:nA[this.ability].name}))}};o(Dv,"HighestStatBoostTag");let aN=Dv;const Mv=class Mv extends aN{constructor(A,s,...R){super(A,s),this.weatherTypes=R}loadTag(A){super.loadTag(A),this.weatherTypes=A.weatherTypes.map(s=>s)}};o(Mv,"WeatherHighestStatBoostTag");let iH=Mv;const cv=class cv extends aN{constructor(A,s,...R){super(A,s),this.terrainTypes=R}loadTag(A){super.loadTag(A),this.terrainTypes=A.terrainTypes.map(s=>s)}};o(cv,"TerrainHighestStatBoostTag");let IH=cv;const hv=class hv extends $t{constructor(A,s,R){super(A,4,s,R)}onAdd(A){super.onAdd(A),A.setVisible(!1)}onRemove(A){a.tweens.addCounter({duration:UE(2),onComplete:o(()=>A.setVisible(!0),"onComplete")})}};o(hv,"SemiInvulnerableTag");let Ra=hv;const _v=class _v extends $t{constructor(A,s,R,n=1){super(A,5,n,s,void 0,!0),this.immuneType=R}loadTag(A){super.loadTag(A),this.immuneType=A.immuneType}};o(_v,"TypeImmuneTag");let UD=_v;const Pv=class Pv extends UD{constructor(A,s,R){super(A,s,i.GROUND,R)}onAdd(A){super.onAdd(A),this.sourceMove===t.MAGNET_RISE&&a.queueMessage(u.t("battlerTags:magnetRisenOnAdd",{pokemonNameWithAffix:ee(A)}))}onRemove(A){super.onRemove(A),this.sourceMove===t.MAGNET_RISE&&a.queueMessage(u.t("battlerTags:magnetRisenOnRemove",{pokemonNameWithAffix:ee(A)}))}};o(Pv,"FloatingTag");let rH=Pv;const Gv=class Gv extends $t{constructor(A,s,R,n,I){super(A,5,1,s),this.boostedType=R,this.boostValue=n,this.oneUse=I}loadTag(A){super.loadTag(A),this.boostedType=A.boostedType,this.boostValue=A.boostValue,this.oneUse=A.oneUse}lapse(A,s){return s!==8||super.lapse(A,s)}onAdd(A){a.queueMessage(u.t("abilityTriggers:typeImmunityPowerBoost",{pokemonNameWithAffix:ee(A),typeName:u.t(`pokemonInfo:Type.${i[this.boostedType]}`)}))}onOverlap(A){a.queueMessage(u.t("abilityTriggers:moveImmunity",{pokemonNameWithAffix:ee(A)}))}};o(Gv,"TypeBoostTag");let IL=Gv;const dv=class dv extends $t{constructor(A,s){super(A,5,1,s,void 0,!0)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:critBoostOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){return s!==8||super.lapse(A,s)}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:critBoostOnRemove",{pokemonNameWithAffix:ee(A)}))}};o(dv,"CritBoostTag");let iN=dv;const Hv=class Hv extends iN{constructor(){super(w.CRIT_BOOST,t.DRAGON_CHEER)}onAdd(A){super.onAdd(A),this.typesOnAdd=A.getTypes(!0)}};o(Hv,"DragonCheerTag");let DD=Hv;const fv=class fv extends $t{constructor(A){super(w.SALT_CURED,5,1,t.SALT_CURE,A)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:saltCuredOnAdd",{pokemonNameWithAffix:ee(A)})),this.sourceIndex=a.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){a.unshiftPhase(new Rs(A.getBattlerIndex(),A.getBattlerIndex(),UA.SALT_CURE));const n=new Pt(!1);if(_t(fE,A,n),!n.value){const I=A.isOfType(i.STEEL)||A.isOfType(i.WATER);A.damageAndUpdate(Qt(I?A.getMaxHp()/4:A.getMaxHp()/8),{result:yt.INDIRECT}),a.queueMessage(u.t("battlerTags:saltCuredLapse",{pokemonNameWithAffix:ee(A),moveName:this.getMoveName()}))}}return R}};o(fv,"SaltCuredTag");let LH=fv;const Bv=class Bv extends $t{constructor(A){super(w.CURSED,5,1,t.CURSE,A,!0)}loadTag(A){super.loadTag(A),this.sourceIndex=A.sourceIndex}onAdd(A){super.onAdd(A),this.sourceIndex=a.getPokemonById(this.sourceId).getBattlerIndex()}lapse(A,s){const R=s!==8||super.lapse(A,s);if(R){a.unshiftPhase(new Rs(A.getBattlerIndex(),A.getBattlerIndex(),UA.SALT_CURE));const n=new Pt(!1);_t(fE,A,n),n.value||(A.damageAndUpdate(Qt(A.getMaxHp()/4),{result:yt.INDIRECT}),a.queueMessage(u.t("battlerTags:cursedLapse",{pokemonNameWithAffix:ee(A)})))}return R}};o(Bv,"CursedTag");let oH=Bv;const gv=class gv extends $t{constructor(A,s,R){super(A,s,1,R)}};o(gv,"RemovedTypeTag");let IN=gv;const mv=class mv extends $t{constructor(A,s,R){super(A,s,1,R)}};o(mv,"GroundedTag");let rN=mv;const pv=class pv extends $t{constructor(){super(w.ROOSTED,5,1,t.ROOST)}onRemove(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),n=s.includes(i.GRASS)&&!R.includes(i.GRASS),I=s.includes(i.GHOST)&&!R.includes(i.GHOST);if(this.isBaseFlying){let r=[];this.isBasePureFlying?n||I?(r=s.filter(L=>L!==i.NORMAL),r.push(i.FLYING)):r=[i.FLYING]:(r=[...s],r.push(i.FLYING)),A.summonData.types=r,A.updateInfo()}}onAdd(A){const s=A.getTypes(),R=A.getTypes(!1,!1,!0),n=R.length===2,I=s.length===2;if(this.isBaseFlying=R.includes(i.FLYING),this.isBasePureFlying=R[0]===i.FLYING&&R.length===1,this.isBaseFlying){let r;this.isBasePureFlying&&!I?r=[i.NORMAL]:A.getTag(IN)&&n&&!I?r=[i.UNKNOWN]:r=s.filter(L=>L!==i.FLYING),A.summonData.types=r,A.updateInfo()}}};o(pv,"RoostedTag");let TH=pv;const Kv=class Kv extends $t{constructor(A){super(A,8,1)}canAdd(A){return A.formIndex===0}onAdd(A){super.onAdd(A),A.formIndex!==0&&a.triggerPokemonFormChange(A,qt)}onRemove(A){super.onRemove(A),a.triggerPokemonFormChange(A,qt)}};o(Kv,"FormBlockDamageTag");let MD=Kv;const Fv=class Fv extends MD{canAdd(A){var n;const s=(n=a.arena.weather)==null?void 0:n.weatherType,R=s===Oe.HAIL||s===Oe.SNOW;return super.canAdd(A)||R}};o(Fv,"IceFaceBlockDamageTag");let SH=Fv;const Yv=class Yv extends $t{constructor(A){super(w.COMMANDED,8,0,t.NONE,A)}get tatsugiriFormKey(){return this._tatsugiriFormKey}onAdd(A){var s;this._tatsugiriFormKey=((s=this.getSourcePokemon())==null?void 0:s.getFormKey())??"curly",a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],2))}onRemove(A){var s;(s=this.getSourcePokemon())!=null&&s.isActive(!0)&&a.triggerPokemonBattleAnim(A,xR.COMMANDER_REMOVE)}loadTag(A){super.loadTag(A),this._tatsugiriFormKey=A._tatsugiriFormKey}};o(Yv,"CommandedTag");let cD=Yv;const Wv=class Wv extends $t{constructor(A=t.NONE){super(w.STOCKPILING,8,1,A),this.stockpiledCount=0,this.statChangeCounts={[p.DEF]:0,[p.SPDEF]:0},this.onStatStagesChanged=(s,R,n)=>{const I=n[R.indexOf(p.DEF)]??0,r=n[R.indexOf(p.SPDEF)]??0;I&&this.statChangeCounts[p.DEF]++,r&&this.statChangeCounts[p.SPDEF]++}}loadTag(A){var s,R;super.loadTag(A),this.stockpiledCount=A.stockpiledCount||0,this.statChangeCounts={[p.DEF]:((s=A.statChangeCounts)==null?void 0:s[p.DEF])??0,[p.SPDEF]:((R=A.statChangeCounts)==null?void 0:R[p.SPDEF])??0}}onAdd(A){this.stockpiledCount<3&&(this.stockpiledCount++,a.queueMessage(u.t("battlerTags:stockpilingOnAdd",{pokemonNameWithAffix:ee(A),stockpiledCount:this.stockpiledCount})),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.SPDEF,p.DEF],1,!0,!1,!0,this.onStatStagesChanged)))}onOverlap(A){this.onAdd(A)}onRemove(A){const s=this.statChangeCounts[p.DEF],R=this.statChangeCounts[p.SPDEF];s&&a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.DEF],-s,!0,!1,!0)),R&&a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.SPDEF],-R,!0,!1,!0))}};o(Wv,"StockpilingTag");let fI=Wv;const yv=class yv extends $t{constructor(A,s){super(A,6,0,s)}lapse(A,s){if(A.getTag(w.UNDERWATER))return!0;const R=a.getCurrentPhase();if(R instanceof pR){const n=R.getUserPokemon();if(!n)return!1;if(R.move.getMove().hitsSubstitute(n,A))return!0;const I=new Pt(!1);_t(fE,n,I),I.value||n.damageAndUpdate(Math.max(1,Math.floor(n.getMaxHp()/4)),{result:yt.INDIRECT}),this.tagType===w.GULP_MISSILE_ARROKUDA?a.unshiftPhase(new AA(n.getBattlerIndex(),!1,[p.DEF],-1)):n.trySetStatus(re.PARALYSIS,!0,A)}return!1}canAdd(A){const s=[t.SURF,t.DIVE].includes(this.sourceMove),R=A.formIndex===0&&!A.getTag(w.GULP_MISSILE_ARROKUDA)&&!A.getTag(w.GULP_MISSILE_PIKACHU),n=A.species.speciesId===e.CRAMORANT;return s&&R&&n}onAdd(A){super.onAdd(A),a.triggerPokemonFormChange(A,qt)}onRemove(A){super.onRemove(A),a.triggerPokemonFormChange(A,qt)}};o(yv,"GulpMissileTag");let hD=yv;const wv=class wv extends $t{constructor(A,s,R,n){super(A,8,1,s),this.defenderType=R,this.allowedTypes=n}loadTag(A){super.loadTag(A),this.defenderType=A.defenderType,this.allowedTypes=A.allowedTypes}ignoreImmunity(A,s){return A===this.defenderType&&this.allowedTypes.includes(s)}};o(wv,"ExposedTag");let rL=wv;const vv=class vv extends pO{constructor(A,s){super(w.HEAL_BLOCK,[2,5],A,s)}onActivation(A){return u.t("battle:battlerTagsHealBlock",{pokemonNameWithAffix:ee(A)})}isMoveRestricted(A){return!!(Ve[A].hasFlag(ct.TRIAGE_MOVE)&&Ve[A].category===g.STATUS)}isMoveTargetRestricted(A,s,R){const n=new je(Ve[A].category);return dA(UM,s,R,Ve[A],n),!!(Ve[A].hasAttr(ZD)&&n.value===g.STATUS)}selectionDeniedText(A,s){return u.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name,healBlockName:Ve[t.HEAL_BLOCK].name})}interruptedText(A,s){return u.t("battle:moveDisabledHealBlock",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name,healBlockName:Ve[t.HEAL_BLOCK].name})}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battle:battlerTagsHealBlockOnRemove",{pokemonNameWithAffix:ee(A)}),null,!1,null)}};o(vv,"HealBlockTag");let NH=vv;const Vv=class Vv extends $t{constructor(){super(w.TAR_SHOT,8,0)}canAdd(A){return!A.isTerastallized}onAdd(A){a.queueMessage(u.t("battlerTags:tarShotOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(Vv,"TarShotTag");let _D=Vv;const xv=class xv extends $t{constructor(){super(w.ELECTRIFIED,5,1,t.ELECTRIFY)}onAdd(A){a.queueMessage(u.t("battlerTags:electrifiedOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(xv,"ElectrifiedTag");let lH=xv;const bv=class bv extends $t{constructor(A=t.AUTOTOMIZE){super(w.AUTOTOMIZED,8,1,A),this.autotomizeCount=0}onAdd(A){A.getWeight()>.1&&a.queueMessage(u.t("battlerTags:autotomizeOnAdd",{pokemonNameWithAffix:ee(A)})),this.autotomizeCount+=1}onOverlap(A){this.onAdd(A)}};o(bv,"AutotomizedTag");let PD=bv;const kv=class kv extends $t{constructor(A,s){super(w.SUBSTITUTE,[2,3,6],0,A,s,!0)}onAdd(A){this.hp=Math.floor(a.getPokemonById(this.sourceId).getMaxHp()/4),this.sourceInFocus=!1,a.triggerPokemonBattleAnim(A,xR.SUBSTITUTE_ADD),this.sourceMove===t.SHED_TAIL?a.queueMessage(u.t("battlerTags:shedTailOnAdd",{pokemonNameWithAffix:ee(A)}),1500):a.queueMessage(u.t("battlerTags:substituteOnAdd",{pokemonNameWithAffix:ee(A)}),1500),A.findAndRemoveTags(s=>s instanceof KO)}onRemove(A){this.sourceInFocus?this.sprite.destroy():a.triggerPokemonBattleAnim(A,xR.SUBSTITUTE_REMOVE,[this.sprite]),a.queueMessage(u.t("battlerTags:substituteOnRemove",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){switch(s){case 2:this.onPreMove(A);break;case 3:this.onAfterMove(A);break;case 6:this.onHit(A);break}return s!==8}onPreMove(A){a.triggerPokemonBattleAnim(A,xR.SUBSTITUTE_PRE_MOVE,[this.sprite]),this.sourceInFocus=!0}onAfterMove(A){a.triggerPokemonBattleAnim(A,xR.SUBSTITUTE_POST_MOVE,[this.sprite]),this.sourceInFocus=!1}onHit(A){const s=a.getCurrentPhase();if(s instanceof pR){const R=s.getUserPokemon();if(!R)return;const n=s.move.getMove();R.turnData.hitCount===R.turnData.hitsLeft&&n.hitsSubstitute(R,A)&&a.queueMessage(u.t("battlerTags:substituteOnHit",{pokemonNameWithAffix:ee(A)}))}}loadTag(A){super.loadTag(A),this.hp=A.hp}};o(kv,"SubstituteTag");let xE=kv;const Zv=class Zv extends $t{constructor(){super(w.MYSTERY_ENCOUNTER_POST_SUMMON,8,1)}onAdd(A){super.onAdd(A)}lapse(A,s){const R=super.lapse(A,s);if(s===8){const n=new Pt(!1);_t(aO,A,n),_t(RL,A,n,!1,A),n.value||A.mysteryEncounterBattleEffects&&A.mysteryEncounterBattleEffects(A)}return R}onRemove(A){super.onRemove(A)}};o(Zv,"MysteryEncounterPostSummonTag");let GD=Zv;const Xv=class Xv extends pO{constructor(A){super(w.TORMENT,3,1,t.TORMENT,A)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:tormentOnAdd",{pokemonNameWithAffix:ee(A)}),1500)}lapse(A,s){return A.isActive(!0)}isMoveRestricted(A,s){if(!s)return!1;const R=s.getLastXMoves(1)[0];if(!R)return!1;const I=Ve[R.move].hasAttr(pr)||s.getTag(w.FRENZY),r=R.result===DA.SUCCESS||R.result===DA.MISS;return!!(R.move===A&&r&&R.move!==t.STRUGGLE&&!I)}selectionDeniedText(A,s){return u.t("battle:moveDisabledTorment",{pokemonNameWithAffix:ee(A)})}};o(Xv,"TormentTag");let CH=Xv;const Qv=class Qv extends pO{constructor(){super(w.TAUNT,[2,3],4,t.TAUNT)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:tauntOnAdd",{pokemonNameWithAffix:ee(A)}),1500)}onRemove(A){super.onRemove(A),a.queueMessage(u.t("battlerTags:tauntOnRemove",{pokemonNameWithAffix:ee(A)}))}isMoveRestricted(A){return Ve[A].category===g.STATUS}selectionDeniedText(A,s){return u.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name})}interruptedText(A,s){return u.t("battle:moveDisabledTaunt",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name})}};o(Qv,"TauntTag");let uH=Qv;const $v=class $v extends pO{constructor(A){super(w.IMPRISON,[2,3],1,t.IMPRISON,A)}lapse(A,s){const R=this.getSourcePokemon();return R?s===2?super.lapse(A,s)&&R.isActive(!0):R.isActive(!0):!1}isMoveRestricted(A,s){const R=this.getSourcePokemon();if(R){const n=R.getMoveset().map(I=>I.moveId);return(n==null?void 0:n.includes(A))&&R.isActive(!0)}return!1}selectionDeniedText(A,s){return u.t("battle:moveDisabledImprison",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name})}interruptedText(A,s){return u.t("battle:moveDisabledImprison",{pokemonNameWithAffix:ee(A),moveName:Ve[s].name})}};o($v,"ImprisonTag");let UH=$v;const Jv=class Jv extends $t{constructor(A){super(w.SYRUP_BOMB,5,3,t.SYRUP_BOMB,A)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:syrupBombOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s){var R;return this.sourceId&&!((R=a.getPokemonById(this.sourceId))!=null&&R.isActive(!0))?!1:(a.queueMessage(u.t("battlerTags:syrupBombLapse",{pokemonNameWithAffix:ee(A)})),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.SPD],-1,!0,!1,!0)),--this.turnCount>0)}};o(Jv,"SyrupBombTag");let DH=Jv;const zv=class zv extends $t{constructor(A){super(w.TELEKINESIS,[2,3],3,A,void 0,!0)}onAdd(A){a.queueMessage(u.t("battlerTags:telekinesisOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(zv,"TelekinesisTag");let MH=zv;const jv=class jv extends $t{constructor(A,s){super(w.POWER_TRICK,8,0,A,s,!0)}onAdd(A){this.swapStat(A),a.queueMessage(u.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:ee(A)}))}onRemove(A){this.swapStat(A),a.queueMessage(u.t("battlerTags:powerTrickActive",{pokemonNameWithAffix:ee(A)}))}onOverlap(A){A.removeTag(this.tagType)}swapStat(A){const s=A.getStat(p.ATK,!1);A.setStat(p.ATK,A.getStat(p.DEF,!1),!1),A.setStat(p.DEF,s,!1)}};o(jv,"PowerTrickTag");let dD=jv;const qv=class qv extends $t{constructor(){super(w.GRUDGE,[8,2],1,t.GRUDGE)}onAdd(A){super.onAdd(A),a.queueMessage(u.t("battlerTags:grudgeOnAdd",{pokemonNameWithAffix:ee(A)}))}lapse(A,s,R){if(s===8&&R){if(R.isActive()&&A.isOpponent(R)){const n=A.turnData.attacksReceived[0],I=R.getMoveset().find(r=>r.moveId===n.move);I&&n.move!==t.STRUGGLE&&(I.ppUsed=I.getMovePp(),a.queueMessage(u.t("battlerTags:grudgeLapse",{pokemonNameWithAffix:ee(A),moveName:I.getName()})))}return!1}return super.lapse(A,s)}};o(qv,"GrudgeTag");let cH=qv;const e4=class e4 extends $t{constructor(){super(w.PSYCHO_SHIFT,3,1,t.PSYCHO_SHIFT)}lapse(A,s){return A.status&&A.isActive(!0)&&(a.queueMessage(oi(A.status.effect,ee(A))),A.resetStatus(),A.updateInfo()),!1}};o(e4,"PsychoShiftTag");let hH=e4;const t4=class t4 extends $t{constructor(){super(w.MAGIC_COAT,5,1,t.MAGIC_COAT)}onAdd(A){a.queueMessage(u.t("battlerTags:magicCoatOnAdd",{pokemonNameWithAffix:ee(A)}))}};o(t4,"MagicCoatTag");let _H=t4;function N7(E,A,s,R){switch(E){case w.RECHARGING:return new Hd(s);case w.BEAK_BLAST_CHARGING:return new fd;case w.SHELL_TRAP:return new TD;case w.FLINCHED:return new gd(s);case w.INTERRUPTED:return new md(s);case w.CONFUSED:return new pd(A,s);case w.INFATUATED:return new Fd(s,R);case w.SEEDED:return new Yd(R);case w.POWDER:return new Wd;case w.NIGHTMARE:return new yd;case w.FRENZY:return new wd(A,s,R);case w.CHARGING:return new $t(E,8,1,s,R);case w.ENCORE:return new nN(R);case w.HELPING_HAND:return new SD(R);case w.INGRAIN:return new vd(R);case w.AQUA_RING:return new Vd;case w.DROWSY:return new bd;case w.TRAPPED:return new jR(E,8,A,s,R);case w.NO_RETREAT:return new Bd(R);case w.BIND:return new kd(A,R);case w.WRAP:return new Zd(A,R);case w.FIRE_SPIN:return new Xd(A,R);case w.WHIRLPOOL:return new Qd(A,R);case w.CLAMP:return new $d(A,R);case w.SAND_TOMB:return new Jd(A,R);case w.MAGMA_STORM:return new zd(A,R);case w.SNAP_TRAP:return new jd(A,R);case w.THUNDER_CAGE:return new qd(A,R);case w.INFESTATION:return new eH(A,R);case w.PROTECTED:return new ei(s);case w.SPIKY_SHIELD:return new tH(s,8);case w.KINGS_SHIELD:return new no(s,E,p.ATK,-1);case w.OBSTRUCT:return new no(s,E,p.DEF,-2);case w.SILK_TRAP:return new no(s,E,p.SPD,-1);case w.BANEFUL_BUNKER:return new AH(s);case w.BURNING_BULWARK:return new EH(s);case w.ENDURING:return new CD(E,5,s);case w.ENDURE_TOKEN:return new CD(E,7,s);case w.STURDY:return new sH(s);case w.PERISH_SONG:return new RH(A);case w.CENTER_OF_ATTENTION:return new uD(s);case w.TRUANT:return new nH;case w.SLOW_START:return new aH;case w.PROTOSYNTHESIS:return new iH(E,O.PROTOSYNTHESIS,Oe.SUNNY,Oe.HARSH_SUN);case w.QUARK_DRIVE:return new IH(E,O.QUARK_DRIVE,Nt.ELECTRIC);case w.FLYING:case w.UNDERGROUND:case w.UNDERWATER:case w.HIDDEN:return new Ra(E,A,s);case w.FIRE_BOOST:return new IL(E,s,i.FIRE,1.5,!1);case w.CRIT_BOOST:return new iN(E,s);case w.DRAGON_CHEER:return new DD;case w.ALWAYS_CRIT:case w.IGNORE_ACCURACY:return new $t(E,5,2,s);case w.ALWAYS_GET_HIT:case w.RECEIVE_DOUBLE_DAMAGE:return new $t(E,2,1,s);case w.BYPASS_SLEEP:return new $t(E,5,A,s);case w.IGNORE_FLYING:return new rN(E,8,s);case w.ROOSTED:return new TH;case w.BURNED_UP:return new IN(E,8,s);case w.DOUBLE_SHOCKED:return new IN(E,8,s);case w.SALT_CURED:return new LH(R);case w.CURSED:return new oH(R);case w.CHARGED:return new IL(E,s,i.ELECTRIC,2,!0);case w.FLOATING:return new rH(E,s,A);case w.MINIMIZED:return new xd;case w.DESTINY_BOND:return new Kd(s,R);case w.ICE_FACE:return new SH(E);case w.DISGUISE:return new MD(E);case w.COMMANDED:return new cD(R);case w.STOCKPILING:return new fI(s);case w.OCTOLOCK:return new ND(R);case w.DISABLED:return new Gd(R);case w.IGNORE_GHOST:return new rL(E,s,i.GHOST,[i.NORMAL,i.FIGHTING]);case w.IGNORE_DARK:return new rL(E,s,i.DARK,[i.PSYCHIC]);case w.GULP_MISSILE_ARROKUDA:case w.GULP_MISSILE_PIKACHU:return new hD(E,s);case w.TAR_SHOT:return new _D;case w.ELECTRIFIED:return new lH;case w.THROAT_CHOPPED:return new Pd;case w.GORILLA_TACTICS:return new dd;case w.UNBURDEN:return new OH;case w.SUBSTITUTE:return new xE(s,R);case w.AUTOTOMIZED:return new PD;case w.MYSTERY_ENCOUNTER_POST_SUMMON:return new GD;case w.HEAL_BLOCK:return new NH(A,s);case w.TORMENT:return new CH(R);case w.TAUNT:return new uH;case w.IMPRISON:return new UH(R);case w.SYRUP_BOMB:return new DH(R);case w.TELEKINESIS:return new MH(s);case w.POWER_TRICK:return new dD(s,R);case w.GRUDGE:return new cH;case w.PSYCHO_SHIFT:return new hH;case w.MAGIC_COAT:return new _H;case w.NONE:default:return new $t(E,8,A,s,R)}}o(N7,"getBattlerTag");function cj(E){const A=N7(E.tagType,E.turnCount,E.sourceMove,E.sourceId);return A.loadTag(E),A}o(cj,"loadBattlerTag");function l7(E){const A=a.getCurrentPhase();return A instanceof pR?{phase:A,attacker:A.getPokemon(),move:A.move.getMove()}:null}o(l7,"getMoveEffectPhaseData");var PH=(E=>(E[E.USER=0]="USER",E[E.TARGET=1]="TARGET",E[E.GRAPHIC=2]="GRAPHIC",E))(PH||{}),La=(E=>(E[E.FLY_CHARGING=1e3]="FLY_CHARGING",E[E.BOUNCE_CHARGING=1001]="BOUNCE_CHARGING",E[E.DIG_CHARGING=1002]="DIG_CHARGING",E[E.FUTURE_SIGHT_CHARGING=1003]="FUTURE_SIGHT_CHARGING",E[E.DIVE_CHARGING=1004]="DIVE_CHARGING",E[E.SOLAR_BEAM_CHARGING=1005]="SOLAR_BEAM_CHARGING",E[E.SHADOW_FORCE_CHARGING=1006]="SHADOW_FORCE_CHARGING",E[E.SKULL_BASH_CHARGING=1007]="SKULL_BASH_CHARGING",E[E.FREEZE_SHOCK_CHARGING=1008]="FREEZE_SHOCK_CHARGING",E[E.SKY_DROP_CHARGING=1009]="SKY_DROP_CHARGING",E[E.SKY_ATTACK_CHARGING=1010]="SKY_ATTACK_CHARGING",E[E.ICE_BURN_CHARGING=1011]="ICE_BURN_CHARGING",E[E.DOOM_DESIRE_CHARGING=1012]="DOOM_DESIRE_CHARGING",E[E.RAZOR_WIND_CHARGING=1013]="RAZOR_WIND_CHARGING",E[E.PHANTOM_FORCE_CHARGING=1014]="PHANTOM_FORCE_CHARGING",E[E.GEOMANCY_CHARGING=1015]="GEOMANCY_CHARGING",E[E.SHADOW_BLADE_CHARGING=1016]="SHADOW_BLADE_CHARGING",E[E.SOLAR_BLADE_CHARGING=1017]="SOLAR_BLADE_CHARGING",E[E.BEAK_BLAST_CHARGING=1018]="BEAK_BLAST_CHARGING",E[E.METEOR_BEAM_CHARGING=1019]="METEOR_BEAM_CHARGING",E[E.ELECTRO_SHOT_CHARGING=1020]="ELECTRO_SHOT_CHARGING",E))(La||{}),UA=(E=>(E[E.USE_ITEM=2e3]="USE_ITEM",E[E.HEALTH_UP=2001]="HEALTH_UP",E[E.TERASTALLIZE=2002]="TERASTALLIZE",E[E.POISON=2010]="POISON",E[E.TOXIC=2011]="TOXIC",E[E.PARALYSIS=2012]="PARALYSIS",E[E.SLEEP=2013]="SLEEP",E[E.FROZEN=2014]="FROZEN",E[E.BURN=2015]="BURN",E[E.CONFUSION=2016]="CONFUSION",E[E.ATTRACT=2017]="ATTRACT",E[E.BIND=2018]="BIND",E[E.WRAP=2019]="WRAP",E[E.CURSE_NO_GHOST=2020]="CURSE_NO_GHOST",E[E.LEECH_SEED=2021]="LEECH_SEED",E[E.FIRE_SPIN=2022]="FIRE_SPIN",E[E.PROTECT=2023]="PROTECT",E[E.COVET=2024]="COVET",E[E.WHIRLPOOL=2025]="WHIRLPOOL",E[E.BIDE=2026]="BIDE",E[E.SAND_TOMB=2027]="SAND_TOMB",E[E.QUICK_GUARD=2028]="QUICK_GUARD",E[E.WIDE_GUARD=2029]="WIDE_GUARD",E[E.CURSE=2030]="CURSE",E[E.MAGMA_STORM=2031]="MAGMA_STORM",E[E.CLAMP=2032]="CLAMP",E[E.SNAP_TRAP=2033]="SNAP_TRAP",E[E.THUNDER_CAGE=2034]="THUNDER_CAGE",E[E.INFESTATION=2035]="INFESTATION",E[E.ORDER_UP_CURLY=2036]="ORDER_UP_CURLY",E[E.ORDER_UP_DROOPY=2037]="ORDER_UP_DROOPY",E[E.ORDER_UP_STRETCHY=2038]="ORDER_UP_STRETCHY",E[E.RAGING_BULL_FIRE=2039]="RAGING_BULL_FIRE",E[E.RAGING_BULL_WATER=2040]="RAGING_BULL_WATER",E[E.SALT_CURE=2041]="SALT_CURE",E[E.POWDER=2042]="POWDER",E[E.SUNNY=2100]="SUNNY",E[E.RAIN=2101]="RAIN",E[E.SANDSTORM=2102]="SANDSTORM",E[E.HAIL=2103]="HAIL",E[E.SNOW=2104]="SNOW",E[E.WIND=2105]="WIND",E[E.HEAVY_RAIN=2106]="HEAVY_RAIN",E[E.HARSH_SUN=2107]="HARSH_SUN",E[E.STRONG_WINDS=2108]="STRONG_WINDS",E[E.MISTY_TERRAIN=2110]="MISTY_TERRAIN",E[E.ELECTRIC_TERRAIN=2111]="ELECTRIC_TERRAIN",E[E.GRASSY_TERRAIN=2112]="GRASSY_TERRAIN",E[E.PSYCHIC_TERRAIN=2113]="PSYCHIC_TERRAIN",E[E.LOCK_ON=2120]="LOCK_ON",E))(UA||{});const A4=class A4{constructor(A){if(this.frameTimedEvents=new Map,A){this.id=A.id,this.graphic=A.graphic;const s=A.frames;s.map(n=>{for(let I=0;I<n.length;I++)n[I]=new GH(n[I])}),this.frames=s;const R=A.frameTimedEvents;for(const n of Object.keys(R)){const I=[];for(const r of R[n]){let L;switch(r.eventType){case"AnimTimedSoundEvent":L=new LN(r.frameIndex,r.resourceName,r);break;case"AnimTimedAddBgEvent":L=new oN(r.frameIndex,r.resourceName,r);break;case"AnimTimedUpdateBgEvent":L=new gD(r.frameIndex,r.resourceName,r);break}L&&I.push(L)}this.frameTimedEvents.set(Number.parseInt(n),I)}this.position=A.position,this.hue=A.hue}else this.frames=[]}getSoundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof LN&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}getBackgroundResourceNames(){const A=new Set;for(const s of this.frameTimedEvents.values())for(const R of s)R instanceof oN&&R.resourceName&&A.add(R.resourceName);return Array.from(A.values())}};o(A4,"AnimConfig");let dO=A4;const E4=class E4{constructor(A,s,R,n,I,r,L,N,l,C,U,D,M,h,_,d,f,H,B,K,Y,v,Z,z,q,J){if(this.x=J?A:((A||0)-128)*.5,this.y=J?s:((s||0)-224)*.5,R?this.zoomX=R:J&&(this.zoomX=0),n?this.zoomY=n:J&&(this.zoomY=0),I?this.angle=I:J&&(this.angle=0),r?this.mirror=r:J&&(this.mirror=!1),L?this.visible=L:J&&(this.visible=!1),N?this.blendType=N:J&&(this.blendType=0),!J){let Ae=2;switch(l){case-2:Ae=1;break;case-1:Ae=0;break}this.target=Ae,this.graphicFrame=l>=0?l:0}C?this.opacity=C:J&&(this.opacity=0),U||D||M||h?this.color=[U||0,D||0,M||0,h||0]:J&&(this.color=[0,0,0,0]),_||d||f||H?this.tone=[_||0,d||0,f||0,H||0]:J&&(this.tone=[0,0,0,0]),B||K||Y||v?this.flash=[B||0,K||0,Y||0,v||0]:J&&(this.flash=[0,0,0,0]),Z?this.locked=Z:J&&(this.locked=!1),z?this.priority=z:J&&(this.priority=0),this.focus=q||1}};o(E4,"AnimFrame");let HD=E4;const s4=class s4 extends HD{constructor(A){const s=A.color||[0,0,0,0],R=A.tone||[0,0,0,0],n=A.flash||[0,0,0,0];super(A.x,A.y,A.zoomX,A.zoomY,A.angle,A.mirror,A.visible,A.blendType,A.graphicFrame,A.opacity,s[0],s[1],s[2],s[3],R[0],R[1],R[2],R[3],n[0],n[1],n[2],n[3],A.locked,A.priority,A.focus,!0),this.target=A.target,this.graphicFrame=A.graphicFrame}};o(s4,"ImportedAnimFrame");let GH=s4;const R4=class R4{constructor(A,s){this.frameIndex=A,this.resourceName=s}};o(R4,"AnimTimedEvent");let fD=R4;const O4=class O4 extends fD{constructor(A,s,R){super(A,s),this.volume=100,this.pitch=100,R&&(this.volume=R.volume,this.pitch=R.pitch)}execute(A){const s={rate:this.pitch*.01,volume:this.volume*.01};if(this.resourceName){try{a.playSound(`battle_anims/${this.resourceName}`,s)}catch(R){console.error(R)}return Math.ceil(a.sound.get(`battle_anims/${this.resourceName}`).totalDuration*1e3/33.33)}return Math.ceil(A.user.cry(s).totalDuration*1e3/33.33)}getEventType(){return"AnimTimedSoundEvent"}};o(O4,"AnimTimedSoundEvent");let LN=O4;const n4=class n4 extends fD{constructor(A,s,R){super(A,s),this.bgX=0,this.bgY=0,this.opacity=0,this.duration=0,R&&(this.bgX=R.bgX,this.bgY=R.bgY,this.opacity=R.opacity,this.duration=R.duration)}};o(n4,"AnimTimedBgEvent");let BD=n4;const a4=class a4 extends BD{execute(A,s){const R={};return this.bgX!==void 0&&(R.x=this.bgX*.5-320),this.bgY!==void 0&&(R.y=this.bgY*.5-284),this.opacity!==void 0&&(R.alpha=(this.opacity||0)/255),Object.keys(R).length&&a.tweens.add(Object.assign({targets:A.bgSprite,duration:UE(this.duration*3)},R)),this.duration*2}getEventType(){return"AnimTimedUpdateBgEvent"}};o(a4,"AnimTimedUpdateBgEvent");let gD=a4;const i4=class i4 extends BD{execute(A,s){A.bgSprite&&A.bgSprite.destroy(),A.bgSprite=this.resourceName?a.add.tileSprite(this.bgX-320,this.bgY-284,896,576,this.resourceName):a.add.rectangle(this.bgX-320,this.bgY-284,896,576,0),A.bgSprite.setOrigin(0,0),A.bgSprite.setScale(1.25),A.bgSprite.setAlpha(this.opacity/255),a.field.add(A.bgSprite);const R=a.getEnemyPokemon(!1)??a.getPlayerPokemon(!1);return Pe(s)?R!=null&&R.isOnField()&&a.field.moveBelow(A.bgSprite,R):a.field.moveTo(A.bgSprite,s),a.tweens.add({targets:A.bgSprite,duration:UE(this.duration*3)}),this.duration*2}getEventType(){return"AnimTimedAddBgEvent"}};o(i4,"AnimTimedAddBgEvent");let oN=i4;const IR=new Map,rR=new Map,q0=new Map,ao=new Map;function hj(){return new Promise(E=>{const A=$R(UA),s=dE(UA),R=[];for(let n=0;n<s.length;n++){const I=s[n];R.push(a.cachedFetch(`./battle-anims/common-${A[n].toLowerCase().replace(/\_/g,"-")}.json`).then(r=>r.json()).then(r=>q0.set(I,new dO(r))))}Promise.allSettled(R).then(()=>E())})}o(hj,"initCommonAnims");function ol(E){return new Promise(A=>{if(IR.has(E))if(IR.get(E)!==null)A();else{const s=setInterval(()=>{if(IR.get(E)!==null){const R=Ve[E].isChargingMove()?Ve[E]:Ve[E].getAttrs(Kn)[0]??Ve[E].getAttrs(oL)[0];if(R&&rR.get(R.chargeAnim)===null)return;clearInterval(s),A()}},50)}else{IR.set(E,null);const s=Ve[E]instanceof m?t.TACKLE:Ve[E]instanceof at?t.FOCUS_ENERGY:t.TAIL_WHIP;o(n=>{a.cachedFetch(`./battle-anims/${Ek(n)}.json`).then(I=>{const r=I.headers.get("content-type");return!I.ok||(r==null?void 0:r.indexOf("application/json"))===-1?($8(n,s),J8(n,I.status,I.statusText),A()):I.json()}).then(I=>{Array.isArray(I)?(BC(n,I[0]),BC(n,I[1])):BC(n,I);const r=Ve[n].isChargingMove()?Ve[n]:Ve[n].getAttrs(Kn)[0]??Ve[n].getAttrs(oL)[0];r?Pj(r.chargeAnim).then(()=>A()):A()}).catch(I=>($8(n,s),J8(n,I),A()))},"fetchAnimAndResolve")(E)}})}o(ol,"initMoveAnim");function $8(E,A){BC(E,IR.get(A))}o($8,"useDefaultAnim");function J8(E,...A){const s=Ek(E);console.warn(`Could not load animation file for move '${s}'`,...A)}o(J8,"logMissingMoveAnim");async function _j(E){const A=Array.isArray(E)?E:[E],s=$R(TO),R=[];for(const n of A)ao.has(n)&&!Pe(ao.get(n))||R.push(a.cachedFetch(`./battle-anims/encounter-${s[n].toLowerCase().replace(/\_/g,"-")}.json`).then(I=>I.json()).then(I=>ao.set(n,new dO(I))));await Promise.allSettled(R)}o(_j,"initEncounterAnims");function Pj(E){return new Promise(A=>{if(rR.has(E))if(rR.get(E)!==null)A();else{const s=setInterval(()=>{rR.get(E)!==null&&(clearInterval(s),A())},50)}else rR.set(E,null),a.cachedFetch(`./battle-anims/${La[E].toLowerCase().replace(/\_/g,"-")}.json`).then(s=>s.json()).then(s=>{Array.isArray(s)?(pc(E,s[0]),pc(E,s[1])):pc(E,s),A()})})}o(Pj,"initMoveChargeAnim");function BC(E,A){const s=new dO(A);if(IR.get(E)===null){IR.set(E,s);return}IR.set(E,[IR.get(E),s])}o(BC,"populateMoveAnim");function pc(E,A){const s=new dO(A);if(rR.get(E)===null){rR.set(E,s);return}rR.set(E,[rR.get(E),s])}o(pc,"populateMoveChargeAnim");function Gj(E){return new Promise(A=>{kf(Array.from(q0.values()),E).then(()=>A())})}o(Gj,"loadCommonAnimAssets");async function dj(E){await kf(Array.from(ao.values()),E)}o(dj,"loadEncounterAnimAssets");function Tl(E,A){return new Promise(s=>{const R=E.flatMap(n=>IR.get(n));for(const n of E){const I=Ve[n].isChargingMove()?Ve[n]:Ve[n].getAttrs(Kn)[0]??Ve[n].getAttrs(oL)[0];if(I){const r=rR.get(I.chargeAnim);R.push(r instanceof dO?r:r[0]),Array.isArray(r)&&R.push(r[1])}}kf(R,A).then(()=>s())})}o(Tl,"loadMoveAnimAssets");function kf(E,A){return new Promise(s=>{var I;const R=new Set,n=new Set;for(const r of E){if(!((I=r.frames)!=null&&I.length))continue;const L=r.getSoundResourceNames();for(const l of L)n.add(l);const N=r.getBackgroundResourceNames();for(const l of N)R.add(l);r.graphic&&a.loadSpritesheet(r.graphic,"battle_anims",96)}for(const r of R)a.loadImage(r,"battle_anims");for(const r of n)a.loadSe(r,"battle_anims",r);A?(a.load.once(TE.Loader.Events.COMPLETE,()=>s()),a.load.isLoading()||a.load.start()):s()})}o(kf,"loadAnimAssets");const Kc=106,Fc=116,Yc=234,Wc=52;function Hj(E,A,s,R,n,I,r,L,N,l){const C=fj(E,A,s,R,N,l);return Bj(n,I,r,L,C[0],C[1])}o(Hj,"transformPoint");function fj(E,A,s,R,n,I){const r=s-E,L=R-A,N=r===0?0:(n-E)/r,l=L===0?0:(I-A)/L;return[N,l]}o(fj,"yAxisIntersect");function Bj(E,A,s,R,n,I){const r=s-E,L=R-A,N=E+n*r,l=A+I*L;return[N,l]}o(Bj,"repositionY");function gj(E,A,s,R){return E===A?!1:E<A?s>R:s<R}o(gj,"isReversed");const I4=class I4{constructor(A,s,R=!1){this.user=A??null,this.target=s??null,this.sprites=[],this.playRegardlessOfIssues=R}isHideUser(){return!1}isHideTarget(){return!1}getGraphicFrameData(A,s){var f,H;const R=new Map([[2,new Map],[0,new Map],[1,new Map]]),n=this.isOppAnim(),I=n?this.target:this.user,r=n?this.user:this.target,L=s&&I!==r?r.getTag(xE):null,N=I.x,l=I.y,C=I.getSprite().displayHeight/2,U=((f=L==null?void 0:L.sprite)==null?void 0:f.x)??r.x,D=((H=L==null?void 0:L.sprite)==null?void 0:H.y)??r.y,M=((L==null?void 0:L.sprite)??r.getSprite()).displayHeight/2;let h=0,_=0,d=0;for(const B of A){let K=B.x+106,Y=B.y+116,v=B.zoomX/100*(B.mirror?-1:1);const Z=B.zoomY/100;switch(B.focus){case 1:K+=U-Yc,Y+=D-M-Wc;break;case 2:K+=N-Kc,Y+=l-C-Fc;break;case 3:{const J=Hj(this.srcLine[0],this.srcLine[1],this.srcLine[2],this.srcLine[3],this.dstLine[0],this.dstLine[1]-C,this.dstLine[2],this.dstLine[3]-M,K,Y);K=J[0],Y=J[1],B.target===2&&gj(this.srcLine[0],this.srcLine[2],this.dstLine[0],this.dstLine[2])&&(v=v*-1)}break}const z=-B.angle,q=B.target===2?h++:B.target===0?_++:d++;R.get(B.target).set(q,{x:K,y:Y,scaleX:v,scaleY:Z,angle:z})}return R}play(A,s){var B,K;const R=this.isOppAnim(),n=R?this.target:this.user,I=R?this.user:this.target;if(!(I!=null&&I.isOnField())&&!this.playRegardlessOfIssues){s&&s();return}const r=A&&n!==I?I.getTag(xE):null,L=n.getSprite(),N=(r==null?void 0:r.sprite)??I.getSprite(),l={2:[],0:[],1:[]},C=[],U=o(()=>{L.setPosition(0,0),L.setScale(1),L.setAlpha(1),L.pipelineData.tone=[0,0,0,0],L.setAngle(0),r?(N.setPosition(I.x-I.getSubstituteOffset()[0],I.y-I.getSubstituteOffset()[1]),N.setScale(I.getSpriteScale()*(I.isPlayer()?.5:1)),N.setAlpha(1)):(N.setPosition(0,0),N.setScale(1),N.setAlpha(1)),N.pipelineData.tone=[0,0,0,0],N.setAngle(0);const Y=R?N:L,v=R?L:N;!this.isHideUser()&&Y&&Y.setVisible(!0),!this.isHideTarget()&&(v!==Y||!this.isHideUser())&&v.setVisible(!0);for(const Z of Object.values(l).flat())Z&&Z.destroy();this.bgSprite&&this.bgSprite.destroy(),s&&s()},"cleanUpAndComplete");if(!a.moveAnimations&&!this.playRegardlessOfIssues)return U();const D=this.getAnim(),M=n.x,h=n.y,_=((B=r==null?void 0:r.sprite)==null?void 0:B.x)??I.x,d=((K=r==null?void 0:r.sprite)==null?void 0:K.y)??I.y;this.srcLine=[Kc,Fc,Yc,Wc],this.dstLine=[M,h,_,d];let f=(D==null?void 0:D.frames.length)??0,H=0;a.tweens.addCounter({duration:UE(3),repeat:(D==null?void 0:D.frames.length)??0,onRepeat:o(()=>{H||(L.setVisible(!1),N.setVisible(!1));const Y=D.frames[H],v=this.getGraphicFrameData(D.frames[H],A);let Z=0,z=0,q=0;for(const Ae of Y)if(Ae.target!==2){const Q=Ae.target===0;if(Q&&I===n||this.playRegardlessOfIssues&&Ae.target===1&&!I.isOnField())continue;const Re=l[Q?0:1],W=Q?L:N;if((Q?Z:z)===Re.length)if(Q||!r){const _e=a.addPokemonSprite(Q?n:I,0,0,W.texture,W.frame.name,!0);["spriteColors","fusionSpriteColors"].map(Le=>_e.pipelineData[Le]=(Q?n:I).getSprite().pipelineData[Le]),_e.setPipelineData("spriteKey",(Q?n:I).getBattleSpriteKey()),_e.setPipelineData("shiny",(Q?n:I).shiny),_e.setPipelineData("variant",(Q?n:I).variant),_e.setPipelineData("ignoreFieldPos",!0),W.on("animationupdate",(Le,Ee)=>_e.setFrame(Ee.textureFrame)),a.field.add(_e),Re.push(_e)}else{const _e=a.addFieldSprite(W.x,W.y,W.texture);W.on("animationupdate",(Le,Ee)=>_e.setFrame(Ee.textureFrame)),a.field.add(_e),Re.push(_e)}const ie=Q?Z++:z++,Be=Re[ie],he=v.get(Ae.target).get(ie),ve=Q||!r?W.parentContainer.scale:I.getSpriteScale()*(I.isPlayer()?.5:1);Be.setPosition(he.x,he.y-W.height/2*(ve-1)),Be.setAngle(he.angle),Be.setScale(he.scaleX*ve,he.scaleY*ve),Be.setData("locked",Ae.locked),Be.setAlpha(Ae.opacity/255),Be.pipelineData.tone=Ae.tone,Be.setVisible(Ae.visible&&(Q?n.visible:I.visible)),Be.setBlendMode(Ae.blendType===0?TE.BlendModes.NORMAL:Ae.blendType===1?TE.BlendModes.ADD:TE.BlendModes.DIFFERENCE)}else{const Q=l[2];if(q===Q.length){const Be=a.addFieldSprite(0,0,D.graphic,1);Q.push(Be),a.field.add(Be),C.push(1)}const Re=q++,W=Q[Re];C[Re]!==Ae.priority&&(C[Re]=Ae.priority,o(he=>{let ve,_e=a.field.bringToTop;he===0?(ve=a.getEnemyField().find(Le=>Le)??a.getPlayerField().find(Le=>Le),_e=a.field.moveBelow):he===2&&this.bgSprite?(_e=a.field.moveAbove,ve=this.bgSprite):(he===2||he===3)&&(_e=he===2?a.field.moveBelow:a.field.moveAbove,Ae.focus===2?ve=this.user:Ae.focus===1&&(ve=this.target)),ve&&a.field.exists(ve)?_e.bind(a.field)(W,ve):a.field.bringToTop(W)},"setSpritePriority")(Ae.priority)),W.setFrame(Ae.graphicFrame);const ie=v.get(Ae.target).get(Re);W.setPosition(ie.x,ie.y),W.setAngle(ie.angle),W.setScale(ie.scaleX,ie.scaleY),W.setAlpha(Ae.opacity/255),W.setVisible(Ae.visible),W.setBlendMode(Ae.blendType===0?TE.BlendModes.NORMAL:Ae.blendType===1?TE.BlendModes.ADD:TE.BlendModes.DIFFERENCE)}if(D!=null&&D.frameTimedEvents.has(H)){const Ae=D.frames.length-H;for(const Q of D.frameTimedEvents.get(H))f=Math.max(Ae+Q.execute(this),f)}const J=dE(PH);for(const Ae of J){const Q=Ae===2?q:Ae===0?Z:z;if(Q<l[Ae].length){const Re=l[Ae].slice(Q,l[Ae].length);for(const W of Re)if(!W.getData("locked")){const ie=l[Ae].indexOf(W);l[Ae].splice(ie,1),Ae===2&&C.splice(ie,1),W.destroy()}}}H++,f--},"onRepeat"),onComplete:o(()=>{for(const Y of Object.values(l).flat())Y&&!Y.getData("locked")&&Y.destroy();f?a.tweens.addCounter({duration:UE(f),onComplete:o(()=>U(),"onComplete")}):U()},"onComplete")})}getGraphicFrameDataWithoutTarget(A,s,R){var N;const n=new Map([[2,new Map],[0,new Map],[1,new Map]]);let I=0,r=0,L=0;for(const l of A){let{x:C,y:U}=l;const D=l.zoomX/100*(l.mirror?-1:1),M=l.zoomY/100;C+=s,U+=R;const h=-l.angle,_=l.target===2?I++:l.target===0?r++:L++;(N=n.get(l.target))==null||N.set(_,{x:C,y:U,scaleX:D,scaleY:M,angle:h})}return n}playWithoutTargets(A,s,R,n,I){const r={2:[],0:[],1:[]},L=o(()=>{for(const D of Object.values(r).flat())D&&D.destroy();this.bgSprite&&this.bgSprite.destroy(),I&&I()},"cleanUpAndComplete");if(!a.moveAnimations&&!this.playRegardlessOfIssues)return L();const N=this.getAnim();this.srcLine=[Kc,Fc,Yc,Wc],this.dstLine=[150,75,A,s];let l=N.frames.length,C=0,U=a.field.getAll().slice(0);a.tweens.addCounter({duration:UE(3)*R,repeat:N.frames.length,onRepeat:o(()=>{var d;U=a.field.getAll().slice(0);const D=N.frames[C],M=this.getGraphicFrameDataWithoutTarget(N.frames[C],A,s);let h=0;for(const f of D){if(f.target!==2)continue;const H=r[2];if(h===H.length){const v=a.addFieldSprite(0,0,N.graphic,1);H.push(v),a.field.add(v)}const B=h++,K=H[B];Pe(f.priority)||o(Z=>{if(U.length>Z){const z=a.field.getIndex(U[Z]);a.field.moveTo(K,z)}else a.field.moveTo(K,a.field.getAll().length-1)},"setSpritePriority")(f.priority),K.setFrame(f.graphicFrame);const Y=(d=M.get(f.target))==null?void 0:d.get(B);Y&&(K.setPosition(Y.x,Y.y),K.setAngle(Y.angle),K.setScale(Y.scaleX,Y.scaleY),K.setAlpha(f.opacity/255),K.setVisible(f.visible),K.setBlendMode(f.blendType===0?TE.BlendModes.NORMAL:f.blendType===1?TE.BlendModes.ADD:TE.BlendModes.DIFFERENCE))}if(N!=null&&N.frameTimedEvents.get(C)){const f=N.frames.length-C;for(const H of N.frameTimedEvents.get(C))l=Math.max(f+H.execute(this,n),l)}const _=dE(PH);for(const f of _){const H=h;if(H<r[f].length){const B=r[f].slice(H,r[f].length);for(const K of B)if(!K.getData("locked")){const Y=r[f].indexOf(K);r[f].splice(Y,1),K.destroy()}}}C++,l--},"onRepeat"),onComplete:o(()=>{for(const D of Object.values(r).flat())D&&!D.getData("locked")&&D.destroy();l?a.tweens.addCounter({duration:UE(l),onComplete:o(()=>L(),"onComplete")}):L()},"onComplete")})}};o(I4,"BattleAnim");let TN=I4;const r4=class r4 extends TN{constructor(A,s,R,n=!1){super(s,R||s,n),this.commonAnim=A}getAnim(){return this.commonAnim?q0.get(this.commonAnim)??null:null}isOppAnim(){return!1}};o(r4,"CommonBattleAnim");let ti=r4;const L4=class L4 extends TN{constructor(A,s,R,n=!1){super(s,a.getField()[R],n),this.move=A}getAnim(){var A,s;return IR.get(this.move)instanceof dO?IR.get(this.move):(s=IR.get(this.move))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(IR.get(this.move))}isHideUser(){return Ve[this.move].hasFlag(ct.HIDE_USER)}isHideTarget(){return Ve[this.move].hasFlag(ct.HIDE_TARGET)}};o(L4,"MoveAnim");let mD=L4;const o4=class o4 extends mD{constructor(A,s,R){super(s,R,0),this.chargeAnim=A}isOppAnim(){var A;return!((A=this.user)!=null&&A.isPlayer())&&Array.isArray(rR.get(this.chargeAnim))}getAnim(){var A,s;return rR.get(this.chargeAnim)instanceof dO?rR.get(this.chargeAnim):(s=rR.get(this.chargeAnim))==null?void 0:s[(A=this.user)!=null&&A.isPlayer()?0:1]}};o(o4,"MoveChargeAnim");let SN=o4;const T4=class T4 extends TN{constructor(A,s,R,n){super(s,R??s,!0),this.encounterAnim=A,this.oppAnim=n??!1}getAnim(){return ao.get(this.encounterAnim)??null}isOppAnim(){return this.oppAnim}};o(T4,"EncounterBattleAnim");let Oa=T4;async function mj(){const A=$R(UA).map(C=>C.toLowerCase()).map(C=>C.replace(/\_/g,"")),s=dE(UA),n=$R(La).map(C=>C.toLowerCase()).map(C=>C.replace(/\_/g," ")),I=dE(La),r=/name: (?:Common:)?(Opp )?(.*)/,L={};for(const C of dE(t).slice(1)){const U=t[C].toUpperCase().replace(/\_/g,"");L[U]=C}const N=[],l=[];for(let C=0;C<l.length;C++){const U=l[C].split("@").slice(1),D=U.find(B=>B.startsWith("name: "));let M,h,_;if(!D.startsWith("name: Move:")&&!(M=D.startsWith("name: OppMove:"))){const K=r.exec(D)[2].toLowerCase();A.indexOf(K)>-1?h=s[A.indexOf(K)]:n.indexOf(K)>-1&&(M=D.startsWith("name: Opp "),_=I[n.indexOf(K)])}const d=D.indexOf(":",5)+1,f=D.slice(d,D.indexOf(`
`,d));if(!L.hasOwnProperty(f)&&!h&&!_)continue;const H=h||_?new dO:new dO;H instanceof dO&&(H.id=L[f]),h?q0.set(h,H):_?rR.set(_,M?[rR.get(_),H]:H):IR.set(L[f],M?[IR.get(L[f]),H]:H);for(let B=0;B<U.length;B++){const K=U[B],Y=K.slice(0,K.indexOf(":")),v=K.slice(Y.length+1,K.lastIndexOf(`
`)).trim();switch(Y){case"array":{const Z=v.split("  - - - ").slice(1);for(let z=0;z<Z.length;z++){H.frames.push([]);const J=Z[z].split("    - - ");for(let Ae=0;Ae<J.length;Ae++){const Q=J[Ae].replace(/ {6}\- /g,"").split(`
`),Re=new HD(Number.parseFloat(Q[0]),Number.parseFloat(Q[1]),Number.parseFloat(Q[2]),Number.parseFloat(Q[11]),Number.parseFloat(Q[3]),Number.parseInt(Q[4])===1,Number.parseInt(Q[6])===1,Number.parseInt(Q[5]),Number.parseInt(Q[7]),Number.parseInt(Q[8]),Number.parseInt(Q[12]),Number.parseInt(Q[13]),Number.parseInt(Q[14]),Number.parseInt(Q[15]),Number.parseInt(Q[16]),Number.parseInt(Q[17]),Number.parseInt(Q[18]),Number.parseInt(Q[19]),Number.parseInt(Q[21]),Number.parseInt(Q[22]),Number.parseInt(Q[23]),Number.parseInt(Q[24]),Number.parseInt(Q[20])===1,Number.parseInt(Q[25]),Number.parseInt(Q[26]));H.frames[z].push(Re)}}break}case"graphic":{const Z=v!=="''"?v:"";H.graphic=Z.indexOf(".")>-1?Z.slice(0,v.indexOf(".")):Z;break}case"timing":{const Z=v.split("- !ruby/object:PBAnimTiming ").slice(1);for(let z=0;z<Z.length;z++){const q=Z[z].replace(/\n/g," ").replace(/[ ]{2,}/g," ").replace(/[a-z]+: ! '', /gi,"").replace(/name: (.*?),/,'name: "$1",').replace(/flashColor: !ruby\/object:Color { alpha: ([\d\.]+), blue: ([\d\.]+), green: ([\d\.]+), red: ([\d\.]+)}/,"flashRed: $4, flashGreen: $3, flashBlue: $2, flashAlpha: $1"),J=Number.parseInt(/frame: (\d+)/.exec(q)[1]);let Ae=/name: "(.*?)"/.exec(q)[1].replace("''","");const Q=Number.parseInt(/timingType: (\d)/.exec(q)[1]);let Re;switch(Q){case 0:if(Ae&&Ae.indexOf(".")===-1){let Be;["wav","mp3","m4a"].every(he=>N.indexOf(`${Ae}.${he}`)>-1?(Be=he,!1):!0),Be||(Be=".wav"),Ae+=`.${Be}`}Re=new LN(J,Ae);break;case 1:Re=new oN(J,Ae.slice(0,Ae.indexOf(".")));break;case 2:Re=new gD(J,Ae.slice(0,Ae.indexOf(".")));break}if(!Re)continue;const W=/([a-z]+): (.*?)(?:,|\})/gi;let ie;for(;ie=W.exec(q);){const Be=ie[1];let he=ie[2];switch(Be){case"bgX":case"bgY":he=Number.parseFloat(he);break;case"volume":case"pitch":case"opacity":case"colorRed":case"colorGreen":case"colorBlue":case"colorAlpha":case"duration":case"flashScope":case"flashRed":case"flashGreen":case"flashBlue":case"flashAlpha":case"flashDuration":he=Number.parseInt(he);break}Re.hasOwnProperty(Be)&&(Re[Be]=he)}H.frameTimedEvents.has(J)||H.frameTimedEvents.set(J,[]),H.frameTimedEvents.get(J).push(Re)}break}case"position":H.position=Number.parseInt(v);break;case"hue":H.hue=Number.parseInt(v);break}}}}o(mj,"populateAnims");const S4=class S4 extends HE{constructor(A){super(),this.user=A}start(){a.ui.setMode(te.PARTY,gs.REVIVAL_BLESSING,this.user.getFieldIndex(),(A,s)=>{if(A>=0&&A<6){const R=a.getPlayerParty()[A];if(!R||!R.isFainted())return this.end();R.resetTurnData(),R.resetStatus(),R.heal(Math.min(Qt(.5*R.getMaxHp()),R.getMaxHp())),a.queueMessage(u.t("moveTriggers:revivalBlessing",{pokemonName:R.name}),0,!0);const n=this.user.getAlly();a.currentBattle.double&&a.getPlayerParty().length>1&&!Pe(n)&&(A<=1?(a.unshiftPhase(new HR(uA.SWITCH,R.getFieldIndex(),A,!1,!0)),a.unshiftPhase(new mO(!0))):n.isFainted()&&(a.unshiftPhase(new HR(uA.SWITCH,n.getFieldIndex(),A,!1,!0)),a.unshiftPhase(new mO(!0))))}a.ui.setMode(te.MESSAGE).then(()=>this.end())},kE.FilterFainted)}};o(S4,"RevivalBlessingPhase");let dH=S4;const N4=class N4 extends nE{constructor(A){super(),this.moveId=A}start(){ol(this.moveId).then(()=>Tl([this.moveId],!0)).then(()=>this.end())}};o(N4,"LoadMoveAnimPhase");let pD=N4;const l4=class l4 extends nE{constructor(A,s=!1){super(),this.anim=A,this.onSubstitute=s}start(){super.start(),this.anim.play(this.onSubstitute,()=>this.end())}};o(l4,"MoveAnimPhase");let HH=l4;var jA=(E=>(E[E._2=0]="_2",E[E._2_TO_5=1]="_2_TO_5",E[E._3=2]="_3",E[E._10=3]="_10",E[E.BEAT_UP=4]="BEAT_UP",E))(jA||{});const pj=new Set([t.AFTER_YOU,t.ASSIST,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BELCH,t.BESTOW,t.COMEUPPANCE,t.COPYCAT,t.COUNTER,t.CRAFTY_SHIELD,t.DESTINY_BOND,t.DETECT,t.ENDURE,t.FEINT,t.FOCUS_PUNCH,t.FOLLOW_ME,t.HELPING_HAND,t.INSTRUCT,t.KINGS_SHIELD,t.MAT_BLOCK,t.ME_FIRST,t.METRONOME,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.OBSTRUCT,t.PROTECT,t.QUASH,t.QUICK_GUARD,t.RAGE_POWDER,t.REVIVAL_BLESSING,t.SHELL_TRAP,t.SILK_TRAP,t.SKETCH,t.SLEEP_TALK,t.SNATCH,t.SNORE,t.SPIKY_SHIELD,t.SPOTLIGHT,t.STRUGGLE,t.TRANSFORM,t.WIDE_GUARD]),Kj=new Set([t.ASSIST,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BELCH,t.BESTOW,t.BOUNCE,t.CELEBRATE,t.CHATTER,t.CIRCLE_THROW,t.COPYCAT,t.COUNTER,t.DESTINY_BOND,t.DETECT,t.DIG,t.DIVE,t.DRAGON_TAIL,t.ENDURE,t.FEINT,t.FLY,t.FOCUS_PUNCH,t.FOLLOW_ME,t.HELPING_HAND,t.HOLD_HANDS,t.KINGS_SHIELD,t.MAT_BLOCK,t.ME_FIRST,t.METRONOME,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.NATURE_POWER,t.PHANTOM_FORCE,t.PROTECT,t.RAGE_POWDER,t.ROAR,t.SHADOW_FORCE,t.SHELL_TRAP,t.SKETCH,t.SKY_DROP,t.SLEEP_TALK,t.SNATCH,t.SPIKY_SHIELD,t.SPOTLIGHT,t.STRUGGLE,t.SWITCHEROO,t.TRANSFORM,t.TRICK,t.WHIRLWIND]),Fj=new Set([t.ASSIST,t.BELCH,t.BEAK_BLAST,t.BIDE,t.BOUNCE,t.COPYCAT,t.DIG,t.DIVE,t.FREEZE_SHOCK,t.FLY,t.FOCUS_PUNCH,t.GEOMANCY,t.ICE_BURN,t.ME_FIRST,t.METRONOME,t.MIRROR_MOVE,t.MIMIC,t.PHANTOM_FORCE,t.RAZOR_WIND,t.SHADOW_FORCE,t.SHELL_TRAP,t.SKETCH,t.SKULL_BASH,t.SKY_ATTACK,t.SKY_DROP,t.SLEEP_TALK,t.SOLAR_BLADE,t.SOLAR_BEAM,t.STRUGGLE,t.UPROAR]),Yj=new Set([t.ASSIST,t.BANEFUL_BUNKER,t.BEAK_BLAST,t.BESTOW,t.CELEBRATE,t.CHATTER,t.CIRCLE_THROW,t.COPYCAT,t.COUNTER,t.DESTINY_BOND,t.DETECT,t.DRAGON_TAIL,t.ENDURE,t.FEINT,t.FOCUS_PUNCH,t.FOLLOW_ME,t.HELPING_HAND,t.HOLD_HANDS,t.KINGS_SHIELD,t.MAT_BLOCK,t.ME_FIRST,t.METRONOME,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.PROTECT,t.RAGE_POWDER,t.ROAR,t.SHELL_TRAP,t.SKETCH,t.SLEEP_TALK,t.SNATCH,t.SPIKY_SHIELD,t.SPOTLIGHT,t.STRUGGLE,t.SWITCHEROO,t.TRANSFORM,t.TRICK,t.WHIRLWIND]),Wj=new Set([t.ACUPRESSURE,t.AFTER_YOU,t.AROMATIC_MIST,t.BEAK_BLAST,t.BELCH,t.CHILLY_RECEPTION,t.COACHING,t.CONVERSION_2,t.COUNTER,t.CRAFTY_SHIELD,t.CURSE,t.DECORATE,t.DOODLE,t.DOOM_DESIRE,t.DRAGON_CHEER,t.ELECTRIC_TERRAIN,t.FINAL_GAMBIT,t.FLORAL_HEALING,t.FLOWER_SHIELD,t.FOCUS_PUNCH,t.FUTURE_SIGHT,t.GEAR_UP,t.GRASSY_TERRAIN,t.GRAVITY,t.GUARD_SPLIT,t.HAIL,t.HAZE,t.HEAL_PULSE,t.HELPING_HAND,t.HOLD_HANDS,t.INSTRUCT,t.ION_DELUGE,t.MAGNETIC_FLUX,t.MAT_BLOCK,t.ME_FIRST,t.MIMIC,t.MIRROR_COAT,t.MIRROR_MOVE,t.MIST,t.MISTY_TERRAIN,t.MUD_SPORT,t.PERISH_SONG,t.POWER_SPLIT,t.PSYCH_UP,t.PSYCHIC_TERRAIN,t.PURIFY,t.QUICK_GUARD,t.RAIN_DANCE,t.REFLECT_TYPE,t.ROLE_PLAY,t.ROTOTILLER,t.SANDSTORM,t.SHELL_TRAP,t.SKETCH,t.SNOWSCAPE,t.SPIT_UP,t.SPOTLIGHT,t.STRUGGLE,t.SUNNY_DAY,t.TEATIME,t.TRANSFORM,t.WATER_SPORT,t.WIDE_GUARD]),C4=class C4{constructor(A,s,R,n,I,r,L,N,l,C){this.attrs=[],this.conditions=[],this.flags=0,this.nameAppend="",this.id=A,this._type=s,this._category=R,this.moveTarget=n,this.power=I,this.accuracy=r,this.pp=L,this.chance=N,this.priority=l,this.generation=C,n===De.USER&&this.setFlag(ct.IGNORE_PROTECT,!0),R===g.PHYSICAL&&this.setFlag(ct.MAKES_CONTACT,!0),this.localize()}get type(){return this._type}get category(){return this._category}localize(){const A=t[this.id].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.name=this.id?`${u.t(`move:${A}.name`)}${this.nameAppend}`:"",this.effect=this.id?`${u.t(`move:${A}.effect`)}${this.nameAppend}`:""}getAttrs(A){return this.attrs.filter(s=>s instanceof A)}hasAttr(A){return this.attrs.some(s=>s instanceof A)}findAttr(A){return this.attrs.find(A)}attr(A,...s){const R=new A(...s);this.attrs.push(R);let n=R.getCondition();return n&&(typeof n=="function"&&(n=new nI(n)),this.conditions.push(n)),this}addAttr(A){this.attrs.push(A);let s=A.getCondition();return s&&(typeof s=="function"&&(s=new nI(s)),this.conditions.push(s)),this}target(A){return this.moveTarget=A,this}hasFlag(A){return!!(this.flags&A)}isMultiTarget(){switch(this.moveTarget){case De.ALL_OTHERS:case De.ALL_NEAR_OTHERS:case De.ALL_NEAR_ENEMIES:case De.ALL_ENEMIES:case De.USER_AND_ALLIES:case De.ALL:case De.USER_SIDE:case De.ENEMY_SIDE:case De.BOTH_SIDES:return!0}return!1}isAllyTarget(){switch(this.moveTarget){case De.USER:case De.NEAR_ALLY:case De.ALLY:case De.USER_OR_NEAR_ALLY:case De.USER_AND_ALLIES:case De.USER_SIDE:return!0}return!1}isChargingMove(){return!1}isTypeImmune(A,s,R){if(this.moveTarget===De.USER)return!1;switch(R){case i.GRASS:if(this.hasFlag(ct.POWDER_MOVE))return!0;break;case i.DARK:if(A.hasAbility(O.PRANKSTER)&&this.category===g.STATUS&&A.isPlayer()!==s.isPlayer())return!0;break}return!1}hitsSubstitute(A,s){if([De.USER,De.USER_SIDE,De.ENEMY_SIDE,De.BOTH_SIDES].includes(this.moveTarget)||!(s!=null&&s.getTag(w.SUBSTITUTE)))return!1;const R=new Pt(!1);return _t(dI,A,null,!1,R),!R.value&&!this.hasFlag(ct.SOUND_BASED)&&!this.hasFlag(ct.IGNORE_SUBSTITUTE)}condition(A){return typeof A=="function"&&(A=new nI(A)),this.conditions.push(A),this}edgeCase(){return this}partial(){return this.nameAppend+=" (P)",this}unimplemented(){return this.nameAppend+=" (N)",this}setFlag(A,s){s?this.flags|=A:this.flags^=A}makesContact(A=!0){return this.setFlag(ct.MAKES_CONTACT,A),this}ignoresProtect(){return this.setFlag(ct.IGNORE_PROTECT,!0),this}soundBased(){return this.setFlag(ct.SOUND_BASED,!0),this}hidesUser(){return this.setFlag(ct.HIDE_USER,!0),this}hidesTarget(){return this.setFlag(ct.HIDE_TARGET,!0),this}bitingMove(){return this.setFlag(ct.BITING_MOVE,!0),this}pulseMove(){return this.setFlag(ct.PULSE_MOVE,!0),this}punchingMove(){return this.setFlag(ct.PUNCHING_MOVE,!0),this}slicingMove(){return this.setFlag(ct.SLICING_MOVE,!0),this}recklessMove(){return this.setFlag(ct.RECKLESS_MOVE,!0),this}ballBombMove(){return this.setFlag(ct.BALLBOMB_MOVE,!0),this}powderMove(){return this.setFlag(ct.POWDER_MOVE,!0),this}danceMove(){return this.setFlag(ct.DANCE_MOVE,!0),this}windMove(){return this.setFlag(ct.WIND_MOVE,!0),this}triageMove(){return this.setFlag(ct.TRIAGE_MOVE,!0),this}ignoresAbilities(){return this.setFlag(ct.IGNORE_ABILITIES,!0),this}checkAllHits(){return this.setFlag(ct.CHECK_ALL_HITS,!0),this}ignoresSubstitute(){return this.setFlag(ct.IGNORE_SUBSTITUTE,!0),this}redirectCounter(){return this.setFlag(ct.REDIRECT_COUNTER,!0),this}reflectable(){return this.setFlag(ct.REFLECTABLE,!0),this}doesFlagEffectApply({flag:A,user:s,target:R,isFollowUp:n=!1}){switch(A){case ct.MAKES_CONTACT:if(s.hasAbilityWithAttr(VU)||this.hitsSubstitute(s,R))return!1;break;case ct.IGNORE_ABILITIES:if(s.hasAbilityWithAttr(ta)){const I=new Pt(!1);if(_t(ta,s,I,!1,this),I.value)return!0}return this.hasFlag(ct.IGNORE_ABILITIES)&&!n;case ct.IGNORE_PROTECT:if(s.hasAbilityWithAttr(aD)&&this.doesFlagEffectApply({flag:ct.MAKES_CONTACT,user:s}))return!0;break}return!!(this.flags&A)}applyConditions(A,s,R){for(const n of this.conditions)if(!n.apply(A,s,R))return!1;return!0}getFailedText(A,s,R){for(const n of this.attrs){const I=n.getFailedText(A,s,R);if(I)return I}}getUserBenefitScore(A,s,R){let n=0;for(const I of this.attrs)n+=I.getUserBenefitScore(A,s,R);for(const I of this.conditions)n+=I.getUserBenefitScore(A,s,R);return n}getTargetBenefitScore(A,s,R){var I,r;let n=0;if(((r=(I=s.getAlly())==null?void 0:I.getTag(w.COMMANDED))==null?void 0:r.getSourcePokemon())===s)return 20*(s.isPlayer()===A.isPlayer()?-1:1);for(const L of this.attrs)n+=L.getTargetBenefitScore(A,L.selfTarget?A:s,R)*(s!==A&&L.selfTarget?-1:1);return n}calculateBattleAccuracy(A,s,R=!1){var r;const n=new je(this.accuracy);if(dA(oa,A,s,this,n),Xn(CU,s,A,this,{value:!1},R,n),n.value===-1)return n.value;const I=this.hasAttr(xa);return I||a.applyModifiers(XN,A.isPlayer(),A,n),((r=a.arena.weather)==null?void 0:r.weatherType)===Oe.FOG&&(n.value=Math.floor(n.value*.9)),!I&&a.arena.getTag(Fe.GRAVITY)&&(n.value=Math.floor(n.value*1.67)),n.value}calculateBattlePower(A,s,R=!1){if(this.category===g.STATUS)return-1;const n=new je(this.power),I=new je(1);An(Mn,A,s,this,!0,null,I);const r=A.getTeraType();A.isTerastallized&&r===this.type&&n.value<60&&this.priority<=0&&!this.hasAttr(CA)&&!a.findModifier(U=>U instanceof Ta&&U.pokemonId===A.id)&&(n.value=60),An(xS,A,s,this,R,n);const L=A.getAlly();Pe(L)||An(ZS,L,s,this,R,n);const N=new Set(a.getField(!0).map(U=>U.getAbilityAttrs(bi).filter(D=>{const M=D.getCondition();return!M||M(U)})).flat());for(const U of N)U.applyPreAttack(A,null,R,s,this,[n]);(A instanceof WE?a.getPlayerField():a.getEnemyField()).forEach(U=>An(PU,U,s,this,R,n)),n.value*=I.value;const C=A.findTag(U=>U instanceof IL&&U.boostedType===this.type);return C&&(n.value*=C.boostValue),dA(ZA,A,s,this,n),this.hasAttr(uN)||(a.arena.applyTags(yS,R,this.type,n),a.applyModifiers(Bn,A.isPlayer(),A,this.type,n)),A.getTag(SD)&&(n.value*=1.5),n.value}getPriority(A,s=!0){const R=new je(this.priority);return dA(XD,A,null,this,R),_t(Fa,A,null,s,this,R),R.value}calculateEffectivePower(){let A;if(this.id===t.TRIPLE_AXEL)A=94.14;else if(this.id===t.TRIPLE_KICK)A=47.07;else{const R=this.getAttrs(CA)[0];R?A=R.calculateExpectedHitCount(this)*this.power:A=this.power*(this.accuracy===-1?1:this.accuracy/100)}let s=1;return this.hasAttr(Kn)&&(s+=2),this.hasAttr(vR)&&(s+=1),this.isChargingMove()&&(s+=1),A/s}canBeMultiStrikeEnhanced(A,s=!1){const{targets:R,multiple:n}=Fn(A,this.id),I=n&&R.length>1,r=[CA,na,BI],L=[t.FLING,t.UPROAR,t.ROLLOUT,t.ICE_BALL,t.ENDEAVOR],N=A.getAlly(),l=this.id===t.POLLEN_PUFF&&!Pe(N)&&R.includes(N.getBattlerIndex());return(!s||!I)&&!this.isChargingMove()&&!r.some(C=>this.hasAttr(C))&&!L.some(C=>this.id===C)&&!l&&this.category!==g.STATUS}};o(C4,"Move");let NN=C4;const u4=class u4 extends NN{constructor(A,s,R,n,I,r,L,N,l){super(A,s,R,De.NEAR_OTHER,n,I,r,L,N,l),this.type===i.FIRE&&this.addAttr(new IE(!1,re.FREEZE))}getTargetBenefitScore(A,s,R){const n=super.getTargetBenefitScore(A,s,R);let I=0;const r=s.getAttackTypeEffectiveness(this.type,A,void 0,void 0,this);I=Math.pow(r-1,2)*(r<1?-2:2);const[L,N]=this.category===g.PHYSICAL?[p.ATK,p.SPATK]:[p.SPATK,p.ATK],l=new je(A.getEffectiveStat(L,s)),C=A.getEffectiveStat(N,s);dA(TL,A,s,R,l);const U=C/l.value;U<=.75?I*=2:U<=.875&&(I*=1.5);const D=new je(this.calculateEffectivePower());return dA(ZA,A,s,R,D),I+=Math.floor(D.value/5),n-I}};o(u4,"AttackMove");let m=u4;const U4=class U4 extends NN{constructor(A,s,R,n,I,r,L){super(A,s,g.STATUS,De.NEAR_OTHER,-1,R,n,I,r,L)}};o(U4,"StatusMove");let ge=U4;const D4=class D4 extends NN{constructor(A,s,R,n,I,r,L){super(A,s,g.STATUS,De.USER,-1,R,n,I,r,L)}};o(D4,"SelfStatusMove");let at=D4;function C7(E){return class extends E{constructor(){super(...arguments),this.chargeAnim=La[`${t[this.id]}_CHARGING`],this.chargeAttrs=[]}isChargingMove(){return!0}chargeText(A){return this._chargeText=A,this}showChargeText(A,s){a.queueMessage(this._chargeText.replace("{USER}",ee(A)).replace("{TARGET}",ee(s)))}getChargeAttrs(A){return this.chargeAttrs.filter(s=>s instanceof A)}hasChargeAttr(A){return this.chargeAttrs.some(s=>s instanceof A)}chargeAttr(A,...s){const R=new A(...s);return this.chargeAttrs.push(R),this}}}o(C7,"ChargeMove");const M4=class M4 extends C7(m){};o(M4,"ChargingAttackMove");let Ps=M4;const c4=class c4 extends C7(at){};o(c4,"ChargingSelfStatusMove");let fH=c4;const h4=class h4{constructor(A=!1){this.selfTarget=A}apply(A,s,R,n){return!0}getCondition(){return null}getFailedText(A,s,R){}getUserBenefitScore(A,s,R){return 0}getTargetBenefitScore(A,s,R){return 0}};o(h4,"MoveAttr");let TA=h4;const _4=class _4 extends TA{constructor(A,s){super(A),this.options=s}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??kA.POST_APPLY}get firstHitOnly(){var A;return((A=this.options)==null?void 0:A.firstHitOnly)??!1}get lastHitOnly(){var A;return((A=this.options)==null?void 0:A.lastHitOnly)??!1}get firstTargetOnly(){var A;return((A=this.options)==null?void 0:A.firstTargetOnly)??!1}get effectChanceOverride(){var A;return(A=this.options)==null?void 0:A.effectChanceOverride}canApply(A,s,R,n){return!!(this.selfTarget?A.hp&&!A.getTag(w.FRENZY):s.hp)&&(this.selfTarget||!s.getTag(w.PROTECTED)||R.doesFlagEffectApply({flag:ct.IGNORE_PROTECT,user:A,target:s}))}apply(A,s,R,n){return this.canApply(A,s,R,n)}getMoveChance(A,s,R,n,I){const r=new je(this.effectChanceOverride??R.chance);if(_t(VS,A,null,!I,r,R),(!R.hasAttr(lA)||r.value<=R.chance)&&!R.hasAttr(tM)){const L=A.isPlayer()?Dt.PLAYER:Dt.ENEMY;a.arena.applyTagsForSide(Fe.WATER_FIRE_PLEDGE,L,!1,r)}return n||Xn(za,s,A,null,null,!I,r),r.value}};o(_4,"MoveEffectAttr");let dt=_4;const P4=class P4 extends TA{constructor(){super(!0)}};o(P4,"MoveHeaderAttr");let LL=P4;const G4=class G4 extends LL{constructor(A){super(),this.message=A}apply(A,s,R,n){const I=typeof this.message=="string"?this.message:this.message(A,R);return I?(a.queueMessage(I),!0):!1}};o(G4,"MessageHeaderAttr");let BH=G4;const d4=class d4 extends LL{constructor(A){super(),this.tagType=A}apply(A,s,R,n){return A.addTag(this.tagType),!0}};o(d4,"AddBattlerTagHeaderAttr");let KD=d4;const H4=class H4 extends KD{constructor(){super(w.BEAK_BLAST_CHARGING),this.chargeAnim=La.BEAK_BLAST_CHARGING}};o(H4,"BeakBlastHeaderAttr");let oL=H4;const f4=class f4 extends TA{constructor(A){super(),this.message=A}apply(A,s,R,n){const I=typeof this.message=="string"?this.message:this.message(A,s,R);return I?(a.queueMessage(I,500),!0):!1}};o(f4,"PreMoveMessageAttr");let $i=f4;const B4=class B4 extends TA{constructor(A,s){super(),this.message=A,this.conditionFunc=s??(()=>!0)}apply(A,s,R){return this.conditionFunc(A,s,R)}getFailedText(A,s,R){if(this.message&&this.conditionFunc(A,s,R))return typeof this.message=="string"?this.message:this.message(A,s,R)}};o(B4,"PreUseInterruptAttr");let FD=B4;const g4=class g4 extends TA{};o(g4,"RespectAttackTypeImmunityAttr");let YD=g4;const m4=class m4 extends TA{apply(A,s,R,n){return n[0].value=!0,!0}};o(m4,"IgnoreOpponentStatStagesAttr");let OI=m4;const p4=class p4 extends TA{apply(A,s,R,n){return n[0].value++,!0}getUserBenefitScore(A,s,R){return 3}};o(p4,"HighCritAttr");let iE=p4;const K4=class K4 extends TA{apply(A,s,R,n){return n[0].value=!0,!0}getUserBenefitScore(A,s,R){return 5}};o(K4,"CritOnlyAttr");let hn=K4;const F4=class F4 extends TA{constructor(A){super(),this.damage=A}apply(A,s,R,n){return n[0].value=this.getDamage(A,s,R),!0}getDamage(A,s,R){return this.damage}};o(F4,"FixedDamageAttr");let FO=F4;const Y4=class Y4 extends FO{constructor(){super(0)}apply(A,s,R,n){return n[0].value=A.hp,!0}};o(Y4,"UserHpDamageAttr");let gH=Y4;const W4=class W4 extends FO{constructor(){super(0)}apply(A,s,R,n){var r;const I=((r=A.getHeldItems().find(L=>L instanceof Ta))==null?void 0:r.getStackCount())??0;if(I<=0)return n[0].value=Qt(s.hp/2),!0;switch(A.turnData.hitCount-A.turnData.hitsLeft){case 0:this.initialHp=s.hp;default:return n[0].value=Qt(this.initialHp/2),!0;case I+1:return n[0].value=Qt(s.hp/2),!0}}getTargetBenefitScore(A,s,R){return s.getHpRatio()>.5?Math.floor((s.getHpRatio()-.5)*-24+4):-20}};o(W4,"TargetHalfHpDamageAttr");let io=W4;const y4=class y4 extends FO{constructor(){super(0)}apply(A,s,R,n){return n[0].value=s.hp-A.hp,!0}getCondition(){return(A,s,R)=>A.hp<=s.hp}};o(y4,"MatchHpAttr");let mH=y4;const w4=class w4 extends FO{constructor(A,s){super(0),this.moveFilter=A,this.multiplier=s}apply(A,s,R,n){const I=A.turnData.attacksReceived.filter(r=>this.moveFilter(Ve[r.move])).reduce((r,L)=>r+L.damage,0);return n[0].value=Qt(I*this.multiplier),!0}getCondition(){return(A,s,R)=>!!A.turnData.attacksReceived.filter(n=>this.moveFilter(Ve[n.move])).length}};o(w4,"CounterDamageAttr");let Ji=w4;const v4=class v4 extends FO{constructor(){super(0)}getDamage(A,s,R){return A.level}};o(v4,"LevelDamageAttr");let WD=v4;const V4=class V4 extends FO{constructor(){super(0)}getDamage(A,s,R){return Qt(A.level*(A.randSeedIntRange(50,150)*.01))}};o(V4,"RandomLevelDamageAttr");let pH=V4;const x4=class x4 extends TA{apply(A,s,R,n){const I=n[0];return I.value=this.getModifiedDamage(A,s,R,I.value),!0}getModifiedDamage(A,s,R,n){return n}};o(x4,"ModifiedDamageAttr");let yD=x4;const b4=class b4 extends yD{getModifiedDamage(A,s,R,n){return Math.min(n,s.hp-1)}getUserBenefitScore(A,s,R){return s.hp>1?0:-20}};o(b4,"SurviveDamageAttr");let wD=b4;const k4=class k4 extends dt{apply(A,s,R,n){return a.queueMessage(u.t("moveTriggers:splash")),!0}};o(k4,"SplashAttr");let KH=k4;const Z4=class Z4 extends dt{apply(A,s,R,n){return a.queueMessage(u.t("moveTriggers:celebrate",{playerName:Ut==null?void 0:Ut.username})),!0}};o(Z4,"CelebrateAttr");let FH=Z4;const X4=class X4 extends dt{constructor(A=!1,s=.25,R=!1){super(!0,{lastHitOnly:!0}),this.useHp=A,this.damageRatio=s,this.unblockable=R}apply(A,s,R,n){var l;if(!super.apply(A,s,R,n))return!1;const I=new Pt(!1);if(this.unblockable||(_t(IU,A,I),_t(fE,A,I)),I.value||this.useHp&&[DA.FAIL,DA.MISS].includes(((l=A.getLastXMoves(1)[0])==null?void 0:l.result)??DA.FAIL))return!1;const r=(this.useHp?A.getMaxHp():A.turnData.totalDamageDealt)*this.damageRatio,L=A.turnData.totalDamageDealt?1:0,N=Qt(r,L);return!N||I.value?!1:(A.damageAndUpdate(N,{result:yt.INDIRECT,ignoreSegments:!0}),a.queueMessage(u.t("moveTriggers:hitWithRecoil",{pokemonName:ee(A)})),A.turnData.damageTaken+=N,!0)}getUserBenefitScore(A,s,R){return Math.floor(R.power/5/-4)}};o(X4,"RecoilAttr");let RR=X4;const Q4=class Q4 extends dt{constructor(){super(!0,{trigger:kA.POST_TARGET})}apply(A,s,R,n){return A.damageAndUpdate(A.hp,{result:yt.INDIRECT,ignoreSegments:!0}),A.turnData.damageTaken+=A.hp,!0}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};o(Q4,"SacrificialAttr");let na=Q4;const $4=class $4 extends dt{constructor(){super(!0,{trigger:kA.HIT})}apply(A,s,R,n){return super.apply(A,s,R,n)?(A.damageAndUpdate(A.hp,{result:yt.INDIRECT,ignoreSegments:!0}),A.turnData.damageTaken+=A.hp,!0):!1}getUserBenefitScore(A,s,R){return A.isBoss()?-20:Math.ceil(((1-A.getHpRatio())*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};o($4,"SacrificialAttrOnHit");let BI=$4;const J4=class J4 extends dt{constructor(){super(!0,{trigger:kA.POST_TARGET})}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=new Pt(!1);return _t(fE,A,I),I.value||(A.damageAndUpdate(Qt(A.getMaxHp()/2),{result:yt.INDIRECT,ignoreSegments:!0}),a.queueMessage(u.t("moveTriggers:cutHpPowerUpMove",{pokemonName:ee(A)}))),!0}getUserBenefitScore(A,s,R){return A.isBoss()?-10:Math.ceil(((1-A.getHpRatio()/2)*10-10)*(s.getAttackTypeEffectiveness(R.type,A)-.5))}};o(J4,"HalfSacrificialAttr");let vD=J4;const z4=class z4 extends dt{constructor(A,s){super(!0),this.hpCost=A,this.roundUp=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.roundUp?Math.ceil(A.getMaxHp()*this.hpCost):Math.floor(A.getMaxHp()*this.hpCost);return A.damageAndUpdate(I,{result:yt.INDIRECT,ignoreSegments:!0,ignoreFaintPhase:!0}),A.addTag(w.SUBSTITUTE,0,R.id,A.id),!0}getUserBenefitScore(A,s,R){return A.isBoss()?-10:5}getCondition(){return(A,s,R)=>!A.getTag(xE)&&A.hp>(this.roundUp?Math.ceil(A.getMaxHp()*this.hpCost):Math.floor(A.getMaxHp()*this.hpCost))&&A.getMaxHp()>1}getFailedText(A,s,R){if(A.getTag(xE))return u.t("moveTriggers:substituteOnOverlap",{pokemonName:ee(A)});if(A.hp<=Math.floor(A.getMaxHp()/4)||A.getMaxHp()===1)return u.t("moveTriggers:substituteNotEnoughHp")}};o(z4,"AddSubstituteAttr");let VD=z4;const j4=class j4 extends dt{constructor(A,s,R){super(R===void 0||R),this.healRatio=A||1,this.showAnim=!!s}apply(A,s,R,n){return this.addHealPhase(this.selfTarget?A:s,this.healRatio),!0}addHealPhase(A,s){a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()*s),u.t("moveTriggers:healHp",{pokemonName:ee(A)}),!0,!this.showAnim))}getTargetBenefitScore(A,s,R){const n=(1-(this.selfTarget?A:s).getHpRatio())*20-this.healRatio*10;return Math.round(n/(1-this.healRatio/2))}};o(j4,"HealAttr");let fs=j4;const q4=class q4 extends dt{constructor(A,s){super(),this.message=A,this.abilityCondition=s}canApply(A,s,R,n){return!!(this.selfTarget&&A.hp&&!A.getTag(w.FRENZY)||!this.selfTarget&&(!s.getTag(w.PROTECTED)||R.hasFlag(ct.IGNORE_PROTECT)))}apply(A,s,R,n){return this.canApply(A,s,R,n)?((A.isPlayer()?a.getPlayerParty():a.getEnemyParty()).forEach(r=>this.cureStatus(r,A.id)),this.message&&a.queueMessage(this.message),!0):!1}cureStatus(A,s){var R,n;!A.isOnField()||A.id===s?(A.resetStatus(!1),A.updateInfo()):A.hasAbility(this.abilityCondition)?(a.queueAbilityDisplay(A,((R=A.getPassiveAbility())==null?void 0:R.id)===this.abilityCondition,!0),a.queueAbilityDisplay(A,((n=A.getPassiveAbility())==null?void 0:n.id)===this.abilityCondition,!1)):(A.resetStatus(),A.updateInfo())}};o(q4,"PartyStatusCureAttr");let Io=q4;const e3=class e3 extends dt{apply(A,s,R,n){const I=s.getAlly(),r=new Pt(!1);return Pe(I)||_t(fE,I,r),r.value||!I||I.switchOutStatus?!1:(I.damageAndUpdate(Math.max(1,Math.floor(1/16*I.getMaxHp())),{result:yt.INDIRECT}),!0)}getTargetBenefitScore(A,s,R){return Pe(s.getAlly())?0:-5}};o(e3,"FlameBurstAttr");let YH=e3;const t3=class t3 extends na{constructor(A,s){super(),this.restorePP=A,this.moveMessage=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const r=(A.isPlayer()?a.getPlayerParty():a.getEnemyParty()).map(L=>L.getMaxHp()).reduce((L,N)=>Math.max(N,L),0);return a.pushPhase(new ZE(A.getBattlerIndex(),r,u.t(this.moveMessage,{pokemonName:ee(A)}),!0,!1,!1,!0,!1,this.restorePP),!0),!0}getUserBenefitScore(A,s,R){return-20}getCondition(){return(A,s,R)=>a.getPlayerParty().filter(n=>n.isActive()).length>a.currentBattle.getBattlerCount()}};o(t3,"SacrificialFullRestoreAttr");let xD=t3;const A3=class A3 extends TA{constructor(A){super(),this.weather=A}apply(A,s,R,n){var r;const I=n[0];return((r=a.arena.weather)==null?void 0:r.weatherType)===this.weather&&(I.value=Math.max(I.value,1)),!0}};o(A3,"IgnoreWeatherTypeDebuffAttr");let bD=A3;const E3=class E3 extends fs{constructor(){super(.5)}apply(A,s,R,n){var r,L;let I=.5;if(!((r=a.arena.weather)!=null&&r.isEffectSuppressed())){const N=((L=a.arena.weather)==null?void 0:L.weatherType)||Oe.NONE;I=this.getWeatherHealRatio(N)}return this.addHealPhase(A,I),!0}};o(E3,"WeatherHealAttr");let kD=E3;const s3=class s3 extends kD{getWeatherHealRatio(A){switch(A){case Oe.SUNNY:case Oe.HARSH_SUN:return 2/3;case Oe.RAIN:case Oe.SANDSTORM:case Oe.HAIL:case Oe.SNOW:case Oe.HEAVY_RAIN:return .25;default:return .5}}};o(s3,"PlantHealAttr");let ro=s3;const R3=class R3 extends kD{getWeatherHealRatio(A){switch(A){case Oe.SANDSTORM:return 2/3;default:return .5}}};o(R3,"SandHealAttr");let WH=R3;const O3=class O3 extends fs{constructor(A=.5,s=2/3,R,n,I){super(A,R,n),this.normalHealRatio=A,this.boostedHealRatio=s,this.condition=I}apply(A,s,R,n){const I=this.condition&&this.condition(A,s,R)?this.boostedHealRatio:this.normalHealRatio;return this.addHealPhase(s,I),!0}};o(O3,"BoostHealAttr");let yH=O3;const n3=class n3 extends fs{apply(A,s,R,n){return A.getAlly()===s?(super.apply(A,s,R,n),!0):!1}};o(n3,"HealOnAllyAttr");let ZD=n3;const a3=class a3 extends dt{constructor(A,s){super(!0,{trigger:kA.HIT}),this.healRatio=A??.5,this.healStat=s??null}apply(A,s,R,n){let I=0,r="";const L=s.hasAbilityWithAttr(vS,!1);return this.healStat!==null?(I=s.getEffectiveStat(this.healStat),r=u.t("battle:drainMessage",{pokemonName:ee(s)})):(I=Qt(A.turnData.singleHitDamageDealt*this.healRatio),r=u.t("battle:regainHealth",{pokemonName:ee(A)})),L&&(A.hasAbilityWithAttr(fE)?(I=0,r=""):(A.turnData.damageTaken+=I,I=I*-1,r="")),a.unshiftPhase(new ZE(A.getBattlerIndex(),I,r,!1,!0)),!0}getUserBenefitScore(A,s,R){if(this.healStat){const n=s.getEffectiveStat(this.healStat);return Math.floor(Math.max(0,Math.min(1,(n+A.hp)/A.getMaxHp()-.33))/A.getHpRatio())}return Math.floor(Math.max(1-A.getHpRatio()-.33,0)*(R.power/4))}};o(a3,"HitHealAttr");let Zs=a3;const i3=class i3 extends TA{constructor(A,s=1){super(),this.moveIncrementFunc=A,this.increaseAmount=s}apply(A,s,R,n){return this.moveIncrementFunc(A,s,R)?(n[0].value+=this.increaseAmount,!0):!1}};o(i3,"IncrementMovePriorityAttr");let XD=i3;const I3=class I3 extends TA{constructor(A){super(),this.intrinsicMultiHitType=A!==void 0?A:jA._2_TO_5,this.multiHitType=this.intrinsicMultiHitType}getMultiHitType(){return this.multiHitType}apply(A,s,R,n){const I=new je(this.intrinsicMultiHitType);return dA(QD,A,s,R,I),this.multiHitType=I.value,n[0].value=this.getHitCount(A,s),!0}getTargetBenefitScore(A,s,R){return-5}getHitCount(A,s){switch(this.multiHitType){case jA._2_TO_5:{const n=A.randSeedInt(20),I=new je(n);return _t(EN,A,null,!1,I),I.value>=13?2:I.value>=6?3:I.value>=3?4:5}case jA._2:return 2;case jA._3:return 3;case jA._10:return 10;case jA.BEAT_UP:return(A.isPlayer()?a.getPlayerParty():a.getEnemyParty()).reduce((n,I)=>n+(I.id===A.id?1:I!=null&&I.status&&I.status.effect!==re.NONE?0:1),0)}}calculateExpectedHitCount(A,{ignoreAcc:s=!1,maxMultiHit:R=!1,partySize:n=1}={}){let I;switch(this.multiHitType){case jA._2_TO_5:I=R?5:3.1;break;case jA._2:I=2;break;case jA._3:I=3;break;case jA._10:I=10;break;case jA.BEAT_UP:I=Math.max(1,n/2);break}if(s||A.accuracy===-1)return I;const r=A.accuracy/100;return A.hasFlag(ct.CHECK_ALL_HITS)&&!R?r*(1-Math.pow(r,I))/(1-r):I*=r}};o(I3,"MultiHitAttr");let CA=I3;const r3=class r3 extends TA{apply(A,s,R,n){return!1}};o(r3,"ChangeMultiHitTypeAttr");let QD=r3;const L3=class L3 extends QD{apply(A,s,R,n){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(n[0].value=jA._3,!0):!1}};o(L3,"WaterShurikenMultiHitTypeAttr");let wH=L3;const o3=class o3 extends dt{constructor(A,s,R,n=!1){super(s,{trigger:kA.HIT}),this.overrideStatus=!1,this.effect=A,this.turnsRemaining=R,this.overrideStatus=n}apply(A,s,R,n){if(!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);if(I<0||I===100||A.randSeedInt(100)<I){const L=this.selfTarget?A:s;if(L.status)if(this.overrideStatus)L.resetStatus();else return!1;if(A!==s&&s.isSafeguarded(A))return R.category===g.STATUS&&a.queueMessage(u.t("moveTriggers:safeguard",{targetName:ee(s)})),!1;if((!L.status||L.status.effect===this.effect&&I<0)&&L.trySetStatus(this.effect,!0,A,this.turnsRemaining))return L7(pU,A,s,R,null,!1,this.effect),!0}return!1}getTargetBenefitScore(A,s,R){const n=this.getMoveChance(A,s,R,this.selfTarget,!1),I=n<0?-10:Math.floor(n*-.1),r=this.selfTarget?A:s;return!r.status&&r.canSetStatus(this.effect,!0,!1,A)?I:0}};o(o3,"StatusEffectAttr");let Tt=o3;const T3=class T3 extends Tt{constructor(A,s,R,n){super(A[0],s,R,n),this.effects=A}apply(A,s,R,n){return this.effect=eE(this.effects),super.apply(A,s,R,n)}getTargetBenefitScore(A,s,R){const n=this.getMoveChance(A,s,R,this.selfTarget,!1),I=n<0?-10:Math.floor(n*-.1),r=this.selfTarget?A:s;return!r.status&&r.canSetStatus(this.effect,!0,!1,A)?I:0}};o(T3,"MultiStatusEffectAttr");let $D=T3;const S3=class S3 extends dt{constructor(){super(!1,{trigger:kA.HIT})}apply(A,s,R,n){var r;const I=((r=A.status)==null?void 0:r.effect)??(A.hasAbility(O.COMATOSE)?re.SLEEP:void 0);if(s.status)return!1;{const N=s.canSetStatus(I,!0,!1,A)?s.trySetStatus(I,!0,A):!1;return N&&A.status&&A.addTag(w.PSYCHO_SHIFT),N}}getTargetBenefitScore(A,s,R){var n;return!s.status&&s.canSetStatus((n=A.status)==null?void 0:n.effect,!0,!1,A)?-10:0}};o(S3,"PsychoShiftEffectAttr");let vH=S3;const N3=class N3 extends dt{constructor(A){super(!1,{trigger:kA.HIT}),this.chance=A}apply(A,s,R,n){if(R.hitsSubstitute(A,s)||Phaser.Math.RND.realInRange(0,1)>=this.chance)return!1;const r=this.getTargetHeldItems(s).filter(L=>L.isTransferable);if(r.length){const L=s.isPlayer()?yE.PLAYER:s.hasTrainer()?yE.TRAINER:yE.WILD,N=r.map(U=>U.type.getOrInferTier(L)).reduce((U,D)=>Math.max(D,U),0),l=r.filter(U=>U.type.getOrInferTier(L)===N),C=l[A.randSeedInt(l.length)];if(a.tryTransferHeldItemModifier(C,A,!1))return a.queueMessage(u.t("moveTriggers:stoleItem",{pokemonName:ee(A),targetName:ee(s),itemName:C.type.name})),!0}return!1}getTargetHeldItems(A){return a.findModifiers(s=>s instanceof Ft&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};o(N3,"StealHeldItemChanceAttr");let JD=N3;const l3=class l3 extends dt{constructor(A){super(!1,{trigger:kA.HIT}),this.berriesOnly=A}apply(A,s,R,n){if(!this.berriesOnly&&s.isPlayer()||R.hitsSubstitute(A,s))return!1;const I=new Pt(!1);if(_t(MI,s,I),I.value===!0)return!1;let r=this.getTargetHeldItems(s).filter(L=>L.isTransferable);if(this.berriesOnly&&(r=r.filter(L=>L instanceof GE&&L.pokemonId===s.id,s.isPlayer())),r.length){const L=r[A.randSeedInt(r.length)];s.loseHeldItem(L),a.updateModifiers(s.isPlayer()),this.berriesOnly?a.queueMessage(u.t("moveTriggers:incineratedItem",{pokemonName:ee(A),targetName:ee(s),itemName:L.type.name})):a.queueMessage(u.t("moveTriggers:knockedOffItem",{pokemonName:ee(A),targetName:ee(s),itemName:L.type.name}))}return!0}getTargetHeldItems(A){return a.findModifiers(s=>s instanceof Ft&&s.pokemonId===A.id,A.isPlayer())}getUserBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?5:0}getTargetBenefitScore(A,s,R){return this.getTargetHeldItems(s).length?-5:0}};o(l3,"RemoveHeldItemAttr");let zD=l3;const C3=class C3 extends dt{constructor(){super(!0,{trigger:kA.HIT})}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.getTargetHeldBerries(s);if(I.length<=0)return!1;this.chosenBerry=I[A.randSeedInt(I.length)];const r=new Pt(!1);return a.applyModifiers(yI,s.isPlayer(),s,r),r.value||this.reduceBerryModifier(s),this.eatBerry(s),!0}getTargetHeldBerries(A){return a.findModifiers(s=>s instanceof GE&&s.pokemonId===A.id,A.isPlayer())}reduceBerryModifier(A){this.chosenBerry&&A.loseHeldItem(this.chosenBerry),a.updateModifiers(A.isPlayer())}eatBerry(A,s){c7(this.chosenBerry.berryType)(A,s),_t(AN,A,new Pt(!1))}};o(C3,"EatBerryAttr");let lN=C3;const u3=class u3 extends lN{constructor(){super()}apply(A,s,R,n){if(R.hitsSubstitute(A,s))return!1;const I=new Pt(!1);if(_t(MI,s,I),I.value===!0)return!1;const r=this.getTargetHeldBerries(s);if(r.length<=0)return!1;this.chosenBerry=r[A.randSeedInt(r.length)],cn(iO,s,!1);const L=u.t("battle:stealEatBerry",{pokemonName:A.name,targetName:s.name,berryName:this.chosenBerry.type.name});return a.queueMessage(L),this.reduceBerryModifier(s),this.eatBerry(A,s),!0}};o(u3,"StealEatBerryAttr");let jD=u3;const U3=class U3 extends dt{constructor(A,s){super(A,{lastHitOnly:!0}),this.effects=[s].flat(1)}apply(A,s,R,n){if(!super.apply(A,s,R,n)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=Fn(A,R.id);if(s.hasAbilityWithAttr(za)&&R.id===t.SPARKLING_ARIA&&I.targets.length===1)return!1;const r=this.selfTarget?A:s;return r.status&&this.effects.includes(r.status.effect)?(a.queueMessage(oi(r.status.effect,ee(r))),r.resetStatus(),r.updateInfo(),!0):!1}isOfEffect(A){return this.effects.includes(A)}getUserBenefitScore(A,s,R){return A.status?10:0}};o(U3,"HealStatusEffectAttr");let IE=U3;const D3=class D3 extends TA{apply(A,s,R,n){var I;return((I=A.status)==null?void 0:I.effect)===re.SLEEP?(A.addTag(w.BYPASS_SLEEP,1,R.id,A.id),!0):!1}getUserBenefitScore(A,s,R){return A.status&&A.status.effect===re.SLEEP?200:-10}};o(D3,"BypassSleepAttr");let CN=D3;const M3=class M3 extends TA{apply(A,s,R,n){return n[0].value=!0,!0}};o(M3,"BypassBurnDamageReductionAttr");let qD=M3;const c3=class c3 extends dt{constructor(A){super(),this.weatherType=A}apply(A,s,R,n){return a.arena.trySetWeather(this.weatherType,A)}getCondition(){return(A,s,R)=>!a.arena.weather||a.arena.weather.weatherType!==this.weatherType&&!a.arena.weather.isImmutable()}};o(c3,"WeatherChangeAttr");let di=c3;const h3=class h3 extends dt{constructor(A){super(),this.weatherType=A}apply(A,s,R,n){var I;return((I=a.arena.weather)==null?void 0:I.weatherType)===this.weatherType?a.arena.trySetWeather(Oe.NONE,A):!1}};o(h3,"ClearWeatherAttr");let VH=h3;const _3=class _3 extends dt{constructor(A){super(),this.terrainType=A}apply(A,s,R,n){return a.arena.trySetTerrain(this.terrainType,!0,A)}getCondition(){return(A,s,R)=>!a.arena.terrain||a.arena.terrain.terrainType!==this.terrainType}getUserBenefitScore(A,s,R){return a.arena.terrain?0:6}};o(_3,"TerrainChangeAttr");let Hi=_3;const P3=class P3 extends dt{constructor(){super()}apply(A,s,R,n){return a.arena.trySetTerrain(Nt.NONE,!0,A)}};o(P3,"ClearTerrainAttr");let Lr=P3;const G3=class G3 extends TA{apply(A,s,R,n){return s.isBossImmune()?!1:(n[0].value=!0,!0)}getCondition(){return(A,s,R)=>{const n=new Pt(!1);return _t(vU,s,n),!n.value&&A.level>=s.level}}};o(G3,"OneHitKOAttr");let En=G3;const d3=class d3 extends TA{constructor(A){super(!0),this.condition=A}apply(A,s,R,n){const I=n[0];return I instanceof Pt&&this.condition(A,R)?(I.value=!0,!0):!1}};o(d3,"InstantChargeAttr");let eM=d3;const H3=class H3 extends eM{constructor(A){super((s,R)=>{const n=a.arena.weather;return Pe(n==null?void 0:n.weatherType)?!1:!(n!=null&&n.isEffectSuppressed())&&A.includes(n==null?void 0:n.weatherType)})}};o(H3,"WeatherInstantChargeAttr");let Lo=H3;const f3=class f3 extends TA{apply(A,s,R,n){return!0}};o(f3,"OverrideMoveEffectAttr");let Ai=f3;const B3=class B3 extends Ai{constructor(A,s,R){super(),this.tagType=A,this.chargeAnim=s,this.chargeText=R}apply(A,s,R,n){if(!s)return!0;const I=n[0];if(n[1])a.queueMessage(u.t("moveTriggers:tookMoveAttack",{pokemonName:ee(a.getPokemonById(s.id)??void 0),moveName:R.name}));else{I.value=!0,a.unshiftPhase(new HH(new SN(this.chargeAnim,R.id,A))),a.queueMessage(this.chargeText.replace("{TARGET}",ee(s)).replace("{USER}",ee(A))),A.pushMoveHistory({move:R.id,targets:[s.getBattlerIndex()],result:DA.OTHER});const L=s.isPlayer()?Dt.PLAYER:Dt.ENEMY;a.arena.addTag(this.tagType,3,R.id,A.id,L,!1,s.getBattlerIndex())}return!0}};o(B3,"DelayedAttackAttr");let Kn=B3;const m0=class m0 extends Ai{constructor(){super(!0)}apply(A,s,R,n){if(A.turnData.combiningPledge)return a.queueMessage(u.t("moveTriggers:combiningPledge")),!1;const I=n[0],r=a.findPhase(L=>L instanceof _A&&L.pokemon.isPlayer()===A.isPlayer());if(r){const L=r.move.getMove();if(L!==R&&L.hasAttr(m0)){[A,r.pokemon].forEach(C=>C.turnData.combiningPledge=R.id),a.queueMessage(u.t("moveTriggers:awaitingPledge",{userPokemonName:ee(A),allyPokemonName:ee(r.pokemon)}));const N=a.phaseQueue.indexOf(r),l=a.phaseQueue.findIndex(C=>C instanceof _A);return N!==l&&a.prependToPhase(a.phaseQueue.splice(N,1)[0],_A),I.value=!0,!0}}return!1}};o(m0,"AwaitCombinedPledgeAttr");let oo=m0;const g3=class g3 extends dt{constructor(A,s,R,n){super(R,n),this.stats=A,this.stages=s,this.options=n}get condition(){var A;return((A=this.options)==null?void 0:A.condition)??null}get showMessage(){var A;return((A=this.options)==null?void 0:A.showMessage)??!0}get trigger(){var A;return((A=this.options)==null?void 0:A.trigger)??kA.HIT}apply(A,s,R,n){if(!super.apply(A,s,R,n)||this.condition&&!this.condition(A,s,R)||!this.selfTarget&&R.hitsSubstitute(A,s))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);if(I<0||I===100||A.randSeedInt(100)<I){const r=this.getLevels(A);return a.unshiftPhase(new AA((this.selfTarget?A:s).getBattlerIndex(),this.selfTarget,this.stats,r,this.showMessage)),!0}return!1}getLevels(A){return this.stages}getTargetBenefitScore(A,s,R){let n=0;const I=this.getLevels(A);for(const r of this.stats){let L=I;const N=s.getStatStage(r);L>0?L=Math.min(N+L,6)-N:L=Math.max(N+L,-6)-N;let l=!1;switch(r){case p.ATK:this.selfTarget&&(l=!A.getMoveset().find(C=>C instanceof m&&C.category===g.PHYSICAL));break;case p.DEF:this.selfTarget||(l=!A.getMoveset().find(C=>C instanceof m&&C.category===g.PHYSICAL));break;case p.SPATK:this.selfTarget&&(l=!A.getMoveset().find(C=>C instanceof m&&C.category===g.SPECIAL));break;case p.SPDEF:this.selfTarget||(l=!A.getMoveset().find(C=>C instanceof m&&C.category===g.SPECIAL));break}l||(n+=L*4+(L>0?-2:2))}return n}};o(g3,"StatStageChangeAttr");let Ge=g3;const m3=class m3 extends dt{constructor(){super(!1)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;let I;const r=a.arena.getTerrainType();if(r!==Nt.NONE)I=this.determineTerrainEffect(r);else{const L=a.arena.biomeType;I=this.determineBiomeEffect(L)}return I.apply(A,s,R,[])}determineTerrainEffect(A){let s;switch(A){case Nt.ELECTRIC:default:s=new Tt(re.PARALYSIS,!1);break;case Nt.MISTY:s=new Ge([p.SPATK],-1,!1);break;case Nt.GRASSY:s=new Tt(re.SLEEP,!1);break;case Nt.PSYCHIC:s=new Ge([p.SPD],-1,!1);break}return s}determineBiomeEffect(A){let s;switch(A){case T.PLAINS:case T.GRASS:case T.TALL_GRASS:case T.FOREST:case T.JUNGLE:case T.MEADOW:s=new Tt(re.SLEEP,!1);break;case T.SWAMP:case T.MOUNTAIN:case T.TEMPLE:case T.RUINS:s=new Ge([p.SPD],-1,!1);break;case T.ICE_CAVE:case T.SNOWY_FOREST:s=new Tt(re.FREEZE,!1);break;case T.VOLCANO:s=new Tt(re.BURN,!1);break;case T.FAIRY_CAVE:s=new Ge([p.SPATK],-1,!1);break;case T.DESERT:case T.CONSTRUCTION_SITE:case T.BEACH:case T.ISLAND:case T.BADLANDS:s=new Ge([p.ACC],-1,!1);break;case T.SEA:case T.LAKE:case T.SEABED:s=new Ge([p.ATK],-1,!1);break;case T.CAVE:case T.WASTELAND:case T.GRAVEYARD:case T.ABYSS:case T.SPACE:s=new Yt(w.FLINCHED,!1,!0);break;case T.END:s=new Ge([p.DEF],-1,!1);break;case T.TOWN:case T.METROPOLIS:case T.SLUM:case T.DOJO:case T.FACTORY:case T.LABORATORY:case T.POWER_PLANT:default:s=new Tt(re.PARALYSIS,!1);break}return s}};o(m3,"SecretPowerAttr");let tM=m3;const p3=class p3 extends TA{constructor(A,s,R,n,I=!0,r=!1){super(),this.stats=A,this.stages=s,this.condition=n,this.showMessage=I}applyPostVictory(A,s,R){if(this.condition&&!this.condition(A,s,R))return;new Ge(this.stats,this.stages,this.showMessage).apply(A,s,R)}};o(p3,"PostVictoryStatStageChangeAttr");let AM=p3;const K3=class K3 extends dt{constructor(){super()}apply(A,s,R,n){const I=YO.filter(r=>s.getStatStage(r)<6);if(I.length>0){const r=[I[A.randSeedInt(I.length)]];return a.unshiftPhase(new AA(s.getBattlerIndex(),this.selfTarget,r,2)),!0}return!1}};o(K3,"AcupressureStatStageChangeAttr");let xH=K3;const F3=class F3 extends Ge{constructor(){super([p.ATK,p.SPATK],1,!0)}getLevels(A){var s,R;if(!((s=a.arena.weather)!=null&&s.isEffectSuppressed())){const n=(R=a.arena.weather)==null?void 0:R.weatherType;if(n===Oe.SUNNY||n===Oe.HARSH_SUN)return this.stages+1}return this.stages}};o(F3,"GrowthStatStageChangeAttr");let bH=F3;const Y3=class Y3 extends Ge{constructor(A,s,R,n){super(A,s,!0),this.cutRatio=R,this.messageCallback=n}apply(A,s,R,n){A.damageAndUpdate(Qt(A.getMaxHp()/this.cutRatio),{result:yt.INDIRECT}),A.updateInfo();const I=super.apply(A,s,R,n);return this.messageCallback&&this.messageCallback(A),I}getCondition(){return(A,s,R)=>A.getHpRatio()>1/this.cutRatio&&this.stats.some(n=>A.getStatStage(n)<6)}};o(Y3,"CutHpStatStageBoostAttr");let To=Y3;const W3=class W3 extends dt{constructor(){super(!0,{trigger:kA.HIT})}apply(A,s,R,n){const I=A.getTag(cD);if(!I)return!1;let r=p.ATK;switch(I.tatsugiriFormKey){case"curly":r=p.ATK;break;case"droopy":r=p.DEF;break;case"stretchy":r=p.SPD;break}return a.unshiftPhase(new AA(A.getBattlerIndex(),this.selfTarget,[r],1)),!0}};o(W3,"OrderUpStatBoostAttr");let kH=W3;const y3=class y3 extends dt{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of YO)A.setStatStage(I,s.getStatStage(I));return s.getTag(w.CRIT_BOOST)?A.addTag(w.CRIT_BOOST,0,R.id):A.removeTag(w.CRIT_BOOST),s.updateInfo(),A.updateInfo(),a.queueMessage(u.t("moveTriggers:copiedStatChanges",{pokemonName:ee(A),targetName:ee(s)})),!0}};o(y3,"CopyStatsAttr");let ZH=y3;const w3=class w3 extends dt{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of YO)s.setStatStage(I,-s.getStatStage(I));return s.updateInfo(),A.updateInfo(),a.queueMessage(u.t("moveTriggers:invertStats",{pokemonName:ee(s)})),!0}};o(w3,"InvertStatsAttr");let XH=w3;const v3=class v3 extends dt{constructor(A){super(),this.targetAllPokemon=A}apply(A,s,R,n){return this.targetAllPokemon?(a.getField(!0).forEach(r=>this.resetStats(r)),a.queueMessage(u.t("moveTriggers:statEliminated"))):R.hitsSubstitute(A,s)||(this.resetStats(s),a.queueMessage(u.t("moveTriggers:resetStats",{pokemonName:ee(s)}))),!0}resetStats(A){for(const s of YO)A.setStatStage(s,0);A.updateInfo()}};o(v3,"ResetStatsAttr");let So=v3;const V3=class V3 extends dt{constructor(A){super(),this.stats=A}apply(A,s,R,n){if(super.apply(A,s,R,n)){for(const I of this.stats){const r=A.getStatStage(I);A.setStatStage(I,s.getStatStage(I)),s.setStatStage(I,r)}return s.updateInfo(),A.updateInfo(),this.stats.length===7?a.queueMessage(u.t("moveTriggers:switchedStatChanges",{pokemonName:ee(A)})):this.stats.length===2&&a.queueMessage(u.t("moveTriggers:switchedTwoStatChanges",{pokemonName:ee(A),firstStat:u.t(mE(this.stats[0])),secondStat:u.t(mE(this.stats[1]))})),!0}return!1}};o(V3,"SwapStatStagesAttr");let No=V3;const x3=class x3 extends dt{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=Math.floor((s.hp+A.hp)/2);return[A,s].forEach(r=>{if(r.hp<I){const L=r.heal(I-r.hp);L&&a.damageNumberHandler.add(r,L,yt.HEAL)}else if(r.hp>I){const L=r.damage(r.hp-I,!0);L&&a.damageNumberHandler.add(r,L)}r.updateInfo()}),!0}};o(x3,"HpSplitAttr");let EM=x3;const b3=class b3 extends TA{apply(A,s,R,n){return!1}};o(b3,"VariablePowerAttr");let ZA=b3;const k3=class k3 extends ZA{apply(A,s,R,n){var l;const I=R.pp,r=((l=A.moveset.find(C=>C.moveId===R.id))==null?void 0:l.ppUsed)??0;let L=I-r;L<0&&(L=0);const N=n[0];switch(L){case 0:N.value=200;break;case 1:N.value=80;break;case 2:N.value=60;break;case 3:N.value=50;break;default:N.value=40;break}return!0}};o(k3,"LessPPMorePowerAttr");let QH=k3;const Z3=class Z3 extends ZA{constructor(A){super(),this.powerMultiplierFunc=A}apply(A,s,R,n){const I=n[0];return I.value*=this.powerMultiplierFunc(A,s,R),!0}};o(Z3,"MovePowerMultiplierAttr");let KA=Z3;const yj=o((E,A)=>{const s=E.isPlayer()?a.getPlayerParty():a.getEnemyParty();for(let R=A;R<s.length;R++){const n=s[R];if(!(n.id!==E.id&&(n!=null&&n.status)&&n.status.effect!==re.NONE))return n.species.getBaseStat(p.ATK)/10+5}return 0},"beatUpFunc"),X3=class X3 extends ZA{apply(A,s,R,n){const I=n[0],L=(A.isPlayer()?a.getPlayerParty():a.getEnemyParty()).filter(l=>{var C;return l.id===A.id||!((C=l.status)!=null&&C.effect)}).length,N=(A.turnData.hitCount-A.turnData.hitsLeft)%L;return I.value=yj(A,N),!0}};o(X3,"BeatUpAttr");let $H=X3;const wj=o((E,A,s)=>{let R="";return a.executeWithSeedOffset(()=>{He(100)<s.chance&&(R=u.t("moveTriggers:goingAllOutForAttack",{pokemonName:ee(E)}))},a.currentBattle.turn<<6,a.waveSeed),R},"doublePowerChanceMessageFunc"),Q3=class Q3 extends ZA{apply(A,s,R,n){let I;if(a.executeWithSeedOffset(()=>I=He(100),a.currentBattle.turn<<6,a.waveSeed),I<R.chance){const r=n[0];return r.value*=2,!0}return!1}};o(Q3,"DoublePowerChanceAttr");let JH=Q3;const $3=class $3 extends KA{constructor(A,s,R,...n){super((I,r,L)=>{var U;const N=I.getLastXMoves(A+1).slice(1);let l=0,C;for(;(((U=C=N.shift())==null?void 0:U.move)===L.id||n.length&&n.includes((C==null?void 0:C.move)??t.NONE))&&(!s||(C==null?void 0:C.result)===DA.SUCCESS);)if(l<A-1)l++;else if(R)l=0;else break;return this.getMultiplier(l)})}};o($3,"ConsecutiveUsePowerMultiplierAttr");let sM=$3;const J3=class J3 extends sM{getMultiplier(A){return Math.pow(2,A)}};o(J3,"ConsecutiveUseDoublePowerAttr");let pr=J3;const z3=class z3 extends sM{getMultiplier(A){return A+1}};o(z3,"ConsecutiveUseMultiBasePowerAttr");let zH=z3;const j3=class j3 extends ZA{apply(A,s,R,n){const I=n[0],r=s.getWeight(),L=[10,25,50,100,200];let N=0;for(;r>=L[N]&&++N!==L.length;);return I.value=(N+1)*20,!0}};o(j3,"WeightPowerAttr");let RM=j3;const q3=class q3 extends ZA{apply(A,s,R,n){const I=n[0],r=s.getEffectiveStat(p.SPD)/A.getEffectiveStat(p.SPD),L=[.25,1/3,.5,1,-1],N=[150,120,80,60,40];let l=0;for(;l<L.length-1&&r>L[l]&&++l!==L.length;);return I.value=N[l],!0}};o(q3,"ElectroBallPowerAttr");let jH=q3;const e2=class e2 extends ZA{apply(A,s,R,n){const I=n[0],r=A.getEffectiveStat(p.SPD);return r<1?(I.value=1,!0):(I.value=Math.floor(Math.min(150,25*s.getEffectiveStat(p.SPD)/r+1)),!0)}};o(e2,"GyroBallPowerAttr");let qH=e2;const t2=class t2 extends ZA{apply(A,s,R,n){const I=n[0],r=A.getHpRatio();switch(!0){case r<.0417:I.value=200;break;case r<.1042:I.value=150;break;case r<.2083:I.value=100;break;case r<.3542:I.value=80;break;case r<.6875:I.value=40;break;default:I.value=20;break}return!0}};o(t2,"LowHpPowerAttr");let OM=t2;const A2=class A2 extends ZA{apply(A,s,R,n){const I=n[0],r=A.getWeight(),L=s.getWeight();if(!r||r===0)return!1;const N=L/r*100;switch(!0){case N<20.01:I.value=120;break;case N<25.01:I.value=100;break;case N<33.35:I.value=80;break;case N<50.01:I.value=60;break;default:I.value=40;break}return!0}};o(A2,"CompareWeightPowerAttr");let nM=A2;const E2=class E2 extends ZA{apply(A,s,R,n){return n[0].value=Qt(150*A.getHpRatio()),!0}};o(E2,"HpPowerAttr");let lo=E2;const s2=class s2 extends ZA{constructor(A){super(),this.maxBasePower=A}apply(A,s,R,n){return n[0].value=Qt(this.maxBasePower*s.getHpRatio()),!0}};o(s2,"OpponentHighHpPowerAttr");let Co=s2;const R2=class R2 extends ZA{apply(A,s,R,n){return s.getLastXMoves(1),a.currentBattle.turn,s.getLastXMoves(1).find(I=>I.turn===a.currentBattle.turn)?!1:(n[0].value*=2,!0)}};o(R2,"FirstAttackDoublePowerAttr");let aM=R2;const O2=class O2 extends ZA{apply(A,s,R,n){return A.turnData.attacksReceived.find(I=>I.damage&&I.sourceId===s.id)?(n[0].value*=2,!0):!1}};o(O2,"TurnDamagedDoublePowerAttr");let iM=O2;const vj=o((E,A,s)=>{let R;return a.executeWithSeedOffset(()=>{const n=[5,15,35,65,75,95],I=He(100);let r=0;for(;r<n.length&&!(I<n[r]);r++);R=u.t("moveTriggers:magnitudeMessage",{magnitude:r+4})},a.currentBattle.turn<<6,a.waveSeed),R},"magnitudeMessageFunc"),n2=class n2 extends ZA{apply(A,s,R,n){const I=n[0],r=[5,15,35,65,75,95],L=[10,30,50,70,90,100,110,150];let N;a.executeWithSeedOffset(()=>N=He(100),a.currentBattle.turn<<6,a.waveSeed);let l=0;for(;l<r.length&&!(N<r[l]);l++);return I.value=L[l],!0}};o(n2,"MagnitudePowerAttr");let e1=n2;const a2=class a2 extends ZA{apply(A,s,R,n){var I,r;if(!((I=a.arena.weather)!=null&&I.isEffectSuppressed())){const L=n[0];switch(((r=a.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.RAIN:case Oe.SANDSTORM:case Oe.HAIL:case Oe.SNOW:case Oe.HEAVY_RAIN:return L.value*=.5,!0}}return!1}};o(a2,"AntiSunlightPowerDecreaseAttr");let IM=a2;const i2=class i2 extends ZA{constructor(A){super(),this.invert=!!A}apply(A,s,R,n){const I=n[0],r=Math.floor(Math.min(A instanceof WE?A.friendship:A.species.baseFriendship,255)/2.5);return I.value=Math.max(this.invert?102-r:r,1),!0}};o(i2,"FriendshipPowerAttr");let or=i2;const I2=class I2 extends ZA{apply(A,s,R,n){const{hitCount:I,prevHitCount:r}=A.battleData,L=n[0];return this.updateHitReceivedCount(A,I,r),L.value=50+Math.min(A.customPokemonData.hitsRecCount,6)*50,!0}updateHitReceivedCount(A,s,R){A.customPokemonData.hitsRecCount+=s-R,A.battleData.prevHitCount=s}};o(I2,"RageFistPowerAttr");let t1=I2;const u7=o(E=>E.getStatStages().reduce((A,s)=>s&&s>0?A+s:A,0),"countPositiveStatStages"),r2=class r2 extends ZA{apply(A,s,R,n){const I=u7(A);return n[0].value+=I*20,!0}};o(r2,"PositiveStatStagePowerAttr");let rM=r2;const L2=class L2 extends ZA{constructor(){super(...arguments),this.PUNISHMENT_MIN_BASE_POWER=60,this.PUNISHMENT_MAX_BASE_POWER=200}apply(A,s,R,n){const I=u7(s);return n[0].value=Math.min(this.PUNISHMENT_MAX_BASE_POWER,this.PUNISHMENT_MIN_BASE_POWER+I*20),!0}};o(L2,"PunishmentPowerAttr");let A1=L2;const o2=class o2 extends ZA{apply(A,s,R,n){const I=A.turnData.hitCount===A.turnData.hitsLeft,r=He(I?100:80);return r<=40?n[0].value=40:40<r&&r<=70?n[0].value=80:70<r&&r<=80?n[0].value=120:80<r&&r<=100&&(A.stopMultiHit(),a.unshiftPhase(new ZE(s.getBattlerIndex(),Qt(s.getMaxHp()/4),u.t("moveTriggers:regainedHealth",{pokemonName:ee(s)}),!0))),!0}};o(o2,"PresentPowerAttr");let E1=o2;const T2=class T2 extends ZA{apply(A,s,R,n){return A.species.speciesId===e.GRENINJA&&A.hasAbility(O.BATTLE_BOND)&&A.formIndex===2?(n[0].value=20,!0):!1}};o(T2,"WaterShurikenPowerAttr");let s1=T2;const S2=class S2 extends ZA{constructor(A){super(),this.multiplier=0,this.multiplier=A}apply(A,s,R,n){const I=A.getTag(fI);if(I&&I.stockpiledCount>0){const r=n[0];return r.value=this.multiplier*I.stockpiledCount,!0}return!1}};o(S2,"SpitUpPowerAttr");let R1=S2;const N2=class N2 extends fs{apply(A,s,R,n){const I=A.getTag(fI);if(I&&I.stockpiledCount>0){const r=I.stockpiledCount;let L;if(r===1?L=.25:r===2?L=.5:L=1,L)return this.addHealPhase(A,L),!0}return!1}};o(N2,"SwallowHealAttr");let O1=N2;const z8=o(E=>{const A=E.getTag(fI);return!!A&&A.stockpiledCount>0},"hasStockpileStacksCondition"),l2=class l2 extends ZA{constructor(A){super(),this.maxHits=A}apply(A,s,R,n){const I=A.turnData.hitCount-Math.max(A.turnData.hitsLeft,0),r=n[0];return r.value=R.power*(1+I%this.maxHits),!0}};o(l2,"MultiHitPowerIncrementAttr");let LM=l2;const C2=class C2 extends ZA{constructor(A){super(),this.move=A}apply(A,s,R,n){const I=n[0],r=A.getOpponent(0),L=[];if(r!=null&&r.turnData.acted&&L.push(r),a.currentBattle.double){const N=A.getAlly(),l=r==null?void 0:r.getAlly();!Pe(N)&&N.turnData.acted&&L.push(N),!Pe(l)&&l.turnData.acted&&L.push(l)}L.sort((N,l)=>l.turnData.order-N.turnData.order);for(const N of L){const[l]=N.getLastXMoves(1);if(l.result!==DA.FAIL){if(l.result===DA.SUCCESS&&l.move===this.move)return I.value*=2,!0;break}}return!1}};o(C2,"LastMoveDoublePowerAttr");let oM=C2;const u2=class u2 extends ZA{apply(A,s,R,n){const I=n[0];if(!(I instanceof je))return!1;const r=A.turnData.combiningPledge;return r&&r!==R.id?(I.value*=150/80,!0):!1}};o(u2,"CombinedPledgePowerAttr");let uo=u2;const U2=class U2 extends TA{apply(A,s,R,n){const I=n[0];if(!(I instanceof je))return!1;const r=A.turnData.combiningPledge;return r&&r!==R.id?(I.value=1.5,!0):!1}};o(U2,"CombinedPledgeStabBoostAttr");let Kr=U2;const D2=class D2 extends ZA{apply(A,s,R,n){var r;const I=n[0];return I instanceof je&&(r=A.turnData)!=null&&r.joinedRound?(I.value*=2,!0):!1}};o(D2,"RoundPowerAttr");let n1=D2;const M2=class M2 extends dt{constructor(){super(!0,{lastHitOnly:!0})}apply(A,s,R,n){const I=a.findPhase(N=>N instanceof _A&&N.move.moveId===t.ROUND);if(!I)return!1;const r=a.phaseQueue.indexOf(I),L=a.phaseQueue.findIndex(N=>N instanceof _A);return r!==L&&a.prependToPhase(a.phaseQueue.splice(r,1)[0],_A),I.pokemon.turnData.joinedRound=!0,!0}};o(M2,"CueNextRoundAttr");let a1=M2;const c2=class c2 extends TA{apply(A,s,R,n){return!1}};o(c2,"StatChangeBeforeDmgCalcAttr");let TM=c2;const h2=class h2 extends TM{apply(A,s,R,n){for(const I of YO){const r=s.getStatStage(I),L=A.getStatStage(I);if(r>0){const N=Math.min(r,6-L);a.unshiftPhase(new AA(A.getBattlerIndex(),this.selfTarget,[I],N)),s.setStatStage(I,r-N)}}return s.updateInfo(),A.updateInfo(),a.queueMessage(u.t("moveTriggers:stealPositiveStats",{pokemonName:ee(A),targetName:ee(s)})),!0}};o(h2,"SpectralThiefAttr");let i1=h2;const _2=class _2 extends TA{constructor(){super()}apply(A,s,R,n){return!1}};o(_2,"VariableAtkAttr");let TL=_2;const P2=class P2 extends TL{constructor(){super()}apply(A,s,R,n){return n[0].value=s.getEffectiveStat(p.ATK,s),!0}};o(P2,"TargetAtkUserAtkAttr");let I1=P2;const G2=class G2 extends TL{constructor(){super()}apply(A,s,R,n){return n[0].value=A.getEffectiveStat(p.DEF,s),!0}};o(G2,"DefAtkAttr");let r1=G2;const d2=class d2 extends TA{constructor(){super()}apply(A,s,R,n){return!1}};o(d2,"VariableDefAttr");let SM=d2;const H2=class H2 extends SM{constructor(){super()}apply(A,s,R,n){return n[0].value=s.getEffectiveStat(p.DEF,A),!0}};o(H2,"DefDefAttr");let Uo=H2;const f2=class f2 extends TA{apply(A,s,R,n){return!1}};o(f2,"VariableAccuracyAttr");let oa=f2;const B2=class B2 extends oa{apply(A,s,R,n){var I,r;if(!((I=a.arena.weather)!=null&&I.isEffectSuppressed())){const L=n[0];switch(((r=a.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.SUNNY:case Oe.HARSH_SUN:return L.value=50,!0;case Oe.RAIN:case Oe.HEAVY_RAIN:return L.value=-1,!0}}return!1}};o(B2,"ThunderAccuracyAttr");let NM=B2;const g2=class g2 extends oa{apply(A,s,R,n){var I,r;if(!((I=a.arena.weather)!=null&&I.isEffectSuppressed())){const L=n[0];switch(((r=a.arena.weather)==null?void 0:r.weatherType)||Oe.NONE){case Oe.RAIN:case Oe.HEAVY_RAIN:return L.value=-1,!0}}return!1}};o(g2,"StormAccuracyAttr");let Do=g2;const m2=class m2 extends oa{apply(A,s,R,n){if(s.getTag(w.MINIMIZED)){const I=n[0];return I.value=-1,!0}return!1}};o(m2,"AlwaysHitMinimizeAttr");let Cn=m2;const p2=class p2 extends oa{apply(A,s,R,n){if(A.isOfType(i.POISON)){const I=n[0];return I.value=-1,!0}return!1}};o(p2,"ToxicAccuracyAttr");let lM=p2;const K2=class K2 extends oa{apply(A,s,R,n){var I,r;if(!((I=a.arena.weather)!=null&&I.isEffectSuppressed())){const L=n[0],N=((r=a.arena.weather)==null?void 0:r.weatherType)||Oe.NONE;if(N===Oe.HAIL||N===Oe.SNOW)return L.value=-1,!0}return!1}};o(K2,"BlizzardAccuracyAttr");let L1=K2;const F2=class F2 extends TA{apply(A,s,R,n){return!1}};o(F2,"VariableMoveCategoryAttr");let Ei=F2;const Y2=class Y2 extends Ei{apply(A,s,R,n){const I=n[0];return A.getEffectiveStat(p.ATK,s,R)>A.getEffectiveStat(p.SPATK,s,R)?(I.value=g.PHYSICAL,!0):!1}};o(Y2,"PhotonGeyserCategoryAttr");let CM=Y2;const W2=class W2 extends Ei{apply(A,s,R,n){const I=n[0];return A.isTerastallized&&A.getEffectiveStat(p.ATK,s,R,!0,!0,!1,!1,!0)>A.getEffectiveStat(p.SPATK,s,R,!0,!0,!1,!1,!0)?(I.value=g.PHYSICAL,!0):!1}};o(W2,"TeraMoveCategoryAttr");let uM=W2;const y2=class y2 extends ZA{apply(A,s,R,n){const I=n[0];return A.isTerastallized&&A.getTeraType()===i.STELLAR?(I.value=100,!0):!1}};o(y2,"TeraBlastPowerAttr");let o1=y2;const w2=class w2 extends Ei{apply(A,s,R,n){const I=n[0];return A.getAlly()===s?(I.value=g.STATUS,!0):!1}};o(w2,"StatusCategoryOnAllyAttr");let UM=w2;const v2=class v2 extends Ei{apply(A,s,R,n){const I=n[0],r=s.getBaseDamage(A,R,g.PHYSICAL,!0,!0,!0,!0),L=s.getBaseDamage(A,R,g.SPECIAL,!0,!0,!0,!0);return r>L||r===L&&A.randSeedInt(2)===0?(I.value=g.PHYSICAL,!0):!1}};o(v2,"ShellSideArmCategoryAttr");let T1=v2;const V2=class V2 extends TA{apply(A,s,R,n){return!1}};o(V2,"VariableMoveTypeAttr");let cs=V2;const x2=class x2 extends cs{apply(A,s,R,n){var r,L,N;const I=n[0];if(!(I instanceof je))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.ARCEUS)||[A.species.speciesId,(L=A.fusionSpecies)==null?void 0:L.speciesId].includes(e.SILVALLY)){const l=A.species.speciesId===e.ARCEUS||A.species.speciesId===e.SILVALLY?A.formIndex:(N=A.fusionSpecies)==null?void 0:N.formIndex;return I.value=i[i[l]],!0}return!1}};o(x2,"FormChangeItemTypeAttr");let DM=x2;const b2=class b2 extends cs{apply(A,s,R,n){var r,L;const I=n[0];if(!(I instanceof je))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.GENESECT)){switch(A.species.speciesId===e.GENESECT?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:I.value=i.ELECTRIC;break;case 2:I.value=i.FIRE;break;case 3:I.value=i.ICE;break;case 4:I.value=i.WATER;break;default:I.value=i.NORMAL;break}return!0}return!1}};o(b2,"TechnoBlastTypeAttr");let S1=b2;const k2=class k2 extends cs{apply(A,s,R,n){var r,L;const I=n[0];if(!(I instanceof je))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.MORPEKO)){switch(A.species.speciesId===e.MORPEKO?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:I.value=i.DARK;break;default:I.value=i.ELECTRIC;break}return!0}return!1}};o(k2,"AuraWheelTypeAttr");let N1=k2;const Z2=class Z2 extends cs{apply(A,s,R,n){var r,L;const I=n[0];if(!(I instanceof je))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.PALDEA_TAUROS)){switch(A.species.speciesId===e.PALDEA_TAUROS?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:I.value=i.FIRE;break;case 2:I.value=i.WATER;break;default:I.value=i.FIGHTING;break}return!0}return!1}};o(Z2,"RagingBullTypeAttr");let l1=Z2;const X2=class X2 extends cs{apply(A,s,R,n){var r,L;const I=n[0];if(!(I instanceof je))return!1;if([A.species.speciesId,(r=A.fusionSpecies)==null?void 0:r.speciesId].includes(e.OGERPON)){switch(A.species.speciesId===e.OGERPON?A.formIndex:(L=A.fusionSpecies)==null?void 0:L.formIndex){case 1:case 5:I.value=i.WATER;break;case 2:case 6:I.value=i.FIRE;break;case 3:case 7:I.value=i.ROCK;break;case 4:default:I.value=i.GRASS;break}return!0}return!1}};o(X2,"IvyCudgelTypeAttr");let C1=X2;const Q2=class Q2 extends cs{apply(A,s,R,n){var r,L;const I=n[0];if(!(I instanceof je))return!1;if(!((r=a.arena.weather)!=null&&r.isEffectSuppressed())){switch((L=a.arena.weather)==null?void 0:L.weatherType){case Oe.SUNNY:case Oe.HARSH_SUN:I.value=i.FIRE;break;case Oe.RAIN:case Oe.HEAVY_RAIN:I.value=i.WATER;break;case Oe.SANDSTORM:I.value=i.ROCK;break;case Oe.HAIL:case Oe.SNOW:I.value=i.ICE;break;default:return!1}return!0}return!1}};o(Q2,"WeatherBallTypeAttr");let u1=Q2;const $2=class $2 extends cs{apply(A,s,R,n){const I=n[0];if(!(I instanceof je)||!A.isGrounded())return!1;switch(a.arena.getTerrainType()){case Nt.MISTY:I.value=i.FAIRY;break;case Nt.ELECTRIC:I.value=i.ELECTRIC;break;case Nt.GRASSY:I.value=i.GRASS;break;case Nt.PSYCHIC:I.value=i.PSYCHIC;break;default:return!1}return!0}};o($2,"TerrainPulseTypeAttr");let U1=$2;const J2=class J2 extends cs{apply(A,s,R,n){const I=n[0];if(!(I instanceof je))return!1;const r=Math.floor(((A.ivs[p.HP]&1)+(A.ivs[p.ATK]&1)*2+(A.ivs[p.DEF]&1)*4+(A.ivs[p.SPD]&1)*8+(A.ivs[p.SPATK]&1)*16+(A.ivs[p.SPDEF]&1)*32)*15/63);return I.value=[i.FIGHTING,i.FLYING,i.POISON,i.GROUND,i.ROCK,i.BUG,i.GHOST,i.STEEL,i.FIRE,i.WATER,i.GRASS,i.ELECTRIC,i.PSYCHIC,i.ICE,i.DRAGON,i.DARK][r],!0}};o(J2,"HiddenPowerTypeAttr");let D1=J2;const z2=class z2 extends cs{apply(A,s,R,n){const I=n[0];return I instanceof je&&A.isTerastallized?(I.value=A.getTeraType(),!0):!1}};o(z2,"TeraBlastTypeAttr");let M1=z2;const j2=class j2 extends cs{apply(A,s,R,n){if(A.isTerastallized&&A.hasSpecies(e.TERAPAGOS)){const I=n[0];return I.value=i.STELLAR,!0}return!1}};o(j2,"TeraStarstormTypeAttr");let c1=j2;const q2=class q2 extends cs{apply(A,s,R,n){const I=n[0];if(!(I instanceof je))return!1;const r=A.getTypes(!0);if(r.includes(i.STELLAR)){const L=A.getTypes();return I.value=L[0],!0}else return r.length>0?(I.value=r[0],!0):!1}};o(q2,"MatchUserTypeAttr");let h1=q2;const eV=class eV extends cs{apply(A,s,R,n){var L;const I=n[0];if(!(I instanceof je))return!1;const r=(L=A==null?void 0:A.turnData)==null?void 0:L.combiningPledge;if(!r)return!1;switch(R.id){case t.FIRE_PLEDGE:return r===t.WATER_PLEDGE?(I.value=i.WATER,!0):!1;case t.WATER_PLEDGE:return r===t.GRASS_PLEDGE?(I.value=i.GRASS,!0):!1;case t.GRASS_PLEDGE:return r===t.FIRE_PLEDGE?(I.value=i.FIRE,!0):!1;default:return!1}}};o(eV,"CombinedPledgeTypeAttr");let Mo=eV;const tV=class tV extends TA{apply(A,s,R,n){return!1}};o(tV,"VariableMoveTypeMultiplierAttr");let gI=tV;const AV=class AV extends gI{apply(A,s,R,n){if(!s.getTag(w.IGNORE_FLYING)){const I=n[0];return s.isOfType(i.FLYING)&&(I.value=1),!0}return!1}};o(AV,"NeutralDamageAgainstFlyingTypeMultiplierAttr");let MM=AV;const EV=class EV extends gI{apply(A,s,R,n){const I=n[0];return s.isOfType(i.ICE)?(I.value=0,!0):!1}};o(EV,"IceNoEffectTypeAttr");let _1=EV;const sV=class sV extends gI{apply(A,s,R,n){const I=n[0];return I.value*=s.getAttackTypeEffectiveness(i.FLYING,A),!0}};o(sV,"FlyingTypeMultiplierAttr");let P1=sV;const RV=class RV extends TA{apply(A,s,R,n){return!1}};o(RV,"VariableMoveTypeChartAttr");let cM=RV;const OV=class OV extends cM{apply(A,s,R,n){const I=n[0];return n[1]===i.WATER?(I.value=2,!0):!1}};o(OV,"FreezeDryAttr");let G1=OV;const nV=class nV extends oa{apply(A,s,R,n){const I=n[0];return A.level<s.level?I.value=0:I.value=Math.min(Math.max(30+100*(1-s.level/A.level),0),100),!0}};o(nV,"OneHitKOAccuracyAttr");let xa=nV;const aV=class aV extends xa{apply(A,s,R,n){const I=n[0];if(A.level<s.level)I.value=0;else{const r=A.isOfType(i.ICE)?30:20;I.value=Math.min(Math.max(r+100*(1-s.level/A.level),0),100)}return!0}};o(aV,"SheerColdAccuracyAttr");let d1=aV;const iV=class iV extends TA{constructor(A){super(),this.missEffectFunc=A}apply(A,s,R,n){return this.missEffectFunc(A,R),!0}};o(iV,"MissEffectAttr");let cO=iV;const IV=class IV extends TA{constructor(A){super(),this.noEffectFunc=A}apply(A,s,R,n){return this.noEffectFunc(A,R),!0}};o(IV,"NoEffectAttr");let XO=IV;const Ma=o((E,A)=>{const s=new Pt(!1);return _t(fE,E,s),s.value?!1:(E.damageAndUpdate(Qt(E.getMaxHp()/2),{result:yt.INDIRECT}),a.queueMessage(u.t("moveTriggers:keptGoingAndCrashed",{pokemonName:ee(E)})),E.turnData.damageTaken+=Qt(E.getMaxHp()/2),!0)},"crashDamageFunc"),rV=class rV extends TA{};o(rV,"TypelessAttr");let uN=rV;const LV=class LV extends TA{constructor(A=!1){super(),this.abilitiesOnly=A}};o(LV,"BypassRedirectAttr");let zi=LV;const oV=class oV extends dt{constructor(){super(!0,{trigger:kA.HIT,lastHitOnly:!0})}canApply(A,s,R,n){return!(this.selfTarget?A:s).isFainted()}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;if(!A.getTag(w.FRENZY)&&!A.getMoveQueue().length){const I=A.randSeedIntRange(1,2);new Array(I).fill(null).map(()=>A.getMoveQueue().push({move:R.id,targets:[s.getBattlerIndex()],ignorePP:!0})),A.addTag(w.FRENZY,I,R.id,A.id)}else dA(Yt,A,s,R,n),A.lapseTag(w.FRENZY);return!0}};o(oV,"FrenzyAttr");let Tr=oV;const xn=o((E,A)=>{for(;E.getMoveQueue().length&&E.getMoveQueue()[0].move===A.id;)E.getMoveQueue().shift();return E.removeTag(w.FRENZY),!0},"frenzyMissFunc"),TV=class TV extends dt{constructor(A){super(!0),this.tagType=A}apply(A,s,R,n){return super.apply(A,s,R,n)?A.addTag(this.tagType,1,R.id,A.id):!1}};o(TV,"SemiInvulnerableAttr");let Qn=TV;const SV=class SV extends dt{constructor(A,s=!1,R=!1,n=0,I,r=!1,L=!1){super(s,{lastHitOnly:r}),this.tagType=A,this.turnCountMin=n,this.turnCountMax=I!==void 0?I:n,this.failOnOverlap=!!R,this.cancelOnFail=L}canApply(A,s,R,n){var I;return!(!super.canApply(A,s,R,n)||this.cancelOnFail===!0&&((I=A.getLastXMoves(1)[0])==null?void 0:I.result)===DA.FAIL)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget,!0);return I<0||I===100||A.randSeedInt(100)<I?(this.selfTarget?A:s).addTag(this.tagType,A.randSeedIntRange(this.turnCountMin,this.turnCountMax),R.id,A.id):!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!(this.selfTarget?A:s).getTag(this.tagType):null}getTagTargetBenefitScore(){switch(this.tagType){case w.RECHARGING:case w.PERISH_SONG:return-16;case w.FLINCHED:case w.CONFUSED:case w.INFATUATED:case w.NIGHTMARE:case w.DROWSY:case w.DISABLED:case w.HEAL_BLOCK:case w.RECEIVE_DOUBLE_DAMAGE:return-5;case w.SEEDED:case w.SALT_CURED:case w.CURSED:case w.FRENZY:case w.TRAPPED:case w.BIND:case w.WRAP:case w.FIRE_SPIN:case w.WHIRLPOOL:case w.CLAMP:case w.SAND_TOMB:case w.MAGMA_STORM:case w.SNAP_TRAP:case w.THUNDER_CAGE:case w.INFESTATION:return-3;case w.ENCORE:return-2;case w.MINIMIZED:case w.ALWAYS_GET_HIT:return 0;case w.INGRAIN:case w.IGNORE_ACCURACY:case w.AQUA_RING:case w.MAGIC_COAT:return 3;case w.PROTECTED:case w.FLYING:case w.CRIT_BOOST:case w.ALWAYS_CRIT:return 5;default:return console.warn(`BattlerTag ${w[this.tagType]} is missing a score!`),0}}getTargetBenefitScore(A,s,R){let n=this.getMoveChance(A,s,R,this.selfTarget,!1);return n<0&&(n=100),Math.floor(this.getTagTargetBenefitScore()*(n/100))}};o(SV,"AddBattlerTagAttr");let Yt=SV;const NV=class NV extends Yt{constructor(){super(w.SEEDED)}apply(A,s,R,n){return!R.hitsSubstitute(A,s)&&super.apply(A,s,R,n)}};o(NV,"LeechSeedAttr");let hM=NV;const lV=class lV extends Yt{constructor(){super(w.IGNORE_FLYING,!1,!1,1,1,!0)}apply(A,s,R,n){return s.isGrounded()||a.queueMessage(u.t("moveTriggers:fallDown",{targetPokemonName:ee(s)})),super.apply(A,s,R,n)}};o(lV,"FallDownAttr");let _M=lV;const CV=class CV extends dt{constructor(){super(!0)}apply(A,s,R,n){return super.apply(A,s,R,n)&&A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT?(A.getHpRatio()>=.5?A.addTag(w.GULP_MISSILE_ARROKUDA,0,R.id):A.addTag(w.GULP_MISSILE_PIKACHU,0,R.id),!0):!1}getUserBenefitScore(A,s,R){return A.hasAbility(O.GULP_MISSILE)&&A.species.speciesId===e.CRAMORANT&&!A.getTag(hD)?10:0}};o(CV,"GulpMissileTagAttr");let PM=CV;const uV=class uV extends Yt{constructor(){super(w.TRAPPED)}apply(A,s,R,n){if(!super.canApply(A,s,R,n)||A.getTag(jR)||s.getTag(jR))return!1;const I=this.getMoveChance(A,s,R,this.selfTarget);return I<0||I===100||A.randSeedInt(100)<I?s.addTag(w.TRAPPED,1,R.id,A.id)&&A.addTag(w.TRAPPED,1,R.id,s.id):!1}};o(uV,"JawLockAttr");let H1=uV;const UV=class UV extends dt{apply(A,s,R,n){if(A.getTypes(!0).includes(i.GHOST)){if(s.getTag(w.CURSED))return a.queueMessage(u.t("battle:attackFailed")),!1;const I=Math.max(1,Math.floor(A.getMaxHp()/2));return A.damageAndUpdate(I,{result:yt.INDIRECT,ignoreSegments:!0}),a.queueMessage(u.t("battlerTags:cursedOnAdd",{pokemonNameWithAffix:ee(A),pokemonName:ee(s)})),s.addTag(w.CURSED,0,R.id,A.id),!0}else return a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.ATK,p.DEF],1)),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[p.SPD],-1)),!0}};o(UV,"CurseAttr");let f1=UV;const DV=class DV extends dt{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of this.tagTypes)(this.selfTarget?A:s).lapseTag(I);return!0}};o(DV,"LapseBattlerTagAttr");let B1=DV;const MV=class MV extends dt{constructor(A,s=!1){super(s),this.tagTypes=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;for(const I of this.tagTypes)(this.selfTarget?A:s).removeTag(I);return!0}};o(MV,"RemoveBattlerTagAttr");let $n=MV;const cV=class cV extends Yt{constructor(){super(w.FLINCHED,!1)}apply(A,s,R,n){return R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,n)}};o(cV,"FlinchAttr");let lA=cV;const hV=class hV extends Yt{constructor(A){super(w.CONFUSED,A,!1,2,5)}apply(A,s,R,n){return!this.selfTarget&&s.isSafeguarded(A)?(R.category===g.STATUS&&a.queueMessage(u.t("moveTriggers:safeguard",{targetName:ee(s)})),!1):R.hitsSubstitute(A,s)?!1:super.apply(A,s,R,n)}};o(hV,"ConfuseAttr");let es=hV;const _V=class _V extends Yt{constructor(){super(w.RECHARGING,!0,!1,1,1,!0,!0)}};o(_V,"RechargeAttr");let vR=_V;const PV=class PV extends Yt{constructor(A){super(A,!1,!1,4,5)}};o(PV,"TrapAttr");let UO=PV;const p0=class p0 extends Yt{constructor(A=w.PROTECTED){super(A,!0)}getCondition(){return(A,s,R)=>{let n=0;const I=A.getLastXMoves();let r;for(;I.length&&(r=I.shift(),!(!Ve[(r==null?void 0:r.move)??t.NONE].hasAttr(p0)||(r==null?void 0:r.result)!==DA.SUCCESS));)n++;return n?!A.randSeedInt(Math.pow(3,n)):!0}}};o(p0,"ProtectAttr");let OO=p0;const GV=class GV extends Yt{constructor(){super(w.IGNORE_ACCURACY,!0,!1,2)}apply(A,s,R,n){return super.apply(A,s,R,n)?(a.queueMessage(u.t("moveTriggers:tookAimAtTarget",{pokemonName:ee(A),targetName:ee(s)})),!0):!1}};o(GV,"IgnoreAccuracyAttr");let GM=GV;const dV=class dV extends Yt{constructor(){super(w.PERISH_SONG,!1,!0,4)}apply(A,s,R,n){return super.apply(A,s,R,n)?(a.queueMessage(u.t("moveTriggers:faintCountdown",{pokemonName:ee(s),turnCount:this.turnCountMin-1})),!0):!1}};o(dV,"FaintCountdownAttr");let g1=dV;const HV=class HV extends dt{constructor(){super(!0)}apply(A,s,R,n){return super.apply(A,s,R,n)?(a.getField(!0).forEach(I=>I.findAndRemoveTags(r=>r.tagType===w.SUBSTITUTE)),!0):!1}};o(HV,"RemoveAllSubstitutesAttr");let m1=HV;const fV=class fV extends TA{constructor(A,s=!1){super(),this.tagType=A,this.doubleDamage=!!s}getTargetBenefitScore(A,s,R){return s.getTag(this.tagType)?this.doubleDamage?10:5:0}};o(fV,"HitsTagAttr");let VR=fV;const BV=class BV extends VR{constructor(A){super(A,!0)}};o(BV,"HitsTagForDoubleDamageAttr");let uR=BV;const gV=class gV extends dt{constructor(A,s,R=!1,n=!1){super(!0),this.tagType=A,this.turnCount=s,this.failOnOverlap=R,this.selfSideTarget=n}apply(A,s,R,n){var I;if(!super.apply(A,s,R,n))return!1;if((R.chance<0||R.chance===100||A.randSeedInt(100)<R.chance)&&((I=A.getLastXMoves(1)[0])==null?void 0:I.result)===DA.SUCCESS){const r=(this.selfSideTarget?A:s).isPlayer()?Dt.PLAYER:Dt.ENEMY;return a.arena.addTag(this.tagType,this.turnCount,R.id,A.id,r),!0}return!1}getCondition(){return this.failOnOverlap?(A,s,R)=>!a.arena.getTagOnSide(this.tagType,s.isPlayer()?Dt.PLAYER:Dt.ENEMY):null}};o(gV,"AddArenaTagAttr");let rE=gV;const mV=class mV extends dt{constructor(A,s){super(!0),this.tagTypes=A,this.selfSideTarget=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=(this.selfSideTarget?A:s).isPlayer()?Dt.PLAYER:Dt.ENEMY;for(const r of this.tagTypes)a.arena.removeTagOnSide(r,I);return!0}};o(mV,"RemoveArenaTagsAttr");let dM=mV;const pV=class pV extends rE{getCondition(){return(A,s,R)=>{const n=(this.selfSideTarget?A:s).isPlayer()?Dt.PLAYER:Dt.ENEMY,I=a.arena.getTagOnSide(this.tagType,n);return I?I.layers<I.maxLayers:!0}}};o(pV,"AddArenaTrapTagAttr");let Sr=pV;const KV=class KV extends rE{apply(A,s,R,n){var N;const I=this.getMoveChance(A,s,R,this.selfTarget,!0),r=(this.selfSideTarget?A:s).isPlayer()?Dt.PLAYER:Dt.ENEMY,L=a.arena.getTagOnSide(this.tagType,r);return(I<0||I===100||A.randSeedInt(100)<I)&&((N=A.getLastXMoves(1)[0])==null?void 0:N.result)===DA.SUCCESS?(a.arena.addTag(this.tagType,0,R.id,A.id,r),L?L.layers<L.maxLayers:!0):!1}};o(KV,"AddArenaTrapTagHitAttr");let HM=KV;const FV=class FV extends dt{constructor(A=!1){super(!0,{trigger:kA.PRE_APPLY}),this.targetBothSides=A}apply(A,s,R,n){return super.apply(A,s,R,n)?(this.targetBothSides?(a.arena.removeTagOnSide(Fe.SPIKES,Dt.PLAYER),a.arena.removeTagOnSide(Fe.TOXIC_SPIKES,Dt.PLAYER),a.arena.removeTagOnSide(Fe.STEALTH_ROCK,Dt.PLAYER),a.arena.removeTagOnSide(Fe.STICKY_WEB,Dt.PLAYER),a.arena.removeTagOnSide(Fe.SPIKES,Dt.ENEMY),a.arena.removeTagOnSide(Fe.TOXIC_SPIKES,Dt.ENEMY),a.arena.removeTagOnSide(Fe.STEALTH_ROCK,Dt.ENEMY),a.arena.removeTagOnSide(Fe.STICKY_WEB,Dt.ENEMY)):(a.arena.removeTagOnSide(Fe.SPIKES,s.isPlayer()?Dt.ENEMY:Dt.PLAYER),a.arena.removeTagOnSide(Fe.TOXIC_SPIKES,s.isPlayer()?Dt.ENEMY:Dt.PLAYER),a.arena.removeTagOnSide(Fe.STEALTH_ROCK,s.isPlayer()?Dt.ENEMY:Dt.PLAYER),a.arena.removeTagOnSide(Fe.STICKY_WEB,s.isPlayer()?Dt.ENEMY:Dt.PLAYER)),!0):!1}};o(FV,"RemoveArenaTrapAttr");let Nr=FV;const YV=class YV extends dt{constructor(A=!1){super(!0,{trigger:kA.PRE_APPLY}),this.targetBothSides=A}apply(A,s,R,n){return super.apply(A,s,R,n)?(this.targetBothSides?(a.arena.removeTagOnSide(Fe.REFLECT,Dt.PLAYER),a.arena.removeTagOnSide(Fe.LIGHT_SCREEN,Dt.PLAYER),a.arena.removeTagOnSide(Fe.AURORA_VEIL,Dt.PLAYER),a.arena.removeTagOnSide(Fe.REFLECT,Dt.ENEMY),a.arena.removeTagOnSide(Fe.LIGHT_SCREEN,Dt.ENEMY),a.arena.removeTagOnSide(Fe.AURORA_VEIL,Dt.ENEMY)):(a.arena.removeTagOnSide(Fe.REFLECT,s.isPlayer()?Dt.PLAYER:Dt.ENEMY),a.arena.removeTagOnSide(Fe.LIGHT_SCREEN,s.isPlayer()?Dt.PLAYER:Dt.ENEMY),a.arena.removeTagOnSide(Fe.AURORA_VEIL,s.isPlayer()?Dt.PLAYER:Dt.ENEMY)),!0):!1}};o(YV,"RemoveScreensAttr");let lr=YV;const WV=class WV extends dt{constructor(A){super(!0),this.SwapTags=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=a.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),Dt.PLAYER),r=a.arena.findTagsOnSide(L=>this.SwapTags.includes(L.tagType),Dt.ENEMY);if(I)for(const L of I)a.arena.removeTagOnSide(L.tagType,Dt.PLAYER,!0),a.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,Dt.ENEMY,!0);if(r)for(const L of r)a.arena.removeTagOnSide(L.tagType,Dt.ENEMY,!0),a.arena.addTag(L.tagType,L.turnCount,L.sourceMove,L.sourceId,Dt.PLAYER,!0);return a.queueMessage(u.t("moveTriggers:swapArenaTags",{pokemonName:ee(A)})),!0}};o(WV,"SwapArenaTagsAttr");let p1=WV;const yV=class yV extends rE{constructor(A,s,R=!1){super(A,4,!1,R),this.requiredPledge=s}apply(A,s,R,n){var I;return((I=A.getLastXMoves(1)[0])==null?void 0:I.result)!==DA.SUCCESS?!1:A.turnData.combiningPledge===this.requiredPledge?super.apply(A,s,R,n):!1}};o(yV,"AddPledgeEffectAttr");let Ba=yV;const wV=class wV extends dt{constructor(A){super(!0)}apply(A,s,R,n){var I;if(A instanceof WE)return a.unshiftPhase(new dH(A)),!0;if(A instanceof Fs&&A.hasTrainer()&&a.getEnemyParty().findIndex(r=>r.isFainted()&&!r.isBoss())>-1){const r=a.getEnemyParty().filter(C=>C.isFainted()&&!C.isBoss()),L=r[A.randSeedInt(r.length)],N=a.getEnemyParty().findIndex(C=>L.id===C.id);L.resetStatus(),L.heal(Math.min(Qt(.5*L.getMaxHp()),L.getMaxHp())),a.queueMessage(u.t("moveTriggers:revivalBlessing",{pokemonName:ee(L)}),0,!0);const l=A.getAlly();return a.currentBattle.double&&a.getEnemyParty().length>1&&!Pe(l)&&(l.isFainted()||l===L)&&(a.tryRemovePhase(C=>C instanceof HR&&C.getPokemon()===L),(I=a.findPhase(C=>C.pokemon===L))==null||I.cancel(),A.fieldPosition===$s.CENTER&&A.setFieldPosition($s.LEFT),a.unshiftPhase(new HR(uA.SWITCH,l.getFieldIndex(),N,!1,!1))),!0}return!1}getCondition(){return(A,s,R)=>A instanceof WE&&a.getPlayerParty().some(n=>n.isFainted())||A instanceof Fs&&A.hasTrainer()&&a.getEnemyParty().some(n=>n.isFainted()&&!n.isBoss())}getUserBenefitScore(A,s,R){return A.hasTrainer()&&a.getEnemyParty().some(n=>n.isFainted()&&!n.isBoss())?20:-20}};o(wV,"RevivalBlessingAttr");let K1=wV;const vV=class vV extends dt{constructor(A=!1,s=uA.SWITCH){super(!1,{lastHitOnly:!0}),this.selfSwitch=A,this.switchType=s}isBatonPass(){return this.switchType===uA.BATON_PASS}apply(A,s,R,n){if(!this.getSwitchOutCondition()(A,s,R))return!1;const I=this.selfSwitch?A:s;if(I.lapseTag(w.COMMANDED),I instanceof WE){if(s.getAbility().hasAttr(HI)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s))return!1;const r=[];if(a.getPlayerParty().forEach((L,N)=>{L.isAllowedInBattle()&&!L.isOnField()&&r.push(N)}),r.length<1)return!1;if(I.hp>0)if(this.switchType===uA.FORCE_SWITCH){I.leaveField(!0);const L=r[A.randSeedInt(r.length)];a.prependToPhase(new HR(this.switchType,I.getFieldIndex(),L,!1,!0),QR)}else return I.leaveField(this.switchType===uA.SWITCH),a.prependToPhase(new Xa(this.switchType,I.getFieldIndex(),!0,!0),QR),!0;return!1}else if(a.currentBattle.battleType!==Ht.WILD){const r=[];if(a.getEnemyParty().forEach((L,N)=>{L.isAllowedInBattle()&&!L.isOnField()&&r.push(N)}),r.length<1)return!1;if(I.hp>0)if(this.switchType===uA.FORCE_SWITCH){I.leaveField(!0);const L=r[A.randSeedInt(r.length)];a.prependToPhase(new HR(this.switchType,I.getFieldIndex(),L,!1,!1),QR)}else I.leaveField(this.switchType===uA.SWITCH),a.prependToPhase(new HR(this.switchType,I.getFieldIndex(),a.currentBattle.trainer?a.currentBattle.trainer.getNextSummonIndex(I.trainerSlot):0,!1,!1),QR)}else{if(s.getAbility().hasAttr(HI)&&[t.U_TURN,t.VOLT_SWITCH,t.FLIP_TURN].includes(R.id)&&this.hpDroppedBelowHalf(s)||a.currentBattle.waveIndex%10===0||this.selfSwitch&&!A.isPlayer()&&R.category!==g.STATUS)return!1;const r=I.getAlly();I.hp>0&&(I.leaveField(!1),a.queueMessage(u.t("moveTriggers:fled",{pokemonName:ee(I)}),null,!0,500),a.currentBattle.double&&!Pe(r)&&a.redirectPokemonMoves(I,r)),r!=null&&r.isActive(!0)||(a.clearEnemyHeldItemModifiers(),I.hp&&(a.pushPhase(new Qa(!1)),a.pushPhase(new lI)))}return!0}getCondition(){return(A,s,R)=>R.category!==g.STATUS||this.getSwitchOutCondition()(A,s,R)}getFailedText(A,s,R){const n=new Pt(!1);if(_t(qa,s,n),n.value)return u.t("moveTriggers:cannotBeSwitchedOut",{pokemonName:ee(s)})}getSwitchOutCondition(){return(A,s,R)=>{var L,N;const n=this.selfSwitch?A:s,I=n instanceof WE;if(!this.selfSwitch){if(R.hitsSubstitute(A,s))return!1;const l=n.getTag(w.COMMANDED);if((L=l==null?void 0:l.getSourcePokemon())!=null&&L.isActive(!0)||!I&&a.currentBattle.isBattleMysteryEncounter()&&!((N=a.currentBattle.mysteryEncounter)!=null&&N.fleeAllowed))return!1;const C=new Pt(!1);return _t(qa,s,C),!C.value}if(!I&&a.currentBattle.battleType===Ht.WILD&&(this.isBatonPass()||a.currentBattle.waveIndex%10===0))return!1;const r=I?a.getPlayerParty():a.getEnemyParty();return!I&&!a.currentBattle.battleType||r.filter(l=>l.isAllowedInBattle()&&(I||l.trainerSlot===n.trainerSlot)).length>a.currentBattle.getBattlerCount()}}getUserBenefitScore(A,s,R){if(!a.getEnemyParty().find(I=>I.isActive()&&!I.isOnField()))return-20;let n=this.selfSwitch?Math.floor((1-A.getHpRatio())*20):super.getUserBenefitScore(A,s,R);if(this.selfSwitch&&this.isBatonPass()){const I=A.getStatStages().reduce((r,L)=>L+=r,0);n=n/2+Phaser.Tweens.Builders.GetEaseFunction("Sine.easeOut")(Math.min(Math.abs(I),10)/10)*(I>=0?10:-10)}return n}hpDroppedBelowHalf(A){const s=A.hp,R=A.getMaxHp(),n=A.turnData.damageTaken;return s+n>=R/2&&s<R/2}};o(vV,"ForceSwitchOutAttr");let nR=vV;const VV=class VV extends nR{apply(A,s,R,n){return a.arena.trySetWeather(Oe.SNOW,A),super.apply(A,s,R,n)}getCondition(){return(A,s,R)=>{var n;return((n=a.arena.weather)==null?void 0:n.weatherType)!==Oe.SNOW||super.getSwitchOutCondition()(A,s,R)}}};o(VV,"ChillyReceptionAttr");let F1=VV;const xV=class xV extends dt{constructor(A,s){super(!0,{trigger:kA.POST_TARGET}),this.removedType=A,this.messageCallback=s}apply(A,s,R,n){if(!super.apply(A,s,R,n)||A.isTerastallized&&A.getTeraType()===this.removedType)return!1;const r=A.getTypes(!0).filter(L=>L!==this.removedType);return r.length===0&&r.push(i.UNKNOWN),A.summonData.types=r,A.updateInfo(),this.messageCallback&&this.messageCallback(A),!0}};o(xV,"RemoveTypeAttr");let fM=xV;const bV=class bV extends dt{constructor(){super(!1)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=s.getTypes(!0);return I.includes(i.UNKNOWN)&&I.indexOf(i.UNKNOWN)>-1&&(I[I.indexOf(i.UNKNOWN)]=i.NORMAL),A.summonData.types=I,A.updateInfo(),a.queueMessage(u.t("moveTriggers:copyType",{pokemonName:ee(A),targetPokemonName:ee(s)})),!0}getCondition(){return(A,s,R)=>s.getTypes()[0]!==i.UNKNOWN||s.summonData.addedType!==null}};o(bV,"CopyTypeAttr");let Y1=bV;const kV=class kV extends dt{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=a.arena.getTerrainType();let r;return I!==Nt.NONE?r=this.getTypeForTerrain(a.arena.getTerrainType()):r=this.getTypeForBiome(a.arena.biomeType),A.summonData.types=[r],A.updateInfo(),a.queueMessage(u.t("moveTriggers:transformedIntoType",{pokemonName:ee(A),typeName:u.t(`pokemonInfo:Type.${i[r]}`)})),!0}getTypeForTerrain(A){switch(A){case Nt.ELECTRIC:return i.ELECTRIC;case Nt.MISTY:return i.FAIRY;case Nt.GRASSY:return i.GRASS;case Nt.PSYCHIC:return i.PSYCHIC;case Nt.NONE:default:return i.UNKNOWN}}getTypeForBiome(A){switch(A){case T.TOWN:case T.PLAINS:case T.METROPOLIS:return i.NORMAL;case T.GRASS:case T.TALL_GRASS:return i.GRASS;case T.FOREST:case T.JUNGLE:return i.BUG;case T.SLUM:case T.SWAMP:return i.POISON;case T.SEA:case T.BEACH:case T.LAKE:case T.SEABED:return i.WATER;case T.MOUNTAIN:return i.FLYING;case T.BADLANDS:return i.GROUND;case T.CAVE:case T.DESERT:return i.ROCK;case T.ICE_CAVE:case T.SNOWY_FOREST:return i.ICE;case T.MEADOW:case T.FAIRY_CAVE:case T.ISLAND:return i.FAIRY;case T.POWER_PLANT:return i.ELECTRIC;case T.VOLCANO:return i.FIRE;case T.GRAVEYARD:case T.TEMPLE:return i.GHOST;case T.DOJO:case T.CONSTRUCTION_SITE:return i.FIGHTING;case T.FACTORY:case T.LABORATORY:return i.STEEL;case T.RUINS:case T.SPACE:return i.PSYCHIC;case T.WASTELAND:case T.END:return i.DRAGON;case T.ABYSS:return i.DARK;default:return i.UNKNOWN}}};o(kV,"CopyBiomeTypeAttr");let W1=kV;const ZV=class ZV extends dt{constructor(A){super(!1,{trigger:kA.HIT}),this.type=A}apply(A,s,R,n){return s.summonData.types=[this.type],s.updateInfo(),a.queueMessage(u.t("moveTriggers:transformedIntoType",{pokemonName:ee(s),typeName:u.t(`pokemonInfo:Type.${i[this.type]}`)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized&&!s.hasAbility(O.MULTITYPE)&&!s.hasAbility(O.RKS_SYSTEM)&&!(s.getTypes().length===1&&s.getTypes()[0]===this.type)}};o(ZV,"ChangeTypeAttr");let BM=ZV;const XV=class XV extends dt{constructor(A){super(!1,{trigger:kA.HIT}),this.type=A}apply(A,s,R,n){return s.summonData.addedType=this.type,s.updateInfo(),a.queueMessage(u.t("moveTriggers:addType",{typeName:u.t(`pokemonInfo:Type.${i[this.type]}`),pokemonName:ee(s)})),!0}getCondition(){return(A,s,R)=>!s.isTerastallized&&!s.getTypes().includes(this.type)}};o(XV,"AddTypeAttr");let gM=XV;const QV=class QV extends dt{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=s.getMoveset()[0].getMove().type;return A.summonData.types=[I],a.queueMessage(u.t("battle:transformedIntoType",{pokemonName:ee(A),type:u.t(`pokemonInfo:Type.${i[I]}`)})),!0}};o(QV,"FirstMoveTypeAttr");let y1=QV;const $V=class $V extends Ai{apply(A,s,R,n){const I=R.moveTarget===De.NEAR_OTHER?De.NEAR_ENEMY:void 0,r=Fn(A,R.id,I);if(r.targets.length===0)return a.queueMessage(u.t("battle:attackFailed")),!1;const L=r.multiple||r.targets.length===1?r.targets:[this.hasTarget?s.getBattlerIndex():r.targets[A.randSeedInt(r.targets.length)]];return A.getMoveQueue().push({move:R.id,targets:L,virtual:!0,ignorePP:!0}),a.unshiftPhase(new pD(R.id)),a.unshiftPhase(new _A(A,L,new Lt(R.id,0,0,!0),!0,!0)),!0}};o($V,"CallMoveAttr");let UN=$V;const JV=class JV extends UN{constructor(A){super(),this.invalidMoves=A}getMoveOverride(){return null}apply(A,s,R,n){const I=dE(t).map(L=>!this.invalidMoves.has(L)&&!Ve[L].name.endsWith(" (N)")?L:t.NONE);let r=t.NONE;do r=this.getMoveOverride()??I[A.randSeedInt(I.length)];while(r===t.NONE);return super.apply(A,s,Ve[r],n)}};o(JV,"RandomMoveAttr");let mM=JV;const zV=class zV extends UN{constructor(A,s=!1){super(),this.includeParty=s,this.invalidMoves=A}apply(A,s,R,n){return super.apply(A,s,Ve[this.moveId],n)}getCondition(){return(A,s,R)=>{let n;this.includeParty?n=A.isPlayer()?a.getPlayerParty().filter(L=>L!==A):a.getEnemyParty().filter(L=>L!==A):n=[A];const r=n.map(L=>L.moveset).flat().filter(L=>!this.invalidMoves.has(L.moveId)&&!L.getMove().name.endsWith(" (N)"));return r.length===0?!1:(this.moveId=r[A.randSeedInt(r.length)].moveId,!0)}}};o(zV,"RandomMovesetMoveAttr");let DN=zV;const jV=class jV extends Ai{apply(A,s,R,n){let I;switch(a.arena.getTerrainType()){case Nt.NONE:switch(a.arena.biomeType){case T.TOWN:I=t.ROUND;break;case T.METROPOLIS:I=t.TRI_ATTACK;break;case T.SLUM:I=t.SLUDGE_BOMB;break;case T.PLAINS:I=t.SILVER_WIND;break;case T.GRASS:I=t.GRASS_KNOT;break;case T.TALL_GRASS:I=t.POLLEN_PUFF;break;case T.MEADOW:I=t.GIGA_DRAIN;break;case T.FOREST:I=t.BUG_BUZZ;break;case T.JUNGLE:I=t.LEAF_STORM;break;case T.SEA:I=t.HYDRO_PUMP;break;case T.SWAMP:I=t.MUD_BOMB;break;case T.BEACH:I=t.SCALD;break;case T.LAKE:I=t.BUBBLE_BEAM;break;case T.SEABED:I=t.BRINE;break;case T.ISLAND:I=t.LEAF_TORNADO;break;case T.MOUNTAIN:I=t.AIR_SLASH;break;case T.BADLANDS:I=t.EARTH_POWER;break;case T.DESERT:I=t.SCORCHING_SANDS;break;case T.WASTELAND:I=t.DRAGON_PULSE;break;case T.CONSTRUCTION_SITE:I=t.STEEL_BEAM;break;case T.CAVE:I=t.POWER_GEM;break;case T.ICE_CAVE:I=t.ICE_BEAM;break;case T.SNOWY_FOREST:I=t.FROST_BREATH;break;case T.VOLCANO:I=t.LAVA_PLUME;break;case T.GRAVEYARD:I=t.SHADOW_BALL;break;case T.RUINS:I=t.ANCIENT_POWER;break;case T.TEMPLE:I=t.EXTRASENSORY;break;case T.DOJO:I=t.FOCUS_BLAST;break;case T.FAIRY_CAVE:I=t.ALLURING_VOICE;break;case T.ABYSS:I=t.OMINOUS_WIND;break;case T.SPACE:I=t.DRACO_METEOR;break;case T.FACTORY:I=t.FLASH_CANNON;break;case T.LABORATORY:I=t.ZAP_CANNON;break;case T.POWER_PLANT:I=t.CHARGE_BEAM;break;case T.END:I=t.ETERNABEAM;break}break;case Nt.MISTY:I=t.MOONBLAST;break;case Nt.ELECTRIC:I=t.THUNDERBOLT;break;case Nt.GRASSY:I=t.ENERGY_BALL;break;case Nt.PSYCHIC:I=t.PSYCHIC;break;default:I=t.TRI_ATTACK;break}return A.getMoveQueue().push({move:I,targets:[s.getBattlerIndex()],ignorePP:!0}),a.unshiftPhase(new pD(I)),a.unshiftPhase(new _A(A,[s.getBattlerIndex()],new Lt(I,0,0,!0),!0)),!0}};o(jV,"NaturePowerAttr");let pM=jV;const qV=class qV extends UN{constructor(A,s=new Set){super(),this.mirrorMove=A,this.invalidMoves=s}apply(A,s,R,n){this.hasTarget=this.mirrorMove;const I=this.mirrorMove?s.getLastXMoves()[0].move:a.currentBattle.lastMove;return super.apply(A,s,Ve[I],n)}getCondition(){return(A,s,R)=>{var n;if(this.mirrorMove){const I=(n=s.getLastXMoves()[0])==null?void 0:n.move;return!!I&&!this.invalidMoves.has(I)}else{const I=a.currentBattle.lastMove;return I!==void 0&&!this.invalidMoves.has(I)}}}};o(qV,"CopyMoveAttr");let SL=qV;const ex=class ex extends dt{constructor(){super(!1,{trigger:kA.POST_APPLY})}apply(A,s,R,n){const I=s.getLastXMoves(-1).find(l=>l.move!==t.NONE),r=s.getMoveset().find(l=>l.moveId===I.move);let L=r.getMove().isMultiTarget()?Fn(s,I.move).targets:I.targets;const N=a.getField()[L[0]];if(a.currentBattle.double&&L.length===1&&N.isFainted()&&N!==s.getAlly()){const l=N.getAlly();!Pe(l)&&l.isActive()&&(L=[l.getBattlerIndex()])}return a.queueMessage(u.t("moveTriggers:instructingMove",{userPokemonName:ee(A),targetPokemonName:ee(s)})),s.getMoveQueue().unshift({move:I.move,targets:L,ignorePP:!1}),s.turnData.extraTurns++,a.appendToPhase(new _A(s,L,r),QR),!0}getCondition(){return(A,s,R)=>{const n=s.getLastXMoves(-1).find(L=>L.move!==t.NONE),I=s.getMoveset().find(L=>L.moveId===(n==null?void 0:n.move)),r=[t.OUTRAGE,t.RAGING_FURY,t.ROLLOUT,t.PETAL_DANCE,t.THRASH,t.ICE_BALL,t.BIDE,t.SHELL_TRAP,t.BEAK_BLAST,t.FOCUS_PUNCH,t.FAKE_OUT,t.FIRST_IMPRESSION,t.MAT_BLOCK,t.HYPER_BEAM,t.ETERNABEAM,t.FRENZY_PLANT,t.BLAST_BURN,t.HYDRO_CANNON,t.GIGA_IMPACT,t.PRISMATIC_LASER,t.ROAR_OF_TIME,t.ROCK_WRECKER,t.METEOR_ASSAULT,t.DIG,t.FLY,t.BOUNCE,t.SHADOW_FORCE,t.PHANTOM_FORCE,t.DIVE,t.ELECTRO_SHOT,t.ICE_BURN,t.GEOMANCY,t.FREEZE_SHOCK,t.SKY_DROP,t.SKY_ATTACK,t.SKULL_BASH,t.SOLAR_BEAM,t.SOLAR_BLADE,t.METEOR_BEAM,t.INSTRUCT,t.KINGS_SHIELD,t.SKETCH,t.TRANSFORM,t.MIMIC,t.STRUGGLE];return!(!(n!=null&&n.move)||!I||I.ppUsed===I.getMovePp()||Ve[n.move].isChargingMove()||r.includes(n.move))}}getTargetBenefitScore(A,s,R){return 2}};o(ex,"RepeatMoveAttr");let w1=ex;const tx=class tx extends dt{constructor(A){super(),this.reduction=A}apply(A,s,R,n){const I=s.getLastXMoves()[0],r=s.getMoveset().find(l=>l.moveId===I.move),L=r.ppUsed;r.ppUsed=Math.min(L+this.reduction,r.getMovePp());const N=u.t("battle:ppReduced",{targetName:ee(s),moveName:r.getName(),reduction:r.ppUsed-L});return a.eventTarget.dispatchEvent(new bT(s.id,r.getMove(),r.ppUsed)),a.queueMessage(N),!0}getCondition(){return(A,s,R)=>{const n=s.getLastXMoves()[0];if(n){const I=s.getMoveset().find(r=>r.moveId===n.move);return!!(I!=null&&I.getPpRatio())}return!1}}getTargetBenefitScore(A,s,R){const n=s.getLastXMoves()[0];if(n){const I=s.getMoveset().find(r=>r.moveId===n.move);if(I){const r=I.getMovePp(),L=r-I.ppUsed,N=-(8-Math.ceil(Math.min(r,30)/5));return L<4?N/4*L:N}}return 0}};o(tx,"ReducePpMoveAttr");let KM=tx;const Ax=class Ax extends KM{constructor(A){super(A)}apply(A,s,R,n){const I=s.getLastXMoves().find(()=>!0);if(I){const r=s.getMoveset().find(L=>L.moveId===I.move);r!=null&&r.getPpRatio()&&super.apply(A,s,R,n)}return!0}getCondition(){return(A,s,R)=>!0}};o(Ax,"AttackReducePpMoveAttr");let v1=Ax;const U7=o((E,A,s)=>{const R=A.getMoveHistory().filter(I=>!I.virtual);if(!R.length)return!1;const n=R[0];return!(!n.move||Ve[n.move].isChargingMove()&&n.result===DA.OTHER)},"targetMoveCopiableCondition"),Ex=class Ex extends Ai{apply(A,s,R,n){const I=s.getMoveHistory().filter(N=>!N.virtual);if(!I.length)return!1;const r=Ve[I[0].move],L=A.getMoveset().findIndex(N=>N.moveId===R.id);return L===-1?!1:(A.summonData.moveset=A.getMoveset().slice(0),A.summonData.moveset[L]=new Lt(r.id,0,0),a.queueMessage(u.t("moveTriggers:copiedMove",{pokemonName:ee(A),moveName:r.name})),!0)}getCondition(){return U7}};o(Ex,"MovesetCopyMoveAttr");let V1=Ex;const sx=class sx extends dt{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=s.getLastXMoves(-1).find(N=>N.move!==t.NONE&&N.move!==t.STRUGGLE&&!N.virtual);if(!I)return!1;const r=Ve[I.move],L=A.getMoveset().findIndex(N=>N.moveId===R.id);return L===-1?!1:(A.setMove(L,r.id),a.queueMessage(u.t("moveTriggers:sketchedMove",{pokemonName:ee(A),moveName:r.name})),!0)}getCondition(){return(A,s,R)=>{if(!U7(A,s))return!1;const n=s.getMoveHistory().filter(r=>!r.virtual).at(-1);return!(!n||[t.CHATTER,t.MIRROR_MOVE,t.SLEEP_TALK,t.STRUGGLE,t.SKETCH,t.REVIVAL_BLESSING,t.TERA_STARSTORM,t.BREAKNECK_BLITZ__PHYSICAL,t.BREAKNECK_BLITZ__SPECIAL].includes(n.move)||A.getMoveset().find(r=>r.moveId===n.move))}}};o(sx,"SketchAttr");let x1=sx;const Rx=class Rx extends dt{constructor(A,s){super(s,{trigger:kA.HIT}),this.ability=A}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=this.selfTarget?A:s;return a.queueMessage(u.t("moveTriggers:acquiredAbility",{pokemonName:ee(this.selfTarget?A:s),abilityName:nA[this.ability].name})),I.setTempAbility(nA[this.ability]),a.triggerPokemonFormChange(I,qn),!0}getCondition(){return(A,s,R)=>(this.selfTarget?A:s).getAbility().isReplaceable&&(this.selfTarget?A:s).getAbility().id!==this.ability}};o(Rx,"AbilityChangeAttr");let FM=Rx;const Ox=class Ox extends dt{constructor(A=!1){super(!1,{trigger:kA.HIT}),this.copyToPartner=A}apply(A,s,R,n){var r;if(!super.apply(A,s,R,n))return!1;a.queueMessage(u.t("moveTriggers:copiedTargetAbility",{pokemonName:ee(A),targetName:ee(s),abilityName:nA[s.getAbility().id].name})),A.setTempAbility(s.getAbility());const I=A.getAlly();return this.copyToPartner&&((r=a.currentBattle)!=null&&r.double)&&!Pe(I)&&I.hp&&(a.queueMessage(u.t("moveTriggers:copiedTargetAbility",{pokemonName:ee(I),targetName:ee(s),abilityName:nA[s.getAbility().id].name})),I.setTempAbility(s.getAbility())),!0}getCondition(){return(A,s,R)=>{var r;const n=A.getAlly();let I=s.getAbility().isCopiable&&A.getAbility().isReplaceable;return this.copyToPartner&&((r=a.currentBattle)!=null&&r.double)?I=I&&(!(n!=null&&n.hp)||(n==null?void 0:n.getAbility().isReplaceable)):I=I&&A.getAbility().id!==s.getAbility().id,I}}};o(Ox,"AbilityCopyAttr");let YM=Ox;const nx=class nx extends dt{constructor(){super(!1,{trigger:kA.HIT})}apply(A,s,R,n){return super.apply(A,s,R,n)?(a.queueMessage(u.t("moveTriggers:acquiredAbility",{pokemonName:ee(s),abilityName:nA[A.getAbility().id].name})),s.setTempAbility(A.getAbility()),!0):!1}getCondition(){return(A,s,R)=>A.getAbility().isCopiable&&s.getAbility().isReplaceable&&A.getAbility().id!==s.getAbility().id}};o(nx,"AbilityGiveAttr");let b1=nx;const ax=class ax extends dt{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.getAbility();return a.queueMessage(u.t("moveTriggers:swappedAbilitiesWithTarget",{pokemonName:ee(A)})),A.setTempAbility(s.getAbility()),s.setTempAbility(I),a.arena.triggerWeatherBasedFormChangesToNormal(),!0}getCondition(){return(A,s,R)=>[A,s].every(n=>n.getAbility().isSwappable)}};o(ax,"SwitchAbilitiesAttr");let k1=ax;const ix=class ix extends dt{apply(A,s,R,n){return super.apply(A,s,R,n)?(a.queueMessage(u.t("moveTriggers:suppressAbilities",{pokemonName:ee(s)})),s.suppressAbility(),a.arena.triggerWeatherBasedFormChangesToNormal(),!0):!1}getCondition(){return(A,s,R)=>s.getAbility().isSuppressable&&!s.summonData.abilitySuppressed}};o(ix,"SuppressAbilitiesAttr");let WM=ix;const Ix=class Ix extends dt{apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;if(s.turnData.acted){const I=new WM;I.getCondition()(A,s,R)&&I.apply(A,s,R,n)}return!0}};o(Ix,"SuppressAbilitiesIfActedAttr");let Z1=Ix;const rx=class rx extends dt{apply(A,s,R,n){return super.apply(A,s,R,n)?(a.unshiftPhase(new iU(A.getBattlerIndex(),s.getBattlerIndex())),a.queueMessage(u.t("moveTriggers:transformedIntoTarget",{pokemonName:ee(A),targetName:ee(s)})),!0):!1}};o(rx,"TransformAttr");let X1=rx;const Lx=class Lx extends dt{constructor(A){super(),this.stat=A}apply(A,s,R,n){if(super.apply(A,s,R,n)){const I=A.getStat(this.stat,!1);return A.setStat(this.stat,s.getStat(this.stat,!1),!1),s.setStat(this.stat,I,!1),a.queueMessage(u.t("moveTriggers:switchedStat",{pokemonName:ee(A),stat:u.t(mE(this.stat))})),!0}return!1}};o(Lx,"SwapStatAttr");let Q1=Lx;const ox=class ox extends dt{constructor(A,s){super(),this.statToSwitch=A,this.statToSwitchWith=s}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const I=A.getStat(this.statToSwitch,!1),r=A.getStat(this.statToSwitchWith,!1);return A.setStat(this.statToSwitch,r,!1),A.setStat(this.statToSwitchWith,I,!1),a.queueMessage(u.t("moveTriggers:shiftedStats",{pokemonName:ee(A),statToSwitch:u.t(mE(this.statToSwitch)),statToSwitchWith:u.t(mE(this.statToSwitchWith))})),!0}getUserBenefitScore(A,s,R){return A.getStat(this.statToSwitchWith,!1)>A.getStat(this.statToSwitch,!1)?10:0}};o(ox,"ShiftStatAttr");let $1=ox;const Tx=class Tx extends dt{constructor(A,s){super(),this.stats=A,this.msgKey=s}apply(A,s,R,n){if(super.apply(A,s,R,n)){for(const I of this.stats){const r=Math.floor((A.getStat(I,!1)+s.getStat(I,!1))/2);A.setStat(I,r,!1),s.setStat(I,r,!1)}return a.queueMessage(u.t(this.msgKey,{pokemonName:ee(A)})),!0}return!1}};o(Tx,"AverageStatsAttr");let yM=Tx;const Sx=class Sx extends TA{getUserBenefitScore(A,s,R){const n=A.getLastXMoves(4);for(let I=0;I<n.length;I++)if(n[I].move===R.id)return(4-(I+1))*-10;return 0}};o(Sx,"DiscourageFrequentUseAttr");let J1=Sx;const Nx=class Nx extends dt{constructor(){super(!0,{trigger:kA.HIT,firstHitOnly:!0})}apply(A,s,R){return a.currentBattle.moneyScattered+=a.getWaveMoneyAmount(.2),a.queueMessage(u.t("moveTriggers:coinsScatteredEverywhere")),!0}};o(Nx,"MoneyAttr");let wM=Nx;const lx=class lx extends dt{constructor(){super(!0,{trigger:kA.PRE_APPLY})}apply(A,s,R,n){return a.queueMessage(`${u.t("moveTriggers:tryingToTakeFoeDown",{pokemonName:ee(A)})}`),A.addTag(w.DESTINY_BOND,void 0,R.id,A.id),!0}};o(lx,"DestinyBondAttr");let z1=lx;const Cx=class Cx extends Yt{constructor(A){super(A,!1,!1,2,5)}apply(A,s,R,n){return s.turnData.statStagesIncreased&&super.apply(A,s,R,n),!0}};o(Cx,"AddBattlerTagIfBoostedAttr");let j1=Cx;const ux=class ux extends dt{constructor(A){super(!0,{trigger:kA.HIT}),this.effect=A}apply(A,s,R,n){return s.turnData.statStagesIncreased&&s.trySetStatus(this.effect,!0,A),!0}};o(ux,"StatusIfBoostedAttr");let q1=ux;const Ux=class Ux extends TA{getCondition(){return(A,s,R)=>{const n=new Set,I=A.getMoveset().map(r=>r.moveId);return A.getMoveHistory().map(r=>{r.move!==R.id&&I.find(L=>L===r.move)&&n.add(r.move)}),n.size>=I.length-1}}};o(Ux,"LastResortAttr");let ef=Ux;const Dx=class Dx extends TA{constructor(A){super(),this.targetChangeFunc=A}apply(A,s,R,n){const I=n[0];return I.value=this.targetChangeFunc(A,s,R),!0}};o(Dx,"VariableTargetAttr");let mI=Dx;const Mx=class Mx extends dt{apply(A,s,R,n){a.queueMessage(u.t("moveTriggers:afterYou",{targetName:ee(s)}));const I=a.findPhase(r=>r.pokemon===s);return I&&a.tryRemovePhase(r=>r.pokemon===s)&&a.prependToPhase(new _A(s,[...I.targets],I.move),_A),!0}};o(Mx,"AfterYouAttr");let tf=Mx;const cx=class cx extends dt{apply(A,s,R,n){a.queueMessage(u.t("moveTriggers:forceLast",{targetPokemonName:ee(s)}));const I=a.findPhase(r=>r.pokemon===s);if(I&&!I.isForcedLast()&&a.tryRemovePhase(r=>r.pokemon===s)){const r=a.findPhase(L=>[_A,QR].every(N=>!(L instanceof N))||L instanceof _A&&Vj(L,s,!!a.arena.getTag(Fe.TRICK_ROOM)));r&&a.phaseQueue.splice(a.phaseQueue.indexOf(r),0,new _A(s,[...I.targets],I.move,!1,!1,!1,!0))}return!0}};o(cx,"ForceLastAttr");let Af=cx;const Vj=o((E,A,s)=>{let R;return E.pokemon.getEffectiveStat(p.SPD)===A.getEffectiveStat(p.SPD)?R=!!A.randSeedInt(2):R=s?E.pokemon.getEffectiveStat(p.SPD)>A.getEffectiveStat(p.SPD):E.pokemon.getEffectiveStat(p.SPD)<A.getEffectiveStat(p.SPD),E.isForcedLast()&&R},"phaseForcedSlower"),ca=o((E,A,s)=>!a.arena.getTag(Fe.GRAVITY),"failOnGravityCondition"),yc=o((E,A,s)=>!A.isBossImmune(),"failOnBossCondition"),Ar=o((E,A,s)=>a.currentBattle.double,"failIfSingleBattle"),yl=o((E,A,s)=>{const R=new Pt(!1);return a.getField(!0).map(n=>_t(bS,n,R)),R.value&&a.queueMessage(u.t("moveTriggers:cannotUseMove",{pokemonName:ee(E),moveName:s.name})),!R.value},"failIfDampCondition"),j8=o((E,A,s)=>{var R;return((R=E.status)==null?void 0:R.effect)===re.SLEEP||E.hasAbility(O.COMATOSE)},"userSleptOrComatoseCondition"),wc=o((E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===re.SLEEP||A.hasAbility(O.COMATOSE)},"targetSleptOrComatoseCondition"),lR=o((E,A,s)=>a.phaseQueue.find(R=>R instanceof _A)!==void 0,"failIfLastCondition"),wl=o((E,A,s)=>(E.isPlayer()?a.getPlayerParty():a.getEnemyParty()).some(n=>n.isActive()&&!n.isOnField()),"failIfLastInPartyCondition"),vl=o((E,A,s)=>!A.isOfType(i.GHOST),"failIfGhostTypeCondition"),xj=o((E,A,s)=>{var R;return((R=A.getHeldItems().filter(n=>n.isTransferable))==null?void 0:R.length)>0},"failIfNoTargetHeldItemsCondition"),bj=o((E,A,s)=>{var r,L;const R=A.getHeldItems().filter(N=>N.isTransferable);if(R.length===0)return"";const n=((L=(r=R[0])==null?void 0:r.type)==null?void 0:L.name)??"item";return u.t("moveTriggers:attackedByItem",{pokemonName:ee(A),itemName:n})},"attackedByItemMessageFunc");function D7(E,A,s,R,n){R.attrs.filter(I=>E(I)).forEach(I=>I.apply(A,s,R,n))}o(D7,"applyMoveAttrsInternal");function kj(E,A,s,R,n){R.chargeAttrs.filter(I=>E(I)).forEach(I=>I.apply(A,s,R,n))}o(kj,"applyMoveChargeAttrsInternal");function dA(E,A,s,R,...n){D7(I=>I instanceof E,A,s,R,n)}o(dA,"applyMoveAttrs");function yL(E,A,s,R,...n){D7(E,A,s,R,n)}o(yL,"applyFilteredMoveAttrs");function q8(E,A,s,R,...n){kj(I=>I instanceof E,A,s,R,n)}o(q8,"applyMoveChargeAttrs");const hx=class hx{constructor(A){this.func=A}apply(A,s,R){return this.func(A,s,R)}getUserBenefitScore(A,s,R){return 0}};o(hx,"MoveCondition");let nI=hx;const _x=class _x extends nI{constructor(){super((A,s,R)=>{var n;return((n=A.battleSummonData)==null?void 0:n.waveTurnCount)===1})}getUserBenefitScore(A,s,R){return this.apply(A,s,R)?10:-20}};o(_x,"FirstMoveCondition");let co=_x;const Px=class Px extends nI{constructor(){super((A,s,R)=>{var I;const n=a.currentBattle.turnCommands[s.getBattlerIndex()];return!!n&&n.command===OA.FIGHT&&!s.turnData.acted&&!!((I=n.move)!=null&&I.move)&&Ve[n.move.move].category!==g.STATUS&&Ve[n.move.move].getPriority(s)>0})}};o(Px,"UpperHandCondition");let Ef=Px;const Gx=class Gx extends gI{apply(A,s,R,n){const I=n[0];return A.getTypes().some(r=>s.getTypes().includes(r))?!1:(I.value=0,!0)}};o(Gx,"hitsSameTypeAttr");let sf=Gx;const dx=class dx extends dt{constructor(){super(!0)}apply(A,s,R,n){if(!super.apply(A,s,R,n))return!1;const[I]=s.getLastXMoves(1);if(!I)return!1;const r=Ve[I.move];if(r.type===i.STELLAR||r.type===i.UNKNOWN)return!1;const L=A.getTypes(),N=this.getTypeResistances(a.gameMode,r.type).filter(C=>!L.includes(C));if(!N.length)return!1;const l=N[A.randSeedInt(N.length)];return A.summonData.types=[l],a.queueMessage(u.t("battle:transformedIntoType",{pokemonName:ee(A),type:aa(i[l])})),A.updateInfo(),!0}getTypeResistances(A,s){const R=[];for(let n=0;n<Object.keys(i).length;n++){const I=new je(1);I.value=Zc(s,n),PR(rO.TYPE_EFFECTIVENESS,I),I.value<1&&R.push(n)}return R}getCondition(){return(A,s,R)=>s.getLastXMoves().length!==0}};o(dx,"ResistLastMoveTypeAttr");let Rf=dx;const Hx=class Hx extends Yt{constructor(A){super(A,!1,!0)}apply(A,s,R,n){return super.apply(A,s,R,n)?(a.queueMessage(u.t("moveTriggers:exposedMove",{pokemonName:ee(A),targetPokemonName:ee(s)})),!0):!1}};o(Hx,"ExposedMoveAttr");let ho=Hx;const Zj=o((E,A,s)=>!E.getTypes().includes(i.UNKNOWN),"unknownTypeCondition");function Fn(E,A,s){const R=new je(0);E.getOpponents().forEach(l=>dA(mI,E,l,Ve[A],R));let n;Ve[A].hasAttr(mI)?n=R.value:s!==void 0?n=s:A?n=Ve[A].moveTarget:A===void 0&&(n=De.NEAR_ENEMY);const I=E.getOpponents();let r=[],L=!1;const N=E.getAlly();switch(n){case De.USER:case De.PARTY:r=[E];break;case De.NEAR_OTHER:case De.OTHER:case De.ALL_NEAR_OTHERS:case De.ALL_OTHERS:r=Pe(N)?I:I.concat([N]),L=n===De.ALL_NEAR_OTHERS||n===De.ALL_OTHERS;break;case De.NEAR_ENEMY:case De.ALL_NEAR_ENEMIES:case De.ALL_ENEMIES:case De.ENEMY_SIDE:r=I,L=n!==De.NEAR_ENEMY;break;case De.RANDOM_NEAR_ENEMY:r=[I[E.randSeedInt(I.length)]];break;case De.ATTACKER:return{targets:[-1],multiple:!1};case De.NEAR_ALLY:case De.ALLY:r=Pe(N)?[]:[N];break;case De.USER_OR_NEAR_ALLY:case De.USER_AND_ALLIES:case De.USER_SIDE:r=Pe(N)?[E]:[E,N],L=n!==De.USER_OR_NEAR_ALLY;break;case De.ALL:case De.BOTH_SIDES:r=(Pe(N)?[E]:[E,N]).concat(I),L=!0;break;case De.CURSE:const l=Pe(N)?[]:[N];r=E.getTypes(!0).includes(i.GHOST)?I.concat(l):[E];break}return{targets:r.filter(l=>l==null?void 0:l.isActive(!0)).map(l=>l.getBattlerIndex()).filter(l=>l!==void 0),multiple:L}}o(Fn,"getMoveTargets");const Ve=[new at(t.NONE,i.NORMAL,g.STATUS,-1,-1,0,1)],Xj=[];function Qj(){Ve.push(new m(t.POUND,i.NORMAL,g.PHYSICAL,40,100,35,-1,0,1),new m(t.KARATE_CHOP,i.FIGHTING,g.PHYSICAL,50,100,25,-1,0,1).attr(iE),new m(t.DOUBLE_SLAP,i.NORMAL,g.PHYSICAL,15,85,10,-1,0,1).attr(CA),new m(t.COMET_PUNCH,i.NORMAL,g.PHYSICAL,18,85,15,-1,0,1).attr(CA).punchingMove(),new m(t.MEGA_PUNCH,i.NORMAL,g.PHYSICAL,80,85,20,-1,0,1).punchingMove(),new m(t.PAY_DAY,i.NORMAL,g.PHYSICAL,40,100,20,-1,0,1).attr(wM).makesContact(!1),new m(t.FIRE_PUNCH,i.FIRE,g.PHYSICAL,75,100,15,10,0,1).attr(Tt,re.BURN).punchingMove(),new m(t.ICE_PUNCH,i.ICE,g.PHYSICAL,75,100,15,10,0,1).attr(Tt,re.FREEZE).punchingMove(),new m(t.THUNDER_PUNCH,i.ELECTRIC,g.PHYSICAL,75,100,15,10,0,1).attr(Tt,re.PARALYSIS).punchingMove(),new m(t.SCRATCH,i.NORMAL,g.PHYSICAL,40,100,35,-1,0,1),new m(t.VISE_GRIP,i.NORMAL,g.PHYSICAL,55,100,30,-1,0,1),new m(t.GUILLOTINE,i.NORMAL,g.PHYSICAL,200,30,5,-1,0,1).attr(En).attr(xa),new Ps(t.RAZOR_WIND,i.NORMAL,g.SPECIAL,80,100,10,-1,0,1).chargeText(u.t("moveTriggers:whippedUpAWhirlwind",{pokemonName:"{USER}"})).attr(iE).windMove().target(De.ALL_NEAR_ENEMIES),new at(t.SWORDS_DANCE,i.NORMAL,-1,20,-1,0,1).attr(Ge,[p.ATK],2,!0).danceMove(),new m(t.CUT,i.NORMAL,g.PHYSICAL,50,95,30,-1,0,1).slicingMove(),new m(t.GUST,i.FLYING,g.SPECIAL,40,100,35,-1,0,1).attr(uR,w.FLYING).windMove(),new m(t.WING_ATTACK,i.FLYING,g.PHYSICAL,60,100,35,-1,0,1),new ge(t.WHIRLWIND,i.NORMAL,-1,20,-1,-6,1).attr(nR,!1,uA.FORCE_SWITCH).ignoresSubstitute().hidesTarget().windMove().reflectable(),new Ps(t.FLY,i.FLYING,g.PHYSICAL,90,95,15,-1,0,1).chargeText(u.t("moveTriggers:flewUpHigh",{pokemonName:"{USER}"})).chargeAttr(Qn,w.FLYING).condition(ca),new m(t.BIND,i.NORMAL,g.PHYSICAL,15,85,20,-1,0,1).attr(UO,w.BIND),new m(t.SLAM,i.NORMAL,g.PHYSICAL,80,75,20,-1,0,1),new m(t.VINE_WHIP,i.GRASS,g.PHYSICAL,45,100,25,-1,0,1),new m(t.STOMP,i.NORMAL,g.PHYSICAL,65,100,20,30,0,1).attr(Cn).attr(uR,w.MINIMIZED).attr(lA),new m(t.DOUBLE_KICK,i.FIGHTING,g.PHYSICAL,30,100,30,-1,0,1).attr(CA,jA._2),new m(t.MEGA_KICK,i.NORMAL,g.PHYSICAL,120,75,5,-1,0,1),new m(t.JUMP_KICK,i.FIGHTING,g.PHYSICAL,100,95,10,-1,0,1).attr(cO,Ma).attr(XO,Ma).condition(ca).recklessMove(),new m(t.ROLLING_KICK,i.FIGHTING,g.PHYSICAL,60,85,15,30,0,1).attr(lA),new ge(t.SAND_ATTACK,i.GROUND,100,15,-1,0,1).attr(Ge,[p.ACC],-1).reflectable(),new m(t.HEADBUTT,i.NORMAL,g.PHYSICAL,70,100,15,30,0,1).attr(lA),new m(t.HORN_ATTACK,i.NORMAL,g.PHYSICAL,65,100,25,-1,0,1),new m(t.FURY_ATTACK,i.NORMAL,g.PHYSICAL,15,85,20,-1,0,1).attr(CA),new m(t.HORN_DRILL,i.NORMAL,g.PHYSICAL,200,30,5,-1,0,1).attr(En).attr(xa),new m(t.TACKLE,i.NORMAL,g.PHYSICAL,40,100,35,-1,0,1),new m(t.BODY_SLAM,i.NORMAL,g.PHYSICAL,85,100,15,30,0,1).attr(Cn).attr(uR,w.MINIMIZED).attr(Tt,re.PARALYSIS),new m(t.WRAP,i.NORMAL,g.PHYSICAL,15,90,20,-1,0,1).attr(UO,w.WRAP),new m(t.TAKE_DOWN,i.NORMAL,g.PHYSICAL,90,85,20,-1,0,1).attr(RR).recklessMove(),new m(t.THRASH,i.NORMAL,g.PHYSICAL,120,100,10,-1,0,1).attr(Tr).attr(cO,xn).attr(XO,xn).target(De.RANDOM_NEAR_ENEMY),new m(t.DOUBLE_EDGE,i.NORMAL,g.PHYSICAL,120,100,15,-1,0,1).attr(RR,!1,.33).recklessMove(),new ge(t.TAIL_WHIP,i.NORMAL,100,30,-1,0,1).attr(Ge,[p.DEF],-1).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.POISON_STING,i.POISON,g.PHYSICAL,15,100,35,30,0,1).attr(Tt,re.POISON).makesContact(!1),new m(t.TWINEEDLE,i.BUG,g.PHYSICAL,25,100,20,20,0,1).attr(CA,jA._2).attr(Tt,re.POISON).makesContact(!1),new m(t.PIN_MISSILE,i.BUG,g.PHYSICAL,25,95,20,-1,0,1).attr(CA).makesContact(!1),new ge(t.LEER,i.NORMAL,100,30,-1,0,1).attr(Ge,[p.DEF],-1).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.BITE,i.DARK,g.PHYSICAL,60,100,25,30,0,1).attr(lA).bitingMove(),new ge(t.GROWL,i.NORMAL,100,40,-1,0,1).attr(Ge,[p.ATK],-1).soundBased().target(De.ALL_NEAR_ENEMIES).reflectable(),new ge(t.ROAR,i.NORMAL,-1,20,-1,-6,1).attr(nR,!1,uA.FORCE_SWITCH).soundBased().hidesTarget().reflectable(),new ge(t.SING,i.NORMAL,55,15,-1,0,1).attr(Tt,re.SLEEP).soundBased().reflectable(),new ge(t.SUPERSONIC,i.NORMAL,55,20,-1,0,1).attr(es).soundBased().reflectable(),new m(t.SONIC_BOOM,i.NORMAL,g.SPECIAL,-1,90,20,-1,0,1).attr(FO,20),new ge(t.DISABLE,i.NORMAL,100,20,-1,0,1).attr(Yt,w.DISABLED,!1,!0).condition((E,A,s)=>{const R=A.getLastXMoves(-1).find(n=>!n.virtual);return!Pe(R)&&R.move!==t.NONE&&R.move!==t.STRUGGLE}).ignoresSubstitute().reflectable(),new m(t.ACID,i.POISON,g.SPECIAL,40,100,30,10,0,1).attr(Ge,[p.SPDEF],-1).target(De.ALL_NEAR_ENEMIES),new m(t.EMBER,i.FIRE,g.SPECIAL,40,100,25,10,0,1).attr(Tt,re.BURN),new m(t.FLAMETHROWER,i.FIRE,g.SPECIAL,90,100,15,10,0,1).attr(Tt,re.BURN),new ge(t.MIST,i.ICE,-1,30,-1,0,1).attr(rE,Fe.MIST,5,!0).target(De.USER_SIDE),new m(t.WATER_GUN,i.WATER,g.SPECIAL,40,100,25,-1,0,1),new m(t.HYDRO_PUMP,i.WATER,g.SPECIAL,110,80,5,-1,0,1),new m(t.SURF,i.WATER,g.SPECIAL,90,100,15,-1,0,1).target(De.ALL_NEAR_OTHERS).attr(uR,w.UNDERWATER).attr(PM),new m(t.ICE_BEAM,i.ICE,g.SPECIAL,90,100,10,10,0,1).attr(Tt,re.FREEZE),new m(t.BLIZZARD,i.ICE,g.SPECIAL,110,70,5,10,0,1).attr(L1).attr(Tt,re.FREEZE).windMove().target(De.ALL_NEAR_ENEMIES),new m(t.PSYBEAM,i.PSYCHIC,g.SPECIAL,65,100,20,10,0,1).attr(es),new m(t.BUBBLE_BEAM,i.WATER,g.SPECIAL,65,100,20,10,0,1).attr(Ge,[p.SPD],-1),new m(t.AURORA_BEAM,i.ICE,g.SPECIAL,65,100,20,10,0,1).attr(Ge,[p.ATK],-1),new m(t.HYPER_BEAM,i.NORMAL,g.SPECIAL,150,90,5,-1,0,1).attr(vR),new m(t.PECK,i.FLYING,g.PHYSICAL,35,100,35,-1,0,1),new m(t.DRILL_PECK,i.FLYING,g.PHYSICAL,80,100,20,-1,0,1),new m(t.SUBMISSION,i.FIGHTING,g.PHYSICAL,80,80,20,-1,0,1).attr(RR).recklessMove(),new m(t.LOW_KICK,i.FIGHTING,g.PHYSICAL,-1,100,20,-1,0,1).attr(RM),new m(t.COUNTER,i.FIGHTING,g.PHYSICAL,-1,100,20,-1,-5,1).attr(Ji,E=>E.category===g.PHYSICAL,2).target(De.ATTACKER),new m(t.SEISMIC_TOSS,i.FIGHTING,g.PHYSICAL,-1,100,20,-1,0,1).attr(WD),new m(t.STRENGTH,i.NORMAL,g.PHYSICAL,80,100,15,-1,0,1),new m(t.ABSORB,i.GRASS,g.SPECIAL,20,100,25,-1,0,1).attr(Zs).triageMove(),new m(t.MEGA_DRAIN,i.GRASS,g.SPECIAL,40,100,15,-1,0,1).attr(Zs).triageMove(),new ge(t.LEECH_SEED,i.GRASS,90,10,-1,0,1).attr(hM).condition((E,A,s)=>!A.getTag(w.SEEDED)&&!A.isOfType(i.GRASS)).reflectable(),new at(t.GROWTH,i.NORMAL,-1,20,-1,0,1).attr(bH),new m(t.RAZOR_LEAF,i.GRASS,g.PHYSICAL,55,95,25,-1,0,1).attr(iE).makesContact(!1).slicingMove().target(De.ALL_NEAR_ENEMIES),new Ps(t.SOLAR_BEAM,i.GRASS,g.SPECIAL,120,100,10,-1,0,1).chargeText(u.t("moveTriggers:tookInSunlight",{pokemonName:"{USER}"})).chargeAttr(Lo,[Oe.SUNNY,Oe.HARSH_SUN]).attr(IM),new ge(t.POISON_POWDER,i.POISON,75,35,-1,0,1).attr(Tt,re.POISON).powderMove().reflectable(),new ge(t.STUN_SPORE,i.GRASS,75,30,-1,0,1).attr(Tt,re.PARALYSIS).powderMove().reflectable(),new ge(t.SLEEP_POWDER,i.GRASS,75,15,-1,0,1).attr(Tt,re.SLEEP).powderMove().reflectable(),new m(t.PETAL_DANCE,i.GRASS,g.SPECIAL,120,100,10,-1,0,1).attr(Tr).attr(cO,xn).attr(XO,xn).makesContact().danceMove().target(De.RANDOM_NEAR_ENEMY),new ge(t.STRING_SHOT,i.BUG,95,40,-1,0,1).attr(Ge,[p.SPD],-2).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.DRAGON_RAGE,i.DRAGON,g.SPECIAL,-1,100,10,-1,0,1).attr(FO,40),new m(t.FIRE_SPIN,i.FIRE,g.SPECIAL,35,85,15,-1,0,1).attr(UO,w.FIRE_SPIN),new m(t.THUNDER_SHOCK,i.ELECTRIC,g.SPECIAL,40,100,30,10,0,1).attr(Tt,re.PARALYSIS),new m(t.THUNDERBOLT,i.ELECTRIC,g.SPECIAL,90,100,15,10,0,1).attr(Tt,re.PARALYSIS),new ge(t.THUNDER_WAVE,i.ELECTRIC,90,20,-1,0,1).attr(Tt,re.PARALYSIS).attr(YD).reflectable(),new m(t.THUNDER,i.ELECTRIC,g.SPECIAL,110,70,10,30,0,1).attr(Tt,re.PARALYSIS).attr(NM).attr(VR,w.FLYING),new m(t.ROCK_THROW,i.ROCK,g.PHYSICAL,50,90,15,-1,0,1).makesContact(!1),new m(t.EARTHQUAKE,i.GROUND,g.PHYSICAL,100,100,10,-1,0,1).attr(uR,w.UNDERGROUND).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(De.ALL_NEAR_OTHERS),new m(t.FISSURE,i.GROUND,g.PHYSICAL,200,30,5,-1,0,1).attr(En).attr(xa).attr(VR,w.UNDERGROUND).makesContact(!1),new Ps(t.DIG,i.GROUND,g.PHYSICAL,80,100,10,-1,0,1).chargeText(u.t("moveTriggers:dugAHole",{pokemonName:"{USER}"})).chargeAttr(Qn,w.UNDERGROUND),new ge(t.TOXIC,i.POISON,90,10,-1,0,1).attr(Tt,re.TOXIC).attr(lM).reflectable(),new m(t.CONFUSION,i.PSYCHIC,g.SPECIAL,50,100,25,10,0,1).attr(es),new m(t.PSYCHIC,i.PSYCHIC,g.SPECIAL,90,100,10,10,0,1).attr(Ge,[p.SPDEF],-1),new ge(t.HYPNOSIS,i.PSYCHIC,60,20,-1,0,1).attr(Tt,re.SLEEP).reflectable(),new at(t.MEDITATE,i.PSYCHIC,-1,40,-1,0,1).attr(Ge,[p.ATK],1,!0),new at(t.AGILITY,i.PSYCHIC,-1,30,-1,0,1).attr(Ge,[p.SPD],2,!0),new m(t.QUICK_ATTACK,i.NORMAL,g.PHYSICAL,40,100,30,-1,1,1),new m(t.RAGE,i.NORMAL,g.PHYSICAL,20,100,20,-1,0,1).partial(),new at(t.TELEPORT,i.PSYCHIC,-1,20,-1,-6,1).attr(nR,!0).hidesUser(),new m(t.NIGHT_SHADE,i.GHOST,g.SPECIAL,-1,100,15,-1,0,1).attr(WD),new ge(t.MIMIC,i.NORMAL,-1,10,-1,0,1).attr(V1).ignoresSubstitute(),new ge(t.SCREECH,i.NORMAL,85,40,-1,0,1).attr(Ge,[p.DEF],-2).soundBased().reflectable(),new at(t.DOUBLE_TEAM,i.NORMAL,-1,15,-1,0,1).attr(Ge,[p.EVA],1,!0),new at(t.RECOVER,i.NORMAL,-1,5,-1,0,1).attr(fs,.5).triageMove(),new at(t.HARDEN,i.NORMAL,-1,30,-1,0,1).attr(Ge,[p.DEF],1,!0),new at(t.MINIMIZE,i.NORMAL,-1,10,-1,0,1).attr(Yt,w.MINIMIZED,!0,!1).attr(Ge,[p.EVA],2,!0),new ge(t.SMOKESCREEN,i.NORMAL,100,20,-1,0,1).attr(Ge,[p.ACC],-1).reflectable(),new ge(t.CONFUSE_RAY,i.GHOST,100,10,-1,0,1).attr(es).reflectable(),new at(t.WITHDRAW,i.WATER,-1,40,-1,0,1).attr(Ge,[p.DEF],1,!0),new at(t.DEFENSE_CURL,i.NORMAL,-1,40,-1,0,1).attr(Ge,[p.DEF],1,!0),new at(t.BARRIER,i.PSYCHIC,-1,20,-1,0,1).attr(Ge,[p.DEF],2,!0),new ge(t.LIGHT_SCREEN,i.PSYCHIC,-1,30,-1,0,1).attr(rE,Fe.LIGHT_SCREEN,5,!0).target(De.USER_SIDE),new at(t.HAZE,i.ICE,-1,30,-1,0,1).ignoresSubstitute().attr(So,!0),new ge(t.REFLECT,i.PSYCHIC,-1,20,-1,0,1).attr(rE,Fe.REFLECT,5,!0).target(De.USER_SIDE),new at(t.FOCUS_ENERGY,i.NORMAL,-1,30,-1,0,1).attr(Yt,w.CRIT_BOOST,!0,!0),new m(t.BIDE,i.NORMAL,g.PHYSICAL,-1,-1,10,-1,1,1).target(De.USER).unimplemented(),new at(t.METRONOME,i.NORMAL,-1,10,-1,0,1).attr(mM,pj),new ge(t.MIRROR_MOVE,i.FLYING,-1,20,-1,0,1).attr(SL,!0,Wj),new m(t.SELF_DESTRUCT,i.NORMAL,g.PHYSICAL,200,100,5,-1,0,1).attr(na).makesContact(!1).condition(yl).target(De.ALL_NEAR_OTHERS),new m(t.EGG_BOMB,i.NORMAL,g.PHYSICAL,100,75,10,-1,0,1).makesContact(!1).ballBombMove(),new m(t.LICK,i.GHOST,g.PHYSICAL,30,100,30,30,0,1).attr(Tt,re.PARALYSIS),new m(t.SMOG,i.POISON,g.SPECIAL,30,70,20,40,0,1).attr(Tt,re.POISON),new m(t.SLUDGE,i.POISON,g.SPECIAL,65,100,20,30,0,1).attr(Tt,re.POISON),new m(t.BONE_CLUB,i.GROUND,g.PHYSICAL,65,85,20,10,0,1).attr(lA).makesContact(!1),new m(t.FIRE_BLAST,i.FIRE,g.SPECIAL,110,85,5,10,0,1).attr(Tt,re.BURN),new m(t.WATERFALL,i.WATER,g.PHYSICAL,80,100,15,20,0,1).attr(lA),new m(t.CLAMP,i.WATER,g.PHYSICAL,35,85,15,-1,0,1).attr(UO,w.CLAMP),new m(t.SWIFT,i.NORMAL,g.SPECIAL,60,-1,20,-1,0,1).target(De.ALL_NEAR_ENEMIES),new Ps(t.SKULL_BASH,i.NORMAL,g.PHYSICAL,130,100,10,-1,0,1).chargeText(u.t("moveTriggers:loweredItsHead",{pokemonName:"{USER}"})).chargeAttr(Ge,[p.DEF],1,!0),new m(t.SPIKE_CANNON,i.NORMAL,g.PHYSICAL,20,100,15,-1,0,1).attr(CA).makesContact(!1),new m(t.CONSTRICT,i.NORMAL,g.PHYSICAL,10,100,35,10,0,1).attr(Ge,[p.SPD],-1),new at(t.AMNESIA,i.PSYCHIC,-1,20,-1,0,1).attr(Ge,[p.SPDEF],2,!0),new ge(t.KINESIS,i.PSYCHIC,80,15,-1,0,1).attr(Ge,[p.ACC],-1).reflectable(),new at(t.SOFT_BOILED,i.NORMAL,-1,5,-1,0,1).attr(fs,.5).triageMove(),new m(t.HIGH_JUMP_KICK,i.FIGHTING,g.PHYSICAL,130,90,10,-1,0,1).attr(cO,Ma).attr(XO,Ma).condition(ca).recklessMove(),new ge(t.GLARE,i.NORMAL,100,30,-1,0,1).attr(Tt,re.PARALYSIS).reflectable(),new m(t.DREAM_EATER,i.PSYCHIC,g.SPECIAL,100,100,15,-1,0,1).attr(Zs).condition(wc).triageMove(),new ge(t.POISON_GAS,i.POISON,90,40,-1,0,1).attr(Tt,re.POISON).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.BARRAGE,i.NORMAL,g.PHYSICAL,15,85,20,-1,0,1).attr(CA).makesContact(!1).ballBombMove(),new m(t.LEECH_LIFE,i.BUG,g.PHYSICAL,80,100,10,-1,0,1).attr(Zs).triageMove(),new ge(t.LOVELY_KISS,i.NORMAL,75,10,-1,0,1).attr(Tt,re.SLEEP).reflectable(),new Ps(t.SKY_ATTACK,i.FLYING,g.PHYSICAL,140,90,5,30,0,1).chargeText(u.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).attr(iE).attr(lA).makesContact(!1),new ge(t.TRANSFORM,i.NORMAL,-1,10,-1,0,1).attr(X1).condition((E,A,s)=>!A.getTag(w.SUBSTITUTE)&&!E.fusionSpecies&&!A.fusionSpecies).ignoresProtect(),new m(t.BUBBLE,i.WATER,g.SPECIAL,40,100,30,10,0,1).attr(Ge,[p.SPD],-1).target(De.ALL_NEAR_ENEMIES),new m(t.DIZZY_PUNCH,i.NORMAL,g.PHYSICAL,70,100,10,20,0,1).attr(es).punchingMove(),new ge(t.SPORE,i.GRASS,100,15,-1,0,1).attr(Tt,re.SLEEP).powderMove().reflectable(),new ge(t.FLASH,i.NORMAL,100,20,-1,0,1).attr(Ge,[p.ACC],-1).reflectable(),new m(t.PSYWAVE,i.PSYCHIC,g.SPECIAL,-1,100,15,-1,0,1).attr(pH),new at(t.SPLASH,i.NORMAL,-1,40,-1,0,1).attr(KH).condition(ca),new at(t.ACID_ARMOR,i.POISON,-1,20,-1,0,1).attr(Ge,[p.DEF],2,!0),new m(t.CRABHAMMER,i.WATER,g.PHYSICAL,100,90,10,-1,0,1).attr(iE),new m(t.EXPLOSION,i.NORMAL,g.PHYSICAL,250,100,5,-1,0,1).condition(yl).attr(na).makesContact(!1).target(De.ALL_NEAR_OTHERS),new m(t.FURY_SWIPES,i.NORMAL,g.PHYSICAL,18,80,15,-1,0,1).attr(CA),new m(t.BONEMERANG,i.GROUND,g.PHYSICAL,50,90,10,-1,0,1).attr(CA,jA._2).makesContact(!1),new at(t.REST,i.PSYCHIC,-1,5,-1,0,1).attr(Tt,re.SLEEP,!0,3,!0).attr(fs,1,!0).condition((E,A,s)=>!E.isFullHp()&&E.canSetStatus(re.SLEEP,!0,!0,E)).triageMove(),new m(t.ROCK_SLIDE,i.ROCK,g.PHYSICAL,75,90,10,30,0,1).attr(lA).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.HYPER_FANG,i.NORMAL,g.PHYSICAL,80,90,15,10,0,1).attr(lA).bitingMove(),new at(t.SHARPEN,i.NORMAL,-1,30,-1,0,1).attr(Ge,[p.ATK],1,!0),new at(t.CONVERSION,i.NORMAL,-1,30,-1,0,1).attr(y1),new m(t.TRI_ATTACK,i.NORMAL,g.SPECIAL,80,100,10,20,0,1).attr($D,[re.BURN,re.FREEZE,re.PARALYSIS]),new m(t.SUPER_FANG,i.NORMAL,g.PHYSICAL,-1,90,10,-1,0,1).attr(io),new m(t.SLASH,i.NORMAL,g.PHYSICAL,70,100,20,-1,0,1).attr(iE).slicingMove(),new at(t.SUBSTITUTE,i.NORMAL,-1,10,-1,0,1).attr(VD,.25,!1),new m(t.STRUGGLE,i.NORMAL,g.PHYSICAL,50,-1,1,-1,0,1).attr(RR,!0,.25,!0).attr(uN).target(De.RANDOM_NEAR_ENEMY),new ge(t.SKETCH,i.NORMAL,-1,1,-1,0,2).ignoresSubstitute().attr(x1),new m(t.TRIPLE_KICK,i.FIGHTING,g.PHYSICAL,10,90,10,-1,0,2).attr(CA,jA._3).attr(LM,3).checkAllHits(),new m(t.THIEF,i.DARK,g.PHYSICAL,60,100,25,-1,0,2).attr(JD,.3),new ge(t.SPIDER_WEB,i.BUG,-1,10,-1,0,2).condition(vl).attr(Yt,w.TRAPPED,!1,!0,1).reflectable(),new ge(t.MIND_READER,i.NORMAL,-1,5,-1,0,2).attr(GM),new ge(t.NIGHTMARE,i.GHOST,100,15,-1,0,2).attr(Yt,w.NIGHTMARE).condition(wc),new m(t.FLAME_WHEEL,i.FIRE,g.PHYSICAL,60,100,25,10,0,2).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN),new m(t.SNORE,i.NORMAL,g.SPECIAL,50,100,15,30,0,2).attr(CN).attr(lA).condition(j8).soundBased(),new ge(t.CURSE,i.GHOST,-1,10,-1,0,2).attr(f1).ignoresSubstitute().ignoresProtect().target(De.CURSE),new m(t.FLAIL,i.NORMAL,g.PHYSICAL,-1,100,15,-1,0,2).attr(OM),new ge(t.CONVERSION_2,i.NORMAL,-1,30,-1,0,2).attr(Rf).ignoresSubstitute().partial(),new m(t.AEROBLAST,i.FLYING,g.SPECIAL,100,95,5,-1,0,2).windMove().attr(iE),new ge(t.COTTON_SPORE,i.GRASS,100,40,-1,0,2).attr(Ge,[p.SPD],-2).powderMove().target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.REVERSAL,i.FIGHTING,g.PHYSICAL,-1,100,15,-1,0,2).attr(OM),new ge(t.SPITE,i.GHOST,100,10,-1,0,2).ignoresSubstitute().attr(KM,4).reflectable(),new m(t.POWDER_SNOW,i.ICE,g.SPECIAL,40,100,25,10,0,2).attr(Tt,re.FREEZE).target(De.ALL_NEAR_ENEMIES),new at(t.PROTECT,i.NORMAL,-1,10,-1,4,2).attr(OO).condition(lR),new m(t.MACH_PUNCH,i.FIGHTING,g.PHYSICAL,40,100,30,-1,1,2).punchingMove(),new ge(t.SCARY_FACE,i.NORMAL,100,10,-1,0,2).attr(Ge,[p.SPD],-2).reflectable(),new m(t.FEINT_ATTACK,i.DARK,g.PHYSICAL,60,-1,20,-1,0,2),new ge(t.SWEET_KISS,i.FAIRY,75,10,-1,0,2).attr(es).reflectable(),new at(t.BELLY_DRUM,i.NORMAL,-1,10,-1,0,2).attr(To,[p.ATK],12,2,E=>{a.queueMessage(u.t("moveTriggers:cutOwnHpAndMaximizedStat",{pokemonName:ee(E),statName:u.t(mE(p.ATK))}))}),new m(t.SLUDGE_BOMB,i.POISON,g.SPECIAL,90,100,10,30,0,2).attr(Tt,re.POISON).ballBombMove(),new m(t.MUD_SLAP,i.GROUND,g.SPECIAL,20,100,10,100,0,2).attr(Ge,[p.ACC],-1),new m(t.OCTAZOOKA,i.WATER,g.SPECIAL,65,85,10,50,0,2).attr(Ge,[p.ACC],-1).ballBombMove(),new ge(t.SPIKES,i.GROUND,-1,20,-1,0,2).attr(Sr,Fe.SPIKES).target(De.ENEMY_SIDE).reflectable(),new m(t.ZAP_CANNON,i.ELECTRIC,g.SPECIAL,120,50,5,100,0,2).attr(Tt,re.PARALYSIS).ballBombMove(),new ge(t.FORESIGHT,i.NORMAL,-1,40,-1,0,2).attr(ho,w.IGNORE_GHOST).ignoresSubstitute().reflectable(),new at(t.DESTINY_BOND,i.GHOST,-1,5,-1,0,2).ignoresProtect().attr(z1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return R.length===0||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new ge(t.PERISH_SONG,i.NORMAL,-1,5,-1,0,2).attr(g1).ignoresProtect().soundBased().condition(yc).target(De.ALL),new m(t.ICY_WIND,i.ICE,g.SPECIAL,55,95,15,100,0,2).attr(Ge,[p.SPD],-1).windMove().target(De.ALL_NEAR_ENEMIES),new at(t.DETECT,i.FIGHTING,-1,5,-1,4,2).attr(OO).condition(lR),new m(t.BONE_RUSH,i.GROUND,g.PHYSICAL,25,90,10,-1,0,2).attr(CA).makesContact(!1),new ge(t.LOCK_ON,i.NORMAL,-1,5,-1,0,2).attr(GM),new m(t.OUTRAGE,i.DRAGON,g.PHYSICAL,120,100,10,-1,0,2).attr(Tr).attr(cO,xn).attr(XO,xn).target(De.RANDOM_NEAR_ENEMY),new ge(t.SANDSTORM,i.ROCK,-1,10,-1,0,2).attr(di,Oe.SANDSTORM).target(De.BOTH_SIDES),new m(t.GIGA_DRAIN,i.GRASS,g.SPECIAL,75,100,10,-1,0,2).attr(Zs).triageMove(),new at(t.ENDURE,i.NORMAL,-1,10,-1,4,2).attr(OO,w.ENDURING).condition(lR),new ge(t.CHARM,i.FAIRY,100,20,-1,0,2).attr(Ge,[p.ATK],-2).reflectable(),new m(t.ROLLOUT,i.ROCK,g.PHYSICAL,30,90,20,-1,0,2).partial().attr(pr,5,!0,!0,t.DEFENSE_CURL),new m(t.FALSE_SWIPE,i.NORMAL,g.PHYSICAL,40,100,40,-1,0,2).attr(wD),new ge(t.SWAGGER,i.NORMAL,85,15,-1,0,2).attr(Ge,[p.ATK],2).attr(es).reflectable(),new at(t.MILK_DRINK,i.NORMAL,-1,5,-1,0,2).attr(fs,.5).triageMove(),new m(t.SPARK,i.ELECTRIC,g.PHYSICAL,65,100,20,30,0,2).attr(Tt,re.PARALYSIS),new m(t.FURY_CUTTER,i.BUG,g.PHYSICAL,40,95,20,-1,0,2).attr(pr,3,!0).slicingMove(),new m(t.STEEL_WING,i.STEEL,g.PHYSICAL,70,90,25,10,0,2).attr(Ge,[p.DEF],1,!0),new ge(t.MEAN_LOOK,i.NORMAL,-1,5,-1,0,2).condition(vl).attr(Yt,w.TRAPPED,!1,!0,1).reflectable(),new ge(t.ATTRACT,i.NORMAL,100,15,-1,0,2).attr(Yt,w.INFATUATED).ignoresSubstitute().condition((E,A,s)=>E.isOppositeGender(A)).reflectable(),new at(t.SLEEP_TALK,i.NORMAL,-1,10,-1,0,2).attr(CN).attr(DN,Fj,!1).condition(j8).target(De.NEAR_ENEMY),new ge(t.HEAL_BELL,i.NORMAL,-1,5,-1,0,2).attr(Io,u.t("moveTriggers:bellChimed"),O.SOUNDPROOF).soundBased().target(De.PARTY),new m(t.RETURN,i.NORMAL,g.PHYSICAL,-1,100,20,-1,0,2).attr(or),new m(t.PRESENT,i.NORMAL,g.PHYSICAL,-1,90,15,-1,0,2).attr(E1).makesContact(!1),new m(t.FRUSTRATION,i.NORMAL,g.PHYSICAL,-1,100,20,-1,0,2).attr(or,!0),new ge(t.SAFEGUARD,i.NORMAL,-1,25,-1,0,2).target(De.USER_SIDE).attr(rE,Fe.SAFEGUARD,5,!0,!0),new ge(t.PAIN_SPLIT,i.NORMAL,-1,20,-1,0,2).attr(EM).condition(yc),new m(t.SACRED_FIRE,i.FIRE,g.PHYSICAL,100,95,5,50,0,2).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN).makesContact(!1),new m(t.MAGNITUDE,i.GROUND,g.PHYSICAL,-1,100,30,-1,0,2).attr($i,vj).attr(e1).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).attr(uR,w.UNDERGROUND).makesContact(!1).target(De.ALL_NEAR_OTHERS),new m(t.DYNAMIC_PUNCH,i.FIGHTING,g.PHYSICAL,100,50,5,100,0,2).attr(es).punchingMove(),new m(t.MEGAHORN,i.BUG,g.PHYSICAL,120,85,10,-1,0,2),new m(t.DRAGON_BREATH,i.DRAGON,g.SPECIAL,60,100,20,30,0,2).attr(Tt,re.PARALYSIS),new at(t.BATON_PASS,i.NORMAL,-1,40,-1,0,2).attr(nR,!0,uA.BATON_PASS).condition(wl).hidesUser(),new ge(t.ENCORE,i.NORMAL,100,5,-1,0,2).attr(Yt,w.ENCORE,!1,!0).ignoresSubstitute().condition((E,A,s)=>new nN(E.id).canAdd(A)).reflectable(),new m(t.PURSUIT,i.DARK,g.PHYSICAL,40,100,20,-1,0,2).partial(),new m(t.RAPID_SPIN,i.NORMAL,g.PHYSICAL,50,100,40,100,0,2).attr(Ge,[p.SPD],1,!0).attr($n,[w.BIND,w.WRAP,w.FIRE_SPIN,w.WHIRLPOOL,w.CLAMP,w.SAND_TOMB,w.MAGMA_STORM,w.SNAP_TRAP,w.THUNDER_CAGE,w.SEEDED,w.INFESTATION],!0).attr(Nr),new ge(t.SWEET_SCENT,i.NORMAL,100,20,-1,0,2).attr(Ge,[p.EVA],-2).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.IRON_TAIL,i.STEEL,g.PHYSICAL,100,75,15,30,0,2).attr(Ge,[p.DEF],-1),new m(t.METAL_CLAW,i.STEEL,g.PHYSICAL,50,95,35,10,0,2).attr(Ge,[p.ATK],1,!0),new m(t.VITAL_THROW,i.FIGHTING,g.PHYSICAL,70,-1,10,-1,-1,2),new at(t.MORNING_SUN,i.NORMAL,-1,5,-1,0,2).attr(ro).triageMove(),new at(t.SYNTHESIS,i.GRASS,-1,5,-1,0,2).attr(ro).triageMove(),new at(t.MOONLIGHT,i.FAIRY,-1,5,-1,0,2).attr(ro).triageMove(),new m(t.HIDDEN_POWER,i.NORMAL,g.SPECIAL,60,100,15,-1,0,2).attr(D1),new m(t.CROSS_CHOP,i.FIGHTING,g.PHYSICAL,100,80,5,-1,0,2).attr(iE),new m(t.TWISTER,i.DRAGON,g.SPECIAL,40,100,20,20,0,2).attr(uR,w.FLYING).attr(lA).windMove().target(De.ALL_NEAR_ENEMIES),new ge(t.RAIN_DANCE,i.WATER,-1,5,-1,0,2).attr(di,Oe.RAIN).target(De.BOTH_SIDES),new ge(t.SUNNY_DAY,i.FIRE,-1,5,-1,0,2).attr(di,Oe.SUNNY).target(De.BOTH_SIDES),new m(t.CRUNCH,i.DARK,g.PHYSICAL,80,100,15,20,0,2).attr(Ge,[p.DEF],-1).bitingMove(),new m(t.MIRROR_COAT,i.PSYCHIC,g.SPECIAL,-1,100,20,-1,-5,2).attr(Ji,E=>E.category===g.SPECIAL,2).target(De.ATTACKER),new ge(t.PSYCH_UP,i.NORMAL,-1,10,-1,0,2).ignoresSubstitute().attr(ZH),new m(t.EXTREME_SPEED,i.NORMAL,g.PHYSICAL,80,100,5,-1,2,2),new m(t.ANCIENT_POWER,i.ROCK,g.SPECIAL,60,100,5,10,0,2).attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,!0),new m(t.SHADOW_BALL,i.GHOST,g.SPECIAL,80,100,15,20,0,2).attr(Ge,[p.SPDEF],-1).ballBombMove(),new m(t.FUTURE_SIGHT,i.PSYCHIC,g.SPECIAL,120,100,10,-1,0,2).partial().ignoresProtect().attr(Kn,Fe.FUTURE_SIGHT,La.FUTURE_SIGHT_CHARGING,u.t("moveTriggers:foresawAnAttack",{pokemonName:"{USER}"})),new m(t.ROCK_SMASH,i.FIGHTING,g.PHYSICAL,40,100,15,50,0,2).attr(Ge,[p.DEF],-1),new m(t.WHIRLPOOL,i.WATER,g.SPECIAL,35,85,15,-1,0,2).attr(UO,w.WHIRLPOOL).attr(uR,w.UNDERWATER),new m(t.BEAT_UP,i.DARK,g.PHYSICAL,-1,100,10,-1,0,2).attr(CA,jA.BEAT_UP).attr($H).makesContact(!1),new m(t.FAKE_OUT,i.NORMAL,g.PHYSICAL,40,100,10,100,3,3).attr(lA).condition(new co),new m(t.UPROAR,i.NORMAL,g.SPECIAL,90,100,10,-1,0,3).soundBased().target(De.RANDOM_NEAR_ENEMY).partial(),new at(t.STOCKPILE,i.NORMAL,-1,20,-1,0,3).condition(E=>{var A;return(((A=E.getTag(fI))==null?void 0:A.stockpiledCount)??0)<3}).attr(Yt,w.STOCKPILING,!0),new m(t.SPIT_UP,i.NORMAL,g.SPECIAL,-1,-1,10,-1,0,3).condition(z8).attr(R1,100).attr($n,[w.STOCKPILING],!0),new at(t.SWALLOW,i.NORMAL,-1,10,-1,0,3).condition(z8).attr(O1).attr($n,[w.STOCKPILING],!0).triageMove(),new m(t.HEAT_WAVE,i.FIRE,g.SPECIAL,95,90,10,10,0,3).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN).windMove().target(De.ALL_NEAR_ENEMIES),new ge(t.HAIL,i.ICE,-1,10,-1,0,3).attr(di,Oe.HAIL).target(De.BOTH_SIDES),new ge(t.TORMENT,i.DARK,100,15,-1,0,3).ignoresSubstitute().edgeCase().attr(Yt,w.TORMENT,!1,!0,1).reflectable(),new ge(t.FLATTER,i.DARK,100,15,-1,0,3).attr(Ge,[p.SPATK],1).attr(es).reflectable(),new ge(t.WILL_O_WISP,i.FIRE,85,15,-1,0,3).attr(Tt,re.BURN).reflectable(),new ge(t.MEMENTO,i.DARK,100,10,-1,0,3).attr(BI).attr(Ge,[p.ATK,p.SPATK],-2),new m(t.FACADE,i.NORMAL,g.PHYSICAL,70,100,20,-1,0,3).attr(KA,(E,A,s)=>E.status&&(E.status.effect===re.BURN||E.status.effect===re.POISON||E.status.effect===re.TOXIC||E.status.effect===re.PARALYSIS)?2:1).attr(qD),new m(t.FOCUS_PUNCH,i.FIGHTING,g.PHYSICAL,150,100,20,-1,-3,3).attr(BH,(E,A)=>u.t("moveTriggers:isTighteningFocus",{pokemonName:ee(E)})).attr(FD,(E,A,s)=>u.t("moveTriggers:lostFocus",{pokemonName:ee(E)}),E=>!!E.turnData.attacksReceived.find(A=>A.damage)).punchingMove(),new m(t.SMELLING_SALTS,i.NORMAL,g.PHYSICAL,70,100,10,-1,0,3).attr(KA,(E,A,s)=>{var R;return((R=A.status)==null?void 0:R.effect)===re.PARALYSIS?2:1}).attr(IE,!0,re.PARALYSIS),new at(t.FOLLOW_ME,i.NORMAL,-1,20,-1,2,3).attr(Yt,w.CENTER_OF_ATTENTION,!0),new ge(t.NATURE_POWER,i.NORMAL,-1,20,-1,0,3).attr(pM),new at(t.CHARGE,i.ELECTRIC,-1,20,-1,0,3).attr(Ge,[p.SPDEF],1,!0).attr(Yt,w.CHARGED,!0,!1),new ge(t.TAUNT,i.DARK,100,20,-1,0,3).ignoresSubstitute().attr(Yt,w.TAUNT,!1,!0,4).reflectable(),new ge(t.HELPING_HAND,i.NORMAL,-1,20,-1,5,3).attr(Yt,w.HELPING_HAND).ignoresSubstitute().target(De.NEAR_ALLY).condition(Ar),new ge(t.TRICK,i.PSYCHIC,100,10,-1,0,3).unimplemented(),new ge(t.ROLE_PLAY,i.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(YM),new at(t.WISH,i.NORMAL,-1,10,-1,0,3).triageMove().attr(rE,Fe.WISH,2,!0),new at(t.ASSIST,i.NORMAL,-1,20,-1,0,3).attr(DN,Kj,!0),new at(t.INGRAIN,i.GRASS,-1,20,-1,0,3).attr(Yt,w.INGRAIN,!0,!0).attr(Yt,w.IGNORE_FLYING,!0,!0).attr($n,[w.FLOATING],!0),new m(t.SUPERPOWER,i.FIGHTING,g.PHYSICAL,120,100,5,-1,0,3).attr(Ge,[p.ATK,p.DEF],-1,!0),new at(t.MAGIC_COAT,i.PSYCHIC,-1,15,-1,4,3).attr(Yt,w.MAGIC_COAT,!0,!0,0).condition(lR).edgeCase(),new at(t.RECYCLE,i.NORMAL,-1,10,-1,0,3).unimplemented(),new m(t.REVENGE,i.FIGHTING,g.PHYSICAL,60,100,10,-1,-4,3).attr(iM),new m(t.BRICK_BREAK,i.FIGHTING,g.PHYSICAL,75,100,15,-1,0,3).attr(lr),new ge(t.YAWN,i.NORMAL,-1,10,-1,0,3).attr(Yt,w.DROWSY,!1,!0).condition((E,A,s)=>!A.status&&!A.isSafeguarded(E)).reflectable(),new m(t.KNOCK_OFF,i.DARK,g.PHYSICAL,65,100,20,-1,0,3).attr(KA,(E,A,s)=>A.getHeldItems().filter(R=>R.isTransferable).length>0?1.5:1).attr(zD,!1),new m(t.ENDEAVOR,i.NORMAL,g.PHYSICAL,-1,100,5,-1,0,3).attr(mH).condition(yc),new m(t.ERUPTION,i.FIRE,g.SPECIAL,150,100,5,-1,0,3).attr(lo).target(De.ALL_NEAR_ENEMIES),new ge(t.SKILL_SWAP,i.PSYCHIC,-1,10,-1,0,3).ignoresSubstitute().attr(k1),new ge(t.IMPRISON,i.PSYCHIC,100,10,-1,0,3).ignoresSubstitute().attr(rE,Fe.IMPRISON,1,!0,!1).target(De.ENEMY_SIDE),new at(t.REFRESH,i.NORMAL,-1,20,-1,0,3).attr(IE,!0,[re.PARALYSIS,re.POISON,re.TOXIC,re.BURN]).condition((E,A,s)=>!!E.status&&(E.status.effect===re.PARALYSIS||E.status.effect===re.POISON||E.status.effect===re.TOXIC||E.status.effect===re.BURN)),new at(t.GRUDGE,i.GHOST,-1,5,-1,0,3).attr(Yt,w.GRUDGE,!0,void 0,1),new at(t.SNATCH,i.DARK,-1,10,-1,4,3).unimplemented(),new m(t.SECRET_POWER,i.NORMAL,g.PHYSICAL,70,100,20,30,0,3).makesContact(!1).attr(tM),new Ps(t.DIVE,i.WATER,g.PHYSICAL,80,100,10,-1,0,3).chargeText(u.t("moveTriggers:hidUnderwater",{pokemonName:"{USER}"})).chargeAttr(Qn,w.UNDERWATER).chargeAttr(PM),new m(t.ARM_THRUST,i.FIGHTING,g.PHYSICAL,15,100,20,-1,0,3).attr(CA),new at(t.CAMOUFLAGE,i.NORMAL,-1,20,-1,0,3).attr(W1),new at(t.TAIL_GLOW,i.BUG,-1,20,-1,0,3).attr(Ge,[p.SPATK],3,!0),new m(t.LUSTER_PURGE,i.PSYCHIC,g.SPECIAL,95,100,5,50,0,3).attr(Ge,[p.SPDEF],-1),new m(t.MIST_BALL,i.PSYCHIC,g.SPECIAL,95,100,5,50,0,3).attr(Ge,[p.SPATK],-1).ballBombMove(),new ge(t.FEATHER_DANCE,i.FLYING,100,15,-1,0,3).attr(Ge,[p.ATK],-2).danceMove().reflectable(),new ge(t.TEETER_DANCE,i.NORMAL,100,20,-1,0,3).attr(es).danceMove().target(De.ALL_NEAR_OTHERS),new m(t.BLAZE_KICK,i.FIRE,g.PHYSICAL,85,90,10,10,0,3).attr(iE).attr(Tt,re.BURN),new ge(t.MUD_SPORT,i.GROUND,-1,15,-1,0,3).ignoresProtect().attr(rE,Fe.MUD_SPORT,5).target(De.BOTH_SIDES),new m(t.ICE_BALL,i.ICE,g.PHYSICAL,30,90,20,-1,0,3).partial().attr(pr,5,!0,!0,t.DEFENSE_CURL).ballBombMove(),new m(t.NEEDLE_ARM,i.GRASS,g.PHYSICAL,60,100,15,30,0,3).attr(lA),new at(t.SLACK_OFF,i.NORMAL,-1,5,-1,0,3).attr(fs,.5).triageMove(),new m(t.HYPER_VOICE,i.NORMAL,g.SPECIAL,90,100,10,-1,0,3).soundBased().target(De.ALL_NEAR_ENEMIES),new m(t.POISON_FANG,i.POISON,g.PHYSICAL,50,100,15,50,0,3).attr(Tt,re.TOXIC).bitingMove(),new m(t.CRUSH_CLAW,i.NORMAL,g.PHYSICAL,75,95,10,50,0,3).attr(Ge,[p.DEF],-1),new m(t.BLAST_BURN,i.FIRE,g.SPECIAL,150,90,5,-1,0,3).attr(vR),new m(t.HYDRO_CANNON,i.WATER,g.SPECIAL,150,90,5,-1,0,3).attr(vR),new m(t.METEOR_MASH,i.STEEL,g.PHYSICAL,90,90,10,20,0,3).attr(Ge,[p.ATK],1,!0).punchingMove(),new m(t.ASTONISH,i.GHOST,g.PHYSICAL,30,100,15,30,0,3).attr(lA),new m(t.WEATHER_BALL,i.NORMAL,g.SPECIAL,50,100,10,-1,0,3).attr(u1).attr(KA,(E,A,s)=>{const R=a.arena.weather;return R&&[Oe.SUNNY,Oe.RAIN,Oe.SANDSTORM,Oe.HAIL,Oe.SNOW,Oe.FOG,Oe.HEAVY_RAIN,Oe.HARSH_SUN].includes(R.weatherType)&&!R.isEffectSuppressed()?2:1}).ballBombMove(),new ge(t.AROMATHERAPY,i.GRASS,-1,5,-1,0,3).attr(Io,u.t("moveTriggers:soothingAromaWaftedThroughArea"),O.SAP_SIPPER).target(De.PARTY),new ge(t.FAKE_TEARS,i.DARK,100,20,-1,0,3).attr(Ge,[p.SPDEF],-2).reflectable(),new m(t.AIR_CUTTER,i.FLYING,g.SPECIAL,60,95,25,-1,0,3).attr(iE).slicingMove().windMove().target(De.ALL_NEAR_ENEMIES),new m(t.OVERHEAT,i.FIRE,g.SPECIAL,130,90,5,-1,0,3).attr(Ge,[p.SPATK],-2,!0).attr(IE,!0,re.FREEZE),new ge(t.ODOR_SLEUTH,i.NORMAL,-1,40,-1,0,3).attr(ho,w.IGNORE_GHOST).ignoresSubstitute().reflectable(),new m(t.ROCK_TOMB,i.ROCK,g.PHYSICAL,60,95,15,100,0,3).attr(Ge,[p.SPD],-1).makesContact(!1),new m(t.SILVER_WIND,i.BUG,g.SPECIAL,60,100,5,10,0,3).attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,!0).windMove(),new ge(t.METAL_SOUND,i.STEEL,85,40,-1,0,3).attr(Ge,[p.SPDEF],-2).soundBased().reflectable(),new ge(t.GRASS_WHISTLE,i.GRASS,55,15,-1,0,3).attr(Tt,re.SLEEP).soundBased().reflectable(),new ge(t.TICKLE,i.NORMAL,100,20,-1,0,3).attr(Ge,[p.ATK,p.DEF],-1).reflectable(),new at(t.COSMIC_POWER,i.PSYCHIC,-1,20,-1,0,3).attr(Ge,[p.DEF,p.SPDEF],1,!0),new m(t.WATER_SPOUT,i.WATER,g.SPECIAL,150,100,5,-1,0,3).attr(lo).target(De.ALL_NEAR_ENEMIES),new m(t.SIGNAL_BEAM,i.BUG,g.SPECIAL,75,100,15,10,0,3).attr(es),new m(t.SHADOW_PUNCH,i.GHOST,g.PHYSICAL,60,-1,20,-1,0,3).punchingMove(),new m(t.EXTRASENSORY,i.PSYCHIC,g.SPECIAL,80,100,20,10,0,3).attr(lA),new m(t.SKY_UPPERCUT,i.FIGHTING,g.PHYSICAL,85,90,15,-1,0,3).attr(VR,w.FLYING).punchingMove(),new m(t.SAND_TOMB,i.GROUND,g.PHYSICAL,35,85,15,-1,0,3).attr(UO,w.SAND_TOMB).makesContact(!1),new m(t.SHEER_COLD,i.ICE,g.SPECIAL,200,20,5,-1,0,3).attr(_1).attr(En).attr(d1),new m(t.MUDDY_WATER,i.WATER,g.SPECIAL,90,85,10,30,0,3).attr(Ge,[p.ACC],-1).target(De.ALL_NEAR_ENEMIES),new m(t.BULLET_SEED,i.GRASS,g.PHYSICAL,25,100,30,-1,0,3).attr(CA).makesContact(!1).ballBombMove(),new m(t.AERIAL_ACE,i.FLYING,g.PHYSICAL,60,-1,20,-1,0,3).slicingMove(),new m(t.ICICLE_SPEAR,i.ICE,g.PHYSICAL,25,100,30,-1,0,3).attr(CA).makesContact(!1),new at(t.IRON_DEFENSE,i.STEEL,-1,15,-1,0,3).attr(Ge,[p.DEF],2,!0),new ge(t.BLOCK,i.NORMAL,-1,5,-1,0,3).condition(vl).attr(Yt,w.TRAPPED,!1,!0,1).reflectable(),new ge(t.HOWL,i.NORMAL,-1,40,-1,0,3).attr(Ge,[p.ATK],1).soundBased().target(De.USER_AND_ALLIES),new m(t.DRAGON_CLAW,i.DRAGON,g.PHYSICAL,80,100,15,-1,0,3),new m(t.FRENZY_PLANT,i.GRASS,g.SPECIAL,150,90,5,-1,0,3).attr(vR),new at(t.BULK_UP,i.FIGHTING,-1,20,-1,0,3).attr(Ge,[p.ATK,p.DEF],1,!0),new Ps(t.BOUNCE,i.FLYING,g.PHYSICAL,85,85,5,30,0,3).chargeText(u.t("moveTriggers:sprangUp",{pokemonName:"{USER}"})).chargeAttr(Qn,w.FLYING).attr(Tt,re.PARALYSIS).condition(ca),new m(t.MUD_SHOT,i.GROUND,g.SPECIAL,55,95,15,100,0,3).attr(Ge,[p.SPD],-1),new m(t.POISON_TAIL,i.POISON,g.PHYSICAL,50,100,25,10,0,3).attr(iE).attr(Tt,re.POISON),new m(t.COVET,i.NORMAL,g.PHYSICAL,60,100,25,-1,0,3).attr(JD,.3),new m(t.VOLT_TACKLE,i.ELECTRIC,g.PHYSICAL,120,100,15,10,0,3).attr(RR,!1,.33).attr(Tt,re.PARALYSIS).recklessMove(),new m(t.MAGICAL_LEAF,i.GRASS,g.SPECIAL,60,-1,20,-1,0,3),new ge(t.WATER_SPORT,i.WATER,-1,15,-1,0,3).ignoresProtect().attr(rE,Fe.WATER_SPORT,5).target(De.BOTH_SIDES),new at(t.CALM_MIND,i.PSYCHIC,-1,20,-1,0,3).attr(Ge,[p.SPATK,p.SPDEF],1,!0),new m(t.LEAF_BLADE,i.GRASS,g.PHYSICAL,90,100,15,-1,0,3).attr(iE).slicingMove(),new at(t.DRAGON_DANCE,i.DRAGON,-1,20,-1,0,3).attr(Ge,[p.ATK,p.SPD],1,!0).danceMove(),new m(t.ROCK_BLAST,i.ROCK,g.PHYSICAL,25,90,10,-1,0,3).attr(CA).makesContact(!1).ballBombMove(),new m(t.SHOCK_WAVE,i.ELECTRIC,g.SPECIAL,60,-1,20,-1,0,3),new m(t.WATER_PULSE,i.WATER,g.SPECIAL,60,100,20,20,0,3).attr(es).pulseMove(),new m(t.DOOM_DESIRE,i.STEEL,g.SPECIAL,140,100,5,-1,0,3).partial().ignoresProtect().attr(Kn,Fe.DOOM_DESIRE,La.DOOM_DESIRE_CHARGING,u.t("moveTriggers:choseDoomDesireAsDestiny",{pokemonName:"{USER}"})),new m(t.PSYCHO_BOOST,i.PSYCHIC,g.SPECIAL,140,90,5,-1,0,3).attr(Ge,[p.SPATK],-2,!0),new at(t.ROOST,i.FLYING,-1,5,-1,0,4).attr(fs,.5).attr(Yt,w.ROOSTED,!0,!1).triageMove(),new ge(t.GRAVITY,i.PSYCHIC,-1,5,-1,0,4).ignoresProtect().attr(rE,Fe.GRAVITY,5).target(De.BOTH_SIDES),new ge(t.MIRACLE_EYE,i.PSYCHIC,-1,40,-1,0,4).attr(ho,w.IGNORE_DARK).ignoresSubstitute().reflectable(),new m(t.WAKE_UP_SLAP,i.FIGHTING,g.PHYSICAL,70,100,10,-1,0,4).attr(KA,(E,A,s)=>wc(E,A)?2:1).attr(IE,!1,re.SLEEP),new m(t.HAMMER_ARM,i.FIGHTING,g.PHYSICAL,100,90,10,-1,0,4).attr(Ge,[p.SPD],-1,!0).punchingMove(),new m(t.GYRO_BALL,i.STEEL,g.PHYSICAL,-1,100,5,-1,0,4).attr(qH).ballBombMove(),new at(t.HEALING_WISH,i.PSYCHIC,-1,10,-1,0,4).attr(xD,!1,"moveTriggers:sacrificialFullRestore").triageMove().condition(wl),new m(t.BRINE,i.WATER,g.SPECIAL,65,100,10,-1,0,4).attr(KA,(E,A,s)=>A.getHpRatio()<.5?2:1),new m(t.NATURAL_GIFT,i.NORMAL,g.PHYSICAL,-1,100,15,-1,0,4).makesContact(!1).unimplemented(),new m(t.FEINT,i.NORMAL,g.PHYSICAL,30,100,10,-1,2,4).attr($n,[w.PROTECTED]).attr(dM,[Fe.QUICK_GUARD,Fe.WIDE_GUARD,Fe.MAT_BLOCK,Fe.CRAFTY_SHIELD],!1).makesContact(!1).ignoresProtect(),new m(t.PLUCK,i.FLYING,g.PHYSICAL,60,100,20,-1,0,4).attr(jD),new ge(t.TAILWIND,i.FLYING,-1,15,-1,0,4).windMove().attr(rE,Fe.TAILWIND,4,!0).target(De.USER_SIDE),new ge(t.ACUPRESSURE,i.NORMAL,-1,30,-1,0,4).attr(xH).target(De.USER_OR_NEAR_ALLY),new m(t.METAL_BURST,i.STEEL,g.PHYSICAL,-1,100,10,-1,0,4).attr(Ji,E=>E.category===g.PHYSICAL||E.category===g.SPECIAL,1.5).redirectCounter().makesContact(!1).target(De.ATTACKER),new m(t.U_TURN,i.BUG,g.PHYSICAL,70,100,20,-1,0,4).attr(nR,!0),new m(t.CLOSE_COMBAT,i.FIGHTING,g.PHYSICAL,120,100,5,-1,0,4).attr(Ge,[p.DEF,p.SPDEF],-1,!0),new m(t.PAYBACK,i.DARK,g.PHYSICAL,50,100,10,-1,0,4).attr(KA,(E,A,s)=>{var R;return A.getLastXMoves(1).find(n=>n.turn===a.currentBattle.turn)||((R=a.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===OA.BALL?2:1}),new m(t.ASSURANCE,i.DARK,g.PHYSICAL,60,100,10,-1,0,4).attr(KA,(E,A,s)=>A.turnData.damageTaken>0?2:1),new ge(t.EMBARGO,i.DARK,100,15,-1,0,4).reflectable().unimplemented(),new m(t.FLING,i.DARK,g.PHYSICAL,-1,100,10,-1,0,4).makesContact(!1).unimplemented(),new ge(t.PSYCHO_SHIFT,i.PSYCHIC,100,10,-1,0,4).attr(vH).condition((E,A,s)=>{var n;let R=E.hasAbility(O.COMATOSE)?re.SLEEP:void 0;return(n=E.status)!=null&&n.effect&&bb(E.status.effect)&&(R=E.status.effect),!!R&&A.canSetStatus(R,!1,!1,E)}),new m(t.TRUMP_CARD,i.NORMAL,g.SPECIAL,-1,-1,5,-1,0,4).makesContact().attr(QH),new ge(t.HEAL_BLOCK,i.PSYCHIC,100,15,-1,0,4).attr(Yt,w.HEAL_BLOCK,!1,!0,5).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.WRING_OUT,i.NORMAL,g.SPECIAL,-1,100,5,-1,0,4).attr(Co,120).makesContact(),new at(t.POWER_TRICK,i.PSYCHIC,-1,10,-1,0,4).attr(Yt,w.POWER_TRICK,!0),new ge(t.GASTRO_ACID,i.POISON,100,10,-1,0,4).attr(WM).reflectable(),new ge(t.LUCKY_CHANT,i.NORMAL,-1,30,-1,0,4).attr(rE,Fe.NO_CRIT,5,!0,!0).target(De.USER_SIDE),new ge(t.ME_FIRST,i.NORMAL,-1,20,-1,0,4).ignoresSubstitute().target(De.NEAR_ENEMY).unimplemented(),new at(t.COPYCAT,i.NORMAL,-1,20,-1,0,4).attr(SL,!1,Yj),new ge(t.POWER_SWAP,i.PSYCHIC,-1,10,100,0,4).attr(No,[p.ATK,p.SPATK]).ignoresSubstitute(),new ge(t.GUARD_SWAP,i.PSYCHIC,-1,10,100,0,4).attr(No,[p.DEF,p.SPDEF]).ignoresSubstitute(),new m(t.PUNISHMENT,i.DARK,g.PHYSICAL,-1,100,5,-1,0,4).makesContact(!0).attr(A1),new m(t.LAST_RESORT,i.NORMAL,g.PHYSICAL,140,100,5,-1,0,4).attr(ef),new ge(t.WORRY_SEED,i.GRASS,100,10,-1,0,4).attr(FM,O.INSOMNIA).reflectable(),new m(t.SUCKER_PUNCH,i.DARK,g.PHYSICAL,70,100,5,-1,1,4).condition((E,A,s)=>{const R=a.currentBattle.turnCommands[A.getBattlerIndex()];return!R||!R.move?!1:R.command===OA.FIGHT&&!A.turnData.acted&&Ve[R.move.move].category!==g.STATUS}),new ge(t.TOXIC_SPIKES,i.POISON,-1,20,-1,0,4).attr(Sr,Fe.TOXIC_SPIKES).target(De.ENEMY_SIDE).reflectable(),new ge(t.HEART_SWAP,i.PSYCHIC,-1,10,-1,0,4).attr(No,YO).ignoresSubstitute(),new at(t.AQUA_RING,i.WATER,-1,20,-1,0,4).attr(Yt,w.AQUA_RING,!0,!0),new at(t.MAGNET_RISE,i.ELECTRIC,-1,10,-1,0,4).attr(Yt,w.FLOATING,!0,!0,5).condition((E,A,s)=>!a.arena.getTag(Fe.GRAVITY)&&[w.FLOATING,w.IGNORE_FLYING,w.INGRAIN].every(R=>!E.getTag(R))),new m(t.FLARE_BLITZ,i.FIRE,g.PHYSICAL,120,100,15,10,0,4).attr(RR,!1,.33).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN).recklessMove(),new m(t.FORCE_PALM,i.FIGHTING,g.PHYSICAL,60,100,10,30,0,4).attr(Tt,re.PARALYSIS),new m(t.AURA_SPHERE,i.FIGHTING,g.SPECIAL,80,-1,20,-1,0,4).pulseMove().ballBombMove(),new at(t.ROCK_POLISH,i.ROCK,-1,20,-1,0,4).attr(Ge,[p.SPD],2,!0),new m(t.POISON_JAB,i.POISON,g.PHYSICAL,80,100,20,30,0,4).attr(Tt,re.POISON),new m(t.DARK_PULSE,i.DARK,g.SPECIAL,80,100,15,20,0,4).attr(lA).pulseMove(),new m(t.NIGHT_SLASH,i.DARK,g.PHYSICAL,70,100,15,-1,0,4).attr(iE).slicingMove(),new m(t.AQUA_TAIL,i.WATER,g.PHYSICAL,90,90,10,-1,0,4),new m(t.SEED_BOMB,i.GRASS,g.PHYSICAL,80,100,15,-1,0,4).makesContact(!1).ballBombMove(),new m(t.AIR_SLASH,i.FLYING,g.SPECIAL,75,95,15,30,0,4).attr(lA).slicingMove(),new m(t.X_SCISSOR,i.BUG,g.PHYSICAL,80,100,15,-1,0,4).slicingMove(),new m(t.BUG_BUZZ,i.BUG,g.SPECIAL,90,100,10,10,0,4).attr(Ge,[p.SPDEF],-1).soundBased(),new m(t.DRAGON_PULSE,i.DRAGON,g.SPECIAL,85,100,10,-1,0,4).pulseMove(),new m(t.DRAGON_RUSH,i.DRAGON,g.PHYSICAL,100,75,10,20,0,4).attr(Cn).attr(uR,w.MINIMIZED).attr(lA),new m(t.POWER_GEM,i.ROCK,g.SPECIAL,80,100,20,-1,0,4),new m(t.DRAIN_PUNCH,i.FIGHTING,g.PHYSICAL,75,100,10,-1,0,4).attr(Zs).punchingMove().triageMove(),new m(t.VACUUM_WAVE,i.FIGHTING,g.SPECIAL,40,100,30,-1,1,4),new m(t.FOCUS_BLAST,i.FIGHTING,g.SPECIAL,120,70,5,10,0,4).attr(Ge,[p.SPDEF],-1).ballBombMove(),new m(t.ENERGY_BALL,i.GRASS,g.SPECIAL,90,100,10,10,0,4).attr(Ge,[p.SPDEF],-1).ballBombMove(),new m(t.BRAVE_BIRD,i.FLYING,g.PHYSICAL,120,100,15,-1,0,4).attr(RR,!1,.33).recklessMove(),new m(t.EARTH_POWER,i.GROUND,g.SPECIAL,90,100,10,10,0,4).attr(Ge,[p.SPDEF],-1),new ge(t.SWITCHEROO,i.DARK,100,10,-1,0,4).unimplemented(),new m(t.GIGA_IMPACT,i.NORMAL,g.PHYSICAL,150,90,5,-1,0,4).attr(vR),new at(t.NASTY_PLOT,i.DARK,-1,20,-1,0,4).attr(Ge,[p.SPATK],2,!0),new m(t.BULLET_PUNCH,i.STEEL,g.PHYSICAL,40,100,30,-1,1,4).punchingMove(),new m(t.AVALANCHE,i.ICE,g.PHYSICAL,60,100,10,-1,-4,4).attr(iM),new m(t.ICE_SHARD,i.ICE,g.PHYSICAL,40,100,30,-1,1,4).makesContact(!1),new m(t.SHADOW_CLAW,i.GHOST,g.PHYSICAL,70,100,15,-1,0,4).attr(iE),new m(t.THUNDER_FANG,i.ELECTRIC,g.PHYSICAL,65,95,15,10,0,4).attr(lA).attr(Tt,re.PARALYSIS).bitingMove(),new m(t.ICE_FANG,i.ICE,g.PHYSICAL,65,95,15,10,0,4).attr(lA).attr(Tt,re.FREEZE).bitingMove(),new m(t.FIRE_FANG,i.FIRE,g.PHYSICAL,65,95,15,10,0,4).attr(lA).attr(Tt,re.BURN).bitingMove(),new m(t.SHADOW_SNEAK,i.GHOST,g.PHYSICAL,40,100,30,-1,1,4),new m(t.MUD_BOMB,i.GROUND,g.SPECIAL,65,85,10,30,0,4).attr(Ge,[p.ACC],-1).ballBombMove(),new m(t.PSYCHO_CUT,i.PSYCHIC,g.PHYSICAL,70,100,20,-1,0,4).attr(iE).slicingMove().makesContact(!1),new m(t.ZEN_HEADBUTT,i.PSYCHIC,g.PHYSICAL,80,90,15,20,0,4).attr(lA),new m(t.MIRROR_SHOT,i.STEEL,g.SPECIAL,65,85,10,30,0,4).attr(Ge,[p.ACC],-1),new m(t.FLASH_CANNON,i.STEEL,g.SPECIAL,80,100,10,10,0,4).attr(Ge,[p.SPDEF],-1),new m(t.ROCK_CLIMB,i.NORMAL,g.PHYSICAL,90,85,20,20,0,4).attr(es),new ge(t.DEFOG,i.FLYING,-1,15,-1,0,4).attr(Ge,[p.EVA],-1).attr(VH,Oe.FOG).attr(Lr).attr(lr,!1).attr(Nr,!0).attr(dM,[Fe.MIST,Fe.SAFEGUARD],!1).reflectable(),new ge(t.TRICK_ROOM,i.PSYCHIC,-1,5,-1,-7,4).attr(rE,Fe.TRICK_ROOM,5).ignoresProtect().target(De.BOTH_SIDES),new m(t.DRACO_METEOR,i.DRAGON,g.SPECIAL,130,90,5,-1,0,4).attr(Ge,[p.SPATK],-2,!0),new m(t.DISCHARGE,i.ELECTRIC,g.SPECIAL,80,100,15,30,0,4).attr(Tt,re.PARALYSIS).target(De.ALL_NEAR_OTHERS),new m(t.LAVA_PLUME,i.FIRE,g.SPECIAL,80,100,15,30,0,4).attr(Tt,re.BURN).target(De.ALL_NEAR_OTHERS),new m(t.LEAF_STORM,i.GRASS,g.SPECIAL,130,90,5,-1,0,4).attr(Ge,[p.SPATK],-2,!0),new m(t.POWER_WHIP,i.GRASS,g.PHYSICAL,120,85,10,-1,0,4),new m(t.ROCK_WRECKER,i.ROCK,g.PHYSICAL,150,90,5,-1,0,4).attr(vR).makesContact(!1).ballBombMove(),new m(t.CROSS_POISON,i.POISON,g.PHYSICAL,70,100,20,10,0,4).attr(iE).attr(Tt,re.POISON).slicingMove(),new m(t.GUNK_SHOT,i.POISON,g.PHYSICAL,120,80,5,30,0,4).attr(Tt,re.POISON).makesContact(!1),new m(t.IRON_HEAD,i.STEEL,g.PHYSICAL,80,100,15,30,0,4).attr(lA),new m(t.MAGNET_BOMB,i.STEEL,g.PHYSICAL,60,-1,20,-1,0,4).makesContact(!1).ballBombMove(),new m(t.STONE_EDGE,i.ROCK,g.PHYSICAL,100,80,5,-1,0,4).attr(iE).makesContact(!1),new ge(t.CAPTIVATE,i.NORMAL,100,20,-1,0,4).attr(Ge,[p.SPATK],-2).condition((E,A,s)=>A.isOppositeGender(E)).target(De.ALL_NEAR_ENEMIES).reflectable(),new ge(t.STEALTH_ROCK,i.ROCK,-1,20,-1,0,4).attr(Sr,Fe.STEALTH_ROCK).target(De.ENEMY_SIDE).reflectable(),new m(t.GRASS_KNOT,i.GRASS,g.SPECIAL,-1,100,20,-1,0,4).attr(RM).makesContact(),new m(t.CHATTER,i.FLYING,g.SPECIAL,65,100,20,100,0,4).attr(es).soundBased(),new m(t.JUDGMENT,i.NORMAL,g.SPECIAL,100,100,10,-1,0,4).attr(DM),new m(t.BUG_BITE,i.BUG,g.PHYSICAL,60,100,20,-1,0,4).attr(jD),new m(t.CHARGE_BEAM,i.ELECTRIC,g.SPECIAL,50,90,10,70,0,4).attr(Ge,[p.SPATK],1,!0),new m(t.WOOD_HAMMER,i.GRASS,g.PHYSICAL,120,100,15,-1,0,4).attr(RR,!1,.33).recklessMove(),new m(t.AQUA_JET,i.WATER,g.PHYSICAL,40,100,20,-1,1,4),new m(t.ATTACK_ORDER,i.BUG,g.PHYSICAL,90,100,15,-1,0,4).attr(iE).makesContact(!1),new at(t.DEFEND_ORDER,i.BUG,-1,10,-1,0,4).attr(Ge,[p.DEF,p.SPDEF],1,!0),new at(t.HEAL_ORDER,i.BUG,-1,5,-1,0,4).attr(fs,.5).triageMove(),new m(t.HEAD_SMASH,i.ROCK,g.PHYSICAL,150,80,5,-1,0,4).attr(RR,!1,.5).recklessMove(),new m(t.DOUBLE_HIT,i.NORMAL,g.PHYSICAL,35,90,10,-1,0,4).attr(CA,jA._2),new m(t.ROAR_OF_TIME,i.DRAGON,g.SPECIAL,150,90,5,-1,0,4).attr(vR),new m(t.SPACIAL_REND,i.DRAGON,g.SPECIAL,100,95,5,-1,0,4).attr(iE),new at(t.LUNAR_DANCE,i.PSYCHIC,-1,10,-1,0,4).attr(xD,!0,"moveTriggers:lunarDanceRestore").danceMove().triageMove().condition(wl),new m(t.CRUSH_GRIP,i.NORMAL,g.PHYSICAL,-1,100,5,-1,0,4).attr(Co,120),new m(t.MAGMA_STORM,i.FIRE,g.SPECIAL,100,75,5,-1,0,4).attr(UO,w.MAGMA_STORM),new ge(t.DARK_VOID,i.DARK,80,10,-1,0,4).attr(Tt,re.SLEEP).target(De.ALL_NEAR_ENEMIES).reflectable(),new m(t.SEED_FLARE,i.GRASS,g.SPECIAL,120,85,5,40,0,4).attr(Ge,[p.SPDEF],-2),new m(t.OMINOUS_WIND,i.GHOST,g.SPECIAL,60,100,5,10,0,4).attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,!0).windMove(),new Ps(t.SHADOW_FORCE,i.GHOST,g.PHYSICAL,120,100,5,-1,0,4).chargeText(u.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(Qn,w.HIDDEN).ignoresProtect(),new at(t.HONE_CLAWS,i.DARK,-1,15,-1,0,5).attr(Ge,[p.ATK,p.ACC],1,!0),new ge(t.WIDE_GUARD,i.ROCK,-1,10,-1,3,5).target(De.USER_SIDE).attr(rE,Fe.WIDE_GUARD,1,!0,!0).condition(lR),new ge(t.GUARD_SPLIT,i.PSYCHIC,-1,10,-1,0,5).attr(yM,[p.DEF,p.SPDEF],"moveTriggers:sharedGuard"),new ge(t.POWER_SPLIT,i.PSYCHIC,-1,10,-1,0,5).attr(yM,[p.ATK,p.SPATK],"moveTriggers:sharedPower"),new ge(t.WONDER_ROOM,i.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(De.BOTH_SIDES).unimplemented(),new m(t.PSYSHOCK,i.PSYCHIC,g.SPECIAL,80,100,10,-1,0,5).attr(Uo),new m(t.VENOSHOCK,i.POISON,g.SPECIAL,65,100,10,-1,0,5).attr(KA,(E,A,s)=>A.status&&(A.status.effect===re.POISON||A.status.effect===re.TOXIC)?2:1),new at(t.AUTOTOMIZE,i.STEEL,-1,15,-1,0,5).attr(Ge,[p.SPD],2,!0).attr(Yt,w.AUTOTOMIZED,!0),new at(t.RAGE_POWDER,i.BUG,-1,20,-1,2,5).powderMove().attr(Yt,w.CENTER_OF_ATTENTION,!0),new ge(t.TELEKINESIS,i.PSYCHIC,-1,15,-1,0,5).condition(ca).condition((E,A,s)=>![e.DIGLETT,e.DUGTRIO,e.ALOLA_DIGLETT,e.ALOLA_DUGTRIO,e.SANDYGAST,e.PALOSSAND,e.WIGLETT,e.WUGTRIO].includes(A.species.speciesId)).condition((E,A,s)=>!(A.species.speciesId===e.GENGAR&&A.getFormKey()==="mega")).condition((E,A,s)=>Pe(A.getTag(w.INGRAIN))&&Pe(A.getTag(w.IGNORE_FLYING))).attr(Yt,w.TELEKINESIS,!1,!0,3).attr(Yt,w.FLOATING,!1,!0,3).reflectable(),new ge(t.MAGIC_ROOM,i.PSYCHIC,-1,10,-1,0,5).ignoresProtect().target(De.BOTH_SIDES).unimplemented(),new m(t.SMACK_DOWN,i.ROCK,g.PHYSICAL,50,100,15,100,0,5).attr(_M).attr(Yt,w.INTERRUPTED).attr($n,[w.FLYING,w.FLOATING,w.TELEKINESIS]).attr(VR,w.FLYING).makesContact(!1),new m(t.STORM_THROW,i.FIGHTING,g.PHYSICAL,60,100,10,-1,0,5).attr(hn),new m(t.FLAME_BURST,i.FIRE,g.SPECIAL,70,100,15,-1,0,5).attr(YH),new m(t.SLUDGE_WAVE,i.POISON,g.SPECIAL,95,100,10,10,0,5).attr(Tt,re.POISON).target(De.ALL_NEAR_OTHERS),new at(t.QUIVER_DANCE,i.BUG,-1,20,-1,0,5).attr(Ge,[p.SPATK,p.SPDEF,p.SPD],1,!0).danceMove(),new m(t.HEAVY_SLAM,i.STEEL,g.PHYSICAL,-1,100,10,-1,0,5).attr(Cn).attr(nM).attr(uR,w.MINIMIZED),new m(t.SYNCHRONOISE,i.PSYCHIC,g.SPECIAL,120,100,10,-1,0,5).target(De.ALL_NEAR_OTHERS).condition(Zj).attr(sf),new m(t.ELECTRO_BALL,i.ELECTRIC,g.SPECIAL,-1,100,10,-1,0,5).attr(jH).ballBombMove(),new ge(t.SOAK,i.WATER,100,20,-1,0,5).attr(BM,i.WATER).reflectable(),new m(t.FLAME_CHARGE,i.FIRE,g.PHYSICAL,50,100,20,100,0,5).attr(Ge,[p.SPD],1,!0),new at(t.COIL,i.POISON,-1,20,-1,0,5).attr(Ge,[p.ATK,p.DEF,p.ACC],1,!0),new m(t.LOW_SWEEP,i.FIGHTING,g.PHYSICAL,65,100,20,100,0,5).attr(Ge,[p.SPD],-1),new m(t.ACID_SPRAY,i.POISON,g.SPECIAL,40,100,20,100,0,5).attr(Ge,[p.SPDEF],-2).ballBombMove(),new m(t.FOUL_PLAY,i.DARK,g.PHYSICAL,95,100,15,-1,0,5).attr(I1),new ge(t.SIMPLE_BEAM,i.NORMAL,100,15,-1,0,5).attr(FM,O.SIMPLE).reflectable(),new ge(t.ENTRAINMENT,i.NORMAL,100,15,-1,0,5).attr(b1).reflectable(),new ge(t.AFTER_YOU,i.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().target(De.NEAR_OTHER).condition(Ar).condition((E,A,s)=>!A.turnData.acted).attr(tf),new m(t.ROUND,i.NORMAL,g.SPECIAL,60,100,15,-1,0,5).attr(a1).attr(n1).soundBased(),new m(t.ECHOED_VOICE,i.NORMAL,g.SPECIAL,40,100,15,-1,0,5).attr(zH,5,!1).soundBased(),new m(t.CHIP_AWAY,i.NORMAL,g.PHYSICAL,70,100,20,-1,0,5).attr(OI),new m(t.CLEAR_SMOG,i.POISON,g.SPECIAL,50,-1,15,-1,0,5).attr(So,!1),new m(t.STORED_POWER,i.PSYCHIC,g.SPECIAL,20,100,10,-1,0,5).attr(rM),new ge(t.QUICK_GUARD,i.FIGHTING,-1,15,-1,3,5).target(De.USER_SIDE).attr(rE,Fe.QUICK_GUARD,1,!0,!0).condition(lR),new at(t.ALLY_SWITCH,i.PSYCHIC,-1,15,-1,2,5).ignoresProtect().unimplemented(),new m(t.SCALD,i.WATER,g.SPECIAL,80,100,15,30,0,5).attr(IE,!1,re.FREEZE).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN),new at(t.SHELL_SMASH,i.NORMAL,-1,15,-1,0,5).attr(Ge,[p.ATK,p.SPATK,p.SPD],2,!0).attr(Ge,[p.DEF,p.SPDEF],-1,!0),new ge(t.HEAL_PULSE,i.PSYCHIC,-1,10,-1,0,5).attr(fs,.5,!1,!1).pulseMove().triageMove().reflectable(),new m(t.HEX,i.GHOST,g.SPECIAL,65,100,10,-1,0,5).attr(KA,(E,A,s)=>A.status||A.hasAbility(O.COMATOSE)?2:1),new Ps(t.SKY_DROP,i.FLYING,g.PHYSICAL,60,100,10,-1,0,5).chargeText(u.t("moveTriggers:tookTargetIntoSky",{pokemonName:"{USER}",targetName:"{TARGET}"})).chargeAttr(Qn,w.FLYING).condition(ca).condition((E,A,s)=>!A.getTag(w.SUBSTITUTE)).partial(),new at(t.SHIFT_GEAR,i.STEEL,-1,10,-1,0,5).attr(Ge,[p.ATK],1,!0).attr(Ge,[p.SPD],2,!0),new m(t.CIRCLE_THROW,i.FIGHTING,g.PHYSICAL,60,90,10,-1,-6,5).attr(nR,!1,uA.FORCE_SWITCH).hidesTarget(),new m(t.INCINERATE,i.FIRE,g.SPECIAL,60,100,15,-1,0,5).target(De.ALL_NEAR_ENEMIES).attr(zD,!0),new ge(t.QUASH,i.DARK,100,15,-1,0,5).condition(Ar).condition((E,A,s)=>!A.turnData.acted).attr(Af),new m(t.ACROBATICS,i.FLYING,g.PHYSICAL,55,100,15,-1,0,5).attr(KA,(E,A,s)=>Math.max(1,2-.2*E.getHeldItems().filter(R=>R.isTransferable).reduce((R,n)=>R+n.stackCount,0))),new ge(t.REFLECT_TYPE,i.NORMAL,-1,15,-1,0,5).ignoresSubstitute().attr(Y1),new m(t.RETALIATE,i.NORMAL,g.PHYSICAL,70,100,5,-1,0,5).attr(KA,(E,A,s)=>{const R=a.currentBattle.turn,n=a.currentBattle.playerFaintsHistory[a.currentBattle.playerFaintsHistory.length-1],I=a.currentBattle.enemyFaintsHistory[a.currentBattle.enemyFaintsHistory.length-1];return n!==void 0&&R-n.turn===1&&E.isPlayer()||I!==void 0&&R-I.turn===1&&!E.isPlayer()?2:1}),new m(t.FINAL_GAMBIT,i.FIGHTING,g.SPECIAL,-1,100,5,-1,0,5).attr(gH).attr(BI),new ge(t.BESTOW,i.NORMAL,-1,15,-1,0,5).ignoresProtect().ignoresSubstitute().unimplemented(),new m(t.INFERNO,i.FIRE,g.SPECIAL,100,50,5,100,0,5).attr(Tt,re.BURN),new m(t.WATER_PLEDGE,i.WATER,g.SPECIAL,80,100,10,-1,0,5).attr(oo).attr(Mo).attr(uo).attr(Kr).attr(Ba,Fe.WATER_FIRE_PLEDGE,t.FIRE_PLEDGE,!0).attr(Ba,Fe.GRASS_WATER_PLEDGE,t.GRASS_PLEDGE).attr(zi,!0),new m(t.FIRE_PLEDGE,i.FIRE,g.SPECIAL,80,100,10,-1,0,5).attr(oo).attr(Mo).attr(uo).attr(Kr).attr(Ba,Fe.FIRE_GRASS_PLEDGE,t.GRASS_PLEDGE).attr(Ba,Fe.WATER_FIRE_PLEDGE,t.WATER_PLEDGE,!0).attr(zi,!0),new m(t.GRASS_PLEDGE,i.GRASS,g.SPECIAL,80,100,10,-1,0,5).attr(oo).attr(Mo).attr(uo).attr(Kr).attr(Ba,Fe.GRASS_WATER_PLEDGE,t.WATER_PLEDGE).attr(Ba,Fe.FIRE_GRASS_PLEDGE,t.FIRE_PLEDGE).attr(zi,!0),new m(t.VOLT_SWITCH,i.ELECTRIC,g.SPECIAL,70,100,20,-1,0,5).attr(nR,!0),new m(t.STRUGGLE_BUG,i.BUG,g.SPECIAL,50,100,20,100,0,5).attr(Ge,[p.SPATK],-1).target(De.ALL_NEAR_ENEMIES),new m(t.BULLDOZE,i.GROUND,g.PHYSICAL,60,100,20,100,0,5).attr(Ge,[p.SPD],-1).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.GRASSY&&A.isGrounded()?.5:1).makesContact(!1).target(De.ALL_NEAR_OTHERS),new m(t.FROST_BREATH,i.ICE,g.SPECIAL,60,90,10,100,0,5).attr(hn),new m(t.DRAGON_TAIL,i.DRAGON,g.PHYSICAL,60,90,10,-1,-6,5).attr(nR,!1,uA.FORCE_SWITCH).hidesTarget(),new at(t.WORK_UP,i.NORMAL,-1,30,-1,0,5).attr(Ge,[p.ATK,p.SPATK],1,!0),new m(t.ELECTROWEB,i.ELECTRIC,g.SPECIAL,55,95,15,100,0,5).attr(Ge,[p.SPD],-1).target(De.ALL_NEAR_ENEMIES),new m(t.WILD_CHARGE,i.ELECTRIC,g.PHYSICAL,90,100,15,-1,0,5).attr(RR).recklessMove(),new m(t.DRILL_RUN,i.GROUND,g.PHYSICAL,80,95,10,-1,0,5).attr(iE),new m(t.DUAL_CHOP,i.DRAGON,g.PHYSICAL,40,90,15,-1,0,5).attr(CA,jA._2),new m(t.HEART_STAMP,i.PSYCHIC,g.PHYSICAL,60,100,25,30,0,5).attr(lA),new m(t.HORN_LEECH,i.GRASS,g.PHYSICAL,75,100,10,-1,0,5).attr(Zs).triageMove(),new m(t.SACRED_SWORD,i.FIGHTING,g.PHYSICAL,90,100,15,-1,0,5).attr(OI).slicingMove(),new m(t.RAZOR_SHELL,i.WATER,g.PHYSICAL,75,95,10,50,0,5).attr(Ge,[p.DEF],-1).slicingMove(),new m(t.HEAT_CRASH,i.FIRE,g.PHYSICAL,-1,100,10,-1,0,5).attr(Cn).attr(nM).attr(uR,w.MINIMIZED),new m(t.LEAF_TORNADO,i.GRASS,g.SPECIAL,65,90,10,50,0,5).attr(Ge,[p.ACC],-1),new m(t.STEAMROLLER,i.BUG,g.PHYSICAL,65,100,20,30,0,5).attr(Cn).attr(uR,w.MINIMIZED).attr(lA),new at(t.COTTON_GUARD,i.GRASS,-1,10,-1,0,5).attr(Ge,[p.DEF],3,!0),new m(t.NIGHT_DAZE,i.DARK,g.SPECIAL,85,95,10,40,0,5).attr(Ge,[p.ACC],-1),new m(t.PSYSTRIKE,i.PSYCHIC,g.SPECIAL,100,100,10,-1,0,5).attr(Uo),new m(t.TAIL_SLAP,i.NORMAL,g.PHYSICAL,25,85,10,-1,0,5).attr(CA),new m(t.HURRICANE,i.FLYING,g.SPECIAL,110,70,10,30,0,5).attr(NM).attr(es).attr(VR,w.FLYING).windMove(),new m(t.HEAD_CHARGE,i.NORMAL,g.PHYSICAL,120,100,15,-1,0,5).attr(RR).recklessMove(),new m(t.GEAR_GRIND,i.STEEL,g.PHYSICAL,50,85,15,-1,0,5).attr(CA,jA._2),new m(t.SEARING_SHOT,i.FIRE,g.SPECIAL,100,100,5,30,0,5).attr(Tt,re.BURN).ballBombMove().target(De.ALL_NEAR_OTHERS),new m(t.TECHNO_BLAST,i.NORMAL,g.SPECIAL,120,100,5,-1,0,5).attr(S1),new m(t.RELIC_SONG,i.NORMAL,g.SPECIAL,75,100,10,10,0,5).attr(Tt,re.SLEEP).soundBased().target(De.ALL_NEAR_ENEMIES),new m(t.SECRET_SWORD,i.FIGHTING,g.SPECIAL,85,100,10,-1,0,5).attr(Uo).slicingMove(),new m(t.GLACIATE,i.ICE,g.SPECIAL,65,95,10,100,0,5).attr(Ge,[p.SPD],-1).target(De.ALL_NEAR_ENEMIES),new m(t.BOLT_STRIKE,i.ELECTRIC,g.PHYSICAL,130,85,5,20,0,5).attr(Tt,re.PARALYSIS),new m(t.BLUE_FLARE,i.FIRE,g.SPECIAL,130,85,5,20,0,5).attr(Tt,re.BURN),new m(t.FIERY_DANCE,i.FIRE,g.SPECIAL,80,100,10,50,0,5).attr(Ge,[p.SPATK],1,!0).danceMove(),new Ps(t.FREEZE_SHOCK,i.ICE,g.PHYSICAL,140,90,5,30,0,5).chargeText(u.t("moveTriggers:becameCloakedInFreezingLight",{pokemonName:"{USER}"})).attr(Tt,re.PARALYSIS).makesContact(!1),new Ps(t.ICE_BURN,i.ICE,g.SPECIAL,140,90,5,30,0,5).chargeText(u.t("moveTriggers:becameCloakedInFreezingAir",{pokemonName:"{USER}"})).attr(Tt,re.BURN),new m(t.SNARL,i.DARK,g.SPECIAL,55,95,15,100,0,5).attr(Ge,[p.SPATK],-1).soundBased().target(De.ALL_NEAR_ENEMIES),new m(t.ICICLE_CRASH,i.ICE,g.PHYSICAL,85,90,10,30,0,5).attr(lA).makesContact(!1),new m(t.V_CREATE,i.FIRE,g.PHYSICAL,180,95,5,-1,0,5).attr(Ge,[p.DEF,p.SPDEF,p.SPD],-1,!0),new m(t.FUSION_FLARE,i.FIRE,g.SPECIAL,100,100,5,-1,0,5).attr(IE,!0,re.FREEZE).attr(oM,t.FUSION_BOLT),new m(t.FUSION_BOLT,i.ELECTRIC,g.PHYSICAL,100,100,5,-1,0,5).attr(oM,t.FUSION_FLARE).makesContact(!1),new m(t.FLYING_PRESS,i.FIGHTING,g.PHYSICAL,100,95,10,-1,0,6).attr(Cn).attr(P1).attr(uR,w.MINIMIZED).condition(ca),new ge(t.MAT_BLOCK,i.FIGHTING,-1,10,-1,0,6).target(De.USER_SIDE).attr(rE,Fe.MAT_BLOCK,1,!0,!0).condition(new co).condition(lR),new m(t.BELCH,i.POISON,g.SPECIAL,120,90,10,-1,0,6).condition((E,A,s)=>E.battleData.berriesEaten.length>0),new ge(t.ROTOTILLER,i.GROUND,-1,10,-1,0,6).target(De.ALL).condition((E,A,s)=>[...a.getEnemyParty(),...a.getPlayerParty()].some(R=>R.isOfType(i.GRASS)&&R.isGrounded())).attr(Ge,[p.ATK,p.SPATK],1,!1,{condition:o((E,A,s)=>A.isOfType(i.GRASS)&&A.isGrounded(),"condition")}),new ge(t.STICKY_WEB,i.BUG,-1,20,-1,0,6).attr(Sr,Fe.STICKY_WEB).target(De.ENEMY_SIDE).reflectable(),new m(t.FELL_STINGER,i.BUG,g.PHYSICAL,50,100,25,-1,0,6).attr(AM,[p.ATK],3,!0),new Ps(t.PHANTOM_FORCE,i.GHOST,g.PHYSICAL,90,100,10,-1,0,6).chargeText(u.t("moveTriggers:vanishedInstantly",{pokemonName:"{USER}"})).chargeAttr(Qn,w.HIDDEN).ignoresProtect(),new ge(t.TRICK_OR_TREAT,i.GHOST,100,20,-1,0,6).attr(gM,i.GHOST).reflectable(),new ge(t.NOBLE_ROAR,i.NORMAL,100,30,-1,0,6).attr(Ge,[p.ATK,p.SPATK],-1).soundBased().reflectable(),new ge(t.ION_DELUGE,i.ELECTRIC,-1,25,-1,1,6).attr(rE,Fe.ION_DELUGE).target(De.BOTH_SIDES),new m(t.PARABOLIC_CHARGE,i.ELECTRIC,g.SPECIAL,65,100,20,-1,0,6).attr(Zs).target(De.ALL_NEAR_OTHERS).triageMove(),new ge(t.FORESTS_CURSE,i.GRASS,100,20,-1,0,6).attr(gM,i.GRASS).reflectable(),new m(t.PETAL_BLIZZARD,i.GRASS,g.PHYSICAL,90,100,15,-1,0,6).windMove().makesContact(!1).target(De.ALL_NEAR_OTHERS),new m(t.FREEZE_DRY,i.ICE,g.SPECIAL,70,100,20,10,0,6).attr(Tt,re.FREEZE).attr(G1),new m(t.DISARMING_VOICE,i.FAIRY,g.SPECIAL,40,-1,15,-1,0,6).soundBased().target(De.ALL_NEAR_ENEMIES),new ge(t.PARTING_SHOT,i.DARK,100,20,-1,0,6).attr(Ge,[p.ATK,p.SPATK],-1,!1,{trigger:kA.PRE_APPLY}).attr(nR,!0).soundBased().reflectable(),new ge(t.TOPSY_TURVY,i.DARK,-1,20,-1,0,6).attr(XH).reflectable(),new m(t.DRAINING_KISS,i.FAIRY,g.SPECIAL,50,100,10,-1,0,6).attr(Zs,.75).makesContact().triageMove(),new ge(t.CRAFTY_SHIELD,i.FAIRY,-1,10,-1,3,6).target(De.USER_SIDE).attr(rE,Fe.CRAFTY_SHIELD,1,!0,!0).condition(lR),new ge(t.FLOWER_SHIELD,i.FAIRY,-1,10,-1,0,6).target(De.ALL).attr(Ge,[p.DEF],1,!1,{condition:o((E,A,s)=>A.getTypes().includes(i.GRASS)&&!A.getTag(Ra),"condition")}),new ge(t.GRASSY_TERRAIN,i.GRASS,-1,10,-1,0,6).attr(Hi,Nt.GRASSY).target(De.BOTH_SIDES),new ge(t.MISTY_TERRAIN,i.FAIRY,-1,10,-1,0,6).attr(Hi,Nt.MISTY).target(De.BOTH_SIDES),new ge(t.ELECTRIFY,i.ELECTRIC,-1,20,-1,0,6).attr(Yt,w.ELECTRIFIED,!1,!0),new m(t.PLAY_ROUGH,i.FAIRY,g.PHYSICAL,90,90,10,10,0,6).attr(Ge,[p.ATK],-1),new m(t.FAIRY_WIND,i.FAIRY,g.SPECIAL,40,100,30,-1,0,6).windMove(),new m(t.MOONBLAST,i.FAIRY,g.SPECIAL,95,100,15,30,0,6).attr(Ge,[p.SPATK],-1),new m(t.BOOMBURST,i.NORMAL,g.SPECIAL,140,100,10,-1,0,6).soundBased().target(De.ALL_NEAR_OTHERS),new ge(t.FAIRY_LOCK,i.FAIRY,-1,10,-1,0,6).ignoresSubstitute().ignoresProtect().target(De.BOTH_SIDES).attr(rE,Fe.FAIRY_LOCK,2,!0),new at(t.KINGS_SHIELD,i.STEEL,-1,10,-1,4,6).attr(OO,w.KINGS_SHIELD).condition(lR),new ge(t.PLAY_NICE,i.NORMAL,-1,20,-1,0,6).attr(Ge,[p.ATK],-1).ignoresSubstitute().reflectable(),new ge(t.CONFIDE,i.NORMAL,-1,20,-1,0,6).attr(Ge,[p.SPATK],-1).soundBased().reflectable(),new m(t.DIAMOND_STORM,i.ROCK,g.PHYSICAL,100,95,5,50,0,6).attr(Ge,[p.DEF],2,!0,{firstTargetOnly:!0}).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.STEAM_ERUPTION,i.WATER,g.SPECIAL,110,95,5,30,0,6).attr(IE,!0,re.FREEZE).attr(IE,!1,re.FREEZE).attr(Tt,re.BURN),new m(t.HYPERSPACE_HOLE,i.PSYCHIC,g.SPECIAL,80,-1,5,-1,0,6).ignoresProtect().ignoresSubstitute(),new m(t.WATER_SHURIKEN,i.WATER,g.SPECIAL,15,100,20,-1,1,6).attr(CA).attr(s1).attr(wH),new m(t.MYSTICAL_FIRE,i.FIRE,g.SPECIAL,75,100,10,100,0,6).attr(Ge,[p.SPATK],-1),new at(t.SPIKY_SHIELD,i.GRASS,-1,10,-1,4,6).attr(OO,w.SPIKY_SHIELD).condition(lR),new ge(t.AROMATIC_MIST,i.FAIRY,-1,20,-1,0,6).attr(Ge,[p.SPDEF],1).ignoresSubstitute().condition(Ar).target(De.NEAR_ALLY),new ge(t.EERIE_IMPULSE,i.ELECTRIC,100,15,-1,0,6).attr(Ge,[p.SPATK],-2).reflectable(),new ge(t.VENOM_DRENCH,i.POISON,100,20,-1,0,6).attr(Ge,[p.ATK,p.SPATK,p.SPD],-1,!1,{condition:o((E,A,s)=>{var R,n;return((R=A.status)==null?void 0:R.effect)===re.POISON||((n=A.status)==null?void 0:n.effect)===re.TOXIC},"condition")}).target(De.ALL_NEAR_ENEMIES).reflectable(),new ge(t.POWDER,i.BUG,100,20,-1,1,6).attr(Yt,w.POWDER,!1,!0).ignoresSubstitute().powderMove().reflectable(),new fH(t.GEOMANCY,i.FAIRY,-1,10,-1,0,6).chargeText(u.t("moveTriggers:isChargingPower",{pokemonName:"{USER}"})).attr(Ge,[p.SPATK,p.SPDEF,p.SPD],2,!0),new ge(t.MAGNETIC_FLUX,i.ELECTRIC,-1,20,-1,0,6).attr(Ge,[p.DEF,p.SPDEF],1,!1,{condition:o((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(De.USER_AND_ALLIES).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(n=>R==null?void 0:R.hasAbility(n,!1)))),new ge(t.HAPPY_HOUR,i.NORMAL,-1,30,-1,0,6).attr(rE,Fe.HAPPY_HOUR,null,!0).target(De.USER_SIDE),new ge(t.ELECTRIC_TERRAIN,i.ELECTRIC,-1,10,-1,0,6).attr(Hi,Nt.ELECTRIC).target(De.BOTH_SIDES),new m(t.DAZZLING_GLEAM,i.FAIRY,g.SPECIAL,80,100,10,-1,0,6).target(De.ALL_NEAR_ENEMIES),new at(t.CELEBRATE,i.NORMAL,-1,40,-1,0,6).attr(FH),new ge(t.HOLD_HANDS,i.NORMAL,-1,40,-1,0,6).ignoresSubstitute().target(De.NEAR_ALLY),new ge(t.BABY_DOLL_EYES,i.FAIRY,100,30,-1,1,6).attr(Ge,[p.ATK],-1).reflectable(),new m(t.NUZZLE,i.ELECTRIC,g.PHYSICAL,20,100,20,100,0,6).attr(Tt,re.PARALYSIS),new m(t.HOLD_BACK,i.NORMAL,g.PHYSICAL,40,100,40,-1,0,6).attr(wD),new m(t.INFESTATION,i.BUG,g.SPECIAL,20,100,20,-1,0,6).makesContact().attr(UO,w.INFESTATION),new m(t.POWER_UP_PUNCH,i.FIGHTING,g.PHYSICAL,40,100,20,100,0,6).attr(Ge,[p.ATK],1,!0).punchingMove(),new m(t.OBLIVION_WING,i.FLYING,g.SPECIAL,80,100,10,-1,0,6).attr(Zs,.75).triageMove(),new m(t.THOUSAND_ARROWS,i.GROUND,g.PHYSICAL,90,100,10,-1,0,6).attr(MM).attr(_M).attr(VR,w.FLYING).attr(VR,w.FLOATING).attr(Yt,w.INTERRUPTED).attr($n,[w.FLYING,w.FLOATING,w.TELEKINESIS]).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.THOUSAND_WAVES,i.GROUND,g.PHYSICAL,90,100,10,-1,0,6).attr(Yt,w.TRAPPED,!1,!1,1,1,!0).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.LANDS_WRATH,i.GROUND,g.PHYSICAL,90,100,10,-1,0,6).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.LIGHT_OF_RUIN,i.FAIRY,g.SPECIAL,140,90,5,-1,0,6).attr(RR,!1,.5).recklessMove(),new m(t.ORIGIN_PULSE,i.WATER,g.SPECIAL,110,85,10,-1,0,6).pulseMove().target(De.ALL_NEAR_ENEMIES),new m(t.PRECIPICE_BLADES,i.GROUND,g.PHYSICAL,120,85,10,-1,0,6).makesContact(!1).target(De.ALL_NEAR_ENEMIES),new m(t.DRAGON_ASCENT,i.FLYING,g.PHYSICAL,120,100,5,-1,0,6).attr(Ge,[p.DEF,p.SPDEF],-1,!0),new m(t.HYPERSPACE_FURY,i.DARK,g.PHYSICAL,100,-1,5,-1,0,6).attr(Ge,[p.DEF],-1,!0).ignoresSubstitute().makesContact(!1).ignoresProtect(),new m(t.BREAKNECK_BLITZ__PHYSICAL,i.NORMAL,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.BREAKNECK_BLITZ__SPECIAL,i.NORMAL,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.ALL_OUT_PUMMELING__PHYSICAL,i.FIGHTING,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.ALL_OUT_PUMMELING__SPECIAL,i.FIGHTING,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SUPERSONIC_SKYSTRIKE__PHYSICAL,i.FLYING,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SUPERSONIC_SKYSTRIKE__SPECIAL,i.FLYING,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.ACID_DOWNPOUR__PHYSICAL,i.POISON,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.ACID_DOWNPOUR__SPECIAL,i.POISON,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.TECTONIC_RAGE__PHYSICAL,i.GROUND,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.TECTONIC_RAGE__SPECIAL,i.GROUND,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.CONTINENTAL_CRUSH__PHYSICAL,i.ROCK,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.CONTINENTAL_CRUSH__SPECIAL,i.ROCK,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SAVAGE_SPIN_OUT__PHYSICAL,i.BUG,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SAVAGE_SPIN_OUT__SPECIAL,i.BUG,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.NEVER_ENDING_NIGHTMARE__PHYSICAL,i.GHOST,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.NEVER_ENDING_NIGHTMARE__SPECIAL,i.GHOST,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.CORKSCREW_CRASH__PHYSICAL,i.STEEL,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.CORKSCREW_CRASH__SPECIAL,i.STEEL,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.INFERNO_OVERDRIVE__PHYSICAL,i.FIRE,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.INFERNO_OVERDRIVE__SPECIAL,i.FIRE,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.HYDRO_VORTEX__PHYSICAL,i.WATER,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.HYDRO_VORTEX__SPECIAL,i.WATER,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.BLOOM_DOOM__PHYSICAL,i.GRASS,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.BLOOM_DOOM__SPECIAL,i.GRASS,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.GIGAVOLT_HAVOC__PHYSICAL,i.ELECTRIC,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.GIGAVOLT_HAVOC__SPECIAL,i.ELECTRIC,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SHATTERED_PSYCHE__PHYSICAL,i.PSYCHIC,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SHATTERED_PSYCHE__SPECIAL,i.PSYCHIC,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SUBZERO_SLAMMER__PHYSICAL,i.ICE,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SUBZERO_SLAMMER__SPECIAL,i.ICE,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.DEVASTATING_DRAKE__PHYSICAL,i.DRAGON,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.DEVASTATING_DRAKE__SPECIAL,i.DRAGON,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.BLACK_HOLE_ECLIPSE__PHYSICAL,i.DARK,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.BLACK_HOLE_ECLIPSE__SPECIAL,i.DARK,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.TWINKLE_TACKLE__PHYSICAL,i.FAIRY,g.PHYSICAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.TWINKLE_TACKLE__SPECIAL,i.FAIRY,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.CATASTROPIKA,i.ELECTRIC,g.PHYSICAL,210,-1,1,-1,0,7).unimplemented(),new at(t.SHORE_UP,i.GROUND,-1,5,-1,0,7).attr(WH).triageMove(),new m(t.FIRST_IMPRESSION,i.BUG,g.PHYSICAL,90,100,10,-1,2,7).condition(new co),new at(t.BANEFUL_BUNKER,i.POISON,-1,10,-1,4,7).attr(OO,w.BANEFUL_BUNKER).condition(lR),new m(t.SPIRIT_SHACKLE,i.GHOST,g.PHYSICAL,80,100,10,100,0,7).attr(Yt,w.TRAPPED,!1,!1,1,1,!0).makesContact(!1),new m(t.DARKEST_LARIAT,i.DARK,g.PHYSICAL,85,100,10,-1,0,7).attr(OI),new m(t.SPARKLING_ARIA,i.WATER,g.SPECIAL,90,100,10,100,0,7).attr(IE,!1,re.BURN).soundBased().target(De.ALL_NEAR_OTHERS),new m(t.ICE_HAMMER,i.ICE,g.PHYSICAL,100,90,10,-1,0,7).attr(Ge,[p.SPD],-1,!0).punchingMove(),new ge(t.FLORAL_HEALING,i.FAIRY,-1,10,-1,0,7).attr(yH,.5,2/3,!0,!1,(E,A,s)=>{var R;return((R=a.arena.terrain)==null?void 0:R.terrainType)===Nt.GRASSY}).triageMove().reflectable(),new m(t.HIGH_HORSEPOWER,i.GROUND,g.PHYSICAL,95,95,10,-1,0,7),new ge(t.STRENGTH_SAP,i.GRASS,100,10,-1,0,7).attr(Zs,null,p.ATK).attr(Ge,[p.ATK],-1).condition((E,A,s)=>A.getStatStage(p.ATK)>-6).triageMove().reflectable(),new Ps(t.SOLAR_BLADE,i.GRASS,g.PHYSICAL,125,100,10,-1,0,7).chargeText(u.t("moveTriggers:isGlowing",{pokemonName:"{USER}"})).chargeAttr(Lo,[Oe.SUNNY,Oe.HARSH_SUN]).attr(IM).slicingMove(),new m(t.LEAFAGE,i.GRASS,g.PHYSICAL,40,100,40,-1,0,7).makesContact(!1),new ge(t.SPOTLIGHT,i.NORMAL,-1,15,-1,3,7).attr(Yt,w.CENTER_OF_ATTENTION,!1).condition(Ar).reflectable(),new ge(t.TOXIC_THREAD,i.POISON,100,20,-1,0,7).attr(Tt,re.POISON).attr(Ge,[p.SPD],-1).reflectable(),new at(t.LASER_FOCUS,i.NORMAL,-1,30,-1,0,7).attr(Yt,w.ALWAYS_CRIT,!0,!1),new ge(t.GEAR_UP,i.STEEL,-1,20,-1,0,7).attr(Ge,[p.ATK,p.SPATK],1,!1,{condition:o((E,A,s)=>!![O.PLUS,O.MINUS].find(R=>A.hasAbility(R,!1)),"condition")}).ignoresSubstitute().target(De.USER_AND_ALLIES).condition((E,A,s)=>!![E,E.getAlly()].filter(R=>R==null?void 0:R.isActive()).find(R=>!![O.PLUS,O.MINUS].find(n=>R==null?void 0:R.hasAbility(n,!1)))),new m(t.THROAT_CHOP,i.DARK,g.PHYSICAL,80,100,15,100,0,7).attr(Yt,w.THROAT_CHOPPED),new m(t.POLLEN_PUFF,i.BUG,g.SPECIAL,90,100,15,-1,0,7).attr(UM).attr(ZD,.5,!0,!1).ballBombMove(),new m(t.ANCHOR_SHOT,i.STEEL,g.PHYSICAL,80,100,20,100,0,7).attr(Yt,w.TRAPPED,!1,!1,1,1,!0),new ge(t.PSYCHIC_TERRAIN,i.PSYCHIC,-1,10,-1,0,7).attr(Hi,Nt.PSYCHIC).target(De.BOTH_SIDES),new m(t.LUNGE,i.BUG,g.PHYSICAL,80,100,15,100,0,7).attr(Ge,[p.ATK],-1),new m(t.FIRE_LASH,i.FIRE,g.PHYSICAL,80,100,15,100,0,7).attr(Ge,[p.DEF],-1),new m(t.POWER_TRIP,i.DARK,g.PHYSICAL,20,100,10,-1,0,7).attr(rM),new m(t.BURN_UP,i.FIRE,g.SPECIAL,130,100,5,-1,0,7).condition(E=>E.getTypes(!0).includes(i.FIRE)).attr(IE,!0,re.FREEZE).attr(Yt,w.BURNED_UP,!0,!1).attr(fM,i.FIRE,E=>{a.queueMessage(u.t("moveTriggers:burnedItselfOut",{pokemonName:ee(E)}))}),new ge(t.SPEED_SWAP,i.PSYCHIC,-1,10,-1,0,7).attr(Q1,p.SPD).ignoresSubstitute(),new m(t.SMART_STRIKE,i.STEEL,g.PHYSICAL,70,-1,10,-1,0,7),new ge(t.PURIFY,i.POISON,-1,20,-1,0,7).condition((E,A,s)=>A.status?bb(A.status.effect):!1).attr(fs,.5).attr(IE,!1,bL()).triageMove().reflectable(),new m(t.REVELATION_DANCE,i.NORMAL,g.SPECIAL,90,100,15,-1,0,7).danceMove().attr(h1),new m(t.CORE_ENFORCER,i.DRAGON,g.SPECIAL,100,100,10,-1,0,7).target(De.ALL_NEAR_ENEMIES).attr(Z1),new m(t.TROP_KICK,i.GRASS,g.PHYSICAL,70,100,15,100,0,7).attr(Ge,[p.ATK],-1),new ge(t.INSTRUCT,i.PSYCHIC,-1,15,-1,0,7).ignoresSubstitute().attr(w1).edgeCase(),new m(t.BEAK_BLAST,i.FLYING,g.PHYSICAL,100,100,15,-1,-3,7).attr(oL).ballBombMove().makesContact(!1),new m(t.CLANGING_SCALES,i.DRAGON,g.SPECIAL,110,100,5,-1,0,7).attr(Ge,[p.DEF],-1,!0,{firstTargetOnly:!0}).soundBased().target(De.ALL_NEAR_ENEMIES),new m(t.DRAGON_HAMMER,i.DRAGON,g.PHYSICAL,90,100,15,-1,0,7),new m(t.BRUTAL_SWING,i.DARK,g.PHYSICAL,60,100,20,-1,0,7).target(De.ALL_NEAR_OTHERS),new ge(t.AURORA_VEIL,i.ICE,-1,20,-1,0,7).condition((E,A,s)=>{var R,n,I;return(((R=a.arena.weather)==null?void 0:R.weatherType)===Oe.HAIL||((n=a.arena.weather)==null?void 0:n.weatherType)===Oe.SNOW)&&!((I=a.arena.weather)!=null&&I.isEffectSuppressed())}).attr(rE,Fe.AURORA_VEIL,5,!0).target(De.USER_SIDE),new m(t.SINISTER_ARROW_RAID,i.GHOST,g.PHYSICAL,180,-1,1,-1,0,7).unimplemented().makesContact(!1).edgeCase(),new m(t.MALICIOUS_MOONSAULT,i.DARK,g.PHYSICAL,180,-1,1,-1,0,7).unimplemented().attr(Cn).attr(VR,w.MINIMIZED,!0).edgeCase(),new m(t.OCEANIC_OPERETTA,i.WATER,g.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new m(t.GUARDIAN_OF_ALOLA,i.FAIRY,g.SPECIAL,-1,-1,1,-1,0,7).unimplemented(),new m(t.SOUL_STEALING_7_STAR_STRIKE,i.GHOST,g.PHYSICAL,195,-1,1,-1,0,7).unimplemented(),new m(t.STOKED_SPARKSURFER,i.ELECTRIC,g.SPECIAL,175,-1,1,100,0,7).unimplemented().edgeCase(),new m(t.PULVERIZING_PANCAKE,i.NORMAL,g.PHYSICAL,210,-1,1,-1,0,7).unimplemented().edgeCase(),new at(t.EXTREME_EVOBOOST,i.NORMAL,-1,1,-1,0,7).unimplemented().attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],2,!0),new m(t.GENESIS_SUPERNOVA,i.PSYCHIC,g.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(Hi,Nt.PSYCHIC),new m(t.SHELL_TRAP,i.FIRE,g.SPECIAL,150,100,5,-1,-3,7).attr(KD,w.SHELL_TRAP).target(De.ALL_NEAR_ENEMIES).condition((E,A,s)=>{var R;return((R=E.getTag(TD))==null?void 0:R.activated)===!0}),new m(t.FLEUR_CANNON,i.FAIRY,g.SPECIAL,130,90,5,-1,0,7).attr(Ge,[p.SPATK],-2,!0),new m(t.PSYCHIC_FANGS,i.PSYCHIC,g.PHYSICAL,85,100,10,-1,0,7).bitingMove().attr(lr),new m(t.STOMPING_TANTRUM,i.GROUND,g.PHYSICAL,75,100,10,-1,0,7).attr(KA,(E,A,s)=>{var R,n;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===DA.MISS||((n=E.getLastXMoves(2)[1])==null?void 0:n.result)===DA.FAIL?2:1}),new m(t.SHADOW_BONE,i.GHOST,g.PHYSICAL,85,100,10,20,0,7).attr(Ge,[p.DEF],-1).makesContact(!1),new m(t.ACCELEROCK,i.ROCK,g.PHYSICAL,40,100,20,-1,1,7),new m(t.LIQUIDATION,i.WATER,g.PHYSICAL,85,100,10,20,0,7).attr(Ge,[p.DEF],-1),new m(t.PRISMATIC_LASER,i.PSYCHIC,g.SPECIAL,160,100,10,-1,0,7).attr(vR),new m(t.SPECTRAL_THIEF,i.GHOST,g.PHYSICAL,90,100,10,-1,0,7).attr(i1).ignoresSubstitute(),new m(t.SUNSTEEL_STRIKE,i.STEEL,g.PHYSICAL,100,100,5,-1,0,7).ignoresAbilities(),new m(t.MOONGEIST_BEAM,i.GHOST,g.SPECIAL,100,100,5,-1,0,7).ignoresAbilities(),new ge(t.TEARFUL_LOOK,i.NORMAL,-1,20,-1,0,7).attr(Ge,[p.ATK,p.SPATK],-1).reflectable(),new m(t.ZING_ZAP,i.ELECTRIC,g.PHYSICAL,80,100,10,30,0,7).attr(lA),new m(t.NATURES_MADNESS,i.FAIRY,g.SPECIAL,-1,90,10,-1,0,7).attr(io),new m(t.MULTI_ATTACK,i.NORMAL,g.PHYSICAL,120,100,10,-1,0,7).attr(DM),new m(t.TEN_MILLION_VOLT_THUNDERBOLT,i.ELECTRIC,g.SPECIAL,195,-1,1,-1,0,7).unimplemented().edgeCase(),new m(t.MIND_BLOWN,i.FIRE,g.SPECIAL,150,100,5,-1,0,7).condition(yl).attr(vD).target(De.ALL_NEAR_OTHERS),new m(t.PLASMA_FISTS,i.ELECTRIC,g.PHYSICAL,100,100,15,-1,0,7).attr(rE,Fe.ION_DELUGE,1).punchingMove(),new m(t.PHOTON_GEYSER,i.PSYCHIC,g.SPECIAL,100,100,5,-1,0,7).attr(CM).ignoresAbilities(),new m(t.LIGHT_THAT_BURNS_THE_SKY,i.PSYCHIC,g.SPECIAL,200,-1,1,-1,0,7).unimplemented().attr(CM).ignoresAbilities(),new m(t.SEARING_SUNRAZE_SMASH,i.STEEL,g.PHYSICAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new m(t.MENACING_MOONRAZE_MAELSTROM,i.GHOST,g.SPECIAL,200,-1,1,-1,0,7).unimplemented().ignoresAbilities(),new m(t.LETS_SNUGGLE_FOREVER,i.FAIRY,g.PHYSICAL,190,-1,1,-1,0,7).unimplemented().edgeCase(),new m(t.SPLINTERED_STORMSHARDS,i.ROCK,g.PHYSICAL,190,-1,1,-1,0,7).unimplemented().attr(Lr).makesContact(!1),new m(t.CLANGOROUS_SOULBLAZE,i.DRAGON,g.SPECIAL,185,-1,1,100,0,7).unimplemented().attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,!0,{firstTargetOnly:!0}).soundBased().target(De.ALL_NEAR_ENEMIES).edgeCase(),new m(t.ZIPPY_ZAP,i.ELECTRIC,g.PHYSICAL,50,100,15,-1,2,7).attr(hn),new m(t.SPLISHY_SPLASH,i.WATER,g.SPECIAL,90,100,15,30,0,7).attr(Tt,re.PARALYSIS).target(De.ALL_NEAR_ENEMIES),new m(t.FLOATY_FALL,i.FLYING,g.PHYSICAL,90,95,15,30,0,7).attr(lA),new m(t.PIKA_PAPOW,i.ELECTRIC,g.SPECIAL,-1,-1,20,-1,0,7).attr(or),new m(t.BOUNCY_BUBBLE,i.WATER,g.SPECIAL,60,100,20,-1,0,7).attr(Zs,1).triageMove(),new m(t.BUZZY_BUZZ,i.ELECTRIC,g.SPECIAL,60,100,20,100,0,7).attr(Tt,re.PARALYSIS),new m(t.SIZZLY_SLIDE,i.FIRE,g.PHYSICAL,60,100,20,100,0,7).attr(Tt,re.BURN),new m(t.GLITZY_GLOW,i.PSYCHIC,g.SPECIAL,80,95,15,-1,0,7).attr(rE,Fe.LIGHT_SCREEN,5,!1,!0),new m(t.BADDY_BAD,i.DARK,g.SPECIAL,80,95,15,-1,0,7).attr(rE,Fe.REFLECT,5,!1,!0),new m(t.SAPPY_SEED,i.GRASS,g.PHYSICAL,100,90,10,100,0,7).attr(hM).makesContact(!1),new m(t.FREEZY_FROST,i.ICE,g.SPECIAL,100,90,10,-1,0,7).attr(So,!0),new m(t.SPARKLY_SWIRL,i.FAIRY,g.SPECIAL,120,85,5,-1,0,7).attr(Io,null,O.NONE),new m(t.VEEVEE_VOLLEY,i.NORMAL,g.PHYSICAL,-1,-1,20,-1,0,7).attr(or),new m(t.DOUBLE_IRON_BASH,i.STEEL,g.PHYSICAL,60,100,5,30,0,7).attr(CA,jA._2).attr(lA).punchingMove(),new at(t.MAX_GUARD,i.NORMAL,-1,10,-1,4,8).unimplemented().attr(OO).condition(lR),new m(t.DYNAMAX_CANNON,i.DRAGON,g.SPECIAL,100,100,5,-1,0,8).attr(KA,(E,A,s)=>A.level>a.getMaxExpLevel()?1+Math.min(1,(A.level-a.getMaxExpLevel())/(a.getMaxExpLevel()*.05)):1).attr(J1),new m(t.SNIPE_SHOT,i.WATER,g.SPECIAL,80,100,15,-1,0,8).attr(iE).attr(zi),new m(t.JAW_LOCK,i.DARK,g.PHYSICAL,80,100,10,-1,0,8).attr(H1).bitingMove(),new at(t.STUFF_CHEEKS,i.NORMAL,-1,10,-1,0,8).attr(lN).attr(Ge,[p.DEF],2,!0).condition(E=>a.findModifiers(s=>s instanceof GE,E.isPlayer()).length>0).edgeCase(),new at(t.NO_RETREAT,i.FIGHTING,-1,5,-1,0,8).attr(Ge,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,!0).attr(Yt,w.NO_RETREAT,!0,!1).condition((E,A,s)=>{var R;return((R=E.getTag(jR))==null?void 0:R.sourceMove)!==t.NO_RETREAT}),new ge(t.TAR_SHOT,i.ROCK,100,15,-1,0,8).attr(Ge,[p.SPD],-1).attr(Yt,w.TAR_SHOT,!1).reflectable(),new ge(t.MAGIC_POWDER,i.PSYCHIC,100,20,-1,0,8).attr(BM,i.PSYCHIC).powderMove().reflectable(),new m(t.DRAGON_DARTS,i.DRAGON,g.PHYSICAL,50,100,10,-1,0,8).attr(CA,jA._2).makesContact(!1).partial(),new ge(t.TEATIME,i.NORMAL,-1,10,-1,0,8).attr(lN).target(De.ALL),new ge(t.OCTOLOCK,i.FIGHTING,100,15,-1,0,8).condition(vl).attr(Yt,w.OCTOLOCK,!1,!0,1),new m(t.BOLT_BEAK,i.ELECTRIC,g.PHYSICAL,85,100,10,-1,0,8).attr(aM),new m(t.FISHIOUS_REND,i.WATER,g.PHYSICAL,85,100,10,-1,0,8).attr(aM).bitingMove(),new ge(t.COURT_CHANGE,i.NORMAL,100,10,-1,0,8).attr(p1,[Fe.AURORA_VEIL,Fe.LIGHT_SCREEN,Fe.MIST,Fe.REFLECT,Fe.SPIKES,Fe.STEALTH_ROCK,Fe.STICKY_WEB,Fe.TAILWIND,Fe.TOXIC_SPIKES]),new m(t.MAX_FLARE,i.FIRE,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_FLUTTERBY,i.BUG,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_LIGHTNING,i.ELECTRIC,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_STRIKE,i.NORMAL,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_KNUCKLE,i.FIGHTING,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_PHANTASM,i.GHOST,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_HAILSTORM,i.ICE,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_OOZE,i.POISON,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_GEYSER,i.WATER,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_AIRSTREAM,i.FLYING,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_STARFALL,i.FAIRY,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_WYRMWIND,i.DRAGON,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_MINDSTORM,i.PSYCHIC,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_ROCKFALL,i.ROCK,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_QUAKE,i.GROUND,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_DARKNESS,i.DARK,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_OVERGROWTH,i.GRASS,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new m(t.MAX_STEELSPIKE,i.STEEL,g.PHYSICAL,10,-1,10,-1,0,8).target(De.NEAR_ENEMY).unimplemented(),new at(t.CLANGOROUS_SOUL,i.DRAGON,100,5,-1,0,8).attr(To,[p.ATK,p.DEF,p.SPATK,p.SPDEF,p.SPD],1,3).soundBased().danceMove(),new m(t.BODY_PRESS,i.FIGHTING,g.PHYSICAL,80,100,10,-1,0,8).attr(r1),new ge(t.DECORATE,i.FAIRY,-1,15,-1,0,8).attr(Ge,[p.ATK,p.SPATK],2).ignoresProtect(),new m(t.DRUM_BEATING,i.GRASS,g.PHYSICAL,80,100,10,100,0,8).attr(Ge,[p.SPD],-1).makesContact(!1),new m(t.SNAP_TRAP,i.GRASS,g.PHYSICAL,35,100,15,-1,0,8).attr(UO,w.SNAP_TRAP),new m(t.PYRO_BALL,i.FIRE,g.PHYSICAL,120,90,5,10,0,8).attr(IE,!0,re.FREEZE).attr(Tt,re.BURN).ballBombMove().makesContact(!1),new m(t.BEHEMOTH_BLADE,i.STEEL,g.PHYSICAL,100,100,5,-1,0,8).slicingMove(),new m(t.BEHEMOTH_BASH,i.STEEL,g.PHYSICAL,100,100,5,-1,0,8),new m(t.AURA_WHEEL,i.ELECTRIC,g.PHYSICAL,110,100,10,100,0,8).attr(Ge,[p.SPD],1,!0).makesContact(!1).attr(N1),new m(t.BREAKING_SWIPE,i.DRAGON,g.PHYSICAL,60,100,15,100,0,8).target(De.ALL_NEAR_ENEMIES).attr(Ge,[p.ATK],-1),new m(t.BRANCH_POKE,i.GRASS,g.PHYSICAL,40,100,40,-1,0,8),new m(t.OVERDRIVE,i.ELECTRIC,g.SPECIAL,80,100,10,-1,0,8).soundBased().target(De.ALL_NEAR_ENEMIES),new m(t.APPLE_ACID,i.GRASS,g.SPECIAL,80,100,10,100,0,8).attr(Ge,[p.SPDEF],-1),new m(t.GRAV_APPLE,i.GRASS,g.PHYSICAL,80,100,10,100,0,8).attr(Ge,[p.DEF],-1).attr(KA,(E,A,s)=>a.arena.getTag(Fe.GRAVITY)?1.5:1).makesContact(!1),new m(t.SPIRIT_BREAK,i.FAIRY,g.PHYSICAL,75,100,15,100,0,8).attr(Ge,[p.SPATK],-1),new m(t.STRANGE_STEAM,i.FAIRY,g.SPECIAL,90,95,10,20,0,8).attr(es),new ge(t.LIFE_DEW,i.WATER,-1,10,-1,0,8).attr(fs,.25,!0,!1).target(De.USER_AND_ALLIES).ignoresProtect(),new at(t.OBSTRUCT,i.DARK,100,10,-1,4,8).attr(OO,w.OBSTRUCT).condition(lR),new m(t.FALSE_SURRENDER,i.DARK,g.PHYSICAL,80,-1,10,-1,0,8),new m(t.METEOR_ASSAULT,i.FIGHTING,g.PHYSICAL,150,100,5,-1,0,8).attr(vR).makesContact(!1),new m(t.ETERNABEAM,i.DRAGON,g.SPECIAL,160,90,5,-1,0,8).attr(vR),new m(t.STEEL_BEAM,i.STEEL,g.SPECIAL,140,95,5,-1,0,8).attr(vD),new m(t.EXPANDING_FORCE,i.PSYCHIC,g.SPECIAL,80,100,10,-1,0,8).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.PSYCHIC&&E.isGrounded()?1.5:1).attr(mI,(E,A,s)=>a.arena.getTerrainType()===Nt.PSYCHIC&&E.isGrounded()?De.ALL_NEAR_ENEMIES:De.NEAR_OTHER),new m(t.STEEL_ROLLER,i.STEEL,g.PHYSICAL,130,100,5,-1,0,8).attr(Lr).condition((E,A,s)=>!!a.arena.terrain),new m(t.SCALE_SHOT,i.DRAGON,g.PHYSICAL,25,90,20,-1,0,8).attr(Ge,[p.SPD],1,!0,{lastHitOnly:!0}).attr(Ge,[p.DEF],-1,!0,{lastHitOnly:!0}).attr(CA).makesContact(!1),new Ps(t.METEOR_BEAM,i.ROCK,g.SPECIAL,120,90,10,-1,0,8).chargeText(u.t("moveTriggers:isOverflowingWithSpacePower",{pokemonName:"{USER}"})).chargeAttr(Ge,[p.SPATK],1,!0),new m(t.SHELL_SIDE_ARM,i.POISON,g.SPECIAL,90,100,10,20,0,8).attr(T1).attr(Tt,re.POISON).partial(),new m(t.MISTY_EXPLOSION,i.FAIRY,g.SPECIAL,100,100,5,-1,0,8).attr(na).target(De.ALL_NEAR_OTHERS).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.MISTY&&E.isGrounded()?1.5:1).condition(yl).makesContact(!1),new m(t.GRASSY_GLIDE,i.GRASS,g.PHYSICAL,55,100,20,-1,0,8).attr(XD,(E,A,s)=>a.arena.getTerrainType()===Nt.GRASSY&&E.isGrounded()),new m(t.RISING_VOLTAGE,i.ELECTRIC,g.SPECIAL,70,100,20,-1,0,8).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.ELECTRIC&&A.isGrounded()?2:1),new m(t.TERRAIN_PULSE,i.NORMAL,g.SPECIAL,50,100,10,-1,0,8).attr(U1).attr(KA,(E,A,s)=>a.arena.getTerrainType()!==Nt.NONE&&E.isGrounded()?2:1).pulseMove(),new m(t.SKITTER_SMACK,i.BUG,g.PHYSICAL,70,90,10,100,0,8).attr(Ge,[p.SPATK],-1),new m(t.BURNING_JEALOUSY,i.FIRE,g.SPECIAL,70,100,5,100,0,8).attr(q1,re.BURN).target(De.ALL_NEAR_ENEMIES),new m(t.LASH_OUT,i.DARK,g.PHYSICAL,75,100,5,-1,0,8).attr(KA,(E,A,s)=>E.turnData.statStagesDecreased?2:1),new m(t.POLTERGEIST,i.GHOST,g.PHYSICAL,110,90,5,-1,0,8).condition(xj).attr($i,bj).makesContact(!1),new ge(t.CORROSIVE_GAS,i.POISON,100,40,-1,0,8).target(De.ALL_NEAR_OTHERS).reflectable().unimplemented(),new ge(t.COACHING,i.FIGHTING,-1,10,-1,0,8).attr(Ge,[p.ATK,p.DEF],1).target(De.NEAR_ALLY).condition(Ar),new m(t.FLIP_TURN,i.WATER,g.PHYSICAL,60,100,20,-1,0,8).attr(nR,!0),new m(t.TRIPLE_AXEL,i.ICE,g.PHYSICAL,20,90,10,-1,0,8).attr(CA,jA._3).attr(LM,3).checkAllHits(),new m(t.DUAL_WINGBEAT,i.FLYING,g.PHYSICAL,40,90,10,-1,0,8).attr(CA,jA._2),new m(t.SCORCHING_SANDS,i.GROUND,g.SPECIAL,70,100,10,30,0,8).attr(IE,!0,re.FREEZE).attr(IE,!1,re.FREEZE).attr(Tt,re.BURN),new ge(t.JUNGLE_HEALING,i.GRASS,-1,10,-1,0,8).attr(fs,.25,!0,!1).attr(IE,!1,bL()).target(De.USER_AND_ALLIES),new m(t.WICKED_BLOW,i.DARK,g.PHYSICAL,75,100,5,-1,0,8).attr(hn).punchingMove(),new m(t.SURGING_STRIKES,i.WATER,g.PHYSICAL,25,100,5,-1,0,8).attr(CA,jA._3).attr(hn).punchingMove(),new m(t.THUNDER_CAGE,i.ELECTRIC,g.SPECIAL,80,90,15,-1,0,8).attr(UO,w.THUNDER_CAGE),new m(t.DRAGON_ENERGY,i.DRAGON,g.SPECIAL,150,100,5,-1,0,8).attr(lo).target(De.ALL_NEAR_ENEMIES),new m(t.FREEZING_GLARE,i.PSYCHIC,g.SPECIAL,90,100,10,10,0,8).attr(Tt,re.FREEZE),new m(t.FIERY_WRATH,i.DARK,g.SPECIAL,90,100,10,20,0,8).attr(lA).target(De.ALL_NEAR_ENEMIES),new m(t.THUNDEROUS_KICK,i.FIGHTING,g.PHYSICAL,90,100,10,100,0,8).attr(Ge,[p.DEF],-1),new m(t.GLACIAL_LANCE,i.ICE,g.PHYSICAL,120,100,5,-1,0,8).target(De.ALL_NEAR_ENEMIES).makesContact(!1),new m(t.ASTRAL_BARRAGE,i.GHOST,g.SPECIAL,120,100,5,-1,0,8).target(De.ALL_NEAR_ENEMIES),new m(t.EERIE_SPELL,i.PSYCHIC,g.SPECIAL,80,100,5,100,0,8).attr(v1,3).soundBased(),new m(t.DIRE_CLAW,i.POISON,g.PHYSICAL,80,100,15,50,0,8).attr($D,[re.POISON,re.PARALYSIS,re.SLEEP]),new m(t.PSYSHIELD_BASH,i.PSYCHIC,g.PHYSICAL,70,90,10,100,0,8).attr(Ge,[p.DEF],1,!0),new at(t.POWER_SHIFT,i.NORMAL,-1,10,-1,0,8).target(De.USER).attr($1,p.ATK,p.DEF),new m(t.STONE_AXE,i.ROCK,g.PHYSICAL,65,90,15,100,0,8).attr(HM,Fe.STEALTH_ROCK).slicingMove(),new m(t.SPRINGTIDE_STORM,i.FAIRY,g.SPECIAL,100,80,5,30,0,8).attr(Ge,[p.ATK],-1).windMove().target(De.ALL_NEAR_ENEMIES),new m(t.MYSTICAL_POWER,i.PSYCHIC,g.SPECIAL,70,90,10,100,0,8).attr(Ge,[p.SPATK],1,!0),new m(t.RAGING_FURY,i.FIRE,g.PHYSICAL,120,100,10,-1,0,8).makesContact(!1).attr(Tr).attr(cO,xn).attr(XO,xn).target(De.RANDOM_NEAR_ENEMY),new m(t.WAVE_CRASH,i.WATER,g.PHYSICAL,120,100,10,-1,0,8).attr(RR,!1,.33).recklessMove(),new m(t.CHLOROBLAST,i.GRASS,g.SPECIAL,150,95,5,-1,0,8).attr(RR,!0,.5),new m(t.MOUNTAIN_GALE,i.ICE,g.PHYSICAL,100,85,10,30,0,8).makesContact(!1).attr(lA),new at(t.VICTORY_DANCE,i.FIGHTING,-1,10,-1,0,8).attr(Ge,[p.ATK,p.DEF,p.SPD],1,!0).danceMove(),new m(t.HEADLONG_RUSH,i.GROUND,g.PHYSICAL,120,100,5,-1,0,8).attr(Ge,[p.DEF,p.SPDEF],-1,!0).punchingMove(),new m(t.BARB_BARRAGE,i.POISON,g.PHYSICAL,60,100,10,50,0,8).makesContact(!1).attr(KA,(E,A,s)=>A.status&&(A.status.effect===re.POISON||A.status.effect===re.TOXIC)?2:1).attr(Tt,re.POISON),new m(t.ESPER_WING,i.PSYCHIC,g.SPECIAL,80,100,10,100,0,8).attr(iE).attr(Ge,[p.SPD],1,!0),new m(t.BITTER_MALICE,i.GHOST,g.SPECIAL,75,100,10,100,0,8).attr(Ge,[p.ATK],-1),new at(t.SHELTER,i.STEEL,-1,10,100,0,8).attr(Ge,[p.DEF],2,!0),new m(t.TRIPLE_ARROWS,i.FIGHTING,g.PHYSICAL,90,100,10,30,0,8).makesContact(!1).attr(iE).attr(Ge,[p.DEF],-1,!1,{effectChanceOverride:50}).attr(lA),new m(t.INFERNAL_PARADE,i.GHOST,g.SPECIAL,60,100,15,30,0,8).attr(Tt,re.BURN).attr(KA,(E,A,s)=>A.status?2:1),new m(t.CEASELESS_EDGE,i.DARK,g.PHYSICAL,65,90,15,100,0,8).attr(HM,Fe.SPIKES).slicingMove(),new m(t.BLEAKWIND_STORM,i.FLYING,g.SPECIAL,100,80,10,30,0,8).attr(Do).attr(Ge,[p.SPD],-1).windMove().target(De.ALL_NEAR_ENEMIES),new m(t.WILDBOLT_STORM,i.ELECTRIC,g.SPECIAL,100,80,10,20,0,8).attr(Do).attr(Tt,re.PARALYSIS).windMove().target(De.ALL_NEAR_ENEMIES),new m(t.SANDSEAR_STORM,i.GROUND,g.SPECIAL,100,80,10,20,0,8).attr(Do).attr(Tt,re.BURN).windMove().target(De.ALL_NEAR_ENEMIES),new ge(t.LUNAR_BLESSING,i.PSYCHIC,-1,5,-1,0,8).attr(fs,.25,!0,!1).attr(IE,!1,bL()).target(De.USER_AND_ALLIES).triageMove(),new at(t.TAKE_HEART,i.PSYCHIC,-1,10,-1,0,8).attr(Ge,[p.SPATK,p.SPDEF],1,!0).attr(IE,!0,[re.PARALYSIS,re.POISON,re.TOXIC,re.BURN,re.SLEEP]),new m(t.TERA_BLAST,i.NORMAL,g.SPECIAL,80,100,10,-1,0,9).attr(uM).attr(M1).attr(o1).attr(Ge,[p.ATK,p.SPATK],-1,!0,{condition:o((E,A,s)=>E.isTerastallized&&E.isOfType(i.STELLAR),"condition")}),new at(t.SILK_TRAP,i.BUG,-1,10,-1,4,9).attr(OO,w.SILK_TRAP).condition(lR),new m(t.AXE_KICK,i.FIGHTING,g.PHYSICAL,120,90,10,30,0,9).attr(cO,Ma).attr(XO,Ma).attr(es).recklessMove(),new m(t.LAST_RESPECTS,i.GHOST,g.PHYSICAL,50,100,10,-1,0,9).attr(KA,(E,A,s)=>1+Math.min(E.isPlayer()?a.arena.playerFaints:a.currentBattle.enemyFaints,100)).makesContact(!1),new m(t.LUMINA_CRASH,i.PSYCHIC,g.SPECIAL,80,100,10,100,0,9).attr(Ge,[p.SPDEF],-2),new m(t.ORDER_UP,i.DRAGON,g.PHYSICAL,80,100,10,100,0,9).attr(kH).makesContact(!1),new m(t.JET_PUNCH,i.WATER,g.PHYSICAL,60,100,15,-1,1,9).punchingMove(),new ge(t.SPICY_EXTRACT,i.GRASS,-1,15,-1,0,9).attr(Ge,[p.ATK],2).attr(Ge,[p.DEF],-2),new m(t.SPIN_OUT,i.STEEL,g.PHYSICAL,100,100,5,-1,0,9).attr(Ge,[p.SPD],-2,!0),new m(t.POPULATION_BOMB,i.NORMAL,g.PHYSICAL,20,90,10,-1,0,9).attr(CA,jA._10).slicingMove().checkAllHits(),new m(t.ICE_SPINNER,i.ICE,g.PHYSICAL,80,100,15,-1,0,9).attr(Lr),new m(t.GLAIVE_RUSH,i.DRAGON,g.PHYSICAL,120,100,5,-1,0,9).attr(Yt,w.ALWAYS_GET_HIT,!0,!1,0,0,!0).attr(Yt,w.RECEIVE_DOUBLE_DAMAGE,!0,!1,0,0,!0).condition((E,A,s)=>{var R,n;return!(((R=A.getTag(w.PROTECTED))==null?void 0:R.tagType)==="PROTECTED"||((n=a.arena.getTag(Fe.MAT_BLOCK))==null?void 0:n.tagType)==="MAT_BLOCK")}),new ge(t.REVIVAL_BLESSING,i.NORMAL,-1,1,-1,0,9).triageMove().attr(K1).target(De.USER),new m(t.SALT_CURE,i.ROCK,g.PHYSICAL,40,100,15,100,0,9).attr(Yt,w.SALT_CURED).makesContact(!1),new m(t.TRIPLE_DIVE,i.WATER,g.PHYSICAL,30,95,10,-1,0,9).attr(CA,jA._3),new m(t.MORTAL_SPIN,i.POISON,g.PHYSICAL,30,100,15,100,0,9).attr(B1,[w.BIND,w.WRAP,w.FIRE_SPIN,w.WHIRLPOOL,w.CLAMP,w.SAND_TOMB,w.MAGMA_STORM,w.SNAP_TRAP,w.THUNDER_CAGE,w.SEEDED,w.INFESTATION],!0).attr(Tt,re.POISON).attr(Nr).target(De.ALL_NEAR_ENEMIES),new ge(t.DOODLE,i.NORMAL,100,10,-1,0,9).attr(YM,!0),new at(t.FILLET_AWAY,i.NORMAL,-1,10,-1,0,9).attr(To,[p.ATK,p.SPATK,p.SPD],2,2),new m(t.KOWTOW_CLEAVE,i.DARK,g.PHYSICAL,85,-1,10,-1,0,9).slicingMove(),new m(t.FLOWER_TRICK,i.GRASS,g.PHYSICAL,70,-1,10,100,0,9).attr(hn).makesContact(!1),new m(t.TORCH_SONG,i.FIRE,g.SPECIAL,80,100,10,100,0,9).attr(Ge,[p.SPATK],1,!0).soundBased(),new m(t.AQUA_STEP,i.WATER,g.PHYSICAL,80,100,10,100,0,9).attr(Ge,[p.SPD],1,!0).danceMove(),new m(t.RAGING_BULL,i.NORMAL,g.PHYSICAL,90,100,10,-1,0,9).attr(l1).attr(lr),new m(t.MAKE_IT_RAIN,i.STEEL,g.SPECIAL,120,100,5,-1,0,9).attr(wM).attr(Ge,[p.SPATK],-1,!0,{firstTargetOnly:!0}).target(De.ALL_NEAR_ENEMIES),new m(t.PSYBLADE,i.PSYCHIC,g.PHYSICAL,80,100,15,-1,0,9).attr(KA,(E,A,s)=>a.arena.getTerrainType()===Nt.ELECTRIC&&E.isGrounded()?1.5:1).slicingMove(),new m(t.HYDRO_STEAM,i.WATER,g.SPECIAL,80,100,15,-1,0,9).attr(bD,Oe.SUNNY).attr(KA,(E,A,s)=>{const R=a.arena.weather;return R&&[Oe.SUNNY,Oe.HARSH_SUN].includes(R.weatherType)&&!R.isEffectSuppressed()?1.5:1}),new m(t.RUINATION,i.DARK,g.SPECIAL,-1,90,10,-1,0,9).attr(io),new m(t.COLLISION_COURSE,i.FIGHTING,g.PHYSICAL,100,100,5,-1,0,9).attr(KA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1),new m(t.ELECTRO_DRIFT,i.ELECTRIC,g.SPECIAL,100,100,5,-1,0,9).attr(KA,(E,A,s)=>A.getAttackTypeEffectiveness(s.type,E)>=2?5461/4096:1).makesContact(),new at(t.SHED_TAIL,i.NORMAL,-1,10,-1,0,9).attr(VD,.5,!0).attr(nR,!0,uA.SHED_TAIL).condition(wl),new at(t.CHILLY_RECEPTION,i.ICE,-1,10,-1,0,9).attr($i,(E,A)=>u.t("moveTriggers:chillyReception",{pokemonName:ee(E)})).attr(F1,!0),new at(t.TIDY_UP,i.NORMAL,-1,10,-1,0,9).attr(Ge,[p.ATK,p.SPD],1,!0).attr(Nr,!0).attr(m1),new ge(t.SNOWSCAPE,i.ICE,-1,10,-1,0,9).attr(di,Oe.SNOW).target(De.BOTH_SIDES),new m(t.POUNCE,i.BUG,g.PHYSICAL,50,100,20,100,0,9).attr(Ge,[p.SPD],-1),new m(t.TRAILBLAZE,i.GRASS,g.PHYSICAL,50,100,20,100,0,9).attr(Ge,[p.SPD],1,!0),new m(t.CHILLING_WATER,i.WATER,g.SPECIAL,50,100,20,100,0,9).attr(Ge,[p.ATK],-1),new m(t.HYPER_DRILL,i.NORMAL,g.PHYSICAL,100,100,5,-1,0,9).ignoresProtect(),new m(t.TWIN_BEAM,i.PSYCHIC,g.SPECIAL,40,100,10,-1,0,9).attr(CA,jA._2),new m(t.RAGE_FIST,i.GHOST,g.PHYSICAL,50,100,10,-1,0,9).edgeCase().attr(t1).punchingMove(),new m(t.ARMOR_CANNON,i.FIRE,g.SPECIAL,120,100,5,-1,0,9).attr(Ge,[p.DEF,p.SPDEF],-1,!0),new m(t.BITTER_BLADE,i.FIRE,g.PHYSICAL,90,100,10,-1,0,9).attr(Zs).slicingMove().triageMove(),new m(t.DOUBLE_SHOCK,i.ELECTRIC,g.PHYSICAL,120,100,5,-1,0,9).condition(E=>E.getTypes(!0).includes(i.ELECTRIC)).attr(Yt,w.DOUBLE_SHOCKED,!0,!1).attr(fM,i.ELECTRIC,E=>{a.queueMessage(u.t("moveTriggers:usedUpAllElectricity",{pokemonName:ee(E)}))}),new m(t.GIGATON_HAMMER,i.STEEL,g.PHYSICAL,160,100,5,-1,0,9).makesContact(!1).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new m(t.COMEUPPANCE,i.DARK,g.PHYSICAL,-1,100,10,-1,0,9).attr(Ji,E=>E.category===g.PHYSICAL||E.category===g.SPECIAL,1.5).redirectCounter().target(De.ATTACKER),new m(t.AQUA_CUTTER,i.WATER,g.PHYSICAL,70,100,20,-1,0,9).attr(iE).slicingMove().makesContact(!1),new m(t.BLAZING_TORQUE,i.FIRE,g.PHYSICAL,80,100,10,30,0,9).attr(Tt,re.BURN).makesContact(!1),new m(t.WICKED_TORQUE,i.DARK,g.PHYSICAL,80,100,10,10,0,9).attr(Tt,re.SLEEP).makesContact(!1),new m(t.NOXIOUS_TORQUE,i.POISON,g.PHYSICAL,100,100,10,30,0,9).attr(Tt,re.POISON).makesContact(!1),new m(t.COMBAT_TORQUE,i.FIGHTING,g.PHYSICAL,100,100,10,30,0,9).attr(Tt,re.PARALYSIS).makesContact(!1),new m(t.MAGICAL_TORQUE,i.FAIRY,g.PHYSICAL,100,100,10,30,0,9).attr(es).makesContact(!1),new m(t.BLOOD_MOON,i.NORMAL,g.SPECIAL,140,100,5,-1,0,9).condition((E,A,s)=>{const R=E.getLastXMoves(1);return!R.length||R[0].move!==s.id||R[0].result!==DA.SUCCESS}),new m(t.MATCHA_GOTCHA,i.GRASS,g.SPECIAL,80,90,15,20,0,9).attr(Zs).attr(IE,!0,re.FREEZE).attr(IE,!1,re.FREEZE).attr(Tt,re.BURN).target(De.ALL_NEAR_ENEMIES).triageMove(),new m(t.SYRUP_BOMB,i.GRASS,g.SPECIAL,60,85,10,-1,0,9).attr(Yt,w.SYRUP_BOMB,!1,!1,3).ballBombMove(),new m(t.IVY_CUDGEL,i.GRASS,g.PHYSICAL,100,100,10,-1,0,9).attr(C1).attr(iE).makesContact(!1),new Ps(t.ELECTRO_SHOT,i.ELECTRIC,g.SPECIAL,130,100,10,100,0,9).chargeText(u.t("moveTriggers:absorbedElectricity",{pokemonName:"{USER}"})).chargeAttr(Ge,[p.SPATK],1,!0).chargeAttr(Lo,[Oe.RAIN,Oe.HEAVY_RAIN]),new m(t.TERA_STARSTORM,i.NORMAL,g.SPECIAL,120,100,5,-1,0,9).attr(uM).attr(c1).attr(mI,(E,A,s)=>E.hasSpecies(e.TERAPAGOS)&&E.isTerastallized?De.ALL_NEAR_ENEMIES:De.NEAR_OTHER).partial(),new m(t.FICKLE_BEAM,i.DRAGON,g.SPECIAL,80,100,5,30,0,9).attr($i,wj).attr(JH),new at(t.BURNING_BULWARK,i.FIRE,-1,10,-1,4,9).attr(OO,w.BURNING_BULWARK).condition(lR),new m(t.THUNDERCLAP,i.ELECTRIC,g.SPECIAL,70,100,5,-1,1,9).condition((E,A,s)=>{const R=a.currentBattle.turnCommands[A.getBattlerIndex()];return!R||!R.move?!1:R.command===OA.FIGHT&&!A.turnData.acted&&Ve[R.move.move].category!==g.STATUS}),new m(t.MIGHTY_CLEAVE,i.ROCK,g.PHYSICAL,95,100,5,-1,0,9).slicingMove().ignoresProtect(),new m(t.TACHYON_CUTTER,i.STEEL,g.SPECIAL,50,-1,10,-1,0,9).attr(CA,jA._2).slicingMove(),new m(t.HARD_PRESS,i.STEEL,g.PHYSICAL,-1,100,10,-1,0,9).attr(Co,100),new ge(t.DRAGON_CHEER,i.DRAGON,-1,15,-1,0,9).attr(Yt,w.DRAGON_CHEER,!1,!0).target(De.NEAR_ALLY),new m(t.ALLURING_VOICE,i.FAIRY,g.SPECIAL,80,100,10,-1,0,9).attr(j1,w.CONFUSED).soundBased(),new m(t.TEMPER_FLARE,i.FIRE,g.PHYSICAL,75,100,10,-1,0,9).attr(KA,(E,A,s)=>{var R,n;return((R=E.getLastXMoves(2)[1])==null?void 0:R.result)===DA.MISS||((n=E.getLastXMoves(2)[1])==null?void 0:n.result)===DA.FAIL?2:1}),new m(t.SUPERCELL_SLAM,i.ELECTRIC,g.PHYSICAL,100,95,15,-1,0,9).attr(cO,Ma).attr(XO,Ma).recklessMove(),new m(t.PSYCHIC_NOISE,i.PSYCHIC,g.SPECIAL,75,100,10,-1,0,9).soundBased().attr(Yt,w.HEAL_BLOCK,!1,!1,2),new m(t.UPPER_HAND,i.FIGHTING,g.PHYSICAL,65,100,15,100,3,9).attr(lA).condition(new Ef),new m(t.MALIGNANT_CHAIN,i.POISON,g.SPECIAL,100,100,5,50,0,9).attr(Tt,re.TOXIC)),Ve.map(E=>{E.getAttrs(Ge).some(A=>A.selfTarget&&A.stages<0)&&Xj.push(E.id)})}o(Qj,"initMoves");const fx=class fx extends ns{constructor(A,s,R=yt.EFFECTIVE,n=!1){super(A),this.amount=s,this.damageResult=R,this.critical=n}start(){if(super.start(),this.damageResult===yt.ONE_HIT_KO||this.damageResult===yt.INDIRECT_KO){a.moveAnimations&&a.toggleInvert(!0),a.time.delayedCall(Ot(1e3),()=>{a.toggleInvert(!1),this.applyDamage()});return}this.applyDamage()}updateAmount(A){this.amount=A}applyDamage(){switch(this.damageResult){case yt.EFFECTIVE:case yt.CONFUSION:a.playSound("se/hit");break;case yt.SUPER_EFFECTIVE:case yt.INDIRECT_KO:case yt.ONE_HIT_KO:a.playSound("se/hit_strong");break;case yt.NOT_VERY_EFFECTIVE:a.playSound("se/hit_weak");break}if(this.amount&&a.damageNumberHandler.add(this.getPokemon(),this.amount,this.damageResult,this.critical),this.damageResult!==yt.INDIRECT&&this.amount>0){const A=a.time.addEvent({delay:100,repeat:5,startAt:200,callback:o(()=>{this.getPokemon().getSprite().setVisible(A.repeatCount%2===0),A.repeatCount||this.getPokemon().updateInfo().then(()=>this.end())},"callback")})}else this.getPokemon().updateInfo().then(()=>this.end())}end(){a.currentBattle.battleSpec===DE.FINAL_BOSS?a.initFinalBossPhaseTwo(this.getPokemon()):super.end()}};o(fx,"DamageAnimPhase");let vM=fx;const Bx=class Bx extends ns{constructor(A,s=!1,R,n,I){super(A),this.preventEndure=s,this.destinyTag=R,this.grudgeTag=n,this.source=I}start(){super.start();const A=this.getPokemon();if(!Pe(this.destinyTag)&&!Pe(this.source)&&this.destinyTag.lapse(this.source,As.CUSTOM),!Pe(this.grudgeTag)&&!Pe(this.source)&&this.grudgeTag.lapse(A,As.CUSTOM,this.source),!this.preventEndure){const s=a.applyModifier(cL,this.player,A);if(s)return A.loseHeldItem(s),a.updateModifiers(this.player),this.end()}for(const s of a.getPlayerField())s!=null&&s.isActive(!0)&&s.isPlayer()&&a.currentBattle.addParticipant(s);this.tryOverrideForBattleSpec()||this.doFaint()}doFaint(){var n,I,r,L;const A=this.getPokemon();if(A.isPlayer()?(a.arena.playerFaints+=1,a.currentBattle.playerFaintsHistory.push({pokemon:A,turn:a.currentBattle.turn})):(a.currentBattle.enemyFaints+=1,a.currentBattle.enemyFaintsHistory.push({pokemon:A,turn:a.currentBattle.turn})),a.queueMessage(u.t("battle:fainted",{pokemonNameWithAffix:ee(A)}),null,!0),a.triggerPokemonFormChange(A,Bs,!0),A.resetTera(),(I=(n=A.turnData)==null?void 0:n.attacksReceived)!=null&&I.length){const N=A.turnData.attacksReceived[0];Q8(GI,A,a.getPokemonById(N.sourceId),new Lt(N.move).getMove(),N.result)}else Q8(GI,A);const s=a.getField(!0);for(const N of s)rj(QS,N,A);if((L=(r=A.turnData)==null?void 0:r.attacksReceived)!=null&&L.length){const N=this.source;if(N!=null&&N.isOnField()){Lj(XS,N);const l=Ve[A.turnData.attacksReceived[0].move],C=l.getAttrs(AM);if(C.length)for(const U of C)U.applyPostVictory(N,N,l)}}if(this.player){const N=a.getPokemonAllowedInBattle(),l=N.filter(C=>!C.isActive(!0));N.length?a.currentBattle.double&&N.length===1&&l.length===0?a.unshiftPhase(new mO(!0)):l.length>0&&a.pushPhase(new Xa(uA.SWITCH,this.fieldIndex,!0,!1)):a.unshiftPhase(new gO)}else a.unshiftPhase(new uS(this.battlerIndex)),[Ht.TRAINER,Ht.MYSTERY_ENCOUNTER].includes(a.currentBattle.battleType)&&a.getEnemyParty().filter(l=>l.isActive()&&!l.isOnField()&&l.trainerSlot===A.trainerSlot).length&&a.pushPhase(new HR(uA.SWITCH,this.fieldIndex,-1,!1,!1));const R=A.getAlly();a.currentBattle.double&&!Pe(R)&&a.redirectPokemonMoves(A,R),A.faintCry(()=>{A instanceof WE&&A.addFriendship(-5),A.hideInfo(),a.playSound("se/faint"),a.tweens.add({targets:A,duration:500,y:A.y+150,ease:"Sine.easeIn",onComplete:o(()=>{A.lapseTags(As.FAINT),A.y-=150,A.trySetStatus(re.FAINT),A.isPlayer()?a.currentBattle.removeFaintedParticipant(A):(a.addFaintedEnemyScore(A),a.currentBattle.addPostBattleLoot(A)),A.leaveField(),this.end()},"onComplete")})})}tryOverrideForBattleSpec(){switch(a.currentBattle.battleSpec){case DE.FINAL_BOSS:if(!this.player){const A=this.getPokemon();return A.formIndex?a.ui.showDialogue(Sk[DE.FINAL_BOSS].secondStageWin,A.species.name,null,()=>this.doFaint()):(A.hp++,a.unshiftPhase(new vM(A.getBattlerIndex(),0,yt.INDIRECT)),this.end()),!0}}return!1}};o(Bx,"FaintPhase");let VM=Bx;const gx=class gx extends ns{constructor(A,s,R,n,I){super(A),this.statusEffect=s,this.turnsRemaining=R,this.sourceText=n,this.sourcePokemon=I}start(){var s;const A=this.getPokemon();if(A&&!A.status){if(A.trySetStatus(this.statusEffect,!1,this.sourcePokemon)){this.turnsRemaining&&(A.status.sleepTurnsRemaining=this.turnsRemaining),A.updateInfo(!0),new ti(UA.POISON+(this.statusEffect-1),A).play(!1,()=>{a.queueMessage(oZ(this.statusEffect,ee(A),this.sourceText??void 0)),this.end()});return}}else((s=A.status)==null?void 0:s.effect)===this.statusEffect&&a.queueMessage(TZ(this.statusEffect??re.NONE,ee(A)));this.end()}};o(gx,"ObtainStatusEffectPhase");let Of=gx;var gC=(E=>(E[E.MISC=0]="MISC",E[E.LEVEL_UP=1]="LEVEL_UP",E[E.RELEARN=2]="RELEARN",E[E.EVOLUTION=3]="EVOLUTION",E[E.EVOLUTION_FUSED=4]="EVOLUTION_FUSED",E[E.EVOLUTION_FUSED_BASE=5]="EVOLUTION_FUSED_BASE",E))(gC||{}),$s=(E=>(E[E.CENTER=0]="CENTER",E[E.LEFT=1]="LEFT",E[E.RIGHT=2]="RIGHT",E))($s||{});const mx=class mx extends TE.GameObjects.Container{constructor(A,s,R,n,I,r,L,N,l,C,U,D){if(super(a,A,s),!R.isObtainable()&&this.isPlayer())throw`Cannot create a player Pokemon for species '${R.getName(r)}'`;const M=new je(sc);if(this.hasTrainer()||a.applyModifiers(gn,!0,M),this.species=R,this.pokeball=(D==null?void 0:D.pokeball)||we.POKEBALL,this.level=n,this.switchOutStatus=!1,I!==void 0)this.abilityIndex=I;else{const h=!He(M.value),_=He(2);R.abilityHidden&&h?this.abilityIndex=2:this.abilityIndex=R.ability2!==R.ability1?_:0}if(r!==void 0&&(this.formIndex=r),L!==void 0&&(this.gender=L),N!==void 0&&(this.shiny=N),l!==void 0&&(this.variant=l),this.exp=(D==null?void 0:D.exp)||IO(this.level,R.growthRate),this.levelExp=(D==null?void 0:D.levelExp)||0,D)this.id=D.id,this.hp=D.hp,this.stats=D.stats,this.ivs=D.ivs,this.passive=!!D.passive,this.variant===void 0&&(this.variant=0),this.nature=D.nature||0,this.nickname=D.nickname,this.moveset=D.moveset,this.status=D.status,this.friendship=D.friendship!==void 0?D.friendship:this.species.baseFriendship,this.metLevel=D.metLevel||5,this.luck=D.luck,this.metBiome=D.metBiome,this.metSpecies=D.metSpecies??(this.metBiome!==-1?this.species.speciesId:this.species.getRootSpeciesId(!0)),this.metWave=D.metWave??(this.metBiome===-1?-1:0),this.pauseEvolutions=D.pauseEvolutions,this.pokerus=!!D.pokerus,this.evoCounter=D.evoCounter??0,this.fusionSpecies=D.fusionSpecies instanceof P?D.fusionSpecies:D.fusionSpecies?$e(D.fusionSpecies):null,this.fusionFormIndex=D.fusionFormIndex,this.fusionAbilityIndex=D.fusionAbilityIndex,this.fusionShiny=D.fusionShiny,this.fusionVariant=D.fusionVariant||0,this.fusionGender=D.fusionGender,this.fusionLuck=D.fusionLuck,this.fusionCustomPokemonData=D.fusionCustomPokemonData,this.fusionTeraType=D.fusionTeraType,this.usedTMs=D.usedTMs??[],this.customPokemonData=new Ms(D.customPokemonData),this.teraType=D.teraType,this.isTerastallized=D.isTerastallized,this.stellarTypesBoosted=D.stellarTypesBoosted??[];else{if(this.id=He(4294967296),this.ivs=C||Uf(this.id),this.gender===void 0&&this.generateGender(),this.formIndex===void 0&&(this.formIndex=a.getSpeciesFormIndex(R,this.gender,this.nature,this.isPlayer())),this.shiny===void 0&&this.trySetShiny(),this.variant===void 0&&(this.variant=this.shiny?this.generateShinyVariant():0),this.customPokemonData=new Ms,U!==void 0?this.setNature(U):this.generateNature(),this.friendship=R.baseFriendship,this.metLevel=n,this.metBiome=a.currentBattle?a.arena.biomeType:-1,this.metSpecies=R.speciesId,this.metWave=a.currentBattle?a.currentBattle.waveIndex:-1,this.pokerus=!1,n>1){const h=new Pt(a.gameMode.isSplicedOnly);!h.value&&!this.isPlayer()&&!this.hasTrainer()&&a.applyModifier(sl,!1,h),h.value&&(this.calculateStats(),this.generateFusionSpecies())}this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0),this.fusionLuck=this.luck,this.teraType=eE(this.getTypes(!1,!1,!0)),this.isTerastallized=!1,this.stellarTypesBoosted=[]}this.generateName(),R.isObtainable()||(this.shiny=!1),D||this.calculateStats()}getNameToRender(){try{return this.nickname?decodeURIComponent(escape(atob(this.nickname))):this.name}catch(A){return console.error(`Failed to decode nickname for ${this.name}`,A),this.name}}init(){this.fieldPosition=0,this.initBattleInfo(),a.fieldUI.addAt(this.battleInfo,0);const A=o(n=>{const I=a.addPokemonSprite(this,0,0,`pkmn__${this.isPlayer()?"back__":""}sub`,void 0,!0);return I.setOrigin(.5,1),I.setPipeline(a.spritePipeline,{tone:[0,0,0,0],hasShadow:!!n,teraColor:BR(this.getTeraType()),isTerastallized:this.isTerastallized}),I},"getSprite");this.setScale(this.getSpriteScale());const s=A(!0),R=A();R.setVisible(!1),this.addAt(s,0),this.addAt(R,1),this.isShiny()&&!this.shinySparkle&&this.initShinySparkle()}isOnField(){return!a||this.switchOutStatus?!1:a.field.getIndex(this)>-1}isFainted(A=!1){var s;return this.hp<=0&&(!A||((s=this.status)==null?void 0:s.effect)===re.FAINT)}isAllowedInBattle(){return!this.isFainted()&&this.isAllowedInChallenge()}isAllowedInChallenge(){const A=new Pt(!0);return PR(rO.POKEMON_IN_BATTLE,this,A),A.value}isActive(A=!1){return a?this.isAllowedInBattle()&&(!A||this.isOnField()):!1}getDexAttr(){let A=0n;return A|=this.gender!==At.FEMALE?de.MALE:de.FEMALE,A|=this.shiny?de.SHINY:de.NON_SHINY,A|=this.variant>=2?de.VARIANT_3:this.variant===1?de.VARIANT_2:de.DEFAULT_VARIANT,A|=a.gameData.getFormAttr(this.formIndex),A}generateName(){if(!this.fusionSpecies){this.name=this.species.getName(this.formIndex);return}this.name=zz(this.species.getName(this.formIndex),this.fusionSpecies.getName(this.fusionFormIndex)),this.battleInfo&&this.updateInfo(!0)}loadAssets(A=!0){return new Promise(s=>{const R=this.getMoveset().map(n=>n.getMove().id);Promise.allSettled(R.map(n=>ol(n))).then(()=>{Tl(R),this.getSpeciesForm().loadAssets(this.getGender()===At.FEMALE,this.formIndex,this.shiny,this.variant),(this.isPlayer()||this.getFusionSpeciesForm())&&a.loadPokemonAtlas(this.getBattleSpriteKey(!0,A),this.getBattleSpriteAtlasPath(!0,A)),this.getFusionSpeciesForm()&&(this.getFusionSpeciesForm().loadAssets(this.getFusionGender()===At.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant),a.loadPokemonAtlas(this.getFusionBattleSpriteKey(!0,A),this.getFusionBattleSpriteAtlasPath(!0,A))),a.load.once(TE.Loader.Events.COMPLETE,()=>{if(this.isPlayer()){const I=console.warn;console.warn=()=>{};const r=a.anims.generateFrameNames(this.getBattleSpriteKey(),{zeroPad:4,suffix:".png",start:1,end:400});console.warn=I,a.anims.exists(this.getBattleSpriteKey())||a.anims.create({key:this.getBattleSpriteKey(),frames:r,frameRate:10,repeat:-1})}this.playAnim();const n=o(()=>{var I;this.updateFusionPalette(),(I=this.summonData)!=null&&I.speciesForm&&this.updateFusionPalette(!0),s()},"updateFusionPaletteAndResolve");if(this.shiny){const I=o((r=!1)=>new Promise(async L=>{const N=this.getBattleSpriteAtlasPath(r,A).replace("variant/","").replace(/_[1-3]$/,"");let l=aR;const C=a.experimentalSprites&&a.hasExpSprite(this.getBattleSpriteKey(r,A));N.split("/").map(D=>l?l=l[D]:null);const U=l;if(U&&U[this.variant]===1){const D=this.getBattleSpriteKey(r);mi.hasOwnProperty(D)||await this.populateVariantColorCache(D,C,N)}L()}),"populateVariantColors");this.isPlayer()?Promise.all([I(!1),I(!0)]).then(()=>n()):I(!1).then(()=>n())}else n()}),a.load.isLoading()||a.load.start()})})}async fallbackVariantColor(A,s,R,n,...I){console.warn(`Could not load ${s}!`,...I),R&&await this.populateVariantColorCache(A,!1,n)}async populateVariantColorCache(A,s,R){const n=`./images/pokemon/variant/${s?"exp/":""}${R}.json`;return a.cachedFetch(n).then(I=>I.ok?I.json():this.fallbackVariantColor(A,I.url,s,R,I.status,I.statusText)).catch(I=>this.fallbackVariantColor(A,n,s,R,I)).then(I=>{Pe(I)||(mi[A]=I)})}getFormKey(){return!this.species.forms.length||this.species.forms.length<=this.formIndex?"":this.species.forms[this.formIndex].formKey}getFusionFormKey(){return this.fusionSpecies?!this.fusionSpecies.forms.length||this.fusionSpecies.forms.length<=this.fusionFormIndex?"":this.fusionSpecies.forms[this.fusionFormIndex].formKey:null}getSpriteAtlasPath(A){const s=this.getSpriteId(A).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(s)?"variant/":""}${s}`}getBattleSpriteAtlasPath(A,s){const R=this.getBattleSpriteId(A,s).replace(/\_{2}/g,"/");return`${/_[1-3]$/.test(R)?"variant/":""}${R}`}getSpriteId(A){return this.getSpeciesForm(A).getSpriteId(this.getGender(A)===At.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getSpeciesForm(s).getSpriteId(this.getGender(s)===At.FEMALE,this.formIndex,this.shiny,this.variant,A)}getSpriteKey(A){return this.getSpeciesForm(A).getSpriteKey(this.getGender(A)===At.FEMALE,this.formIndex,this.shiny,this.variant)}getBattleSpriteKey(A,s){return`pkmn__${this.getBattleSpriteId(A,s)}`}getFusionSpriteId(A){return this.getFusionSpeciesForm(A).getSpriteId(this.getFusionGender(A)===At.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getFusionBattleSpriteId(A,s){return A===void 0&&(A=this.isPlayer()),this.getFusionSpeciesForm(s).getSpriteId(this.getFusionGender(s)===At.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant,A)}getFusionBattleSpriteKey(A,s){return`pkmn__${this.getFusionBattleSpriteId(A,s)}`}getFusionBattleSpriteAtlasPath(A,s){return this.getFusionBattleSpriteId(A,s).replace(/\_{2}/g,"/")}getIconAtlasKey(A){return this.getSpeciesForm(A).getIconAtlasKey(this.formIndex,this.shiny,this.variant)}getFusionIconAtlasKey(A){return this.getFusionSpeciesForm(A).getIconAtlasKey(this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getIconId(A){return this.getSpeciesForm(A).getIconId(this.getGender(A)===At.FEMALE,this.formIndex,this.shiny,this.variant)}getFusionIconId(A){return this.getFusionSpeciesForm(A).getIconId(this.getFusionGender(A)===At.FEMALE,this.fusionFormIndex,this.fusionShiny,this.fusionVariant)}getSpeciesForm(A){var s;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.speciesForm:this.species.forms&&this.species.forms.length>0?this.species.forms[this.formIndex]:this.species}getFusionSpeciesForm(A){var s,R,n,I,r;return!A&&((s=this.summonData)!=null&&s.speciesForm)?this.summonData.fusionSpeciesForm:!((n=(R=this.fusionSpecies)==null?void 0:R.forms)!=null&&n.length)||this.fusionFormIndex>=((I=this.fusionSpecies)==null?void 0:I.forms.length)?this.fusionSpecies:(r=this.fusionSpecies)==null?void 0:r.forms[this.fusionFormIndex]}getSprite(){return this.getAt(0)}getTintSprite(){return this.maskEnabled?this.maskSprite:this.getAt(1)}getSpriteScale(){const A=this.getFormKey();return this.isMax()===!0||A==="segin-starmobile"||A==="schedar-starmobile"||A==="navi-starmobile"||A==="ruchbah-starmobile"||A==="caph-starmobile"?1.5:this.customPokemonData.spriteScale>0?this.customPokemonData.spriteScale:1}resetSprite(){this.setVisible(!1),this.isOffsetBySubstitute()&&(this.x-=this.getSubstituteOffset()[0],this.y-=this.getSubstituteOffset()[1]),this.setAlpha(1),this.setScale(this.getSpriteScale())}getHeldItems(){return a?a.findModifiers(A=>A instanceof Ft&&A.pokemonId===this.id,this.isPlayer()):[]}updateScale(){this.setScale(this.getSpriteScale())}updateSpritePipelineData(){[this.getSprite(),this.getTintSprite()].filter(A=>!!A).map(A=>{A.pipelineData.teraColor=BR(this.getTeraType()),A.pipelineData.isTerastallized=this.isTerastallized}),this.updateInfo(!0)}initShinySparkle(){const A=a.addFieldSprite(0,0,"shiny");A.setVisible(!1),A.setOrigin(.5,1),this.add(A),this.shinySparkle=A}tryPlaySprite(A,s,R){try{A.play(R),s.play(R)}catch(n){return console.error(`Couldn't play animation for '${R}'!
Is the image for this Pokemon missing?
`,n),!1}return!0}playAnim(){this.tryPlaySprite(this.getSprite(),this.getTintSprite(),this.getBattleSpriteKey())}getFieldPositionOffset(){switch(this.fieldPosition){case 0:return[0,0];case 1:return[-32,-8];case 2:return[32,0]}}getSubstituteOffset(){return this.isPlayer()?[-30,10]:[30,-10]}isOffsetBySubstitute(){const A=this.getTag(xE);if(A){if(A.sprite===void 0)return!1;const s=a.getCurrentPhase();return!(s instanceof pR&&s.getPokemon()===this)}else return!1}destroySubstitute(){const A=this.getTag(xE);A&&A.sprite&&A.sprite.destroy()}setFieldPosition(A,s){return new Promise(R=>{if(A===this.fieldPosition){R();return}const n=this.getFieldPositionOffset();this.fieldPosition=A,this.battleInfo.setMini(A!==0),this.battleInfo.setOffset(A===2);const I=this.getFieldPositionOffset(),r=I[0]-n[0],L=I[1]-n[1],N=this.getTag(xE);if(s){const l=[this];N!=null&&N.sprite&&l.push(N.sprite),a.tweens.add({targets:l,x:o((C,U,D)=>D+r,"x"),y:o((C,U,D)=>D+L,"y"),duration:s,ease:"Sine.easeOut",onComplete:o(()=>R(),"onComplete")})}else this.x+=r,this.y+=L,N!=null&&N.sprite&&(N.sprite.x+=r,N.sprite.y+=L)})}getStats(A=!0){var s;return!A&&((s=this.summonData)!=null&&s.stats)?this.summonData.stats:this.stats}getStat(A,s=!0){return!s&&this.summonData&&this.summonData.stats[A]!==0?this.summonData.stats[A]:this.stats[A]}setStat(A,s,R=!0){s>=0&&(!R&&this.summonData?this.summonData.stats[A]=s:this.stats[A]=s)}getStatStages(){return this.summonData?this.summonData.statStages:[0,0,0,0,0,0,0]}getStatStage(A){return this.summonData?this.summonData.statStages[A-1]:0}setStatStage(A,s){this.summonData&&(s>=-6?this.summonData.statStages[A-1]=Math.min(s,6):this.summonData.statStages[A-1]=Math.max(s,-6))}getCritStage(A,s){const R=new je(0);dA(iE,A,this,s,R),a.applyModifiers(ML,A.isPlayer(),A,R),a.applyModifiers(PN,A.isPlayer(),R),_t(YU,A,null,!1,R);const n=A.getTag(iN);return n&&(n instanceof DD?R.value+=n.typesOnAdd.includes(i.DRAGON)?2:1:R.value+=2),`${R.value}`,R.value}getEffectiveStat(A,s,R,n=!1,I=!1,r=!1,L=!1,N=!0,l=!1){var _,d;const C=new je(this.getStat(A,!1));l||a.applyModifiers(DL,this.isPlayer(),this,A,C);const U=new Pt(!1);for(const f of a.getField(!0))if(Ij(xi,f,A,C,this,U,N),U.value)break;n||gc(yA,this,A,C,N);const D=this.getAlly();Pe(D)||mc(wa,D,A,C,N,this,(R==null?void 0:R.hasFlag(ct.IGNORE_ABILITIES))||r);let M=C.value*this.getStatStageMultiplier(A,s,R,I,L,N,l);switch(A){case p.ATK:this.getTag(w.SLOW_START)&&(M>>=1);break;case p.DEF:this.isOfType(i.ICE)&&((_=a.arena.weather)==null?void 0:_.weatherType)===Oe.SNOW&&(M*=1.5);break;case p.SPATK:break;case p.SPDEF:this.isOfType(i.ROCK)&&((d=a.arena.weather)==null?void 0:d.weatherType)===Oe.SANDSTORM&&(M*=1.5);break;case p.SPD:const f=this.isPlayer()?Dt.PLAYER:Dt.ENEMY;a.arena.getTagOnSide(Fe.TAILWIND,f)&&(M*=2),a.arena.getTagOnSide(Fe.GRASS_WATER_PLEDGE,f)&&(M>>=2),this.getTag(w.SLOW_START)&&(M>>=1),this.status&&this.status.effect===re.PARALYSIS&&(M>>=1),this.getTag(w.UNBURDEN)&&this.hasAbility(O.UNBURDEN)&&(M*=2);break}const h=this.findTag(f=>f instanceof aN&&f.stat===A);return h&&(M*=h.multiplier),Math.floor(M)}calculateStats(){this.stats||(this.stats=[0,0,0,0,0,0]);const A=this.calculateBaseStats();for(const s of Hn){const R=new je(Math.floor((2*A[s]+this.ivs[s])*this.level*.01));if(s===p.HP){if(R.value=R.value+this.level+10,a.applyModifier(pI,this.isPlayer(),this,s,R),this.hasAbility(O.WONDER_GUARD,!1,!0)&&(R.value=1),this.hp>R.value||this.hp===void 0)this.hp=R.value;else if(this.hp){const n=this.getMaxHp();n&&R.value>n&&(this.hp+=R.value-n)}}else{R.value+=5;const n=new je(al(this.getNature(),s));a.applyModifier(ZN,this.isPlayer(),this,n),n.value!==1&&(R.value=Math.max(Math[n.value>1?"ceil":"floor"](R.value*n.value),1)),a.applyModifier(pI,this.isPlayer(),this,s,R)}R.value=TE.Math.Clamp(R.value,1,Number.MAX_SAFE_INTEGER),this.setStat(s,R.value)}}calculateBaseStats(){const A=this.getSpeciesForm(!0).baseStats.slice(0);if(PR(rO.FLIP_STAT,this,A),a.applyModifiers(BN,this.isPlayer(),this,A),a.applyModifiers(gN,this.isPlayer(),this,A),this.isFusion()){const s=this.getFusionSpeciesForm(!0).baseStats;PR(rO.FLIP_STAT,this,s);for(const R of Hn)A[R]=Math.ceil((A[R]+s[R])/2)}else if(a.gameMode.isSplicedOnly)for(const s of Hn)A[s]=Math.ceil(A[s]/2);return a.applyModifiers(HN,this.isPlayer(),this,A),A}getNature(){return this.customPokemonData.nature!==-1?this.customPokemonData.nature:this.nature}setNature(A){this.nature=A,this.calculateStats()}setCustomNature(A){this.customPokemonData.nature=A,this.calculateStats()}generateNature(A){A===void 0&&(A=dE(rt));const s=A[He(A.length)];this.setNature(s)}isFullHp(){return this.hp>=this.getMaxHp()}getMaxHp(){return this.getStat(p.HP)}getInverseHp(){return this.getMaxHp()-this.hp}getHpRatio(A=!1){return A?this.hp/this.getMaxHp():Math.round(this.hp/this.getMaxHp()*100)/100}generateGender(){this.species.malePercent===null?this.gender=At.GENDERLESS:this.id%256*.390625<this.species.malePercent?this.gender=At.MALE:this.gender=At.FEMALE}getGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.gender)!==void 0?this.summonData.gender:this.gender}getFusionGender(A){var s;return!A&&((s=this.summonData)==null?void 0:s.fusionGender)!==void 0?this.summonData.fusionGender:this.fusionGender}isShiny(){return this.shiny||this.isFusion()&&this.fusionShiny}getVariant(){return this.isFusion()?Math.max(this.variant,this.fusionVariant):this.variant}getLuck(){return this.luck+(this.isFusion()?this.fusionLuck:0)}isFusion(){return!!this.fusionSpecies}hasFusionSpecies(A){var s;return((s=this.fusionSpecies)==null?void 0:s.speciesId)===A}hasSpecies(A,s){var R,n;return Pe(s)?this.species.speciesId===A||((R=this.fusionSpecies)==null?void 0:R.speciesId)===A:this.species.speciesId===A&&this.getFormKey()===s||((n=this.fusionSpecies)==null?void 0:n.speciesId)===A&&this.getFusionFormKey()===s}getMoveset(A){var n;const s=!A&&((n=this.summonData)!=null&&n.moveset)?this.summonData.moveset:this.moveset;let R=this.isPlayer()?xe.MOVESET_OVERRIDE:xe.OPP_MOVESET_OVERRIDE;return Array.isArray(R)||(R=[R]),R.length>0&&(this.isPlayer()||(this.moveset=[]),R.forEach((I,r)=>{var N;const L=((N=this.moveset[r])==null?void 0:N.ppUsed)??0;this.moveset[r]=new Lt(I,Math.min(L,Ve[I].pp))})),s}getUnlockedEggMoves(){const A=[],s=this.metSpecies in _E?this.metSpecies:this.getSpeciesForm(!0).getRootSpeciesId(!0);if(s in _E)for(let R=0;R<4;R++)a.gameData.starterData[s].eggMoves&1<<R&&A.push(_E[s][R]);return A}getLearnableLevelMoves(){let A=this.getLevelMoves(1,!0,!1,!0).map(s=>s[1]);return this.metBiome===-1&&!a.gameMode.isFreshStartChallenge()&&!a.gameMode.isDaily&&(A=this.getUnlockedEggMoves().concat(A)),Array.isArray(this.usedTMs)&&this.usedTMs.length>0&&(A=this.usedTMs.filter(s=>!A.includes(s)).concat(A)),A=A.filter(s=>!this.moveset.some(R=>R.moveId===s)),A}getTypes(A=!1,s=!1,R=!1){var I,r,L,N;const n=[];if(A&&this.isTerastallized){const l=this.getTeraType();if(this.isTerastallized&&!(s&&l===i.STELLAR)&&(n.push(l),s))return n}if(!n.length||!A)if(!R&&((I=this.summonData)!=null&&I.types)&&this.summonData.types.length>0)this.summonData.types.forEach(l=>n.push(l));else{const l=this.getSpeciesForm(R),C=this.getFusionSpeciesForm(R),U=((r=this.customPokemonData.types)==null?void 0:r.length)>0,D=U&&this.customPokemonData.types[0]!==i.UNKNOWN?this.customPokemonData.types[0]:l.type1;n.push(D);let M=i.UNKNOWN;if(C){const h=(L=this.fusionCustomPokemonData)!=null&&L.types&&this.fusionCustomPokemonData.types.length>0&&this.fusionCustomPokemonData.types[0]!==i.UNKNOWN?this.fusionCustomPokemonData.types[0]:C.type1,_=(N=this.fusionCustomPokemonData)!=null&&N.types&&this.fusionCustomPokemonData.types.length>1&&this.fusionCustomPokemonData.types[1]!==i.UNKNOWN?this.fusionCustomPokemonData.types[1]:C.type2;_!==null&&_!==n[0]?M=_:h!==n[0]&&(M=h),M===i.UNKNOWN&&Pe(_)&&(M=U&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==i.UNKNOWN?this.customPokemonData.types[1]:l.type2??i.UNKNOWN)}else M=U&&this.customPokemonData.types.length>1&&this.customPokemonData.types[1]!==i.UNKNOWN?this.customPokemonData.types[1]:l.type2??i.UNKNOWN;M!==i.UNKNOWN&&n.push(M)}if(n.length||n.push(i.UNKNOWN),n.length>1&&n.includes(i.UNKNOWN)){const l=n.indexOf(i.UNKNOWN);l!==-1&&n.splice(l,1)}return!R&&this.summonData&&this.summonData.addedType&&!n.includes(this.summonData.addedType)&&n.push(this.summonData.addedType),n.length>1&&n[0]===n[1]&&n.splice(0,1),n}isOfType(A,s=!0,R=!1,n=!1){return this.getTypes(s,R,n).some(I=>I===A)}getAbility(A=!1){var R,n;if(!A&&((R=this.summonData)!=null&&R.ability))return nA[this.summonData.ability];if(xe.ABILITY_OVERRIDE&&this.isPlayer())return nA[xe.ABILITY_OVERRIDE];if(xe.OPP_ABILITY_OVERRIDE&&!this.isPlayer())return nA[xe.OPP_ABILITY_OVERRIDE];if(this.isFusion())return!Pe((n=this.fusionCustomPokemonData)==null?void 0:n.ability)&&this.fusionCustomPokemonData.ability!==-1?nA[this.fusionCustomPokemonData.ability]:nA[this.getFusionSpeciesForm(A).getAbility(this.fusionAbilityIndex)];if(!Pe(this.customPokemonData.ability)&&this.customPokemonData.ability!==-1)return nA[this.customPokemonData.ability];let s=this.getSpeciesForm(A).getAbility(this.abilityIndex);return s===O.NONE&&(s=this.species.ability1),nA[s]}getPassiveAbility(){return xe.PASSIVE_ABILITY_OVERRIDE&&this.isPlayer()?nA[xe.PASSIVE_ABILITY_OVERRIDE]:xe.OPP_PASSIVE_ABILITY_OVERRIDE&&!this.isPlayer()?nA[xe.OPP_PASSIVE_ABILITY_OVERRIDE]:!Pe(this.customPokemonData.passive)&&this.customPokemonData.passive!==-1?nA[this.customPokemonData.passive]:nA[this.species.getPassiveAbility(this.formIndex)]}getAbilityAttrs(A,s=!0,R=!1){const n=[];return(!s||this.canApplyAbility())&&n.push(...this.getAbility(R).getAttrs(A)),(!s||this.canApplyAbility(!0))&&n.push(...this.getPassiveAbility().getAttrs(A)),n}setTempAbility(A,s=!1){_d(this,s),s?this.summonData.passiveAbility=A.id:this.summonData.ability=A.id,hd(this,s)}suppressAbility(){[!0,!1].forEach(A=>_d(this,A)),this.summonData.abilitySuppressed=!0}hasPassive(){if(xe.HAS_PASSIVE_ABILITY_OVERRIDE===!1&&this.isPlayer()||xe.OPP_HAS_PASSIVE_ABILITY_OVERRIDE===!1&&!this.isPlayer())return!1;if((xe.PASSIVE_ABILITY_OVERRIDE!==O.NONE||xe.HAS_PASSIVE_ABILITY_OVERRIDE)&&this.isPlayer()||(xe.OPP_PASSIVE_ABILITY_OVERRIDE!==O.NONE||xe.OPP_HAS_PASSIVE_ABILITY_OVERRIDE)&&!this.isPlayer())return!0;const{currentBattle:A,gameMode:s}=a,R=A==null?void 0:A.waveIndex;return this instanceof Fs&&((A==null?void 0:A.battleSpec)===DE.FINAL_BOSS||s.isEndlessMinorBoss(R)||s.isEndlessMajorBoss(R))?!1:this.passive||this.isBoss()}canApplyAbility(A=!1){var I,r;if(A&&!this.hasPassive())return!1;const s=A?this.getPassiveAbility():this.getAbility();if(this.isFusion()&&s.hasAttr(ls))return!1;const R=(I=a)==null?void 0:I.arena;if(R.ignoreAbilities&&R.ignoringEffectSource!==this.getBattlerIndex()&&s.isIgnorable||(r=this.summonData)!=null&&r.abilitySuppressed&&s.isSuppressable)return!1;const n=R.getTag(Fe.NEUTRALIZING_GAS);if(this.isOnField()&&n&&!n.isBeingRemoved()){const L=s.hasAttr(Va),N=this.hasAbilityWithAttr(Va,!1);if(!(!s.isSuppressable||L||N&&!n.shouldApplyToSelf()))return!1}return(this.hp>0||s.isBypassFaint)&&!s.conditions.find(L=>!L(this))}hasAbility(A,s=!0,R){return!!(this.getAbility(R).id===A&&(!s||this.canApplyAbility())||this.getPassiveAbility().id===A&&this.hasPassive()&&(!s||this.canApplyAbility(!0)))}hasAbilityWithAttr(A,s=!0,R){return!!((!s||this.canApplyAbility())&&this.getAbility(R).hasAttr(A)||this.hasPassive()&&(!s||this.canApplyAbility(!0))&&this.getPassiveAbility().hasAttr(A))}getWeight(){const A=this.getTag(PD);let s=0;Pe(A)||(s=100*A.autotomizeCount);const R=.1,n=new je(this.species.weight-s);return _t(RN,this,null,!1,n),Math.max(R,n.value)}getTeraType(){if(this.hasSpecies(e.TERAPAGOS))return i.STELLAR;if(this.hasSpecies(e.OGERPON))switch(this.species.speciesId===e.OGERPON?this.formIndex:this.fusionFormIndex){case 0:case 4:return i.GRASS;case 1:case 5:return i.WATER;case 2:case 6:return i.FIRE;case 3:case 7:return i.ROCK}return this.hasSpecies(e.SHEDINJA)?i.BUG:this.teraType}isGrounded(){return!!this.getTag(rN)||!this.isOfType(i.FLYING,!0,!0)&&!this.hasAbility(O.LEVITATE)&&!this.getTag(w.FLOATING)&&!this.getTag(Ra)}isTrapped(A=[],s=!0){var N;const R=this.getTag(w.COMMANDED);if((N=R==null?void 0:R.getSourcePokemon())!=null&&N.isActive(!0))return!0;if(this.isOfType(i.GHOST))return!1;const n=new Pt(!1),r=(this.isPlayer()?a.getEnemyField():a.getPlayerField()).filter(l=>l.switchOutStatus===!1);for(const l of r)Uj(eD,l,n,this,A,s);const L=this.isPlayer()?Dt.PLAYER:Dt.ENEMY;return n.value||!!this.getTag(jR)||!!a.arena.getTagOnSide(Fe.FAIRY_LOCK,L)}getMoveType(A,s=!0){const R=new je(A.type);return dA(cs,this,null,A,R),An(Mn,this,null,A,s,R),a.arena.applyTags(Fe.ION_DELUGE,s,R),this.getTag(w.ELECTRIFIED)&&(R.value=i.ELECTRIC),R.value}getMoveEffectiveness(A,s,R=!1,n=!0,I){var C,U;if(!Pe((C=this.turnData)==null?void 0:C.moveEffectiveness))return(U=this.turnData)==null?void 0:U.moveEffectiveness;if(s.hasAttr(uN))return 1;const r=A.getMoveType(s),L=new je(s.category!==g.STATUS||s.hasAttr(YD)?this.getAttackTypeEffectiveness(r,A,!1,n,s):1);dA(gI,A,this,s,L),this.getTypes(!0,!0).find(D=>s.isTypeImmune(A,this,D))&&(L.value=0),this.getTag(_D)&&this.getMoveType(s)===i.FIRE&&(L.value*=2);const N=I??new Pt(!1);R||(Xn(PO,this,A,s,N,n,L),N.value||Xn(jn,this,A,s,N,n,L),N.value||(this.isPlayer()?a.getPlayerField():a.getEnemyField()).forEach(M=>Xn(fr,M,A,s,N)));const l=this.findTags(D=>D instanceof UD&&D.immuneType===r);for(const D of l)if(s&&!s.getAttrs(VR).some(M=>M.tagType===D.tagType)){L.value=0;break}return!R&&s.category!==g.STATUS&&Xn(NU,this,A,s,N,n,L),s.category===g.STATUS&&s.hitsSubstitute(A,this)&&(L.value=0),N.value?0:L.value}getAttackTypeEffectiveness(A,s,R=!1,n=!0,I){var C;if(A===i.STELLAR)return this.isTerastallized?2:1;const r=this.getTypes(!0,!0),L=a.arena;if(A===i.GROUND&&(this.isGrounded()||L.hasTag(Fe.GRAVITY))){const U=r.indexOf(i.FLYING);U>-1&&r.splice(U,1)}let N=r.map(U=>{const D=new je(Zc(A,U));if(PR(rO.TYPE_EFFECTIVENESS,D),I&&dA(cM,null,this,I,D,U),s){const M=new Pt(!1);if(s.isActive(!0)&&s.hasAbilityWithAttr(OL)&&_t(OL,s,M,n,A,U),M.value&&D.value===0||this.findTags(_=>_ instanceof rL).some(_=>_.ignoreImmunity(U,A))&&D.value===0)return 1}return D.value}).reduce((U,D)=>U*D,1);const l=new je(Zc(A,i.FLYING));return PR(rO.TYPE_EFFECTIVENESS,l),!R&&((C=L.weather)==null?void 0:C.weatherType)===Oe.STRONG_WINDS&&!L.weather.isEffectSuppressed()&&this.isOfType(i.FLYING)&&l.value===2&&(N/=2,n||a.queueMessage(u.t("weather:strongWindsEffectMessage"))),N}getMatchupScore(A){const s=this.getTypes(!0),R=A.getTypes(!0,!0),n=(this.isActive(!0)?this.getEffectiveStat(p.SPD,A):this.getStat(p.SPD,!1))>=A.getEffectiveStat(p.SPD,this);let I=A.getAttackTypeEffectiveness(s[0],this)*(n?1.25:1),r=1/Math.max(this.getAttackTypeEffectiveness(R[0],A),.25);s.length>1&&(I*=A.getAttackTypeEffectiveness(s[1],this)),R.length>1&&(r*=1/Math.max(this.getAttackTypeEffectiveness(R[1],A),.25));let L=this.getHpRatio()+(1-A.getHpRatio());return n&&(L=Math.min(L*1.5,1)),(I+r)*L}getEvolution(){if(jt.hasOwnProperty(this.species.speciesId)){const A=jt[this.species.speciesId];for(const s of A)if(!s.item&&this.level>=s.level&&(Pe(s.preFormKey)||this.getFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}if(this.isFusion()&&this.fusionSpecies&&jt.hasOwnProperty(this.fusionSpecies.speciesId)){const A=jt[this.fusionSpecies.speciesId].map(s=>new Aa(this.species.speciesId,s));for(const s of A)if(!s.item&&this.level>=s.level&&(Pe(s.preFormKey)||this.getFusionFormKey()===s.preFormKey)&&(s.condition===null||s.condition.predicate(this)))return s}return null}getLevelMoves(A,s=!1,R=!1,n=!1,I=0){const r=[];let L=[];if(A||(A=this.level),I===4&&this.fusionSpecies)L=this.getFusionSpeciesForm(!0).getLevelMoves().filter(N=>s&&N[0]===ne||n&&N[0]===$||N[0]>0);else{if(R){const N=this.species.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let l=0;l<N.length;l++){const C=ms(N[l][0],this.formIndex).getLevelMoves();n?L.push(...C):L.push(...C.filter(U=>s&&U[0]===ne||(!l||U[0]>1)&&(l===N.length-1||U[0]<=N[l+1][1])))}}else L=this.getSpeciesForm(!0).getLevelMoves().filter(N=>s&&N[0]===ne||n&&N[0]===$||N[0]>0);if(this.fusionSpecies&&I!==5)if(R){const N=this.fusionSpecies.getSimulatedEvolutionChain(this.level,this.hasTrainer(),this.isBoss(),this.isPlayer());for(let l=0;l<N.length;l++){const C=ms(N[l][0],this.fusionFormIndex).getLevelMoves();n?L.push(...C.filter(U=>s&&U[0]===ne||U[0]!==ne)):L.push(...C.filter(U=>s&&U[0]===ne||(!l||U[0]>1)&&(l===N.length-1||U[0]<=N[l+1][1])))}}else L.push(...this.getFusionSpeciesForm(!0).getLevelMoves().filter(N=>s&&N[0]===ne||n&&N[0]===$||N[0]>0))}return L.sort((N,l)=>N[0]>l[0]?1:N[0]<l[0]?-1:0),L=L.filter(N=>{const l=N[0],C=l<A,U=l===0&&s;return!(l>this.level)&&(n||!C||U)}),L&&this.getUniqueMoves(L,r),r}getUniqueMoves(A,s){const R=[];for(const n of A)R.find(I=>I===n[1])||(R.push(n[1]),s.push(n))}getEggMoves(){return _E[this.getSpeciesForm().getRootSpeciesId()]}setMove(A,s){var n;if(s===t.NONE)return;const R=new Lt(s);this.moveset[A]=R,(n=this.summonData)!=null&&n.moveset&&(this.summonData.moveset[A]=R)}trySetShiny(A){if(a.gameMode.isEndless&&a.arena.biomeType===T.END)return!1;const s=(this.id&4294901760)>>>16,R=this.id&65535,n=a.gameData.trainerId^a.gameData.secretId,I=s^R,r=new je(t6);if(A===void 0){if(EE.isEventActive()){const L=EE.getClassicTrainerShinyChance();r.value*=EE.getShinyMultiplier(),this.hasTrainer()&&L>0&&(r.value=Math.max(L,r.value))}this.hasTrainer()||a.applyModifiers(vI,!0,r)}else r.value=A;return this.shiny=(n^I)<r.value,this.shiny&&this.initShinySparkle(),this.shiny}trySetShinySeed(A,s){const R=new je(t6);return A===void 0||s?(A!==void 0&&s&&(R.value=A),EE.isEventActive()&&(R.value*=EE.getShinyMultiplier()),this.hasTrainer()||a.applyModifiers(vI,!0,R)):R.value=A,this.shiny=He(65536)<R.value,this.shiny&&(this.variant=this.generateShinyVariant(),this.luck=this.variant+1+(this.fusionShiny?this.fusionVariant+1:0),this.initShinySparkle()),this.shiny}generateShinyVariant(){var n;const A=this.formIndex;let s=this.species.speciesId;if(this.species.forms.length>0){const I=(n=this.species.forms[A])==null?void 0:n.formKey;I&&(s=`${s}-${I}`)}if(!this.shiny||!aR.hasOwnProperty(s)&&!aR.hasOwnProperty(this.species.speciesId))return 0;const R=new je(0);return a.executeWithSeedOffset(()=>{R.value=He(10)},this.id,a.waveSeed),R.value>=ck?0:R.value>=hk?1:2}tryRerollHiddenAbilitySeed(A,s){if(!this.species.abilityHidden)return!1;const R=new je(sc);return A===void 0||s?(A!==void 0&&s&&(R.value=A),this.hasTrainer()||a.applyModifiers(gn,!0,R)):R.value=A,He(65536)<R.value&&(this.abilityIndex=2),this.abilityIndex===2}generateFusionSpecies(A){var L;const s=new je(sc);this.hasTrainer()||a.applyModifiers(gn,!0,s);const R=!He(s.value),n=He(2),I=A?N=>jt.hasOwnProperty(N.speciesId)&&!IA.hasOwnProperty(N.speciesId)&&!N.subLegendary&&!N.legendary&&!N.mythical&&!N.isTrainerForbidden()&&N.speciesId!==this.species.speciesId&&N.speciesId!==e.DITTO:this.species.getCompatibleFusionSpeciesFilter();let r;A&&this instanceof WE&&xe.STARTER_FUSION_SPECIES_OVERRIDE?r=$e(xe.STARTER_FUSION_SPECIES_OVERRIDE):this instanceof Fs&&xe.OPP_FUSION_SPECIES_OVERRIDE&&(r=$e(xe.OPP_FUSION_SPECIES_OVERRIDE)),this.fusionSpecies=r??a.randomSpecies(((L=a.currentBattle)==null?void 0:L.waveIndex)||0,this.level,!1,I,!0),this.fusionAbilityIndex=this.fusionSpecies.abilityHidden&&R?2:this.fusionSpecies.ability2!==this.fusionSpecies.ability1?n:0,this.fusionShiny=this.shiny,this.fusionVariant=this.variant,this.fusionSpecies.malePercent===null?this.fusionGender=At.GENDERLESS:this.id%256*.390625<this.fusionSpecies.malePercent?this.fusionGender=At.MALE:this.fusionGender=At.FEMALE,this.fusionFormIndex=a.getSpeciesFormIndex(this.fusionSpecies,this.fusionGender,this.getNature(),!0),this.fusionLuck=this.luck,this.generateName()}clearFusionSpecies(){this.fusionSpecies=null,this.fusionFormIndex=0,this.fusionAbilityIndex=0,this.fusionShiny=!1,this.fusionVariant=0,this.fusionGender=0,this.fusionLuck=0,this.fusionCustomPokemonData=null,this.generateName(),this.calculateStats()}generateAndPopulateMoveset(){var C,U;this.moveset=[];let A=[];const s=this.getLevelMoves(1,!0,!0);if(!s){console.warn("Error encountered trying to generate moveset for:",this.species.name);return}for(let D=0;D<s.length;D++){const M=s[D];if(this.level<M[0])break;let h=M[0];h===0&&(h=50),h===1&&Ve[M[1]].power>=80&&(h=40),!A.some(_=>_[0]===M[1])&&!Ve[M[1]].name.endsWith(" (N)")&&A.push([M[1],h])}if(this.hasTrainer()){const D=Object.keys(fn);for(const M of D){const h=Number.parseInt(M);let _=!1;for(const d of fn[M])if(Array.isArray(d)){if(d[0]===this.species.speciesId||this.fusionSpecies&&d[0]===this.fusionSpecies.speciesId&&d.slice(1).indexOf(this.species.forms[this.formIndex])>-1){_=!0;break}}else if(d===this.species.speciesId||this.fusionSpecies&&d===this.fusionSpecies.speciesId){_=!0;break}_&&!A.some(d=>d[0]===h)&&!Ve[h].name.endsWith(" (N)")&&(Zl[h]===V.COMMON&&this.level>=15?A.push([h,4]):Zl[h]===V.GREAT&&this.level>=30?A.push([h,8]):Zl[h]===V.ULTRA&&this.level>=50&&A.push([h,14]))}if(this.level>=60){for(let h=0;h<3;h++){const _=_E[this.species.getRootSpeciesId()][h];!A.some(d=>d[0]===_)&&!Ve[_].name.endsWith(" (N)")&&A.push([_,40])}const M=_E[this.species.getRootSpeciesId()][3];if(this.level>=170&&!A.some(h=>h[0]===M)&&!Ve[M].name.endsWith(" (N)")&&!this.isBoss()&&A.push([M,30]),this.fusionSpecies){for(let _=0;_<3;_++){const d=_E[this.fusionSpecies.getRootSpeciesId()][_];!A.some(f=>f[0]===d)&&!Ve[d].name.endsWith(" (N)")&&A.push([d,40])}const h=_E[this.fusionSpecies.getRootSpeciesId()][3];this.level>=170&&!A.some(_=>_[0]===h)&&!Ve[h].name.endsWith(" (N)")&&!this.isBoss()&&A.push([h,30])}}}this.isBoss()&&(A=A.filter(D=>!Ve[D[0]].hasAttr(na)),A=A.filter(D=>!Ve[D[0]].hasAttr(EM))),A=A.filter(D=>!Ve[D[0]].hasAttr(BI)),this.hasTrainer()&&(A=A.filter(D=>!Ve[D[0]].hasAttr(En)),A=A.map(D=>[D[0],D[1]*(Ve[D[0]].hasAttr(na)?.5:1)]),A=A.map(D=>[D[0],D[1]*(Ve[D[0]].hasAttr(BI)?.5:1)]),A=A.map(D=>[D[0],D[1]*(Ve[D[0]].getAttrs(Ge).some(M=>M.stages>1&&M.selfTarget)?1.25:1)]),A=A.map(D=>[D[0],D[1]*(Ve[D[0]].isChargingMove()||Ve[D[0]].hasAttr(vR)?.7:1)]));const R=Math.min(A.reduce((D,M)=>Math.max(Ve[M[0]].calculateEffectivePower(),D),40),90);A=A.map(D=>[D[0],D[1]*(Ve[D[0]].category===g.STATUS?1:Math.max(Math.min(Ve[D[0]].calculateEffectivePower()/R,1),.5))]);const n=this.getStat(p.ATK),I=this.getStat(p.SPATK),r=n>I?g.SPECIAL:g.PHYSICAL,L=r===g.PHYSICAL?n/I:I/n;A=A.map(D=>[D[0],D[1]*(Ve[D[0]].category===r?Math.min(Math.pow(L,3)*1.3,1):1)]);let N=.9;this.hasTrainer()&&(N+=.7),this.isBoss()&&(N+=.4);const l=A.map(D=>[D[0],Math.ceil(Math.pow(D[1],N)*100)]);if(this.hasTrainer()||this.isBoss()){const D=l.filter(M=>Ve[M[0]].category!==g.STATUS&&this.isOfType(Ve[M[0]].type));if(D.length){const M=D.reduce((d,f)=>d+f[1],0);let h=He(M),_=0;for(;h>D[_][1];)h-=D[_++][1];this.moveset.push(new Lt(D[_][0],0,0))}}else{const D=l.filter(M=>Ve[M[0]].category!==g.STATUS);if(D.length){const M=D.reduce((d,f)=>d+f[1],0);let h=He(M),_=0;for(;h>D[_][1];)h-=D[_++][1];this.moveset.push(new Lt(D[_][0],0,0))}}for(;l.length>this.moveset.length&&this.moveset.length<4;){this.hasTrainer()?A=l.filter(_=>!this.moveset.some(d=>_[0]===d.moveId)).map(_=>{let d;return this.moveset.some(f=>f.getMove().category!==g.STATUS&&f.getMove().type===Ve[_[0]].type)?d=Math.ceil(Math.sqrt(_[1])):Ve[_[0]].category!==g.STATUS?d=Math.ceil(_[1]/Math.max(Math.pow(4,this.moveset.filter(f=>(f.getMove().power??0)>1).length)/8,.5)*(this.isOfType(Ve[_[0]].type)?20:1)):d=_[1],[_[0],d]}):A=l.filter(_=>!this.moveset.some(d=>_[0]===d.moveId));const D=A.reduce((_,d)=>_+d[1],0);let M=He(D),h=0;for(;M>A[h][1];)M-=A[h++][1];this.moveset.push(new Lt(A[h][0],0,0))}(this.isPlayer()||!((C=a.currentBattle)!=null&&C.isBattleMysteryEncounter())||!((U=a.currentBattle)!=null&&U.mysteryEncounter))&&a.triggerPokemonFormChange(this,rI)}trySelectMove(A,s){const R=this.getMoveset().length>A?this.getMoveset()[A]:null;return(R==null?void 0:R.isUsable(this,s))??!1}showInfo(){if(!this.battleInfo.visible){const A=a.fieldUI.getAll().slice(0,4).filter(s=>s instanceof kT&&s instanceof WC===this.isPlayer()).find(()=>!0);!A||!this.getFieldIndex()?(a.fieldUI.sendToBack(this.battleInfo),a.sendTextToBack()):a.fieldUI.moveAbove(this.battleInfo,A),this.battleInfo.setX(this.battleInfo.x+(this.isPlayer()?150:this.isBoss()?-198:-150)),this.battleInfo.setVisible(!0),this.isPlayer()&&(this.battleInfo.expMaskRect.x+=150),a.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"-=150":`+=${this.isBoss()?246:150}`,duration:1e3,ease:"Cubic.easeOut"})}}hideInfo(){return new Promise(A=>{this.battleInfo&&this.battleInfo.visible?a.tweens.add({targets:[this.battleInfo,this.battleInfo.expMaskRect],x:this.isPlayer()?"+=150":`-=${this.isBoss()?246:150}`,duration:500,ease:"Cubic.easeIn",onComplete:o(()=>{this.isPlayer()&&(this.battleInfo.expMaskRect.x-=150),this.battleInfo.setVisible(!1),this.battleInfo.setX(this.battleInfo.x-(this.isPlayer()?150:this.isBoss()?-198:-150)),A()},"onComplete")}):A()})}setSwitchOutStatus(A){this.switchOutStatus=A}updateInfo(A){return this.battleInfo.updateInfo(this,A)}updateEffectiveness(A){this.battleInfo.updateEffectiveness(A)}toggleStats(A){this.battleInfo.toggleStats(A)}toggleFlyout(A){this.battleInfo.toggleFlyout(A)}addExp(A,s=!1){const R=a.getMaxExpLevel(s),n=this.exp;for(this.exp+=A;this.level<R&&this.exp>=IO(this.level+1,this.species.growthRate);)this.level++;this.level>=R&&(this.exp,IO(this.level,this.species.growthRate),this.exp=Math.max(IO(this.level,this.species.growthRate),n)),this.levelExp=this.exp-IO(this.level,this.species.growthRate)}isOpponent(A){return this.isPlayer()!==A.isPlayer()}getOpponent(A){const s=this.getOpponents()[A];return s.summonData?s:null}getOpponents(){return(this.isPlayer()?a.getEnemyField():a.getPlayerField()).filter(A=>A.isActive())}getOpponentDescriptor(){const A=this.getOpponents();return A.length===1?A[0].name:this.isPlayer()?u.t("arenaTag:opposingTeam"):u.t("arenaTag:yourTeam")}getAlly(){return(this.isPlayer()?a.getPlayerField():a.getEnemyField())[this.getFieldIndex()?0:1]}getAlliedField(){return this instanceof WE?a.getPlayerField():a.getEnemyField()}getStatStageMultiplier(A,s,R,n=!1,I=!1,r=!0,L=!1){const N=new je(this.getStatStage(A)),l=new Pt(!1);if(s){if(I)switch(A){case p.ATK:case p.SPATK:N.value=Math.max(N.value,0);break;case p.DEF:case p.SPDEF:N.value=Math.min(N.value,0);break}n||_t(va,s,null,r,A,l),R&&dA(OI,this,s,R,l)}if(!l.value){const C=new je(Math.max(2,2+N.value)/Math.max(2,2-N.value));return L||a.applyModifiers(lL,this.isPlayer(),A,C),Math.min(C.value,4)}return 1}getAccuracyMultiplier(A,s){if(s.hasAttr(xa))return 1;const n=new je(this.getStatStage(p.ACC)),I=new je(A.getStatStage(p.EVA)),r=new Pt(!1),L=new Pt(!1);_t(va,A,null,!1,p.ACC,r),_t(va,this,null,!1,p.EVA,L),dA(OI,this,A,s,L),a.applyModifiers(lL,this.isPlayer(),p.ACC,n),n.value=r.value?0:Math.min(n.value,6),I.value=L.value?0:I.value,A.findTag(U=>U instanceof rL)&&(I.value=Math.min(0,I.value));const N=new je(1);n.value!==I.value&&(N.value=n.value>I.value?(3+Math.min(n.value-I.value,6))/3:3/(3+Math.min(I.value-n.value,6))),gc(yA,this,p.ACC,N,!1,s);const l=new je(1);gc(yA,A,p.EVA,l);const C=this.getAlly();if(!Pe(C)){const U=this.hasAbilityWithAttr(ta)||s.hasFlag(ct.IGNORE_ABILITIES);mc(wa,C,p.ACC,N,!1,this,U),mc(wa,C,p.EVA,l,!1,this,U)}return N.value/l.value}getBaseDamage(A,s,R,n=!1,I=!1,r=!1,L=!1,N=!1,l=!0){const C=R===g.PHYSICAL,U=2*A.level/5+2,D=s.calculateBattlePower(A,this,l),M=new je(A.getEffectiveStat(C?p.ATK:p.SPATK,this,void 0,I,n,r,N,l));dA(TL,A,this,s,M);const h=new je(this.getEffectiveStat(C?p.DEF:p.SPDEF,A,s,n,I,L,N,l));dA(SM,A,this,s,h);const _=U*D*M.value/h.value/50+2;return l||(s.name,M.value,h.value),_}getAttackDamage(A,s,R=!1,n=!1,I=!1,r=!1,L=!1,N=!0){var Ne;const l=new je(0),C=this.isPlayer()?Dt.PLAYER:Dt.ENEMY,U=new je(s.category);dA(Ei,A,this,s,U);const D=U.value,M=A.getMoveType(s),h=new Pt(!1),_=this.getMoveEffectiveness(A,s,R,N,h),d=D===g.PHYSICAL,f=new je(a.arena.getAttackTypeMultiplier(M,A.isGrounded()));dA(bD,A,this,s,f);const H=_*f.value===0;if(h.value||H)return{cancelled:h.value,result:s.id===t.SHEER_COLD?11:5,damage:0};const B=new je(0);if(dA(FO,A,this,s,B),B.value){const Ue=new je(1);return a.applyModifiers(Ta,A.isPlayer(),A,s.id,null,Ue),B.value=Qt(B.value*Ue.value),{cancelled:!1,result:1,damage:B.value}}const K=new Pt(!1);if(dA(En,A,this,s,K),K.value)return{cancelled:!1,result:4,damage:this.hp};const Y=this.getBaseDamage(A,s,D,R,n,I,r,L,N),{targets:v,multiple:Z}=Fn(A,s.id),q=(Z?v.length:1)>1?.75:1,J=new je(1);a.applyModifiers(Ta,A.isPlayer(),A,s.id,null,J),n||An(kS,A,this,s,N,null,J);const Ae=new je(1);this.getTag(w.RECEIVE_DOUBLE_DAMAGE)&&(Ae.value=2);const Q=new je(L?1.5:1);_t(WU,A,null,N,Q);const Re=N?1:this.randSeedIntRange(85,100)/100,W=A.getTypes(),ie=A.getTeraType(),Be=W.includes(M),he=new je(1);Be&&M!==i.STELLAR&&(he.value+=.5),n||_t(TU,A,null,N,he),dA(Kr,A,this,s,he),A.isTerastallized&&ie===M&&M!==i.STELLAR&&(he.value+=.5),A.isTerastallized&&A.getTeraType()===i.STELLAR&&(!A.stellarTypesBoosted.includes(M)||A.hasSpecies(e.TERAPAGOS))&&(Be?he.value+=.5:he.value+=.2),he.value=Math.min(he.value,2.25);const ve=new je(1);if(d&&A.status&&A.status.effect===re.BURN&&!s.hasAttr(qD)){const Ue=new Pt(!1);n||_t(zU,A,Ue,N),Ue.value||(ve.value=.5)}const _e=new je(1);L||a.arena.applyTagsForSide(tL,C,N,A,D,_e);const Le=new je(1);s.getAttrs(VR).filter(Ue=>Ue.doubleDamage).forEach(Ue=>{this.getTag(Ue.tagType)&&(Le.value*=2)});const Ee=((Ne=a.arena.terrain)==null?void 0:Ne.terrainType)===Nt.MISTY&&this.isGrounded()&&M===i.DRAGON?.5:1;if(l.value=Qt(Y*q*J.value*f.value*Ae.value*Q.value*Re*he.value*_*ve.value*_e.value*Le.value*Ee),n||An(cU,A,this,s,N,l),A.isPlayer()||a.applyModifiers(qN,!1,l),this.isPlayer()||a.applyModifiers(el,!1,l),!R){Xn(MR,this,A,s,h,N,l);const Ue=this.getAlly();a.currentBattle.double&&!Pe(Ue)&&Ue.isActive(!0)&&Xn(SU,Ue,A,s,h,N,l)}dA(yD,A,this,s,l),this.isFullHp()&&!R&&Xn(oU,this,A,s,h,!1,l),N||(l.value,s.name);let se;return _<1?se=3:_>1?se=2:se=1,{cancelled:h.value,result:se,damage:l.value}}apply(A,s){const R=this.isPlayer()?Dt.PLAYER:Dt.ENEMY,n=new je(s.category);if(dA(Ei,A,this,s,n),n.value===g.STATUS){const d=new Pt(!1),f=this.getMoveEffectiveness(A,s,!1,!1,d);return!d.value&&f===0&&a.queueMessage(u.t("battle:hitResultNoEffect",{pokemonName:ee(this)})),f===0?5:6}let I;const r=new Pt(!1),L=A.getTag(w.ALWAYS_CRIT);if(dA(hn,A,this,s,r),_t(yU,A,null,!1,r,this,s),r.value||L)I=!0;else{const d=[24,8,2,1][Math.max(0,Math.min(this.getCritStage(A,s),3))];I=d===1||!a.randBattleSeedInt(d)}const N=a.arena.getTagOnSide(nU,R),l=new Pt(!1);_t(zS,this,null,!1,l),(N||l.value||xe.NEVER_CRIT_OVERRIDE)&&(I=!1),dA(TM,A,this,s);const{cancelled:C,result:U,damage:D}=this.getAttackDamage(A,s,!1,!1,!1,!1,I,!1),M=A.findTag(d=>d instanceof IL&&d.boostedType===A.getMoveType(s));if(M!=null&&M.oneUse&&A.removeTag(M.tagType),C||U===11||U===5)return A.stopMultiHit(this),C||(U===11?a.queueMessage(u.t("battle:hitResultImmune",{pokemonName:ee(this)})):a.queueMessage(u.t("battle:hitResultNoEffect",{pokemonName:ee(this)}))),U;const h=this.getTag(w.DESTINY_BOND),_=this.getTag(w.GRUDGE);if(D){this.lapseTags(As.HIT);const d=this.getTag(xE),f=!!d&&s.hitsSubstitute(A,this);f&&(d.hp-=D),!this.isPlayer()&&D>=this.hp&&a.applyModifiers(El,!1,this);const H=this.damageAndUpdate(f?0:D,{result:U,isCritical:I,ignoreFaintPhase:!0,source:A});if(H>0){A.isPlayer()&&(a.validateAchvs(Fi,new je(H)),H>a.gameData.gameStats.highestDamage&&(a.gameData.gameStats.highestDamage=H)),A.turnData.totalDamageDealt+=H,A.turnData.singleHitDamageDealt=H,this.turnData.damageTaken+=H,this.battleData.hitCount++;const B={move:s.id,result:U,damage:H,critical:I,sourceId:A.id,sourceBattlerIndex:A.getBattlerIndex()};this.turnData.attacksReceived.unshift(B),A.isPlayer()&&!this.isPlayer()&&a.applyModifiers(ii,!0,A,new je(H))}}if(I&&a.queueMessage(u.t("battle:hitResultCriticalHit")),A.turnData.hitsLeft===1||this.isFainted())switch(U){case 2:a.queueMessage(u.t("battle:hitResultSuperEffective"));break;case 3:a.queueMessage(u.t("battle:hitResultNotVeryEffective"));break;case 4:a.queueMessage(u.t("battle:hitResultOneHitKO"));break}return this.isFainted()&&(a.setPhaseQueueSplice(),a.unshiftPhase(new VM(this.getBattlerIndex(),!1,h,_,A)),this.destroySubstitute(),this.lapseTag(w.COMMANDED),this.resetSummonData()),U}damage(A,s=!1,R=!1,n=!1){if(this.isFainted())return 0;const I=new Pt(!1);return!R&&this.hp-A<=0&&(this.hp>=1&&this.getTag(w.ENDURING)?I.value=this.lapseTag(w.ENDURING):this.hp>1&&this.getTag(w.STURDY)?I.value=this.lapseTag(w.STURDY):this.hp>=1&&this.getTag(w.ENDURE_TOKEN)&&(I.value=this.lapseTag(w.ENDURE_TOKEN)),I.value||a.applyModifiers(pN,this.isPlayer(),this,I),I.value&&(A=this.hp-1)),A=Math.min(A,this.hp),this.hp=this.hp-A,this.isFainted()&&!n&&(a.setPhaseQueueSplice(),a.unshiftPhase(new VM(this.getBattlerIndex(),R)),this.destroySubstitute(),this.lapseTag(w.COMMANDED),this.resetSummonData()),A}damageAndUpdate(A,{result:s=1,isCritical:R=!1,ignoreSegments:n=!1,ignoreFaintPhase:I=!1,source:r=void 0}={}){const L=[10,13].includes(s),N=new vM(this.getBattlerIndex(),A,s,R);return a.unshiftPhase(N),this.switchOutStatus&&r&&(A=0),A=this.damage(A,n,L,I),N.updateAmount(A),(!r||r.turnData.hitCount<=1)&&bf(nL,this,A,this.hasPassive(),!1,[],r),A}heal(A){const s=Math.min(A,this.getMaxHp()-this.hp);return this.hp+=s,s}isBossImmune(){return this.isBoss()}isMax(){const A=[Me.GIGANTAMAX,Me.GIGANTAMAX_RAPID,Me.GIGANTAMAX_SINGLE,Me.ETERNAMAX];return A.includes(this.getFormKey())||!!this.getFusionFormKey()&&A.includes(this.getFusionFormKey())}isMega(){const A=[Me.MEGA,Me.MEGA_X,Me.MEGA_Y,Me.PRIMAL];return A.includes(this.getFormKey())||!!this.getFusionFormKey()&&A.includes(this.getFusionFormKey())}canAddTag(A){if(this.getTag(A))return!1;const s=new $t(A,0,0),R=new Pt(!1);return Wl(JO,this,s,R,!0),this.getAlliedField().forEach(I=>Wl(_I,I,s,R,!0,this)),!R.value}addTag(A,s=0,R,n){const I=this.getTag(A);if(I)return I.onOverlap(this),!1;const r=N7(A,s,R,n),L=new Pt(!1);if(Wl(JO,this,r,L),L.value)return!1;for(const N of this.getAlliedField())if(Wl(_I,N,r,L,!1,this),L.value)return!1;return r.canAdd(this)?(this.summonData.tags.push(r),r.onAdd(this),!0):!1}getTag(A){return this.summonData?A instanceof Function?this.summonData.tags.find(s=>s instanceof A):this.summonData.tags.find(s=>s.tagType===A):null}findTag(A){return this.summonData?this.summonData.tags.find(s=>A(s)):null}findTags(A){return this.summonData?this.summonData.tags.filter(s=>A(s)):[]}lapseTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(n=>n.tagType===A);return R&&!R.lapse(this,As.CUSTOM)&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}lapseTags(A){if(!this.summonData)return;const s=this.summonData.tags;s.filter(R=>A===As.FAINT||R.lapseTypes.some(n=>n===A)&&!R.lapse(this,A)).forEach(R=>{R.onRemove(this),s.splice(s.indexOf(R),1)})}removeTag(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.find(n=>n.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1)),!!R}findAndRemoveTags(A){if(!this.summonData)return!1;const s=this.summonData.tags,R=s.filter(n=>A(n));for(const n of R)n.turnCount=0,n.onRemove(this),s.splice(s.indexOf(n),1);return!0}removeTagsBySourceId(A){this.findAndRemoveTags(s=>s.isSourceLinked()&&s.sourceId===A)}transferTagsBySourceId(A,s){if(!this.summonData)return;this.summonData.tags.filter(n=>n.sourceId===A).forEach(n=>n.sourceId=s)}transferSummon(A){for(const s of YO){const R=A.getStatStage(s);this instanceof WE&&R===6&&a.validateAchv(ht.TRANSFER_MAX_STAT_STAGE),this.setStatStage(s,R)}for(const s of A.summonData.tags)!s.isBatonPassable||s.tagType===w.TELEKINESIS&&this.species.speciesId===e.GENGAR&&this.getFormKey()==="mega"||(s instanceof dD&&s.swapStat(this),this.summonData.tags.push(s));this.updateInfo()}isMoveRestricted(A,s){return this.getRestrictingTag(A,s)!==null}isMoveTargetRestricted(A,s,R){for(const n of this.findTags(I=>I instanceof pO))if(n.isMoveTargetRestricted(A,s,R))return n!==null;return!1}getRestrictingTag(A,s,R){for(const n of this.findTags(I=>I instanceof pO))if(n.isMoveRestricted(A,s)||s&&R&&n.isMoveTargetRestricted(A,s,R))return n;return null}getMoveHistory(){return this.battleSummonData.moveHistory}pushMoveHistory(A){var s;this.isOnField()&&(A.turn=(s=a.currentBattle)==null?void 0:s.turn,this.getMoveHistory().push(A))}getLastXMoves(A=1){const s=this.getMoveHistory();return A>=0?s.slice(Math.max(s.length-A,0)).reverse():s.slice(0).reverse()}getMoveQueue(){return this.summonData.moveQueue}stopMultiHit(A){const s=a.getCurrentPhase();s instanceof pR&&s.getUserPokemon()===this&&s.stopMultiHit(A)}changeForm(A){return new Promise(s=>{this.formIndex=Math.max(this.species.forms.findIndex(n=>n.formKey===A.formKey),0),this.generateName();const R=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=R&&(this.abilityIndex=R-1),a.gameData.setPokemonSeen(this,!1),this.setScale(this.getSpriteScale()),this.loadAssets().then(()=>{this.calculateStats(),a.updateModifiers(this.isPlayer(),!0),Promise.all([this.updateInfo(),a.updateFieldScale()]).then(()=>s())})})}cry(A,s){const R=s??a,n=this.getSpeciesForm().cry(A);let I=n.totalDuration*1e3;if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm()){let r=this.getFusionSpeciesForm().cry(A,!0);I=Math.min(I,r.totalDuration*1e3),r.destroy(),R.time.delayedCall(Ot(Math.ceil(I*.4)),()=>{try{oO.fadeOut(R,n,Ot(Math.ceil(I*.2))),r=this.getFusionSpeciesForm().cry(Object.assign({seek:Math.max(r.totalDuration*.4,0)},A)),oO.fadeIn(R,r,Ot(Math.ceil(I*.2)),R.masterVolume*R.fieldVolume,0)}catch(L){console.error(L)}})}return n}faintCry(A){if(this.fusionSpecies&&this.getSpeciesForm()!==this.getFusionSpeciesForm())return this.fusionFaintCry(A);const s=this.species.getCryKey(this.formIndex);let R=.85;const n=a.playSound(s,{rate:R});if(!n||a.fieldVolume===0)return A();const I=this.getSprite(),r=this.getTintSprite(),L=Math.max(a.sound.get(s).totalDuration*50,25);let N=0,l;I.anims.pause(),r==null||r.anims.pause();let C=a.time.addEvent({delay:Ot(L),repeat:-1,callback:o(()=>{for(l=I.anims.msPerFrame/R,N+=L;N>l;)I.anims.duration&&(I.anims.nextFrame(),r==null||r.anims.nextFrame()),N-=l;n&&!n.pendingRemove?(R*=.99,n.setRate(R)):(C==null||C.destroy(),C=null,A&&A())},"callback")});a.time.delayedCall(Ot(3e3),()=>{!C||!a||(n!=null&&n.isPlaying&&n.stop(),C.destroy(),A&&A())})}fusionFaintCry(A){const s=this.species.getCryKey(this.formIndex);let R=0,n=.85;const I=a.playSound(s,{rate:n}),r=this.getSprite(),L=this.getTintSprite();let N=I.totalDuration*1e3;const l=this.fusionSpecies.getCryKey(this.fusionFormIndex);let C=a.playSound(l,{rate:n});if(!I||!C||a.fieldVolume===0)return A();C.stop(),N=Math.min(N,C.totalDuration*1e3),C.destroy();const U=Math.max(N*.05,25);let D=0,M=0;const h=Math.ceil(N*.4);for(;M<h;)++R,M+=U*n,n*=.99;D=R,R=0,n=.85;let _=0,d;r.anims.pause(),L==null||L.anims.pause();let f=a.time.addEvent({delay:Ot(U),repeat:-1,callback:o(()=>{for(++R,d=r.anims.msPerFrame/n,_+=U;_>d;)r.anims.duration&&(r.anims.nextFrame(),L==null||L.anims.nextFrame()),_-=d;R===D&&l&&(oO.fadeOut(a,I,Ot(Math.ceil(N/n*.2))),C=a.playSound(l,Object.assign({seek:Math.max(C.totalDuration*.4,0),rate:n})),oO.fadeIn(a,C,Ot(Math.ceil(N/n*.2)),a.masterVolume*a.fieldVolume,0)),n*=.99,I&&!I.pendingRemove&&I.setRate(n),C&&!C.pendingRemove&&C.setRate(n),(!I||I.pendingRemove)&&(!C||C.pendingRemove)&&(f==null||f.destroy(),f=null,A&&A())},"callback")});a.time.delayedCall(Ot(3e3),()=>{!f||!a||(I!=null&&I.isPlaying&&I.stop(),C!=null&&C.isPlaying&&C.stop(),f.destroy(),A&&A())})}isOppositeGender(A){return this.gender!==At.GENDERLESS&&A.gender===(this.gender===At.MALE?At.FEMALE:At.MALE)}canSetStatus(A,s=!1,R=!1,n=null,I=!1){var N,l,C,U,D,M;if(A!==re.FAINT&&((R?((N=this.status)==null?void 0:N.effect)===A:this.status)||this.isGrounded()&&!I&&((l=a.arena.terrain)==null?void 0:l.terrainType)===Nt.MISTY)||n&&n!==this&&this.isSafeguarded(n))return!1;const r=this.getTypes(!0,!0);switch(A){case re.POISON:case re.TOXIC:const h=r.map(_=>{if(_!==i.POISON&&_!==i.STEEL)return!1;const d=new Pt(!1);return!(n&&(_t(iD,n,d,!1,A,_),d.value))});if((this.isOfType(i.POISON)||this.isOfType(i.STEEL))&&h.includes(!0))return!1;break;case re.PARALYSIS:if(this.isOfType(i.ELECTRIC))return!1;break;case re.SLEEP:if(this.isGrounded()&&((C=a.arena.terrain)==null?void 0:C.terrainType)===Nt.ELECTRIC)return!1;break;case re.FREEZE:if(this.isOfType(i.ICE)||!I&&((M=(D=(U=a)==null?void 0:U.arena)==null?void 0:D.weather)!=null&&M.weatherType)&&[Oe.SUNNY,Oe.HARSH_SUN].includes(a.arena.weather.weatherType))return!1;break;case re.BURN:if(this.isOfType(i.FIRE))return!1;break}const L=new Pt(!1);if(Z8(DR,this,A,L,s),L.value)return!1;for(const h of this.getAlliedField())if(Z8(sL,h,A,L,s,this,n),L.value)break;return!L.value}trySetStatus(A,s=!1,R=null,n=0,I=null){if(!this.canSetStatus(A,s,!1,R)||this.isFainted()&&A!==re.FAINT)return!1;if((A===re.SLEEP||A===re.FREEZE)&&this.stopMultiHit(),s)return a.unshiftPhase(new Of(this.getBattlerIndex(),A,n,I,R)),!0;let r;if(A===re.SLEEP){r=new je(this.randSeedIntRange(2,4)),this.setFrameRate(4);const N=[w.UNDERGROUND,w.UNDERWATER,w.HIDDEN,w.FLYING].find(l=>this.getTag(l));N&&(this.removeTag(N),this.getMoveQueue().pop())}return r=r,A=A,this.status=new iI(A,0,r==null?void 0:r.value),A!==re.FAINT&&(a.triggerPokemonFormChange(this,Sh,!0),ij(dU,this,A,R)),!0}resetStatus(A=!0,s=!1,R=!1){var I;const n=(I=this.status)==null?void 0:I.effect;!A&&n===re.FAINT||(this.status=null,n===re.SLEEP&&(this.setFrameRate(10),this.getTag(w.NIGHTMARE)&&this.lapseTag(w.NIGHTMARE)),s&&this.getTag(w.CONFUSED)&&this.lapseTag(w.CONFUSED),R&&this.loadAssets(!1).then(()=>this.playAnim()))}isSafeguarded(A){const s=this.isPlayer()?Dt.PLAYER:Dt.ENEMY;if(a.arena.getTagOnSide(Fe.SAFEGUARD,s)){const R=new Pt(!1);return A&&_t(dI,A,null,!1,R),!R.value}return!1}primeSummonData(A){this.summonDataPrimer=A}resetSummonData(){var A,s;if((A=this.summonData)!=null&&A.speciesForm&&(this.summonData.speciesForm=null,this.updateFusionPalette()),this.summonData=new MN,this.setSwitchOutStatus(!1),this.battleData||this.resetBattleData(),this.resetBattleSummonData(),this.summonDataPrimer){for(const R of Object.keys(this.summonDataPrimer))this.summonDataPrimer[R]&&(this.summonData[R]=this.summonDataPrimer[R]);this.getTag(xE)&&(a.triggerPokemonBattleAnim(this,xR.SUBSTITUTE_ADD),this.getTag(xE).sourceInFocus=!1),this.hasAbilityWithAttr(AL)&&a.currentBattle.double&&((s=this.getAlly())==null?void 0:s.species.speciesId)===e.DONDOZO&&this.setVisible(!1),this.summonDataPrimer=null}this.updateInfo()}resetBattleData(){this.battleData=new nf}resetBattleSummonData(){this.battleSummonData=new af,this.getTag(w.SEEDED)&&this.lapseTag(w.SEEDED),a&&a.triggerPokemonFormChange(this,zT,!0)}resetTera(){const A=this.isTerastallized;this.isTerastallized=!1,this.stellarTypesBoosted=[],A&&(this.updateSpritePipelineData(),a.triggerPokemonFormChange(this,pa))}resetTurnData(){this.turnData=new If}getExpValue(){return this.getSpeciesForm().getBaseExp()*this.level/5+1}setFrameRate(A){var s;a.anims.get(this.getBattleSpriteKey()).frameRate=A;try{this.getSprite().play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}try{(s=this.getTintSprite())==null||s.play(this.getBattleSpriteKey())}catch(R){console.error(`Failed to play animation for ${this.getBattleSpriteKey()}`,R)}}tint(A,s,R,n){const I=this.getTintSprite();I==null||I.setTintFill(A),I==null||I.setVisible(!0),R?(I==null||I.setAlpha(0),a.tweens.add({targets:I,alpha:s||1,duration:R,ease:n||"Linear"})):I==null||I.setAlpha(s)}untint(A,s){const R=this.getTintSprite();A?a.tweens.add({targets:R,alpha:0,duration:A,ease:s||"Linear",onComplete:o(()=>{R==null||R.setVisible(!1),R==null||R.setAlpha(1)},"onComplete")}):(R==null||R.setVisible(!1),R==null||R.setAlpha(1))}enableMask(){var A,s,R;this.maskEnabled||(this.maskSprite=this.getTintSprite(),(A=this.maskSprite)==null||A.setVisible(!0),(s=this.maskSprite)==null||s.setPosition(this.x*this.parentContainer.scale+this.parentContainer.x,this.y*this.parentContainer.scale+this.parentContainer.y),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()*this.parentContainer.scale),this.maskEnabled=!0)}disableMask(){var A,s,R;this.maskEnabled&&((A=this.maskSprite)==null||A.setVisible(!1),(s=this.maskSprite)==null||s.setPosition(0,0),(R=this.maskSprite)==null||R.setScale(this.getSpriteScale()),this.maskSprite=null,this.maskEnabled=!1)}sparkle(){this.shinySparkle&&$0(this.shinySparkle,this.variant)}updateFusionPalette(A){if(!this.getFusionSpeciesForm(A)){[this.getSprite(),this.getTintSprite()].filter(Le=>!!Le).map(Le=>{var Ee,se;Le.pipelineData[`spriteColors${A&&((Ee=this.summonData)!=null&&Ee.speciesForm)?"Base":""}`]=[],Le.pipelineData[`fusionSpriteColors${A&&((se=this.summonData)!=null&&se.speciesForm)?"Base":""}`]=[]});return}const s=this.getSpeciesForm(A),R=this.getFusionSpeciesForm(A),n=s.getSpriteKey(this.getGender(A)===At.FEMALE,s.formIndex,this.shiny,this.variant),I=s.getSpriteKey(this.getGender(A)===At.FEMALE,s.formIndex,this.shiny,this.variant).replace("pkmn__","pkmn__back__"),r=R.getSpriteKey(this.getFusionGender(A)===At.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant),L=R.getSpriteKey(this.getFusionGender(A)===At.FEMALE,R.formIndex,this.fusionShiny,this.fusionVariant).replace("pkmn__","pkmn__back__"),N=a.textures.get(n),l=a.textures.get(I),C=a.textures.get(r),U=a.textures.get(L),[D,M,h,_]=[N,l,C,U].map(Le=>Le.frames[Le.firstFrame]),[d,f,H,B]=[N,l,C,U].map(Le=>Le.getSourceImage()),K=document.createElement("canvas"),Y=document.createElement("canvas"),v=document.createElement("canvas"),Z=document.createElement("canvas"),z=[],q=[];[K,Y,v,Z].forEach((Le,Ee)=>{const se=Le.getContext("2d"),Ne=[D,M,h,_][Ee];if(Le.width=Ne.width,Le.height=Ne.height,se){se.drawImage([d,f,H,B][Ee],Ne.cutX,Ne.cutY,Ne.width,Ne.height,0,0,Ne.width,Ne.height);const Ue=se.getImageData(Ne.cutX,Ne.cutY,Ne.width,Ne.height);q.push(Ue.data)}});for(let Le=0;Le<2;Le++){const Ee=mi[Le?I:n],se=new Map;this.shiny&&Ee&&Ee[this.variant]&&Object.keys(Ee[this.variant]).forEach(Ne=>{se.set(Nl(Array.from(Object.values(bE(Ne)))),Array.from(Object.values(bE(Ee[this.variant][Ne]))))});for(let Ne=0;Ne<q[Le].length;Ne+=4)if(q[Le][Ne+3]){const Ue=q[Le].slice(Ne,Ne+4);let[me,st,Ct,tt]=Ue;if(Ee){const ft=Nl([me,st,Ct,tt]);if(se.has(ft)){const Xt=se.get(ft);Xt&&([me,st,Ct,tt]=Xt)}}z.find(ft=>ft[0]===me&&ft[1]===st&&ft[2]===Ct)||z.push([me,st,Ct,tt])}}const J=JSON.parse(JSON.stringify(z)),Ae=[];for(let Le=0;Le<2;Le++)for(let Ee=0;Ee<q[Le].length;Ee+=4)q[Le].slice(Ee,Ee+3).reduce((Ne,Ue)=>Ne+Ue,0)&&Ae.push(Es({r:q[Le][Ee],g:q[Le][Ee+1],b:q[Le][Ee+2],a:q[Le][Ee+3]}));const Q=[];for(let Le=0;Le<2;Le++){const Ee=mi[Le?L:r],se=new Map;if(this.fusionShiny&&Ee&&Ee[this.fusionVariant])for(const Ne of Object.keys(Ee[this.fusionVariant]))se.set(Nl(Array.from(Object.values(bE(Ne)))),Array.from(Object.values(bE(Ee[this.fusionVariant][Ne]))));for(let Ne=0;Ne<q[2+Le].length;Ne+=4){if(!q[2+Le].slice(Ne,Ne+3).reduce((ft,Xt)=>ft+Xt,0))continue;let[me,st,Ct,tt]=[q[2+Le][Ne],q[2+Le][Ne+1],q[2+Le][Ne+2],q[2+Le][Ne+3]];if(Ee){const ft=Nl([me,st,Ct,tt]);if(se.has(ft)){const Xt=se.get(ft);Xt&&([me,st,Ct,tt]=Xt)}}Q.push(Es({r:me,g:st,b:Ct,a:tt}))}}if(Q.length===0)return;let Re,W;const ie=Math.random;Math.random=()=>TE.Math.RND.realInRange(0,1),a.executeWithSeedOffset(()=>{Re=QT.quantize(Ae,4),W=QT.quantize(Q,4)},0,"This result should not vary"),Math.random=ie,Re=Re,W=W;const[Be,he]=[Re,W].map(Le=>{let Ee=Array.from(Le.keys()).sort((me,st)=>Le.get(me)<Le.get(st)?1:-1),se,Ne;const Ue=new Map;do{Ue.clear(),se=Ee.reduce((me,st)=>(me.set(st,Object.values(Eh(st))),me),new Map),Ne=Array.from(se.keys()).reduce((me,st)=>{const Ct=se.get(st).slice(0,3);return me.set(st,j7(Ct[0],Ct[1],Ct[2])),me},new Map);for(let me=Ee.length-1;me>=0;me--){const st=Ne.get(Ee[me]);for(let Ct=0;Ct<me;Ct++){const tt=Ne.get(Ee[Ct]),ft=Math.abs(st[0]-tt[0]);if(ft<30||ft>=330){Ue.has(Ee[me])?Ue.get(Ee[me]).push(Ee[Ct]):Ue.set(Ee[me],[Ee[Ct]]);break}}}Ue.forEach((me,st)=>{const Ct=se.get(st),tt=me.map(pt=>se.get(pt)),ft=Ct.slice(0);let Xt=Le.get(st);for(const pt of me){const fA=Le.get(pt);fA&&(Xt+=fA)}for(let pt=0;pt<3;pt++)ft[pt]*=Le.get(st)/Xt,me.forEach((fA,cA)=>{if(Le.has(fA)){const x=Le.get(fA);ft[pt]+=tt[cA][pt]*(x/Xt)}}),ft[pt]=Math.round(ft[pt]);Le.delete(st);for(const pt of me)Le.delete(pt),Ue.has(pt)&&Ue.delete(pt);Le.set(Es({r:ft[0],g:ft[1],b:ft[2],a:ft[3]}),Xt)}),Ee=Array.from(Le.keys()).sort((me,st)=>Le.get(me)<Le.get(st)?1:-1)}while(Ue.size);return Ee.map(me=>Object.values(Eh(me)))}),ve=[];z.forEach((Le,Ee)=>{ve.push([]);for(let se=0;se<Be.length;se++)ve[Ee].push(q7(Le,Be[se]))});const _e=TE.Tweens.Builders.GetEaseFunction("Cubic.easeIn");for(let Le=0;Le<z.length;Le++){const Ee=Math.min(...ve[Le]),se=Math.min(ve[Le].findIndex(Ne=>Ne===Ee),he.length-1);if(Ee<255){const Ne=_e(Ee/255),Ue=[0,0,0,J[Le][3]];for(let me=0;me<3;me++)Ue[me]=Math.round(J[Le][me]*Ne+he[se][me]*(1-Ne));J[Le]=Ue}}[this.getSprite(),this.getTintSprite()].filter(Le=>!!Le).map(Le=>{var Ee,se;Le.pipelineData[`spriteColors${A&&((Ee=this.summonData)!=null&&Ee.speciesForm)?"Base":""}`]=z,Le.pipelineData[`fusionSpriteColors${A&&((se=this.summonData)!=null&&se.speciesForm)?"Base":""}`]=J}),K.remove(),v.remove()}randSeedInt(A,s=0){return a.currentBattle?a.randBattleSeedInt(A,s):He(A,s)}randSeedIntRange(A,s){return this.randSeedInt(s-A+1,A)}leaveField(A=!0,s=!0,R=!1){this.resetSprite(),this.resetTurnData(),a.getField(!0).filter(n=>n!==this).forEach(n=>n.removeTagsBySourceId(this.id)),A&&(this.destroySubstitute(),this.resetSummonData()),s&&this.hideInfo(),o7(hI,this),this.setSwitchOutStatus(!0),a.triggerPokemonFormChange(this,Bs,!0),a.field.remove(this,R)}destroy(){var A;(A=this.battleInfo)==null||A.destroy(),this.destroySubstitute(),super.destroy()}getBattleInfo(){return this.battleInfo}hasSameAbilityInRootForm(A){const s=this.abilityIndex,R=$e(this.species.getRootSpeciesId());return R.getAbility(A)===R.getAbility(s)}checkIfPlayerHasAbilityOfStarter(A){return!!((A&1)>0&&this.hasSameAbilityInRootForm(0)||(A&2)>0&&this.hasSameAbilityInRootForm(1)||(A&4)>0&&this.hasSameAbilityInRootForm(2))}loseHeldItem(A,s=!0){return A.pokemonId===-1||A.pokemonId===this.id?(A.stackCount--,A.stackCount<=0&&a.removeModifier(A,!this.isPlayer()),s&&cn(iO,this,!1),!0):!1}};o(mx,"Pokemon");let kR=mx;const px=class px extends kR{constructor(A,s,R,n,I,r,L,N,l,C){super(106,148,A,s,R,n,I,r,L,N,l,C),xe.STATUS_OVERRIDE&&(this.status=new iI(xe.STATUS_OVERRIDE,0,4)),xe.SHINY_OVERRIDE?(this.shiny=!0,this.initShinySparkle()):xe.SHINY_OVERRIDE===!1&&(this.shiny=!1),xe.VARIANT_OVERRIDE!==null&&this.shiny&&(this.variant=xe.VARIANT_OVERRIDE),C||(a.gameMode.isDaily?this.generateAndPopulateMoveset():this.moveset=[]),this.generateCompatibleTms()}initBattleInfo(){this.battleInfo=new WC,this.battleInfo.initInfo(this)}isPlayer(){return!0}hasTrainer(){return!0}isBoss(){return!1}getFieldIndex(){return a.getPlayerField().indexOf(this)}getBattlerIndex(){return this.getFieldIndex()}generateCompatibleTms(){this.compatibleTms=[];const A=Object.keys(fn);for(const s of A){const R=Number.parseInt(s);let n=!1;for(const I of fn[s])if(Array.isArray(I)){const[r,L]=I;if((r===this.species.speciesId||this.fusionSpecies&&r===this.fusionSpecies.speciesId)&&L===this.getFormKey()){n=!0;break}}else if(I===this.species.speciesId||this.fusionSpecies&&I===this.fusionSpecies.speciesId){n=!0;break}pZ.indexOf(R)>-1&&(n=!n),n&&this.compatibleTms.push(R)}}tryPopulateMoveset(A){return this.getSpeciesForm().validateStarterMoveset(A,a.gameData.starterData[this.species.getRootSpeciesId()].eggMoves)?(this.moveset=A.map(s=>new Lt(s)),!0):!1}switchOut(A=uA.SWITCH){return new Promise(s=>{this.leaveField(A===uA.SWITCH),a.ui.setMode(te.PARTY,gs.FAINT_SWITCH,this.getFieldIndex(),(R,n)=>{R>=a.currentBattle.getBattlerCount()&&R<6&&a.prependToPhase(new HR(A,this.getFieldIndex(),R,!1),QR),a.ui.setMode(te.MESSAGE).then(s)},kE.FilterNonFainted)})}addFriendship(A){if(A>0){const s=this.species.getRootSpeciesId(),R=this.isFusion()&&this.fusionSpecies?this.fusionSpecies.getRootSpeciesId():0,n=[a.gameData.starterData[s],R?a.gameData.starterData[R]:null].filter(l=>!!l),I=new je(A);a.applyModifier(kN,!0,this,I);const r=a.gameMode.isClassic?EE.getClassicFriendshipMultiplier():1,L=R?EE.areFusionsBoosted()?1.5:2:1,N=new je(Math.floor(I.value*r/L));this.friendship=Math.min(this.friendship+I.value,255),this.friendship===255&&a.validateAchv(ht.MAX_FRIENDSHIP),n.forEach((l,C)=>{const U=C?R:s;l.friendship=(l.friendship||0)+N.value,l.friendship>=nl(tA[U])&&(a.gameData.addStarterCandy($e(U),1),l.friendship=0)})}else this.friendship=Math.max(this.friendship+A,0)}getPossibleEvolution(A){return A?new Promise(s=>{const R=$e(A.speciesId),n=A instanceof Aa;let I;if(n){const r=this.fusionSpecies,L=this.fusionFormIndex;this.fusionSpecies=R,this.fusionFormIndex=A.evoFormKey!==null?Math.max(R.forms.findIndex(N=>N.formKey===A.evoFormKey),0):this.fusionFormIndex,I=a.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this),this.fusionSpecies=r,this.fusionFormIndex=L}else{const r=A.evoFormKey!==null&&!n?Math.max(R.forms.findIndex(L=>L.formKey===A.evoFormKey),0):this.formIndex;I=a.addPlayerPokemon(n?this.species:R,this.level,this.abilityIndex,r,this.gender,this.shiny,this.variant,this.ivs,this.nature,this)}I.loadAssets().then(()=>s(I))}):new Promise(s=>s(this))}evolve(A,s){return A?new Promise(R=>{this.pauseEvolutions=!1,this.handleSpecialEvolutions(A);const n=A instanceof Aa;if(n?this.fusionSpecies=$e(A.speciesId):this.species=$e(A.speciesId),A.preFormKey!==null){const r=Math.max((!n||!this.fusionSpecies?this.species:this.fusionSpecies).forms.findIndex(L=>L.formKey===A.evoFormKey),0);n?this.fusionFormIndex=r:this.formIndex=r}if(this.generateName(),n){const r=this.getFusionSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.fusionAbilityIndex)?this.fusionAbilityIndex===2&&L===3&&r===2&&(this.fusionAbilityIndex=1):(console.warn("this.fusionAbilityIndex is somehow an illegal value, please report this"),console.warn(this.fusionAbilityIndex),this.fusionAbilityIndex=0)}else{const r=this.getSpeciesForm().getAbilityCount(),L=s.getAbilityCount();[0,1,2].includes(this.abilityIndex)?this.abilityIndex===2&&L===3&&r===2&&(this.abilityIndex=1):(console.warn("this.abilityIndex is somehow an illegal value, please report this"),console.warn(this.abilityIndex),this.abilityIndex=0)}this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const I=o(()=>{this.loadAssets().then(()=>{this.calculateStats(),this.updateInfo(!0).then(()=>R())})},"updateAndResolve");if(s.speciesId===e.GIMMIGHOUL){const r=this.getHeldItems().filter(L=>L instanceof fN)[0]??null;r&&a.removeModifier(r)}!a.gameMode.isDaily||this.metBiome>-1?(a.gameData.updateSpeciesDexIvs(this.species.speciesId,this.ivs),a.gameData.setPokemonSeen(this,!1),a.gameData.setPokemonCaught(this,!1).then(()=>I())):I()}):new Promise(R=>R())}handleSpecialEvolutions(A){var n;const s=A instanceof Aa,R=s?this.fusionSpecies:this.species;if((R==null?void 0:R.speciesId)===e.NINCADA&&A.speciesId===e.NINJASK){const I=jt[R.speciesId][1];if((n=I.condition)!=null&&n.predicate(this)){const r=a.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,void 0,this.shiny,this.variant,this.ivs,this.nature);r.passive=this.passive,r.moveset=this.moveset.slice(),r.moveset=this.copyMoveset(),r.luck=this.luck,r.gender=At.GENDERLESS,r.metLevel=this.metLevel,r.metBiome=this.metBiome,r.metSpecies=this.metSpecies,r.metWave=this.metWave,r.fusionSpecies=this.fusionSpecies,r.fusionFormIndex=this.fusionFormIndex,r.fusionAbilityIndex=this.fusionAbilityIndex,r.fusionShiny=this.fusionShiny,r.fusionVariant=this.fusionVariant,r.fusionGender=this.fusionGender,r.fusionLuck=this.fusionLuck,r.fusionTeraType=this.fusionTeraType,r.usedTMs=this.usedTMs,r.evoCounter=this.evoCounter,a.getPlayerParty().push(r),r.evolve(s?new Aa(this.id,I):I,R),a.findModifiers(N=>N instanceof Ft&&N.pokemonId===this.id,!0).forEach(N=>{const l=N.clone();l.pokemonId=r.id,a.addModifier(l,!0)}),a.updateModifiers(!0)}}}getPossibleForm(A){return new Promise(s=>{const R=Math.max(this.species.forms.findIndex(I=>I.formKey===A.formKey),0),n=a.addPlayerPokemon(this.species,this.level,this.abilityIndex,R,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);n.loadAssets().then(()=>s(n))})}changeForm(A){return new Promise(s=>{this.formIndex=Math.max(this.species.forms.findIndex(I=>I.formKey===A.formKey),0),this.generateName();const R=this.getSpeciesForm().getAbilityCount();this.abilityIndex>=R&&(this.abilityIndex=R-1),this.compatibleTms.splice(0,this.compatibleTms.length),this.generateCompatibleTms();const n=o(()=>{this.loadAssets().then(()=>{this.calculateStats(),a.updateModifiers(!0,!0),this.updateInfo(!0).then(()=>s())})},"updateAndResolve");!a.gameMode.isDaily||this.metBiome>-1?(a.gameData.setPokemonSeen(this,!1),a.gameData.setPokemonCaught(this,!1).then(()=>n())):n()})}clearFusionSpecies(){super.clearFusionSpecies(),this.generateCompatibleTms()}fuse(A){this.fusionSpecies=A.species,this.fusionFormIndex=A.formIndex,this.fusionAbilityIndex=A.abilityIndex,this.fusionShiny=A.shiny,this.fusionVariant=A.variant,this.fusionGender=A.gender,this.fusionLuck=A.luck,this.fusionCustomPokemonData=A.customPokemonData,this.evoCounter=Math.max(A.evoCounter,this.evoCounter),(A.pauseEvolutions||this.pauseEvolutions)&&(this.pauseEvolutions=!0),a.validateAchv(ht.SPLICE),a.gameData.gameStats.pokemonFused++;const s=this.getMaxHp(),R=(A.hp/A.getMaxHp()+this.hp/s)/2;this.generateName(),this.calculateStats(),this.hp=Math.round(s*R),this.isFainted()?A.isFainted()||(this.hp=Math.max(this.hp,1),this.status=A.status):(this.hp=Math.min(this.hp,s),this.status=SZ(this.status,A.status)),this.generateCompatibleTms(),this.updateInfo(!0);const n=a.getPlayerParty().indexOf(A);a.getPlayerParty().indexOf(this);const I=a.findModifiers(L=>L instanceof Ft&&L.pokemonId===A.id,!0);for(const L of I)a.tryTransferHeldItemModifier(L,this,!1,L.getStackCount(),!0,!0,!1);a.updateModifiers(!0,!0),a.removePartyMemberModifiers(n),a.getPlayerParty().splice(n,1)[0];const r=a.getPlayerParty().indexOf(this);A.getMoveset(!0).map(L=>a.unshiftPhase(new ra(r,L.getMove().id))),A.destroy(),this.updateFusionPalette()}unfuse(){return new Promise(A=>{this.clearFusionSpecies(),this.updateInfo(!0).then(()=>A()),this.updateFusionPalette()})}copyMoveset(){const A=[];return this.moveset.forEach(s=>{A.push(new Lt(s.moveId,0,s.ppUp,s.virtual,s.maxPpOverride))}),A}};o(px,"PlayerPokemon");let WE=px;const Kx=class Kx extends kR{constructor(A,s,R,n,I=!1,r){var N,l;super(236,84,A,s,r==null?void 0:r.abilityIndex,r==null?void 0:r.formIndex,r==null?void 0:r.gender,!I&&r?r.shiny:!1,!I&&r?r.variant:void 0,void 0,r?r.nature:void 0,r),this.trainerSlot=R,this.initialTeamIndex=((N=a.currentBattle)==null?void 0:N.enemyParty.length)??0,this.isPopulatedFromDataSource=!!r,n&&this.setBoss(n,r==null?void 0:r.bossSegments),xe.OPP_STATUS_OVERRIDE&&(this.status=new iI(xe.OPP_STATUS_OVERRIDE,0,4)),xe.OPP_GENDER_OVERRIDE!==null&&(this.gender=xe.OPP_GENDER_OVERRIDE);const L=this.species.speciesId;if(L in xe.OPP_FORM_OVERRIDES&&!Pe(xe.OPP_FORM_OVERRIDES[L])&&this.species.forms[xe.OPP_FORM_OVERRIDES[L]]&&(this.formIndex=xe.OPP_FORM_OVERRIDES[L]),!r){this.generateAndPopulateMoveset(),I||xe.OPP_SHINY_OVERRIDE===!1?this.shiny=!1:this.trySetShiny(),!this.shiny&&xe.OPP_SHINY_OVERRIDE&&(this.shiny=!0,this.initShinySparkle()),this.shiny&&(this.variant=this.generateShinyVariant(),xe.OPP_VARIANT_OVERRIDE!==null&&(this.variant=xe.OPP_VARIANT_OVERRIDE)),this.luck=(this.shiny?this.variant+1:0)+(this.fusionShiny?this.fusionVariant+1:0);let C,U=A.speciesId;for(;C=IA[U];){const D=jt[C].find(M=>M.speciesId===U&&(!M.evoFormKey||M.evoFormKey===this.getFormKey()));(l=D==null?void 0:D.condition)!=null&&l.enforceFunc&&D.condition.enforceFunc(this),U=C}}this.aiType=n||this.hasTrainer()?2:1}initBattleInfo(){this.battleInfo?this.battleInfo.updateBossSegments(this):(this.battleInfo=new eh,this.battleInfo.updateBossSegments(this),this.battleInfo.initInfo(this))}setBoss(A=!0,s=0){A?(this.bossSegments=s||a.getEncounterBossSegments(a.currentBattle.waveIndex,this.level,this.species,!0),this.bossSegmentIndex=this.bossSegments-1):(this.bossSegments=0,this.bossSegmentIndex=0)}generateAndPopulateMoveset(A){switch(!0){case this.species.speciesId===e.SMEARGLE:this.moveset=[new Lt(t.SKETCH),new Lt(t.SKETCH),new Lt(t.SKETCH),new Lt(t.SKETCH)];break;case this.species.speciesId===e.ETERNATUS:this.moveset=(A!==void 0?A:this.formIndex)?[new Lt(t.DYNAMAX_CANNON),new Lt(t.CROSS_POISON),new Lt(t.FLAMETHROWER),new Lt(t.RECOVER,0,-4)]:[new Lt(t.ETERNABEAM),new Lt(t.SLUDGE_BOMB),new Lt(t.FLAMETHROWER),new Lt(t.COSMIC_POWER)],a.gameMode.hasChallenge(ut.INVERSE_BATTLE)&&(this.moveset[2]=new Lt(t.THUNDERBOLT));break;default:super.generateAndPopulateMoveset();break}}getNextMove(){var R;const A=this.getMoveQueue();if(A.length!==0){const n=A[0];if(n){const I=this.getMoveset().findIndex(r=>r.moveId===n.move);return I>-1&&this.getMoveset()[I].isUsable(this,n.ignorePP)||n.virtual?n:(this.getMoveQueue().shift(),this.getNextMove())}}let s=this.getMoveset().filter(n=>n.isUsable(this));if(s.length){if(s.length===1)return{move:s[0].moveId,targets:this.getNextTargets(s[0].moveId)};const n=this.getTag(nN);if(n){const I=s.find(r=>r.moveId===n.moveId);if(I)return{move:I.moveId,targets:this.getNextTargets(I.moveId)}}switch(this.aiType){case 0:const I=s[a.randBattleSeedInt(s.length)].moveId;return{move:I,targets:this.getNextTargets(I)};case 1:case 2:const r=s.filter(U=>{if(!U)return!1;const D=U.getMove();if(D.moveTarget===De.ATTACKER)return!1;const M=a.getField(),h=Fn(this,D.id).targets.map(d=>M[d]).filter(d=>this.isPlayer()!==d.isPlayer()),_=D.hasAttr(hn)||!!this.getTag(w.ALWAYS_CRIT);return D.category!==g.STATUS&&h.some(d=>{var H;return(D.applyConditions(this,d,D)||[t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(D.id))&&d.getAttackDamage(this,D,!d.battleData.abilityRevealed,!1,!((H=d.getAlly())!=null&&H.battleData.abilityRevealed),!1,_).damage>=d.hp})},this);r.length>0&&(s=r);const L=s.map(()=>0),N=Object.fromEntries(s.map(U=>[U.moveId,this.getNextTargets(U.moveId)]));for(const U in s){const M=s[U].getMove();let h=L[U];const _=[];for(const d of N[M.id]){if(d===Wt.ATTACKER)break;const f=a.getField()[d];let H=M.getUserBenefitScore(this,f,M)+M.getTargetBenefitScore(this,f,M)*(d<Wt.ENEMY===this.isPlayer()?1:-1);if(Number.isNaN(H)&&(console.error(`Move ${M.name} returned score of NaN`),H=0),(M.name.endsWith(" (N)")||!M.applyConditions(this,f,M))&&![t.SUCKER_PUNCH,t.UPPER_HAND,t.THUNDERCLAP].includes(M.id))H=-20;else if(M instanceof m){const B=f.getMoveEffectiveness(this,M,!((R=f.battleData)!=null&&R.abilityRevealed));f.isPlayer()!==this.isPlayer()?(H*=B,this.isOfType(M.type)&&(H*=1.5)):B&&(H/=B,this.isOfType(M.type)&&(H/=1.5)),H||(H=-20)}_.push(H)}h+=Math.max(..._),L[U]=h}const l=s.slice(0);l.sort((U,D)=>{const M=L[s.indexOf(U)],h=L[s.indexOf(D)];return M<h?1:M>h?-1:0});let C=0;if(this.aiType===1)for(;C<l.length-1&&a.randBattleSeedInt(8)>=5;)C++;else if(this.aiType===2)for(;C<l.length-1&&L[s.indexOf(l[C+1])]/L[s.indexOf(l[C])]>=0&&a.randBattleSeedInt(100)<Math.round(L[s.indexOf(l[C+1])]/L[s.indexOf(l[C])]*50);)C++;return s.map(U=>U.getName()),l.map(U=>U.getName()),{move:l[C].moveId,targets:N[l[C].moveId]}}}return{move:t.STRUGGLE,targets:this.getNextTargets(t.STRUGGLE)}}getNextTargets(A){const s=Fn(this,A),R=a.getField(!0).filter(h=>s.targets.indexOf(h.getBattlerIndex())>-1);if(s.multiple)return R.map(h=>h.getBattlerIndex());const n=Ve[A],r=R.map(h=>[h.getBattlerIndex(),n.getTargetBenefitScore(this,h,n)*(h.isPlayer()===this.isPlayer()?1:-1)]).slice(0);if(r.sort((h,_)=>{const d=h[1],f=_[1];return d<f?1:d>f?-1:0}),!r.length)return n.hasAttr(Ji)?[Wt.ATTACKER]:[];let L=r.map(h=>h[1]);const N=L[L.length-1];if(N<1)for(let h=0;h<L.length;h++)L[h]+=Math.abs(N-1);const l=L.findIndex(h=>h<L[0]/2);l>-1&&(L=L.slice(0,l));const C=[];let U=0;L.reduce((h,_)=>(h+=_,C.push(h),U=h,h),0);const D=a.randBattleSeedInt(U);let M=0;return C.every((h,_)=>D>=h?!0:(M=_,!1)),[r[M][0]]}isPlayer(){return!1}hasTrainer(){return!!this.trainerSlot}isBoss(){return!!this.bossSegments}getBossSegmentIndex(){const A=this.bossSegments,s=this.getMaxHp()/A;for(let R=A-1;R>0;R--){const n=Math.round(s*R);if(this.hp>n)return R}return 0}damage(A,s=!1,R=!1,n=!1){if(this.isFainted())return 0;let I=this.isBoss()?this.bossSegmentIndex+1:0;if(this.isBoss()&&!s){const L=this.getMaxHp()/this.bossSegments;for(let N=this.bossSegmentIndex;N>0;N--){const l=L*N,C=Math.round(l);if(this.hp>=C){if(this.hp-A<=C){const U=this.hp-C;let D=0;for(;D<this.bossSegmentIndex&&this.canBypassBossSegments(D+1)&&A-U>=Math.round(L*Math.pow(2,D+1));)D++;A=Qt(this.hp-l+L*D),I=N-D}break}}}switch(a.currentBattle.battleSpec){case DE.FINAL_BOSS:!this.formIndex&&this.bossSegmentIndex<1&&(A=Math.min(A,this.hp-1))}const r=super.damage(A,s,R,n);if(this.isBoss()){if(s){const L=this.getMaxHp()/this.bossSegments;I=Math.ceil(this.hp/L)}I<=this.bossSegmentIndex&&this.handleBossSegmentCleared(I),this.battleInfo.updateBossSegments(this)}return r}canBypassBossSegments(A=1){return!(a.currentBattle.battleSpec===DE.FINAL_BOSS&&!this.formIndex&&this.bossSegmentIndex-A<1)}handleBossSegmentCleared(A){for(;this.bossSegmentIndex>0&&A-1<this.bossSegmentIndex;){const s=ka.filter(l=>this.getStatStage(l)<6),R=s.map(l=>this.getStat(l,!1));let n;const I=[];let r=0;for(const l in R)r+=R[l],I.push(r);const L=He(r);for(const l in I)if(L<I[l]){n=s[l];break}let N=1;this.bossSegments>=3&&this.bossSegmentIndex===1&&N++,this.bossSegments>=5&&this.bossSegmentIndex===2&&N++,a.unshiftPhase(new AA(this.getBattlerIndex(),!0,[n],N,!0,!0)),this.bossSegmentIndex--}}getFieldIndex(){return a.getEnemyField().indexOf(this)}getBattlerIndex(){return Wt.ENEMY+this.getFieldIndex()}addToParty(A,s=-1){const R=a.getPlayerParty();let n=null;if(R.length<Yr){this.pokeball=A,this.metLevel=this.level,this.metBiome=a.arena.biomeType,this.metWave=a.currentBattle.waveIndex,this.metSpecies=this.species.speciesId;const I=a.addPlayerPokemon(this.species,this.level,this.abilityIndex,this.formIndex,this.gender,this.shiny,this.variant,this.ivs,this.nature,this);eZ(s,0,Yr-1)?R.splice(s,0,I):R.push(I),I.setVisible(!1),n=I,a.triggerPokemonFormChange(I,Bs,!0)}return n}};o(Kx,"EnemyPokemon");let Fs=Kx;const Fx=class Fx{constructor(){this.statStages=[0,0,0,0,0,0,0],this.moveQueue=[],this.tags=[],this.abilitySuppressed=!1,this.abilitiesApplied=[],this.ability=O.NONE,this.passiveAbility=O.NONE,this.stats=[0,0,0,0,0,0],this.types=[],this.addedType=null}};o(Fx,"PokemonSummonData");let MN=Fx;const Yx=class Yx{constructor(){this.hitCount=0,this.prevHitCount=0,this.endured=!1,this.berriesEaten=[],this.abilitiesApplied=[],this.abilityRevealed=!1}};o(Yx,"PokemonBattleData");let nf=Yx;const Wx=class Wx{constructor(){this.turnCount=1,this.waveTurnCount=1,this.moveHistory=[]}};o(Wx,"PokemonBattleSummonData");let af=Wx;const yx=class yx{constructor(){this.flinched=!1,this.acted=!1,this.hitCount=0,this.hitsLeft=-1,this.totalDamageDealt=0,this.singleHitDamageDealt=0,this.damageTaken=0,this.attacksReceived=[],this.statStagesIncreased=!1,this.statStagesDecreased=!1,this.moveEffectiveness=null,this.switchedInThisTurn=!1,this.failedRunAway=!1,this.joinedRound=!1,this.extraTurns=0}};o(yx,"PokemonTurnData");let If=yx;var M7=(E=>(E[E.RANDOM=0]="RANDOM",E[E.SMART_RANDOM=1]="SMART_RANDOM",E[E.SMART=2]="SMART",E))(M7||{}),DA=(E=>(E[E.PENDING=0]="PENDING",E[E.SUCCESS=1]="SUCCESS",E[E.FAIL=2]="FAIL",E[E.MISS=3]="MISS",E[E.OTHER=4]="OTHER",E))(DA||{}),yt=(E=>(E[E.EFFECTIVE=1]="EFFECTIVE",E[E.SUPER_EFFECTIVE=2]="SUPER_EFFECTIVE",E[E.NOT_VERY_EFFECTIVE=3]="NOT_VERY_EFFECTIVE",E[E.ONE_HIT_KO=4]="ONE_HIT_KO",E[E.NO_EFFECT=5]="NO_EFFECT",E[E.STATUS=6]="STATUS",E[E.HEAL=7]="HEAL",E[E.FAIL=8]="FAIL",E[E.MISS=9]="MISS",E[E.INDIRECT=10]="INDIRECT",E[E.IMMUNE=11]="IMMUNE",E[E.CONFUSION=12]="CONFUSION",E[E.INDIRECT_KO=13]="INDIRECT_KO",E))(yt||{});const K0=class K0{constructor(A,s=0,R=0,n=!1,I){this.moveId=A,this.ppUsed=s,this.ppUp=R,this.virtual=n,this.maxPpOverride=I}isUsable(A,s=!1,R=!1){return this.moveId&&!R&&A.isMoveRestricted(this.moveId,A)||this.getMove().name.endsWith(" (N)")?!1:s||this.ppUsed<this.getMovePp()||this.getMove().pp===-1}getMove(){return Ve[this.moveId]}usePp(A=1){this.ppUsed=Math.min(this.ppUsed+A,this.getMovePp())}getMovePp(){return this.maxPpOverride||this.getMove().pp+this.ppUp*Qt(this.getMove().pp/5)}getPpRatio(){return 1-this.ppUsed/this.getMovePp()}getName(){return this.getMove().name}static loadMove(A){return new K0(A.moveId,A.ppUsed,A.ppUp,A.virtual,A.maxPpOverride)}};o(K0,"PokemonMove");let Lt=K0;function rf(E){return u.t(`berry:${gt[E]}.name`)}o(rf,"getBerryName");function $j(E){return u.t(`berry:${gt[E]}.effect`)}o($j,"getBerryEffectDescription");function Jj(E){switch(E){case gt.SITRUS:return A=>A.getHpRatio()<.5;case gt.LUM:return A=>!!A.status||!!A.getTag(w.CONFUSED);case gt.ENIGMA:return A=>!!A.turnData.attacksReceived.filter(s=>s.result===yt.SUPER_EFFECTIVE).length;case gt.LIECHI:case gt.GANLON:case gt.PETAYA:case gt.APICOT:case gt.SALAC:return A=>{const s=new je(.25),R=E-gt.ENIGMA;return _t(Xi,A,null,!1,s),A.getHpRatio()<s.value&&A.getStatStage(R)<6};case gt.LANSAT:return A=>{const s=new je(.25);return _t(Xi,A,null,!1,s),A.getHpRatio()<.25&&!A.getTag(w.CRIT_BOOST)};case gt.STARF:return A=>{const s=new je(.25);return _t(Xi,A,null,!1,s),A.getHpRatio()<.25};case gt.LEPPA:return A=>{const s=new je(.25);return _t(Xi,A,null,!1,s),!!A.getMoveset().find(R=>!R.getPpRatio())}}}o(Jj,"getBerryPredicate");function c7(E){switch(E){case gt.SITRUS:case gt.ENIGMA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=new je(Qt(A.getMaxHp()/4));_t(gr,A,null,!1,R),a.unshiftPhase(new ZE(A.getBattlerIndex(),R.value,u.t("battle:hpHealBerry",{pokemonNameWithAffix:ee(A),berryName:rf(E)}),!0)),cn(iO,s??A,!1)};case gt.LUM:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.status&&a.queueMessage(oi(A.status.effect,ee(A))),A.resetStatus(!0,!0),A.updateInfo(),cn(iO,s??A,!1)};case gt.LIECHI:case gt.GANLON:case gt.PETAYA:case gt.APICOT:case gt.SALAC:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=E-gt.ENIGMA,n=new je(1);_t(gr,A,null,!1,n),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[R],n.value)),cn(iO,s??A,!1)};case gt.LANSAT:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E),A.addTag(w.CRIT_BOOST),cn(iO,s??A,!1)};case gt.STARF:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=He(p.SPD,p.ATK),n=new je(2);_t(gr,A,null,!1,n),a.unshiftPhase(new AA(A.getBattlerIndex(),!0,[R],n.value)),cn(iO,s??A,!1)};case gt.LEPPA:return(A,s)=>{A.battleData&&A.battleData.berriesEaten.push(E);const R=A.getMoveset().find(n=>!n.getPpRatio())?A.getMoveset().find(n=>!n.getPpRatio()):A.getMoveset().find(n=>n.getPpRatio()<1);R!==void 0&&(R.ppUsed=Math.max(R.ppUsed-10,0),a.queueMessage(u.t("battle:ppHealBerry",{pokemonNameWithAffix:ee(A),moveName:R.getName(),berryName:rf(E)})),cn(iO,s??A,!1))}}}o(c7,"getBerryEffectFunc");const Vl=24,cN=o((E,A)=>{const s=E.type.name.localeCompare(A.type.name),R=E.constructor.name.localeCompare(A.constructor.name),n=E instanceof Ft&&E.pokemonId?E.pokemonId:4294967295,I=A instanceof Ft&&A.pokemonId?A.pokemonId:4294967295;return n<I?1:n>I?-1:n===I?R===0?s:R:0},"modifierSortFunc"),wx=class wx extends Phaser.GameObjects.Container{constructor(A){super(a,1+(A?302:0),2),this.player=!A,this.setScale(.5)}updateModifiers(A,s=!1){this.removeAll(!0);const R=A.filter(L=>L.isIconVisible()),n=R.filter(L=>!L.pokemonId).sort(cN),I=R.filter(L=>L.pokemonId).sort(cN),r=s?n:n.concat(I);r.forEach((L,N)=>{const l=L.getIcon();N>=Vl&&l.setVisible(!1),this.add(l),this.setModifierIconPosition(l,r.length),l.setInteractive(new Phaser.Geom.Rectangle(0,0,32,24),Phaser.Geom.Rectangle.Contains),l.on("pointerover",()=>{a.ui.showTooltip(L.type.name,L.type.getDescription()),this.modifierCache&&this.modifierCache.length>Vl&&this.updateModifierOverflowVisibility(!0)}),l.on("pointerout",()=>{a.ui.hideTooltip(),this.modifierCache&&this.modifierCache.length>Vl&&this.updateModifierOverflowVisibility(!1)})});for(const L of this.getAll())this.sendToBack(L);this.modifierCache=A}updateModifierOverflowVisibility(A){const s=this.getAll().reverse();for(const R of s.map(n=>n).slice(Vl))R.setVisible(A)}setModifierIconPosition(A,s){const R=12+6*Math.max(Math.ceil(Math.min(s,24)/12)-2,0),n=this.getIndex(A)%R*26/(R/12),I=Math.floor(this.getIndex(A)/R)*20;A.setPosition(this.player?n:-n,I)}};o(wx,"ModifierBar");let hN=wx;const vx=class vx{constructor(A){this.type=A}match(A){return!1}shouldApply(...A){return!0}};o(vx,"Modifier");let _N=vx;const Vx=class Vx extends _N{constructor(A,s=1){super(A),this.stackCount=s,this.virtualStackCount=0}add(A,s){for(const R of A)if(this.match(R))return R.incrementStack(this.stackCount,s);return s&&(this.virtualStackCount+=this.stackCount,this.stackCount=0),A.push(this),!0}getArgs(){return[]}incrementStack(A,s){return this.getStackCount()+A<=this.getMaxStackCount()?(s?this.virtualStackCount+=A:this.stackCount+=A,!0):!1}getStackCount(){return this.stackCount+this.virtualStackCount}isIconVisible(){return!0}getIcon(A){const s=a.add.container(0,0),R=a.add.sprite(0,12,"items");R.setFrame(this.type.iconImage),R.setOrigin(0,.5),s.add(R);const n=this.getIconStackText();n&&s.add(n);const I=this.getIconStackText(!0);return I&&s.add(I),s}getIconStackText(A){if(this.getMaxStackCount()===1||A&&!this.virtualStackCount)return null;const s=a.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return s.letterSpacing=-.5,this.getStackCount()>=this.getMaxStackCount()&&s.setTint(16291984),s.setOrigin(0,0),s}};o(Vx,"PersistentModifier");let $A=Vx;const xx=class xx extends _N{add(A){return!0}};o(xx,"ConsumableModifier");let si=xx;const bx=class bx extends si{constructor(A,s,R){super(A),this.pokeballType=s,this.count=R}apply(){const A=a.pokeballCounts;return A[this.pokeballType]=Math.min(A[this.pokeballType]+this.count,ok),!0}};o(bx,"AddPokeballModifier");let xM=bx;const kx=class kx extends si{constructor(A,s,R){super(A),this.voucherType=s,this.count=R}apply(){const A=a.gameData.voucherCounts;return A[this.voucherType]+=this.count,!0}};o(kx,"AddVoucherModifier");let bM=kx;const Zx=class Zx extends $A{constructor(A,s,R,n){super(A,n),this.maxBattles=s,this.battleCount=R??this.maxBattles}add(A,s){for(const R of A)if(this.match(R)){const n=R;return n.getBattleCount()<n.getMaxBattles()?(n.resetBattleCount(),a.playSound("se/restore"),!0):!1}return A.push(this),!0}lapse(...A){return this.battleCount--,this.battleCount>0}getIcon(){const A=super.getIcon(),s=Math.floor(120*(this.battleCount/this.maxBattles)+5),R=Vb(s,.5,.9),n=Vb(s,.7,.3),I=Se(27,0,this.battleCount.toString(),k.PARTY,{fontSize:"66px",color:R});return I.setShadow(0,0),I.setStroke(n,16),I.setOrigin(1,0),A.add(I),A}getIconStackText(A){return null}getBattleCount(){return this.battleCount}resetBattleCount(){this.battleCount=this.maxBattles}setNewBattleCount(A){this.maxBattles=A,this.battleCount=A}getMaxBattles(){return this.maxBattles}getArgs(){return[this.maxBattles,this.battleCount]}getMaxStackCount(A){return 2}};o(Zx,"LapsingPersistentModifier");let Ri=Zx;const wo=class wo extends Ri{match(A){return A instanceof wo&&A.getMaxBattles()===this.getMaxBattles()}clone(){return new wo(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}apply(A){return A.value=A.value/4,!0}};o(wo,"DoubleBattleChanceBoosterModifier");let NL=wo;const vo=class vo extends Ri{constructor(A,s,R,n,I){super(A,R,n,I),this.stat=s,this.boost=s!==p.ACC?.3:1}match(A){return A instanceof vo?A.stat===this.stat:!1}clone(){return new vo(this.type,this.stat,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}getArgs(){return[this.stat,...super.getArgs()]}shouldApply(A,s){return!!A&&!!s&&Rk.includes(A)&&A===this.stat}apply(A,s){return s.value+=this.boost,!0}};o(vo,"TempStatStageBoosterModifier");let lL=vo;const Vo=class Vo extends Ri{clone(){return new Vo(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof Vo}shouldApply(A){return!!A}apply(A){return A.value++,!0}};o(Vo,"TempCritBoosterModifier");let PN=Vo;const F0=class F0 extends $A{clone(){return new F0(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};o(F0,"MapModifier");let GN=F0;const Y0=class Y0 extends $A{clone(){return new Y0(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};o(Y0,"MegaEvolutionAccessModifier");let CL=Y0;const W0=class W0 extends $A{clone(){return new W0(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};o(W0,"GigantamaxAccessModifier");let uL=W0;const y0=class y0 extends $A{clone(){return new y0(this.type,this.stackCount)}apply(...A){return!0}getMaxStackCount(){return 1}};o(y0,"TerastallizeAccessModifier");let UL=y0;const Xx=class Xx extends $A{constructor(A,s,R){super(A,R),this.isTransferable=!0,this.pokemonId=s}match(A){return this.matchType(A)&&A.pokemonId===this.pokemonId}getArgs(){return[this.pokemonId]}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}isIconVisible(){var A;return!!((A=this.getPokemon())!=null&&A.isOnField())}getIcon(A){const s=A?super.getIcon():a.add.container(0,0);if(A)s.setScale(.5);else{const R=this.getPokemon();if(R){const L=a.addPokemonIcon(R,-2,10,0,.5);s.add(L),s.setName(R.id.toString())}const n=a.add.sprite(16,this.virtualStackCount?8:16,"items");n.setScale(.5),n.setOrigin(0,.5),n.setTexture("items",this.type.iconImage),s.add(n);const I=this.getIconStackText();I&&s.add(I);const r=this.getIconStackText(!0);r&&s.add(r)}return s}getPokemon(){return this.pokemonId?a.getPokemonById(this.pokemonId)??void 0:void 0}getScoreMultiplier(){return 1}getMaxStackCount(A){const s=this.getPokemon();return s?s.isPlayer()&&A?a.getPlayerParty().map(R=>this.getMaxHeldItemCount(R)).reduce((R,n)=>Math.max(R,n),0):this.getMaxHeldItemCount(s):0}};o(Xx,"PokemonHeldItemModifier");let Ft=Xx;const Qx=class Qx extends Ft{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.battlesLeft=R}lapse(...A){return!!--this.battlesLeft}getIcon(A){var R;const s=super.getIcon(A);if((R=this.getPokemon())!=null&&R.isPlayer()){const n=Se(27,0,this.battlesLeft.toString(),k.PARTY,{fontSize:"66px",color:bC.PINK});n.setShadow(0,0),n.setStroke(kC.RED,16),n.setOrigin(1,0),s.add(n)}return s}getBattlesLeft(){return this.battlesLeft}getMaxStackCount(A){return 1}};o(Qx,"LapsingPokemonHeldItemModifier");let dN=Qx;const xo=class xo extends Ft{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.stat=R}matchType(A){return A instanceof xo?A.stat===this.stat:!1}clone(){return new xo(this.type,this.pokemonId,this.stat,this.stackCount)}getArgs(){return super.getArgs().concat(this.stat)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s[this.stat]=Math.floor(s[this.stat]*(1+this.getStackCount()*.1)),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return A.ivs[this.stat]}};o(xo,"BaseStatModifier");let HN=xo;const bo=class bo extends Ft{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.species=R,this.required=n}matchType(A){return A instanceof bo&&A.species===this.species&&A.required===this.required}clone(){return new bo(this.type,this.pokemonId,this.species,this.required,this.stackCount)}getArgs(){return super.getArgs().concat([this.species,this.required])}apply(){return!0}getIconStackText(A){if(this.getMaxStackCount()===1||A&&!this.virtualStackCount)return null;const s=a.getPokemonById(this.pokemonId);this.stackCount=s?s.evoCounter+s.getHeldItems().filter(n=>n instanceof ii).length+a.findModifiers(n=>n instanceof CO||n instanceof ri||n instanceof Li).length:this.stackCount;const R=a.add.bitmapText(10,15,"item-count",this.stackCount.toString(),11);return R.letterSpacing=-.5,this.getStackCount()>=this.required&&R.setTint(16291984),R.setOrigin(0,0),R}getMaxHeldItemCount(A){return this.stackCount=A.evoCounter+A.getHeldItems().filter(s=>s instanceof ii).length+a.findModifiers(s=>s instanceof CO||s instanceof ri||s instanceof Li).length,999}};o(bo,"EvoTrackerModifier");let fN=bo;const ko=class ko extends Ft{constructor(A,s,R,n){super(A,s,n),this.isTransferable=!1,this.statModifier=R}matchType(A){return A instanceof ko&&this.statModifier===A.statModifier}clone(){return new ko(this.type,this.pokemonId,this.statModifier,this.stackCount)}getArgs(){return super.getArgs().concat(this.statModifier)}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,n)=>{const I=Math.floor(n===0?R+this.statModifier/2:R+this.statModifier);s[n]=Math.min(Math.max(I,1),999999)}),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 2}};o(ko,"PokemonBaseStatTotalModifier");let BN=ko;const Zo=class Zo extends Ft{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.statModifier=R,this.stats=n}matchType(A){return A instanceof Zo&&A.statModifier===this.statModifier&&this.stats.every(s=>A.stats.some(R=>s===R))}clone(){return new Zo(this.type,this.pokemonId,this.statModifier,this.stats,this.stackCount)}getArgs(){return[...super.getArgs(),this.statModifier,this.stats]}shouldApply(A,s){return super.shouldApply(A,s)&&Array.isArray(s)}apply(A,s){return s.forEach((R,n)=>{if(this.stats.includes(n)){const I=Math.floor(R+this.statModifier);s[n]=Math.min(Math.max(I,1),999999)}}),!0}getScoreMultiplier(){return 1.1}getMaxHeldItemCount(A){return 1}};o(Zo,"PokemonBaseStatFlatModifier");let gN=Zo;const Xo=class Xo extends Ft{constructor(){super(...arguments),this.isTransferable=!1}matchType(A){return A instanceof Xo}clone(){return new Xo(this.type,this.pokemonId,this.stackCount)}getArgs(){return super.getArgs()}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!!R}apply(A,s,R){return s===p.HP?(R.value+=this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.05))):(R.value+=2*this.stackCount,this.stackCount===this.getMaxHeldItemCount()&&(R.value=Math.floor(R.value*1.1))),!0}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 50}};o(Xo,"PokemonIncrementingStatModifier");let pI=Xo;const Qo=class Qo extends Ft{constructor(A,s,R,n,I){super(A,s,I),this.stats=R,this.multiplier=n}clone(){return new Qo(this.type,this.pokemonId,this.stats,this.multiplier,this.stackCount)}getArgs(){return[...super.getArgs(),this.stats,this.multiplier]}matchType(A){if(A instanceof Qo){const s=A;if(s.multiplier===this.multiplier&&s.stats.length===this.stats.length)return s.stats.every((R,n)=>R===this.stats[n])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&this.stats.includes(s)}apply(A,s,R){return R.value*=this.multiplier,!0}getMaxHeldItemCount(A){return 1}};o(Qo,"StatBoosterModifier");let DL=Qo;const w0=class w0 extends DL{clone(){return super.clone()}matchType(A){return A instanceof w0}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&!A.isMax()}apply(A,s,R){const n=A.getSpeciesForm(!0).speciesId in jt;return A.isFusion()&&A.getFusionSpeciesForm(!0).speciesId in jt!==n?(R.value*=1+(this.multiplier-1)/2,!0):n?super.apply(A,s,R):!1}};o(w0,"EvolutionStatBoosterModifier");let kM=w0;const $o=class $o extends DL{constructor(A,s,R,n,I,r){super(A,s,R,n,r),this.species=I}clone(){return new $o(this.type,this.pokemonId,this.stats,this.multiplier,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){if(A instanceof $o){const s=A;if(s.species.length===this.species.length)return super.matchType(A)&&s.species.every((R,n)=>R===this.species[n])}return!1}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}contains(A,s){return this.species.includes(A)&&this.stats.includes(s)}};o($o,"SpeciesStatBoosterModifier");let KI=$o;const Jo=class Jo extends Ft{constructor(A,s,R,n){super(A,s,n),this.stageIncrement=R}clone(){return new Jo(this.type,this.pokemonId,this.stageIncrement,this.stackCount)}getArgs(){return super.getArgs().concat(this.stageIncrement)}matchType(A){return A instanceof Jo?A.stageIncrement===this.stageIncrement:!1}apply(A,s){return s.value+=this.stageIncrement,!0}getMaxHeldItemCount(A){return 1}};o(Jo,"CritBoosterModifier");let ML=Jo;const zo=class zo extends ML{constructor(A,s,R,n,I){super(A,s,R,I),this.species=n}clone(){return new zo(this.type,this.pokemonId,this.stageIncrement,this.species,this.stackCount)}getArgs(){return[...super.getArgs(),this.species]}matchType(A){return A instanceof zo}shouldApply(A,s){return super.shouldApply(A,s)&&(this.species.includes(A.getSpeciesForm(!0).speciesId)||A.isFusion()&&this.species.includes(A.getFusionSpeciesForm(!0).speciesId))}};o(zo,"SpeciesCritBoosterModifier");let mN=zo;const jo=class jo extends Ft{constructor(A,s,R,n,I){super(A,s,I),this.moveType=R,this.boostMultiplier=n*.01}matchType(A){if(A instanceof jo){const s=A;return s.moveType===this.moveType&&s.boostMultiplier===this.boostMultiplier}return!1}clone(){return new jo(this.type,this.pokemonId,this.moveType,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat([this.moveType,this.boostMultiplier*100])}shouldApply(A,s,R){return super.shouldApply(A,s,R)&&typeof s=="number"&&R instanceof je}apply(A,s,R){return s===this.moveType&&R.value>=1?(R.value=Math.floor(R.value*(1+this.getStackCount()*this.boostMultiplier)),!0):!1}getScoreMultiplier(){return 1.2}getMaxHeldItemCount(A){return 99}};o(jo,"AttackTypeBoosterModifier");let Bn=jo;const qo=class qo extends Ft{matchType(A){return A instanceof qo}clone(){return new qo(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return!s.value&&A.randSeedInt(10)<this.getStackCount()?(s.value=!0,a.queueMessage(u.t("modifier:surviveDamageApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name})),!0):!1}getMaxHeldItemCount(A){return 5}};o(qo,"SurviveDamageModifier");let pN=qo;const eT=class eT extends Ft{matchType(A){return A instanceof eT}clone(){return new eT(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){var R;if(!s.value&&A.randSeedInt(10)<this.getStackCount()){s.value=!0;const n=((R=a.currentBattle.turnCommands[A.getBattlerIndex()])==null?void 0:R.command)===OA.FIGHT,I=this.type instanceof GA&&this.type.id==="QUICK_CLAW";return n&&I&&a.queueMessage(u.t("modifier:bypassSpeedChanceApply",{pokemonName:ee(A),itemName:u.t("modifierType:ModifierType.QUICK_CLAW.name")})),!0}return!1}getMaxHeldItemCount(A){return 3}};o(eT,"BypassSpeedChanceModifier");let FI=eT;const tT=class tT extends Ft{constructor(A,s,R){super(A,s,R),this.chance=10}matchType(A){return A instanceof tT}clone(){return new tT(this.type,this.pokemonId,this.stackCount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return A.battleSummonData&&!s.value&&A.randSeedInt(100)<this.getStackCount()*this.chance?(s.value=!0,!0):!1}getMaxHeldItemCount(A){return 3}};o(tT,"FlinchChanceModifier");let KN=tT;const AT=class AT extends Ft{matchType(A){return A instanceof AT}clone(){return new AT(this.type,this.pokemonId,this.stackCount)}apply(A){return A.isFullHp()?!1:(a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/16)*this.stackCount,u.t("modifier:turnHealApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!0)),!0)}getMaxHeldItemCount(A){return 4}};o(AT,"TurnHealModifier");let YI=AT;const ET=class ET extends Ft{constructor(A,s,R){switch(super(A,s,R),A.id){case"TOXIC_ORB":this.effect=re.TOXIC;break;case"FLAME_ORB":this.effect=re.BURN;break}}matchType(A){return A instanceof ET}clone(){return new ET(this.type,this.pokemonId,this.stackCount)}apply(A){return A.trySetStatus(this.effect,!0,void 0,void 0,this.type.name)}getMaxHeldItemCount(A){return 1}getStatusEffect(){return this.effect}};o(ET,"TurnStatusEffectModifier");let Oi=ET;const sT=class sT extends Ft{matchType(A){return A instanceof sT}clone(){return new sT(this.type,this.pokemonId,this.stackCount)}apply(A){return A.turnData.totalDamageDealt&&!A.isFullHp()&&a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.turnData.totalDamageDealt/8)*this.stackCount,u.t("modifier:hitHealApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!0)),!0}getMaxHeldItemCount(A){return 4}};o(sT,"HitHealModifier");let WI=sT;const RT=class RT extends $A{match(A){return A instanceof RT}clone(){return new RT(this.type,this.stackCount)}shouldApply(A){return!!A}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(A){return 99}};o(RT,"LevelIncrementBoosterModifier");let ni=RT;const OT=class OT extends Ft{constructor(A,s,R,n){super(A,s,n),this.berryType=R,this.consumed=!1}matchType(A){return A instanceof OT&&A.berryType===this.berryType}clone(){return new OT(this.type,this.pokemonId,this.berryType,this.stackCount)}getArgs(){return super.getArgs().concat(this.berryType)}shouldApply(A){return!this.consumed&&super.shouldApply(A)&&Jj(this.berryType)(A)}apply(A){const s=new Pt(!1);return a.applyModifiers(yI,A.isPlayer(),A,s),c7(this.berryType)(A),s.value||(this.consumed=!0),!0}getMaxHeldItemCount(A){return[gt.LUM,gt.LEPPA,gt.SITRUS,gt.ENIGMA].includes(this.berryType)?2:3}};o(OT,"BerryModifier");let GE=OT;const nT=class nT extends $A{match(A){return A instanceof nT}clone(){return new nT(this.type,this.stackCount)}shouldApply(A,s){return!!A&&!!s}apply(A,s){return s.value||(s.value=A.randSeedInt(10)<this.getStackCount()*3),!0}getMaxStackCount(){return 3}};o(nT,"PreserveBerryModifier");let yI=nT;const aT=class aT extends Ft{matchType(A){return A instanceof aT}clone(){return new aT(this.type,this.pokemonId,this.stackCount)}apply(A){a.unshiftPhase(new ZE(A.getBattlerIndex(),Qt(A.getMaxHp()/2),u.t("modifier:pokemonInstantReviveApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name}),!1,!1,!0)),A.resetStatus(!0,!1,!0);const s=A.isPlayer()?a.getPlayerField():a.getEnemyField();for(const R of s)_t(AL,R,null,!1);return!0}getMaxHeldItemCount(A){return 1}};o(aT,"PokemonInstantReviveModifier");let cL=aT;const iT=class iT extends Ft{matchType(A){return A instanceof iT}clone(){return new iT(this.type,this.pokemonId,this.stackCount)}apply(A){let s=!1;for(const R of YO)A.getStatStage(R)<0&&(A.setStatStage(R,0),s=!0);return s&&a.queueMessage(u.t("modifier:resetNegativeStatStageApply",{pokemonNameWithAffix:ee(A),typeName:this.type.name})),s}getMaxHeldItemCount(A){return 2}};o(iT,"ResetNegativeStatStageModifier");let FN=iT;const IT=class IT extends Ft{apply(A,s){return s.value+=2*this.stackCount,!0}matchType(A){return A instanceof IT}clone(){return new IT(this.type,this.pokemonId,this.stackCount)}getMaxHeldItemCount(A){return 2}};o(IT,"FieldEffectModifier");let hL=IT;const $x=class $x extends si{constructor(A,s){super(A),this.pokemonId=s}shouldApply(A,...s){return!!A&&(this.pokemonId===-1||A.id===this.pokemonId)}getPokemon(){return a.getPlayerParty().find(A=>A.id===this.pokemonId)}};o($x,"ConsumablePokemonModifier");let KR=$x;const Jx=class Jx extends KR{constructor(A,s,R){super(A,s),this.teraType=R}shouldApply(A){var s;return super.shouldApply(A)&&[A==null?void 0:A.species.speciesId,(s=A==null?void 0:A.fusionSpecies)==null?void 0:s.speciesId].filter(R=>R===e.TERAPAGOS||R===e.OGERPON||R===e.SHEDINJA).length===0}apply(A){return A.teraType=this.teraType,!0}};o(Jx,"TerrastalizeModifier");let ZM=Jx;const zx=class zx extends KR{constructor(A,s,R,n,I,r){super(A,s),this.restorePoints=R,this.restorePercent=n,this.healStatus=I,this.fainted=!!r}shouldApply(A,s){return super.shouldApply(A)&&(this.fainted||!Pe(s)&&typeof s=="number")}apply(A,s){if(!A.hp===this.fainted){let R=this.restorePoints;return this.fainted||(R=Math.floor(R*s)),(this.fainted||this.healStatus)&&A.resetStatus(!0,!0),A.hp=Math.min(A.hp+Math.max(Math.ceil(Math.max(Math.floor(this.restorePercent*.01*A.getMaxHp()),R)),1),A.getMaxHp()),!0}return!1}};o(zx,"PokemonHpRestoreModifier");let ai=zx;const jx=class jx extends KR{apply(A){return A.resetStatus(!0,!0),!0}};o(jx,"PokemonStatusHealModifier");let XM=jx;const qx=class qx extends KR{constructor(A,s,R){super(A,s),this.moveIndex=R}};o(qx,"ConsumablePokemonMoveModifier");let YN=qx;const eb=class eb extends YN{constructor(A,s,R,n){super(A,s,R),this.restorePoints=n}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0),!0}};o(eb,"PokemonPpRestoreModifier");let QM=eb;const tb=class tb extends KR{constructor(A,s,R){super(A,s),this.restorePoints=R}apply(A){for(const s of A.getMoveset())s&&(s.ppUsed=this.restorePoints>-1?Math.max(s.ppUsed-this.restorePoints,0):0);return!0}};o(tb,"PokemonAllMovePpRestoreModifier");let $M=tb;const Ab=class Ab extends YN{constructor(A,s,R,n){super(A,s,R),this.upPoints=n}apply(A){const s=A.getMoveset()[this.moveIndex];return s&&!s.maxPpOverride&&(s.ppUp=Math.min(s.ppUp+this.upPoints,3)),!0}};o(Ab,"PokemonPpUpModifier");let JM=Ab;const Eb=class Eb extends KR{constructor(A,s,R){super(A,s),this.nature=R}apply(A){return A.setCustomNature(this.nature),a.gameData.unlockSpeciesNature(A.species,this.nature),!0}};o(Eb,"PokemonNatureChangeModifier");let zM=Eb;const sb=class sb extends KR{apply(A,s=new je(1)){return a.applyModifiers(ni,!0,s),A.level+=s.value,A.level<=a.getMaxExpLevel(!0)&&(A.exp=IO(A.level,A.species.growthRate),A.levelExp=0),A.addFriendship(BZ),a.unshiftPhase(new YS(a.getPlayerParty().indexOf(A),A.level-s.value,A.level)),!0}};o(sb,"PokemonLevelIncrementModifier");let WN=sb;const Rb=class Rb extends KR{apply(A){return a.unshiftPhase(new ra(a.getPlayerParty().indexOf(A),this.type.moveId,Yf.TM)),!0}};o(Rb,"TmModifier");let jM=Rb;const Ob=class Ob extends KR{constructor(A,s,R){super(A,s),this.levelMoveIndex=R}apply(A,s){return a.unshiftPhase(new ra(a.getPlayerParty().indexOf(A),A.getLearnableLevelMoves()[this.levelMoveIndex],Yf.MEMORY,s)),!0}};o(Ob,"RememberMoveModifier");let yN=Ob;const nb=class nb extends KR{apply(A){let s=jt.hasOwnProperty(A.species.speciesId)?jt[A.species.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFormKey())&&(!R.condition||R.condition.predicate(A))):null;return!s&&A.isFusion()&&(s=jt[A.fusionSpecies.speciesId].find(R=>R.item===this.type.evolutionItem&&(R.evoFormKey===null||(R.preFormKey||"")===A.getFusionFormKey())&&(!R.condition||R.condition.predicate(A))),s&&(s=new Aa(A.species.speciesId,s))),s?(a.unshiftPhase(new KS(A,s,A.level-1)),!0):!1}};o(nb,"EvolutionItemModifier");let qM=nb;const ab=class ab extends KR{constructor(A,s,R){super(A,s),this.fusePokemonId=R}shouldApply(A,s){return super.shouldApply(A,s)&&!!s&&this.fusePokemonId===s.id}apply(A,s){return A.fuse(s),!0}};o(ab,"FusePokemonModifier");let wN=ab;const rT=class rT extends $A{match(A){return A instanceof rT}apply(){return!0}clone(){return new rT(this.type,this.stackCount)}getMaxStackCount(){return 5}};o(rT,"MultipleParticipantExpBonusModifier");let vN=rT;const LT=class LT extends $A{constructor(A,s,R){super(A,R),this.multiplier=s}match(A){return A instanceof LT}clone(){return new LT(this.type,this.multiplier,this.stackCount)}getArgs(){return[this.multiplier]}apply(A){return A.value*=1+(this.multiplier-1)*this.getStackCount(),!0}getMaxStackCount(){return 5}};o(LT,"HealingBoosterModifier");let wI=LT;const oT=class oT extends $A{constructor(A,s,R){super(A,R),this.boostMultiplier=s*.01}match(A){return A instanceof oT?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new oT(this.type,this.boostMultiplier*100,this.stackCount)}getArgs(){return[this.boostMultiplier*100]}apply(A){return A.value=Math.floor(A.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxStackCount(A){return this.boostMultiplier<1?this.boostMultiplier<.6?99:30:10}};o(oT,"ExpBoosterModifier");let _L=oT;const TT=class TT extends Ft{constructor(A,s,R,n){super(A,s,n),this.boostMultiplier=R*.01}matchType(A){return A instanceof TT?A.boostMultiplier===this.boostMultiplier:!1}clone(){return new TT(this.type,this.pokemonId,this.boostMultiplier*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.boostMultiplier*100)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=Math.floor(s.value*(1+this.getStackCount()*this.boostMultiplier)),!0}getMaxHeldItemCount(A){return 99}};o(TT,"PokemonExpBoosterModifier");let VN=TT;const ST=class ST extends $A{match(A){return A instanceof ST}clone(){return new ST(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 5}};o(ST,"ExpShareModifier");let xN=ST;const NT=class NT extends $A{match(A){return A instanceof NT}clone(){return new NT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 4}};o(NT,"ExpBalanceModifier");let bN=NT;const lT=class lT extends Ft{matchType(A){return A instanceof lT}clone(){return new lT(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value=Math.floor(s.value*(1+.5*this.getStackCount())),!0}getMaxHeldItemCount(A){return 3}};o(lT,"PokemonFriendshipBoosterModifier");let kN=lT;const CT=class CT extends Ft{matchType(A){return A instanceof CT}clone(){return new CT(this.type,this.pokemonId,this.stackCount)}apply(A,s){return s.value!==1?(s.value+=.1*this.getStackCount()*(s.value>1?1:-1),!0):!1}getMaxHeldItemCount(A){return 10}};o(CT,"PokemonNatureWeightModifier");let ZN=CT;const uT=class uT extends Ft{constructor(A,s,R,n){super(A,s,n),this.accuracyAmount=R}matchType(A){return A instanceof uT?A.accuracyAmount===this.accuracyAmount:!1}clone(){return new uT(this.type,this.pokemonId,this.accuracyAmount,this.stackCount)}getArgs(){return super.getArgs().concat(this.accuracyAmount)}shouldApply(A,s){return super.shouldApply(A,s)&&!!s}apply(A,s){return s.value=s.value+this.accuracyAmount*this.getStackCount(),!0}getMaxHeldItemCount(A){return 3}};o(uT,"PokemonMoveAccuracyBoosterModifier");let XN=uT;const UT=class UT extends Ft{matchType(A){return A instanceof UT}clone(){return new UT(this.type,this.pokemonId,this.stackCount)}apply(A,s,R=null,n=null){return Ve[s].canBeMultiStrikeEnhanced(A)?Pe(R)?Pe(n)?!1:this.applyDamageModifier(A,n):this.applyHitCountBoost(R):!1}applyHitCountBoost(A){return A.value+=this.getStackCount(),!0}applyDamageModifier(A,s){return A.turnData.hitsLeft===A.turnData.hitCount?(s.value*=1-.25*this.getStackCount(),!0):A.turnData.hitCount-A.turnData.hitsLeft!==this.getStackCount()+1?(s.value*=.25,!0):!1}getMaxHeldItemCount(A){return 2}};o(UT,"PokemonMultiHitModifier");let Ta=UT;const DT=class DT extends Ft{constructor(A,s,R,n,I){super(A,s,I),this.isTransferable=!1,this.formChangeItem=R,this.active=n}matchType(A){return A instanceof DT&&A.formChangeItem===this.formChangeItem}clone(){return new DT(this.type,this.pokemonId,this.formChangeItem,this.active,this.stackCount)}getArgs(){return super.getArgs().concat(this.formChangeItem,this.active)}apply(A,s){const R=this.active&&!s;R&&(this.active=!1);const n=a.triggerPokemonFormChange(A,Ke);return R&&(this.active=!0),n}getMaxHeldItemCount(A){return 1}};o(DT,"PokemonFormChangeItemModifier");let GR=DT;const ib=class ib extends si{constructor(A,s){super(A),this.moneyMultiplier=s}apply(){const A=new je(a.getWaveMoneyAmount(this.moneyMultiplier));return a.applyModifiers(CO,!0,A),a.addMoney(A.value),a.getPlayerParty().map(s=>{var R,n;if(((R=s.species)==null?void 0:R.speciesId)===e.GIMMIGHOUL||((n=s.fusionSpecies)==null?void 0:n.speciesId)===e.GIMMIGHOUL){s.evoCounter?s.evoCounter+=Math.min(Math.floor(this.moneyMultiplier),3):s.evoCounter=Math.min(Math.floor(this.moneyMultiplier),3);const I=Z0(j.EVOLUTION_TRACKER_GIMMIGHOUL).newModifier(s);a.addModifier(I)}}),!0}};o(ib,"MoneyRewardModifier");let e0=ib;const MT=class MT extends $A{match(A){return A instanceof MT}clone(){return new MT(this.type,this.stackCount)}apply(A){return A.value+=Math.floor(A.value*.2*this.getStackCount()),!0}getMaxStackCount(){return 5}};o(MT,"MoneyMultiplierModifier");let CO=MT;const cT=class cT extends Ft{matchType(A){return A instanceof cT}clone(){return new cT(this.type,this.pokemonId,this.stackCount)}apply(A,s){const R=new je(Math.floor(s.value*(.5*this.getStackCount())));return a.applyModifiers(CO,!0,R),a.addMoney(R.value),!0}getMaxHeldItemCount(A){return 5}};o(cT,"DamageMoneyRewardModifier");let ii=cT;const hT=class hT extends $A{match(A){return A instanceof hT}apply(){const A=Math.floor(a.money*.1*this.getStackCount());a.addMoney(A);const s=navigator.language||"en-US",R=A.toLocaleString(s),n=u.t("modifier:moneyInterestApply",{moneyAmount:R,typeName:this.type.name});return a.queueMessage(n,void 0,!0),!0}clone(){return new hT(this.type,this.stackCount)}getMaxStackCount(){return 5}};o(hT,"MoneyInterestModifier");let QN=hT;const _T=class _T extends $A{match(A){return A instanceof _T}clone(){return new _T(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,-1-this.getStackCount()),!0}getMaxStackCount(){return 4}};o(_T,"HiddenAbilityRateBoosterModifier");let gn=_T;const PT=class PT extends $A{match(A){return A instanceof PT}clone(){return new PT(this.type,this.stackCount)}apply(A){return A.value*=Math.pow(2,1+this.getStackCount()),!0}getMaxStackCount(){return 4}};o(PT,"ShinyRateBoosterModifier");let vI=PT;const GT=class GT extends $A{match(A){return A instanceof GT}clone(){return new GT(this.type,this.stackCount)}apply(A){return A.value*=1.5+this.getStackCount()/2,!0}getMaxStackCount(){return 3}};o(GT,"CriticalCatchChanceBoosterModifier");let $N=GT;const dT=class dT extends $A{match(A){return A instanceof dT}apply(){return!0}clone(){return new dT(this.type,this.stackCount)}getMaxStackCount(){return 1}};o(dT,"LockModifierTiersModifier");let JN=dT;const HT=class HT extends $A{constructor(A,s,R){super(A,R),this.shopMultiplier=s??2.5}match(A){return A instanceof HT}clone(){return new HT(this.type,this.shopMultiplier,this.stackCount)}apply(A){return A.value=Math.floor(A.value*this.shopMultiplier),!0}getArgs(){return super.getArgs().concat(this.shopMultiplier)}getMaxStackCount(){return 1}};o(HT,"HealShopCostModifier");let Ii=HT;const fT=class fT extends $A{match(A){return A instanceof fT}clone(){return new fT(this.type,this.stackCount)}apply(){return!0}getMaxStackCount(){return 1}};o(fT,"BoostBugSpawnModifier");let zN=fT;const BT=class BT extends Ft{matchType(A){return A instanceof BT}clone(){return new BT(this.type,this.pokemonId,this.stackCount)}apply(){return!0}getMaxHeldItemCount(A){return 1}};o(BT,"SwitchEffectTransferModifier");let ba=BT;const Ib=class Ib extends Ft{getTargets(A,...s){return A instanceof kR?A.getOpponents():[]}apply(A,s,...R){const n=this.getTargets(A,s);if(!n.length)return!1;const I=n[A.randSeedInt(n.length)],r=this.getTransferredItemCount();if(!r)return!1;const L=A.isPlayer()?yE.PLAYER:A.hasTrainer()?yE.TRAINER:yE.WILD,N=[],l=a.findModifiers(D=>D instanceof Ft&&D.pokemonId===I.id&&D.isTransferable,I.isPlayer());let C=l.map(D=>D.type.getOrInferTier(L)).reduce((D,M)=>Math.max(M,D),0),U=l.filter(D=>D.type.getOrInferTier(L)===C);for(let D=0;D<r;D++){if(!U.length){for(;C--&&!U.length;)U=l.filter(_=>_.type.tier===C);if(!U.length)break}const M=A.randSeedInt(l.length),h=l[M];a.tryTransferHeldItemModifier(h,A,!1)&&(N.push(h.type),l.splice(M,1))}for(const D of N)a.queueMessage(this.getTransferMessage(A,I,D));return!!N.length}};o(Ib,"HeldItemTransferModifier");let jN=Ib;const gT=class gT extends jN{constructor(){super(...arguments),this.isTransferable=!0}matchType(A){return A instanceof gT}clone(){return new gT(this.type,this.pokemonId,this.stackCount)}getTransferredItemCount(){return this.getStackCount()}getTransferMessage(A,s,R){return u.t("modifier:turnHeldItemTransferApply",{pokemonNameWithAffix:ee(s),itemName:R.name,pokemonName:A.getNameToRender(),typeName:this.type.name})}getMaxHeldItemCount(A){return 1}setTransferrableFalse(){this.isTransferable=!1}};o(gT,"TurnHeldItemTransferModifier");let VI=gT;const mT=class mT extends jN{constructor(A,s,R,n){super(A,s,n),this.chance=R/100}getTargets(A,s){return s?[s]:[]}matchType(A){return A instanceof mT}clone(){return new mT(this.type,this.pokemonId,this.chance*100,this.stackCount)}getArgs(){return super.getArgs().concat(this.chance*100)}getTransferredItemCount(){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?1:0}getTransferMessage(A,s,R){return u.t("modifier:contactHeldItemTransferApply",{pokemonNameWithAffix:ee(s),itemName:R.name,pokemonName:ee(A),typeName:this.type.name})}getMaxHeldItemCount(A){return 5}};o(mT,"ContactHeldItemTransferChanceModifier");let xI=mT;const pT=class pT extends $A{constructor(A,s){super(A)}match(A){return A instanceof pT}clone(){return new pT(this.type)}apply(){return!0}getMaxStackCount(){return 1}};o(pT,"IvScannerModifier");let bI=pT;const KT=class KT extends $A{match(A){return A instanceof KT}clone(){return new KT(this.type,this.stackCount)}apply(A){return A.value+=this.getStackCount(),!0}getMaxStackCount(){return 3}};o(KT,"ExtraModifierModifier");let ri=KT;const FT=class FT extends Ri{add(A,s){for(const R of A)if(this.match(R)){const n=R,I=this.getMaxBattles()+n.getBattleCount();return n.setNewBattleCount(I),a.playSound("se/restore"),!0}return A.push(this),!0}clone(){return new FT(this.type,this.getMaxBattles(),this.getBattleCount(),this.stackCount)}match(A){return A instanceof FT}apply(A){return A.value+=this.getStackCount(),!0}};o(FT,"TempExtraModifierModifier");let Li=FT;const rb=class rb extends $A{getMaxStackCount(){return 5}};o(rb,"EnemyPersistentModifier");let Yn=rb;const Lb=class Lb extends Yn{constructor(A,s,R){super(A,R),this.damageMultiplier=s}apply(A){return A.value=Qt(A.value*Math.pow(this.damageMultiplier,this.getStackCount())),!0}getMaxStackCount(){return 99}};o(Lb,"EnemyDamageMultiplierModifier");let t0=Lb;const YT=class YT extends t0{constructor(A,s,R){super(A,1.05,R)}match(A){return A instanceof YT}clone(){return new YT(this.type,(this.damageMultiplier-1)*100,this.stackCount)}getArgs(){return[(this.damageMultiplier-1)*100]}getMaxStackCount(){return 999}};o(YT,"EnemyDamageBoosterModifier");let qN=YT;const WT=class WT extends t0{constructor(A,s,R){super(A,.975,R)}match(A){return A instanceof WT}clone(){return new WT(this.type,(1-this.damageMultiplier)*100,this.stackCount)}getArgs(){return[(1-this.damageMultiplier)*100]}getMaxStackCount(){return a.currentBattle.waveIndex<2e3?super.getMaxStackCount():999}};o(WT,"EnemyDamageReducerModifier");let el=WT;const yT=class yT extends Yn{constructor(A,s,R){super(A,R),this.healPercent=2}match(A){return A instanceof yT}clone(){return new yT(this.type,this.healPercent,this.stackCount)}getArgs(){return[this.healPercent]}apply(A){return A.isFullHp()?!1:(a.unshiftPhase(new ZE(A.getBattlerIndex(),Math.max(Math.floor(A.getMaxHp()/(100/this.healPercent))*this.stackCount,1),u.t("modifier:enemyTurnHealApply",{pokemonNameWithAffix:ee(A)}),!0,!1,!1,!1,!0)),!0)}getMaxStackCount(){return 10}};o(yT,"EnemyTurnHealModifier");let tl=yT;const wT=class wT extends Yn{constructor(A,s,R,n){super(A,n),this.effect=s,this.chance=.025*(this.effect===re.BURN||this.effect===re.POISON?2:1)}match(A){return A instanceof wT&&A.effect===this.effect}clone(){return new wT(this.type,this.effect,this.chance*100,this.stackCount)}getArgs(){return[this.effect,this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?A.trySetStatus(this.effect,!0):!1}getMaxStackCount(){return 10}};o(wT,"EnemyAttackStatusEffectChanceModifier");let PL=wT;const vT=class vT extends Yn{constructor(A,s,R){super(A,R),this.chance=.025}match(A){return A instanceof vT}clone(){return new vT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return A.status&&Phaser.Math.RND.realInRange(0,1)<this.chance*this.getStackCount()?(a.queueMessage(oi(A.status.effect,ee(A))),A.resetStatus(),A.updateInfo(),!0):!1}getMaxStackCount(){return 10}};o(vT,"EnemyStatusEffectHealChanceModifier");let Al=vT;const VT=class VT extends Yn{constructor(A,s,R){super(A,R||10),this.chance=2}match(A){return A instanceof VT}clone(){return new VT(this.type,this.chance,this.stackCount)}getArgs(){return[this.chance]}apply(A){return A.battleData.endured||A.randSeedInt(100)>=this.chance*this.getStackCount()?!1:(A.addTag(w.ENDURE_TOKEN,1),A.battleData.endured=!0,!0)}getMaxStackCount(){return 10}};o(VT,"EnemyEndureChanceModifier");let El=VT;const xT=class xT extends Yn{constructor(A,s,R){super(A,R),this.chance=s/100}match(A){return A instanceof xT&&A.chance===this.chance}clone(){return new xT(this.type,this.chance*100,this.stackCount)}getArgs(){return[this.chance*100]}apply(A){return Phaser.Math.RND.realInRange(0,1)>=this.chance*this.getStackCount()?!1:(A.value=!0,!0)}getMaxStackCount(){return 10}};o(xT,"EnemyFusionChanceModifier");let sl=xT;function Zf(E=!0){const A=E?xe.STARTING_MODIFIER_OVERRIDE:xe.OPP_MODIFIER_OVERRIDE;if(!(!A||A.length===0||!a)){E||a.clearEnemyModifiers();for(const s of A){const R=j[s.name];let n=R();if(n instanceof YE){const r="type"in s&&s.type!==null?[s.type]:void 0;n=n.generateType([],r)}const I=n&&n.withIdFromFunc(R).newModifier();I&&(I.stackCount=s.count||1,E?a.addModifier(I,!0,!1,!1,!0):a.addEnemyModifier(I,!0,!0))}}}o(Zf,"overrideModifiers");function Xf(E,A=!0){const s=A?xe.STARTING_HELD_ITEMS_OVERRIDE:xe.OPP_HELD_ITEMS_OVERRIDE;if(!(!s||s.length===0||!a)){A||a.clearEnemyHeldItemModifiers(E);for(const R of s){const n=j[R.name];let I=n();const r=R.count||1;if(I instanceof YE){const N="type"in R&&R.type!==null?[R.type]:void 0;I=I.generateType([],N)}const L=I&&I.withIdFromFunc(n).newModifier(E);L&&(L.pokemonId=E.id,L.stackCount=r,A?a.addModifier(L,!0,!1,!1,!0):a.addEnemyModifier(L,!0,!0))}}}o(Xf,"overrideHeldItems");var h7=(E=>(E[E.NONE=0]="NONE",E[E.SHORT=1]="SHORT",E[E.MEDIUM=2]="MEDIUM",E[E.LONG=3]="LONG",E[E.VERY_LONG=4]="VERY_LONG",E[E.NEVER=5]="NEVER",E))(h7||{}),aI=(E=>(E[E.NONE=0]="NONE",E[E.LINKING_CORD=1]="LINKING_CORD",E[E.SUN_STONE=2]="SUN_STONE",E[E.MOON_STONE=3]="MOON_STONE",E[E.LEAF_STONE=4]="LEAF_STONE",E[E.FIRE_STONE=5]="FIRE_STONE",E[E.WATER_STONE=6]="WATER_STONE",E[E.THUNDER_STONE=7]="THUNDER_STONE",E[E.ICE_STONE=8]="ICE_STONE",E[E.DUSK_STONE=9]="DUSK_STONE",E[E.DAWN_STONE=10]="DAWN_STONE",E[E.SHINY_STONE=11]="SHINY_STONE",E[E.CRACKED_POT=12]="CRACKED_POT",E[E.SWEET_APPLE=13]="SWEET_APPLE",E[E.TART_APPLE=14]="TART_APPLE",E[E.STRAWBERRY_SWEET=15]="STRAWBERRY_SWEET",E[E.UNREMARKABLE_TEACUP=16]="UNREMARKABLE_TEACUP",E[E.UPGRADE=17]="UPGRADE",E[E.DUBIOUS_DISC=18]="DUBIOUS_DISC",E[E.DRAGON_SCALE=19]="DRAGON_SCALE",E[E.PRISM_SCALE=20]="PRISM_SCALE",E[E.RAZOR_CLAW=21]="RAZOR_CLAW",E[E.RAZOR_FANG=22]="RAZOR_FANG",E[E.REAPER_CLOTH=23]="REAPER_CLOTH",E[E.ELECTIRIZER=24]="ELECTIRIZER",E[E.MAGMARIZER=25]="MAGMARIZER",E[E.PROTECTOR=26]="PROTECTOR",E[E.SACHET=27]="SACHET",E[E.WHIPPED_DREAM=28]="WHIPPED_DREAM",E[E.SYRUPY_APPLE=29]="SYRUPY_APPLE",E[E.CHIPPED_POT=30]="CHIPPED_POT",E[E.GALARICA_CUFF=31]="GALARICA_CUFF",E[E.GALARICA_WREATH=32]="GALARICA_WREATH",E[E.AUSPICIOUS_ARMOR=33]="AUSPICIOUS_ARMOR",E[E.MALICIOUS_ARMOR=34]="MALICIOUS_ARMOR",E[E.MASTERPIECE_TEACUP=35]="MASTERPIECE_TEACUP",E[E.SUN_FLUTE=36]="SUN_FLUTE",E[E.MOON_FLUTE=37]="MOON_FLUTE",E[E.BLACK_AUGURITE=51]="BLACK_AUGURITE",E[E.PEAT_BLOCK=52]="PEAT_BLOCK",E[E.METAL_ALLOY=53]="METAL_ALLOY",E[E.SCROLL_OF_DARKNESS=54]="SCROLL_OF_DARKNESS",E[E.SCROLL_OF_WATERS=55]="SCROLL_OF_WATERS",E[E.LEADERS_CREST=56]="LEADERS_CREST",E))(aI||{});const ob=class ob{constructor(A,s,R,n,I,r,L){this.description="",this.speciesId=A,this.preFormKey=s,this.evoFormKey=R,this.level=n,this.item=I||0,this.condition=r,this.wildDelay=L??0;const N=[];if(this.level>1&&N.push(u.t("pokemonEvolutions:level")+` ${this.level}`),this.item){const l=u.t(`modifierType:EvolutionItem.${aI[this.item].toUpperCase()}`),C=this.item>50?u.t("pokemonEvolutions:ULTRA"):u.t("pokemonEvolutions:GREAT");N.push(u.t("pokemonEvolutions:using")+l+` (${C})`)}this.condition&&N.push(this.condition.description),this.description=N.filter(l=>l!=="").map((l,C)=>C>0?l[0].toLowerCase()+l.slice(1):l).join(u.t("pokemonEvolutions:connector"))}};o(ob,"SpeciesFormEvolution");let kt=ob;const Tb=class Tb extends kt{constructor(A,s,R,n,I){super(A,null,null,s,R,n,I)}};o(Tb,"SpeciesEvolution");let b=Tb;const Sb=class Sb extends kt{constructor(A,s){super(s.speciesId,s.preFormKey,s.evoFormKey,s.level,s.item,s.condition,s.wildDelay),this.primarySpeciesId=A}};o(Sb,"FusionSpeciesFormEvolution");let Aa=Sb;const Nb=class Nb{constructor(A,s){this.predicate=A,this.enforceFunc=s,this.description=""}};o(Nb,"SpeciesEvolutionCondition");let is=Nb;const lb=class lb extends is{constructor(A){super(s=>s.gender===A,s=>s.gender=A),this.gender=A,this.description=u.t("pokemonEvolutions:gender",{gender:u.t(`pokemonEvolutions:${At[A]}`)})}};o(lb,"GenderEvolutionCondition");let Gs=lb;const Cb=class Cb extends is{constructor(A){A==="day"?(super(()=>a.arena.getTimeOfDay()===S.DAWN||a.arena.getTimeOfDay()===S.DAY),this.timesOfDay=[S.DAWN,S.DAY]):A==="night"?(super(()=>a.arena.getTimeOfDay()===S.DUSK||a.arena.getTimeOfDay()===S.NIGHT),this.timesOfDay=[S.DUSK,S.NIGHT]):(super(()=>!1),this.timesOfDay=[]),this.description=u.t("pokemonEvolutions:timeOfDay",{tod:u.t(`pokemonEvolutions:${A}`)})}};o(Cb,"TimeOfDayEvolutionCondition");let bA=Cb;const ub=class ub extends is{constructor(A){super(R=>R.moveset.filter(n=>n.moveId===A).length>0),this.move=A;const s=t[this.move].split("_").filter(R=>R).map((R,n)=>n?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${s}.name`)})}};o(ub,"MoveEvolutionCondition");let bs=ub;const Ub=class Ub extends is{constructor(A){super(s=>s.friendship>=A),this.amount=A,this.description=u.t("pokemonEvolutions:friendship")}};o(Ub,"FriendshipEvolutionCondition");let ks=Ub;const Db=class Db extends is{constructor(A,s){s==="day"?(super(R=>R.friendship>=A&&(a.arena.getTimeOfDay()===S.DAWN||a.arena.getTimeOfDay()===S.DAY)),this.timesOfDay=[S.DAWN,S.DAY]):s==="night"?(super(R=>R.friendship>=A&&(a.arena.getTimeOfDay()===S.DUSK||a.arena.getTimeOfDay()===S.NIGHT)),this.timesOfDay=[S.DUSK,S.NIGHT]):(super(R=>!1),this.timesOfDay=[]),this.amount=A,this.description=u.t("pokemonEvolutions:friendshipTimeOfDay",{tod:u.t(`pokemonEvolutions:${s}`)})}};o(Db,"FriendshipTimeOfDayEvolutionCondition");let un=Db;const Mb=class Mb extends is{constructor(A,s){super(R=>R.friendship>=A&&!!R.getMoveset().find(n=>(n==null?void 0:n.getMove().type)===s)),this.amount=A,this.type=s,this.description=u.t("pokemonEvolutions:friendshipMoveType",{type:u.t(`pokemonInfo:Type.${i[this.type]}`)})}};o(Mb,"FriendshipMoveTypeEvolutionCondition");let A0=Mb;const cb=class cb extends is{constructor(){super(()=>a.getPlayerParty().length<6&&a.pokeballCounts[we.POKEBALL]>0),this.description=u.t("pokemonEvolutions:shedinja")}};o(cb,"ShedinjaEvolutionCondition");let Lf=cb;const hb=class hb extends is{constructor(A){super(()=>!!a.getPlayerParty().find(s=>s.getTypes(!1,!1,!0).indexOf(A)>-1)),this.type=A,this.description=u.t("pokemonEvolutions:partyType",{type:u.t(`pokemonInfo:Type.${i[this.type]}`)})}};o(hb,"PartyTypeEvolutionCondition");let of=hb;const _b=class _b extends is{constructor(A){super(()=>!!a.gameData.dexData[A].caughtAttr),this.species=A,this.description=u.t("pokemonEvolutions:caught",{species:u.t(`pokemon:${e[this.species].toLowerCase()}`)})}};o(_b,"CaughtEvolutionCondition");let _o=_b;const Pb=class Pb extends is{constructor(A){super(()=>{var s;return A.indexOf(((s=a.arena.weather)==null?void 0:s.weatherType)||Oe.NONE)>-1}),this.weatherTypes=A,this.description=u.t("pokemonEvolutions:weather")}};o(Pb,"WeatherEvolutionCondition");let E0=Pb;const Gb=class Gb extends is{constructor(A){super(s=>s.moveset.filter(R=>(R==null?void 0:R.getMove().type)===A).length>0),this.type=A,this.description=u.t("pokemonEvolutions:moveType",{type:u.t(`pokemonInfo:Type.${i[this.type]}`)})}};o(Gb,"MoveTypeEvolutionCondition");let s0=Gb;const db=class db extends is{constructor(){super(A=>A.evoCounter+A.getHeldItems().filter(s=>s instanceof ii).length+a.findModifiers(s=>s instanceof CO||s instanceof ri||s instanceof Li).length>9),this.description=u.t("pokemonEvolutions:treasure")}};o(db,"TreasureEvolutionCondition");let R0=db;const Hb=class Hb extends is{constructor(A){super(R=>{var n;return((n=R.getMoveset(!0).find(I=>I&&[t.LOW_SWEEP,t.MACH_PUNCH,t.RAPID_SPIN].includes(I.moveId)))==null?void 0:n.moveId)===A}),this.move=A;const s=t[this.move].split("_").filter(R=>R).map((R,n)=>n?`${R[0]}${R.slice(1).toLowerCase()}`:R.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${s}.name`)})}};o(Hb,"TyrogueEvolutionCondition");let Po=Hb;const fb=class fb extends is{constructor(A){super(s=>A.indexOf(s.getNature())>-1),this.natures=A,this.description=u.t("pokemonEvolutions:nature")}};o(fb,"NatureEvolutionCondition");let Tf=fb;const Bb=class Bb extends is{constructor(A,s){s==="day"?(super(n=>n.moveset.filter(I=>I.moveId===A).length>0&&(a.arena.getTimeOfDay()===S.DAWN||a.arena.getTimeOfDay()===S.DAY)),this.move=A,this.timesOfDay=[S.DAWN,S.DAY]):s==="night"?(super(n=>n.moveset.filter(I=>I.moveId===A).length>0&&(a.arena.getTimeOfDay()===S.DUSK||a.arena.getTimeOfDay()===S.NIGHT)),this.move=A,this.timesOfDay=[S.DUSK,S.NIGHT]):(super(()=>!1),this.timesOfDay=[]);const R=t[this.move].split("_").filter(n=>n).map((n,I)=>I?`${n[0]}${n.slice(1).toLowerCase()}`:n.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:moveTimeOfDay",{move:u.t(`move:${R}.name`),tod:u.t(`pokemonEvolutions:${s}`)})}};o(Bb,"MoveTimeOfDayEvolutionCondition");let O0=Bb;const gb=class gb extends is{constructor(A){super(()=>A.filter(s=>s===a.arena.biomeType).length>0),this.biomes=A,this.description=u.t("pokemonEvolutions:biome")}};o(gb,"BiomeEvolutionCondition");let VO=gb;const mb=class mb extends is{constructor(){super(s=>{let R=!1;return s.moveset.filter(n=>n.moveId===t.HYPER_DRILL).length>0&&a.executeWithSeedOffset(()=>R=!He(4),s.id),R});const A=t[t.HYPER_DRILL].split("_").filter(s=>s).map((s,R)=>R?`${s[0]}${s.slice(1).toLowerCase()}`:s.toLowerCase()).join("");this.description=u.t("pokemonEvolutions:move",{move:u.t(`move:${A}.name`)})}};o(mb,"DunsparceEvolutionCondition");let Sf=mb;const pb=class pb extends is{constructor(){super(A=>{let s=!1;return a.executeWithSeedOffset(()=>s=!He(4),A.id),s})}};o(pb,"TandemausEvolutionCondition");let Nf=pb;const jt={[e.BULBASAUR]:[new b(e.IVYSAUR,16,null,null)],[e.IVYSAUR]:[new b(e.VENUSAUR,32,null,null)],[e.CHARMANDER]:[new b(e.CHARMELEON,16,null,null)],[e.CHARMELEON]:[new b(e.CHARIZARD,36,null,null)],[e.SQUIRTLE]:[new b(e.WARTORTLE,16,null,null)],[e.WARTORTLE]:[new b(e.BLASTOISE,36,null,null)],[e.CATERPIE]:[new b(e.METAPOD,7,null,null)],[e.METAPOD]:[new b(e.BUTTERFREE,10,null,null)],[e.WEEDLE]:[new b(e.KAKUNA,7,null,null)],[e.KAKUNA]:[new b(e.BEEDRILL,10,null,null)],[e.PIDGEY]:[new b(e.PIDGEOTTO,18,null,null)],[e.PIDGEOTTO]:[new b(e.PIDGEOT,36,null,null)],[e.RATTATA]:[new b(e.RATICATE,20,null,null)],[e.SPEAROW]:[new b(e.FEAROW,20,null,null)],[e.EKANS]:[new b(e.ARBOK,22,null,null)],[e.SANDSHREW]:[new b(e.SANDSLASH,22,null,null)],[e.NIDORAN_F]:[new b(e.NIDORINA,16,null,null)],[e.NIDORAN_M]:[new b(e.NIDORINO,16,null,null)],[e.ZUBAT]:[new b(e.GOLBAT,22,null,null)],[e.ODDISH]:[new b(e.GLOOM,21,null,null)],[e.PARAS]:[new b(e.PARASECT,24,null,null)],[e.VENONAT]:[new b(e.VENOMOTH,31,null,null)],[e.DIGLETT]:[new b(e.DUGTRIO,26,null,null)],[e.MEOWTH]:[new kt(e.PERSIAN,"","",28,null,null)],[e.PSYDUCK]:[new b(e.GOLDUCK,33,null,null)],[e.MANKEY]:[new b(e.PRIMEAPE,28,null,null)],[e.POLIWAG]:[new b(e.POLIWHIRL,25,null,null)],[e.ABRA]:[new b(e.KADABRA,16,null,null)],[e.MACHOP]:[new b(e.MACHOKE,28,null,null)],[e.BELLSPROUT]:[new b(e.WEEPINBELL,21,null,null)],[e.TENTACOOL]:[new b(e.TENTACRUEL,30,null,null)],[e.GEODUDE]:[new b(e.GRAVELER,25,null,null)],[e.PONYTA]:[new b(e.RAPIDASH,40,null,null)],[e.SLOWPOKE]:[new b(e.SLOWBRO,37,null,null),new b(e.SLOWKING,1,1,null,4)],[e.MAGNEMITE]:[new b(e.MAGNETON,30,null,null)],[e.DODUO]:[new b(e.DODRIO,31,null,null)],[e.SEEL]:[new b(e.DEWGONG,34,null,null)],[e.GRIMER]:[new b(e.MUK,38,null,null)],[e.GASTLY]:[new b(e.HAUNTER,25,null,null)],[e.DROWZEE]:[new b(e.HYPNO,26,null,null)],[e.KRABBY]:[new b(e.KINGLER,28,null,null)],[e.VOLTORB]:[new b(e.ELECTRODE,30,null,null)],[e.CUBONE]:[new b(e.ALOLA_MAROWAK,28,null,new bA("night")),new b(e.MAROWAK,28,null,new bA("day"))],[e.TYROGUE]:[new b(e.HITMONLEE,20,null,new Po(t.LOW_SWEEP)),new b(e.HITMONCHAN,20,null,new Po(t.MACH_PUNCH)),new b(e.HITMONTOP,20,null,new Po(t.RAPID_SPIN))],[e.KOFFING]:[new b(e.GALAR_WEEZING,35,null,new bA("night")),new b(e.WEEZING,35,null,new bA("day"))],[e.RHYHORN]:[new b(e.RHYDON,42,null,null)],[e.HORSEA]:[new b(e.SEADRA,32,null,null)],[e.GOLDEEN]:[new b(e.SEAKING,33,null,null)],[e.SMOOCHUM]:[new b(e.JYNX,30,null,null)],[e.ELEKID]:[new b(e.ELECTABUZZ,30,null,null)],[e.MAGBY]:[new b(e.MAGMAR,30,null,null)],[e.MAGIKARP]:[new b(e.GYARADOS,20,null,null)],[e.OMANYTE]:[new b(e.OMASTAR,40,null,null)],[e.KABUTO]:[new b(e.KABUTOPS,40,null,null)],[e.DRATINI]:[new b(e.DRAGONAIR,30,null,null)],[e.DRAGONAIR]:[new b(e.DRAGONITE,55,null,null)],[e.CHIKORITA]:[new b(e.BAYLEEF,16,null,null)],[e.BAYLEEF]:[new b(e.MEGANIUM,32,null,null)],[e.CYNDAQUIL]:[new b(e.QUILAVA,14,null,null)],[e.QUILAVA]:[new b(e.HISUI_TYPHLOSION,36,null,new bA("night")),new b(e.TYPHLOSION,36,null,new bA("day"))],[e.TOTODILE]:[new b(e.CROCONAW,18,null,null)],[e.CROCONAW]:[new b(e.FERALIGATR,30,null,null)],[e.SENTRET]:[new b(e.FURRET,15,null,null)],[e.HOOTHOOT]:[new b(e.NOCTOWL,20,null,null)],[e.LEDYBA]:[new b(e.LEDIAN,18,null,null)],[e.SPINARAK]:[new b(e.ARIADOS,22,null,null)],[e.CHINCHOU]:[new b(e.LANTURN,27,null,null)],[e.NATU]:[new b(e.XATU,25,null,null)],[e.MAREEP]:[new b(e.FLAAFFY,15,null,null)],[e.FLAAFFY]:[new b(e.AMPHAROS,30,null,null)],[e.MARILL]:[new b(e.AZUMARILL,18,null,null)],[e.HOPPIP]:[new b(e.SKIPLOOM,18,null,null)],[e.SKIPLOOM]:[new b(e.JUMPLUFF,27,null,null)],[e.WOOPER]:[new b(e.QUAGSIRE,20,null,null)],[e.WYNAUT]:[new b(e.WOBBUFFET,15,null,null)],[e.PINECO]:[new b(e.FORRETRESS,31,null,null)],[e.SNUBBULL]:[new b(e.GRANBULL,23,null,null)],[e.TEDDIURSA]:[new b(e.URSARING,30,null,null)],[e.SLUGMA]:[new b(e.MAGCARGO,38,null,null)],[e.SWINUB]:[new b(e.PILOSWINE,33,null,null)],[e.REMORAID]:[new b(e.OCTILLERY,25,null,null)],[e.HOUNDOUR]:[new b(e.HOUNDOOM,24,null,null)],[e.PHANPY]:[new b(e.DONPHAN,25,null,null)],[e.LARVITAR]:[new b(e.PUPITAR,30,null,null)],[e.PUPITAR]:[new b(e.TYRANITAR,55,null,null)],[e.TREECKO]:[new b(e.GROVYLE,16,null,null)],[e.GROVYLE]:[new b(e.SCEPTILE,36,null,null)],[e.TORCHIC]:[new b(e.COMBUSKEN,16,null,null)],[e.COMBUSKEN]:[new b(e.BLAZIKEN,36,null,null)],[e.MUDKIP]:[new b(e.MARSHTOMP,16,null,null)],[e.MARSHTOMP]:[new b(e.SWAMPERT,36,null,null)],[e.POOCHYENA]:[new b(e.MIGHTYENA,18,null,null)],[e.ZIGZAGOON]:[new b(e.LINOONE,20,null,null)],[e.WURMPLE]:[new b(e.SILCOON,7,null,new bA("day")),new b(e.CASCOON,7,null,new bA("night"))],[e.SILCOON]:[new b(e.BEAUTIFLY,10,null,null)],[e.CASCOON]:[new b(e.DUSTOX,10,null,null)],[e.LOTAD]:[new b(e.LOMBRE,14,null,null)],[e.SEEDOT]:[new b(e.NUZLEAF,14,null,null)],[e.TAILLOW]:[new b(e.SWELLOW,22,null,null)],[e.WINGULL]:[new b(e.PELIPPER,25,null,null)],[e.RALTS]:[new b(e.KIRLIA,20,null,null)],[e.KIRLIA]:[new b(e.GARDEVOIR,30,null,new Gs(At.FEMALE)),new b(e.GALLADE,30,null,new Gs(At.MALE))],[e.SURSKIT]:[new b(e.MASQUERAIN,22,null,null)],[e.SHROOMISH]:[new b(e.BRELOOM,23,null,null)],[e.SLAKOTH]:[new b(e.VIGOROTH,18,null,null)],[e.VIGOROTH]:[new b(e.SLAKING,36,null,null)],[e.NINCADA]:[new b(e.NINJASK,20,null,null),new b(e.SHEDINJA,20,null,new Lf)],[e.WHISMUR]:[new b(e.LOUDRED,20,null,null)],[e.LOUDRED]:[new b(e.EXPLOUD,40,null,null)],[e.MAKUHITA]:[new b(e.HARIYAMA,24,null,null)],[e.ARON]:[new b(e.LAIRON,32,null,null)],[e.LAIRON]:[new b(e.AGGRON,42,null,null)],[e.MEDITITE]:[new b(e.MEDICHAM,37,null,null)],[e.ELECTRIKE]:[new b(e.MANECTRIC,26,null,null)],[e.GULPIN]:[new b(e.SWALOT,26,null,null)],[e.CARVANHA]:[new b(e.SHARPEDO,30,null,null)],[e.WAILMER]:[new b(e.WAILORD,40,null,null)],[e.NUMEL]:[new b(e.CAMERUPT,33,null,null)],[e.SPOINK]:[new b(e.GRUMPIG,32,null,null)],[e.TRAPINCH]:[new b(e.VIBRAVA,35,null,null)],[e.VIBRAVA]:[new b(e.FLYGON,45,null,null)],[e.CACNEA]:[new b(e.CACTURNE,32,null,null)],[e.SWABLU]:[new b(e.ALTARIA,35,null,null)],[e.BARBOACH]:[new b(e.WHISCASH,30,null,null)],[e.CORPHISH]:[new b(e.CRAWDAUNT,30,null,null)],[e.BALTOY]:[new b(e.CLAYDOL,36,null,null)],[e.LILEEP]:[new b(e.CRADILY,40,null,null)],[e.ANORITH]:[new b(e.ARMALDO,40,null,null)],[e.SHUPPET]:[new b(e.BANETTE,37,null,null)],[e.DUSKULL]:[new b(e.DUSCLOPS,37,null,null)],[e.SNORUNT]:[new b(e.GLALIE,42,null,new Gs(At.MALE)),new b(e.FROSLASS,42,null,new Gs(At.FEMALE))],[e.SPHEAL]:[new b(e.SEALEO,32,null,null)],[e.SEALEO]:[new b(e.WALREIN,44,null,null)],[e.BAGON]:[new b(e.SHELGON,30,null,null)],[e.SHELGON]:[new b(e.SALAMENCE,50,null,null)],[e.BELDUM]:[new b(e.METANG,20,null,null)],[e.METANG]:[new b(e.METAGROSS,45,null,null)],[e.TURTWIG]:[new b(e.GROTLE,18,null,null)],[e.GROTLE]:[new b(e.TORTERRA,32,null,null)],[e.CHIMCHAR]:[new b(e.MONFERNO,14,null,null)],[e.MONFERNO]:[new b(e.INFERNAPE,36,null,null)],[e.PIPLUP]:[new b(e.PRINPLUP,16,null,null)],[e.PRINPLUP]:[new b(e.EMPOLEON,36,null,null)],[e.STARLY]:[new b(e.STARAVIA,14,null,null)],[e.STARAVIA]:[new b(e.STARAPTOR,34,null,null)],[e.BIDOOF]:[new b(e.BIBAREL,15,null,null)],[e.KRICKETOT]:[new b(e.KRICKETUNE,10,null,null)],[e.SHINX]:[new b(e.LUXIO,15,null,null)],[e.LUXIO]:[new b(e.LUXRAY,30,null,null)],[e.CRANIDOS]:[new b(e.RAMPARDOS,30,null,null)],[e.SHIELDON]:[new b(e.BASTIODON,30,null,null)],[e.BURMY]:[new b(e.MOTHIM,20,null,new Gs(At.MALE)),new b(e.WORMADAM,20,null,new Gs(At.FEMALE))],[e.COMBEE]:[new b(e.VESPIQUEN,21,null,new Gs(At.FEMALE))],[e.BUIZEL]:[new b(e.FLOATZEL,26,null,null)],[e.CHERUBI]:[new b(e.CHERRIM,25,null,null)],[e.SHELLOS]:[new b(e.GASTRODON,30,null,null)],[e.DRIFLOON]:[new b(e.DRIFBLIM,28,null,null)],[e.GLAMEOW]:[new b(e.PURUGLY,38,null,null)],[e.STUNKY]:[new b(e.SKUNTANK,34,null,null)],[e.BRONZOR]:[new b(e.BRONZONG,33,null,null)],[e.GIBLE]:[new b(e.GABITE,24,null,null)],[e.GABITE]:[new b(e.GARCHOMP,48,null,null)],[e.HIPPOPOTAS]:[new b(e.HIPPOWDON,34,null,null)],[e.SKORUPI]:[new b(e.DRAPION,40,null,null)],[e.CROAGUNK]:[new b(e.TOXICROAK,37,null,null)],[e.FINNEON]:[new b(e.LUMINEON,31,null,null)],[e.MANTYKE]:[new b(e.MANTINE,32,null,new _o(e.REMORAID),2)],[e.SNOVER]:[new b(e.ABOMASNOW,40,null,null)],[e.SNIVY]:[new b(e.SERVINE,17,null,null)],[e.SERVINE]:[new b(e.SERPERIOR,36,null,null)],[e.TEPIG]:[new b(e.PIGNITE,17,null,null)],[e.PIGNITE]:[new b(e.EMBOAR,36,null,null)],[e.OSHAWOTT]:[new b(e.DEWOTT,17,null,null)],[e.DEWOTT]:[new b(e.HISUI_SAMUROTT,36,null,new bA("night")),new b(e.SAMUROTT,36,null,new bA("day"))],[e.PATRAT]:[new b(e.WATCHOG,20,null,null)],[e.LILLIPUP]:[new b(e.HERDIER,16,null,null)],[e.HERDIER]:[new b(e.STOUTLAND,32,null,null)],[e.PURRLOIN]:[new b(e.LIEPARD,20,null,null)],[e.PIDOVE]:[new b(e.TRANQUILL,21,null,null)],[e.TRANQUILL]:[new b(e.UNFEZANT,32,null,null)],[e.BLITZLE]:[new b(e.ZEBSTRIKA,27,null,null)],[e.ROGGENROLA]:[new b(e.BOLDORE,25,null,null)],[e.DRILBUR]:[new b(e.EXCADRILL,31,null,null)],[e.TIMBURR]:[new b(e.GURDURR,25,null,null)],[e.TYMPOLE]:[new b(e.PALPITOAD,25,null,null)],[e.PALPITOAD]:[new b(e.SEISMITOAD,36,null,null)],[e.SEWADDLE]:[new b(e.SWADLOON,20,null,null)],[e.VENIPEDE]:[new b(e.WHIRLIPEDE,22,null,null)],[e.WHIRLIPEDE]:[new b(e.SCOLIPEDE,30,null,null)],[e.SANDILE]:[new b(e.KROKOROK,29,null,null)],[e.KROKOROK]:[new b(e.KROOKODILE,40,null,null)],[e.DARUMAKA]:[new b(e.DARMANITAN,35,null,null)],[e.DWEBBLE]:[new b(e.CRUSTLE,34,null,null)],[e.SCRAGGY]:[new b(e.SCRAFTY,39,null,null)],[e.YAMASK]:[new b(e.COFAGRIGUS,34,null,null)],[e.TIRTOUGA]:[new b(e.CARRACOSTA,37,null,null)],[e.ARCHEN]:[new b(e.ARCHEOPS,37,null,null)],[e.TRUBBISH]:[new b(e.GARBODOR,36,null,null)],[e.ZORUA]:[new b(e.ZOROARK,30,null,null)],[e.GOTHITA]:[new b(e.GOTHORITA,32,null,null)],[e.GOTHORITA]:[new b(e.GOTHITELLE,41,null,null)],[e.SOLOSIS]:[new b(e.DUOSION,32,null,null)],[e.DUOSION]:[new b(e.REUNICLUS,41,null,null)],[e.DUCKLETT]:[new b(e.SWANNA,35,null,null)],[e.VANILLITE]:[new b(e.VANILLISH,35,null,null)],[e.VANILLISH]:[new b(e.VANILLUXE,47,null,null)],[e.DEERLING]:[new b(e.SAWSBUCK,34,null,null)],[e.FOONGUS]:[new b(e.AMOONGUSS,39,null,null)],[e.FRILLISH]:[new b(e.JELLICENT,40,null,null)],[e.JOLTIK]:[new b(e.GALVANTULA,36,null,null)],[e.FERROSEED]:[new b(e.FERROTHORN,40,null,null)],[e.KLINK]:[new b(e.KLANG,38,null,null)],[e.KLANG]:[new b(e.KLINKLANG,49,null,null)],[e.TYNAMO]:[new b(e.EELEKTRIK,39,null,null)],[e.ELGYEM]:[new b(e.BEHEEYEM,42,null,null)],[e.LITWICK]:[new b(e.LAMPENT,41,null,null)],[e.AXEW]:[new b(e.FRAXURE,38,null,null)],[e.FRAXURE]:[new b(e.HAXORUS,48,null,null)],[e.CUBCHOO]:[new b(e.BEARTIC,37,null,null)],[e.MIENFOO]:[new b(e.MIENSHAO,50,null,null)],[e.GOLETT]:[new b(e.GOLURK,43,null,null)],[e.PAWNIARD]:[new b(e.BISHARP,52,null,null)],[e.BISHARP]:[new b(e.KINGAMBIT,1,56,null,4)],[e.RUFFLET]:[new b(e.HISUI_BRAVIARY,54,null,new bA("night")),new b(e.BRAVIARY,54,null,new bA("day"))],[e.VULLABY]:[new b(e.MANDIBUZZ,54,null,null)],[e.DEINO]:[new b(e.ZWEILOUS,50,null,null)],[e.ZWEILOUS]:[new b(e.HYDREIGON,64,null,null)],[e.LARVESTA]:[new b(e.VOLCARONA,59,null,null)],[e.CHESPIN]:[new b(e.QUILLADIN,16,null,null)],[e.QUILLADIN]:[new b(e.CHESNAUGHT,36,null,null)],[e.FENNEKIN]:[new b(e.BRAIXEN,16,null,null)],[e.BRAIXEN]:[new b(e.DELPHOX,36,null,null)],[e.FROAKIE]:[new b(e.FROGADIER,16,null,null)],[e.FROGADIER]:[new b(e.GRENINJA,36,null,null)],[e.BUNNELBY]:[new b(e.DIGGERSBY,20,null,null)],[e.FLETCHLING]:[new b(e.FLETCHINDER,17,null,null)],[e.FLETCHINDER]:[new b(e.TALONFLAME,35,null,null)],[e.SCATTERBUG]:[new b(e.SPEWPA,9,null,null)],[e.SPEWPA]:[new b(e.VIVILLON,12,null,null)],[e.LITLEO]:[new b(e.PYROAR,35,null,null)],[e.FLABEBE]:[new b(e.FLOETTE,19,null,null)],[e.SKIDDO]:[new b(e.GOGOAT,32,null,null)],[e.PANCHAM]:[new b(e.PANGORO,32,null,new of(i.DARK),2)],[e.ESPURR]:[new kt(e.MEOWSTIC,"","female",25,null,new Gs(At.FEMALE)),new kt(e.MEOWSTIC,"","",25,null,new Gs(At.MALE))],[e.HONEDGE]:[new b(e.DOUBLADE,35,null,null)],[e.INKAY]:[new b(e.MALAMAR,30,null,null)],[e.BINACLE]:[new b(e.BARBARACLE,39,null,null)],[e.SKRELP]:[new b(e.DRAGALGE,48,null,null)],[e.CLAUNCHER]:[new b(e.CLAWITZER,37,null,null)],[e.TYRUNT]:[new b(e.TYRANTRUM,39,null,new bA("day"))],[e.AMAURA]:[new b(e.AURORUS,39,null,new bA("night"))],[e.GOOMY]:[new b(e.HISUI_SLIGGOO,40,null,new bA("night")),new b(e.SLIGGOO,40,null,new bA("day"))],[e.SLIGGOO]:[new b(e.GOODRA,50,null,new E0([Oe.RAIN,Oe.FOG,Oe.HEAVY_RAIN]),3)],[e.BERGMITE]:[new b(e.HISUI_AVALUGG,37,null,new bA("night")),new b(e.AVALUGG,37,null,new bA("day"))],[e.NOIBAT]:[new b(e.NOIVERN,48,null,null)],[e.ROWLET]:[new b(e.DARTRIX,17,null,null)],[e.DARTRIX]:[new b(e.HISUI_DECIDUEYE,36,null,new bA("night")),new b(e.DECIDUEYE,34,null,new bA("day"))],[e.LITTEN]:[new b(e.TORRACAT,17,null,null)],[e.TORRACAT]:[new b(e.INCINEROAR,34,null,null)],[e.POPPLIO]:[new b(e.BRIONNE,17,null,null)],[e.BRIONNE]:[new b(e.PRIMARINA,34,null,null)],[e.PIKIPEK]:[new b(e.TRUMBEAK,14,null,null)],[e.TRUMBEAK]:[new b(e.TOUCANNON,28,null,null)],[e.YUNGOOS]:[new b(e.GUMSHOOS,20,null,new bA("day"))],[e.GRUBBIN]:[new b(e.CHARJABUG,20,null,null)],[e.CUTIEFLY]:[new b(e.RIBOMBEE,25,null,null)],[e.MAREANIE]:[new b(e.TOXAPEX,38,null,null)],[e.MUDBRAY]:[new b(e.MUDSDALE,30,null,null)],[e.DEWPIDER]:[new b(e.ARAQUANID,22,null,null)],[e.FOMANTIS]:[new b(e.LURANTIS,34,null,new bA("day"))],[e.MORELULL]:[new b(e.SHIINOTIC,24,null,null)],[e.SALANDIT]:[new b(e.SALAZZLE,33,null,new Gs(At.FEMALE))],[e.STUFFUL]:[new b(e.BEWEAR,27,null,null)],[e.BOUNSWEET]:[new b(e.STEENEE,18,null,null)],[e.WIMPOD]:[new b(e.GOLISOPOD,30,null,null)],[e.SANDYGAST]:[new b(e.PALOSSAND,42,null,null)],[e.JANGMO_O]:[new b(e.HAKAMO_O,35,null,null)],[e.HAKAMO_O]:[new b(e.KOMMO_O,45,null,null)],[e.COSMOG]:[new b(e.COSMOEM,23,null,null)],[e.COSMOEM]:[new b(e.SOLGALEO,1,36,null,4),new b(e.LUNALA,1,37,null,4)],[e.MELTAN]:[new b(e.MELMETAL,48,null,null)],[e.ALOLA_RATTATA]:[new b(e.ALOLA_RATICATE,20,null,new bA("night"))],[e.ALOLA_DIGLETT]:[new b(e.ALOLA_DUGTRIO,26,null,null)],[e.ALOLA_GEODUDE]:[new b(e.ALOLA_GRAVELER,25,null,null)],[e.ALOLA_GRIMER]:[new b(e.ALOLA_MUK,38,null,null)],[e.GROOKEY]:[new b(e.THWACKEY,16,null,null)],[e.THWACKEY]:[new b(e.RILLABOOM,35,null,null)],[e.SCORBUNNY]:[new b(e.RABOOT,16,null,null)],[e.RABOOT]:[new b(e.CINDERACE,35,null,null)],[e.SOBBLE]:[new b(e.DRIZZILE,16,null,null)],[e.DRIZZILE]:[new b(e.INTELEON,35,null,null)],[e.SKWOVET]:[new b(e.GREEDENT,24,null,null)],[e.ROOKIDEE]:[new b(e.CORVISQUIRE,18,null,null)],[e.CORVISQUIRE]:[new b(e.CORVIKNIGHT,38,null,null)],[e.BLIPBUG]:[new b(e.DOTTLER,10,null,null)],[e.DOTTLER]:[new b(e.ORBEETLE,30,null,null)],[e.NICKIT]:[new b(e.THIEVUL,18,null,null)],[e.GOSSIFLEUR]:[new b(e.ELDEGOSS,20,null,null)],[e.WOOLOO]:[new b(e.DUBWOOL,24,null,null)],[e.CHEWTLE]:[new b(e.DREDNAW,22,null,null)],[e.YAMPER]:[new b(e.BOLTUND,25,null,null)],[e.ROLYCOLY]:[new b(e.CARKOL,18,null,null)],[e.CARKOL]:[new b(e.COALOSSAL,34,null,null)],[e.SILICOBRA]:[new b(e.SANDACONDA,36,null,null)],[e.ARROKUDA]:[new b(e.BARRASKEWDA,26,null,null)],[e.TOXEL]:[new kt(e.TOXTRICITY,"","lowkey",30,null,new Tf([rt.LONELY,rt.BOLD,rt.RELAXED,rt.TIMID,rt.SERIOUS,rt.MODEST,rt.MILD,rt.QUIET,rt.BASHFUL,rt.CALM,rt.GENTLE,rt.CAREFUL])),new kt(e.TOXTRICITY,"","amped",30,null,null)],[e.SIZZLIPEDE]:[new b(e.CENTISKORCH,28,null,null)],[e.HATENNA]:[new b(e.HATTREM,32,null,null)],[e.HATTREM]:[new b(e.HATTERENE,42,null,null)],[e.IMPIDIMP]:[new b(e.MORGREM,32,null,null)],[e.MORGREM]:[new b(e.GRIMMSNARL,42,null,null)],[e.CUFANT]:[new b(e.COPPERAJAH,34,null,null)],[e.DREEPY]:[new b(e.DRAKLOAK,50,null,null)],[e.DRAKLOAK]:[new b(e.DRAGAPULT,60,null,null)],[e.GALAR_MEOWTH]:[new b(e.PERRSERKER,28,null,null)],[e.GALAR_PONYTA]:[new b(e.GALAR_RAPIDASH,40,null,null)],[e.GALAR_FARFETCHD]:[new b(e.SIRFETCHD,30,null,null,3)],[e.GALAR_SLOWPOKE]:[new b(e.GALAR_SLOWBRO,1,31,null,4),new b(e.GALAR_SLOWKING,1,32,null,4)],[e.GALAR_MR_MIME]:[new b(e.MR_RIME,42,null,null)],[e.GALAR_CORSOLA]:[new b(e.CURSOLA,38,null,null)],[e.GALAR_ZIGZAGOON]:[new b(e.GALAR_LINOONE,20,null,null)],[e.GALAR_LINOONE]:[new b(e.OBSTAGOON,35,null,new bA("night"))],[e.GALAR_YAMASK]:[new b(e.RUNERIGUS,34,null,null)],[e.HISUI_ZORUA]:[new b(e.HISUI_ZOROARK,30,null,null)],[e.HISUI_SLIGGOO]:[new b(e.HISUI_GOODRA,50,null,new E0([Oe.RAIN,Oe.FOG,Oe.HEAVY_RAIN]),3)],[e.SPRIGATITO]:[new b(e.FLORAGATO,16,null,null)],[e.FLORAGATO]:[new b(e.MEOWSCARADA,36,null,null)],[e.FUECOCO]:[new b(e.CROCALOR,16,null,null)],[e.CROCALOR]:[new b(e.SKELEDIRGE,36,null,null)],[e.QUAXLY]:[new b(e.QUAXWELL,16,null,null)],[e.QUAXWELL]:[new b(e.QUAQUAVAL,36,null,null)],[e.LECHONK]:[new kt(e.OINKOLOGNE,"","female",18,null,new Gs(At.FEMALE)),new kt(e.OINKOLOGNE,"","",18,null,new Gs(At.MALE))],[e.TAROUNTULA]:[new b(e.SPIDOPS,15,null,null)],[e.NYMBLE]:[new b(e.LOKIX,24,null,null)],[e.PAWMI]:[new b(e.PAWMO,18,null,null)],[e.PAWMO]:[new b(e.PAWMOT,32,null,null)],[e.TANDEMAUS]:[new kt(e.MAUSHOLD,"","three",25,null,new Nf),new kt(e.MAUSHOLD,"","four",25,null,null)],[e.FIDOUGH]:[new b(e.DACHSBUN,26,null,null)],[e.SMOLIV]:[new b(e.DOLLIV,25,null,null)],[e.DOLLIV]:[new b(e.ARBOLIVA,35,null,null)],[e.NACLI]:[new b(e.NACLSTACK,24,null,null)],[e.NACLSTACK]:[new b(e.GARGANACL,38,null,null)],[e.WATTREL]:[new b(e.KILOWATTREL,25,null,null)],[e.MASCHIFF]:[new b(e.MABOSSTIFF,30,null,null)],[e.SHROODLE]:[new b(e.GRAFAIAI,28,null,null)],[e.BRAMBLIN]:[new b(e.BRAMBLEGHAST,30,null,null)],[e.TOEDSCOOL]:[new b(e.TOEDSCRUEL,30,null,null)],[e.RELLOR]:[new b(e.RABSCA,29,null,null)],[e.FLITTLE]:[new b(e.ESPATHRA,35,null,null)],[e.TINKATINK]:[new b(e.TINKATUFF,24,null,null)],[e.TINKATUFF]:[new b(e.TINKATON,38,null,null)],[e.WIGLETT]:[new b(e.WUGTRIO,26,null,null)],[e.FINIZEN]:[new b(e.PALAFIN,38,null,null)],[e.VAROOM]:[new b(e.REVAVROOM,40,null,null)],[e.GLIMMET]:[new b(e.GLIMMORA,35,null,null)],[e.GREAVARD]:[new b(e.HOUNDSTONE,30,null,new bA("night"))],[e.FRIGIBAX]:[new b(e.ARCTIBAX,35,null,null)],[e.ARCTIBAX]:[new b(e.BAXCALIBUR,54,null,null)],[e.PALDEA_WOOPER]:[new b(e.CLODSIRE,20,null,null)],[e.PIKACHU]:[new kt(e.ALOLA_RAICHU,"","",1,11,null,3),new kt(e.ALOLA_RAICHU,"partner","",1,11,null,3),new kt(e.RAICHU,"","",1,7,null,3),new kt(e.RAICHU,"partner","",1,7,null,3)],[e.NIDORINA]:[new b(e.NIDOQUEEN,1,3,null,3)],[e.NIDORINO]:[new b(e.NIDOKING,1,3,null,3)],[e.CLEFAIRY]:[new b(e.CLEFABLE,1,3,null,3)],[e.VULPIX]:[new b(e.NINETALES,1,5,null,3)],[e.JIGGLYPUFF]:[new b(e.WIGGLYTUFF,1,3,null,3)],[e.GLOOM]:[new b(e.VILEPLUME,1,4,null,3),new b(e.BELLOSSOM,1,2,null,3)],[e.GROWLITHE]:[new b(e.ARCANINE,1,5,null,3)],[e.POLIWHIRL]:[new b(e.POLIWRATH,1,6,null,3),new b(e.POLITOED,1,1,null,4)],[e.WEEPINBELL]:[new b(e.VICTREEBEL,1,4,null,3)],[e.MAGNETON]:[new b(e.MAGNEZONE,1,7,null,3)],[e.SHELLDER]:[new b(e.CLOYSTER,1,6,null,3)],[e.EXEGGCUTE]:[new b(e.ALOLA_EXEGGUTOR,1,2,null,3),new b(e.EXEGGUTOR,1,4,null,3)],[e.TANGELA]:[new b(e.TANGROWTH,34,null,new bs(t.ANCIENT_POWER),3)],[e.LICKITUNG]:[new b(e.LICKILICKY,32,null,new bs(t.ROLLOUT),3)],[e.STARYU]:[new b(e.STARMIE,1,6,null,3)],[e.EEVEE]:[new kt(e.SYLVEON,"","",1,null,new A0(120,i.FAIRY),3),new kt(e.SYLVEON,"partner","",1,null,new A0(120,i.FAIRY),3),new kt(e.ESPEON,"","",1,null,new un(120,"day"),3),new kt(e.ESPEON,"partner","",1,null,new un(120,"day"),3),new kt(e.UMBREON,"","",1,null,new un(120,"night"),3),new kt(e.UMBREON,"partner","",1,null,new un(120,"night"),3),new kt(e.VAPOREON,"","",1,6,null,3),new kt(e.VAPOREON,"partner","",1,6,null,3),new kt(e.JOLTEON,"","",1,7,null,3),new kt(e.JOLTEON,"partner","",1,7,null,3),new kt(e.FLAREON,"","",1,5,null,3),new kt(e.FLAREON,"partner","",1,5,null,3),new kt(e.LEAFEON,"","",1,4,null,3),new kt(e.LEAFEON,"partner","",1,4,null,3),new kt(e.GLACEON,"","",1,8,null,3),new kt(e.GLACEON,"partner","",1,8,null,3)],[e.TOGETIC]:[new b(e.TOGEKISS,1,11,null,4)],[e.AIPOM]:[new b(e.AMBIPOM,32,null,new bs(t.DOUBLE_HIT),3)],[e.SUNKERN]:[new b(e.SUNFLORA,1,2,null,3)],[e.YANMA]:[new b(e.YANMEGA,33,null,new bs(t.ANCIENT_POWER),3)],[e.MURKROW]:[new b(e.HONCHKROW,1,9,null,4)],[e.MISDREAVUS]:[new b(e.MISMAGIUS,1,9,null,4)],[e.GIRAFARIG]:[new b(e.FARIGIRAF,32,null,new bs(t.TWIN_BEAM),3)],[e.DUNSPARCE]:[new kt(e.DUDUNSPARCE,"","three-segment",32,null,new Sf,3),new kt(e.DUDUNSPARCE,"","two-segment",32,null,new bs(t.HYPER_DRILL),3)],[e.GLIGAR]:[new b(e.GLISCOR,1,22,new bA("night"),4)],[e.SNEASEL]:[new b(e.WEAVILE,1,21,new bA("night"),4)],[e.URSARING]:[new b(e.URSALUNA,1,52,null,4)],[e.PILOSWINE]:[new b(e.MAMOSWINE,1,null,new bs(t.ANCIENT_POWER),4)],[e.STANTLER]:[new b(e.WYRDEER,25,null,new bs(t.PSYSHIELD_BASH),4)],[e.LOMBRE]:[new b(e.LUDICOLO,1,6,null,3)],[e.NUZLEAF]:[new b(e.SHIFTRY,1,4,null,3)],[e.NOSEPASS]:[new b(e.PROBOPASS,1,7,null,3)],[e.SKITTY]:[new b(e.DELCATTY,1,3,null,3)],[e.ROSELIA]:[new b(e.ROSERADE,1,11,null,4)],[e.BONSLY]:[new b(e.SUDOWOODO,1,null,new bs(t.MIMIC),2)],[e.MIME_JR]:[new b(e.GALAR_MR_MIME,1,null,new O0(t.MIMIC,"night"),2),new b(e.MR_MIME,1,null,new O0(t.MIMIC,"day"),2)],[e.PANSAGE]:[new b(e.SIMISAGE,1,4,null,3)],[e.PANSEAR]:[new b(e.SIMISEAR,1,5,null,3)],[e.PANPOUR]:[new b(e.SIMIPOUR,1,6,null,3)],[e.MUNNA]:[new b(e.MUSHARNA,1,3,null,3)],[e.COTTONEE]:[new b(e.WHIMSICOTT,1,2,null,3)],[e.PETILIL]:[new b(e.HISUI_LILLIGANT,1,11,null,3),new b(e.LILLIGANT,1,2,null,3)],[e.BASCULIN]:[new kt(e.BASCULEGION,"white-striped","female",40,null,new Gs(At.FEMALE),4),new kt(e.BASCULEGION,"white-striped","male",40,null,new Gs(At.MALE),4)],[e.MINCCINO]:[new b(e.CINCCINO,1,11,null,3)],[e.EELEKTRIK]:[new b(e.EELEKTROSS,1,7,null,4)],[e.LAMPENT]:[new b(e.CHANDELURE,1,9,null,4)],[e.FLOETTE]:[new b(e.FLORGES,1,11,null,3)],[e.DOUBLADE]:[new b(e.AEGISLASH,1,9,null,3)],[e.HELIOPTILE]:[new b(e.HELIOLISK,1,2,null,3)],[e.CHARJABUG]:[new b(e.VIKAVOLT,1,7,null,3)],[e.CRABRAWLER]:[new b(e.CRABOMINABLE,1,8,null,3)],[e.ROCKRUFF]:[new kt(e.LYCANROC,"own-tempo","dusk",25,null,null),new kt(e.LYCANROC,"","midday",25,null,new bA("day")),new kt(e.LYCANROC,"","midnight",25,null,new bA("night"))],[e.STEENEE]:[new b(e.TSAREENA,28,null,new bs(t.STOMP),3)],[e.POIPOLE]:[new b(e.NAGANADEL,1,null,new bs(t.DRAGON_PULSE),3)],[e.ALOLA_SANDSHREW]:[new b(e.ALOLA_SANDSLASH,1,8,null,3)],[e.ALOLA_VULPIX]:[new b(e.ALOLA_NINETALES,1,8,null,3)],[e.APPLIN]:[new b(e.DIPPLIN,1,29,null,3),new b(e.FLAPPLE,1,14,null,3),new b(e.APPLETUN,1,13,null,3)],[e.CLOBBOPUS]:[new b(e.GRAPPLOCT,35,null,new bs(t.TAUNT))],[e.SINISTEA]:[new kt(e.POLTEAGEIST,"phony","phony",1,12,null,3),new kt(e.POLTEAGEIST,"antique","antique",1,30,null,3)],[e.MILCERY]:[new kt(e.ALCREMIE,"","vanilla-cream",1,15,new VO([T.TOWN,T.PLAINS,T.GRASS,T.TALL_GRASS,T.METROPOLIS]),3),new kt(e.ALCREMIE,"","ruby-cream",1,15,new VO([T.BADLANDS,T.VOLCANO,T.GRAVEYARD,T.FACTORY,T.SLUM]),3),new kt(e.ALCREMIE,"","matcha-cream",1,15,new VO([T.FOREST,T.SWAMP,T.MEADOW,T.JUNGLE]),3),new kt(e.ALCREMIE,"","mint-cream",1,15,new VO([T.SEA,T.BEACH,T.LAKE,T.SEABED]),3),new kt(e.ALCREMIE,"","lemon-cream",1,15,new VO([T.DESERT,T.POWER_PLANT,T.DOJO,T.RUINS,T.CONSTRUCTION_SITE]),3),new kt(e.ALCREMIE,"","salted-cream",1,15,new VO([T.MOUNTAIN,T.CAVE,T.ICE_CAVE,T.FAIRY_CAVE,T.SNOWY_FOREST]),3),new kt(e.ALCREMIE,"","ruby-swirl",1,15,new VO([T.WASTELAND,T.LABORATORY]),3),new kt(e.ALCREMIE,"","caramel-swirl",1,15,new VO([T.TEMPLE,T.ISLAND]),3),new kt(e.ALCREMIE,"","rainbow-swirl",1,15,new VO([T.ABYSS,T.SPACE,T.END]),3)],[e.DURALUDON]:[new kt(e.ARCHALUDON,"","",1,53,null,4)],[e.KUBFU]:[new kt(e.URSHIFU,"","single-strike",1,54,null,4),new kt(e.URSHIFU,"","rapid-strike",1,55,null,4)],[e.GALAR_DARUMAKA]:[new b(e.GALAR_DARMANITAN,1,8,null,3)],[e.HISUI_GROWLITHE]:[new b(e.HISUI_ARCANINE,1,5,null,3)],[e.HISUI_VOLTORB]:[new b(e.HISUI_ELECTRODE,1,4,null,3)],[e.HISUI_QWILFISH]:[new b(e.OVERQWIL,28,null,new bs(t.BARB_BARRAGE),3)],[e.HISUI_SNEASEL]:[new b(e.SNEASLER,1,21,new bA("day"),4)],[e.CHARCADET]:[new b(e.ARMAROUGE,1,33,null,3),new b(e.CERULEDGE,1,34,null,3)],[e.TADBULB]:[new b(e.BELLIBOLT,1,7,null,3)],[e.CAPSAKID]:[new b(e.SCOVILLAIN,1,5,null,3)],[e.CETODDLE]:[new b(e.CETITAN,1,8,null,3)],[e.POLTCHAGEIST]:[new kt(e.SINISTCHA,"counterfeit","unremarkable",1,16,null,3),new kt(e.SINISTCHA,"artisan","masterpiece",1,35,null,3)],[e.DIPPLIN]:[new b(e.HYDRAPPLE,1,null,new bs(t.DRAGON_CHEER),4)],[e.KADABRA]:[new b(e.ALAKAZAM,1,1,null,4)],[e.MACHOKE]:[new b(e.MACHAMP,1,1,null,4)],[e.GRAVELER]:[new b(e.GOLEM,1,1,null,4)],[e.HAUNTER]:[new b(e.GENGAR,1,1,null,4)],[e.ONIX]:[new b(e.STEELIX,1,1,new s0(i.STEEL),4)],[e.RHYDON]:[new b(e.RHYPERIOR,1,26,null,4)],[e.SEADRA]:[new b(e.KINGDRA,1,19,null,4)],[e.SCYTHER]:[new b(e.SCIZOR,1,1,new s0(i.STEEL),4),new b(e.KLEAVOR,1,51,null,4)],[e.ELECTABUZZ]:[new b(e.ELECTIVIRE,1,24,null,4)],[e.MAGMAR]:[new b(e.MAGMORTAR,1,25,null,4)],[e.PORYGON]:[new b(e.PORYGON2,1,17,null,3)],[e.PORYGON2]:[new b(e.PORYGON_Z,1,18,null,4)],[e.FEEBAS]:[new b(e.MILOTIC,1,20,null,4)],[e.DUSCLOPS]:[new b(e.DUSKNOIR,1,23,null,4)],[e.CLAMPERL]:[new b(e.HUNTAIL,1,1,new Gs(At.MALE),4),new b(e.GOREBYSS,1,1,new Gs(At.FEMALE),4)],[e.BOLDORE]:[new b(e.GIGALITH,1,1,null,4)],[e.GURDURR]:[new b(e.CONKELDURR,1,1,null,4)],[e.KARRABLAST]:[new b(e.ESCAVALIER,1,1,new _o(e.SHELMET),4)],[e.SHELMET]:[new b(e.ACCELGOR,1,1,new _o(e.KARRABLAST),4)],[e.SPRITZEE]:[new b(e.AROMATISSE,1,27,null,4)],[e.SWIRLIX]:[new b(e.SLURPUFF,1,28,null,4)],[e.PHANTUMP]:[new b(e.TREVENANT,1,1,null,4)],[e.PUMPKABOO]:[new b(e.GOURGEIST,1,1,null,4)],[e.ALOLA_GRAVELER]:[new b(e.ALOLA_GOLEM,1,1,null,4)],[e.PRIMEAPE]:[new b(e.ANNIHILAPE,35,null,new bs(t.RAGE_FIST),4)],[e.GOLBAT]:[new b(e.CROBAT,1,null,new ks(120),4)],[e.CHANSEY]:[new b(e.BLISSEY,1,null,new ks(200),3)],[e.PICHU]:[new kt(e.PIKACHU,"spiky","partner",1,null,new ks(90),1),new kt(e.PIKACHU,"","",1,null,new ks(90),1)],[e.CLEFFA]:[new b(e.CLEFAIRY,1,null,new ks(160),1)],[e.IGGLYBUFF]:[new b(e.JIGGLYPUFF,1,null,new ks(70),1)],[e.TOGEPI]:[new b(e.TOGETIC,1,null,new ks(70),1)],[e.AZURILL]:[new b(e.MARILL,1,null,new ks(70),1)],[e.BUDEW]:[new b(e.ROSELIA,1,null,new un(70,"day"),1)],[e.BUNEARY]:[new b(e.LOPUNNY,1,null,new ks(70),2)],[e.CHINGLING]:[new b(e.CHIMECHO,1,null,new un(90,"night"),2)],[e.HAPPINY]:[new b(e.CHANSEY,1,null,new ks(160),1)],[e.MUNCHLAX]:[new b(e.SNORLAX,1,null,new ks(120),3)],[e.RIOLU]:[new b(e.LUCARIO,1,null,new un(120,"day"),3)],[e.WOOBAT]:[new b(e.SWOOBAT,1,null,new ks(90),2)],[e.SWADLOON]:[new b(e.LEAVANNY,1,null,new ks(120),3)],[e.TYPE_NULL]:[new b(e.SILVALLY,1,null,new ks(100),3)],[e.ALOLA_MEOWTH]:[new b(e.ALOLA_PERSIAN,1,null,new ks(120),3)],[e.SNOM]:[new b(e.FROSMOTH,1,null,new un(90,"night"),2)],[e.GIMMIGHOUL]:[new kt(e.GHOLDENGO,"chest","",1,null,new R0,4),new kt(e.GHOLDENGO,"roaming","",1,null,new R0,4)]},IA={};function zj(){const E=[Me.MEGA,"",Me.MEGA_X,"",Me.MEGA_Y].map(s=>s);Object.keys(jt).forEach(s=>{const R=jt[s];for(const n of R)n.evoFormKey&&E.indexOf(n.evoFormKey)>-1||(IA[n.speciesId]=Number.parseInt(s))})}o(zj,"initPokemonPrevolutions");const Rl={};function jj(){Object.keys(IA).forEach(A=>{const s=IA[A];tA.hasOwnProperty(s)?Rl[A]=s:Rl[A]=IA[s]})}o(jj,"initPokemonStarters");function GL(E){if(E===-1)return u.t("biome:unknownLocation");switch(E){case T.GRASS:return u.t("biome:GRASS");case T.RUINS:return u.t("biome:RUINS");case T.END:return u.t("biome:END");default:return u.t(`biome:${T[E].toUpperCase()}`)}}o(GL,"getBiomeName");const Dn={[T.TOWN]:T.PLAINS,[T.PLAINS]:[T.GRASS,T.METROPOLIS,T.LAKE],[T.GRASS]:T.TALL_GRASS,[T.TALL_GRASS]:[T.FOREST,T.CAVE],[T.SLUM]:[T.CONSTRUCTION_SITE,[T.SWAMP,2]],[T.FOREST]:[T.JUNGLE,T.MEADOW],[T.SEA]:[T.SEABED,T.ICE_CAVE],[T.SWAMP]:[T.GRAVEYARD,T.TALL_GRASS],[T.BEACH]:[T.SEA,[T.ISLAND,2]],[T.LAKE]:[T.BEACH,T.SWAMP,T.CONSTRUCTION_SITE],[T.SEABED]:[T.CAVE,[T.VOLCANO,3]],[T.MOUNTAIN]:[T.VOLCANO,[T.WASTELAND,2],[T.SPACE,3]],[T.BADLANDS]:[T.DESERT,T.MOUNTAIN],[T.CAVE]:[T.BADLANDS,T.LAKE,[T.LABORATORY,2]],[T.DESERT]:[T.RUINS,[T.CONSTRUCTION_SITE,2]],[T.ICE_CAVE]:T.SNOWY_FOREST,[T.MEADOW]:[T.PLAINS,T.FAIRY_CAVE],[T.POWER_PLANT]:T.FACTORY,[T.VOLCANO]:[T.BEACH,[T.ICE_CAVE,3]],[T.GRAVEYARD]:T.ABYSS,[T.DOJO]:[T.PLAINS,[T.JUNGLE,2],[T.TEMPLE,2]],[T.FACTORY]:[T.PLAINS,[T.LABORATORY,2]],[T.RUINS]:[T.MOUNTAIN,[T.FOREST,2]],[T.WASTELAND]:T.BADLANDS,[T.ABYSS]:[T.CAVE,[T.SPACE,2],[T.WASTELAND,2]],[T.SPACE]:T.RUINS,[T.CONSTRUCTION_SITE]:[T.POWER_PLANT,[T.DOJO,2]],[T.JUNGLE]:[T.TEMPLE],[T.FAIRY_CAVE]:[T.ICE_CAVE,[T.SPACE,2]],[T.TEMPLE]:[T.DESERT,[T.SWAMP,2],[T.RUINS,2]],[T.METROPOLIS]:T.SLUM,[T.SNOWY_FOREST]:[T.FOREST,[T.MOUNTAIN,2],[T.LAKE,2]],[T.ISLAND]:T.SEA,[T.LABORATORY]:T.CONSTRUCTION_SITE},QO={};var zA=(E=>(E[E.COMMON=0]="COMMON",E[E.UNCOMMON=1]="UNCOMMON",E[E.RARE=2]="RARE",E[E.SUPER_RARE=3]="SUPER_RARE",E[E.ULTRA_RARE=4]="ULTRA_RARE",E[E.BOSS=5]="BOSS",E[E.BOSS_RARE=6]="BOSS_RARE",E[E.BOSS_SUPER_RARE=7]="BOSS_SUPER_RARE",E[E.BOSS_ULTRA_RARE=8]="BOSS_ULTRA_RARE",E))(zA||{});const _7=[],dL={},yR={[T.TOWN]:{0:{[S.DAWN]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.LEDYBA,e.HOPPIP,e.SUNKERN,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[S.DAY]:[{1:[e.CATERPIE],7:[e.METAPOD]},e.SENTRET,e.HOPPIP,e.SUNKERN,e.SILCOON,e.STARLY,e.PIDOVE,e.COTTONEE,{1:[e.SCATTERBUG],9:[e.SPEWPA]},e.YUNGOOS,e.SKWOVET],[S.DUSK]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.POOCHYENA,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[S.NIGHT]:[{1:[e.WEEDLE],7:[e.KAKUNA]},e.HOOTHOOT,e.SPINARAK,e.POOCHYENA,e.CASCOON,e.PATRAT,e.PURRLOIN,e.BLIPBUG],[S.ALL]:[e.PIDGEY,e.RATTATA,e.SPEAROW,e.ZIGZAGOON,e.WURMPLE,e.TAILLOW,e.BIDOOF,e.LILLIPUP,e.FLETCHLING,e.WOOLOO,e.LECHONK]},1:{[S.DAWN]:[e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[S.DAY]:[e.NIDORAN_F,e.NIDORAN_M,e.BELLSPROUT,e.POOCHYENA,e.LOTAD,e.SKITTY,e.COMBEE,e.CHERUBI,e.PATRAT,e.MINCCINO,e.PAWMI],[S.DUSK]:[e.EKANS,e.ODDISH,e.MEOWTH,e.SPINARAK,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[S.NIGHT]:[e.EKANS,e.ODDISH,e.PARAS,e.VENONAT,e.MEOWTH,e.SEEDOT,e.SHROOMISH,e.KRICKETOT,e.VENIPEDE],[S.ALL]:[e.NINCADA,e.WHISMUR,e.FIDOUGH]},2:{[S.DAWN]:[e.TANDEMAUS],[S.DAY]:[e.TANDEMAUS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ABRA,e.SURSKIT,e.ROOKIDEE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.EEVEE,e.RALTS]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.PLAINS]:{0:{[S.DAWN]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[S.DAY]:[{1:[e.SENTRET],15:[e.FURRET]},{1:[e.YUNGOOS],30:[e.GUMSHOOS]},{1:[e.SKWOVET],24:[e.GREEDENT]}],[S.DUSK]:[{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[S.NIGHT]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.MEOWTH],28:[e.PERSIAN]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]}],[S.ALL]:[{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.BIDOOF],15:[e.BIBAREL]},{1:[e.LECHONK],18:[e.OINKOLOGNE]}]},1:{[S.DAWN]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[S.DAY]:[{1:[e.DODUO],31:[e.DODRIO]},{1:[e.POOCHYENA],18:[e.MIGHTYENA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]}],[S.DUSK]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[S.NIGHT]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]}],[S.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},e.PIKACHU,{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}]},2:{[S.DAWN]:[e.PALDEA_TAUROS],[S.DAY]:[e.PALDEA_TAUROS],[S.DUSK]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[S.NIGHT]:[{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]}],[S.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},{1:[e.BUNEARY],20:[e.LOPUNNY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FARFETCHD,e.LICKITUNG,e.CHANSEY,e.EEVEE,e.SNORLAX,{1:[e.DUNSPARCE],62:[e.DUDUNSPARCE]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.LATIAS,e.LATIOS]},5:{[S.DAWN]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[S.DAY]:[e.DODRIO,e.FURRET,e.GUMSHOOS,e.GREEDENT],[S.DUSK]:[e.PERSIAN,e.MIGHTYENA],[S.NIGHT]:[e.PERSIAN,e.MIGHTYENA],[S.ALL]:[e.LINOONE,e.BIBAREL,e.LOPUNNY,e.OINKOLOGNE]},6:{[S.DAWN]:[e.PAWMOT,e.PALDEA_TAUROS],[S.DAY]:[e.LYCANROC,e.PAWMOT,e.PALDEA_TAUROS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FARFETCHD,e.SNORLAX,e.LICKILICKY,e.DUDUNSPARCE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LATIAS,e.LATIOS]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.GRASS]:{0:{[S.DAWN]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[S.DAY]:[{1:[e.HOPPIP],18:[e.SKIPLOOM]},e.SUNKERN,e.COTTONEE,e.PETILIL],[S.DUSK]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[S.NIGHT]:[{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]}],[S.ALL]:[]},1:{[S.DAWN]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[S.DAY]:[{1:[e.COMBEE],21:[e.VESPIQUEN]},{1:[e.CHERUBI],25:[e.CHERRIM]}],[S.DUSK]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.NIGHT]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.ALL]:[]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BULBASAUR],16:[e.IVYSAUR],32:[e.VENUSAUR]},e.GROWLITHE,{1:[e.TURTWIG],18:[e.GROTLE],32:[e.TORTERRA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUDOWOODO]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VIRIZION]},5:{[S.DAWN]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[S.DAY]:[e.JUMPLUFF,e.SUNFLORA,e.WHIMSICOTT],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VENUSAUR,e.SUDOWOODO,e.TORTERRA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VIRIZION]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.TALL_GRASS]:{0:{[S.DAWN]:[{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[S.DAY]:[{1:[e.NIDORAN_F],16:[e.NIDORINA]},{1:[e.NIDORAN_M],16:[e.NIDORINO]},{1:[e.BOUNSWEET],18:[e.STEENEE],58:[e.TSAREENA]}],[S.DUSK]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[S.NIGHT]:[{1:[e.ODDISH],21:[e.GLOOM]},{1:[e.KRICKETOT],10:[e.KRICKETUNE]}],[S.ALL]:[{1:[e.NINCADA],20:[e.NINJASK]},{1:[e.FOMANTIS],44:[e.LURANTIS]},{1:[e.NYMBLE],24:[e.LOKIX]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[{1:[e.PARAS],24:[e.PARASECT]},{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]}],[S.ALL]:[e.VULPIX]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PINSIR,{1:[e.CHIKORITA],16:[e.BAYLEEF],32:[e.MEGANIUM]},{1:[e.GIRAFARIG],62:[e.FARIGIRAF]},e.ZANGOOSE,e.KECLEON,e.TROPIUS]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SCYTHER,e.SHEDINJA,e.ROTOM]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[e.TSAREENA],[S.DAY]:[e.NIDOQUEEN,e.NIDOKING,e.TSAREENA],[S.DUSK]:[e.VILEPLUME,e.KRICKETUNE],[S.NIGHT]:[e.VILEPLUME,e.KRICKETUNE],[S.ALL]:[e.NINJASK,e.ZANGOOSE,e.KECLEON,e.LURANTIS,e.LOKIX]},6:{[S.DAWN]:[e.BELLOSSOM],[S.DAY]:[e.BELLOSSOM],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PINSIR,e.MEGANIUM,e.FARIGIRAF]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.METROPOLIS]:{0:{[S.DAWN]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[S.DAY]:[{1:[e.YAMPER],25:[e.BOLTUND]}],[S.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.NIGHT]:[{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},{1:[e.PATRAT],20:[e.WATCHOG]}],[S.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.ZIGZAGOON],20:[e.LINOONE]},{1:[e.LILLIPUP],16:[e.HERDIER],32:[e.STOUTLAND]}]},1:{[S.DAWN]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[S.DAY]:[{1:[e.PATRAT],20:[e.WATCHOG]},e.INDEEDEE],[S.DUSK]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[S.NIGHT]:[{1:[e.ESPURR],25:[e.MEOWSTIC]}],[S.ALL]:[e.PIKACHU,{1:[e.GLAMEOW],38:[e.PURUGLY]},e.FURFROU,{1:[e.FIDOUGH],26:[e.DACHSBUN]},e.SQUAWKABILLY]},2:{[S.DAWN]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[S.DAY]:[{1:[e.TANDEMAUS],25:[e.MAUSHOLD]}],[S.DUSK]:[e.MORPEKO],[S.NIGHT]:[e.MORPEKO],[S.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.EEVEE,e.SMEARGLE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CASTFORM]},5:{[S.DAWN]:[e.BOLTUND],[S.DAY]:[e.BOLTUND],[S.DUSK]:[e.MEOWSTIC],[S.NIGHT]:[e.MEOWSTIC],[S.ALL]:[e.STOUTLAND,e.FURFROU,e.DACHSBUN]},6:{[S.DAWN]:[e.MAUSHOLD],[S.DAY]:[e.MAUSHOLD],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CASTFORM,e.REVAVROOM]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.FOREST]:{0:{[S.DAWN]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[S.DAY]:[e.BUTTERFREE,{1:[e.BELLSPROUT],21:[e.WEEPINBELL]},e.BEAUTIFLY,{1:[e.COMBEE],21:[e.VESPIQUEN]},e.PETILIL,{1:[e.DEERLING],34:[e.SAWSBUCK]},e.VIVILLON],[S.DUSK]:[e.BEEDRILL,{1:[e.PINECO],31:[e.FORRETRESS]},{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[S.NIGHT]:[e.BEEDRILL,{1:[e.VENONAT],31:[e.VENOMOTH]},{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PINECO],31:[e.FORRETRESS]},e.DUSTOX,{1:[e.SEEDOT],14:[e.NUZLEAF]},{1:[e.SHROOMISH],23:[e.BRELOOM]},{1:[e.VENIPEDE],22:[e.WHIRLIPEDE],30:[e.SCOLIPEDE]}],[S.ALL]:[{1:[e.TAROUNTULA],15:[e.SPIDOPS]},{1:[e.NYMBLE],24:[e.LOKIX]},{1:[e.SHROODLE],28:[e.GRAFAIAI]}]},1:{[S.DAWN]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DAY]:[e.ROSELIA,e.MOTHIM,{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DUSK]:[{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[S.NIGHT]:[{1:[e.HOOTHOOT],20:[e.NOCTOWL]},{1:[e.ROCKRUFF],25:[e.LYCANROC]},{1:[e.DOTTLER],30:[e.ORBEETLE]}],[S.ALL]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.PANSAGE],30:[e.SIMISAGE]}]},2:{[S.DAWN]:[e.EXEGGCUTE,e.STANTLER],[S.DAY]:[e.EXEGGCUTE,e.STANTLER],[S.DUSK]:[e.SCYTHER],[S.NIGHT]:[e.SCYTHER],[S.ALL]:[e.HERACROSS,{1:[e.TREECKO],16:[e.GROVYLE],36:[e.SCEPTILE]},e.TROPIUS,e.KARRABLAST,e.SHELMET,{1:[e.CHESPIN],16:[e.QUILLADIN],36:[e.CHESNAUGHT]},{1:[e.ROWLET],17:[e.DARTRIX],34:[e.DECIDUEYE]},e.SQUAWKABILLY,{1:[e.TOEDSCOOL],30:[e.TOEDSCRUEL]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.BLOODMOON_URSALUNA],[S.ALL]:[e.DURANT]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KARTANA,e.WO_CHIEN]},5:{[S.DAWN]:[e.VICTREEBEL,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[S.DAY]:[e.VICTREEBEL,e.BEAUTIFLY,e.MOTHIM,e.VESPIQUEN,e.LILLIGANT,e.SAWSBUCK],[S.DUSK]:[e.ARIADOS,e.FORRETRESS,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[S.NIGHT]:[e.VENOMOTH,e.NOCTOWL,e.ARIADOS,e.FORRETRESS,e.DUSTOX,e.SHIFTRY,e.BRELOOM,e.SCOLIPEDE,e.ORBEETLE],[S.ALL]:[e.WORMADAM,e.SIMISAGE,e.SPIDOPS,e.LOKIX,e.GRAFAIAI]},6:{[S.DAWN]:[e.STANTLER],[S.DAY]:[e.STANTLER],[S.DUSK]:[],[S.NIGHT]:[e.LYCANROC,e.BLOODMOON_URSALUNA],[S.ALL]:[e.HERACROSS,e.SCEPTILE,e.ESCAVALIER,e.ACCELGOR,e.DURANT,e.CHESNAUGHT,e.DECIDUEYE,e.TOEDSCRUEL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KARTANA,e.WO_CHIEN]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CALYREX]}},[T.SEA]:{0:{[S.DAWN]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[S.DAY]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WINGULL],25:[e.PELIPPER]},e.CRAMORANT,{1:[e.FINIZEN],38:[e.PALAFIN]}],[S.DUSK]:[{1:[e.INKAY],30:[e.MALAMAR]}],[S.NIGHT]:[{1:[e.FINNEON],31:[e.LUMINEON]},{1:[e.INKAY],30:[e.MALAMAR]}],[S.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.BUIZEL],26:[e.FLOATZEL]}]},1:{[S.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DUSK]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CARVANHA],30:[e.SHARPEDO]}],[S.NIGHT]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},e.SHELLDER,{1:[e.CHINCHOU],27:[e.LANTURN]},{1:[e.CARVANHA],30:[e.SHARPEDO]}],[S.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.HORSEA],32:[e.SEADRA]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.WAILMER],40:[e.WAILORD]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.WATTREL],25:[e.KILOWATTREL]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LAPRAS,{1:[e.PIPLUP],16:[e.PRINPLUP],36:[e.EMPOLEON]},{1:[e.POPPLIO],17:[e.BRIONNE],34:[e.PRIMARINA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KINGDRA,e.ROTOM,{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[S.DAY]:[e.PELIPPER,e.CRAMORANT,e.PALAFIN],[S.DUSK]:[e.SHARPEDO,e.MALAMAR],[S.NIGHT]:[e.SHARPEDO,e.LUMINEON,e.MALAMAR],[S.ALL]:[e.TENTACRUEL,e.FLOATZEL,e.SIMIPOUR,e.KILOWATTREL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KINGDRA,e.EMPOLEON,e.PRIMARINA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LUGIA]}},[T.SWAMP]:{0:{[S.DAWN]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[S.DAY]:[{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.LOTAD],14:[e.LOMBRE]}],[S.DUSK]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[S.NIGHT]:[{1:[e.EKANS],22:[e.ARBOK]},{1:[e.PALDEA_WOOPER],20:[e.CLODSIRE]}],[S.ALL]:[{1:[e.POLIWAG],25:[e.POLIWHIRL]},{1:[e.GULPIN],26:[e.SWALOT]},{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.TYMPOLE],25:[e.PALPITOAD],36:[e.SEISMITOAD]}]},1:{[S.DAWN]:[{1:[e.EKANS],22:[e.ARBOK]}],[S.DAY]:[{1:[e.EKANS],22:[e.ARBOK]}],[S.DUSK]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[S.NIGHT]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]}],[S.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.BARBOACH],30:[e.WHISCASH]},{1:[e.SKORUPI],40:[e.DRAPION]},e.STUNFISK,{1:[e.MAREANIE],38:[e.TOXAPEX]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TOTODILE],18:[e.CROCONAW],30:[e.FERALIGATR]},{1:[e.MUDKIP],16:[e.MARSHTOMP],36:[e.SWAMPERT]}]},3:{[S.DAWN]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[S.DAY]:[{1:[e.GALAR_SLOWPOKE],40:[e.GALAR_SLOWBRO]},{1:[e.HISUI_SLIGGOO],80:[e.HISUI_GOODRA]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.POLITOED,e.GALAR_STUNFISK]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AZELF,e.POIPOLE]},5:{[S.DAWN]:[e.QUAGSIRE,e.LUDICOLO],[S.DAY]:[e.QUAGSIRE,e.LUDICOLO],[S.DUSK]:[e.ARBOK,e.CLODSIRE],[S.NIGHT]:[e.ARBOK,e.CLODSIRE],[S.ALL]:[e.POLIWRATH,e.SWALOT,e.WHISCASH,e.GASTRODON,e.SEISMITOAD,e.STUNFISK,e.TOXAPEX]},6:{[S.DAWN]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[S.DAY]:[e.GALAR_SLOWBRO,e.GALAR_SLOWKING,e.HISUI_GOODRA],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FERALIGATR,e.POLITOED,e.SWAMPERT,e.GALAR_STUNFISK]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AZELF,e.NAGANADEL]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.BEACH]:{0:{[S.DAWN]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DAY]:[{1:[e.STARYU],30:[e.STARMIE]}],[S.DUSK]:[e.SHELLDER],[S.NIGHT]:[e.SHELLDER],[S.ALL]:[{1:[e.KRABBY],28:[e.KINGLER]},{1:[e.CORPHISH],30:[e.CRAWDAUNT]},{1:[e.DWEBBLE],34:[e.CRUSTLE]},{1:[e.BINACLE],39:[e.BARBARACLE]},{1:[e.MAREANIE],38:[e.TOXAPEX]},{1:[e.WIGLETT],26:[e.WUGTRIO]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]},{1:[e.CLAUNCHER],37:[e.CLAWITZER]},{1:[e.SANDYGAST],42:[e.PALOSSAND]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.QUAXLY],16:[e.QUAXWELL],36:[e.QUAQUAVAL]},e.TATSUGIRI]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TIRTOUGA],37:[e.CARRACOSTA]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},5:{[S.DAWN]:[e.STARMIE],[S.DAY]:[e.STARMIE],[S.DUSK]:[e.CLOYSTER],[S.NIGHT]:[e.CLOYSTER],[S.ALL]:[e.KINGLER,e.CRAWDAUNT,e.WORMADAM,e.CRUSTLE,e.BARBARACLE,e.CLAWITZER,e.TOXAPEX,e.PALOSSAND]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CARRACOSTA,e.QUAQUAVAL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRESSELIA,e.KELDEO,e.TAPU_FINI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.LAKE]:{0:{[S.DAWN]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[S.DAY]:[{1:[e.LOTAD],14:[e.LOMBRE]},{1:[e.DUCKLETT],35:[e.SWANNA]}],[S.DUSK]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[S.NIGHT]:[{1:[e.MARILL],18:[e.AZUMARILL]}],[S.ALL]:[{1:[e.PSYDUCK],33:[e.GOLDUCK]},{1:[e.GOLDEEN],33:[e.SEAKING]},{1:[e.MAGIKARP],20:[e.GYARADOS]},{1:[e.CHEWTLE],22:[e.DREDNAW]}]},1:{[S.DAWN]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[S.DAY]:[{1:[e.DEWPIDER],22:[e.ARAQUANID]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SLOWPOKE],37:[e.SLOWBRO]},{1:[e.WOOPER],20:[e.QUAGSIRE]},{1:[e.SURSKIT],22:[e.MASQUERAIN]},e.WISHIWASHI,e.FLAMIGO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SQUIRTLE],16:[e.WARTORTLE],36:[e.BLASTOISE]},{1:[e.OSHAWOTT],17:[e.DEWOTT],36:[e.SAMUROTT]},{1:[e.FROAKIE],16:[e.FROGADIER],36:[e.GRENINJA]},{1:[e.SOBBLE],16:[e.DRIZZILE],35:[e.INTELEON]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VAPOREON,e.SLOWKING]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUICUNE,e.MESPRIT]},5:{[S.DAWN]:[e.SWANNA,e.ARAQUANID],[S.DAY]:[e.SWANNA,e.ARAQUANID],[S.DUSK]:[e.AZUMARILL],[S.NIGHT]:[e.AZUMARILL],[S.ALL]:[e.GOLDUCK,e.SLOWBRO,e.SEAKING,e.GYARADOS,e.MASQUERAIN,e.WISHIWASHI,e.DREDNAW]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLASTOISE,e.VAPOREON,e.SLOWKING,e.SAMUROTT,e.GRENINJA,e.INTELEON]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SUICUNE,e.MESPRIT]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.SEABED]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CHINCHOU],27:[e.LANTURN]},e.REMORAID,e.CLAMPERL,e.BASCULIN,{1:[e.FRILLISH],40:[e.JELLICENT]},{1:[e.ARROKUDA],26:[e.BARRASKEWDA]},e.VELUZA]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.TENTACOOL],30:[e.TENTACRUEL]},e.SHELLDER,{1:[e.WAILMER],40:[e.WAILORD]},e.LUVDISC,{1:[e.SHELLOS],30:[e.GASTRODON]},{1:[e.SKRELP],48:[e.DRAGALGE]},e.PINCURCHIN,e.DONDOZO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.QWILFISH,e.CORSOLA,e.OCTILLERY,{1:[e.MANTYKE],52:[e.MANTINE]},e.ALOMOMOLA,{1:[e.TYNAMO],39:[e.EELEKTRIK]},e.DHELMISE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.OMANYTE],40:[e.OMASTAR]},{1:[e.KABUTO],40:[e.KABUTOPS]},e.RELICANTH,e.PYUKUMUKU,{1:[e.GALAR_CORSOLA],38:[e.CURSOLA]},e.ARCTOVISH,e.HISUI_QWILFISH]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FEEBAS,e.NIHILEGO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANTURN,e.QWILFISH,e.CORSOLA,e.OCTILLERY,e.MANTINE,e.WAILORD,e.HUNTAIL,e.GOREBYSS,e.LUVDISC,e.JELLICENT,e.ALOMOMOLA,e.DRAGALGE,e.BARRASKEWDA,e.DONDOZO]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.OMASTAR,e.KABUTOPS,e.RELICANTH,e.EELEKTROSS,e.PYUKUMUKU,e.DHELMISE,e.CURSOLA,e.ARCTOVISH,e.BASCULEGION,e.OVERQWIL]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MILOTIC,e.NIHILEGO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KYOGRE]}},[T.MOUNTAIN]:{0:{[S.DAWN]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[S.DAY]:[{1:[e.TAILLOW],22:[e.SWELLOW]},{1:[e.SWABLU],35:[e.ALTARIA]},{1:[e.STARLY],14:[e.STARAVIA],34:[e.STARAPTOR]},{1:[e.PIDOVE],21:[e.TRANQUILL],32:[e.UNFEZANT]},{1:[e.FLETCHLING],17:[e.FLETCHINDER],35:[e.TALONFLAME]}],[S.DUSK]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[S.NIGHT]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]}],[S.ALL]:[{1:[e.PIDGEY],18:[e.PIDGEOTTO],36:[e.PIDGEOT]},{1:[e.SPEAROW],20:[e.FEAROW]},{1:[e.SKIDDO],32:[e.GOGOAT]}]},1:{[S.DAWN]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[S.DAY]:[{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.ARON],32:[e.LAIRON],42:[e.AGGRON]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.RUFFLET],54:[e.BRAVIARY]},{1:[e.ROOKIDEE],18:[e.CORVISQUIRE],38:[e.CORVIKNIGHT]},{1:[e.FLITTLE],35:[e.ESPATHRA]},e.BOMBIRDIER],[S.DUSK]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[S.NIGHT]:[{1:[e.VULLABY],54:[e.MANDIBUZZ]}],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.NATU],25:[e.XATU]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.MURKROW],[S.ALL]:[e.SKARMORY,{1:[e.TORCHIC],16:[e.COMBUSKEN],36:[e.BLAZIKEN]},{1:[e.SPOINK],32:[e.GRUMPIG]},e.HAWLUCHA,e.KLAWF]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.LARVITAR],30:[e.PUPITAR]},{1:[e.CRANIDOS],30:[e.RAMPARDOS]},{1:[e.SHIELDON],30:[e.BASTIODON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},e.ROTOM,e.ARCHEOPS,{1:[e.AXEW],38:[e.FRAXURE]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TORNADUS,e.TING_LU,e.OGERPON]},5:{[S.DAWN]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[S.DAY]:[e.SWELLOW,e.ALTARIA,e.STARAPTOR,e.UNFEZANT,e.BRAVIARY,e.TALONFLAME,e.CORVIKNIGHT,e.ESPATHRA],[S.DUSK]:[e.MANDIBUZZ],[S.NIGHT]:[e.MANDIBUZZ],[S.ALL]:[e.PIDGEOT,e.FEAROW,e.SKARMORY,e.AGGRON,e.GOGOAT,e.GARGANACL]},6:{[S.DAWN]:[e.HISUI_BRAVIARY],[S.DAY]:[e.HISUI_BRAVIARY],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLAZIKEN,e.RAMPARDOS,e.BASTIODON,e.HAWLUCHA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM,e.TORNADUS,e.TING_LU,e.OGERPON]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HO_OH]}},[T.BADLANDS]:{0:{[S.DAWN]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[S.DAY]:[{1:[e.PHANPY],25:[e.DONPHAN]}],[S.DUSK]:[],[S.NIGHT]:[{1:[e.CUBONE],28:[e.MAROWAK]}],[S.ALL]:[{1:[e.DIGLETT],26:[e.DUGTRIO]},{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.MUDBRAY],30:[e.MUDSDALE]}]},1:{[S.DAWN]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[S.DAY]:[{1:[e.SIZZLIPEDE],28:[e.CENTISKORCH]},{1:[e.CAPSAKID],30:[e.SCOVILLAIN]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.CUFANT],34:[e.COPPERAJAH]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ONIX,e.GLIGAR,{1:[e.POLTCHAGEIST],30:[e.SINISTCHA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANDORUS,e.OKIDOGI]},5:{[S.DAWN]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[S.DAY]:[e.DONPHAN,e.CENTISKORCH,e.SCOVILLAIN],[S.DUSK]:[],[S.NIGHT]:[e.MAROWAK],[S.ALL]:[e.DUGTRIO,e.GOLEM,e.RHYPERIOR,e.GLISCOR,e.EXCADRILL,e.MUDSDALE,e.COPPERAJAH]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.STEELIX,e.SINISTCHA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.LANDORUS,e.OKIDOGI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GROUDON]}},[T.CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.ZUBAT],22:[e.GOLBAT]},{1:[e.PARAS],24:[e.PARASECT]},{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.WHISMUR],20:[e.LOUDRED],40:[e.EXPLOUD]},{1:[e.ROGGENROLA],25:[e.BOLDORE]},{1:[e.WOOBAT],20:[e.SWOOBAT]},{1:[e.BUNNELBY],20:[e.DIGGERSBY]},{1:[e.NACLI],24:[e.NACLSTACK],38:[e.GARGANACL]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.ROCKRUFF],25:[e.LYCANROC]}],[S.NIGHT]:[],[S.ALL]:[{1:[e.GEODUDE],25:[e.GRAVELER]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},e.NOSEPASS,{1:[e.NOIBAT],48:[e.NOIVERN]},{1:[e.WIMPOD],30:[e.GOLISOPOD]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ONIX,{1:[e.FERROSEED],40:[e.FERROTHORN]},e.CARBINK,{1:[e.GLIMMET],35:[e.GLIMMORA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SHUCKLE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UXIE]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PARASECT,e.ONIX,e.CROBAT,e.URSARING,e.EXPLOUD,e.PROBOPASS,e.GIGALITH,e.SWOOBAT,e.DIGGERSBY,e.NOIVERN,e.GOLISOPOD,e.GARGANACL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.LYCANROC],[S.NIGHT]:[],[S.ALL]:[e.SHUCKLE,e.FERROTHORN,e.GLIMMORA]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UXIE]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERAPAGOS]}},[T.DESERT]:{0:{[S.DAWN]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[S.DAY]:[e.TRAPINCH,{1:[e.HIPPOPOTAS],34:[e.HIPPOWDON]},{1:[e.RELLOR],29:[e.RABSCA]}],[S.DUSK]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[S.NIGHT]:[{1:[e.CACNEA],32:[e.CACTURNE]},{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]}],[S.ALL]:[{1:[e.SANDSHREW],22:[e.SANDSLASH]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.SILICOBRA],36:[e.SANDACONDA]}]},1:{[S.DAWN]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[S.DAY]:[{1:[e.SANDILE],29:[e.KROKOROK],40:[e.KROOKODILE]},e.HELIOPTILE],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARACTUS,{1:[e.BRAMBLIN],30:[e.BRAMBLEGHAST]},e.ORTHWORM]},2:{[S.DAWN]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[S.DAY]:[{1:[e.VIBRAVA],45:[e.FLYGON]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.DARUMAKA],35:[e.DARMANITAN]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.LILEEP],40:[e.CRADILY]},{1:[e.ANORITH],40:[e.ARMALDO]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},5:{[S.DAWN]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[S.DAY]:[e.HIPPOWDON,e.HELIOLISK,e.RABSCA],[S.DUSK]:[e.CACTURNE,e.KROOKODILE],[S.NIGHT]:[e.CACTURNE,e.KROOKODILE],[S.ALL]:[e.SANDSLASH,e.DRAPION,e.DARMANITAN,e.MARACTUS,e.SANDACONDA,e.BRAMBLEGHAST]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CRADILY,e.ARMALDO]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIROCK,e.TAPU_BULU,e.PHEROMOSA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.ICE_CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SEEL],34:[e.DEWGONG]},{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},{1:[e.VANILLITE],35:[e.VANILLISH],47:[e.VANILLUXE]},{1:[e.CUBCHOO],37:[e.BEARTIC]},{1:[e.BERGMITE],37:[e.AVALUGG]},e.CRABRAWLER,{1:[e.SNOM],20:[e.FROSMOTH]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SNEASEL,{1:[e.SNORUNT],42:[e.GLALIE]},{1:[e.SPHEAL],32:[e.SEALEO],44:[e.WALREIN]},e.EISCUE,{1:[e.CETODDLE],30:[e.CETITAN]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JYNX,e.LAPRAS,e.FROSLASS,e.CRYOGONAL]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DELIBIRD,e.ROTOM,{1:[e.AMAURA],59:[e.AURORUS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ARTICUNO,e.REGICE]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DEWGONG,e.GLALIE,e.WALREIN,e.WEAVILE,e.MAMOSWINE,e.FROSLASS,e.VANILLUXE,e.BEARTIC,e.CRYOGONAL,e.AVALUGG,e.CRABOMINABLE,e.CETITAN]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JYNX,e.LAPRAS,e.GLACEON,e.AURORUS]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ARTICUNO,e.REGICE,e.ROTOM]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KYUREM]}},[T.MEADOW]:{0:{[S.DAWN]:[{1:[e.LEDYBA],18:[e.LEDIAN]},e.ROSELIA,e.COTTONEE,e.MINCCINO],[S.DAY]:[e.ROSELIA,e.COTTONEE,e.MINCCINO],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.FLABEBE],19:[e.FLOETTE]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.GOSSIFLEUR],20:[e.ELDEGOSS]},{1:[e.WOOLOO],24:[e.DUBWOOL]}]},1:{[S.DAWN]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[S.DAY]:[{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SNUBBULL],23:[e.GRANBULL]},{1:[e.SKITTY],30:[e.DELCATTY]},e.BOUFFALANT,{1:[e.SMOLIV],25:[e.DOLLIV],35:[e.ARBOLIVA]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MAREEP],15:[e.FLAAFFY],30:[e.AMPHAROS]},{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},{1:[e.GLAMEOW],38:[e.PURUGLY]},e.ORICORIO]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[e.VOLBEAT,e.ILLUMISE],[S.ALL]:[e.TAUROS,e.EEVEE,e.MILTANK,e.SPINDA,{1:[e.APPLIN],30:[e.DIPPLIN]},{1:[e.SPRIGATITO],16:[e.FLORAGATO],36:[e.MEOWSCARADA]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHANSEY,e.SYLVEON]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MELOETTA]},5:{[S.DAWN]:[e.LEDIAN,e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[S.DAY]:[e.GRANBULL,e.DELCATTY,e.ROSERADE,e.CINCCINO,e.BOUFFALANT,e.ARBOLIVA],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAUROS,e.MILTANK,e.GARDEVOIR,e.PURUGLY,e.ZEBSTRIKA,e.FLORGES,e.RIBOMBEE,e.DUBWOOL]},6:{[S.DAWN]:[e.HISUI_LILLIGANT],[S.DAY]:[e.HISUI_LILLIGANT],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLISSEY,e.SYLVEON,e.FLAPPLE,e.APPLETUN,e.MEOWSCARADA,e.HYDRAPPLE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MELOETTA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SHAYMIN]}},[T.POWER_PLANT]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PIKACHU,{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.ELECTRIKE],26:[e.MANECTRIC]},{1:[e.SHINX],15:[e.LUXIO],30:[e.LUXRAY]},e.DEDENNE,{1:[e.GRUBBIN],20:[e.CHARJABUG]},{1:[e.PAWMI],18:[e.PAWMO],32:[e.PAWMOT]},{1:[e.TADBULB],30:[e.BELLIBOLT]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ELECTABUZZ,e.PLUSLE,e.MINUN,e.PACHIRISU,e.EMOLGA,e.TOGEDEMARU]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MAREEP],15:[e.FLAAFFY]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JOLTEON,e.HISUI_VOLTORB]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RAICHU,e.MANECTRIC,e.LUXRAY,e.MAGNEZONE,e.ELECTIVIRE,e.DEDENNE,e.VIKAVOLT,e.TOGEDEMARU,e.PAWMOT,e.BELLIBOLT]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.JOLTEON,e.AMPHAROS,e.HISUI_ELECTRODE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZAPDOS,e.RAIKOU,e.THUNDURUS,e.XURKITREE,e.ZERAORA,e.REGIELEKI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZEKROM]}},[T.VOLCANO]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.VULPIX,e.GROWLITHE,{1:[e.PONYTA],40:[e.RAPIDASH]},{1:[e.SLUGMA],38:[e.MAGCARGO]},{1:[e.NUMEL],33:[e.CAMERUPT]},{1:[e.SALANDIT],33:[e.SALAZZLE]},{1:[e.ROLYCOLY],18:[e.CARKOL],34:[e.COALOSSAL]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MAGMAR,e.TORKOAL,{1:[e.PANSEAR],30:[e.SIMISEAR]},e.HEATMOR,e.TURTONATOR]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CHARMANDER],16:[e.CHARMELEON],36:[e.CHARIZARD]},{1:[e.CYNDAQUIL],14:[e.QUILAVA],36:[e.TYPHLOSION]},{1:[e.CHIMCHAR],14:[e.MONFERNO],36:[e.INFERNAPE]},{1:[e.TEPIG],17:[e.PIGNITE],36:[e.EMBOAR]},{1:[e.FENNEKIN],16:[e.BRAIXEN],36:[e.DELPHOX]},{1:[e.LITTEN],17:[e.TORRACAT],34:[e.INCINEROAR]},{1:[e.SCORBUNNY],16:[e.RABOOT],35:[e.CINDERACE]},{1:[e.CHARCADET],30:[e.ARMAROUGE]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.FLAREON,e.ROTOM,{1:[e.LARVESTA],59:[e.VOLCARONA]},e.HISUI_GROWLITHE]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ENTEI,e.HEATRAN,e.VOLCANION,e.CHI_YU]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.NINETALES,e.ARCANINE,e.RAPIDASH,e.MAGCARGO,e.CAMERUPT,e.TORKOAL,e.MAGMORTAR,e.SIMISEAR,e.HEATMOR,e.SALAZZLE,e.TURTONATOR,e.COALOSSAL]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHARIZARD,e.FLAREON,e.TYPHLOSION,e.INFERNAPE,e.EMBOAR,e.VOLCARONA,e.DELPHOX,e.INCINEROAR,e.CINDERACE,e.ARMAROUGE,e.HISUI_ARCANINE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MOLTRES,e.ENTEI,e.ROTOM,e.HEATRAN,e.VOLCANION,e.CHI_YU]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.RESHIRAM]}},[T.GRAVEYARD]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.SHUPPET],37:[e.BANETTE]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.DRIFLOON],28:[e.DRIFBLIM]},{1:[e.LITWICK],41:[e.LAMPENT]},e.PHANTUMP,e.PUMPKABOO,{1:[e.GREAVARD],60:[e.HOUNDSTONE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.SINISTEA],30:[e.POLTEAGEIST]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MISDREAVUS,e.MIMIKYU,{1:[e.FUECOCO],16:[e.CROCALOR],36:[e.SKELEDIRGE]},e.CERULEDGE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SPIRITOMB]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARSHADOW,e.SPECTRIER]},5:{[S.DAWN]:[e.MAROWAK],[S.DAY]:[e.MAROWAK],[S.DUSK]:[e.MAROWAK],[S.NIGHT]:[],[S.ALL]:[e.GENGAR,e.BANETTE,e.DRIFBLIM,e.MISMAGIUS,e.DUSKNOIR,e.CHANDELURE,e.TREVENANT,e.GOURGEIST,e.MIMIKYU,e.POLTEAGEIST,e.HOUNDSTONE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.SKELEDIRGE,e.CERULEDGE,e.HISUI_TYPHLOSION]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MARSHADOW,e.SPECTRIER]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GIRATINA]}},[T.DOJO]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MANKEY],28:[e.PRIMEAPE],75:[e.ANNIHILAPE]},{1:[e.MAKUHITA],24:[e.HARIYAMA]},{1:[e.MEDITITE],37:[e.MEDICHAM]},{1:[e.STUFFUL],27:[e.BEWEAR]},{1:[e.CLOBBOPUS],55:[e.GRAPPLOCT]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CROAGUNK],37:[e.TOXICROAK]},{1:[e.SCRAGGY],39:[e.SCRAFTY]},{1:[e.MIENFOO],50:[e.MIENSHAO]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.LUCARIO,e.THROH,e.SAWK,{1:[e.PANCHAM],52:[e.PANGORO]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONTOP,e.GALLADE,e.GALAR_FARFETCHD]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERRAKION,e.KUBFU,e.GALAR_ZAPDOS]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONLEE,e.HITMONCHAN,e.HARIYAMA,e.MEDICHAM,e.LUCARIO,e.TOXICROAK,e.THROH,e.SAWK,e.SCRAFTY,e.MIENSHAO,e.BEWEAR,e.GRAPPLOCT,e.ANNIHILAPE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HITMONTOP,e.GALLADE,e.PANGORO,e.SIRFETCHD,e.HISUI_DECIDUEYE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TERRAKION,e.URSHIFU]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZAMAZENTA,e.GALAR_ZAPDOS]}},[T.FACTORY]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.TIMBURR],25:[e.GURDURR]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BRONZOR],33:[e.BRONZONG]},e.KLEFKI]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GENESECT,e.MAGEARNA]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KLINKLANG,e.KLEFKI]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GENESECT,e.MAGEARNA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.RUINS]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.DROWZEE],26:[e.HYPNO]},{1:[e.NATU],25:[e.XATU]},e.UNOWN,{1:[e.SPOINK],32:[e.GRUMPIG]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.ABRA],16:[e.KADABRA]},e.SIGILYPH,{1:[e.TINKATINK],24:[e.TINKATUFF],38:[e.TINKATON]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MR_MIME,e.WOBBUFFET,{1:[e.GOTHITA],32:[e.GOTHORITA],41:[e.GOTHITELLE]},e.STONJOURNER]},3:{[S.DAWN]:[],[S.DAY]:[e.ESPEON],[S.DUSK]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[S.NIGHT]:[{1:[e.GALAR_YAMASK],34:[e.RUNERIGUS]}],[S.ALL]:[{1:[e.ARCHEN],37:[e.ARCHEOPS]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ALAKAZAM,e.HYPNO,e.XATU,e.GRUMPIG,e.CLAYDOL,e.SIGILYPH,e.GOTHITELLE,e.BEHEEYEM,e.TINKATON]},6:{[S.DAWN]:[],[S.DAY]:[e.ESPEON],[S.DUSK]:[e.RUNERIGUS],[S.NIGHT]:[e.RUNERIGUS],[S.ALL]:[e.MR_MIME,e.WOBBUFFET,e.ARCHEOPS]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGISTEEL,e.FEZANDIPITI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KORAIDON]}},[T.WASTELAND]:{0:{[S.DAWN]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[S.DAY]:[{1:[e.BAGON],30:[e.SHELGON],50:[e.SALAMENCE]},{1:[e.GOOMY],40:[e.SLIGGOO],80:[e.GOODRA]},{1:[e.JANGMO_O],35:[e.HAKAMO_O],45:[e.KOMMO_O]}],[S.DUSK]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[S.NIGHT]:[{1:[e.LARVITAR],30:[e.PUPITAR],55:[e.TYRANITAR]}],[S.ALL]:[{1:[e.VIBRAVA],45:[e.FLYGON]},{1:[e.GIBLE],24:[e.GABITE],48:[e.GARCHOMP]},{1:[e.AXEW],38:[e.FRAXURE],48:[e.HAXORUS]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[S.NIGHT]:[{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}],[S.ALL]:[{1:[e.SWABLU],35:[e.ALTARIA]},e.DRAMPA,e.CYCLIZAR]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[S.NIGHT]:[{1:[e.DREEPY],50:[e.DRAKLOAK],60:[e.DRAGAPULT]}],[S.ALL]:[{1:[e.DRATINI],30:[e.DRAGONAIR],55:[e.DRAGONITE]},{1:[e.FRIGIBAX],35:[e.ARCTIBAX],54:[e.BAXCALIBUR]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AERODACTYL,e.DRUDDIGON,{1:[e.TYRUNT],59:[e.TYRANTRUM]},e.DRACOZOLT,e.DRACOVISH]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIDRAGO]},5:{[S.DAWN]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[S.DAY]:[e.SALAMENCE,e.GOODRA,e.KOMMO_O],[S.DUSK]:[e.TYRANITAR,e.DRAGAPULT],[S.NIGHT]:[e.TYRANITAR,e.DRAGAPULT],[S.ALL]:[e.DRAGONITE,e.FLYGON,e.GARCHOMP,e.HAXORUS,e.DRAMPA,e.BAXCALIBUR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AERODACTYL,e.DRUDDIGON,e.TYRANTRUM,e.DRACOZOLT,e.DRACOVISH]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIDRAGO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIALGA]}},[T.ABYSS]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MURKROW,{1:[e.HOUNDOUR],24:[e.HOUNDOOM]},e.SABLEYE,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.PAWNIARD],52:[e.BISHARP],64:[e.KINGAMBIT]},{1:[e.NICKIT],18:[e.THIEVUL]},{1:[e.IMPIDIMP],32:[e.MORGREM],42:[e.GRIMMSNARL]},{1:[e.MASCHIFF],30:[e.MABOSSTIFF]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ABSOL,e.SPIRITOMB,{1:[e.ZORUA],30:[e.ZOROARK]},{1:[e.DEINO],50:[e.ZWEILOUS],64:[e.HYDREIGON]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UMBREON]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DARKRAI,e.GALAR_MOLTRES]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOUNDOOM,e.SABLEYE,e.ABSOL,e.HONCHKROW,e.SPIRITOMB,e.LIEPARD,e.ZOROARK,e.HYDREIGON,e.THIEVUL,e.GRIMMSNARL,e.MABOSSTIFF,e.KINGAMBIT]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.UMBREON,e.HISUI_SAMUROTT]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DARKRAI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.PALKIA,e.YVELTAL,e.GALAR_MOLTRES]}},[T.SPACE]:{0:{[S.DAWN]:[],[S.DAY]:[e.SOLROCK],[S.DUSK]:[],[S.NIGHT]:[e.LUNATONE],[S.ALL]:[e.CLEFAIRY,{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.MUNNA],30:[e.MUSHARNA]},e.MINIOR]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.ELGYEM],42:[e.BEHEEYEM]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.BELDUM],20:[e.METANG],45:[e.METAGROSS]},e.SIGILYPH,{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.PORYGON],30:[e.PORYGON2]}]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.COSMOG],43:[e.COSMOEM]},e.CELESTEELA]},5:{[S.DAWN]:[],[S.DAY]:[e.SOLROCK],[S.DUSK]:[],[S.NIGHT]:[e.LUNATONE],[S.ALL]:[e.CLEFABLE,e.BRONZONG,e.MUSHARNA,e.REUNICLUS,e.MINIOR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.METAGROSS,e.PORYGON_Z]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CELESTEELA]},8:{[S.DAWN]:[],[S.DAY]:[e.SOLGALEO],[S.DUSK]:[],[S.NIGHT]:[e.LUNALA],[S.ALL]:[e.RAYQUAZA,e.NECROZMA]}},[T.CONSTRUCTION_SITE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MACHOP],28:[e.MACHOKE]},{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.DRILBUR],31:[e.EXCADRILL]},{1:[e.TIMBURR],25:[e.GURDURR]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.RHYHORN],42:[e.RHYDON]},{1:[e.SCRAGGY],39:[e.SCRAFTY]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.GALAR_MEOWTH],28:[e.PERRSERKER]}],[S.NIGHT]:[],[S.ALL]:[e.ONIX,e.HITMONLEE,e.HITMONCHAN,e.DURALUDON]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,e.HITMONTOP]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.COBALION,e.STAKATAKA]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MACHAMP,e.CONKELDURR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.PERRSERKER],[S.NIGHT]:[],[S.ALL]:[e.ARCHALUDON]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.COBALION,e.STAKATAKA]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.JUNGLE]:{0:{[S.DAWN]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DAY]:[e.VESPIQUEN,{1:[e.CHERUBI],25:[e.CHERRIM]},{1:[e.SEWADDLE],20:[e.SWADLOON],30:[e.LEAVANNY]}],[S.DUSK]:[e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.NIGHT]:[{1:[e.SPINARAK],22:[e.ARIADOS]},e.SHROOMISH,{1:[e.PURRLOIN],20:[e.LIEPARD]},{1:[e.FOONGUS],39:[e.AMOONGUSS]}],[S.ALL]:[e.AIPOM,{1:[e.BLITZLE],27:[e.ZEBSTRIKA]},{1:[e.PIKIPEK],14:[e.TRUMBEAK],28:[e.TOUCANNON]}]},1:{[S.DAWN]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[S.DAY]:[e.EXEGGCUTE,e.TROPIUS,e.COMBEE,e.KOMALA],[S.DUSK]:[e.TANGELA,{1:[e.SPINARAK],22:[e.ARIADOS]},{1:[e.PANCHAM],52:[e.PANGORO]}],[S.NIGHT]:[e.TANGELA,{1:[e.PANCHAM],52:[e.PANGORO]}],[S.ALL]:[{1:[e.PANSAGE],30:[e.SIMISAGE]},{1:[e.PANSEAR],30:[e.SIMISEAR]},{1:[e.PANPOUR],30:[e.SIMIPOUR]},{1:[e.JOLTIK],36:[e.GALVANTULA]},{1:[e.LITLEO],35:[e.PYROAR]},{1:[e.FOMANTIS],44:[e.LURANTIS]},e.FALINKS]},2:{[S.DAWN]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN,{1:[e.GALAR_PONYTA],40:[e.GALAR_RAPIDASH]}],[S.DAY]:[{1:[e.FOONGUS],39:[e.AMOONGUSS]},e.PASSIMIAN],[S.DUSK]:[e.ORANGURU],[S.NIGHT]:[e.ORANGURU],[S.ALL]:[e.SCYTHER,e.YANMA,{1:[e.SLAKOTH],18:[e.VIGOROTH],36:[e.SLAKING]},e.SEVIPER,e.CARNIVINE,{1:[e.SNIVY],17:[e.SERVINE],36:[e.SERPERIOR]},{1:[e.GROOKEY],16:[e.THWACKEY],35:[e.RILLABOOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KANGASKHAN,e.CHATOT,e.KLEAVOR]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},5:{[S.DAWN]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[S.DAY]:[e.EXEGGUTOR,e.TROPIUS,e.CHERRIM,e.LEAVANNY,e.KOMALA],[S.DUSK]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[S.NIGHT]:[e.BRELOOM,e.TANGROWTH,e.AMOONGUSS,e.PANGORO],[S.ALL]:[e.SEVIPER,e.AMBIPOM,e.CARNIVINE,e.YANMEGA,e.GALVANTULA,e.PYROAR,e.TOUCANNON,e.LURANTIS,e.FALINKS]},6:{[S.DAWN]:[e.AMOONGUSS,e.GALAR_RAPIDASH],[S.DAY]:[e.AMOONGUSS],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KANGASKHAN,e.SCIZOR,e.SLAKING,e.LEAFEON,e.SERPERIOR,e.RILLABOOM]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TAPU_LELE,e.BUZZWOLE,e.ZARUDE,e.MUNKIDORI]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.KLEAVOR]}},[T.FAIRY_CAVE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.JIGGLYPUFF],30:[e.WIGGLYTUFF]},{1:[e.MARILL],18:[e.AZUMARILL]},e.MAWILE,{1:[e.SPRITZEE],40:[e.AROMATISSE]},{1:[e.SWIRLIX],40:[e.SLURPUFF]},{1:[e.CUTIEFLY],25:[e.RIBOMBEE]},{1:[e.MORELULL],24:[e.SHIINOTIC]},{1:[e.MILCERY],30:[e.ALCREMIE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CLEFAIRY,e.TOGETIC,{1:[e.RALTS],20:[e.KIRLIA],30:[e.GARDEVOIR]},e.CARBINK,e.COMFEY,{1:[e.HATENNA],32:[e.HATTREM],42:[e.HATTERENE]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.AUDINO,e.ETERNAL_FLOETTE]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIANCIE,e.ENAMORUS]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.WIGGLYTUFF,e.MAWILE,e.TOGEKISS,e.AUDINO,e.AROMATISSE,e.SLURPUFF,e.CARBINK,e.RIBOMBEE,e.SHIINOTIC,e.COMFEY,e.HATTERENE,e.ALCREMIE]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ETERNAL_FLOETTE]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DIANCIE,e.ENAMORUS]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.XERNEAS]}},[T.TEMPLE]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GASTLY],25:[e.HAUNTER]},{1:[e.NATU],25:[e.XATU]},{1:[e.DUSKULL],37:[e.DUSCLOPS]},{1:[e.YAMASK],34:[e.COFAGRIGUS]},{1:[e.GOLETT],43:[e.GOLURK]},{1:[e.HONEDGE],35:[e.DOUBLADE]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.CUBONE],28:[e.MAROWAK]},{1:[e.BALTOY],36:[e.CLAYDOL]},{1:[e.CHINGLING],20:[e.CHIMECHO]},{1:[e.SKORUPI],40:[e.DRAPION]},{1:[e.LITWICK],41:[e.LAMPENT]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.GIMMIGHOUL],40:[e.GHOLDENGO]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOOPA,e.TAPU_KOKO]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.CHIMECHO,e.COFAGRIGUS,e.GOLURK,e.AEGISLASH]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GHOLDENGO]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.HOOPA,e.TAPU_KOKO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.REGIGIGAS]}},[T.SLUM]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.NIGHT]:[{1:[e.PATRAT],20:[e.WATCHOG]}],[S.ALL]:[{1:[e.RATTATA],20:[e.RATICATE]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.KOFFING],35:[e.WEEZING]},{1:[e.TRUBBISH],36:[e.GARBODOR]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[S.NIGHT]:[{1:[e.STUNKY],34:[e.SKUNTANK]}],[S.ALL]:[{1:[e.BURMY],20:[e.WORMADAM]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[S.NIGHT]:[e.TOXTRICITY,{1:[e.GALAR_LINOONE],65:[e.OBSTAGOON]},e.GALAR_ZIGZAGOON],[S.ALL]:[{1:[e.VAROOM],40:[e.REVAVROOM]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GUZZLORD]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.SKUNTANK,e.WATCHOG],[S.NIGHT]:[e.SKUNTANK,e.WATCHOG],[S.ALL]:[e.MUK,e.WEEZING,e.WORMADAM,e.GARBODOR]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.TOXTRICITY,e.OBSTAGOON],[S.NIGHT]:[e.TOXTRICITY,e.OBSTAGOON],[S.ALL]:[e.REVAVROOM,e.GALAR_WEEZING]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GUZZLORD]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.SNOWY_FOREST]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[S.NIGHT]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},{1:[e.SNOM],20:[e.FROSMOTH]}],[S.ALL]:[{1:[e.SWINUB],33:[e.PILOSWINE]},{1:[e.SNOVER],40:[e.ABOMASNOW]},e.EISCUE]},1:{[S.DAWN]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[S.DAY]:[e.SNEASEL,{1:[e.TEDDIURSA],30:[e.URSARING]},e.STANTLER],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},2:{[S.DAWN]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[S.DAY]:[{1:[e.GALAR_DARUMAKA],30:[e.GALAR_DARMANITAN]}],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DELIBIRD,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]}]},3:{[S.DAWN]:[e.HISUI_SNEASEL],[S.DAY]:[e.HISUI_SNEASEL],[S.DUSK]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[S.NIGHT]:[{1:[e.HISUI_ZORUA],30:[e.HISUI_ZOROARK]}],[S.ALL]:[{1:[e.GALAR_MR_MIME],42:[e.MR_RIME]},e.ARCTOZOLT,e.HISUI_AVALUGG]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GLASTRIER,e.CHIEN_PAO,e.GALAR_ARTICUNO]},5:{[S.DAWN]:[e.WYRDEER],[S.DAY]:[e.WYRDEER],[S.DUSK]:[e.FROSMOTH],[S.NIGHT]:[e.FROSMOTH],[S.ALL]:[e.ABOMASNOW,e.URSALUNA]},6:{[S.DAWN]:[e.SNEASLER,e.GALAR_DARMANITAN],[S.DAY]:[e.SNEASLER,e.GALAR_DARMANITAN],[S.DUSK]:[e.HISUI_ZOROARK],[S.NIGHT]:[e.HISUI_ZOROARK],[S.ALL]:[e.MR_RIME,e.ARCTOZOLT,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GLASTRIER,e.CHIEN_PAO]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ZACIAN,e.GALAR_ARTICUNO]}},[T.ISLAND]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[S.NIGHT]:[{1:[e.ALOLA_RATTATA],30:[e.ALOLA_RATICATE]},{1:[e.ALOLA_MEOWTH],30:[e.ALOLA_PERSIAN]}],[S.ALL]:[e.ORICORIO,{1:[e.ALOLA_SANDSHREW],30:[e.ALOLA_SANDSLASH]},{1:[e.ALOLA_VULPIX],30:[e.ALOLA_NINETALES]},{1:[e.ALOLA_DIGLETT],26:[e.ALOLA_DUGTRIO]},{1:[e.ALOLA_GEODUDE],25:[e.ALOLA_GRAVELER],40:[e.ALOLA_GOLEM]},{1:[e.ALOLA_GRIMER],38:[e.ALOLA_MUK]}]},1:{[S.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DUSK]:[e.ALOLA_MAROWAK],[S.NIGHT]:[e.ALOLA_MAROWAK],[S.ALL]:[e.BRUXISH]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLACEPHALON]},5:{[S.DAWN]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DAY]:[e.ALOLA_RAICHU,e.ALOLA_EXEGGUTOR],[S.DUSK]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[S.NIGHT]:[e.ALOLA_RATICATE,e.ALOLA_PERSIAN,e.ALOLA_MAROWAK],[S.ALL]:[e.ORICORIO,e.BRUXISH,e.ALOLA_SANDSLASH,e.ALOLA_NINETALES,e.ALOLA_DUGTRIO,e.ALOLA_GOLEM,e.ALOLA_MUK]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.BLACEPHALON]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}},[T.LABORATORY]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.MAGNEMITE],30:[e.MAGNETON]},{1:[e.GRIMER],38:[e.MUK]},{1:[e.VOLTORB],30:[e.ELECTRODE]},{1:[e.BRONZOR],33:[e.BRONZONG]},{1:[e.KLINK],38:[e.KLANG],49:[e.KLINKLANG]}]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[{1:[e.SOLOSIS],32:[e.DUOSION],41:[e.REUNICLUS]}]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.DITTO,{1:[e.PORYGON],30:[e.PORYGON2]}]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.TYPE_NULL]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MUK,e.ELECTRODE,e.BRONZONG,e.MAGNEZONE,e.PORYGON_Z,e.REUNICLUS,e.KLINKLANG]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROTOM,e.ZYGARDE,e.SILVALLY]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.MEWTWO,e.MIRAIDON]}},[T.END]:{0:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.GREAT_TUSK,e.SCREAM_TAIL,e.BRUTE_BONNET,e.FLUTTER_MANE,e.SLITHER_WING,e.SANDY_SHOCKS,e.IRON_TREADS,e.IRON_BUNDLE,e.IRON_HANDS,e.IRON_JUGULIS,e.IRON_MOTH,e.IRON_THORNS]},1:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ROARING_MOON,e.IRON_VALIANT]},2:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.WALKING_WAKE,e.IRON_LEAVES,e.GOUGING_FIRE,e.RAGING_BOLT,e.IRON_BOULDER,e.IRON_CROWN]},3:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},4:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},5:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[e.ETERNATUS]},6:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},7:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]},8:{[S.DAWN]:[],[S.DAY]:[],[S.DUSK]:[],[S.NIGHT]:[],[S.ALL]:[]}}},sr={[T.TOWN]:{0:[c.YOUNGSTER],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]},[T.PLAINS]:{0:[c.BREEDER,c.TWINS],1:[c.ACE_TRAINER,c.CYCLIST],2:[c.BLACK_BELT],3:[],4:[],5:[c.CILAN,c.CHILI,c.CRESS,c.CHEREN],6:[],7:[],8:[]},[T.GRASS]:{0:[c.BREEDER,c.SCHOOL_KID],1:[c.ACE_TRAINER,c.POKEFAN],2:[c.BLACK_BELT],3:[],4:[],5:[c.ERIKA],6:[],7:[],8:[]},[T.TALL_GRASS]:{0:[],1:[c.ACE_TRAINER,c.BREEDER,c.RANGER],2:[],3:[],4:[],5:[c.GARDENIA,c.VIOLA,c.BRASSIUS],6:[],7:[],8:[]},[T.METROPOLIS]:{0:[c.BEAUTY,c.CLERK,c.CYCLIST,c.OFFICER,c.WAITER],1:[c.BREEDER,c.DEPOT_AGENT,c.GUITARIST],2:[c.ARTIST,c.RICH_KID],3:[],4:[],5:[c.WHITNEY,c.NORMAN,c.IONO,c.LARRY],6:[],7:[],8:[]},[T.FOREST]:{0:[c.RANGER],1:[],2:[],3:[],4:[],5:[c.BUGSY,c.BURGH,c.KATY],6:[],7:[],8:[]},[T.SEA]:{0:[c.SAILOR,c.SWIMMER],1:[],2:[],3:[],4:[],5:[c.MARLON],6:[],7:[],8:[]},[T.SWAMP]:{0:[c.PARASOL_LADY],1:[c.ACE_TRAINER],2:[c.BLACK_BELT],3:[],4:[],5:[c.JANINE,c.ROXIE],6:[],7:[],8:[]},[T.BEACH]:{0:[c.FISHERMAN,c.SAILOR],1:[c.ACE_TRAINER,c.BREEDER],2:[c.BLACK_BELT],3:[],4:[],5:[c.MISTY,c.KOFU],6:[],7:[],8:[]},[T.LAKE]:{0:[c.BREEDER,c.FISHERMAN,c.PARASOL_LADY],1:[c.ACE_TRAINER],2:[c.BLACK_BELT],3:[],4:[],5:[c.CRASHER_WAKE],6:[],7:[],8:[]},[T.SEABED]:{0:[],1:[],2:[],3:[],4:[],5:[c.JUAN],6:[],7:[],8:[]},[T.MOUNTAIN]:{0:[c.BACKPACKER,c.BLACK_BELT,c.HIKER],1:[c.ACE_TRAINER,c.PILOT],2:[],3:[],4:[],5:[c.FALKNER,c.WINONA,c.SKYLA],6:[],7:[],8:[]},[T.BADLANDS]:{0:[c.BACKPACKER,c.HIKER],1:[c.ACE_TRAINER],2:[],3:[],4:[],5:[c.CLAY,c.GRANT],6:[],7:[],8:[]},[T.CAVE]:{0:[c.BACKPACKER,c.HIKER],1:[c.ACE_TRAINER,c.BLACK_BELT],2:[],3:[],4:[],5:[c.BROCK,c.ROXANNE,c.ROARK],6:[],7:[],8:[]},[T.DESERT]:{0:[c.BACKPACKER,c.SCIENTIST],1:[],2:[],3:[],4:[],5:[c.GORDIE],6:[],7:[],8:[]},[T.ICE_CAVE]:{0:[c.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[c.PRYCE,c.BRYCEN,c.WULFRIC,c.GRUSHA],6:[],7:[],8:[]},[T.MEADOW]:{0:[c.BEAUTY,c.MUSICIAN,c.PARASOL_LADY],1:[c.ACE_TRAINER,c.BAKER,c.BREEDER,c.POKEFAN],2:[],3:[],4:[],5:[c.LENORA,c.MILO],6:[],7:[],8:[]},[T.POWER_PLANT]:{0:[c.GUITARIST,c.WORKER],1:[],2:[],3:[],4:[],5:[c.VOLKNER,c.ELESA,c.CLEMONT],6:[],7:[],8:[]},[T.VOLCANO]:{0:[c.FIREBREATHER],1:[],2:[],3:[],4:[],5:[c.BLAINE,c.FLANNERY,c.KABU],6:[],7:[],8:[]},[T.GRAVEYARD]:{0:[c.PSYCHIC],1:[c.HEX_MANIAC],2:[],3:[],4:[],5:[c.MORTY,c.ALLISTER,c.RYME],6:[],7:[],8:[]},[T.DOJO]:{0:[c.BLACK_BELT],1:[],2:[],3:[],4:[],5:[c.BRAWLY,c.MAYLENE,c.KORRINA,c.BEA],6:[],7:[],8:[]},[T.FACTORY]:{0:[c.WORKER],1:[],2:[],3:[],4:[],5:[c.JASMINE,c.BYRON],6:[],7:[],8:[]},[T.RUINS]:{0:[c.PSYCHIC,c.SCIENTIST],1:[c.ACE_TRAINER,c.BLACK_BELT,c.HEX_MANIAC],2:[],3:[],4:[],5:[c.SABRINA,c.TATE,c.LIZA,c.TULIP],6:[],7:[],8:[]},[T.WASTELAND]:{0:[c.VETERAN],1:[],2:[],3:[],4:[],5:[c.CLAIR,c.DRAYDEN,c.RAIHAN],6:[],7:[],8:[]},[T.ABYSS]:{0:[],1:[c.ACE_TRAINER],2:[],3:[],4:[],5:[c.MARNIE],6:[],7:[],8:[]},[T.SPACE]:{0:[],1:[],2:[],3:[],4:[],5:[c.OLYMPIA],6:[],7:[],8:[]},[T.CONSTRUCTION_SITE]:{0:[c.OFFICER,c.WORKER],1:[],2:[],3:[],4:[],5:[c.LT_SURGE,c.CHUCK,c.WATTSON],6:[],7:[],8:[]},[T.JUNGLE]:{0:[c.BACKPACKER,c.RANGER],1:[],2:[],3:[],4:[],5:[c.RAMOS],6:[],7:[],8:[]},[T.FAIRY_CAVE]:{0:[c.BEAUTY],1:[c.ACE_TRAINER,c.BREEDER],2:[],3:[],4:[],5:[c.VALERIE,c.OPAL,c.BEDE],6:[],7:[],8:[]},[T.TEMPLE]:{0:[],1:[c.ACE_TRAINER],2:[],3:[],4:[],5:[c.FANTINA],6:[],7:[],8:[]},[T.SLUM]:{0:[c.BIKER,c.OFFICER,c.ROUGHNECK],1:[c.BAKER,c.HOOLIGANS],2:[],3:[],4:[],5:[c.PIERS],6:[],7:[],8:[]},[T.SNOWY_FOREST]:{0:[c.SNOW_WORKER],1:[],2:[],3:[],4:[],5:[c.CANDICE,c.MELONY],6:[],7:[],8:[]},[T.ISLAND]:{0:[c.RICH_KID],1:[c.RICH],2:[],3:[],4:[],5:[c.NESSA],6:[],7:[],8:[]},[T.LABORATORY]:{0:[],1:[],2:[],3:[],4:[],5:[c.GIOVANNI],6:[],7:[],8:[]},[T.END]:{0:[],1:[],2:[],3:[],4:[],5:[],6:[],7:[],8:[]}};function qj(){const E=[[e.BULBASAUR,i.GRASS,i.POISON,[[T.GRASS,2]]],[e.IVYSAUR,i.GRASS,i.POISON,[[T.GRASS,2]]],[e.VENUSAUR,i.GRASS,i.POISON,[[T.GRASS,2],[T.GRASS,6]]],[e.CHARMANDER,i.FIRE,-1,[[T.VOLCANO,2]]],[e.CHARMELEON,i.FIRE,-1,[[T.VOLCANO,2]]],[e.CHARIZARD,i.FIRE,i.FLYING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.SQUIRTLE,i.WATER,-1,[[T.LAKE,2]]],[e.WARTORTLE,i.WATER,-1,[[T.LAKE,2]]],[e.BLASTOISE,i.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.CATERPIE,i.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.METAPOD,i.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.BUTTERFREE,i.BUG,i.FLYING,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.WEEDLE,i.BUG,i.POISON,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.KAKUNA,i.BUG,i.POISON,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.BEEDRILL,i.BUG,i.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.PIDGEY,i.NORMAL,i.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.PIDGEOTTO,i.NORMAL,i.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.PIDGEOT,i.NORMAL,i.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.RATTATA,i.NORMAL,-1,[[T.TOWN,0],[T.METROPOLIS,0],[T.SLUM,0]]],[e.RATICATE,i.NORMAL,-1,[[T.METROPOLIS,0],[T.SLUM,0]]],[e.SPEAROW,i.NORMAL,i.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0]]],[e.FEAROW,i.NORMAL,i.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.EKANS,i.POISON,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.FOREST,1],[T.SWAMP,1,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DUSK,S.NIGHT]]]],[e.ARBOK,i.POISON,-1,[[T.FOREST,1],[T.SWAMP,1,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DUSK,S.NIGHT]],[T.SWAMP,5,[S.DUSK,S.NIGHT]]]],[e.PIKACHU,i.ELECTRIC,-1,[[T.PLAINS,1],[T.METROPOLIS,1],[T.POWER_PLANT,0]]],[e.RAICHU,i.ELECTRIC,-1,[[T.POWER_PLANT,5]]],[e.SANDSHREW,i.GROUND,-1,[[T.BADLANDS,1],[T.DESERT,0]]],[e.SANDSLASH,i.GROUND,-1,[[T.BADLANDS,1],[T.DESERT,0],[T.DESERT,5]]],[e.NIDORAN_F,i.POISON,-1,[[T.TOWN,1,S.DAY],[T.TALL_GRASS,0,S.DAY]]],[e.NIDORINA,i.POISON,-1,[[T.TALL_GRASS,0,S.DAY]]],[e.NIDOQUEEN,i.POISON,i.GROUND,[[T.TALL_GRASS,5,S.DAY]]],[e.NIDORAN_M,i.POISON,-1,[[T.TOWN,1,S.DAY],[T.TALL_GRASS,0,S.DAY]]],[e.NIDORINO,i.POISON,-1,[[T.TALL_GRASS,0,S.DAY]]],[e.NIDOKING,i.POISON,i.GROUND,[[T.TALL_GRASS,5,S.DAY]]],[e.CLEFAIRY,i.FAIRY,-1,[[T.FAIRY_CAVE,1],[T.SPACE,0]]],[e.CLEFABLE,i.FAIRY,-1,[[T.SPACE,5]]],[e.VULPIX,i.FIRE,-1,[[T.TALL_GRASS,1],[T.VOLCANO,0]]],[e.NINETALES,i.FIRE,-1,[[T.VOLCANO,5]]],[e.JIGGLYPUFF,i.NORMAL,i.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,0]]],[e.WIGGLYTUFF,i.NORMAL,i.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ZUBAT,i.POISON,i.FLYING,[[T.PLAINS,0,S.NIGHT],[T.CAVE,0]]],[e.GOLBAT,i.POISON,i.FLYING,[[T.PLAINS,0,S.NIGHT],[T.CAVE,0]]],[e.ODDISH,i.GRASS,i.POISON,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.GLOOM,i.GRASS,i.POISON,[[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.VILEPLUME,i.GRASS,i.POISON,[[T.TALL_GRASS,5,[S.DUSK,S.NIGHT]]]],[e.PARAS,i.BUG,i.GRASS,[[T.TOWN,1,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.CAVE,0]]],[e.PARASECT,i.BUG,i.GRASS,[[T.TALL_GRASS,1,S.NIGHT],[T.CAVE,0],[T.CAVE,5]]],[e.VENONAT,i.BUG,i.POISON,[[T.TOWN,1,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,0,S.NIGHT]]],[e.VENOMOTH,i.BUG,i.POISON,[[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,0,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.DIGLETT,i.GROUND,-1,[[T.BADLANDS,0]]],[e.DUGTRIO,i.GROUND,-1,[[T.BADLANDS,0],[T.BADLANDS,5]]],[e.MEOWTH,i.NORMAL,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.PLAINS,0,[S.DUSK,S.NIGHT]]]],[e.PERSIAN,i.NORMAL,-1,[[T.PLAINS,0,[S.DUSK,S.NIGHT]],[T.PLAINS,5,[S.DUSK,S.NIGHT]]]],[e.PSYDUCK,i.WATER,-1,[[T.SWAMP,1],[T.LAKE,0]]],[e.GOLDUCK,i.WATER,-1,[[T.SWAMP,1],[T.LAKE,0],[T.LAKE,5]]],[e.MANKEY,i.FIGHTING,-1,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0]]],[e.PRIMEAPE,i.FIGHTING,-1,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0]]],[e.GROWLITHE,i.FIRE,-1,[[T.GRASS,2],[T.VOLCANO,0]]],[e.ARCANINE,i.FIRE,-1,[[T.VOLCANO,5]]],[e.POLIWAG,i.WATER,-1,[[T.SEA,1],[T.SWAMP,0]]],[e.POLIWHIRL,i.WATER,-1,[[T.SEA,1],[T.SWAMP,0]]],[e.POLIWRATH,i.WATER,i.FIGHTING,[[T.SWAMP,5]]],[e.ABRA,i.PSYCHIC,-1,[[T.TOWN,2],[T.PLAINS,2],[T.RUINS,1]]],[e.KADABRA,i.PSYCHIC,-1,[[T.PLAINS,2],[T.RUINS,1]]],[e.ALAKAZAM,i.PSYCHIC,-1,[[T.RUINS,5]]],[e.MACHOP,i.FIGHTING,-1,[[T.MOUNTAIN,1],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.MACHOKE,i.FIGHTING,-1,[[T.MOUNTAIN,1],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.MACHAMP,i.FIGHTING,-1,[[T.CONSTRUCTION_SITE,5]]],[e.BELLSPROUT,i.GRASS,i.POISON,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.WEEPINBELL,i.GRASS,i.POISON,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.VICTREEBEL,i.GRASS,i.POISON,[[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.TENTACOOL,i.WATER,i.POISON,[[T.SEA,0],[T.SEABED,1]]],[e.TENTACRUEL,i.WATER,i.POISON,[[T.SEA,0],[T.SEA,5],[T.SEABED,1]]],[e.GEODUDE,i.ROCK,i.GROUND,[[T.MOUNTAIN,1],[T.BADLANDS,0],[T.CAVE,1]]],[e.GRAVELER,i.ROCK,i.GROUND,[[T.MOUNTAIN,1],[T.BADLANDS,0],[T.CAVE,1]]],[e.GOLEM,i.ROCK,i.GROUND,[[T.BADLANDS,5]]],[e.PONYTA,i.FIRE,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.VOLCANO,0]]],[e.RAPIDASH,i.FIRE,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.SLOWPOKE,i.WATER,i.PSYCHIC,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DUSK,S.NIGHT]],[T.LAKE,1]]],[e.SLOWBRO,i.WATER,i.PSYCHIC,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DUSK,S.NIGHT]],[T.LAKE,1],[T.LAKE,5]]],[e.MAGNEMITE,i.ELECTRIC,i.STEEL,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0],[T.LABORATORY,0]]],[e.MAGNETON,i.ELECTRIC,i.STEEL,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0],[T.LABORATORY,0]]],[e.FARFETCHD,i.NORMAL,i.FLYING,[[T.PLAINS,3],[T.PLAINS,6]]],[e.DODUO,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]]]],[e.DODRIO,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.SEEL,i.WATER,-1,[[T.ICE_CAVE,0]]],[e.DEWGONG,i.WATER,i.ICE,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.GRIMER,i.POISON,-1,[[T.SLUM,0],[T.CONSTRUCTION_SITE,1],[T.LABORATORY,0]]],[e.MUK,i.POISON,-1,[[T.CONSTRUCTION_SITE,1],[T.SLUM,0],[T.SLUM,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.SHELLDER,i.WATER,-1,[[T.SEA,1,[S.DUSK,S.NIGHT]],[T.BEACH,0,[S.DUSK,S.NIGHT]],[T.SEABED,1]]],[e.CLOYSTER,i.WATER,i.ICE,[[T.BEACH,5,[S.DUSK,S.NIGHT]]]],[e.GASTLY,i.GHOST,i.POISON,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.HAUNTER,i.GHOST,i.POISON,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.GENGAR,i.GHOST,i.POISON,[[T.GRAVEYARD,5]]],[e.ONIX,i.ROCK,i.GROUND,[[T.BADLANDS,2],[T.CAVE,2],[T.CAVE,5],[T.CONSTRUCTION_SITE,2]]],[e.DROWZEE,i.PSYCHIC,-1,[[T.RUINS,0]]],[e.HYPNO,i.PSYCHIC,-1,[[T.RUINS,0],[T.RUINS,5]]],[e.KRABBY,i.WATER,-1,[[T.BEACH,0]]],[e.KINGLER,i.WATER,-1,[[T.BEACH,0],[T.BEACH,5]]],[e.VOLTORB,i.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.LABORATORY,0]]],[e.ELECTRODE,i.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.EXEGGCUTE,i.GRASS,i.PSYCHIC,[[T.FOREST,2,[S.DAWN,S.DAY]],[T.JUNGLE,1,[S.DAWN,S.DAY]]]],[e.EXEGGUTOR,i.GRASS,i.PSYCHIC,[[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.CUBONE,i.GROUND,-1,[[T.BADLANDS,0,S.NIGHT],[T.GRAVEYARD,1],[T.TEMPLE,1]]],[e.MAROWAK,i.GROUND,-1,[[T.BADLANDS,0,S.NIGHT],[T.GRAVEYARD,1],[T.TEMPLE,1],[T.BADLANDS,5,S.NIGHT],[T.GRAVEYARD,5,[S.DAWN,S.DAY,S.DUSK]]]],[e.HITMONLEE,i.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5],[T.CONSTRUCTION_SITE,2]]],[e.HITMONCHAN,i.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5],[T.CONSTRUCTION_SITE,2]]],[e.LICKITUNG,i.NORMAL,-1,[[T.PLAINS,3]]],[e.KOFFING,i.POISON,-1,[[T.SLUM,0],[T.CONSTRUCTION_SITE,1]]],[e.WEEZING,i.POISON,-1,[[T.SLUM,0],[T.SLUM,5],[T.CONSTRUCTION_SITE,1]]],[e.RHYHORN,i.GROUND,i.ROCK,[[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.BADLANDS,0],[T.CONSTRUCTION_SITE,1]]],[e.RHYDON,i.GROUND,i.ROCK,[[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.BADLANDS,0],[T.CONSTRUCTION_SITE,1]]],[e.CHANSEY,i.NORMAL,-1,[[T.PLAINS,3],[T.MEADOW,3]]],[e.TANGELA,i.GRASS,-1,[[T.JUNGLE,1,[S.DUSK,S.NIGHT]]]],[e.KANGASKHAN,i.NORMAL,-1,[[T.JUNGLE,3],[T.JUNGLE,6]]],[e.HORSEA,i.WATER,-1,[[T.SEA,1]]],[e.SEADRA,i.WATER,-1,[[T.SEA,1]]],[e.GOLDEEN,i.WATER,-1,[[T.LAKE,0],[T.SEA,1]]],[e.SEAKING,i.WATER,-1,[[T.LAKE,0],[T.LAKE,5],[T.SEA,1]]],[e.STARYU,i.WATER,-1,[[T.BEACH,0,[S.DAWN,S.DAY]],[T.SEA,1,[S.DAWN,S.DAY]]]],[e.STARMIE,i.WATER,i.PSYCHIC,[[T.BEACH,0,[S.DAWN,S.DAY]],[T.BEACH,5,[S.DAWN,S.DAY]],[T.SEA,1,[S.DAWN,S.DAY]]]],[e.MR_MIME,i.PSYCHIC,i.FAIRY,[[T.RUINS,2],[T.RUINS,6]]],[e.SCYTHER,i.BUG,i.FLYING,[[T.TALL_GRASS,3],[T.FOREST,2,[S.DUSK,S.NIGHT]],[T.JUNGLE,2]]],[e.JYNX,i.ICE,i.PSYCHIC,[[T.ICE_CAVE,2],[T.ICE_CAVE,6]]],[e.ELECTABUZZ,i.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.MAGMAR,i.FIRE,-1,[[T.VOLCANO,1]]],[e.PINSIR,i.BUG,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.TAUROS,i.NORMAL,-1,[[T.MEADOW,2],[T.MEADOW,5]]],[e.MAGIKARP,i.WATER,-1,[[T.SEA,0],[T.LAKE,0]]],[e.GYARADOS,i.WATER,i.FLYING,[[T.SEA,0],[T.LAKE,0],[T.LAKE,5]]],[e.LAPRAS,i.WATER,i.ICE,[[T.SEA,2],[T.ICE_CAVE,2],[T.ICE_CAVE,6]]],[e.DITTO,i.NORMAL,-1,[[T.TOWN,4],[T.PLAINS,4],[T.METROPOLIS,3],[T.CONSTRUCTION_SITE,3],[T.LABORATORY,2]]],[e.EEVEE,i.NORMAL,-1,[[T.TOWN,3],[T.PLAINS,3],[T.METROPOLIS,3],[T.MEADOW,2]]],[e.VAPOREON,i.WATER,-1,[[T.LAKE,3],[T.LAKE,6]]],[e.JOLTEON,i.ELECTRIC,-1,[[T.POWER_PLANT,3],[T.POWER_PLANT,6]]],[e.FLAREON,i.FIRE,-1,[[T.VOLCANO,3],[T.VOLCANO,6]]],[e.PORYGON,i.NORMAL,-1,[[T.FACTORY,2],[T.SPACE,3],[T.LABORATORY,2]]],[e.OMANYTE,i.ROCK,i.WATER,[[T.SEABED,3]]],[e.OMASTAR,i.ROCK,i.WATER,[[T.SEABED,3],[T.SEABED,6]]],[e.KABUTO,i.ROCK,i.WATER,[[T.SEABED,3]]],[e.KABUTOPS,i.ROCK,i.WATER,[[T.SEABED,3],[T.SEABED,6]]],[e.AERODACTYL,i.ROCK,i.FLYING,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.SNORLAX,i.NORMAL,-1,[[T.PLAINS,3],[T.PLAINS,6]]],[e.ARTICUNO,i.ICE,i.FLYING,[[T.ICE_CAVE,4],[T.ICE_CAVE,7]]],[e.ZAPDOS,i.ELECTRIC,i.FLYING,[[T.POWER_PLANT,7]]],[e.MOLTRES,i.FIRE,i.FLYING,[[T.VOLCANO,7]]],[e.DRATINI,i.DRAGON,-1,[[T.WASTELAND,2]]],[e.DRAGONAIR,i.DRAGON,-1,[[T.WASTELAND,2]]],[e.DRAGONITE,i.DRAGON,i.FLYING,[[T.WASTELAND,2],[T.WASTELAND,5]]],[e.MEWTWO,i.PSYCHIC,-1,[[T.LABORATORY,8]]],[e.MEW,i.PSYCHIC,-1,[]],[e.CHIKORITA,i.GRASS,-1,[[T.TALL_GRASS,2]]],[e.BAYLEEF,i.GRASS,-1,[[T.TALL_GRASS,2]]],[e.MEGANIUM,i.GRASS,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.CYNDAQUIL,i.FIRE,-1,[[T.VOLCANO,2]]],[e.QUILAVA,i.FIRE,-1,[[T.VOLCANO,2]]],[e.TYPHLOSION,i.FIRE,-1,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.TOTODILE,i.WATER,-1,[[T.SWAMP,2]]],[e.CROCONAW,i.WATER,-1,[[T.SWAMP,2]]],[e.FERALIGATR,i.WATER,-1,[[T.SWAMP,2],[T.SWAMP,6]]],[e.SENTRET,i.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.FURRET,i.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.HOOTHOOT,i.NORMAL,i.FLYING,[[T.TOWN,0,S.NIGHT],[T.FOREST,1,S.NIGHT]]],[e.NOCTOWL,i.NORMAL,i.FLYING,[[T.FOREST,1,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.LEDYBA,i.BUG,i.FLYING,[[T.TOWN,0,S.DAWN],[T.MEADOW,0,S.DAWN]]],[e.LEDIAN,i.BUG,i.FLYING,[[T.MEADOW,0,S.DAWN],[T.MEADOW,5,S.DAWN]]],[e.SPINARAK,i.BUG,i.POISON,[[T.TOWN,1,S.DUSK],[T.TOWN,0,S.NIGHT],[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,1,S.DUSK],[T.FOREST,0,S.NIGHT],[T.JUNGLE,1,S.DUSK],[T.JUNGLE,0,S.NIGHT]]],[e.ARIADOS,i.BUG,i.POISON,[[T.TALL_GRASS,1,S.NIGHT],[T.FOREST,1,S.DUSK],[T.FOREST,0,S.NIGHT],[T.FOREST,5,[S.DUSK,S.NIGHT]],[T.JUNGLE,1,S.DUSK],[T.JUNGLE,0,S.NIGHT]]],[e.CROBAT,i.POISON,i.FLYING,[[T.CAVE,5]]],[e.CHINCHOU,i.WATER,i.ELECTRIC,[[T.SEA,1,S.NIGHT],[T.SEABED,0]]],[e.LANTURN,i.WATER,i.ELECTRIC,[[T.SEA,1,S.NIGHT],[T.SEABED,0],[T.SEABED,5]]],[e.PICHU,i.ELECTRIC,-1,[]],[e.CLEFFA,i.FAIRY,-1,[]],[e.IGGLYBUFF,i.NORMAL,i.FAIRY,[]],[e.TOGEPI,i.FAIRY,-1,[]],[e.TOGETIC,i.FAIRY,i.FLYING,[[T.FAIRY_CAVE,1]]],[e.NATU,i.PSYCHIC,i.FLYING,[[T.MOUNTAIN,1],[T.RUINS,0],[T.TEMPLE,0]]],[e.XATU,i.PSYCHIC,i.FLYING,[[T.MOUNTAIN,1],[T.RUINS,0],[T.RUINS,5],[T.TEMPLE,0]]],[e.MAREEP,i.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,2]]],[e.FLAAFFY,i.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,2]]],[e.AMPHAROS,i.ELECTRIC,-1,[[T.MEADOW,1],[T.POWER_PLANT,6]]],[e.BELLOSSOM,i.GRASS,-1,[[T.TALL_GRASS,6,[S.DAWN,S.DAY]]]],[e.MARILL,i.WATER,i.FAIRY,[[T.LAKE,0,[S.DUSK,S.NIGHT]],[T.FAIRY_CAVE,0]]],[e.AZUMARILL,i.WATER,i.FAIRY,[[T.LAKE,0,[S.DUSK,S.NIGHT]],[T.LAKE,5,[S.DUSK,S.NIGHT]],[T.FAIRY_CAVE,0]]],[e.SUDOWOODO,i.ROCK,-1,[[T.GRASS,3],[T.GRASS,6]]],[e.POLITOED,i.WATER,-1,[[T.SWAMP,3],[T.SWAMP,6]]],[e.HOPPIP,i.GRASS,i.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.SKIPLOOM,i.GRASS,i.FLYING,[[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.JUMPLUFF,i.GRASS,i.FLYING,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.AIPOM,i.NORMAL,-1,[[T.JUNGLE,0]]],[e.SUNKERN,i.GRASS,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]]]],[e.SUNFLORA,i.GRASS,-1,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.YANMA,i.BUG,i.FLYING,[[T.JUNGLE,2]]],[e.WOOPER,i.WATER,i.GROUND,[[T.LAKE,1],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.QUAGSIRE,i.WATER,i.GROUND,[[T.LAKE,1],[T.SWAMP,0,[S.DAWN,S.DAY]],[T.SWAMP,5,[S.DAWN,S.DAY]]]],[e.ESPEON,i.PSYCHIC,-1,[[T.RUINS,3,S.DAY],[T.RUINS,6,S.DAY]]],[e.UMBREON,i.DARK,-1,[[T.ABYSS,3],[T.ABYSS,6]]],[e.MURKROW,i.DARK,i.FLYING,[[T.MOUNTAIN,2,S.NIGHT],[T.ABYSS,0]]],[e.SLOWKING,i.WATER,i.PSYCHIC,[[T.LAKE,3],[T.LAKE,6]]],[e.MISDREAVUS,i.GHOST,-1,[[T.GRAVEYARD,2]]],[e.UNOWN,i.PSYCHIC,-1,[[T.RUINS,0]]],[e.WOBBUFFET,i.PSYCHIC,-1,[[T.RUINS,2],[T.RUINS,6]]],[e.GIRAFARIG,i.NORMAL,i.PSYCHIC,[[T.TALL_GRASS,2]]],[e.PINECO,i.BUG,-1,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.FORRETRESS,i.BUG,i.STEEL,[[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.DUNSPARCE,i.NORMAL,-1,[[T.PLAINS,3]]],[e.GLIGAR,i.GROUND,i.FLYING,[[T.BADLANDS,2]]],[e.STEELIX,i.STEEL,i.GROUND,[[T.BADLANDS,6]]],[e.SNUBBULL,i.FAIRY,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.GRANBULL,i.FAIRY,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.QWILFISH,i.WATER,i.POISON,[[T.SEABED,2],[T.SEABED,5]]],[e.SCIZOR,i.BUG,i.STEEL,[[T.JUNGLE,6]]],[e.SHUCKLE,i.BUG,i.ROCK,[[T.CAVE,3],[T.CAVE,6]]],[e.HERACROSS,i.BUG,i.FIGHTING,[[T.FOREST,2],[T.FOREST,6]]],[e.SNEASEL,i.DARK,i.ICE,[[T.ICE_CAVE,1],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.TEDDIURSA,i.NORMAL,-1,[[T.FOREST,1],[T.CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.URSARING,i.NORMAL,-1,[[T.FOREST,1],[T.CAVE,0],[T.CAVE,5],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.SLUGMA,i.FIRE,-1,[[T.MOUNTAIN,1],[T.VOLCANO,0]]],[e.MAGCARGO,i.FIRE,i.ROCK,[[T.MOUNTAIN,1],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.SWINUB,i.ICE,i.GROUND,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.PILOSWINE,i.ICE,i.GROUND,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.CORSOLA,i.WATER,i.ROCK,[[T.SEABED,2],[T.SEABED,5]]],[e.REMORAID,i.WATER,-1,[[T.SEABED,0]]],[e.OCTILLERY,i.WATER,-1,[[T.SEABED,2],[T.SEABED,5]]],[e.DELIBIRD,i.ICE,i.FLYING,[[T.ICE_CAVE,3],[T.SNOWY_FOREST,2]]],[e.MANTINE,i.WATER,i.FLYING,[[T.SEABED,2],[T.SEABED,5]]],[e.SKARMORY,i.STEEL,i.FLYING,[[T.MOUNTAIN,2],[T.MOUNTAIN,5]]],[e.HOUNDOUR,i.DARK,i.FIRE,[[T.METROPOLIS,0,S.NIGHT],[T.ABYSS,0]]],[e.HOUNDOOM,i.DARK,i.FIRE,[[T.METROPOLIS,0,S.NIGHT],[T.ABYSS,0],[T.ABYSS,5]]],[e.KINGDRA,i.WATER,i.DRAGON,[[T.SEA,3],[T.SEA,6]]],[e.PHANPY,i.GROUND,-1,[[T.BADLANDS,0,[S.DAWN,S.DAY]]]],[e.DONPHAN,i.GROUND,-1,[[T.BADLANDS,0,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.PORYGON2,i.NORMAL,-1,[[T.FACTORY,2],[T.SPACE,3],[T.LABORATORY,2]]],[e.STANTLER,i.NORMAL,-1,[[T.FOREST,2,[S.DAWN,S.DAY]],[T.FOREST,6,[S.DAWN,S.DAY]],[T.SNOWY_FOREST,1,[S.DAWN,S.DAY]]]],[e.SMEARGLE,i.NORMAL,-1,[[T.METROPOLIS,3]]],[e.TYROGUE,i.FIGHTING,-1,[]],[e.HITMONTOP,i.FIGHTING,-1,[[T.DOJO,3],[T.DOJO,6],[T.CONSTRUCTION_SITE,3]]],[e.SMOOCHUM,i.ICE,i.PSYCHIC,[]],[e.ELEKID,i.ELECTRIC,-1,[]],[e.MAGBY,i.FIRE,-1,[]],[e.MILTANK,i.NORMAL,-1,[[T.MEADOW,2],[T.MEADOW,5]]],[e.BLISSEY,i.NORMAL,-1,[[T.MEADOW,6]]],[e.RAIKOU,i.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.ENTEI,i.FIRE,-1,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.SUICUNE,i.WATER,-1,[[T.LAKE,4],[T.LAKE,7]]],[e.LARVITAR,i.ROCK,i.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0,[S.DUSK,S.NIGHT]]]],[e.PUPITAR,i.ROCK,i.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0,[S.DUSK,S.NIGHT]]]],[e.TYRANITAR,i.ROCK,i.DARK,[[T.WASTELAND,0,[S.DUSK,S.NIGHT]],[T.WASTELAND,5,[S.DUSK,S.NIGHT]]]],[e.LUGIA,i.PSYCHIC,i.FLYING,[[T.SEA,8]]],[e.HO_OH,i.FIRE,i.FLYING,[[T.MOUNTAIN,8]]],[e.CELEBI,i.PSYCHIC,i.GRASS,[]],[e.TREECKO,i.GRASS,-1,[[T.FOREST,2]]],[e.GROVYLE,i.GRASS,-1,[[T.FOREST,2]]],[e.SCEPTILE,i.GRASS,-1,[[T.FOREST,2],[T.FOREST,6]]],[e.TORCHIC,i.FIRE,-1,[[T.MOUNTAIN,2]]],[e.COMBUSKEN,i.FIRE,i.FIGHTING,[[T.MOUNTAIN,2]]],[e.BLAZIKEN,i.FIRE,i.FIGHTING,[[T.MOUNTAIN,2],[T.MOUNTAIN,6]]],[e.MUDKIP,i.WATER,-1,[[T.SWAMP,2]]],[e.MARSHTOMP,i.WATER,i.GROUND,[[T.SWAMP,2]]],[e.SWAMPERT,i.WATER,i.GROUND,[[T.SWAMP,2],[T.SWAMP,6]]],[e.POOCHYENA,i.DARK,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DUSK,S.NIGHT]]]],[e.MIGHTYENA,i.DARK,-1,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DUSK,S.NIGHT]],[T.PLAINS,5,[S.DUSK,S.NIGHT]]]],[e.ZIGZAGOON,i.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0],[T.METROPOLIS,0]]],[e.LINOONE,i.NORMAL,-1,[[T.PLAINS,0],[T.PLAINS,5],[T.METROPOLIS,0]]],[e.WURMPLE,i.BUG,-1,[[T.TOWN,0]]],[e.SILCOON,i.BUG,-1,[[T.TOWN,0,S.DAY]]],[e.BEAUTIFLY,i.BUG,i.FLYING,[[T.FOREST,0,S.DAY],[T.FOREST,5,S.DAY]]],[e.CASCOON,i.BUG,-1,[[T.TOWN,0,S.NIGHT]]],[e.DUSTOX,i.BUG,i.POISON,[[T.FOREST,0,S.NIGHT],[T.FOREST,5,S.NIGHT]]],[e.LOTAD,i.WATER,i.GRASS,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.LAKE,0,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.LOMBRE,i.WATER,i.GRASS,[[T.LAKE,0,[S.DAWN,S.DAY]],[T.SWAMP,0,[S.DAWN,S.DAY]]]],[e.LUDICOLO,i.WATER,i.GRASS,[[T.SWAMP,5,[S.DAWN,S.DAY]]]],[e.SEEDOT,i.GRASS,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.NUZLEAF,i.GRASS,i.DARK,[[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.SHIFTRY,i.GRASS,i.DARK,[[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.TAILLOW,i.NORMAL,i.FLYING,[[T.TOWN,0],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.SWELLOW,i.NORMAL,i.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.WINGULL,i.WATER,i.FLYING,[[T.SEA,0,[S.DAWN,S.DAY]]]],[e.PELIPPER,i.WATER,i.FLYING,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.RALTS,i.PSYCHIC,i.FAIRY,[[T.TOWN,3],[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[e.KIRLIA,i.PSYCHIC,i.FAIRY,[[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[e.GARDEVOIR,i.PSYCHIC,i.FAIRY,[[T.MEADOW,1],[T.MEADOW,5],[T.FAIRY_CAVE,1]]],[e.SURSKIT,i.BUG,i.WATER,[[T.TOWN,2],[T.LAKE,1]]],[e.MASQUERAIN,i.BUG,i.FLYING,[[T.LAKE,1],[T.LAKE,5]]],[e.SHROOMISH,i.GRASS,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.BRELOOM,i.GRASS,i.FIGHTING,[[T.GRASS,0,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.SLAKOTH,i.NORMAL,-1,[[T.JUNGLE,2]]],[e.VIGOROTH,i.NORMAL,-1,[[T.JUNGLE,2]]],[e.SLAKING,i.NORMAL,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.NINCADA,i.BUG,i.GROUND,[[T.TOWN,1],[T.TALL_GRASS,0]]],[e.NINJASK,i.BUG,i.FLYING,[[T.TALL_GRASS,0],[T.TALL_GRASS,5]]],[e.SHEDINJA,i.BUG,i.GHOST,[[T.TALL_GRASS,3]]],[e.WHISMUR,i.NORMAL,-1,[[T.TOWN,1],[T.CAVE,0]]],[e.LOUDRED,i.NORMAL,-1,[[T.CAVE,0]]],[e.EXPLOUD,i.NORMAL,-1,[[T.CAVE,0],[T.CAVE,5]]],[e.MAKUHITA,i.FIGHTING,-1,[[T.CAVE,1],[T.DOJO,0]]],[e.HARIYAMA,i.FIGHTING,-1,[[T.CAVE,1],[T.DOJO,0],[T.DOJO,5]]],[e.AZURILL,i.NORMAL,i.FAIRY,[]],[e.NOSEPASS,i.ROCK,-1,[[T.CAVE,1]]],[e.SKITTY,i.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.DELCATTY,i.NORMAL,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.SABLEYE,i.DARK,i.GHOST,[[T.ABYSS,0],[T.ABYSS,5]]],[e.MAWILE,i.STEEL,i.FAIRY,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ARON,i.STEEL,i.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]]]],[e.LAIRON,i.STEEL,i.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]]]],[e.AGGRON,i.STEEL,i.ROCK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,5]]],[e.MEDITITE,i.FIGHTING,i.PSYCHIC,[[T.DOJO,0]]],[e.MEDICHAM,i.FIGHTING,i.PSYCHIC,[[T.DOJO,0],[T.DOJO,5]]],[e.ELECTRIKE,i.ELECTRIC,-1,[[T.POWER_PLANT,0]]],[e.MANECTRIC,i.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.PLUSLE,i.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.MINUN,i.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.VOLBEAT,i.BUG,-1,[[T.MEADOW,2,S.NIGHT]]],[e.ILLUMISE,i.BUG,-1,[[T.MEADOW,2,S.NIGHT]]],[e.ROSELIA,i.GRASS,i.POISON,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.GULPIN,i.POISON,-1,[[T.SWAMP,0]]],[e.SWALOT,i.POISON,-1,[[T.SWAMP,0],[T.SWAMP,5]]],[e.CARVANHA,i.WATER,i.DARK,[[T.SEA,1,[S.DUSK,S.NIGHT]]]],[e.SHARPEDO,i.WATER,i.DARK,[[T.SEA,1,[S.DUSK,S.NIGHT]],[T.SEA,5,[S.DUSK,S.NIGHT]]]],[e.WAILMER,i.WATER,-1,[[T.SEA,1],[T.SEABED,1]]],[e.WAILORD,i.WATER,-1,[[T.SEA,1],[T.SEABED,1],[T.SEABED,5]]],[e.NUMEL,i.FIRE,i.GROUND,[[T.BADLANDS,1],[T.VOLCANO,0]]],[e.CAMERUPT,i.FIRE,i.GROUND,[[T.BADLANDS,1],[T.VOLCANO,0],[T.VOLCANO,5]]],[e.TORKOAL,i.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.SPOINK,i.PSYCHIC,-1,[[T.MOUNTAIN,2],[T.RUINS,0]]],[e.GRUMPIG,i.PSYCHIC,-1,[[T.MOUNTAIN,2],[T.RUINS,0],[T.RUINS,5]]],[e.SPINDA,i.NORMAL,-1,[[T.MEADOW,2]]],[e.TRAPINCH,i.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.VIBRAVA,i.GROUND,i.DRAGON,[[T.DESERT,2,[S.DAWN,S.DAY]],[T.WASTELAND,0]]],[e.FLYGON,i.GROUND,i.DRAGON,[[T.DESERT,2,[S.DAWN,S.DAY]],[T.WASTELAND,0],[T.WASTELAND,5]]],[e.CACNEA,i.GRASS,-1,[[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.CACTURNE,i.GRASS,i.DARK,[[T.DESERT,0,[S.DUSK,S.NIGHT]],[T.DESERT,5,[S.DUSK,S.NIGHT]]]],[e.SWABLU,i.NORMAL,i.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.WASTELAND,1]]],[e.ALTARIA,i.DRAGON,i.FLYING,[[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]],[T.WASTELAND,1]]],[e.ZANGOOSE,i.NORMAL,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,5]]],[e.SEVIPER,i.POISON,-1,[[T.JUNGLE,2],[T.JUNGLE,5]]],[e.LUNATONE,i.ROCK,i.PSYCHIC,[[T.SPACE,0,S.NIGHT],[T.SPACE,5,S.NIGHT]]],[e.SOLROCK,i.ROCK,i.PSYCHIC,[[T.SPACE,0,S.DAY],[T.SPACE,5,S.DAY]]],[e.BARBOACH,i.WATER,i.GROUND,[[T.SWAMP,1]]],[e.WHISCASH,i.WATER,i.GROUND,[[T.SWAMP,1],[T.SWAMP,5]]],[e.CORPHISH,i.WATER,-1,[[T.BEACH,0]]],[e.CRAWDAUNT,i.WATER,i.DARK,[[T.BEACH,0],[T.BEACH,5]]],[e.BALTOY,i.GROUND,i.PSYCHIC,[[T.RUINS,0],[T.SPACE,1],[T.TEMPLE,1]]],[e.CLAYDOL,i.GROUND,i.PSYCHIC,[[T.RUINS,0],[T.RUINS,5],[T.SPACE,1],[T.TEMPLE,1]]],[e.LILEEP,i.ROCK,i.GRASS,[[T.DESERT,3]]],[e.CRADILY,i.ROCK,i.GRASS,[[T.DESERT,3],[T.DESERT,6]]],[e.ANORITH,i.ROCK,i.BUG,[[T.DESERT,3]]],[e.ARMALDO,i.ROCK,i.BUG,[[T.DESERT,3],[T.DESERT,6]]],[e.FEEBAS,i.WATER,-1,[[T.SEABED,4]]],[e.MILOTIC,i.WATER,-1,[[T.SEABED,7]]],[e.CASTFORM,i.NORMAL,-1,[[T.METROPOLIS,4],[T.METROPOLIS,6]]],[e.KECLEON,i.NORMAL,-1,[[T.TALL_GRASS,2],[T.TALL_GRASS,5]]],[e.SHUPPET,i.GHOST,-1,[[T.GRAVEYARD,0]]],[e.BANETTE,i.GHOST,-1,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.DUSKULL,i.GHOST,-1,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.DUSCLOPS,i.GHOST,-1,[[T.GRAVEYARD,0],[T.TEMPLE,0]]],[e.TROPIUS,i.GRASS,i.FLYING,[[T.TALL_GRASS,2],[T.FOREST,2],[T.JUNGLE,1,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.CHIMECHO,i.PSYCHIC,-1,[[T.TEMPLE,1],[T.TEMPLE,5]]],[e.ABSOL,i.DARK,-1,[[T.ABYSS,2],[T.ABYSS,5]]],[e.WYNAUT,i.PSYCHIC,-1,[]],[e.SNORUNT,i.ICE,-1,[[T.ICE_CAVE,1]]],[e.GLALIE,i.ICE,-1,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.SPHEAL,i.ICE,i.WATER,[[T.ICE_CAVE,1]]],[e.SEALEO,i.ICE,i.WATER,[[T.ICE_CAVE,1]]],[e.WALREIN,i.ICE,i.WATER,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.CLAMPERL,i.WATER,-1,[[T.SEABED,0]]],[e.HUNTAIL,i.WATER,-1,[[T.SEABED,5]]],[e.GOREBYSS,i.WATER,-1,[[T.SEABED,5]]],[e.RELICANTH,i.WATER,i.ROCK,[[T.SEABED,3],[T.SEABED,6]]],[e.LUVDISC,i.WATER,-1,[[T.SEABED,1],[T.SEABED,5]]],[e.BAGON,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SHELGON,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SALAMENCE,i.DRAGON,i.FLYING,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.BELDUM,i.STEEL,i.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2]]],[e.METANG,i.STEEL,i.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2]]],[e.METAGROSS,i.STEEL,i.PSYCHIC,[[T.FACTORY,3],[T.SPACE,2],[T.SPACE,6]]],[e.REGIROCK,i.ROCK,-1,[[T.DESERT,4],[T.DESERT,7]]],[e.REGICE,i.ICE,-1,[[T.ICE_CAVE,4],[T.ICE_CAVE,7]]],[e.REGISTEEL,i.STEEL,-1,[[T.RUINS,4],[T.RUINS,7]]],[e.LATIAS,i.DRAGON,i.PSYCHIC,[[T.PLAINS,4],[T.PLAINS,7]]],[e.LATIOS,i.DRAGON,i.PSYCHIC,[[T.PLAINS,4],[T.PLAINS,7]]],[e.KYOGRE,i.WATER,-1,[[T.SEABED,8]]],[e.GROUDON,i.GROUND,-1,[[T.BADLANDS,8]]],[e.RAYQUAZA,i.DRAGON,i.FLYING,[[T.SPACE,8]]],[e.JIRACHI,i.STEEL,i.PSYCHIC,[]],[e.DEOXYS,i.PSYCHIC,-1,[]],[e.TURTWIG,i.GRASS,-1,[[T.GRASS,2]]],[e.GROTLE,i.GRASS,-1,[[T.GRASS,2]]],[e.TORTERRA,i.GRASS,i.GROUND,[[T.GRASS,2],[T.GRASS,6]]],[e.CHIMCHAR,i.FIRE,-1,[[T.VOLCANO,2]]],[e.MONFERNO,i.FIRE,i.FIGHTING,[[T.VOLCANO,2]]],[e.INFERNAPE,i.FIRE,i.FIGHTING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.PIPLUP,i.WATER,-1,[[T.SEA,2]]],[e.PRINPLUP,i.WATER,-1,[[T.SEA,2]]],[e.EMPOLEON,i.WATER,i.STEEL,[[T.SEA,2],[T.SEA,6]]],[e.STARLY,i.NORMAL,i.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.STARAVIA,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.STARAPTOR,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BIDOOF,i.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0]]],[e.BIBAREL,i.NORMAL,i.WATER,[[T.PLAINS,0],[T.PLAINS,5]]],[e.KRICKETOT,i.BUG,-1,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]]]],[e.KRICKETUNE,i.BUG,-1,[[T.TALL_GRASS,0,[S.DUSK,S.NIGHT]],[T.TALL_GRASS,5,[S.DUSK,S.NIGHT]]]],[e.SHINX,i.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0]]],[e.LUXIO,i.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0]]],[e.LUXRAY,i.ELECTRIC,-1,[[T.PLAINS,2,[S.DUSK,S.NIGHT]],[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.BUDEW,i.GRASS,i.POISON,[]],[e.ROSERADE,i.GRASS,i.POISON,[[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.CRANIDOS,i.ROCK,-1,[[T.MOUNTAIN,3]]],[e.RAMPARDOS,i.ROCK,-1,[[T.MOUNTAIN,3],[T.MOUNTAIN,6]]],[e.SHIELDON,i.ROCK,i.STEEL,[[T.MOUNTAIN,3]]],[e.BASTIODON,i.ROCK,i.STEEL,[[T.MOUNTAIN,3],[T.MOUNTAIN,6]]],[e.BURMY,i.BUG,-1,[[T.FOREST,1],[T.BEACH,1],[T.SLUM,1]]],[e.WORMADAM,i.BUG,i.GRASS,[[T.FOREST,1],[T.FOREST,5],[T.BEACH,1],[T.BEACH,5],[T.SLUM,1],[T.SLUM,5]]],[e.MOTHIM,i.BUG,i.FLYING,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.COMBEE,i.BUG,i.FLYING,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.GRASS,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]],[T.JUNGLE,1,[S.DAWN,S.DAY]]]],[e.VESPIQUEN,i.BUG,i.FLYING,[[T.GRASS,1,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.PACHIRISU,i.ELECTRIC,-1,[[T.POWER_PLANT,1]]],[e.BUIZEL,i.WATER,-1,[[T.SEA,0]]],[e.FLOATZEL,i.WATER,-1,[[T.SEA,0],[T.SEA,5]]],[e.CHERUBI,i.GRASS,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.GRASS,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.CHERRIM,i.GRASS,-1,[[T.GRASS,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.SHELLOS,i.WATER,-1,[[T.SWAMP,0],[T.SEABED,1]]],[e.GASTRODON,i.WATER,i.GROUND,[[T.SWAMP,0],[T.SWAMP,5],[T.SEABED,1]]],[e.AMBIPOM,i.NORMAL,-1,[[T.JUNGLE,5]]],[e.DRIFLOON,i.GHOST,i.FLYING,[[T.GRAVEYARD,0]]],[e.DRIFBLIM,i.GHOST,i.FLYING,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.BUNEARY,i.NORMAL,-1,[[T.PLAINS,2]]],[e.LOPUNNY,i.NORMAL,-1,[[T.PLAINS,2],[T.PLAINS,5]]],[e.MISMAGIUS,i.GHOST,-1,[[T.GRAVEYARD,5]]],[e.HONCHKROW,i.DARK,i.FLYING,[[T.ABYSS,5]]],[e.GLAMEOW,i.NORMAL,-1,[[T.METROPOLIS,1],[T.MEADOW,1]]],[e.PURUGLY,i.NORMAL,-1,[[T.METROPOLIS,1],[T.MEADOW,1],[T.MEADOW,5]]],[e.CHINGLING,i.PSYCHIC,-1,[[T.TEMPLE,1]]],[e.STUNKY,i.POISON,i.DARK,[[T.SLUM,1,[S.DUSK,S.NIGHT]]]],[e.SKUNTANK,i.POISON,i.DARK,[[T.SLUM,1,[S.DUSK,S.NIGHT]],[T.SLUM,5,[S.DUSK,S.NIGHT]]]],[e.BRONZOR,i.STEEL,i.PSYCHIC,[[T.FACTORY,1],[T.SPACE,0],[T.LABORATORY,0]]],[e.BRONZONG,i.STEEL,i.PSYCHIC,[[T.FACTORY,1],[T.SPACE,0],[T.SPACE,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.BONSLY,i.ROCK,-1,[]],[e.MIME_JR,i.PSYCHIC,i.FAIRY,[]],[e.HAPPINY,i.NORMAL,-1,[]],[e.CHATOT,i.NORMAL,i.FLYING,[[T.JUNGLE,3]]],[e.SPIRITOMB,i.GHOST,i.DARK,[[T.GRAVEYARD,3],[T.ABYSS,2],[T.ABYSS,5]]],[e.GIBLE,i.DRAGON,i.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.GABITE,i.DRAGON,i.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.GARCHOMP,i.DRAGON,i.GROUND,[[T.MOUNTAIN,3],[T.WASTELAND,0],[T.WASTELAND,5]]],[e.MUNCHLAX,i.NORMAL,-1,[]],[e.RIOLU,i.FIGHTING,-1,[]],[e.LUCARIO,i.FIGHTING,i.STEEL,[[T.DOJO,2],[T.DOJO,5]]],[e.HIPPOPOTAS,i.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.HIPPOWDON,i.GROUND,-1,[[T.DESERT,0,[S.DAWN,S.DAY]],[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.SKORUPI,i.POISON,i.BUG,[[T.SWAMP,1],[T.DESERT,0],[T.TEMPLE,1]]],[e.DRAPION,i.POISON,i.DARK,[[T.SWAMP,1],[T.DESERT,0],[T.DESERT,5],[T.TEMPLE,1]]],[e.CROAGUNK,i.POISON,i.FIGHTING,[[T.SWAMP,1,[S.DUSK,S.NIGHT]],[T.DOJO,1]]],[e.TOXICROAK,i.POISON,i.FIGHTING,[[T.SWAMP,1,[S.DUSK,S.NIGHT]],[T.DOJO,1],[T.DOJO,5]]],[e.CARNIVINE,i.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,5]]],[e.FINNEON,i.WATER,-1,[[T.SEA,0,S.NIGHT]]],[e.LUMINEON,i.WATER,-1,[[T.SEA,0,S.NIGHT],[T.SEA,5,S.NIGHT]]],[e.MANTYKE,i.WATER,i.FLYING,[[T.SEABED,2]]],[e.SNOVER,i.GRASS,i.ICE,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[e.ABOMASNOW,i.GRASS,i.ICE,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0],[T.SNOWY_FOREST,5]]],[e.WEAVILE,i.DARK,i.ICE,[[T.ICE_CAVE,5]]],[e.MAGNEZONE,i.ELECTRIC,i.STEEL,[[T.POWER_PLANT,5],[T.LABORATORY,5]]],[e.LICKILICKY,i.NORMAL,-1,[[T.PLAINS,6]]],[e.RHYPERIOR,i.GROUND,i.ROCK,[[T.BADLANDS,5]]],[e.TANGROWTH,i.GRASS,-1,[[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.ELECTIVIRE,i.ELECTRIC,-1,[[T.POWER_PLANT,5]]],[e.MAGMORTAR,i.FIRE,-1,[[T.VOLCANO,5]]],[e.TOGEKISS,i.FAIRY,i.FLYING,[[T.FAIRY_CAVE,5]]],[e.YANMEGA,i.BUG,i.FLYING,[[T.JUNGLE,5]]],[e.LEAFEON,i.GRASS,-1,[[T.JUNGLE,6]]],[e.GLACEON,i.ICE,-1,[[T.ICE_CAVE,6]]],[e.GLISCOR,i.GROUND,i.FLYING,[[T.BADLANDS,5]]],[e.MAMOSWINE,i.ICE,i.GROUND,[[T.ICE_CAVE,5]]],[e.PORYGON_Z,i.NORMAL,-1,[[T.SPACE,6],[T.LABORATORY,5]]],[e.GALLADE,i.PSYCHIC,i.FIGHTING,[[T.DOJO,3],[T.DOJO,6]]],[e.PROBOPASS,i.ROCK,i.STEEL,[[T.CAVE,5]]],[e.DUSKNOIR,i.GHOST,-1,[[T.GRAVEYARD,5]]],[e.FROSLASS,i.ICE,i.GHOST,[[T.ICE_CAVE,2],[T.ICE_CAVE,5]]],[e.ROTOM,i.ELECTRIC,i.GHOST,[[T.LABORATORY,3],[T.LABORATORY,7],[T.VOLCANO,3],[T.VOLCANO,7],[T.SEA,3],[T.SEA,7],[T.ICE_CAVE,3],[T.ICE_CAVE,7],[T.MOUNTAIN,3],[T.MOUNTAIN,7],[T.TALL_GRASS,3],[T.TALL_GRASS,7]]],[e.UXIE,i.PSYCHIC,-1,[[T.CAVE,4],[T.CAVE,7]]],[e.MESPRIT,i.PSYCHIC,-1,[[T.LAKE,4],[T.LAKE,7]]],[e.AZELF,i.PSYCHIC,-1,[[T.SWAMP,4],[T.SWAMP,7]]],[e.DIALGA,i.STEEL,i.DRAGON,[[T.WASTELAND,8]]],[e.PALKIA,i.WATER,i.DRAGON,[[T.ABYSS,8]]],[e.HEATRAN,i.FIRE,i.STEEL,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.REGIGIGAS,i.NORMAL,-1,[[T.TEMPLE,8]]],[e.GIRATINA,i.GHOST,i.DRAGON,[[T.GRAVEYARD,8]]],[e.CRESSELIA,i.PSYCHIC,-1,[[T.BEACH,4],[T.BEACH,7]]],[e.PHIONE,i.WATER,-1,[]],[e.MANAPHY,i.WATER,-1,[]],[e.DARKRAI,i.DARK,-1,[[T.ABYSS,4],[T.ABYSS,7]]],[e.SHAYMIN,i.GRASS,-1,[[T.MEADOW,8]]],[e.ARCEUS,i.NORMAL,-1,[]],[e.VICTINI,i.PSYCHIC,i.FIRE,[]],[e.SNIVY,i.GRASS,-1,[[T.JUNGLE,2]]],[e.SERVINE,i.GRASS,-1,[[T.JUNGLE,2]]],[e.SERPERIOR,i.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.TEPIG,i.FIRE,-1,[[T.VOLCANO,2]]],[e.PIGNITE,i.FIRE,i.FIGHTING,[[T.VOLCANO,2]]],[e.EMBOAR,i.FIRE,i.FIGHTING,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.OSHAWOTT,i.WATER,-1,[[T.LAKE,2]]],[e.DEWOTT,i.WATER,-1,[[T.LAKE,2]]],[e.SAMUROTT,i.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.PATRAT,i.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.METROPOLIS,1,[S.DAWN,S.DAY]],[T.METROPOLIS,0,[S.DUSK,S.NIGHT]],[T.SLUM,0,[S.DUSK,S.NIGHT]]]],[e.WATCHOG,i.NORMAL,-1,[[T.METROPOLIS,1,[S.DAWN,S.DAY]],[T.METROPOLIS,0,[S.DUSK,S.NIGHT]],[T.SLUM,0,[S.DUSK,S.NIGHT]],[T.SLUM,5,[S.DUSK,S.NIGHT]]]],[e.LILLIPUP,i.NORMAL,-1,[[T.TOWN,0],[T.METROPOLIS,0]]],[e.HERDIER,i.NORMAL,-1,[[T.METROPOLIS,0]]],[e.STOUTLAND,i.NORMAL,-1,[[T.METROPOLIS,0],[T.METROPOLIS,5]]],[e.PURRLOIN,i.DARK,-1,[[T.TOWN,0,[S.DUSK,S.NIGHT]],[T.ABYSS,0],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.LIEPARD,i.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.PANSAGE,i.GRASS,-1,[[T.FOREST,1],[T.JUNGLE,1]]],[e.SIMISAGE,i.GRASS,-1,[[T.FOREST,1],[T.FOREST,5],[T.JUNGLE,1]]],[e.PANSEAR,i.FIRE,-1,[[T.VOLCANO,1],[T.JUNGLE,1]]],[e.SIMISEAR,i.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5],[T.JUNGLE,1]]],[e.PANPOUR,i.WATER,-1,[[T.SEA,1],[T.JUNGLE,1]]],[e.SIMIPOUR,i.WATER,-1,[[T.SEA,1],[T.SEA,5],[T.JUNGLE,1]]],[e.MUNNA,i.PSYCHIC,-1,[[T.SPACE,0]]],[e.MUSHARNA,i.PSYCHIC,-1,[[T.SPACE,0],[T.SPACE,5]]],[e.PIDOVE,i.NORMAL,i.FLYING,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.TRANQUILL,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.UNFEZANT,i.NORMAL,i.FLYING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BLITZLE,i.ELECTRIC,-1,[[T.MEADOW,0],[T.JUNGLE,0]]],[e.ZEBSTRIKA,i.ELECTRIC,-1,[[T.MEADOW,0],[T.MEADOW,5],[T.JUNGLE,0]]],[e.ROGGENROLA,i.ROCK,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.BADLANDS,1],[T.CAVE,0]]],[e.BOLDORE,i.ROCK,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,0,[S.DUSK,S.NIGHT]],[T.BADLANDS,1],[T.CAVE,0]]],[e.GIGALITH,i.ROCK,-1,[[T.CAVE,5]]],[e.WOOBAT,i.PSYCHIC,i.FLYING,[[T.CAVE,0]]],[e.SWOOBAT,i.PSYCHIC,i.FLYING,[[T.CAVE,0],[T.CAVE,5]]],[e.DRILBUR,i.GROUND,-1,[[T.BADLANDS,0],[T.CONSTRUCTION_SITE,0]]],[e.EXCADRILL,i.GROUND,i.STEEL,[[T.BADLANDS,0],[T.BADLANDS,5],[T.CONSTRUCTION_SITE,0]]],[e.AUDINO,i.NORMAL,-1,[[T.FAIRY_CAVE,2],[T.FAIRY_CAVE,5]]],[e.TIMBURR,i.FIGHTING,-1,[[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.GURDURR,i.FIGHTING,-1,[[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[e.CONKELDURR,i.FIGHTING,-1,[[T.CONSTRUCTION_SITE,5]]],[e.TYMPOLE,i.WATER,-1,[[T.SWAMP,0]]],[e.PALPITOAD,i.WATER,i.GROUND,[[T.SWAMP,0]]],[e.SEISMITOAD,i.WATER,i.GROUND,[[T.SWAMP,0],[T.SWAMP,5]]],[e.THROH,i.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5]]],[e.SAWK,i.FIGHTING,-1,[[T.DOJO,2],[T.DOJO,5]]],[e.SEWADDLE,i.BUG,i.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.SWADLOON,i.BUG,i.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]]]],[e.LEAVANNY,i.BUG,i.GRASS,[[T.FOREST,1,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.VENIPEDE,i.BUG,i.POISON,[[T.TOWN,1,[S.DUSK,S.NIGHT]],[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.WHIRLIPEDE,i.BUG,i.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]]]],[e.SCOLIPEDE,i.BUG,i.POISON,[[T.FOREST,0,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.COTTONEE,i.GRASS,i.FAIRY,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.GRASS,0,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.WHIMSICOTT,i.GRASS,i.FAIRY,[[T.GRASS,5,[S.DAWN,S.DAY]]]],[e.PETILIL,i.GRASS,-1,[[T.GRASS,0,[S.DAWN,S.DAY]],[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.LILLIGANT,i.GRASS,-1,[[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.BASCULIN,i.WATER,-1,[[T.SEABED,0]]],[e.SANDILE,i.GROUND,i.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.KROKOROK,i.GROUND,i.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]]]],[e.KROOKODILE,i.GROUND,i.DARK,[[T.DESERT,1,[S.DAWN,S.DAY]],[T.DESERT,0,[S.DUSK,S.NIGHT]],[T.DESERT,5,[S.DUSK,S.NIGHT]]]],[e.DARUMAKA,i.FIRE,-1,[[T.DESERT,2]]],[e.DARMANITAN,i.FIRE,-1,[[T.DESERT,2],[T.DESERT,5]]],[e.MARACTUS,i.GRASS,-1,[[T.DESERT,1],[T.DESERT,5]]],[e.DWEBBLE,i.BUG,i.ROCK,[[T.BEACH,0]]],[e.CRUSTLE,i.BUG,i.ROCK,[[T.BEACH,0],[T.BEACH,5]]],[e.SCRAGGY,i.DARK,i.FIGHTING,[[T.DOJO,1],[T.CONSTRUCTION_SITE,1]]],[e.SCRAFTY,i.DARK,i.FIGHTING,[[T.DOJO,1],[T.DOJO,5],[T.CONSTRUCTION_SITE,1]]],[e.SIGILYPH,i.PSYCHIC,i.FLYING,[[T.RUINS,1],[T.RUINS,5],[T.SPACE,2]]],[e.YAMASK,i.GHOST,-1,[[T.GRAVEYARD,1],[T.TEMPLE,0]]],[e.COFAGRIGUS,i.GHOST,-1,[[T.GRAVEYARD,1],[T.TEMPLE,0],[T.TEMPLE,5]]],[e.TIRTOUGA,i.WATER,i.ROCK,[[T.SEA,3],[T.BEACH,3]]],[e.CARRACOSTA,i.WATER,i.ROCK,[[T.SEA,3],[T.BEACH,3],[T.BEACH,6]]],[e.ARCHEN,i.ROCK,i.FLYING,[[T.RUINS,3]]],[e.ARCHEOPS,i.ROCK,i.FLYING,[[T.MOUNTAIN,3],[T.RUINS,3],[T.RUINS,6]]],[e.TRUBBISH,i.POISON,-1,[[T.SLUM,0]]],[e.GARBODOR,i.POISON,-1,[[T.SLUM,0],[T.SLUM,5]]],[e.ZORUA,i.DARK,-1,[[T.ABYSS,2]]],[e.ZOROARK,i.DARK,-1,[[T.ABYSS,2],[T.ABYSS,5]]],[e.MINCCINO,i.NORMAL,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.MEADOW,0,[S.DAWN,S.DAY]]]],[e.CINCCINO,i.NORMAL,-1,[[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.GOTHITA,i.PSYCHIC,-1,[[T.RUINS,2]]],[e.GOTHORITA,i.PSYCHIC,-1,[[T.RUINS,2]]],[e.GOTHITELLE,i.PSYCHIC,-1,[[T.RUINS,2],[T.RUINS,5]]],[e.SOLOSIS,i.PSYCHIC,-1,[[T.SPACE,2],[T.LABORATORY,1]]],[e.DUOSION,i.PSYCHIC,-1,[[T.SPACE,2],[T.LABORATORY,1]]],[e.REUNICLUS,i.PSYCHIC,-1,[[T.SPACE,2],[T.SPACE,5],[T.LABORATORY,1],[T.LABORATORY,5]]],[e.DUCKLETT,i.WATER,i.FLYING,[[T.LAKE,0,[S.DAWN,S.DAY]]]],[e.SWANNA,i.WATER,i.FLYING,[[T.LAKE,0,[S.DAWN,S.DAY]],[T.LAKE,5,[S.DAWN,S.DAY]]]],[e.VANILLITE,i.ICE,-1,[[T.ICE_CAVE,0]]],[e.VANILLISH,i.ICE,-1,[[T.ICE_CAVE,0]]],[e.VANILLUXE,i.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.DEERLING,i.NORMAL,i.GRASS,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.SAWSBUCK,i.NORMAL,i.GRASS,[[T.FOREST,0,[S.DAWN,S.DAY]],[T.FOREST,5,[S.DAWN,S.DAY]]]],[e.EMOLGA,i.ELECTRIC,i.FLYING,[[T.POWER_PLANT,1]]],[e.KARRABLAST,i.BUG,-1,[[T.FOREST,2]]],[e.ESCAVALIER,i.BUG,i.STEEL,[[T.FOREST,6]]],[e.FOONGUS,i.GRASS,i.POISON,[[T.GRASS,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,2,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]]]],[e.AMOONGUSS,i.GRASS,i.POISON,[[T.GRASS,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,2,[S.DAWN,S.DAY]],[T.JUNGLE,0,[S.DUSK,S.NIGHT]],[T.JUNGLE,6,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.FRILLISH,i.WATER,i.GHOST,[[T.SEABED,0]]],[e.JELLICENT,i.WATER,i.GHOST,[[T.SEABED,0],[T.SEABED,5]]],[e.ALOMOMOLA,i.WATER,-1,[[T.SEABED,2],[T.SEABED,5]]],[e.JOLTIK,i.BUG,i.ELECTRIC,[[T.JUNGLE,1]]],[e.GALVANTULA,i.BUG,i.ELECTRIC,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.FERROSEED,i.GRASS,i.STEEL,[[T.CAVE,2]]],[e.FERROTHORN,i.GRASS,i.STEEL,[[T.CAVE,2],[T.CAVE,6]]],[e.KLINK,i.STEEL,-1,[[T.FACTORY,0],[T.LABORATORY,0]]],[e.KLANG,i.STEEL,-1,[[T.FACTORY,0],[T.LABORATORY,0]]],[e.KLINKLANG,i.STEEL,-1,[[T.FACTORY,0],[T.FACTORY,5],[T.LABORATORY,0],[T.LABORATORY,5]]],[e.TYNAMO,i.ELECTRIC,-1,[[T.SEABED,2]]],[e.EELEKTRIK,i.ELECTRIC,-1,[[T.SEABED,2]]],[e.EELEKTROSS,i.ELECTRIC,-1,[[T.SEABED,6]]],[e.ELGYEM,i.PSYCHIC,-1,[[T.RUINS,0],[T.SPACE,1]]],[e.BEHEEYEM,i.PSYCHIC,-1,[[T.RUINS,0],[T.RUINS,5],[T.SPACE,1]]],[e.LITWICK,i.GHOST,i.FIRE,[[T.GRAVEYARD,0],[T.TEMPLE,1]]],[e.LAMPENT,i.GHOST,i.FIRE,[[T.GRAVEYARD,0],[T.TEMPLE,1]]],[e.CHANDELURE,i.GHOST,i.FIRE,[[T.GRAVEYARD,5]]],[e.AXEW,i.DRAGON,-1,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.FRAXURE,i.DRAGON,-1,[[T.MOUNTAIN,3],[T.WASTELAND,0]]],[e.HAXORUS,i.DRAGON,-1,[[T.WASTELAND,0],[T.WASTELAND,5]]],[e.CUBCHOO,i.ICE,-1,[[T.ICE_CAVE,0]]],[e.BEARTIC,i.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.CRYOGONAL,i.ICE,-1,[[T.ICE_CAVE,2],[T.ICE_CAVE,5]]],[e.SHELMET,i.BUG,-1,[[T.FOREST,2]]],[e.ACCELGOR,i.BUG,-1,[[T.FOREST,6]]],[e.STUNFISK,i.GROUND,i.ELECTRIC,[[T.SWAMP,1],[T.SWAMP,5]]],[e.MIENFOO,i.FIGHTING,-1,[[T.DOJO,1]]],[e.MIENSHAO,i.FIGHTING,-1,[[T.DOJO,1],[T.DOJO,5]]],[e.DRUDDIGON,i.DRAGON,-1,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.GOLETT,i.GROUND,i.GHOST,[[T.TEMPLE,0]]],[e.GOLURK,i.GROUND,i.GHOST,[[T.TEMPLE,0],[T.TEMPLE,5]]],[e.PAWNIARD,i.DARK,i.STEEL,[[T.ABYSS,0]]],[e.BISHARP,i.DARK,i.STEEL,[[T.ABYSS,0]]],[e.BOUFFALANT,i.NORMAL,-1,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.RUFFLET,i.NORMAL,i.FLYING,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.BRAVIARY,i.NORMAL,i.FLYING,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.VULLABY,i.DARK,i.FLYING,[[T.MOUNTAIN,1,[S.DUSK,S.NIGHT]]]],[e.MANDIBUZZ,i.DARK,i.FLYING,[[T.MOUNTAIN,1,[S.DUSK,S.NIGHT]],[T.MOUNTAIN,5,[S.DUSK,S.NIGHT]]]],[e.HEATMOR,i.FIRE,-1,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.DURANT,i.BUG,i.STEEL,[[T.FOREST,3],[T.FOREST,6]]],[e.DEINO,i.DARK,i.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2]]],[e.ZWEILOUS,i.DARK,i.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2]]],[e.HYDREIGON,i.DARK,i.DRAGON,[[T.WASTELAND,1,[S.DUSK,S.NIGHT]],[T.ABYSS,2],[T.ABYSS,5]]],[e.LARVESTA,i.BUG,i.FIRE,[[T.VOLCANO,3]]],[e.VOLCARONA,i.BUG,i.FIRE,[[T.VOLCANO,3],[T.VOLCANO,6]]],[e.COBALION,i.STEEL,i.FIGHTING,[[T.CONSTRUCTION_SITE,4],[T.CONSTRUCTION_SITE,7]]],[e.TERRAKION,i.ROCK,i.FIGHTING,[[T.DOJO,4],[T.DOJO,7]]],[e.VIRIZION,i.GRASS,i.FIGHTING,[[T.GRASS,4],[T.GRASS,7]]],[e.TORNADUS,i.FLYING,-1,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.THUNDURUS,i.ELECTRIC,i.FLYING,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.RESHIRAM,i.DRAGON,i.FIRE,[[T.VOLCANO,8]]],[e.ZEKROM,i.DRAGON,i.ELECTRIC,[[T.POWER_PLANT,8]]],[e.LANDORUS,i.GROUND,i.FLYING,[[T.BADLANDS,4],[T.BADLANDS,7]]],[e.KYUREM,i.DRAGON,i.ICE,[[T.ICE_CAVE,8]]],[e.KELDEO,i.WATER,i.FIGHTING,[[T.BEACH,4],[T.BEACH,7]]],[e.MELOETTA,i.NORMAL,i.PSYCHIC,[[T.MEADOW,4],[T.MEADOW,7]]],[e.GENESECT,i.BUG,i.STEEL,[[T.FACTORY,4],[T.FACTORY,7]]],[e.CHESPIN,i.GRASS,-1,[[T.FOREST,2]]],[e.QUILLADIN,i.GRASS,-1,[[T.FOREST,2]]],[e.CHESNAUGHT,i.GRASS,i.FIGHTING,[[T.FOREST,2],[T.FOREST,6]]],[e.FENNEKIN,i.FIRE,-1,[[T.VOLCANO,2]]],[e.BRAIXEN,i.FIRE,-1,[[T.VOLCANO,2]]],[e.DELPHOX,i.FIRE,i.PSYCHIC,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.FROAKIE,i.WATER,-1,[[T.LAKE,2]]],[e.FROGADIER,i.WATER,-1,[[T.LAKE,2]]],[e.GRENINJA,i.WATER,i.DARK,[[T.LAKE,2],[T.LAKE,6]]],[e.BUNNELBY,i.NORMAL,-1,[[T.CAVE,0]]],[e.DIGGERSBY,i.NORMAL,i.GROUND,[[T.CAVE,0],[T.CAVE,5]]],[e.FLETCHLING,i.NORMAL,i.FLYING,[[T.TOWN,0],[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.FLETCHINDER,i.FIRE,i.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]]]],[e.TALONFLAME,i.FIRE,i.FLYING,[[T.PLAINS,1],[T.MOUNTAIN,0,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.SCATTERBUG,i.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.SPEWPA,i.BUG,-1,[[T.TOWN,0,[S.DAWN,S.DAY]]]],[e.VIVILLON,i.BUG,i.FLYING,[[T.FOREST,0,[S.DAWN,S.DAY]]]],[e.LITLEO,i.FIRE,i.NORMAL,[[T.JUNGLE,1]]],[e.PYROAR,i.FIRE,i.NORMAL,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.FLABEBE,i.FAIRY,-1,[[T.MEADOW,0]]],[e.FLOETTE,i.FAIRY,-1,[[T.MEADOW,0]]],[e.FLORGES,i.FAIRY,-1,[[T.MEADOW,5]]],[e.SKIDDO,i.GRASS,-1,[[T.MOUNTAIN,0]]],[e.GOGOAT,i.GRASS,-1,[[T.MOUNTAIN,0],[T.MOUNTAIN,5]]],[e.PANCHAM,i.FIGHTING,-1,[[T.DOJO,2],[T.JUNGLE,1,[S.DUSK,S.NIGHT]]]],[e.PANGORO,i.FIGHTING,i.DARK,[[T.DOJO,2],[T.DOJO,6],[T.JUNGLE,1,[S.DUSK,S.NIGHT]],[T.JUNGLE,5,[S.DUSK,S.NIGHT]]]],[e.FURFROU,i.NORMAL,-1,[[T.METROPOLIS,1],[T.METROPOLIS,5]]],[e.ESPURR,i.PSYCHIC,-1,[[T.METROPOLIS,1,[S.DUSK,S.NIGHT]]]],[e.MEOWSTIC,i.PSYCHIC,-1,[[T.METROPOLIS,1,[S.DUSK,S.NIGHT]],[T.METROPOLIS,5,[S.DUSK,S.NIGHT]]]],[e.HONEDGE,i.STEEL,i.GHOST,[[T.TEMPLE,0]]],[e.DOUBLADE,i.STEEL,i.GHOST,[[T.TEMPLE,0]]],[e.AEGISLASH,i.STEEL,i.GHOST,[[T.TEMPLE,5]]],[e.SPRITZEE,i.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.AROMATISSE,i.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.SWIRLIX,i.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.SLURPUFF,i.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.INKAY,i.DARK,i.PSYCHIC,[[T.SEA,0,[S.DUSK,S.NIGHT]]]],[e.MALAMAR,i.DARK,i.PSYCHIC,[[T.SEA,0,[S.DUSK,S.NIGHT]],[T.SEA,5,[S.DUSK,S.NIGHT]]]],[e.BINACLE,i.ROCK,i.WATER,[[T.BEACH,0]]],[e.BARBARACLE,i.ROCK,i.WATER,[[T.BEACH,0],[T.BEACH,5]]],[e.SKRELP,i.POISON,i.WATER,[[T.SEABED,1]]],[e.DRAGALGE,i.POISON,i.DRAGON,[[T.SEABED,1],[T.SEABED,5]]],[e.CLAUNCHER,i.WATER,-1,[[T.BEACH,1]]],[e.CLAWITZER,i.WATER,-1,[[T.BEACH,1],[T.BEACH,5]]],[e.HELIOPTILE,i.ELECTRIC,i.NORMAL,[[T.DESERT,1,[S.DAWN,S.DAY]]]],[e.HELIOLISK,i.ELECTRIC,i.NORMAL,[[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.TYRUNT,i.ROCK,i.DRAGON,[[T.WASTELAND,3]]],[e.TYRANTRUM,i.ROCK,i.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.AMAURA,i.ROCK,i.ICE,[[T.ICE_CAVE,3]]],[e.AURORUS,i.ROCK,i.ICE,[[T.ICE_CAVE,3],[T.ICE_CAVE,6]]],[e.SYLVEON,i.FAIRY,-1,[[T.MEADOW,3],[T.MEADOW,6]]],[e.HAWLUCHA,i.FIGHTING,i.FLYING,[[T.MOUNTAIN,2],[T.MOUNTAIN,6]]],[e.DEDENNE,i.ELECTRIC,i.FAIRY,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.CARBINK,i.ROCK,i.FAIRY,[[T.CAVE,2],[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.GOOMY,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.SLIGGOO,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.GOODRA,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.KLEFKI,i.STEEL,i.FAIRY,[[T.FACTORY,1],[T.FACTORY,5]]],[e.PHANTUMP,i.GHOST,i.GRASS,[[T.GRAVEYARD,0]]],[e.TREVENANT,i.GHOST,i.GRASS,[[T.GRAVEYARD,5]]],[e.PUMPKABOO,i.GHOST,i.GRASS,[[T.GRAVEYARD,0]]],[e.GOURGEIST,i.GHOST,i.GRASS,[[T.GRAVEYARD,5]]],[e.BERGMITE,i.ICE,-1,[[T.ICE_CAVE,0]]],[e.AVALUGG,i.ICE,-1,[[T.ICE_CAVE,0],[T.ICE_CAVE,5]]],[e.NOIBAT,i.FLYING,i.DRAGON,[[T.CAVE,1]]],[e.NOIVERN,i.FLYING,i.DRAGON,[[T.CAVE,1],[T.CAVE,5]]],[e.XERNEAS,i.FAIRY,-1,[[T.FAIRY_CAVE,8]]],[e.YVELTAL,i.DARK,i.FLYING,[[T.ABYSS,8]]],[e.ZYGARDE,i.DRAGON,i.GROUND,[[T.LABORATORY,7]]],[e.DIANCIE,i.ROCK,i.FAIRY,[[T.FAIRY_CAVE,4],[T.FAIRY_CAVE,7]]],[e.HOOPA,i.PSYCHIC,i.GHOST,[[T.TEMPLE,4],[T.TEMPLE,7]]],[e.VOLCANION,i.FIRE,i.WATER,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.ROWLET,i.GRASS,i.FLYING,[[T.FOREST,2]]],[e.DARTRIX,i.GRASS,i.FLYING,[[T.FOREST,2]]],[e.DECIDUEYE,i.GRASS,i.GHOST,[[T.FOREST,2],[T.FOREST,6]]],[e.LITTEN,i.FIRE,-1,[[T.VOLCANO,2]]],[e.TORRACAT,i.FIRE,-1,[[T.VOLCANO,2]]],[e.INCINEROAR,i.FIRE,i.DARK,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.POPPLIO,i.WATER,-1,[[T.SEA,2]]],[e.BRIONNE,i.WATER,-1,[[T.SEA,2]]],[e.PRIMARINA,i.WATER,i.FAIRY,[[T.SEA,2],[T.SEA,6]]],[e.PIKIPEK,i.NORMAL,i.FLYING,[[T.JUNGLE,0]]],[e.TRUMBEAK,i.NORMAL,i.FLYING,[[T.JUNGLE,0]]],[e.TOUCANNON,i.NORMAL,i.FLYING,[[T.JUNGLE,0],[T.JUNGLE,5]]],[e.YUNGOOS,i.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.GUMSHOOS,i.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.GRUBBIN,i.BUG,-1,[[T.POWER_PLANT,0]]],[e.CHARJABUG,i.BUG,i.ELECTRIC,[[T.POWER_PLANT,0]]],[e.VIKAVOLT,i.BUG,i.ELECTRIC,[[T.POWER_PLANT,5]]],[e.CRABRAWLER,i.FIGHTING,-1,[[T.ICE_CAVE,0]]],[e.CRABOMINABLE,i.FIGHTING,i.ICE,[[T.ICE_CAVE,5]]],[e.ORICORIO,i.FIRE,i.FLYING,[[T.MEADOW,1],[T.ISLAND,0],[T.ISLAND,5]]],[e.CUTIEFLY,i.BUG,i.FAIRY,[[T.MEADOW,0],[T.FAIRY_CAVE,0]]],[e.RIBOMBEE,i.BUG,i.FAIRY,[[T.MEADOW,0],[T.MEADOW,5],[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.ROCKRUFF,i.ROCK,-1,[[T.PLAINS,1,S.DAY],[T.FOREST,1,S.NIGHT],[T.CAVE,1,S.DUSK]]],[e.LYCANROC,i.ROCK,-1,[[T.PLAINS,1,S.DAY],[T.PLAINS,6,S.DAY],[T.FOREST,1,S.NIGHT],[T.FOREST,6,S.NIGHT],[T.CAVE,1,S.DUSK],[T.CAVE,6,S.DUSK]]],[e.WISHIWASHI,i.WATER,-1,[[T.LAKE,1],[T.LAKE,5]]],[e.MAREANIE,i.POISON,i.WATER,[[T.BEACH,0],[T.SWAMP,1]]],[e.TOXAPEX,i.POISON,i.WATER,[[T.BEACH,0],[T.BEACH,5],[T.SWAMP,1],[T.SWAMP,5]]],[e.MUDBRAY,i.GROUND,-1,[[T.BADLANDS,0]]],[e.MUDSDALE,i.GROUND,-1,[[T.BADLANDS,0],[T.BADLANDS,5]]],[e.DEWPIDER,i.WATER,i.BUG,[[T.LAKE,1,[S.DAWN,S.DAY]]]],[e.ARAQUANID,i.WATER,i.BUG,[[T.LAKE,1,[S.DAWN,S.DAY]],[T.LAKE,5,[S.DAWN,S.DAY]]]],[e.FOMANTIS,i.GRASS,-1,[[T.TALL_GRASS,0],[T.JUNGLE,1]]],[e.LURANTIS,i.GRASS,-1,[[T.TALL_GRASS,0],[T.TALL_GRASS,5],[T.JUNGLE,1],[T.JUNGLE,5]]],[e.MORELULL,i.GRASS,i.FAIRY,[[T.FAIRY_CAVE,0]]],[e.SHIINOTIC,i.GRASS,i.FAIRY,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.SALANDIT,i.POISON,i.FIRE,[[T.VOLCANO,0]]],[e.SALAZZLE,i.POISON,i.FIRE,[[T.VOLCANO,0],[T.VOLCANO,5]]],[e.STUFFUL,i.NORMAL,i.FIGHTING,[[T.DOJO,0]]],[e.BEWEAR,i.NORMAL,i.FIGHTING,[[T.DOJO,0],[T.DOJO,5]]],[e.BOUNSWEET,i.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]]]],[e.STEENEE,i.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]]]],[e.TSAREENA,i.GRASS,-1,[[T.TALL_GRASS,0,[S.DAWN,S.DAY]],[T.TALL_GRASS,5,[S.DAWN,S.DAY]]]],[e.COMFEY,i.FAIRY,-1,[[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.ORANGURU,i.NORMAL,i.PSYCHIC,[[T.JUNGLE,2,[S.DUSK,S.NIGHT]]]],[e.PASSIMIAN,i.FIGHTING,-1,[[T.JUNGLE,2,[S.DAWN,S.DAY]]]],[e.WIMPOD,i.BUG,i.WATER,[[T.CAVE,1]]],[e.GOLISOPOD,i.BUG,i.WATER,[[T.CAVE,1],[T.CAVE,5]]],[e.SANDYGAST,i.GHOST,i.GROUND,[[T.BEACH,1]]],[e.PALOSSAND,i.GHOST,i.GROUND,[[T.BEACH,1],[T.BEACH,5]]],[e.PYUKUMUKU,i.WATER,-1,[[T.SEABED,3],[T.SEABED,6]]],[e.TYPE_NULL,i.NORMAL,-1,[[T.LABORATORY,4]]],[e.SILVALLY,i.NORMAL,-1,[[T.LABORATORY,7]]],[e.MINIOR,i.ROCK,i.FLYING,[[T.SPACE,0],[T.SPACE,5]]],[e.KOMALA,i.NORMAL,-1,[[T.JUNGLE,1,[S.DAWN,S.DAY]],[T.JUNGLE,5,[S.DAWN,S.DAY]]]],[e.TURTONATOR,i.FIRE,i.DRAGON,[[T.VOLCANO,1],[T.VOLCANO,5]]],[e.TOGEDEMARU,i.ELECTRIC,i.STEEL,[[T.POWER_PLANT,1],[T.POWER_PLANT,5]]],[e.MIMIKYU,i.GHOST,i.FAIRY,[[T.GRAVEYARD,2],[T.GRAVEYARD,5]]],[e.BRUXISH,i.WATER,i.PSYCHIC,[[T.ISLAND,1],[T.ISLAND,5]]],[e.DRAMPA,i.NORMAL,i.DRAGON,[[T.WASTELAND,1],[T.WASTELAND,5]]],[e.DHELMISE,i.GHOST,i.GRASS,[[T.SEABED,2],[T.SEABED,6]]],[e.JANGMO_O,i.DRAGON,-1,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.HAKAMO_O,i.DRAGON,i.FIGHTING,[[T.WASTELAND,0,[S.DAWN,S.DAY]]]],[e.KOMMO_O,i.DRAGON,i.FIGHTING,[[T.WASTELAND,0,[S.DAWN,S.DAY]],[T.WASTELAND,5,[S.DAWN,S.DAY]]]],[e.TAPU_KOKO,i.ELECTRIC,i.FAIRY,[[T.TEMPLE,4],[T.TEMPLE,7]]],[e.TAPU_LELE,i.PSYCHIC,i.FAIRY,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.TAPU_BULU,i.GRASS,i.FAIRY,[[T.DESERT,4],[T.DESERT,7]]],[e.TAPU_FINI,i.WATER,i.FAIRY,[[T.BEACH,4],[T.BEACH,7]]],[e.COSMOG,i.PSYCHIC,-1,[[T.SPACE,4]]],[e.COSMOEM,i.PSYCHIC,-1,[[T.SPACE,4]]],[e.SOLGALEO,i.PSYCHIC,i.STEEL,[[T.SPACE,8,S.DAY]]],[e.LUNALA,i.PSYCHIC,i.GHOST,[[T.SPACE,8,S.NIGHT]]],[e.NIHILEGO,i.ROCK,i.POISON,[[T.SEABED,4],[T.SEABED,7]]],[e.BUZZWOLE,i.BUG,i.FIGHTING,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.PHEROMOSA,i.BUG,i.FIGHTING,[[T.DESERT,4],[T.DESERT,7]]],[e.XURKITREE,i.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.CELESTEELA,i.STEEL,i.FLYING,[[T.SPACE,4],[T.SPACE,7]]],[e.KARTANA,i.GRASS,i.STEEL,[[T.FOREST,4],[T.FOREST,7]]],[e.GUZZLORD,i.DARK,i.DRAGON,[[T.SLUM,4],[T.SLUM,7]]],[e.NECROZMA,i.PSYCHIC,-1,[[T.SPACE,8]]],[e.MAGEARNA,i.STEEL,i.FAIRY,[[T.FACTORY,4],[T.FACTORY,7]]],[e.MARSHADOW,i.FIGHTING,i.GHOST,[[T.GRAVEYARD,4],[T.GRAVEYARD,7]]],[e.POIPOLE,i.POISON,-1,[[T.SWAMP,4]]],[e.NAGANADEL,i.POISON,i.DRAGON,[[T.SWAMP,7]]],[e.STAKATAKA,i.ROCK,i.STEEL,[[T.CONSTRUCTION_SITE,4],[T.CONSTRUCTION_SITE,7]]],[e.BLACEPHALON,i.FIRE,i.GHOST,[[T.ISLAND,4],[T.ISLAND,7]]],[e.ZERAORA,i.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.MELTAN,i.STEEL,-1,[]],[e.MELMETAL,i.STEEL,-1,[]],[e.GROOKEY,i.GRASS,-1,[[T.JUNGLE,2]]],[e.THWACKEY,i.GRASS,-1,[[T.JUNGLE,2]]],[e.RILLABOOM,i.GRASS,-1,[[T.JUNGLE,2],[T.JUNGLE,6]]],[e.SCORBUNNY,i.FIRE,-1,[[T.VOLCANO,2]]],[e.RABOOT,i.FIRE,-1,[[T.VOLCANO,2]]],[e.CINDERACE,i.FIRE,-1,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.SOBBLE,i.WATER,-1,[[T.LAKE,2]]],[e.DRIZZILE,i.WATER,-1,[[T.LAKE,2]]],[e.INTELEON,i.WATER,-1,[[T.LAKE,2],[T.LAKE,6]]],[e.SKWOVET,i.NORMAL,-1,[[T.TOWN,0,[S.DAWN,S.DAY]],[T.PLAINS,0,[S.DAWN,S.DAY]]]],[e.GREEDENT,i.NORMAL,-1,[[T.PLAINS,0,[S.DAWN,S.DAY]],[T.PLAINS,5,[S.DAWN,S.DAY]]]],[e.ROOKIDEE,i.FLYING,-1,[[T.TOWN,2],[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.CORVISQUIRE,i.FLYING,-1,[[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.CORVIKNIGHT,i.FLYING,i.STEEL,[[T.PLAINS,2],[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.BLIPBUG,i.BUG,-1,[[T.TOWN,0,[S.DUSK,S.NIGHT]]]],[e.DOTTLER,i.BUG,i.PSYCHIC,[[T.FOREST,1,[S.DUSK,S.NIGHT]]]],[e.ORBEETLE,i.BUG,i.PSYCHIC,[[T.FOREST,1,[S.DUSK,S.NIGHT]],[T.FOREST,5,[S.DUSK,S.NIGHT]]]],[e.NICKIT,i.DARK,-1,[[T.ABYSS,0]]],[e.THIEVUL,i.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5]]],[e.GOSSIFLEUR,i.GRASS,-1,[[T.MEADOW,0]]],[e.ELDEGOSS,i.GRASS,-1,[[T.MEADOW,0]]],[e.WOOLOO,i.NORMAL,-1,[[T.TOWN,0],[T.MEADOW,0]]],[e.DUBWOOL,i.NORMAL,-1,[[T.MEADOW,0],[T.MEADOW,5]]],[e.CHEWTLE,i.WATER,-1,[[T.LAKE,0]]],[e.DREDNAW,i.WATER,i.ROCK,[[T.LAKE,0],[T.LAKE,5]]],[e.YAMPER,i.ELECTRIC,-1,[[T.METROPOLIS,0,[S.DAWN,S.DAY]]]],[e.BOLTUND,i.ELECTRIC,-1,[[T.METROPOLIS,0,[S.DAWN,S.DAY]],[T.METROPOLIS,5,[S.DAWN,S.DAY]]]],[e.ROLYCOLY,i.ROCK,-1,[[T.VOLCANO,0]]],[e.CARKOL,i.ROCK,i.FIRE,[[T.VOLCANO,0]]],[e.COALOSSAL,i.ROCK,i.FIRE,[[T.VOLCANO,0],[T.VOLCANO,5]]],[e.APPLIN,i.GRASS,i.DRAGON,[[T.MEADOW,2]]],[e.FLAPPLE,i.GRASS,i.DRAGON,[[T.MEADOW,6]]],[e.APPLETUN,i.GRASS,i.DRAGON,[[T.MEADOW,6]]],[e.SILICOBRA,i.GROUND,-1,[[T.DESERT,0]]],[e.SANDACONDA,i.GROUND,-1,[[T.DESERT,0],[T.DESERT,5]]],[e.CRAMORANT,i.FLYING,i.WATER,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.ARROKUDA,i.WATER,-1,[[T.SEABED,0]]],[e.BARRASKEWDA,i.WATER,-1,[[T.SEABED,0],[T.SEABED,5]]],[e.TOXEL,i.ELECTRIC,i.POISON,[]],[e.TOXTRICITY,i.ELECTRIC,i.POISON,[[T.SLUM,2,[S.DUSK,S.NIGHT]],[T.SLUM,6,[S.DUSK,S.NIGHT]]]],[e.SIZZLIPEDE,i.FIRE,i.BUG,[[T.BADLANDS,1,[S.DAWN,S.DAY]]]],[e.CENTISKORCH,i.FIRE,i.BUG,[[T.BADLANDS,1,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.CLOBBOPUS,i.FIGHTING,-1,[[T.DOJO,0]]],[e.GRAPPLOCT,i.FIGHTING,-1,[[T.DOJO,0],[T.DOJO,5]]],[e.SINISTEA,i.GHOST,-1,[[T.GRAVEYARD,1]]],[e.POLTEAGEIST,i.GHOST,-1,[[T.GRAVEYARD,1],[T.GRAVEYARD,5]]],[e.HATENNA,i.PSYCHIC,-1,[[T.FAIRY_CAVE,1]]],[e.HATTREM,i.PSYCHIC,-1,[[T.FAIRY_CAVE,1]]],[e.HATTERENE,i.PSYCHIC,i.FAIRY,[[T.FAIRY_CAVE,1],[T.FAIRY_CAVE,5]]],[e.IMPIDIMP,i.DARK,i.FAIRY,[[T.ABYSS,0]]],[e.MORGREM,i.DARK,i.FAIRY,[[T.ABYSS,0]]],[e.GRIMMSNARL,i.DARK,i.FAIRY,[[T.ABYSS,0],[T.ABYSS,5]]],[e.OBSTAGOON,i.DARK,i.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]],[T.SLUM,6,[S.DUSK,S.NIGHT]]]],[e.PERRSERKER,i.STEEL,-1,[[T.CONSTRUCTION_SITE,2,S.DUSK],[T.CONSTRUCTION_SITE,6,S.DUSK]]],[e.CURSOLA,i.GHOST,-1,[[T.SEABED,3],[T.SEABED,6]]],[e.SIRFETCHD,i.FIGHTING,-1,[[T.DOJO,6]]],[e.MR_RIME,i.ICE,i.PSYCHIC,[[T.SNOWY_FOREST,3],[T.SNOWY_FOREST,6]]],[e.RUNERIGUS,i.GROUND,i.GHOST,[[T.RUINS,3,[S.DUSK,S.NIGHT]],[T.RUINS,6,[S.DUSK,S.NIGHT]]]],[e.MILCERY,i.FAIRY,-1,[[T.FAIRY_CAVE,0]]],[e.ALCREMIE,i.FAIRY,-1,[[T.FAIRY_CAVE,0],[T.FAIRY_CAVE,5]]],[e.FALINKS,i.FIGHTING,-1,[[T.JUNGLE,1],[T.JUNGLE,5]]],[e.PINCURCHIN,i.ELECTRIC,-1,[[T.SEABED,1]]],[e.SNOM,i.ICE,i.BUG,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]]]],[e.FROSMOTH,i.ICE,i.BUG,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,5,[S.DUSK,S.NIGHT]]]],[e.STONJOURNER,i.ROCK,-1,[[T.RUINS,2]]],[e.EISCUE,i.ICE,-1,[[T.ICE_CAVE,1],[T.SNOWY_FOREST,0]]],[e.INDEEDEE,i.PSYCHIC,i.NORMAL,[[T.METROPOLIS,1,[S.DAWN,S.DAY]]]],[e.MORPEKO,i.ELECTRIC,i.DARK,[[T.METROPOLIS,2,[S.DUSK,S.NIGHT]]]],[e.CUFANT,i.STEEL,-1,[[T.BADLANDS,1]]],[e.COPPERAJAH,i.STEEL,-1,[[T.BADLANDS,1],[T.BADLANDS,5]]],[e.DRACOZOLT,i.ELECTRIC,i.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.ARCTOZOLT,i.ELECTRIC,i.ICE,[[T.SNOWY_FOREST,3],[T.SNOWY_FOREST,6]]],[e.DRACOVISH,i.WATER,i.DRAGON,[[T.WASTELAND,3],[T.WASTELAND,6]]],[e.ARCTOVISH,i.WATER,i.ICE,[[T.SEABED,3],[T.SEABED,6]]],[e.DURALUDON,i.STEEL,i.DRAGON,[[T.CONSTRUCTION_SITE,2]]],[e.DREEPY,i.DRAGON,i.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]]]],[e.DRAKLOAK,i.DRAGON,i.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]]]],[e.DRAGAPULT,i.DRAGON,i.GHOST,[[T.WASTELAND,2,[S.DUSK,S.NIGHT]],[T.WASTELAND,5,[S.DUSK,S.NIGHT]]]],[e.ZACIAN,i.FAIRY,-1,[[T.SNOWY_FOREST,8]]],[e.ZAMAZENTA,i.FIGHTING,-1,[[T.DOJO,8]]],[e.ETERNATUS,i.POISON,i.DRAGON,[[T.END,5]]],[e.KUBFU,i.FIGHTING,-1,[[T.DOJO,4]]],[e.URSHIFU,i.FIGHTING,i.DARK,[[T.DOJO,7]]],[e.ZARUDE,i.DARK,i.GRASS,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.REGIELEKI,i.ELECTRIC,-1,[[T.POWER_PLANT,4],[T.POWER_PLANT,7]]],[e.REGIDRAGO,i.DRAGON,-1,[[T.WASTELAND,4],[T.WASTELAND,7]]],[e.GLASTRIER,i.ICE,-1,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,7]]],[e.SPECTRIER,i.GHOST,-1,[[T.GRAVEYARD,4],[T.GRAVEYARD,7]]],[e.CALYREX,i.PSYCHIC,i.GRASS,[[T.FOREST,8]]],[e.WYRDEER,i.NORMAL,i.PSYCHIC,[[T.SNOWY_FOREST,5,[S.DAWN,S.DAY]]]],[e.KLEAVOR,i.BUG,i.ROCK,[[T.JUNGLE,3],[T.JUNGLE,8]]],[e.URSALUNA,i.GROUND,i.NORMAL,[[T.SNOWY_FOREST,5]]],[e.BASCULEGION,i.WATER,i.GHOST,[[T.SEABED,6]]],[e.SNEASLER,i.FIGHTING,i.POISON,[[T.SNOWY_FOREST,6,[S.DAWN,S.DAY]]]],[e.OVERQWIL,i.DARK,i.POISON,[[T.SEABED,6]]],[e.ENAMORUS,i.FAIRY,i.FLYING,[[T.FAIRY_CAVE,4],[T.FAIRY_CAVE,7]]],[e.SPRIGATITO,i.GRASS,-1,[[T.MEADOW,2]]],[e.FLORAGATO,i.GRASS,-1,[[T.MEADOW,2]]],[e.MEOWSCARADA,i.GRASS,i.DARK,[[T.MEADOW,2],[T.MEADOW,6]]],[e.FUECOCO,i.FIRE,-1,[[T.GRAVEYARD,2]]],[e.CROCALOR,i.FIRE,-1,[[T.GRAVEYARD,2]]],[e.SKELEDIRGE,i.FIRE,i.GHOST,[[T.GRAVEYARD,2],[T.GRAVEYARD,6]]],[e.QUAXLY,i.WATER,-1,[[T.BEACH,2]]],[e.QUAXWELL,i.WATER,-1,[[T.BEACH,2]]],[e.QUAQUAVAL,i.WATER,i.FIGHTING,[[T.BEACH,2],[T.BEACH,6]]],[e.LECHONK,i.NORMAL,-1,[[T.TOWN,0],[T.PLAINS,0]]],[e.OINKOLOGNE,i.NORMAL,-1,[[T.PLAINS,0],[T.PLAINS,5]]],[e.TAROUNTULA,i.BUG,-1,[[T.FOREST,0]]],[e.SPIDOPS,i.BUG,-1,[[T.FOREST,0],[T.FOREST,5]]],[e.NYMBLE,i.BUG,-1,[[T.TALL_GRASS,0],[T.FOREST,0]]],[e.LOKIX,i.BUG,i.DARK,[[T.TALL_GRASS,0],[T.TALL_GRASS,5],[T.FOREST,0],[T.FOREST,5]]],[e.PAWMI,i.ELECTRIC,-1,[[T.TOWN,1,[S.DAWN,S.DAY]],[T.PLAINS,1,[S.DAWN,S.DAY]],[T.POWER_PLANT,0]]],[e.PAWMO,i.ELECTRIC,i.FIGHTING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.POWER_PLANT,0]]],[e.PAWMOT,i.ELECTRIC,i.FIGHTING,[[T.PLAINS,1,[S.DAWN,S.DAY]],[T.PLAINS,6,[S.DAWN,S.DAY]],[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.TANDEMAUS,i.NORMAL,-1,[[T.TOWN,2,[S.DAWN,S.DAY]],[T.METROPOLIS,2,[S.DAWN,S.DAY]]]],[e.MAUSHOLD,i.NORMAL,-1,[[T.METROPOLIS,2,[S.DAWN,S.DAY]],[T.METROPOLIS,6,[S.DAWN,S.DAY]]]],[e.FIDOUGH,i.FAIRY,-1,[[T.TOWN,1],[T.METROPOLIS,1]]],[e.DACHSBUN,i.FAIRY,-1,[[T.METROPOLIS,1],[T.METROPOLIS,5]]],[e.SMOLIV,i.GRASS,i.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.DOLLIV,i.GRASS,i.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]]]],[e.ARBOLIVA,i.GRASS,i.NORMAL,[[T.MEADOW,1,[S.DAWN,S.DAY]],[T.MEADOW,5,[S.DAWN,S.DAY]]]],[e.SQUAWKABILLY,i.NORMAL,i.FLYING,[[T.METROPOLIS,1],[T.FOREST,2]]],[e.NACLI,i.ROCK,-1,[[T.MOUNTAIN,1],[T.CAVE,0]]],[e.NACLSTACK,i.ROCK,-1,[[T.MOUNTAIN,1],[T.CAVE,0]]],[e.GARGANACL,i.ROCK,-1,[[T.MOUNTAIN,1],[T.MOUNTAIN,5],[T.CAVE,0],[T.CAVE,5]]],[e.CHARCADET,i.FIRE,-1,[[T.VOLCANO,2]]],[e.ARMAROUGE,i.FIRE,i.PSYCHIC,[[T.VOLCANO,2],[T.VOLCANO,6]]],[e.CERULEDGE,i.FIRE,i.GHOST,[[T.GRAVEYARD,2],[T.GRAVEYARD,6]]],[e.TADBULB,i.ELECTRIC,-1,[[T.POWER_PLANT,0]]],[e.BELLIBOLT,i.ELECTRIC,-1,[[T.POWER_PLANT,0],[T.POWER_PLANT,5]]],[e.WATTREL,i.ELECTRIC,i.FLYING,[[T.SEA,1]]],[e.KILOWATTREL,i.ELECTRIC,i.FLYING,[[T.SEA,1],[T.SEA,5]]],[e.MASCHIFF,i.DARK,-1,[[T.ABYSS,0]]],[e.MABOSSTIFF,i.DARK,-1,[[T.ABYSS,0],[T.ABYSS,5]]],[e.SHROODLE,i.POISON,i.NORMAL,[[T.FOREST,0]]],[e.GRAFAIAI,i.POISON,i.NORMAL,[[T.FOREST,0],[T.FOREST,5]]],[e.BRAMBLIN,i.GRASS,i.GHOST,[[T.DESERT,1]]],[e.BRAMBLEGHAST,i.GRASS,i.GHOST,[[T.DESERT,1],[T.DESERT,5]]],[e.TOEDSCOOL,i.GROUND,i.GRASS,[[T.FOREST,2]]],[e.TOEDSCRUEL,i.GROUND,i.GRASS,[[T.FOREST,2],[T.FOREST,6]]],[e.KLAWF,i.ROCK,-1,[[T.MOUNTAIN,2]]],[e.CAPSAKID,i.GRASS,-1,[[T.BADLANDS,1,[S.DAWN,S.DAY]]]],[e.SCOVILLAIN,i.GRASS,i.FIRE,[[T.BADLANDS,1,[S.DAWN,S.DAY]],[T.BADLANDS,5,[S.DAWN,S.DAY]]]],[e.RELLOR,i.BUG,-1,[[T.DESERT,0,[S.DAWN,S.DAY]]]],[e.RABSCA,i.BUG,i.PSYCHIC,[[T.DESERT,0,[S.DAWN,S.DAY]],[T.DESERT,5,[S.DAWN,S.DAY]]]],[e.FLITTLE,i.PSYCHIC,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.ESPATHRA,i.PSYCHIC,-1,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]],[T.MOUNTAIN,5,[S.DAWN,S.DAY]]]],[e.TINKATINK,i.FAIRY,i.STEEL,[[T.RUINS,1]]],[e.TINKATUFF,i.FAIRY,i.STEEL,[[T.RUINS,1]]],[e.TINKATON,i.FAIRY,i.STEEL,[[T.RUINS,1],[T.RUINS,5]]],[e.WIGLETT,i.WATER,-1,[[T.BEACH,0]]],[e.WUGTRIO,i.WATER,-1,[[T.BEACH,0]]],[e.BOMBIRDIER,i.FLYING,i.DARK,[[T.MOUNTAIN,1,[S.DAWN,S.DAY]]]],[e.FINIZEN,i.WATER,-1,[[T.SEA,0,[S.DAWN,S.DAY]]]],[e.PALAFIN,i.WATER,-1,[[T.SEA,0,[S.DAWN,S.DAY]],[T.SEA,5,[S.DAWN,S.DAY]]]],[e.VAROOM,i.STEEL,i.POISON,[[T.METROPOLIS,2],[T.SLUM,2]]],[e.REVAVROOM,i.STEEL,i.POISON,[[T.METROPOLIS,2],[T.METROPOLIS,6],[T.SLUM,2],[T.SLUM,6]]],[e.CYCLIZAR,i.DRAGON,i.NORMAL,[[T.WASTELAND,1]]],[e.ORTHWORM,i.STEEL,-1,[[T.DESERT,1]]],[e.GLIMMET,i.ROCK,i.POISON,[[T.CAVE,2]]],[e.GLIMMORA,i.ROCK,i.POISON,[[T.CAVE,2],[T.CAVE,6]]],[e.GREAVARD,i.GHOST,-1,[[T.GRAVEYARD,0]]],[e.HOUNDSTONE,i.GHOST,-1,[[T.GRAVEYARD,0],[T.GRAVEYARD,5]]],[e.FLAMIGO,i.FLYING,i.FIGHTING,[[T.LAKE,1]]],[e.CETODDLE,i.ICE,-1,[[T.ICE_CAVE,1]]],[e.CETITAN,i.ICE,-1,[[T.ICE_CAVE,1],[T.ICE_CAVE,5]]],[e.VELUZA,i.WATER,i.PSYCHIC,[[T.SEABED,0]]],[e.DONDOZO,i.WATER,-1,[[T.SEABED,1],[T.SEABED,5]]],[e.TATSUGIRI,i.DRAGON,i.WATER,[[T.BEACH,2]]],[e.ANNIHILAPE,i.FIGHTING,i.GHOST,[[T.PLAINS,1,[S.DUSK,S.NIGHT]],[T.DOJO,0],[T.DOJO,5]]],[e.CLODSIRE,i.POISON,i.GROUND,[[T.SWAMP,0,[S.DUSK,S.NIGHT]],[T.SWAMP,5,[S.DUSK,S.NIGHT]]]],[e.FARIGIRAF,i.NORMAL,i.PSYCHIC,[[T.TALL_GRASS,2],[T.TALL_GRASS,6]]],[e.DUDUNSPARCE,i.NORMAL,-1,[[T.PLAINS,3],[T.PLAINS,6]]],[e.KINGAMBIT,i.DARK,i.STEEL,[[T.ABYSS,0],[T.ABYSS,5]]],[e.GREAT_TUSK,i.GROUND,i.FIGHTING,[[T.END,0]]],[e.SCREAM_TAIL,i.FAIRY,i.PSYCHIC,[[T.END,0]]],[e.BRUTE_BONNET,i.GRASS,i.DARK,[[T.END,0]]],[e.FLUTTER_MANE,i.GHOST,i.FAIRY,[[T.END,0]]],[e.SLITHER_WING,i.BUG,i.FIGHTING,[[T.END,0]]],[e.SANDY_SHOCKS,i.ELECTRIC,i.GROUND,[[T.END,0]]],[e.IRON_TREADS,i.GROUND,i.STEEL,[[T.END,0]]],[e.IRON_BUNDLE,i.ICE,i.WATER,[[T.END,0]]],[e.IRON_HANDS,i.FIGHTING,i.ELECTRIC,[[T.END,0]]],[e.IRON_JUGULIS,i.DARK,i.FLYING,[[T.END,0]]],[e.IRON_MOTH,i.FIRE,i.POISON,[[T.END,0]]],[e.IRON_THORNS,i.ROCK,i.ELECTRIC,[[T.END,0]]],[e.FRIGIBAX,i.DRAGON,i.ICE,[[T.WASTELAND,2]]],[e.ARCTIBAX,i.DRAGON,i.ICE,[[T.WASTELAND,2]]],[e.BAXCALIBUR,i.DRAGON,i.ICE,[[T.WASTELAND,2],[T.WASTELAND,5]]],[e.GIMMIGHOUL,i.GHOST,-1,[[T.TEMPLE,2]]],[e.GHOLDENGO,i.STEEL,i.GHOST,[[T.TEMPLE,2],[T.TEMPLE,6]]],[e.WO_CHIEN,i.DARK,i.GRASS,[[T.FOREST,4],[T.FOREST,7]]],[e.CHIEN_PAO,i.DARK,i.ICE,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,7]]],[e.TING_LU,i.DARK,i.GROUND,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.CHI_YU,i.DARK,i.FIRE,[[T.VOLCANO,4],[T.VOLCANO,7]]],[e.ROARING_MOON,i.DRAGON,i.DARK,[[T.END,1]]],[e.IRON_VALIANT,i.FAIRY,i.FIGHTING,[[T.END,1]]],[e.KORAIDON,i.FIGHTING,i.DRAGON,[[T.RUINS,8]]],[e.MIRAIDON,i.ELECTRIC,i.DRAGON,[[T.LABORATORY,8]]],[e.WALKING_WAKE,i.WATER,i.DRAGON,[[T.END,2]]],[e.IRON_LEAVES,i.GRASS,i.PSYCHIC,[[T.END,2]]],[e.DIPPLIN,i.GRASS,i.DRAGON,[[T.MEADOW,2]]],[e.POLTCHAGEIST,i.GRASS,i.GHOST,[[T.BADLANDS,2]]],[e.SINISTCHA,i.GRASS,i.GHOST,[[T.BADLANDS,2],[T.BADLANDS,6]]],[e.OKIDOGI,i.POISON,i.FIGHTING,[[T.BADLANDS,4],[T.BADLANDS,7]]],[e.MUNKIDORI,i.POISON,i.PSYCHIC,[[T.JUNGLE,4],[T.JUNGLE,7]]],[e.FEZANDIPITI,i.POISON,i.FAIRY,[[T.RUINS,4],[T.RUINS,7]]],[e.OGERPON,i.GRASS,-1,[[T.MOUNTAIN,4],[T.MOUNTAIN,7]]],[e.ARCHALUDON,i.STEEL,i.DRAGON,[[T.CONSTRUCTION_SITE,6]]],[e.HYDRAPPLE,i.GRASS,i.DRAGON,[[T.MEADOW,6]]],[e.GOUGING_FIRE,i.FIRE,i.DRAGON,[[T.END,2]]],[e.RAGING_BOLT,i.ELECTRIC,i.DRAGON,[[T.END,2]]],[e.IRON_BOULDER,i.ROCK,i.PSYCHIC,[[T.END,2]]],[e.IRON_CROWN,i.STEEL,i.PSYCHIC,[[T.END,2]]],[e.TERAPAGOS,i.NORMAL,-1,[[T.CAVE,8]]],[e.PECHARUNT,i.POISON,i.GHOST,[]],[e.ALOLA_RATTATA,i.DARK,i.NORMAL,[[T.ISLAND,0,[S.DUSK,S.NIGHT]]]],[e.ALOLA_RATICATE,i.DARK,i.NORMAL,[[T.ISLAND,0,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ALOLA_RAICHU,i.ELECTRIC,i.PSYCHIC,[[T.ISLAND,1,[S.DAWN,S.DAY]],[T.ISLAND,5,[S.DAWN,S.DAY]]]],[e.ALOLA_SANDSHREW,i.ICE,i.STEEL,[[T.ISLAND,0],[T.SNOWY_FOREST,2]]],[e.ALOLA_SANDSLASH,i.ICE,i.STEEL,[[T.ISLAND,0],[T.ISLAND,5],[T.SNOWY_FOREST,2],[T.SNOWY_FOREST,6]]],[e.ALOLA_VULPIX,i.ICE,-1,[[T.ISLAND,0],[T.SNOWY_FOREST,2]]],[e.ALOLA_NINETALES,i.ICE,i.FAIRY,[[T.ISLAND,0],[T.ISLAND,5],[T.SNOWY_FOREST,2],[T.SNOWY_FOREST,6]]],[e.ALOLA_DIGLETT,i.GROUND,i.STEEL,[[T.ISLAND,0]]],[e.ALOLA_DUGTRIO,i.GROUND,i.STEEL,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_MEOWTH,i.DARK,-1,[[T.ISLAND,0,[S.DUSK,S.NIGHT]]]],[e.ALOLA_PERSIAN,i.DARK,-1,[[T.ISLAND,0,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ALOLA_GEODUDE,i.ROCK,i.ELECTRIC,[[T.ISLAND,0]]],[e.ALOLA_GRAVELER,i.ROCK,i.ELECTRIC,[[T.ISLAND,0]]],[e.ALOLA_GOLEM,i.ROCK,i.ELECTRIC,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_GRIMER,i.POISON,i.DARK,[[T.ISLAND,0]]],[e.ALOLA_MUK,i.POISON,i.DARK,[[T.ISLAND,0],[T.ISLAND,5]]],[e.ALOLA_EXEGGUTOR,i.GRASS,i.DRAGON,[[T.ISLAND,1,[S.DAWN,S.DAY]],[T.ISLAND,5,[S.DAWN,S.DAY]]]],[e.ALOLA_MAROWAK,i.FIRE,i.GHOST,[[T.ISLAND,1,[S.DUSK,S.NIGHT]],[T.ISLAND,5,[S.DUSK,S.NIGHT]]]],[e.ETERNAL_FLOETTE,i.FAIRY,-1,[[T.FAIRY_CAVE,2],[T.FAIRY_CAVE,6]]],[e.GALAR_MEOWTH,i.STEEL,-1,[[T.CONSTRUCTION_SITE,2,S.DUSK]]],[e.GALAR_PONYTA,i.PSYCHIC,-1,[[T.JUNGLE,2,S.DAWN]]],[e.GALAR_RAPIDASH,i.PSYCHIC,i.FAIRY,[[T.JUNGLE,2,S.DAWN],[T.JUNGLE,6,S.DAWN]]],[e.GALAR_SLOWPOKE,i.PSYCHIC,-1,[[T.SWAMP,3,[S.DAWN,S.DAY]]]],[e.GALAR_SLOWBRO,i.POISON,i.PSYCHIC,[[T.SWAMP,3,[S.DAWN,S.DAY]],[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.GALAR_FARFETCHD,i.FIGHTING,-1,[[T.DOJO,3]]],[e.GALAR_WEEZING,i.POISON,i.FAIRY,[[T.SLUM,6]]],[e.GALAR_MR_MIME,i.ICE,i.PSYCHIC,[[T.SNOWY_FOREST,3]]],[e.GALAR_ARTICUNO,i.PSYCHIC,i.FLYING,[[T.SNOWY_FOREST,4],[T.SNOWY_FOREST,8]]],[e.GALAR_ZAPDOS,i.FIGHTING,i.FLYING,[[T.DOJO,4],[T.DOJO,8]]],[e.GALAR_MOLTRES,i.DARK,i.FLYING,[[T.ABYSS,4],[T.ABYSS,8]]],[e.GALAR_SLOWKING,i.POISON,i.PSYCHIC,[[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.GALAR_CORSOLA,i.GHOST,-1,[[T.SEABED,3]]],[e.GALAR_ZIGZAGOON,i.DARK,i.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]]]],[e.GALAR_LINOONE,i.DARK,i.NORMAL,[[T.SLUM,2,[S.DUSK,S.NIGHT]]]],[e.GALAR_DARUMAKA,i.ICE,-1,[[T.SNOWY_FOREST,2,[S.DAWN,S.DAY]]]],[e.GALAR_DARMANITAN,i.ICE,-1,[[T.SNOWY_FOREST,2,[S.DAWN,S.DAY]],[T.SNOWY_FOREST,6,[S.DAWN,S.DAY]]]],[e.GALAR_YAMASK,i.GROUND,i.GHOST,[[T.RUINS,3,[S.DUSK,S.NIGHT]]]],[e.GALAR_STUNFISK,i.GROUND,i.STEEL,[[T.SWAMP,3],[T.SWAMP,6]]],[e.HISUI_GROWLITHE,i.FIRE,i.ROCK,[[T.VOLCANO,3]]],[e.HISUI_ARCANINE,i.FIRE,i.ROCK,[[T.VOLCANO,6]]],[e.HISUI_VOLTORB,i.ELECTRIC,i.GRASS,[[T.POWER_PLANT,3]]],[e.HISUI_ELECTRODE,i.ELECTRIC,i.GRASS,[[T.POWER_PLANT,6]]],[e.HISUI_TYPHLOSION,i.FIRE,i.GHOST,[[T.GRAVEYARD,6]]],[e.HISUI_QWILFISH,i.DARK,i.POISON,[[T.SEABED,3]]],[e.HISUI_SNEASEL,i.FIGHTING,i.POISON,[[T.SNOWY_FOREST,3,[S.DAWN,S.DAY]]]],[e.HISUI_SAMUROTT,i.WATER,i.DARK,[[T.ABYSS,6]]],[e.HISUI_LILLIGANT,i.GRASS,i.FIGHTING,[[T.MEADOW,6,[S.DAWN,S.DAY]]]],[e.HISUI_ZORUA,i.NORMAL,i.GHOST,[[T.SNOWY_FOREST,3,[S.DUSK,S.NIGHT]]]],[e.HISUI_ZOROARK,i.NORMAL,i.GHOST,[[T.SNOWY_FOREST,3,[S.DUSK,S.NIGHT]],[T.SNOWY_FOREST,6,[S.DUSK,S.NIGHT]]]],[e.HISUI_BRAVIARY,i.PSYCHIC,i.FLYING,[[T.MOUNTAIN,6,[S.DAWN,S.DAY]]]],[e.HISUI_SLIGGOO,i.STEEL,i.DRAGON,[[T.SWAMP,3,[S.DAWN,S.DAY]]]],[e.HISUI_GOODRA,i.STEEL,i.DRAGON,[[T.SWAMP,3,[S.DAWN,S.DAY]],[T.SWAMP,6,[S.DAWN,S.DAY]]]],[e.HISUI_AVALUGG,i.ICE,i.ROCK,[[T.SNOWY_FOREST,3]]],[e.HISUI_DECIDUEYE,i.GRASS,i.FIGHTING,[[T.DOJO,6]]],[e.PALDEA_TAUROS,i.FIGHTING,-1,[[T.PLAINS,2,[S.DAWN,S.DAY]],[T.PLAINS,6,[S.DAWN,S.DAY]]]],[e.PALDEA_WOOPER,i.POISON,i.GROUND,[[T.SWAMP,0,[S.DUSK,S.NIGHT]]]],[e.BLOODMOON_URSALUNA,i.GROUND,i.NORMAL,[[T.FOREST,3,S.NIGHT],[T.FOREST,6,S.NIGHT]]]],A=[[c.ACE_TRAINER,[[T.PLAINS,1],[T.GRASS,1],[T.TALL_GRASS,1],[T.SWAMP,1],[T.BEACH,1],[T.LAKE,1],[T.MOUNTAIN,1],[T.BADLANDS,1],[T.CAVE,1],[T.MEADOW,1],[T.RUINS,1],[T.ABYSS,1],[T.FAIRY_CAVE,1],[T.TEMPLE,1]]],[c.ARTIST,[[T.METROPOLIS,2]]],[c.BACKERS,[]],[c.BACKPACKER,[[T.MOUNTAIN,0],[T.CAVE,0],[T.BADLANDS,0],[T.JUNGLE,0],[T.DESERT,0]]],[c.BAKER,[[T.SLUM,1],[T.MEADOW,1]]],[c.BEAUTY,[[T.METROPOLIS,0],[T.MEADOW,0],[T.FAIRY_CAVE,0]]],[c.BIKER,[[T.SLUM,0]]],[c.BLACK_BELT,[[T.DOJO,0],[T.PLAINS,2],[T.GRASS,2],[T.SWAMP,2],[T.BEACH,2],[T.LAKE,2],[T.MOUNTAIN,0],[T.CAVE,1],[T.RUINS,1]]],[c.BREEDER,[[T.PLAINS,0],[T.GRASS,0],[T.TALL_GRASS,1],[T.METROPOLIS,1],[T.BEACH,1],[T.LAKE,0],[T.MEADOW,1],[T.FAIRY_CAVE,1]]],[c.CLERK,[[T.METROPOLIS,0]]],[c.CYCLIST,[[T.PLAINS,1],[T.METROPOLIS,0]]],[c.DANCER,[]],[c.DEPOT_AGENT,[[T.METROPOLIS,1]]],[c.DOCTOR,[]],[c.FIREBREATHER,[[T.VOLCANO,0]]],[c.FISHERMAN,[[T.LAKE,0],[T.BEACH,0]]],[c.GUITARIST,[[T.METROPOLIS,1],[T.POWER_PLANT,0]]],[c.HARLEQUIN,[]],[c.HIKER,[[T.MOUNTAIN,0],[T.CAVE,0],[T.BADLANDS,0]]],[c.HOOLIGANS,[[T.SLUM,1]]],[c.HOOPSTER,[]],[c.INFIELDER,[]],[c.JANITOR,[]],[c.LINEBACKER,[]],[c.MAID,[]],[c.MUSICIAN,[[T.MEADOW,0]]],[c.HEX_MANIAC,[[T.RUINS,1],[T.GRAVEYARD,1]]],[c.NURSERY_AIDE,[]],[c.OFFICER,[[T.METROPOLIS,0],[T.CONSTRUCTION_SITE,0],[T.SLUM,0]]],[c.PARASOL_LADY,[[T.SWAMP,0],[T.LAKE,0],[T.MEADOW,0]]],[c.PILOT,[[T.MOUNTAIN,1]]],[c.POKEFAN,[[T.GRASS,1],[T.MEADOW,1]]],[c.PRESCHOOLER,[]],[c.PSYCHIC,[[T.GRAVEYARD,0],[T.RUINS,0]]],[c.RANGER,[[T.TALL_GRASS,1],[T.FOREST,0],[T.JUNGLE,0]]],[c.RICH,[[T.ISLAND,1]]],[c.RICH_KID,[[T.METROPOLIS,2],[T.ISLAND,0]]],[c.ROUGHNECK,[[T.SLUM,0]]],[c.SAILOR,[[T.SEA,0],[T.BEACH,0]]],[c.SCIENTIST,[[T.DESERT,0],[T.RUINS,0]]],[c.SMASHER,[]],[c.SNOW_WORKER,[[T.ICE_CAVE,0],[T.SNOWY_FOREST,0]]],[c.STRIKER,[]],[c.SCHOOL_KID,[[T.GRASS,0]]],[c.SWIMMER,[[T.SEA,0]]],[c.TWINS,[[T.PLAINS,0]]],[c.VETERAN,[[T.WASTELAND,0]]],[c.WAITER,[[T.METROPOLIS,0]]],[c.WORKER,[[T.POWER_PLANT,0],[T.FACTORY,0],[T.CONSTRUCTION_SITE,0]]],[c.YOUNGSTER,[[T.TOWN,0]]],[c.BROCK,[[T.CAVE,5]]],[c.MISTY,[[T.BEACH,5]]],[c.LT_SURGE,[[T.CONSTRUCTION_SITE,5]]],[c.ERIKA,[[T.GRASS,5]]],[c.JANINE,[[T.SWAMP,5]]],[c.SABRINA,[[T.RUINS,5]]],[c.GIOVANNI,[[T.LABORATORY,5]]],[c.BLAINE,[[T.VOLCANO,5]]],[c.FALKNER,[[T.MOUNTAIN,5]]],[c.BUGSY,[[T.FOREST,5]]],[c.WHITNEY,[[T.METROPOLIS,5]]],[c.MORTY,[[T.GRAVEYARD,5]]],[c.CHUCK,[[T.CONSTRUCTION_SITE,5]]],[c.JASMINE,[[T.FACTORY,5]]],[c.PRYCE,[[T.ICE_CAVE,5]]],[c.CLAIR,[[T.WASTELAND,5]]],[c.ROXANNE,[[T.CAVE,5]]],[c.BRAWLY,[[T.DOJO,5]]],[c.WATTSON,[[T.CONSTRUCTION_SITE,5]]],[c.FLANNERY,[[T.VOLCANO,5]]],[c.NORMAN,[[T.METROPOLIS,5]]],[c.WINONA,[[T.MOUNTAIN,5]]],[c.TATE,[[T.RUINS,5]]],[c.LIZA,[[T.RUINS,5]]],[c.JUAN,[[T.SEABED,5]]],[c.ROARK,[[T.CAVE,5]]],[c.GARDENIA,[[T.TALL_GRASS,5]]],[c.CRASHER_WAKE,[[T.LAKE,5]]],[c.MAYLENE,[[T.DOJO,5]]],[c.FANTINA,[[T.TEMPLE,5]]],[c.BYRON,[[T.FACTORY,5]]],[c.CANDICE,[[T.SNOWY_FOREST,5]]],[c.VOLKNER,[[T.POWER_PLANT,5]]],[c.CILAN,[[T.PLAINS,5]]],[c.CHILI,[[T.PLAINS,5]]],[c.CRESS,[[T.PLAINS,5]]],[c.CHEREN,[[T.PLAINS,5]]],[c.LENORA,[[T.MEADOW,5]]],[c.ROXIE,[[T.SWAMP,5]]],[c.BURGH,[[T.FOREST,5]]],[c.ELESA,[[T.POWER_PLANT,5]]],[c.CLAY,[[T.BADLANDS,5]]],[c.SKYLA,[[T.MOUNTAIN,5]]],[c.BRYCEN,[[T.ICE_CAVE,5]]],[c.DRAYDEN,[[T.WASTELAND,5]]],[c.MARLON,[[T.SEA,5]]],[c.VIOLA,[[T.TALL_GRASS,5]]],[c.GRANT,[[T.BADLANDS,5]]],[c.KORRINA,[[T.DOJO,5]]],[c.RAMOS,[[T.JUNGLE,5]]],[c.CLEMONT,[[T.POWER_PLANT,5]]],[c.VALERIE,[[T.FAIRY_CAVE,5]]],[c.OLYMPIA,[[T.SPACE,5]]],[c.WULFRIC,[[T.ICE_CAVE,5]]],[c.MILO,[[T.MEADOW,5]]],[c.NESSA,[[T.ISLAND,5]]],[c.KABU,[[T.VOLCANO,5]]],[c.BEA,[[T.DOJO,5]]],[c.ALLISTER,[[T.GRAVEYARD,5]]],[c.OPAL,[[T.FAIRY_CAVE,5]]],[c.BEDE,[[T.FAIRY_CAVE,5]]],[c.GORDIE,[[T.DESERT,5]]],[c.MELONY,[[T.SNOWY_FOREST,5]]],[c.PIERS,[[T.SLUM,5]]],[c.MARNIE,[[T.ABYSS,5]]],[c.RAIHAN,[[T.WASTELAND,5]]],[c.KATY,[[T.FOREST,5]]],[c.BRASSIUS,[[T.TALL_GRASS,5]]],[c.IONO,[[T.METROPOLIS,5]]],[c.KOFU,[[T.BEACH,5]]],[c.LARRY,[[T.METROPOLIS,5]]],[c.RYME,[[T.GRAVEYARD,5]]],[c.TULIP,[[T.RUINS,5]]],[c.GRUSHA,[[T.ICE_CAVE,5]]],[c.LORELEI,[]],[c.BRUNO,[]],[c.AGATHA,[]],[c.LANCE,[]],[c.WILL,[]],[c.KOGA,[]],[c.KAREN,[]],[c.SIDNEY,[]],[c.PHOEBE,[]],[c.GLACIA,[]],[c.DRAKE,[]],[c.AARON,[]],[c.BERTHA,[]],[c.FLINT,[]],[c.LUCIAN,[]],[c.SHAUNTAL,[]],[c.MARSHAL,[]],[c.GRIMSLEY,[]],[c.CAITLIN,[]],[c.MALVA,[]],[c.SIEBOLD,[]],[c.WIKSTROM,[]],[c.DRASNA,[]],[c.HALA,[]],[c.MOLAYNE,[]],[c.OLIVIA,[]],[c.ACEROLA,[]],[c.KAHILI,[]],[c.RIKA,[]],[c.POPPY,[]],[c.LARRY_ELITE,[]],[c.HASSEL,[]],[c.CRISPIN,[]],[c.AMARYS,[]],[c.LACEY,[]],[c.DRAYTON,[]],[c.BLUE,[]],[c.RED,[]],[c.LANCE_CHAMPION,[]],[c.STEVEN,[]],[c.WALLACE,[]],[c.CYNTHIA,[]],[c.ALDER,[]],[c.IRIS,[]],[c.DIANTHA,[]],[c.HAU,[]],[c.GEETA,[]],[c.NEMONA,[]],[c.KIERAN,[]],[c.LEON,[]],[c.RIVAL,[]]];QO[T.TOWN]=[0,1];const s=o((R,n)=>{if(R===T.END){const r=Object.keys(T).filter(N=>!Number.isNaN(Number(N)));r.pop();const L=He(r.length,1);R=T[r[L]]}const I=Array.isArray(Dn[R])?Dn[R]:[Dn[R]];for(const r of I){const L=Array.isArray(r)?r[0]:r,N=Array.isArray(r)?r[1]:1;(!QO.hasOwnProperty(L)||N<QO[L][1]||n<QO[L][0]&&N===QO[L][1])&&(QO[L]=[n+1,N],s(L,n+1))}},"traverseBiome");s(T.TOWN,0),QO[T.END]=[Object.values(QO).map(R=>R[0]).reduce((R,n)=>Math.max(R,n),0)+1,1];for(const R of dE(T)){yR[R]={},sr[R]={};for(const n of dE(zA)){yR[R][n]={},sr[R][n]=[];for(const I of dE(S))yR[R][n][I]=[]}}for(const R of E){const n=R[0],I=R[3],r=jt.hasOwnProperty(n)?jt[n]:[];!I.filter(L=>L[0]!==T.END).length&&!r.filter(L=>!!E.find(N=>N[0]===L.speciesId)[3].filter(N=>N[0]!==T.END).length).length&&_7.push(n),dL[n]=[];for(const L of I){const N=L[0],l=L[1],C=L.length>2?Array.isArray(L[2])?L[2]:[L[2]]:[S.ALL];dL[n].push({biome:N,tier:l,tod:C});for(const U of C){if(!yR.hasOwnProperty(N)||!yR[N].hasOwnProperty(l)||!yR[N][l].hasOwnProperty(U))continue;const D=yR[N][l][U];let M=-1,h=0;for(let _=0;_<D.length;_++){const d=D[_];for(let f=0;f<d.length;f++){const H=d[f];if(jt.hasOwnProperty(H)&&jt[H].find(B=>B.speciesId===n)){M=_,h=f+1;break}if(r!=null&&r.find(B=>B.speciesId===H)){M=_,h=f;break}}if(M>-1)break}M>-1?D[M].splice(h,0,n):D.push([n])}}}for(const R of Object.keys(yR))for(const n of Object.keys(yR[R])){const I=Number.parseInt(n);for(const r of Object.keys(yR[R][n])){const L=yR[R][n][r];for(let N=0;N<L.length;N++){const l=L[N];if(l.length===1)L[N]=l[0];else{const C={1:[l[0]]};for(let U=1;U<l.length;U++){const D=l[U],M=l.flatMap(_=>jt[_]).find(_=>_&&_.speciesId===D),h=M.level-(M.level===1?1:0)+M.wildDelay*10-(I>=5?10:0);C.hasOwnProperty(h)?C[h].push(D):C[h]=[D]}L[N]=C}}}}for(const R of A){const n=R[0],I=R[1];for(const r of I){const L=r[0],N=r[1];if(!sr.hasOwnProperty(L)||!sr[L].hasOwnProperty(N))continue;sr[L][N].push(n)}}}o(qj,"initBiomes");const Kb=class Kb{constructor(A,s,R=0){this.eventTarget=new EventTarget,this.biomeType=A,this.tags=[],this.bgm=s,this.trainerPool=sr[A],this.updatePoolsForTimeOfDay(),this.playerTerasUsed=0,this.playerFaints=R}init(){const A=Sl(this.biomeType);a.arenaPlayer.setBiome(this.biomeType),a.arenaPlayerTransition.setBiome(this.biomeType),a.arenaEnemy.setBiome(this.biomeType),a.arenaNextEnemy.setBiome(this.biomeType),a.arenaBg.setTexture(`${A}_bg`),a.arenaBgTransition.setTexture(`${A}_bg`),this.updatePoolsForTimeOfDay()}updatePoolsForTimeOfDay(){const A=this.getTimeOfDay();if(A!==this.lastTimeOfDay){this.pokemonPool={};for(const s of Object.keys(yR[this.biomeType]))this.pokemonPool[s]=Object.assign([],yR[this.biomeType][s][S.ALL]).concat(yR[this.biomeType][s][A]);this.lastTimeOfDay=A}}randomSpecies(A,s,R,n,I){const r=a.gameMode.getOverrideSpecies(A);if(r)return r;const L=!!a.getEncounterBossSegments(A,s)&&!!this.pokemonPool[zA.BOSS].length&&(this.biomeType!==T.END||a.gameMode.isClassic||a.gameMode.isWaveFinal(A)),N=L?64:512;let l=0;typeof n<"u"&&(l=n*(L?.5:2));const C=He(N-l);let U=L?C>=20?zA.BOSS:C>=6?zA.BOSS_RARE:C>=1?zA.BOSS_SUPER_RARE:zA.BOSS_ULTRA_RARE:C>=156?zA.COMMON:C>=32?zA.UNCOMMON:C>=6?zA.RARE:C>=1?zA.SUPER_RARE:zA.ULTRA_RARE;for(zA[U];!this.pokemonPool[U].length;)`${zA[U]}${zA[U-1]}`,U--;const D=this.pokemonPool[U];let M,h=!1;if(!D.length)M=a.randomSpecies(A,s);else{const d=D[He(D.length)];let f;if(typeof d=="number")f=d;else{const H=Object.keys(d);for(let B=H.length-1;B>=0;B--){const K=Number.parseInt(H[B]);if(s>=K){const Y=d[K];Y.length>1?f=Y[He(Y.length)]:f=Y[0];break}}}if(M=$e(f),M.subLegendary||M.legendary||M.mythical)switch(!0){case M.baseTotal>=720:h=s<90;break;case M.baseTotal>=670:h=s<70;break;case M.baseTotal>=580:h=s<50;break;default:h=s<30;break}}if(h&&(R||0)<10)return this.randomSpecies(A,s,(R||0)+1);const _=M.getWildSpeciesForLevel(s,!0,I??L,a.gameMode);return _!==M.speciesId&&(e[M.speciesId],e[_],M=$e(_)),M}randomTrainerType(A,s=!1){const R=!!this.trainerPool[zA.BOSS].length&&(a.gameMode.isTrainerBoss(A,this.biomeType,a.offsetGym)||s);this.trainerPool;const n=He(R?64:512);let I=R?n>=20?zA.BOSS:n>=6?zA.BOSS_RARE:n>=1?zA.BOSS_SUPER_RARE:zA.BOSS_ULTRA_RARE:n>=156?zA.COMMON:n>=32?zA.UNCOMMON:n>=6?zA.RARE:n>=1?zA.SUPER_RARE:zA.ULTRA_RARE;for(zA[I];I&&!this.trainerPool[I].length;)`${zA[I]}${zA[I-1]}`,I--;const r=this.trainerPool[I]||[];return r.length?r[He(r.length)]:c.BREEDER}getSpeciesFormIndex(A){switch(A.speciesId){case e.BURMY:case e.WORMADAM:switch(this.biomeType){case T.BEACH:return 1;case T.SLUM:return 2}break;case e.ROTOM:switch(this.biomeType){case T.VOLCANO:return 1;case T.SEA:return 2;case T.ICE_CAVE:return 3;case T.MOUNTAIN:return 4;case T.TALL_GRASS:return 5}break;case e.LYCANROC:switch(this.getTimeOfDay()){case S.DAY:case S.DAWN:return 0;case S.DUSK:return 2;case S.NIGHT:return 1}break}return 0}getBgTerrainColorRatioForBiome(){switch(this.biomeType){case T.SPACE:return 1;case T.END:return 0}return 131/180}trySetWeatherOverride(A){return this.weather=new NS(A,0),a.unshiftPhase(new Rs(void 0,void 0,UA.SUNNY+(A-1))),a.queueMessage(O6(A)),!0}canSetWeather(A){var s;return((s=this.weather)==null?void 0:s.weatherType)!==(A||void 0)}trySetWeather(A,s){var I,r,L,N;if(xe.WEATHER_OVERRIDE)return this.trySetWeatherOverride(xe.WEATHER_OVERRIDE);if(!this.canSetWeather(A))return!1;const R=((I=this.weather)==null?void 0:I.weatherType)||Oe.NONE;if((r=this.weather)!=null&&r.isImmutable()&&![Oe.HARSH_SUN,Oe.HEAVY_RAIN,Oe.STRONG_WINDS,Oe.NONE].includes(A))return a.unshiftPhase(new Rs(void 0,void 0,UA.SUNNY+(R-1),!0)),a.queueMessage(nX(R)),!1;const n=new je(0);return Pe(s)||(n.value=5,a.applyModifier(hL,s.isPlayer(),s,n)),this.weather=A?new NS(A,n.value):null,this.eventTarget.dispatchEvent(new ya(R,(L=this.weather)==null?void 0:L.weatherType,(N=this.weather)==null?void 0:N.turnsLeft)),this.weather?(a.unshiftPhase(new Rs(void 0,void 0,UA.SUNNY+(A-1),!0)),a.queueMessage(O6(A))):a.queueMessage(OX(R)),a.getField(!0).filter(l=>l.isOnField()).map(l=>{l.findAndRemoveTags(C=>"weatherTypes"in C&&!C.weatherTypes.find(U=>U===A)),lj(jS,l,A)}),!0}triggerWeatherBasedFormChanges(){a.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT)&&A.species.speciesId===e.CHERRIM;(s||R)&&a.triggerPokemonFormChange(A,wR)})}triggerWeatherBasedFormChangesToNormal(){a.getField(!0).forEach(A=>{const s=A.hasAbility(O.FORECAST,!1,!0)&&A.species.speciesId===e.CASTFORM,R=A.hasAbility(O.FLOWER_GIFT,!1,!0)&&A.species.speciesId===e.CHERRIM;if(s||R)return a.triggerPokemonFormChange(A,qn)})}canSetTerrain(A){var s;return((s=this.terrain)==null?void 0:s.terrainType)!==(A||void 0)}trySetTerrain(A,s=!1,R){var r,L,N;if(!this.canSetTerrain(A))return!1;const n=((r=this.terrain)==null?void 0:r.terrainType)||Nt.NONE,I=new je(0);return Pe(R)||(I.value=5,a.applyModifier(hL,R.isPlayer(),R,I)),this.terrain=A?new Gu(A,I.value):null,this.eventTarget.dispatchEvent(new FS(n,(L=this.terrain)==null?void 0:L.terrainType,(N=this.terrain)==null?void 0:N.turnsLeft)),this.terrain?(s||a.unshiftPhase(new Rs(void 0,void 0,UA.MISTY_TERRAIN+(A-1))),a.queueMessage(iX(A))):a.queueMessage(IX(n)),a.getField(!0).filter(l=>l.isOnField()).map(l=>{l.findAndRemoveTags(C=>"terrainTypes"in C&&!C.terrainTypes.find(U=>U===A)),uj(QU,l,A),_t(oD,l,null,!1)}),!0}isMoveWeatherCancelled(A,s){return!!this.weather&&!this.weather.isEffectSuppressed()&&this.weather.isMoveWeatherCancelled(A,s)}isMoveTerrainCancelled(A,s,R){return!!this.terrain&&this.terrain.isMoveTerrainCancelled(A,s,R)}getWeatherType(){var A;return((A=this.weather)==null?void 0:A.weatherType)??Oe.NONE}getTerrainType(){var A;return((A=this.terrain)==null?void 0:A.terrainType)??Nt.NONE}getAttackTypeMultiplier(A,s){let R=1;this.weather&&!this.weather.isEffectSuppressed()&&(R=this.weather.getAttackTypeMultiplier(A));let n=1;return this.terrain&&s&&(n=this.terrain.getAttackTypeMultiplier(A)),R*n}getTrainerChance(){switch(this.biomeType){case T.METROPOLIS:return 2;case T.SLUM:case T.BEACH:case T.DOJO:case T.CONSTRUCTION_SITE:return 4;case T.PLAINS:case T.GRASS:case T.LAKE:case T.CAVE:return 6;case T.TALL_GRASS:case T.FOREST:case T.SEA:case T.SWAMP:case T.MOUNTAIN:case T.BADLANDS:case T.DESERT:case T.MEADOW:case T.POWER_PLANT:case T.GRAVEYARD:case T.FACTORY:case T.SNOWY_FOREST:return 8;case T.ICE_CAVE:case T.VOLCANO:case T.RUINS:case T.WASTELAND:case T.JUNGLE:case T.FAIRY_CAVE:return 12;case T.SEABED:case T.ABYSS:case T.SPACE:case T.TEMPLE:return 16;default:return 0}}getTimeOfDay(){var s;switch(this.biomeType){case T.ABYSS:return S.NIGHT}const A=((((s=a.currentBattle)==null?void 0:s.waveIndex)||0)+a.waveCycleOffset)%40;return A<15?S.DAY:A<20?S.DUSK:A<35?S.NIGHT:S.DAWN}isOutside(){switch(this.biomeType){case T.SEABED:case T.CAVE:case T.ICE_CAVE:case T.POWER_PLANT:case T.DOJO:case T.FACTORY:case T.ABYSS:case T.FAIRY_CAVE:case T.TEMPLE:case T.LABORATORY:return!1;default:return!0}}overrideTint(){switch(xe.ARENA_TINT_OVERRIDE){case S.DUSK:return[98,48,73].map(A=>Math.round((A+128)/2));case S.NIGHT:return[64,64,64];case S.DAWN:case S.DAY:default:return[128,128,128]}}getDayTint(){if(xe.ARENA_TINT_OVERRIDE!==null)return this.overrideTint();switch(this.biomeType){case T.ABYSS:return[64,64,64];default:return[128,128,128]}}getDuskTint(){if(xe.ARENA_TINT_OVERRIDE)return this.overrideTint();if(!this.isOutside())return[0,0,0];switch(this.biomeType){default:return[98,48,73].map(A=>Math.round((A+128)/2))}}getNightTint(){if(xe.ARENA_TINT_OVERRIDE)return this.overrideTint();switch(this.biomeType){case T.ABYSS:case T.SPACE:case T.END:return this.getDayTint()}if(!this.isOutside())return[64,64,64];switch(this.biomeType){default:return[48,48,98]}}setIgnoreAbilities(A,s=null){this.ignoreAbilities=A,this.ignoringEffectSource=A?s:null}applyTagsForSide(A,s,R,...n){let I=typeof A=="string"?this.tags.filter(r=>r.tagType===A):this.tags.filter(r=>r instanceof A);s!==Dt.BOTH&&(I=I.filter(r=>r.side===s)),I.forEach(r=>r.apply(this,R,...n))}applyTags(A,s,...R){this.applyTagsForSide(A,Dt.BOTH,s,...R)}addTag(A,s,R,n,I=Dt.BOTH,r=!1,L){const N=this.getTagOnSide(A,I);if(N){if(N.onOverlap(this,a.getPokemonById(n)),N instanceof lO){const{tagType:C,side:U,turnCount:D,layers:M,maxLayers:h}=N;this.eventTarget.dispatchEvent(new UI(C,U,D,M,h))}return!1}const l=I7(A,s||0,R,n,L,I);if(l){l.onAdd(this,r),this.tags.push(l);const{layers:C=0,maxLayers:U=0}=l instanceof lO?l:{};this.eventTarget.dispatchEvent(new UI(l.tagType,l.side,l.turnCount,C,U))}return!0}getTag(A){return this.getTagOnSide(A,Dt.BOTH)}hasTag(A){return!!this.getTag(A)}getTagOnSide(A,s){return typeof A=="string"?this.tags.find(R=>R.tagType===A&&(s===Dt.BOTH||R.side===Dt.BOTH||R.side===s)):this.tags.find(R=>R instanceof A&&(s===Dt.BOTH||R.side===Dt.BOTH||R.side===s))}findTags(A){return this.findTagsOnSide(A,Dt.BOTH)}findTagsOnSide(A,s){return this.tags.filter(R=>A(R)&&(s===Dt.BOTH||R.side===Dt.BOTH||R.side===s))}lapseTags(){this.tags.filter(A=>!A.lapse(this)).forEach(A=>{A.onRemove(this),this.tags.splice(this.tags.indexOf(A),1),this.eventTarget.dispatchEvent(new yi(A.tagType,A.side,A.turnCount))})}removeTag(A){const s=this.tags,R=s.find(n=>n.tagType===A);return R&&(R.onRemove(this),s.splice(s.indexOf(R),1),this.eventTarget.dispatchEvent(new yi(R.tagType,R.side,R.turnCount))),!!R}removeTagOnSide(A,s,R=!1){const n=this.getTagOnSide(A,s);return n&&(n.onRemove(this,R),this.tags.splice(this.tags.indexOf(n),1),this.eventTarget.dispatchEvent(new yi(n.tagType,n.side,n.turnCount))),!!n}removeAllTags(){for(;this.tags.length;)this.tags[0].onRemove(this),this.eventTarget.dispatchEvent(new yi(this.tags[0].tagType,this.tags[0].side,this.tags[0].turnCount)),this.tags.splice(0,1)}resetArenaEffects(){var A;((A=this.weather)==null?void 0:A.turnsLeft)!==0&&this.trySetWeather(Oe.NONE),this.trySetTerrain(Nt.NONE,!0),this.resetPlayerFaintCount(),this.removeAllTags()}preloadBgm(){a.loadBgm(this.bgm)}getBgmLoopPoint(){switch(this.biomeType){case T.TOWN:return 7.288;case T.PLAINS:return 17.485;case T.GRASS:return 1.995;case T.TALL_GRASS:return 9.608;case T.METROPOLIS:return 141.47;case T.FOREST:return .341;case T.SEA:return .024;case T.SWAMP:return 4.461;case T.BEACH:return 3.462;case T.LAKE:return 7.215;case T.SEABED:return 2.6;case T.MOUNTAIN:return 4.018;case T.BADLANDS:return 17.79;case T.CAVE:return 14.24;case T.DESERT:return 1.143;case T.ICE_CAVE:return 0;case T.MEADOW:return 3.891;case T.POWER_PLANT:return 9.447;case T.VOLCANO:return 17.637;case T.GRAVEYARD:return 13.711;case T.DOJO:return 6.205;case T.FACTORY:return 4.985;case T.RUINS:return 0;case T.WASTELAND:return 6.336;case T.ABYSS:return 5.13;case T.SPACE:return 20.036;case T.CONSTRUCTION_SITE:return 1.222;case T.JUNGLE:return 0;case T.FAIRY_CAVE:return 4.542;case T.TEMPLE:return 2.547;case T.ISLAND:return 2.751;case T.LABORATORY:return 114.862;case T.SLUM:return 0;case T.SNOWY_FOREST:return 3.047;case T.END:return 17.153;default:return console.warn(`missing bgm loop-point for biome "${T[this.biomeType]}" (=${this.biomeType})`),0}}resetPlayerFaintCount(){this.playerFaints=0}};o(Kb,"Arena");let n0=Kb;function Sl(E){return T[E].toLowerCase()}o(Sl,"getBiomeKey");function P7(E){switch(E){case T.METROPOLIS:case T.BEACH:case T.LAKE:case T.SEABED:case T.MOUNTAIN:case T.BADLANDS:case T.CAVE:case T.DESERT:case T.ICE_CAVE:case T.MEADOW:case T.POWER_PLANT:case T.VOLCANO:case T.GRAVEYARD:case T.FACTORY:case T.RUINS:case T.WASTELAND:case T.ABYSS:case T.CONSTRUCTION_SITE:case T.JUNGLE:case T.FAIRY_CAVE:case T.TEMPLE:case T.SNOWY_FOREST:case T.ISLAND:case T.LABORATORY:case T.END:return!0}return!1}o(P7,"getBiomeHasProps");const Fb=class Fb extends Phaser.GameObjects.Container{constructor(A){super(a,0,0),this.player=A,this.base=a.addFieldSprite(0,0,"plains_a",void 0,1),this.base.setOrigin(0,0),this.props=A?[]:new Array(3).fill(null).map(()=>{const s=a.addFieldSprite(0,0,"plains_b",void 0,1);return s.setOrigin(0,0),s.setVisible(!1),s})}setBiome(A,s){var r;const R=P7(A),n=Sl(A),I=`${n}_${this.player?"a":"b"}`;if(A!==this.biome){if(this.base.setTexture(I),this.base.texture.frameTotal>1){const L=a.anims.generateFrameNames(I,{zeroPad:4,suffix:".png",start:1,end:this.base.texture.frameTotal-1});a.anims.exists(I)||a.anims.create({key:I,frames:L,frameRate:12,repeat:-1}),this.base.play(I)}else this.base.stop();this.add(this.base)}this.player||a.executeWithSeedOffset(()=>{this.propValue=s===void 0?R?He(8):0:s,this.props.forEach((L,N)=>{const l=`${n}_b${R?`_${N+1}`:""}`;if(L.setTexture(l),R&&L.texture.frameTotal>1){const C=a.anims.generateFrameNames(l,{zeroPad:4,suffix:".png",start:1,end:L.texture.frameTotal-1});a.anims.exists(l)||a.anims.create({key:l,frames:C,frameRate:12,repeat:-1}),L.play(l)}else L.stop();L.setVisible(R&&!!(this.propValue&1<<N)),this.add(L)})},((r=a.currentBattle)==null?void 0:r.waveIndex)||0,a.waveSeed)}};o(Fb,"ArenaBase");let Cr=Fb,xl;const Yb=class Yb extends Phaser.Loader.LoaderPlugin{constructor(A){super(A)}get manifest(){return xl}set manifest(A){xl=A}addFile(A){Array.isArray(A)||(A=[A]),A.forEach(s=>{if(xl){const R=xl[`/${s.url.replace(/\/\//g,"/")}`];R&&(s.url+=`?t=${R}`)}}),super.addFile(A)}};o(Yb,"CacheBustedLoaderPlugin");let lf=Yb;const Bi=class Bi extends YC{constructor(){super(Bi.KEY),this.LOAD_EVENTS=Phaser.Loader.Events,Phaser.Plugins.PluginCache.register("Loader",lf,"load")}preload(){tZ(),this.load.manifest=this.game.manifest,this.loadImage("loading_bg","arenas"),this.loadImage("logo",""),this.loadAtlas("bg","ui"),this.loadAtlas("prompt","ui"),this.loadImage("candy","ui"),this.loadImage("candy_overlay","ui"),this.loadImage("friendship","ui"),this.loadImage("friendship_overlay","ui"),this.loadImage("cursor","ui"),this.loadImage("cursor_reverse","ui");for(const s of dE(dR))for(let R=1;R<=5;R++)this.loadImage(`window_${R}${xL(s)}`,"ui/windows");this.loadAtlas("namebox","ui"),this.loadImage("pbinfo_player","ui"),this.loadImage("pbinfo_player_stats","ui"),this.loadImage("pbinfo_player_mini","ui"),this.loadImage("pbinfo_player_mini_stats","ui"),this.loadAtlas("pbinfo_player_type","ui"),this.loadAtlas("pbinfo_player_type1","ui"),this.loadAtlas("pbinfo_player_type2","ui"),this.loadImage("pbinfo_enemy_mini","ui"),this.loadImage("pbinfo_enemy_mini_stats","ui"),this.loadImage("pbinfo_enemy_boss","ui"),this.loadImage("pbinfo_enemy_boss_stats","ui"),this.loadAtlas("pbinfo_enemy_type","ui"),this.loadAtlas("pbinfo_enemy_type1","ui"),this.loadAtlas("pbinfo_enemy_type2","ui"),this.loadAtlas("pbinfo_stat","ui"),this.loadAtlas("pbinfo_stat_numbers","ui"),this.loadImage("overlay_lv","ui"),this.loadAtlas("numbers","ui"),this.loadAtlas("numbers_red","ui"),this.loadAtlas("overlay_hp","ui"),this.loadAtlas("overlay_hp_boss","ui"),this.loadImage("overlay_exp","ui"),this.loadImage("icon_owned","ui"),this.loadImage("icon_egg_move","ui"),this.loadImage("ability_bar_left","ui"),this.loadImage("ability_bar_right","ui"),this.loadImage("bgm_bar","ui"),this.loadImage("party_exp_bar","ui"),this.loadImage("achv_bar","ui"),this.loadImage("achv_bar_2","ui"),this.loadImage("achv_bar_3","ui"),this.loadImage("achv_bar_4","ui"),this.loadImage("achv_bar_5","ui"),this.loadImage("shiny_star","ui","shiny.png"),this.loadImage("shiny_star_1","ui","shiny_1.png"),this.loadImage("shiny_star_2","ui","shiny_2.png"),this.loadImage("shiny_star_small","ui","shiny_small.png"),this.loadImage("shiny_star_small_1","ui","shiny_small_1.png"),this.loadImage("shiny_star_small_2","ui","shiny_small_2.png"),this.loadImage("favorite","ui","favorite.png"),this.loadImage("passive_bg","ui","passive_bg.png"),this.loadAtlas("shiny_icons","ui"),this.loadImage("ha_capsule","ui","ha_capsule.png"),this.loadImage("champion_ribbon","ui","champion_ribbon.png"),this.loadImage("icon_spliced","ui"),this.loadImage("icon_lock","ui","icon_lock.png"),this.loadImage("icon_stop","ui","icon_stop.png"),this.loadImage("icon_tera","ui"),this.loadImage("cursor_tera","ui"),this.loadImage("type_tera","ui"),this.loadAtlas("type_bgs","ui"),this.loadAtlas("button_tera","ui"),this.loadImage("mystery_egg","ui"),this.loadImage("normal_memory","ui"),this.loadImage("dawn_icon_fg","ui"),this.loadImage("dawn_icon_mg","ui"),this.loadImage("dawn_icon_bg","ui"),this.loadImage("day_icon_fg","ui"),this.loadImage("day_icon_mg","ui"),this.loadImage("day_icon_bg","ui"),this.loadImage("dusk_icon_fg","ui"),this.loadImage("dusk_icon_mg","ui"),this.loadImage("dusk_icon_bg","ui"),this.loadImage("night_icon_fg","ui"),this.loadImage("night_icon_mg","ui"),this.loadImage("night_icon_bg","ui"),this.loadImage("pb_tray_overlay_player","ui"),this.loadImage("pb_tray_overlay_enemy","ui"),this.loadAtlas("pb_tray_ball","ui"),this.loadImage("party_bg","ui"),this.loadImage("party_bg_double","ui"),this.loadAtlas("party_slot_main","ui"),this.loadAtlas("party_slot","ui"),this.loadImage("party_slot_overlay_lv","ui"),this.loadImage("party_slot_hp_bar","ui"),this.loadAtlas("party_slot_hp_overlay","ui"),this.loadAtlas("party_pb","ui"),this.loadAtlas("party_cancel","ui"),this.loadImage("summary_bg","ui"),this.loadImage("summary_overlay_shiny","ui"),this.loadImage("summary_profile","ui"),this.loadImage("summary_profile_prompt_z","ui"),this.loadImage("summary_profile_prompt_a","ui"),this.loadImage("summary_profile_ability","ui"),this.loadImage("summary_profile_passive","ui"),this.loadImage("summary_status","ui"),this.loadImage("summary_stats","ui"),this.loadImage("summary_stats_overlay_exp","ui"),this.loadImage("summary_moves","ui"),this.loadImage("summary_moves_effect","ui"),this.loadImage("summary_moves_overlay_row","ui"),this.loadImage("summary_moves_overlay_pp","ui"),this.loadAtlas("summary_moves_cursor","ui");for(let s=1;s<=3;s++)this.loadImage(`summary_tabs_${s}`,"ui");this.loadImage("scroll_bar","ui"),this.loadImage("scroll_bar_handle","ui"),this.loadImage("starter_container_bg","ui"),this.loadImage("starter_select_bg","ui"),this.loadImage("pokedex_summary_bg","ui"),this.loadImage("select_cursor","ui"),this.loadImage("select_cursor_highlight","ui"),this.loadImage("select_cursor_highlight_thick","ui"),this.loadImage("select_cursor_pokerus","ui"),this.loadImage("select_gen_cursor","ui"),this.loadImage("select_gen_cursor_highlight","ui"),this.loadImage("saving_icon","ui"),this.loadImage("discord","ui"),this.loadImage("google","ui"),this.loadImage("settings_icon","ui"),this.loadImage("link_icon","ui"),this.loadImage("unlink_icon","ui"),this.loadImage("default_bg","arenas"),dE(T).map(s=>{const R=T[s].toLowerCase(),n=R==="end",I=`${R}_a`,r=`${R}_b`;if(this.loadImage(`${R}_bg`,"arenas"),n?this.loadAtlas(I,"arenas"):this.loadImage(I,"arenas"),n?this.loadAtlas(r,"arenas"):this.loadImage(r,"arenas"),P7(s))for(let L=1;L<=3;L++){const N=L===3&&["power_plant","end"].find(C=>C===R),l=`${R}_b_${L}`;N?this.loadAtlas(l,"arenas"):this.loadImage(l,"arenas")}}),this.load.bitmapFont("item-count","fonts/item-count.png","fonts/item-count.xml"),this.loadAtlas("trainer_m_back","trainer"),this.loadAtlas("trainer_m_back_pb","trainer"),this.loadAtlas("trainer_f_back","trainer"),this.loadAtlas("trainer_f_back_pb","trainer"),this.loadAtlas("c_rival_m","character","rival_m"),this.loadAtlas("c_rival_f","character","rival_f"),this.loadImage("pkmn__back__sub","pokemon/back","sub.png"),this.loadImage("pkmn__sub","pokemon","sub.png"),this.loadAtlas("battle_stats","effects"),this.loadAtlas("shiny","effects"),this.loadAtlas("shiny_2","effects"),this.loadAtlas("shiny_3","effects"),this.loadImage("tera","effects"),this.loadAtlas("pb_particles","effects"),this.loadImage("evo_sparkle","effects"),this.loadAtlas("tera_sparkle","effects"),this.load.video("evo_bg","images/effects/evo_bg.mp4",!0),this.loadAtlas("pb",""),this.loadAtlas("items",""),this.loadAtlas("types","");const A=u.resolvedLanguage;if(A!=="en"?AZ(A)?(this.loadAtlas(`statuses_${A}`,""),this.loadAtlas(`types_${A}`,"")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")):(this.loadAtlas("statuses",""),this.loadAtlas("types","")),EE.activeEventHasBanner()){const s=EE.getEventBannerLangs();A&&s.includes(A)?this.loadImage(`${EE.getEventBannerFilename()}-${A}`,"events"):this.loadImage(`${EE.getEventBannerFilename()}-en`,"events")}this.loadAtlas("statuses",""),this.loadAtlas("categories",""),this.loadAtlas("egg","egg"),this.loadAtlas("egg_crack","egg"),this.loadAtlas("egg_icons","egg"),this.loadAtlas("egg_shard","egg"),this.loadAtlas("egg_lightrays","egg");for(const s of $R(bn)){const R=s.toLowerCase();this.loadImage(`gacha_${R}`,"egg"),this.loadAtlas(`gacha_underlay_${R}`,"egg")}this.loadImage("gacha_glass","egg"),this.loadImage("gacha_eggs","egg"),this.loadAtlas("gacha_hatch","egg"),this.loadImage("gacha_knob","egg"),this.loadImage("egg_list_bg","ui"),this.loadImage("egg_summary_bg","ui"),this.loadImage("end_m","cg"),this.loadImage("end_f","cg");for(let s=0;s<10;s++)this.loadAtlas(`pokemon_icons_${s}`,""),s&&this.loadAtlas(`pokemon_icons_${s}v`,"");this.loadImage("encounter_radar","mystery-encounters"),this.loadAtlas("dualshock","inputs"),this.loadAtlas("xbox","inputs"),this.loadAtlas("keyboard","inputs"),this.loadSe("select","ui"),this.loadSe("menu_open","ui"),this.loadSe("error","ui"),this.loadSe("hit"),this.loadSe("hit_strong"),this.loadSe("hit_weak"),this.loadSe("stat_up"),this.loadSe("stat_down"),this.loadSe("faint"),this.loadSe("flee"),this.loadSe("low_hp"),this.loadSe("exp"),this.loadSe("level_up"),this.loadSe("sparkle"),this.loadSe("restore"),this.loadSe("shine"),this.loadSe("shing"),this.loadSe("charge"),this.loadSe("beam"),this.loadSe("upgrade"),this.loadSe("buy"),this.loadSe("achv"),this.loadSe("pb_rel"),this.loadSe("pb_throw"),this.loadSe("pb_bounce_1"),this.loadSe("pb_bounce_2"),this.loadSe("pb_move"),this.loadSe("pb_catch"),this.loadSe("pb_lock"),this.loadSe("crit_throw"),this.loadSe("pb_tray_enter"),this.loadSe("pb_tray_ball"),this.loadSe("pb_tray_empty"),this.loadSe("egg_crack"),this.loadSe("egg_hatch"),this.loadSe("gacha_dial"),this.loadSe("gacha_running"),this.loadSe("gacha_dispense"),this.loadSe("PRSFX- Transform","battle_anims"),this.loadBgm("menu"),this.loadBgm("level_up_fanfare","bw/level_up_fanfare.mp3"),this.loadBgm("item_fanfare","bw/item_fanfare.mp3"),this.loadBgm("minor_fanfare","bw/minor_fanfare.mp3"),this.loadBgm("heal","bw/heal.mp3"),this.loadBgm("victory_trainer","bw/victory_trainer.mp3"),this.loadBgm("victory_team_plasma","bw/victory_team_plasma.mp3"),this.loadBgm("victory_gym","bw/victory_gym.mp3"),this.loadBgm("victory_champion","bw/victory_champion.mp3"),this.loadBgm("evolution","bw/evolution.mp3"),this.loadBgm("evolution_fanfare","bw/evolution_fanfare.mp3"),this.load.plugin("rextexteditplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rextexteditplugin.min.js",!0),this.loadLoadingScreen(),kZ(),r9(),OJ(),zj(),jj(),qj(),dZ(),ZZ(),jz(),Qj(),Mj(),gZ(),F$()}loadLoadingScreen(){const A=EZ(),s=[],R=this.add.image(0,0,"");R.setOrigin(0,0),R.setScale(6),R.setVisible(!1);const n=this.add.graphics();n.lineStyle(4,16711935,1).setDepth(10);const I=this.add.graphics(),r=this.add.graphics();r.lineStyle(5,16711935,1),r.fillStyle(2236962,.8);const L=this.cameras.main.width,N=this.cameras.main.height,l=L/2,C=N/2,U=this.add.image(l,240,"");U.setVisible(!1),U.setOrigin(.5,.5),U.setScale(4);const D=this.make.text({x:l,y:C-24,text:"0%",style:{font:"72px emerald",color:"#ffffff"}});D.setOrigin(.5,.5);const M=this.make.text({x:l,y:C+48,text:"",style:{font:"48px emerald",color:"#ffffff"}});M.setOrigin(.5,.5);const h=this.make.text({x:l,y:M.y+152,text:u.t("menu:disclaimer"),style:{font:"72px emerald",color:"#DA3838"}});h.setOrigin(.5,.5);const _=this.make.text({x:l,y:h.y+120,text:u.t("menu:disclaimerDescription"),style:{font:"48px emerald",color:"#ffffff",align:"center"}});_.setOrigin(.5,.5),s.push(R,n,I,r,U,D,M,h,_),A||s.map(f=>f.setVisible(!1));const d=this.add.video(0,0);d.once(Phaser.GameObjects.Events.VIDEO_COMPLETE,f=>{this.tweens.add({targets:d,duration:500,alpha:0,ease:"Sine.easeIn",onComplete:o(()=>f.destroy(),"onComplete")});for(const H of s)H.setVisible(!0)}),d.setOrigin(0,0),d.setScale(3),this.load.once(this.LOAD_EVENTS.START,()=>{var f,H;d.loadURL("images/intro_dark.mp4",!0),A&&((f=d.video)==null||f.setAttribute("webkit-playsinline","webkit-playsinline"),(H=d.video)==null||H.setAttribute("playsinline","playsinline")),d.play()}),this.load.on(this.LOAD_EVENTS.PROGRESS,f=>{D.setText(`${Math.floor(f*100)}%`),I.clear(),I.fillStyle(16777215,.8),I.fillRect(l-320,360,640*f,64)}),this.load.on(this.LOAD_EVENTS.FILE_COMPLETE,f=>{switch(M.setText(u.t("menu:loadingAsset",{assetName:f})),f){case"loading_bg":R.setTexture("loading_bg"),A&&R.setVisible(!0);break;case"logo":U.setTexture("logo"),A&&U.setVisible(!0);break}}),this.load.on(this.LOAD_EVENTS.COMPLETE,()=>{for(const f of s)f.destroy();d.destroy()})}get gameHeight(){return this.game.config.height}get gameWidth(){return this.game.config.width}async create(){this.events.once(Phaser.Scenes.Events.DESTROY,()=>this.handleDestroy()),this.scene.start("battle")}handleDestroy(){console.debug(`Destroying ${Bi.KEY} scene`),this.load.off(this.LOAD_EVENTS.PROGRESS),this.load.off(this.LOAD_EVENTS.FILE_COMPLETE),this.load.off(this.LOAD_EVENTS.COMPLETE),this.children.removeAll(!0),console.debug(`Destroyed ${Bi.KEY} scene`)}};o(Bi,"LoadingScene"),Bi.KEY="loading";let a0=Bi;const Eq=Object.freeze(Object.defineProperty({__proto__:null,LoadingScene:a0},Symbol.toStringTag,{value:"Module"}));export{Aq as b,Eq as l};
